<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210830 01:54:35.007" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:04:31.281" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:04:31.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:04:31.284" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:04:31.277" endtime="20210830 01:04:31.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:04:31.285" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:04:31.284" endtime="20210830 01:04:31.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:04:31.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:04:31.285" endtime="20210830 01:04:31.286"/>
</kw>
<status status="PASS" starttime="20210830 01:04:31.276" endtime="20210830 01:04:31.286"/>
</kw>
<msg timestamp="20210830 01:04:31.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:04:31.275" endtime="20210830 01:04:31.287"/>
</kw>
<msg timestamp="20210830 01:04:31.287" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210830 01:04:31.275" endtime="20210830 01:04:31.287"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:04:31.292" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:04:31.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:04:31.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:04:31.289" endtime="20210830 01:04:31.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:04:31.301" level="INFO"/>
<status status="PASS" starttime="20210830 01:04:31.300" endtime="20210830 01:04:31.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:04:31.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:04:31.301" endtime="20210830 01:04:31.302"/>
</kw>
<status status="PASS" starttime="20210830 01:04:31.289" endtime="20210830 01:04:31.302"/>
</kw>
<msg timestamp="20210830 01:04:31.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:04:31.288" endtime="20210830 01:04:31.302"/>
</kw>
<status status="PASS" starttime="20210830 01:04:31.288" endtime="20210830 01:04:31.303"/>
</kw>
<status status="PASS" starttime="20210830 01:04:31.287" endtime="20210830 01:04:31.303"/>
</kw>
<status status="PASS" starttime="20210830 01:04:31.274" endtime="20210830 01:04:31.303"/>
</kw>
<status status="PASS" starttime="20210830 01:04:31.273" endtime="20210830 01:04:31.303"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:04:31.307" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:04:31.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:04:31.449" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210830 01:04:31.305" endtime="20210830 01:04:31.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:04:31.451" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Mon, 30 Aug 2021 01:04:31 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC5gQRDX4iX+xTZwnj4ra/hYvzr9HobTlAGBAMubMhQEsUltdjzfT+83XEAqAB3VlnenAIKe+5XRldEqY7Mp8hMefU
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1630321471434&amp;s=CqWkpVEYkJH8wDhYTE7bL8otHDZ6zM+6e7RFmphhwW8="; Path=/; HttpOnly
Last-Modified: Mon, 30 Aug 2021 00:49:26 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210830 01:04:31.450" endtime="20210830 01:04:31.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:04:31.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:04:31.451" endtime="20210830 01:04:31.452"/>
</kw>
<status status="PASS" starttime="20210830 01:04:31.304" endtime="20210830 01:04:31.452"/>
</kw>
<msg timestamp="20210830 01:04:31.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:04:31.304" endtime="20210830 01:04:31.453"/>
</kw>
<msg timestamp="20210830 01:04:31.453" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210830 01:04:31.303" endtime="20210830 01:04:31.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:04:31.453" endtime="20210830 01:04:31.454"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210830 01:04:31.272" endtime="20210830 01:04:31.454"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:04:31.460" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:04:31.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:04:31.464" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:04:31.458" endtime="20210830 01:04:31.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:04:31.466" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:04:31.465" endtime="20210830 01:04:31.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:04:31.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:04:31.466" endtime="20210830 01:04:31.467"/>
</kw>
<status status="PASS" starttime="20210830 01:04:31.458" endtime="20210830 01:04:31.467"/>
</kw>
<msg timestamp="20210830 01:04:31.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:04:31.457" endtime="20210830 01:04:31.467"/>
</kw>
<msg timestamp="20210830 01:04:31.468" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:04:31.457" endtime="20210830 01:04:31.468"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:04:31.470" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:04:31.468" endtime="20210830 01:04:31.470"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:04:31.475" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:04:31.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:04:31.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:04:31.473" endtime="20210830 01:04:31.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:04:31.483" level="INFO"/>
<status status="PASS" starttime="20210830 01:04:31.483" endtime="20210830 01:04:31.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:04:31.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:04:31.484" endtime="20210830 01:04:31.484"/>
</kw>
<status status="PASS" starttime="20210830 01:04:31.472" endtime="20210830 01:04:31.485"/>
</kw>
<msg timestamp="20210830 01:04:31.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:04:31.472" endtime="20210830 01:04:31.485"/>
</kw>
<status status="PASS" starttime="20210830 01:04:31.471" endtime="20210830 01:04:31.485"/>
</kw>
<status status="PASS" starttime="20210830 01:04:31.470" endtime="20210830 01:04:31.485"/>
</kw>
<status status="PASS" starttime="20210830 01:04:31.456" endtime="20210830 01:04:31.486"/>
</kw>
<status status="PASS" starttime="20210830 01:04:31.456" endtime="20210830 01:04:31.486"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:04:31.490" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:09:31.456" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210830 01:04:31.488" endtime="20210830 01:09:31.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210830 01:09:31.456" endtime="20210830 01:09:31.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210830 01:09:31.457" endtime="20210830 01:09:31.457"/>
</kw>
<status status="FAIL" starttime="20210830 01:04:31.487" endtime="20210830 01:09:31.457"/>
</kw>
<msg timestamp="20210830 01:09:31.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210830 01:04:31.486" endtime="20210830 01:09:31.458"/>
</kw>
<status status="FAIL" starttime="20210830 01:04:31.486" endtime="20210830 01:09:31.458"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210830 01:09:31.458" endtime="20210830 01:09:31.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:09:31.458" endtime="20210830 01:09:31.458"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210830 01:04:31.455" endtime="20210830 01:09:31.459">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210830 01:04:31.238" endtime="20210830 01:09:31.461"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:09:31.473" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:09:34.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:09:34.488" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210830 01:09:31.470" endtime="20210830 01:09:34.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:09:34.489" level="INFO">om</msg>
<status status="PASS" starttime="20210830 01:09:34.488" endtime="20210830 01:09:34.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:09:34.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:09:34.489" endtime="20210830 01:09:34.490"/>
</kw>
<status status="PASS" starttime="20210830 01:09:31.470" endtime="20210830 01:09:34.491"/>
</kw>
<msg timestamp="20210830 01:09:34.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:09:31.469" endtime="20210830 01:09:34.491"/>
</kw>
<msg timestamp="20210830 01:09:34.491" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210830 01:09:31.468" endtime="20210830 01:09:34.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:09:34.491" endtime="20210830 01:09:34.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:09:34.497" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:09:37.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:09:37.271" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210830 01:09:34.494" endtime="20210830 01:09:37.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:09:37.272" level="INFO">om</msg>
<status status="PASS" starttime="20210830 01:09:37.271" endtime="20210830 01:09:37.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:09:37.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:09:37.272" endtime="20210830 01:09:37.273"/>
</kw>
<status status="PASS" starttime="20210830 01:09:34.493" endtime="20210830 01:09:37.273"/>
</kw>
<msg timestamp="20210830 01:09:37.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:09:34.492" endtime="20210830 01:09:37.274"/>
</kw>
<msg timestamp="20210830 01:09:37.274" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210830 01:09:34.492" endtime="20210830 01:09:37.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:09:37.274" endtime="20210830 01:09:37.275"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210830 01:09:31.467" endtime="20210830 01:09:37.275"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:09:37.280" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:09:39.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:09:39.207" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:09:37.278" endtime="20210830 01:09:39.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:09:39.209" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:09:39.208" endtime="20210830 01:09:39.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:09:39.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:09:39.209" endtime="20210830 01:09:39.210"/>
</kw>
<status status="PASS" starttime="20210830 01:09:37.277" endtime="20210830 01:09:39.212"/>
</kw>
<msg timestamp="20210830 01:09:39.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:09:37.277" endtime="20210830 01:09:39.212"/>
</kw>
<msg timestamp="20210830 01:09:39.213" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210830 01:09:37.276" endtime="20210830 01:09:39.213"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:09:39.213" endtime="20210830 01:09:39.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:09:39.219" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:09:42.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:09:42.706" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:09:39.217" endtime="20210830 01:09:42.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:09:42.708" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:09:42.707" endtime="20210830 01:09:42.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:09:42.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:09:42.708" endtime="20210830 01:09:42.709"/>
</kw>
<status status="PASS" starttime="20210830 01:09:39.216" endtime="20210830 01:09:42.709"/>
</kw>
<msg timestamp="20210830 01:09:42.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:09:39.216" endtime="20210830 01:09:42.709"/>
</kw>
<msg timestamp="20210830 01:09:42.710" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210830 01:09:39.214" endtime="20210830 01:09:42.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:09:42.710" endtime="20210830 01:09:42.711"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210830 01:09:37.275" endtime="20210830 01:09:42.712"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:09:42.721" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:09:45.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:09:45.131" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210830 01:09:42.718" endtime="20210830 01:09:45.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:09:45.132" level="INFO">om</msg>
<status status="PASS" starttime="20210830 01:09:45.131" endtime="20210830 01:09:45.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:09:45.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:09:45.132" endtime="20210830 01:09:45.133"/>
</kw>
<status status="PASS" starttime="20210830 01:09:42.717" endtime="20210830 01:09:45.133"/>
</kw>
<msg timestamp="20210830 01:09:45.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:09:42.716" endtime="20210830 01:09:45.134"/>
</kw>
<msg timestamp="20210830 01:09:45.134" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210830 01:09:42.715" endtime="20210830 01:09:45.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:09:45.134" endtime="20210830 01:09:45.134"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:09:45.135" endtime="20210830 01:09:45.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:09:45.143" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:09:46.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:09:46.603" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210830 01:09:45.139" endtime="20210830 01:09:46.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:09:46.604" level="INFO">om</msg>
<status status="PASS" starttime="20210830 01:09:46.604" endtime="20210830 01:09:46.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:09:46.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:09:46.605" endtime="20210830 01:09:46.605"/>
</kw>
<status status="PASS" starttime="20210830 01:09:45.137" endtime="20210830 01:09:46.606"/>
</kw>
<msg timestamp="20210830 01:09:46.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:09:45.136" endtime="20210830 01:09:46.606"/>
</kw>
<msg timestamp="20210830 01:09:46.606" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210830 01:09:45.136" endtime="20210830 01:09:46.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:09:46.606" endtime="20210830 01:09:46.607"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:09:46.607" endtime="20210830 01:09:46.608"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210830 01:09:42.714" endtime="20210830 01:09:46.608"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:09:46.612" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:09:48.502" level="INFO">${rc} = 255</msg>
<msg timestamp="20210830 01:09:48.503" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210830 01:09:46.610" endtime="20210830 01:09:48.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:09:48.504" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210830 01:09:48.503" endtime="20210830 01:09:48.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:09:48.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:09:48.505" endtime="20210830 01:09:48.505"/>
</kw>
<msg timestamp="20210830 01:09:48.506" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210830 01:09:46.610" endtime="20210830 01:09:48.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:09:48.506" endtime="20210830 01:09:48.507"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:09:48.510" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:09:51.482" level="INFO">${rc} = 255</msg>
<msg timestamp="20210830 01:09:51.482" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210830 01:09:48.508" endtime="20210830 01:09:51.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:09:51.483" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210830 01:09:51.482" endtime="20210830 01:09:51.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:09:51.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:09:51.484" endtime="20210830 01:09:51.484"/>
</kw>
<msg timestamp="20210830 01:09:51.485" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210830 01:09:48.507" endtime="20210830 01:09:51.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:09:51.485" endtime="20210830 01:09:51.486"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210830 01:09:46.609" endtime="20210830 01:09:51.486"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210830 01:09:31.463" endtime="20210830 01:09:51.488"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210830 01:09:51.511" level="INFO">${random} = 50217</msg>
<status status="PASS" starttime="20210830 01:09:51.510" endtime="20210830 01:09:51.511"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:09:51.513" level="INFO">${source} = 50217-source</msg>
<status status="PASS" starttime="20210830 01:09:51.512" endtime="20210830 01:09:51.513"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:09:51.515" level="INFO">${target} = 50217-target</msg>
<status status="PASS" starttime="20210830 01:09:51.514" endtime="20210830 01:09:51.515"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:09:51.520" level="INFO">Running command 'ozone sh volume create 50217-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:09:59.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:09:59.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:09:51.517" endtime="20210830 01:09:59.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:09:59.491" level="INFO"/>
<status status="PASS" starttime="20210830 01:09:59.491" endtime="20210830 01:09:59.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:09:59.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:09:59.492" endtime="20210830 01:09:59.492"/>
</kw>
<status status="PASS" starttime="20210830 01:09:51.516" endtime="20210830 01:09:59.493"/>
</kw>
<msg timestamp="20210830 01:09:59.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:09:51.516" endtime="20210830 01:09:59.493"/>
</kw>
<status status="PASS" starttime="20210830 01:09:51.515" endtime="20210830 01:09:59.493"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:09:59.498" level="INFO">Running command 'ozone sh volume create 50217-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:10:06.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:10:06.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:09:59.495" endtime="20210830 01:10:06.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:10:06.600" level="INFO"/>
<status status="PASS" starttime="20210830 01:10:06.599" endtime="20210830 01:10:06.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:10:06.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:10:06.600" endtime="20210830 01:10:06.601"/>
</kw>
<status status="PASS" starttime="20210830 01:09:59.494" endtime="20210830 01:10:06.601"/>
</kw>
<msg timestamp="20210830 01:10:06.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:09:59.494" endtime="20210830 01:10:06.602"/>
</kw>
<status status="PASS" starttime="20210830 01:09:59.493" endtime="20210830 01:10:06.602"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:10:06.608" level="INFO">Running command 'ozone sh bucket create 50217-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:10:13.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:10:13.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:10:06.605" endtime="20210830 01:10:13.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:10:13.020" level="INFO"/>
<status status="PASS" starttime="20210830 01:10:13.019" endtime="20210830 01:10:13.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:10:13.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:10:13.020" endtime="20210830 01:10:13.021"/>
</kw>
<status status="PASS" starttime="20210830 01:10:06.605" endtime="20210830 01:10:13.021"/>
</kw>
<msg timestamp="20210830 01:10:13.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:10:06.603" endtime="20210830 01:10:13.021"/>
</kw>
<status status="PASS" starttime="20210830 01:10:06.603" endtime="20210830 01:10:13.022"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:10:13.027" level="INFO">Running command 'ozone sh key put 50217-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:13:25.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:13:25.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:10:13.025" endtime="20210830 01:13:25.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:13:25.654" level="INFO"/>
<status status="PASS" starttime="20210830 01:13:25.653" endtime="20210830 01:13:25.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:13:25.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:13:25.654" endtime="20210830 01:13:25.655"/>
</kw>
<status status="PASS" starttime="20210830 01:10:13.023" endtime="20210830 01:13:25.655"/>
</kw>
<msg timestamp="20210830 01:13:25.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:10:13.022" endtime="20210830 01:13:25.655"/>
</kw>
<status status="PASS" starttime="20210830 01:10:13.022" endtime="20210830 01:13:25.655"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:13:25.661" level="INFO">Running command 'ozone sh bucket create 50217-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:13:34.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:13:34.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:13:25.658" endtime="20210830 01:13:34.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:13:34.041" level="INFO"/>
<status status="PASS" starttime="20210830 01:13:34.040" endtime="20210830 01:13:34.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:13:34.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:13:34.041" endtime="20210830 01:13:34.042"/>
</kw>
<status status="PASS" starttime="20210830 01:13:25.657" endtime="20210830 01:13:34.042"/>
</kw>
<msg timestamp="20210830 01:13:34.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:13:25.656" endtime="20210830 01:13:34.043"/>
</kw>
<status status="PASS" starttime="20210830 01:13:25.656" endtime="20210830 01:13:34.043"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:13:34.048" level="INFO">Running command 'ozone sh bucket link 50217-source/readable-bucket 50217-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:13:41.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:13:41.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:13:34.045" endtime="20210830 01:13:41.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:13:41.709" level="INFO"/>
<status status="PASS" starttime="20210830 01:13:41.708" endtime="20210830 01:13:41.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:13:41.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:13:41.709" endtime="20210830 01:13:41.710"/>
</kw>
<status status="PASS" starttime="20210830 01:13:34.044" endtime="20210830 01:13:41.711"/>
</kw>
<msg timestamp="20210830 01:13:41.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:13:34.044" endtime="20210830 01:13:41.711"/>
</kw>
<status status="PASS" starttime="20210830 01:13:34.043" endtime="20210830 01:13:41.711"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:13:41.716" level="INFO">Running command 'ozone sh bucket link 50217-source/readable-bucket 50217-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:13:48.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:13:48.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:13:41.714" endtime="20210830 01:13:48.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:13:48.955" level="INFO"/>
<status status="PASS" starttime="20210830 01:13:48.954" endtime="20210830 01:13:48.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:13:48.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:13:48.955" endtime="20210830 01:13:48.955"/>
</kw>
<status status="PASS" starttime="20210830 01:13:41.713" endtime="20210830 01:13:48.956"/>
</kw>
<msg timestamp="20210830 01:13:48.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:13:41.712" endtime="20210830 01:13:48.956"/>
</kw>
<status status="PASS" starttime="20210830 01:13:41.712" endtime="20210830 01:13:48.957"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:13:48.962" level="INFO">Running command 'ozone sh bucket link 50217-source/unreadable-bucket 50217-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:13:56.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:13:56.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:13:48.959" endtime="20210830 01:13:56.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:13:56.857" level="INFO"/>
<status status="PASS" starttime="20210830 01:13:56.856" endtime="20210830 01:13:56.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:13:56.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:13:56.857" endtime="20210830 01:13:56.858"/>
</kw>
<status status="PASS" starttime="20210830 01:13:48.958" endtime="20210830 01:13:56.858"/>
</kw>
<msg timestamp="20210830 01:13:56.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:13:48.958" endtime="20210830 01:13:56.858"/>
</kw>
<status status="PASS" starttime="20210830 01:13:48.957" endtime="20210830 01:13:56.859"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:13:56.863" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 50217-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:14:04.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:14:04.647" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:13:56.861" endtime="20210830 01:14:04.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:14:04.649" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:14:04.648" endtime="20210830 01:14:04.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:14:04.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:14:04.649" endtime="20210830 01:14:04.650"/>
</kw>
<status status="PASS" starttime="20210830 01:13:56.860" endtime="20210830 01:14:04.650"/>
</kw>
<msg timestamp="20210830 01:14:04.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:13:56.859" endtime="20210830 01:14:04.651"/>
</kw>
<status status="PASS" starttime="20210830 01:13:56.859" endtime="20210830 01:14:04.651"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:14:04.656" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 50217-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:14:12.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:14:12.771" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:14:04.653" endtime="20210830 01:14:12.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:14:12.772" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:14:12.771" endtime="20210830 01:14:12.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:14:12.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:14:12.772" endtime="20210830 01:14:12.773"/>
</kw>
<status status="PASS" starttime="20210830 01:14:04.652" endtime="20210830 01:14:12.774"/>
</kw>
<msg timestamp="20210830 01:14:12.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:14:04.652" endtime="20210830 01:14:12.774"/>
</kw>
<status status="PASS" starttime="20210830 01:14:04.651" endtime="20210830 01:14:12.774"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:14:12.779" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 50217-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:14:21.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:14:21.548" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:14:12.776" endtime="20210830 01:14:21.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:14:21.549" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:14:21.549" endtime="20210830 01:14:21.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:14:21.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:14:21.550" endtime="20210830 01:14:21.550"/>
</kw>
<status status="PASS" starttime="20210830 01:14:12.776" endtime="20210830 01:14:21.550"/>
</kw>
<msg timestamp="20210830 01:14:21.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:14:12.775" endtime="20210830 01:14:21.551"/>
</kw>
<status status="PASS" starttime="20210830 01:14:12.775" endtime="20210830 01:14:21.551"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:14:21.555" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 50217-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:14:28.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:14:28.466" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:14:21.552" endtime="20210830 01:14:28.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:14:28.468" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:14:28.467" endtime="20210830 01:14:28.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:14:28.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:14:28.468" endtime="20210830 01:14:28.469"/>
</kw>
<status status="PASS" starttime="20210830 01:14:21.552" endtime="20210830 01:14:28.469"/>
</kw>
<msg timestamp="20210830 01:14:28.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:14:21.552" endtime="20210830 01:14:28.470"/>
</kw>
<status status="PASS" starttime="20210830 01:14:21.551" endtime="20210830 01:14:28.470"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:14:28.473" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 50217-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:14:34.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:14:34.957" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:14:28.471" endtime="20210830 01:14:34.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:14:34.958" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:14:34.958" endtime="20210830 01:14:34.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:14:34.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:14:34.959" endtime="20210830 01:14:34.960"/>
</kw>
<status status="PASS" starttime="20210830 01:14:28.471" endtime="20210830 01:14:34.961"/>
</kw>
<msg timestamp="20210830 01:14:34.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:14:28.471" endtime="20210830 01:14:34.961"/>
</kw>
<status status="PASS" starttime="20210830 01:14:28.470" endtime="20210830 01:14:34.961"/>
</kw>
<status status="PASS" starttime="20210830 01:10:06.602" endtime="20210830 01:14:34.962"/>
</kw>
<status status="PASS" starttime="20210830 01:10:06.602" endtime="20210830 01:14:34.962"/>
</kw>
<status status="PASS" starttime="20210830 01:09:51.510" endtime="20210830 01:14:34.962"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:14:34.971" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:14:34.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:14:34.976" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:14:34.966" endtime="20210830 01:14:34.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:14:34.977" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:14:34.976" endtime="20210830 01:14:34.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:14:34.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:14:34.978" endtime="20210830 01:14:34.979"/>
</kw>
<status status="PASS" starttime="20210830 01:14:34.966" endtime="20210830 01:14:34.979"/>
</kw>
<msg timestamp="20210830 01:14:34.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:14:34.965" endtime="20210830 01:14:34.980"/>
</kw>
<msg timestamp="20210830 01:14:34.980" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:14:34.965" endtime="20210830 01:14:34.980"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:14:34.983" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:14:34.980" endtime="20210830 01:14:34.983"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:14:34.989" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:14:35.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:14:35.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:14:34.986" endtime="20210830 01:14:35.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:14:35.169" level="INFO"/>
<status status="PASS" starttime="20210830 01:14:35.168" endtime="20210830 01:14:35.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:14:35.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:14:35.170" endtime="20210830 01:14:35.172"/>
</kw>
<status status="PASS" starttime="20210830 01:14:34.985" endtime="20210830 01:14:35.173"/>
</kw>
<msg timestamp="20210830 01:14:35.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:14:34.985" endtime="20210830 01:14:35.173"/>
</kw>
<status status="PASS" starttime="20210830 01:14:34.984" endtime="20210830 01:14:35.174"/>
</kw>
<status status="PASS" starttime="20210830 01:14:34.983" endtime="20210830 01:14:35.174"/>
</kw>
<status status="PASS" starttime="20210830 01:14:34.964" endtime="20210830 01:14:35.174"/>
</kw>
<status status="PASS" starttime="20210830 01:14:34.963" endtime="20210830 01:14:35.174"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:14:35.179" level="INFO">Running command 'ozone sh bucket link 50217-source/no-such-bucket 50217-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:14:41.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:14:41.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:14:35.178" endtime="20210830 01:14:41.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:14:41.024" level="INFO"/>
<status status="PASS" starttime="20210830 01:14:41.023" endtime="20210830 01:14:41.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:14:41.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:14:41.024" endtime="20210830 01:14:41.032"/>
</kw>
<status status="PASS" starttime="20210830 01:14:35.177" endtime="20210830 01:14:41.032"/>
</kw>
<msg timestamp="20210830 01:14:41.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:14:35.176" endtime="20210830 01:14:41.032"/>
</kw>
<status status="PASS" starttime="20210830 01:14:35.175" endtime="20210830 01:14:41.033"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:14:41.040" level="INFO">Running command 'ozone sh key list 50217-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:14:49.199" level="INFO">${rc} = 255</msg>
<msg timestamp="20210830 01:14:49.199" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210830 01:14:41.034" endtime="20210830 01:14:49.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:14:49.200" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210830 01:14:49.200" endtime="20210830 01:14:49.201"/>
</kw>
<msg timestamp="20210830 01:14:49.201" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210830 01:14:41.034" endtime="20210830 01:14:49.201"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:14:49.201" endtime="20210830 01:14:49.202"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210830 01:14:34.962" endtime="20210830 01:14:49.202"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:14:49.214" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:14:49.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:14:49.220" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:14:49.210" endtime="20210830 01:14:49.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:14:49.223" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:14:49.221" endtime="20210830 01:14:49.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:14:49.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:14:49.223" endtime="20210830 01:14:49.224"/>
</kw>
<status status="PASS" starttime="20210830 01:14:49.209" endtime="20210830 01:14:49.225"/>
</kw>
<msg timestamp="20210830 01:14:49.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:14:49.208" endtime="20210830 01:14:49.225"/>
</kw>
<msg timestamp="20210830 01:14:49.225" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:14:49.207" endtime="20210830 01:14:49.226"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:14:49.227" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:14:49.226" endtime="20210830 01:14:49.227"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:14:49.233" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:14:49.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:14:49.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:14:49.231" endtime="20210830 01:14:49.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:14:49.246" level="INFO"/>
<status status="PASS" starttime="20210830 01:14:49.245" endtime="20210830 01:14:49.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:14:49.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:14:49.246" endtime="20210830 01:14:49.247"/>
</kw>
<status status="PASS" starttime="20210830 01:14:49.230" endtime="20210830 01:14:49.247"/>
</kw>
<msg timestamp="20210830 01:14:49.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:14:49.229" endtime="20210830 01:14:49.248"/>
</kw>
<status status="PASS" starttime="20210830 01:14:49.228" endtime="20210830 01:14:49.248"/>
</kw>
<status status="PASS" starttime="20210830 01:14:49.227" endtime="20210830 01:14:49.248"/>
</kw>
<status status="PASS" starttime="20210830 01:14:49.206" endtime="20210830 01:14:49.248"/>
</kw>
<status status="PASS" starttime="20210830 01:14:49.205" endtime="20210830 01:14:49.248"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:14:49.253" level="INFO">Running command 'ozone sh bucket link 50217-source/bucket1 50217-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:14:54.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:14:54.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:14:49.251" endtime="20210830 01:14:54.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:14:54.851" level="INFO"/>
<status status="PASS" starttime="20210830 01:14:54.850" endtime="20210830 01:14:54.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:14:54.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:14:54.852" endtime="20210830 01:14:54.854"/>
</kw>
<status status="PASS" starttime="20210830 01:14:49.250" endtime="20210830 01:14:54.854"/>
</kw>
<msg timestamp="20210830 01:14:54.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:14:49.250" endtime="20210830 01:14:54.855"/>
</kw>
<status status="PASS" starttime="20210830 01:14:49.249" endtime="20210830 01:14:54.855"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:14:54.862" level="INFO">Running command 'ozone sh bucket create 50217-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:15:02.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:15:02.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:14:54.859" endtime="20210830 01:15:02.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:15:02.943" level="INFO"/>
<status status="PASS" starttime="20210830 01:15:02.942" endtime="20210830 01:15:02.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:15:02.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:15:02.943" endtime="20210830 01:15:02.944"/>
</kw>
<status status="PASS" starttime="20210830 01:14:54.858" endtime="20210830 01:15:02.944"/>
</kw>
<msg timestamp="20210830 01:15:02.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:14:54.857" endtime="20210830 01:15:02.944"/>
</kw>
<status status="PASS" starttime="20210830 01:14:54.856" endtime="20210830 01:15:02.945"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:15:02.952" level="INFO">Running command 'ozone sh key put 50217-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:16:49.204" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210830 01:15:02.948" endtime="20210830 01:16:49.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210830 01:16:49.205" endtime="20210830 01:16:49.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210830 01:16:49.206" endtime="20210830 01:16:49.206"/>
</kw>
<status status="FAIL" starttime="20210830 01:15:02.947" endtime="20210830 01:16:49.206"/>
</kw>
<msg timestamp="20210830 01:16:49.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210830 01:15:02.946" endtime="20210830 01:16:49.207"/>
</kw>
<status status="FAIL" starttime="20210830 01:15:02.945" endtime="20210830 01:16:49.207"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210830 01:16:49.208" endtime="20210830 01:16:49.208"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210830 01:14:49.203" endtime="20210830 01:16:49.208">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:16:49.216" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:16:49.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:16:49.221" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:16:49.214" endtime="20210830 01:16:49.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:16:49.224" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:16:49.222" endtime="20210830 01:16:49.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:16:49.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:16:49.225" endtime="20210830 01:16:49.226"/>
</kw>
<status status="PASS" starttime="20210830 01:16:49.213" endtime="20210830 01:16:49.226"/>
</kw>
<msg timestamp="20210830 01:16:49.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:16:49.212" endtime="20210830 01:16:49.227"/>
</kw>
<msg timestamp="20210830 01:16:49.227" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:16:49.212" endtime="20210830 01:16:49.228"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:16:49.229" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:16:49.228" endtime="20210830 01:16:49.229"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:16:49.236" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:16:49.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:16:49.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:16:49.233" endtime="20210830 01:16:49.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:16:49.249" level="INFO"/>
<status status="PASS" starttime="20210830 01:16:49.247" endtime="20210830 01:16:49.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:16:49.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:16:49.250" endtime="20210830 01:16:49.251"/>
</kw>
<status status="PASS" starttime="20210830 01:16:49.232" endtime="20210830 01:16:49.251"/>
</kw>
<msg timestamp="20210830 01:16:49.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:16:49.232" endtime="20210830 01:16:49.252"/>
</kw>
<status status="PASS" starttime="20210830 01:16:49.230" endtime="20210830 01:16:49.252"/>
</kw>
<status status="PASS" starttime="20210830 01:16:49.230" endtime="20210830 01:16:49.252"/>
</kw>
<status status="PASS" starttime="20210830 01:16:49.211" endtime="20210830 01:16:49.252"/>
</kw>
<status status="PASS" starttime="20210830 01:16:49.211" endtime="20210830 01:16:49.252"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:16:49.256" level="INFO">Running command 'ozone sh key put 50217-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:18:49.210" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210830 01:16:49.254" endtime="20210830 01:18:49.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210830 01:18:49.211" endtime="20210830 01:18:49.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210830 01:18:49.212" endtime="20210830 01:18:49.212"/>
</kw>
<status status="FAIL" starttime="20210830 01:16:49.253" endtime="20210830 01:18:49.212"/>
</kw>
<msg timestamp="20210830 01:18:49.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210830 01:16:49.253" endtime="20210830 01:18:49.212"/>
</kw>
<status status="FAIL" starttime="20210830 01:16:49.252" endtime="20210830 01:18:49.213"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210830 01:18:49.213" endtime="20210830 01:18:49.213"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210830 01:16:49.209" endtime="20210830 01:18:49.214">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:18:49.221" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:18:49.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:18:49.226" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:18:49.218" endtime="20210830 01:18:49.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:18:49.227" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:18:49.226" endtime="20210830 01:18:49.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:18:49.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:18:49.228" endtime="20210830 01:18:49.229"/>
</kw>
<status status="PASS" starttime="20210830 01:18:49.217" endtime="20210830 01:18:49.229"/>
</kw>
<msg timestamp="20210830 01:18:49.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:18:49.217" endtime="20210830 01:18:49.230"/>
</kw>
<msg timestamp="20210830 01:18:49.230" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:18:49.217" endtime="20210830 01:18:49.230"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:18:49.231" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:18:49.230" endtime="20210830 01:18:49.231"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:18:49.237" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:18:49.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:18:49.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:18:49.234" endtime="20210830 01:18:49.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:18:49.248" level="INFO"/>
<status status="PASS" starttime="20210830 01:18:49.248" endtime="20210830 01:18:49.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:18:49.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:18:49.249" endtime="20210830 01:18:49.250"/>
</kw>
<status status="PASS" starttime="20210830 01:18:49.234" endtime="20210830 01:18:49.250"/>
</kw>
<msg timestamp="20210830 01:18:49.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:18:49.233" endtime="20210830 01:18:49.250"/>
</kw>
<status status="PASS" starttime="20210830 01:18:49.232" endtime="20210830 01:18:49.251"/>
</kw>
<status status="PASS" starttime="20210830 01:18:49.231" endtime="20210830 01:18:49.251"/>
</kw>
<status status="PASS" starttime="20210830 01:18:49.216" endtime="20210830 01:18:49.251"/>
</kw>
<status status="PASS" starttime="20210830 01:18:49.215" endtime="20210830 01:18:49.251"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:18:49.261" level="INFO">Running command 'ozone sh key list 50217-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:18:57.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:18:57.356" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210830 01:18:49.256" endtime="20210830 01:18:57.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:18:57.358" level="INFO">key1</msg>
<status status="PASS" starttime="20210830 01:18:57.357" endtime="20210830 01:18:57.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:18:57.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:18:57.358" endtime="20210830 01:18:57.359"/>
</kw>
<status status="PASS" starttime="20210830 01:18:49.253" endtime="20210830 01:18:57.359"/>
</kw>
<msg timestamp="20210830 01:18:57.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:18:49.252" endtime="20210830 01:18:57.360"/>
</kw>
<msg timestamp="20210830 01:18:57.360" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210830 01:18:49.251" endtime="20210830 01:18:57.360"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:18:57.365" level="INFO">Running command 'ozone sh key list 50217-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:05.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:05.339" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210830 01:18:57.363" endtime="20210830 01:19:05.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:05.342" level="INFO">key1</msg>
<status status="PASS" starttime="20210830 01:19:05.340" endtime="20210830 01:19:05.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:05.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:05.343" endtime="20210830 01:19:05.344"/>
</kw>
<status status="PASS" starttime="20210830 01:18:57.362" endtime="20210830 01:19:05.345"/>
</kw>
<msg timestamp="20210830 01:19:05.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:18:57.361" endtime="20210830 01:19:05.346"/>
</kw>
<msg timestamp="20210830 01:19:05.346" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210830 01:18:57.361" endtime="20210830 01:19:05.346"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:19:05.347" endtime="20210830 01:19:05.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:19:05.348" endtime="20210830 01:19:05.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210830 01:19:05.350" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210830 01:19:05.349" endtime="20210830 01:19:05.350"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210830 01:18:49.214" endtime="20210830 01:19:05.350">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:05.359" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:05.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:05.364" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:19:05.356" endtime="20210830 01:19:05.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:05.366" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:19:05.365" endtime="20210830 01:19:05.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:05.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:05.366" endtime="20210830 01:19:05.368"/>
</kw>
<status status="PASS" starttime="20210830 01:19:05.355" endtime="20210830 01:19:05.369"/>
</kw>
<msg timestamp="20210830 01:19:05.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:05.354" endtime="20210830 01:19:05.369"/>
</kw>
<msg timestamp="20210830 01:19:05.369" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:19:05.353" endtime="20210830 01:19:05.369"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:19:05.372" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:19:05.370" endtime="20210830 01:19:05.372"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:05.379" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:05.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:05.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:19:05.377" endtime="20210830 01:19:05.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:05.390" level="INFO"/>
<status status="PASS" starttime="20210830 01:19:05.389" endtime="20210830 01:19:05.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:05.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:05.390" endtime="20210830 01:19:05.392"/>
</kw>
<status status="PASS" starttime="20210830 01:19:05.375" endtime="20210830 01:19:05.392"/>
</kw>
<msg timestamp="20210830 01:19:05.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:05.374" endtime="20210830 01:19:05.392"/>
</kw>
<status status="PASS" starttime="20210830 01:19:05.373" endtime="20210830 01:19:05.392"/>
</kw>
<status status="PASS" starttime="20210830 01:19:05.372" endtime="20210830 01:19:05.393"/>
</kw>
<status status="PASS" starttime="20210830 01:19:05.353" endtime="20210830 01:19:05.393"/>
</kw>
<status status="PASS" starttime="20210830 01:19:05.352" endtime="20210830 01:19:05.393"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:05.405" level="INFO">Running command 'ozone sh key delete 50217-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:13.456" level="INFO">${rc} = 255</msg>
<msg timestamp="20210830 01:19:13.456" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210830 01:19:05.400" endtime="20210830 01:19:13.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:13.457" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210830 01:19:13.456" endtime="20210830 01:19:13.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:13.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210830 01:19:13.459" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210830 01:19:13.457" endtime="20210830 01:19:13.459"/>
</kw>
<status status="FAIL" starttime="20210830 01:19:05.399" endtime="20210830 01:19:13.460"/>
</kw>
<msg timestamp="20210830 01:19:13.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210830 01:19:05.399" endtime="20210830 01:19:13.460"/>
</kw>
<status status="FAIL" starttime="20210830 01:19:05.394" endtime="20210830 01:19:13.460"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210830 01:19:13.461" endtime="20210830 01:19:13.461"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:19:13.461" endtime="20210830 01:19:13.461"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210830 01:19:05.351" endtime="20210830 01:19:13.462">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:13.473" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:13.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:13.478" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:19:13.468" endtime="20210830 01:19:13.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:13.479" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:19:13.478" endtime="20210830 01:19:13.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:13.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:13.480" endtime="20210830 01:19:13.480"/>
</kw>
<status status="PASS" starttime="20210830 01:19:13.467" endtime="20210830 01:19:13.481"/>
</kw>
<msg timestamp="20210830 01:19:13.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:13.466" endtime="20210830 01:19:13.481"/>
</kw>
<msg timestamp="20210830 01:19:13.481" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:19:13.466" endtime="20210830 01:19:13.481"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:19:13.483" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:19:13.482" endtime="20210830 01:19:13.483"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:13.491" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:13.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:13.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:19:13.488" endtime="20210830 01:19:13.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:13.503" level="INFO"/>
<status status="PASS" starttime="20210830 01:19:13.502" endtime="20210830 01:19:13.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:13.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:13.503" endtime="20210830 01:19:13.504"/>
</kw>
<status status="PASS" starttime="20210830 01:19:13.487" endtime="20210830 01:19:13.505"/>
</kw>
<msg timestamp="20210830 01:19:13.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:13.487" endtime="20210830 01:19:13.505"/>
</kw>
<status status="PASS" starttime="20210830 01:19:13.486" endtime="20210830 01:19:13.505"/>
</kw>
<status status="PASS" starttime="20210830 01:19:13.485" endtime="20210830 01:19:13.506"/>
</kw>
<status status="PASS" starttime="20210830 01:19:13.465" endtime="20210830 01:19:13.506"/>
</kw>
<status status="PASS" starttime="20210830 01:19:13.464" endtime="20210830 01:19:13.506"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:13.510" level="INFO">Running command 'ozone sh bucket list 50217-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:21.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:21.819" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210830 01:19:13.508" endtime="20210830 01:19:21.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:21.821" level="INFO">{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:14:40.924Z",
  "modificationTime" : "2021-08-30T01:14:40.924Z",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:13:56.432Z",
  "modificationTime" : "2021-08-30T01:14:34.822Z",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:14:54.770Z",
  "modificationTime" : "2021-08-30T01:14:54.770Z",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:13:41.590Z",
  "modificationTime" : "2021-08-30T01:14:28.407Z",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:13:48.735Z",
  "modificationTime" : "2021-08-30T01:13:48.735Z",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210830 01:19:21.820" endtime="20210830 01:19:21.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:21.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:21.821" endtime="20210830 01:19:21.822"/>
</kw>
<status status="PASS" starttime="20210830 01:19:13.507" endtime="20210830 01:19:21.822"/>
</kw>
<msg timestamp="20210830 01:19:21.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:13.507" endtime="20210830 01:19:21.823"/>
</kw>
<msg timestamp="20210830 01:19:21.823" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210830 01:19:13.506" endtime="20210830 01:19:21.823"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:19:21.823" endtime="20210830 01:19:21.824"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:19:21.825" endtime="20210830 01:19:21.825"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210830 01:19:13.462" endtime="20210830 01:19:21.825"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:21.832" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:21.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:21.835" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:19:21.830" endtime="20210830 01:19:21.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:21.836" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:19:21.836" endtime="20210830 01:19:21.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:21.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:21.836" endtime="20210830 01:19:21.837"/>
</kw>
<status status="PASS" starttime="20210830 01:19:21.829" endtime="20210830 01:19:21.838"/>
</kw>
<msg timestamp="20210830 01:19:21.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:21.829" endtime="20210830 01:19:21.838"/>
</kw>
<msg timestamp="20210830 01:19:21.838" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:19:21.828" endtime="20210830 01:19:21.838"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:19:21.839" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:19:21.838" endtime="20210830 01:19:21.839"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:21.844" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:21.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:21.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:19:21.842" endtime="20210830 01:19:21.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:21.852" level="INFO"/>
<status status="PASS" starttime="20210830 01:19:21.851" endtime="20210830 01:19:21.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:21.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:21.852" endtime="20210830 01:19:21.853"/>
</kw>
<status status="PASS" starttime="20210830 01:19:21.841" endtime="20210830 01:19:21.853"/>
</kw>
<msg timestamp="20210830 01:19:21.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:21.840" endtime="20210830 01:19:21.853"/>
</kw>
<status status="PASS" starttime="20210830 01:19:21.840" endtime="20210830 01:19:21.854"/>
</kw>
<status status="PASS" starttime="20210830 01:19:21.839" endtime="20210830 01:19:21.854"/>
</kw>
<status status="PASS" starttime="20210830 01:19:21.828" endtime="20210830 01:19:21.854"/>
</kw>
<status status="PASS" starttime="20210830 01:19:21.827" endtime="20210830 01:19:21.855"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:21.859" level="INFO">Running command 'ozone sh bucket info 50217-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:28.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:28.196" level="INFO">${output} = {
  "volumeName" : "50217-target",
  "bucketName" : "link1",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-30T01:14:54.770Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210830 01:19:21.857" endtime="20210830 01:19:28.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:28.197" level="INFO">{
  "volumeName" : "50217-target",
  "bucketName" : "link1",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-30T01:14:54.770Z",
  "modificationTime" : "2021-08-30T01:14:54.770Z"
}</msg>
<status status="PASS" starttime="20210830 01:19:28.196" endtime="20210830 01:19:28.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:28.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:28.198" endtime="20210830 01:19:28.198"/>
</kw>
<status status="PASS" starttime="20210830 01:19:21.856" endtime="20210830 01:19:28.199"/>
</kw>
<msg timestamp="20210830 01:19:28.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:21.856" endtime="20210830 01:19:28.199"/>
</kw>
<msg timestamp="20210830 01:19:28.199" level="INFO">${result} = {
  "volumeName" : "50217-target",
  "bucketName" : "link1",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-30T01:14:54.770Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210830 01:19:21.855" endtime="20210830 01:19:28.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:19:28.199" endtime="20210830 01:19:28.200"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:19:28.200" endtime="20210830 01:19:28.201"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:19:28.201" endtime="20210830 01:19:28.202"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:19:28.202" endtime="20210830 01:19:28.203"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:19:28.203" endtime="20210830 01:19:28.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:19:28.204" endtime="20210830 01:19:28.205"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:19:28.205" endtime="20210830 01:19:28.205"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210830 01:19:21.826" endtime="20210830 01:19:28.206"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:28.213" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:28.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:28.218" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:19:28.211" endtime="20210830 01:19:28.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:28.220" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:19:28.219" endtime="20210830 01:19:28.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:28.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:28.220" endtime="20210830 01:19:28.221"/>
</kw>
<status status="PASS" starttime="20210830 01:19:28.210" endtime="20210830 01:19:28.222"/>
</kw>
<msg timestamp="20210830 01:19:28.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:28.209" endtime="20210830 01:19:28.222"/>
</kw>
<msg timestamp="20210830 01:19:28.223" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:19:28.209" endtime="20210830 01:19:28.223"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:19:28.223" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:19:28.223" endtime="20210830 01:19:28.224"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:28.229" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:28.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:28.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:19:28.227" endtime="20210830 01:19:28.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:28.244" level="INFO"/>
<status status="PASS" starttime="20210830 01:19:28.243" endtime="20210830 01:19:28.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:28.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:28.245" endtime="20210830 01:19:28.245"/>
</kw>
<status status="PASS" starttime="20210830 01:19:28.226" endtime="20210830 01:19:28.246"/>
</kw>
<msg timestamp="20210830 01:19:28.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:28.225" endtime="20210830 01:19:28.246"/>
</kw>
<status status="PASS" starttime="20210830 01:19:28.224" endtime="20210830 01:19:28.247"/>
</kw>
<status status="PASS" starttime="20210830 01:19:28.224" endtime="20210830 01:19:28.247"/>
</kw>
<status status="PASS" starttime="20210830 01:19:28.208" endtime="20210830 01:19:28.247"/>
</kw>
<status status="PASS" starttime="20210830 01:19:28.208" endtime="20210830 01:19:28.247"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:28.252" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 50217-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:36.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:36.327" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:19:28.249" endtime="20210830 01:19:36.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:36.328" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:19:36.328" endtime="20210830 01:19:36.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:36.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:36.329" endtime="20210830 01:19:36.329"/>
</kw>
<status status="PASS" starttime="20210830 01:19:28.249" endtime="20210830 01:19:36.330"/>
</kw>
<msg timestamp="20210830 01:19:36.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:28.248" endtime="20210830 01:19:36.330"/>
</kw>
<status status="PASS" starttime="20210830 01:19:28.248" endtime="20210830 01:19:36.330"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:36.336" level="INFO">Running command 'ozone sh bucket getacl 50217-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:43.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:43.022" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210830 01:19:36.333" endtime="20210830 01:19:43.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:43.025" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210830 01:19:43.024" endtime="20210830 01:19:43.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:43.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:43.025" endtime="20210830 01:19:43.027"/>
</kw>
<status status="PASS" starttime="20210830 01:19:36.333" endtime="20210830 01:19:43.027"/>
</kw>
<msg timestamp="20210830 01:19:43.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:36.332" endtime="20210830 01:19:43.028"/>
</kw>
<msg timestamp="20210830 01:19:43.029" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210830 01:19:36.331" endtime="20210830 01:19:43.029"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:19:43.029" endtime="20210830 01:19:43.030"/>
</kw>
<status status="PASS" starttime="20210830 01:19:36.331" endtime="20210830 01:19:43.030"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:43.039" level="INFO">Running command 'ozone sh bucket getacl 50217-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:51.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:51.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:19:43.036" endtime="20210830 01:19:51.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:51.316" level="INFO"/>
<status status="PASS" starttime="20210830 01:19:51.312" endtime="20210830 01:19:51.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:51.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:51.316" endtime="20210830 01:19:51.317"/>
</kw>
<status status="PASS" starttime="20210830 01:19:43.035" endtime="20210830 01:19:51.317"/>
</kw>
<msg timestamp="20210830 01:19:51.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:43.035" endtime="20210830 01:19:51.318"/>
</kw>
<msg timestamp="20210830 01:19:51.319" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210830 01:19:43.033" endtime="20210830 01:19:51.319"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:19:51.319" endtime="20210830 01:19:51.321"/>
</kw>
<status status="PASS" starttime="20210830 01:19:43.031" endtime="20210830 01:19:51.322"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:51.329" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 50217-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:19:59.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:19:59.950" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:19:51.326" endtime="20210830 01:19:59.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:19:59.951" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:19:59.950" endtime="20210830 01:19:59.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:19:59.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:19:59.951" endtime="20210830 01:19:59.952"/>
</kw>
<status status="PASS" starttime="20210830 01:19:51.324" endtime="20210830 01:19:59.952"/>
</kw>
<msg timestamp="20210830 01:19:59.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:51.323" endtime="20210830 01:19:59.953"/>
</kw>
<status status="PASS" starttime="20210830 01:19:51.322" endtime="20210830 01:19:59.953"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:19:59.961" level="INFO">Running command 'ozone sh bucket getacl 50217-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:08.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:08.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:19:59.958" endtime="20210830 01:20:08.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:08.082" level="INFO"/>
<status status="PASS" starttime="20210830 01:20:08.080" endtime="20210830 01:20:08.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:08.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:08.082" endtime="20210830 01:20:08.084"/>
</kw>
<status status="PASS" starttime="20210830 01:19:59.956" endtime="20210830 01:20:08.084"/>
</kw>
<msg timestamp="20210830 01:20:08.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:19:59.956" endtime="20210830 01:20:08.085"/>
</kw>
<msg timestamp="20210830 01:20:08.085" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210830 01:19:59.955" endtime="20210830 01:20:08.085"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:20:08.086" endtime="20210830 01:20:08.088"/>
</kw>
<status status="PASS" starttime="20210830 01:19:59.954" endtime="20210830 01:20:08.088"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:08.098" level="INFO">Running command 'ozone sh bucket getacl 50217-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:16.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:16.756" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210830 01:20:08.094" endtime="20210830 01:20:16.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:16.765" level="INFO">READ</msg>
<status status="PASS" starttime="20210830 01:20:16.756" endtime="20210830 01:20:16.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:16.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:16.765" endtime="20210830 01:20:16.766"/>
</kw>
<status status="PASS" starttime="20210830 01:20:08.092" endtime="20210830 01:20:16.767"/>
</kw>
<msg timestamp="20210830 01:20:16.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:08.092" endtime="20210830 01:20:16.767"/>
</kw>
<msg timestamp="20210830 01:20:16.767" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210830 01:20:08.090" endtime="20210830 01:20:16.767"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:20:16.767" endtime="20210830 01:20:16.768"/>
</kw>
<status status="PASS" starttime="20210830 01:20:08.088" endtime="20210830 01:20:16.768"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210830 01:19:28.206" endtime="20210830 01:20:16.768"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:16.776" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:16.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:16.782" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:20:16.774" endtime="20210830 01:20:16.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:16.783" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:20:16.782" endtime="20210830 01:20:16.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:16.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:16.783" endtime="20210830 01:20:16.784"/>
</kw>
<status status="PASS" starttime="20210830 01:20:16.773" endtime="20210830 01:20:16.785"/>
</kw>
<msg timestamp="20210830 01:20:16.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:16.772" endtime="20210830 01:20:16.785"/>
</kw>
<msg timestamp="20210830 01:20:16.785" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:20:16.772" endtime="20210830 01:20:16.785"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:20:16.786" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:20:16.786" endtime="20210830 01:20:16.787"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:16.793" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:16.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:16.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:20:16.789" endtime="20210830 01:20:17.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:17.001" level="INFO"/>
<status status="PASS" starttime="20210830 01:20:17.000" endtime="20210830 01:20:17.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:17.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:17.001" endtime="20210830 01:20:17.002"/>
</kw>
<status status="PASS" starttime="20210830 01:20:16.789" endtime="20210830 01:20:17.002"/>
</kw>
<msg timestamp="20210830 01:20:17.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:16.788" endtime="20210830 01:20:17.002"/>
</kw>
<status status="PASS" starttime="20210830 01:20:16.787" endtime="20210830 01:20:17.003"/>
</kw>
<status status="PASS" starttime="20210830 01:20:16.787" endtime="20210830 01:20:17.003"/>
</kw>
<status status="PASS" starttime="20210830 01:20:16.771" endtime="20210830 01:20:17.003"/>
</kw>
<status status="PASS" starttime="20210830 01:20:16.771" endtime="20210830 01:20:17.003"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:17.007" level="INFO">Running command 'ozone sh bucket link 50217-source/bucket2 50217-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:24.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:24.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:20:17.005" endtime="20210830 01:20:24.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:24.809" level="INFO"/>
<status status="PASS" starttime="20210830 01:20:24.808" endtime="20210830 01:20:24.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:24.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:24.810" endtime="20210830 01:20:24.811"/>
</kw>
<status status="PASS" starttime="20210830 01:20:17.004" endtime="20210830 01:20:24.812"/>
</kw>
<msg timestamp="20210830 01:20:24.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:17.004" endtime="20210830 01:20:24.812"/>
</kw>
<status status="PASS" starttime="20210830 01:20:17.003" endtime="20210830 01:20:24.812"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:24.816" level="INFO">Running command 'ozone sh bucket create 50217-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:32.784" level="INFO">${rc} = 255</msg>
<msg timestamp="20210830 01:20:32.784" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210830 01:20:24.813" endtime="20210830 01:20:32.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:32.787" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210830 01:20:32.785" endtime="20210830 01:20:32.787"/>
</kw>
<msg timestamp="20210830 01:20:32.788" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210830 01:20:24.812" endtime="20210830 01:20:32.788"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:20:32.789" endtime="20210830 01:20:32.790"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:32.797" level="INFO">Running command 'ozone sh bucket create 50217-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:40.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:40.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:20:32.794" endtime="20210830 01:20:40.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:40.555" level="INFO"/>
<status status="PASS" starttime="20210830 01:20:40.555" endtime="20210830 01:20:40.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:40.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:40.556" endtime="20210830 01:20:40.557"/>
</kw>
<status status="PASS" starttime="20210830 01:20:32.793" endtime="20210830 01:20:40.557"/>
</kw>
<msg timestamp="20210830 01:20:40.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:32.792" endtime="20210830 01:20:40.557"/>
</kw>
<status status="PASS" starttime="20210830 01:20:32.790" endtime="20210830 01:20:40.558"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:40.563" level="INFO">Running command 'ozone sh bucket link 50217-source/bucket1 50217-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:48.686" level="INFO">${rc} = 255</msg>
<msg timestamp="20210830 01:20:48.687" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210830 01:20:40.559" endtime="20210830 01:20:48.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:48.689" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210830 01:20:48.687" endtime="20210830 01:20:48.689"/>
</kw>
<msg timestamp="20210830 01:20:48.690" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210830 01:20:40.558" endtime="20210830 01:20:48.690"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:20:48.690" endtime="20210830 01:20:48.691"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210830 01:20:16.770" endtime="20210830 01:20:48.692"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:48.703" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:48.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:48.708" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:20:48.701" endtime="20210830 01:20:48.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:48.710" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:20:48.709" endtime="20210830 01:20:48.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:48.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:48.710" endtime="20210830 01:20:48.711"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.700" endtime="20210830 01:20:48.712"/>
</kw>
<msg timestamp="20210830 01:20:48.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:48.699" endtime="20210830 01:20:48.713"/>
</kw>
<msg timestamp="20210830 01:20:48.713" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:20:48.698" endtime="20210830 01:20:48.713"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:20:48.715" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:20:48.714" endtime="20210830 01:20:48.715"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:48.720" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:48.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:48.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:20:48.718" endtime="20210830 01:20:48.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:48.732" level="INFO"/>
<status status="PASS" starttime="20210830 01:20:48.731" endtime="20210830 01:20:48.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:48.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:48.732" endtime="20210830 01:20:48.733"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.717" endtime="20210830 01:20:48.733"/>
</kw>
<msg timestamp="20210830 01:20:48.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:48.716" endtime="20210830 01:20:48.734"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.716" endtime="20210830 01:20:48.734"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.715" endtime="20210830 01:20:48.734"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.696" endtime="20210830 01:20:48.735"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.695" endtime="20210830 01:20:48.735"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:48.740" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:48.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:48.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:20:48.738" endtime="20210830 01:20:48.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:48.747" level="INFO"/>
<status status="PASS" starttime="20210830 01:20:48.746" endtime="20210830 01:20:48.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:48.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:48.748" endtime="20210830 01:20:48.749"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.737" endtime="20210830 01:20:48.749"/>
</kw>
<msg timestamp="20210830 01:20:48.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:48.737" endtime="20210830 01:20:48.749"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.736" endtime="20210830 01:20:48.750"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:48.757" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:48.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:48.762" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:20:48.753" endtime="20210830 01:20:48.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:48.765" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:20:48.763" endtime="20210830 01:20:48.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:48.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:48.766" endtime="20210830 01:20:48.766"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.752" endtime="20210830 01:20:48.767"/>
</kw>
<msg timestamp="20210830 01:20:48.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:48.752" endtime="20210830 01:20:48.767"/>
</kw>
<msg timestamp="20210830 01:20:48.768" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:20:48.751" endtime="20210830 01:20:48.768"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:20:48.769" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:20:48.768" endtime="20210830 01:20:48.769"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:48.776" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:48.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:48.788" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:20:48.773" endtime="20210830 01:20:48.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:48.791" level="INFO"/>
<status status="PASS" starttime="20210830 01:20:48.789" endtime="20210830 01:20:48.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:48.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:48.791" endtime="20210830 01:20:48.791"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.771" endtime="20210830 01:20:48.792"/>
</kw>
<msg timestamp="20210830 01:20:48.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:48.771" endtime="20210830 01:20:48.795"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.770" endtime="20210830 01:20:48.795"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.769" endtime="20210830 01:20:48.795"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.750" endtime="20210830 01:20:48.796"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.750" endtime="20210830 01:20:48.796"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:48.799" level="INFO">Running command 'ozone sh key list 50217-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:56.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:56.143" level="INFO">${output} = {
  "volumeName" : "50217-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-30T01:10:20.415Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210830 01:20:48.797" endtime="20210830 01:20:56.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:56.144" level="INFO">{
  "volumeName" : "50217-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-30T01:10:20.415Z",
  "modificationTime" : "2021-08-30T01:13:24.160Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210830 01:20:56.144" endtime="20210830 01:20:56.145"/>
</kw>
<msg timestamp="20210830 01:20:56.145" level="INFO">${result} = {
  "volumeName" : "50217-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-30T01:10:20.415Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210830 01:20:48.796" endtime="20210830 01:20:56.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:20:56.146" endtime="20210830 01:20:56.146"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.736" endtime="20210830 01:20:56.147"/>
</kw>
<status status="PASS" starttime="20210830 01:20:48.735" endtime="20210830 01:20:56.147"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210830 01:20:48.694" endtime="20210830 01:20:56.147"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:56.158" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:56.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:56.162" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:20:56.151" endtime="20210830 01:20:56.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:56.164" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:20:56.163" endtime="20210830 01:20:56.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:56.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:56.164" endtime="20210830 01:20:56.165"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.151" endtime="20210830 01:20:56.165"/>
</kw>
<msg timestamp="20210830 01:20:56.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:56.150" endtime="20210830 01:20:56.165"/>
</kw>
<msg timestamp="20210830 01:20:56.166" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:20:56.150" endtime="20210830 01:20:56.166"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:20:56.167" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:20:56.166" endtime="20210830 01:20:56.167"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:56.172" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:56.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:56.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:20:56.170" endtime="20210830 01:20:56.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:56.181" level="INFO"/>
<status status="PASS" starttime="20210830 01:20:56.180" endtime="20210830 01:20:56.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:56.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:56.181" endtime="20210830 01:20:56.182"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.169" endtime="20210830 01:20:56.182"/>
</kw>
<msg timestamp="20210830 01:20:56.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:56.169" endtime="20210830 01:20:56.182"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.168" endtime="20210830 01:20:56.183"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.167" endtime="20210830 01:20:56.183"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.149" endtime="20210830 01:20:56.183"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.149" endtime="20210830 01:20:56.183"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:56.188" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:56.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:56.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:20:56.186" endtime="20210830 01:20:56.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:56.193" level="INFO"/>
<status status="PASS" starttime="20210830 01:20:56.192" endtime="20210830 01:20:56.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:56.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:56.193" endtime="20210830 01:20:56.194"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.186" endtime="20210830 01:20:56.194"/>
</kw>
<msg timestamp="20210830 01:20:56.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:56.185" endtime="20210830 01:20:56.195"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.185" endtime="20210830 01:20:56.195"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:56.201" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:56.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:56.204" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:20:56.199" endtime="20210830 01:20:56.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:56.206" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:20:56.205" endtime="20210830 01:20:56.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:56.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:56.206" endtime="20210830 01:20:56.207"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.198" endtime="20210830 01:20:56.207"/>
</kw>
<msg timestamp="20210830 01:20:56.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:56.198" endtime="20210830 01:20:56.207"/>
</kw>
<msg timestamp="20210830 01:20:56.208" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:20:56.197" endtime="20210830 01:20:56.208"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:20:56.208" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:20:56.208" endtime="20210830 01:20:56.208"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:56.213" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:20:56.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:20:56.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:20:56.211" endtime="20210830 01:20:56.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:20:56.221" level="INFO"/>
<status status="PASS" starttime="20210830 01:20:56.221" endtime="20210830 01:20:56.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:20:56.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:20:56.222" endtime="20210830 01:20:56.222"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.210" endtime="20210830 01:20:56.223"/>
</kw>
<msg timestamp="20210830 01:20:56.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:20:56.210" endtime="20210830 01:20:56.223"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.209" endtime="20210830 01:20:56.223"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.209" endtime="20210830 01:20:56.223"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.195" endtime="20210830 01:20:56.224"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.195" endtime="20210830 01:20:56.224"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:20:56.227" level="INFO">Running command 'ozone sh key list 50217-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:01.960" level="INFO">${rc} = 255</msg>
<msg timestamp="20210830 01:21:01.960" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 50217-target unreadable-link null</msg>
<status status="PASS" starttime="20210830 01:20:56.224" endtime="20210830 01:21:01.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:01.961" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 50217-target unreadable-link null</msg>
<status status="PASS" starttime="20210830 01:21:01.960" endtime="20210830 01:21:01.961"/>
</kw>
<msg timestamp="20210830 01:21:01.962" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 50217-target unreadable-link null</msg>
<status status="PASS" starttime="20210830 01:20:56.224" endtime="20210830 01:21:01.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:21:01.962" endtime="20210830 01:21:01.962"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.184" endtime="20210830 01:21:01.963"/>
</kw>
<status status="PASS" starttime="20210830 01:20:56.183" endtime="20210830 01:21:01.963"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210830 01:20:56.148" endtime="20210830 01:21:01.963"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:01.970" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:01.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:21:01.974" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:21:01.967" endtime="20210830 01:21:01.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:01.975" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:21:01.974" endtime="20210830 01:21:01.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:21:01.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:21:01.976" endtime="20210830 01:21:01.976"/>
</kw>
<status status="PASS" starttime="20210830 01:21:01.967" endtime="20210830 01:21:01.977"/>
</kw>
<msg timestamp="20210830 01:21:01.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:21:01.967" endtime="20210830 01:21:01.977"/>
</kw>
<msg timestamp="20210830 01:21:01.978" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:21:01.966" endtime="20210830 01:21:01.978"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:21:01.978" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:21:01.978" endtime="20210830 01:21:01.979"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:01.985" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:01.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:21:01.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:21:01.983" endtime="20210830 01:21:01.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:01.995" level="INFO"/>
<status status="PASS" starttime="20210830 01:21:01.995" endtime="20210830 01:21:01.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:21:01.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:21:01.996" endtime="20210830 01:21:01.996"/>
</kw>
<status status="PASS" starttime="20210830 01:21:01.981" endtime="20210830 01:21:01.997"/>
</kw>
<msg timestamp="20210830 01:21:01.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:21:01.980" endtime="20210830 01:21:01.997"/>
</kw>
<status status="PASS" starttime="20210830 01:21:01.979" endtime="20210830 01:21:01.997"/>
</kw>
<status status="PASS" starttime="20210830 01:21:01.979" endtime="20210830 01:21:01.997"/>
</kw>
<status status="PASS" starttime="20210830 01:21:01.965" endtime="20210830 01:21:01.997"/>
</kw>
<status status="PASS" starttime="20210830 01:21:01.965" endtime="20210830 01:21:01.998"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:02.003" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:02.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:21:02.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:21:02.000" endtime="20210830 01:21:02.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:02.008" level="INFO"/>
<status status="PASS" starttime="20210830 01:21:02.007" endtime="20210830 01:21:02.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:21:02.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:21:02.008" endtime="20210830 01:21:02.009"/>
</kw>
<status status="PASS" starttime="20210830 01:21:02.000" endtime="20210830 01:21:02.009"/>
</kw>
<msg timestamp="20210830 01:21:02.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:21:01.999" endtime="20210830 01:21:02.009"/>
</kw>
<status status="PASS" starttime="20210830 01:21:01.999" endtime="20210830 01:21:02.010"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:02.015" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:02.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:21:02.018" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:21:02.013" endtime="20210830 01:21:02.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:02.019" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:21:02.018" endtime="20210830 01:21:02.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:21:02.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:21:02.020" endtime="20210830 01:21:02.020"/>
</kw>
<status status="PASS" starttime="20210830 01:21:02.012" endtime="20210830 01:21:02.022"/>
</kw>
<msg timestamp="20210830 01:21:02.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:21:02.012" endtime="20210830 01:21:02.022"/>
</kw>
<msg timestamp="20210830 01:21:02.023" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:21:02.011" endtime="20210830 01:21:02.023"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:21:02.025" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:21:02.024" endtime="20210830 01:21:02.025"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:02.034" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:02.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:21:02.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:21:02.028" endtime="20210830 01:21:02.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:02.047" level="INFO"/>
<status status="PASS" starttime="20210830 01:21:02.046" endtime="20210830 01:21:02.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:21:02.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:21:02.047" endtime="20210830 01:21:02.048"/>
</kw>
<status status="PASS" starttime="20210830 01:21:02.027" endtime="20210830 01:21:02.049"/>
</kw>
<msg timestamp="20210830 01:21:02.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:21:02.027" endtime="20210830 01:21:02.049"/>
</kw>
<status status="PASS" starttime="20210830 01:21:02.026" endtime="20210830 01:21:02.050"/>
</kw>
<status status="PASS" starttime="20210830 01:21:02.025" endtime="20210830 01:21:02.050"/>
</kw>
<status status="PASS" starttime="20210830 01:21:02.010" endtime="20210830 01:21:02.050"/>
</kw>
<status status="PASS" starttime="20210830 01:21:02.010" endtime="20210830 01:21:02.050"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:02.057" level="INFO">Running command 'ozone sh bucket info 50217-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:09.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:21:09.620" level="INFO">${output} = {
  "volumeName" : "50217-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-30T01:13:56.432Z...</msg>
<status status="PASS" starttime="20210830 01:21:02.053" endtime="20210830 01:21:09.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:09.621" level="INFO">{
  "volumeName" : "50217-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-30T01:13:56.432Z",
  "modificationTime" : "2021-08-30T01:14:34.822Z"
}</msg>
<status status="PASS" starttime="20210830 01:21:09.620" endtime="20210830 01:21:09.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:21:09.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:21:09.621" endtime="20210830 01:21:09.622"/>
</kw>
<status status="PASS" starttime="20210830 01:21:02.052" endtime="20210830 01:21:09.622"/>
</kw>
<msg timestamp="20210830 01:21:09.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:21:02.052" endtime="20210830 01:21:09.622"/>
</kw>
<msg timestamp="20210830 01:21:09.623" level="INFO">${result} = {
  "volumeName" : "50217-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-30T01:13:56.432Z...</msg>
<status status="PASS" starttime="20210830 01:21:02.051" endtime="20210830 01:21:09.623"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:21:09.623" endtime="20210830 01:21:09.623"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:21:09.624" endtime="20210830 01:21:09.624"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:09.627" level="INFO">Running command 'ozone sh key list 50217-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:16.691" level="INFO">${rc} = 255</msg>
<msg timestamp="20210830 01:21:16.691" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 50217-source unreadable-bucket </msg>
<status status="PASS" starttime="20210830 01:21:09.625" endtime="20210830 01:21:16.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:16.692" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 50217-source unreadable-bucket </msg>
<status status="PASS" starttime="20210830 01:21:16.691" endtime="20210830 01:21:16.692"/>
</kw>
<msg timestamp="20210830 01:21:16.693" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 50217-source unreadable-bucket </msg>
<status status="PASS" starttime="20210830 01:21:09.624" endtime="20210830 01:21:16.693"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:21:16.694" endtime="20210830 01:21:16.695"/>
</kw>
<status status="PASS" starttime="20210830 01:21:01.998" endtime="20210830 01:21:16.695"/>
</kw>
<status status="PASS" starttime="20210830 01:21:01.998" endtime="20210830 01:21:16.695"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210830 01:21:01.964" endtime="20210830 01:21:16.695"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:16.703" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:16.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:21:16.708" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:21:16.701" endtime="20210830 01:21:16.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:16.710" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:21:16.709" endtime="20210830 01:21:16.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:21:16.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:21:16.710" endtime="20210830 01:21:16.711"/>
</kw>
<status status="PASS" starttime="20210830 01:21:16.700" endtime="20210830 01:21:16.711"/>
</kw>
<msg timestamp="20210830 01:21:16.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:21:16.699" endtime="20210830 01:21:16.712"/>
</kw>
<msg timestamp="20210830 01:21:16.712" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:21:16.699" endtime="20210830 01:21:16.712"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:21:16.713" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:21:16.712" endtime="20210830 01:21:16.713"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:16.718" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:16.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:21:16.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:21:16.716" endtime="20210830 01:21:16.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:16.730" level="INFO"/>
<status status="PASS" starttime="20210830 01:21:16.730" endtime="20210830 01:21:16.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:21:16.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:21:16.731" endtime="20210830 01:21:16.731"/>
</kw>
<status status="PASS" starttime="20210830 01:21:16.715" endtime="20210830 01:21:16.732"/>
</kw>
<msg timestamp="20210830 01:21:16.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:21:16.715" endtime="20210830 01:21:16.732"/>
</kw>
<status status="PASS" starttime="20210830 01:21:16.714" endtime="20210830 01:21:16.732"/>
</kw>
<status status="PASS" starttime="20210830 01:21:16.713" endtime="20210830 01:21:16.732"/>
</kw>
<status status="PASS" starttime="20210830 01:21:16.698" endtime="20210830 01:21:16.732"/>
</kw>
<status status="PASS" starttime="20210830 01:21:16.697" endtime="20210830 01:21:16.733"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:16.737" level="INFO">Running command 'ozone sh bucket link 50217-target/loop1 50217-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:24.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:21:24.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:21:16.735" endtime="20210830 01:21:24.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:24.245" level="INFO"/>
<status status="PASS" starttime="20210830 01:21:24.244" endtime="20210830 01:21:24.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:21:24.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:21:24.245" endtime="20210830 01:21:24.246"/>
</kw>
<status status="PASS" starttime="20210830 01:21:16.734" endtime="20210830 01:21:24.247"/>
</kw>
<msg timestamp="20210830 01:21:24.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:21:16.734" endtime="20210830 01:21:24.247"/>
</kw>
<status status="PASS" starttime="20210830 01:21:16.733" endtime="20210830 01:21:24.247"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:24.251" level="INFO">Running command 'ozone sh bucket link 50217-target/loop2 50217-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:30.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:21:30.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:21:24.249" endtime="20210830 01:21:30.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:30.398" level="INFO"/>
<status status="PASS" starttime="20210830 01:21:30.396" endtime="20210830 01:21:30.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:21:30.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:21:30.398" endtime="20210830 01:21:30.399"/>
</kw>
<status status="PASS" starttime="20210830 01:21:24.248" endtime="20210830 01:21:30.399"/>
</kw>
<msg timestamp="20210830 01:21:30.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:21:24.248" endtime="20210830 01:21:30.399"/>
</kw>
<status status="PASS" starttime="20210830 01:21:24.247" endtime="20210830 01:21:30.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:30.406" level="INFO">Running command 'ozone sh bucket link 50217-target/loop3 50217-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:36.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:21:36.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:21:30.401" endtime="20210830 01:21:36.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:36.198" level="INFO"/>
<status status="PASS" starttime="20210830 01:21:36.197" endtime="20210830 01:21:36.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:21:36.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:21:36.198" endtime="20210830 01:21:36.200"/>
</kw>
<status status="PASS" starttime="20210830 01:21:30.401" endtime="20210830 01:21:36.201"/>
</kw>
<msg timestamp="20210830 01:21:36.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:21:30.400" endtime="20210830 01:21:36.202"/>
</kw>
<status status="PASS" starttime="20210830 01:21:30.400" endtime="20210830 01:21:36.203"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:36.208" level="INFO">Running command 'ozone sh key list 50217-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:43.826" level="INFO">${rc} = 255</msg>
<msg timestamp="20210830 01:21:43.826" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210830 01:21:36.204" endtime="20210830 01:21:43.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:43.827" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210830 01:21:43.827" endtime="20210830 01:21:43.827"/>
</kw>
<msg timestamp="20210830 01:21:43.828" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210830 01:21:36.203" endtime="20210830 01:21:43.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:21:43.828" endtime="20210830 01:21:43.830"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210830 01:21:16.696" endtime="20210830 01:21:43.830"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:43.842" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:43.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:21:43.847" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:21:43.838" endtime="20210830 01:21:43.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:43.851" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:21:43.848" endtime="20210830 01:21:43.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:21:43.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:21:43.851" endtime="20210830 01:21:43.852"/>
</kw>
<status status="PASS" starttime="20210830 01:21:43.837" endtime="20210830 01:21:43.853"/>
</kw>
<msg timestamp="20210830 01:21:43.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:21:43.836" endtime="20210830 01:21:43.854"/>
</kw>
<msg timestamp="20210830 01:21:43.855" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:21:43.835" endtime="20210830 01:21:43.855"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:21:43.857" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:21:43.855" endtime="20210830 01:21:43.857"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:43.865" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:43.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:21:43.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:21:43.862" endtime="20210830 01:21:43.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:43.897" level="INFO"/>
<status status="PASS" starttime="20210830 01:21:43.895" endtime="20210830 01:21:43.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:21:43.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:21:43.897" endtime="20210830 01:21:43.898"/>
</kw>
<status status="PASS" starttime="20210830 01:21:43.861" endtime="20210830 01:21:43.898"/>
</kw>
<msg timestamp="20210830 01:21:43.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:21:43.860" endtime="20210830 01:21:43.898"/>
</kw>
<status status="PASS" starttime="20210830 01:21:43.859" endtime="20210830 01:21:43.899"/>
</kw>
<status status="PASS" starttime="20210830 01:21:43.857" endtime="20210830 01:21:43.899"/>
</kw>
<status status="PASS" starttime="20210830 01:21:43.834" endtime="20210830 01:21:43.900"/>
</kw>
<status status="PASS" starttime="20210830 01:21:43.833" endtime="20210830 01:21:43.900"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:43.906" level="INFO">Running command 'ozone sh bucket link 50217-source/bucket1 50217-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:21:49.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:21:49.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:21:43.904" endtime="20210830 01:21:49.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:21:49.787" level="INFO"/>
<status status="PASS" starttime="20210830 01:21:49.787" endtime="20210830 01:21:49.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:21:49.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:21:49.788" endtime="20210830 01:21:49.788"/>
</kw>
<status status="PASS" starttime="20210830 01:21:43.902" endtime="20210830 01:21:49.789"/>
</kw>
<msg timestamp="20210830 01:21:49.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:21:43.902" endtime="20210830 01:21:49.789"/>
</kw>
<status status="PASS" starttime="20210830 01:21:43.900" endtime="20210830 01:21:49.789"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:21:49.793" level="INFO">Running command 'ozone sh key put 50217-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:23:43.832" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210830 01:21:49.791" endtime="20210830 01:23:43.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210830 01:23:43.833" endtime="20210830 01:23:43.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210830 01:23:43.833" endtime="20210830 01:23:43.833"/>
</kw>
<status status="FAIL" starttime="20210830 01:21:49.791" endtime="20210830 01:23:43.834"/>
</kw>
<msg timestamp="20210830 01:23:43.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210830 01:21:49.790" endtime="20210830 01:23:43.834"/>
</kw>
<status status="FAIL" starttime="20210830 01:21:49.789" endtime="20210830 01:23:43.834"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210830 01:23:43.835" endtime="20210830 01:23:43.835"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210830 01:21:43.832" endtime="20210830 01:23:43.835">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:23:43.843" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:23:43.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:23:43.847" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:23:43.840" endtime="20210830 01:23:43.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:23:43.850" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:23:43.849" endtime="20210830 01:23:43.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:23:43.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:23:43.850" endtime="20210830 01:23:43.851"/>
</kw>
<status status="PASS" starttime="20210830 01:23:43.839" endtime="20210830 01:23:43.852"/>
</kw>
<msg timestamp="20210830 01:23:43.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:23:43.839" endtime="20210830 01:23:43.855"/>
</kw>
<msg timestamp="20210830 01:23:43.856" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:23:43.839" endtime="20210830 01:23:43.856"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:23:43.857" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:23:43.856" endtime="20210830 01:23:43.857"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:23:43.864" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:23:43.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:23:43.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:23:43.861" endtime="20210830 01:23:43.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:23:43.875" level="INFO"/>
<status status="PASS" starttime="20210830 01:23:43.874" endtime="20210830 01:23:43.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:23:43.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:23:43.876" endtime="20210830 01:23:43.876"/>
</kw>
<status status="PASS" starttime="20210830 01:23:43.860" endtime="20210830 01:23:43.877"/>
</kw>
<msg timestamp="20210830 01:23:43.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:23:43.859" endtime="20210830 01:23:43.877"/>
</kw>
<status status="PASS" starttime="20210830 01:23:43.858" endtime="20210830 01:23:43.878"/>
</kw>
<status status="PASS" starttime="20210830 01:23:43.858" endtime="20210830 01:23:43.878"/>
</kw>
<status status="PASS" starttime="20210830 01:23:43.838" endtime="20210830 01:23:43.878"/>
</kw>
<status status="PASS" starttime="20210830 01:23:43.837" endtime="20210830 01:23:43.878"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:23:43.891" level="INFO">Running command 'ozone sh bucket delete 50217-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:23:51.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:23:51.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:23:43.881" endtime="20210830 01:23:51.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:23:51.687" level="INFO"/>
<status status="PASS" starttime="20210830 01:23:51.687" endtime="20210830 01:23:51.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:23:51.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:23:51.688" endtime="20210830 01:23:51.688"/>
</kw>
<status status="PASS" starttime="20210830 01:23:43.879" endtime="20210830 01:23:51.689"/>
</kw>
<msg timestamp="20210830 01:23:51.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:23:43.879" endtime="20210830 01:23:51.689"/>
</kw>
<status status="PASS" starttime="20210830 01:23:43.878" endtime="20210830 01:23:51.689"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:23:51.693" level="INFO">Running command 'ozone sh bucket list 50217-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:23:58.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:23:58.326" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T...</msg>
<status status="PASS" starttime="20210830 01:23:51.691" endtime="20210830 01:23:58.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:23:58.329" level="INFO">{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:20:40.255Z",
  "modificationTime" : "2021-08-30T01:20:40.255Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:14:40.924Z",
  "modificationTime" : "2021-08-30T01:14:40.924Z",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:13:56.432Z",
  "modificationTime" : "2021-08-30T01:14:34.822Z",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:20:24.671Z",
  "modificationTime" : "2021-08-30T01:20:24.671Z",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:21:49.691Z",
  "modificationTime" : "2021-08-30T01:21:49.691Z",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:21:36.008Z",
  "modificationTime" : "2021-08-30T01:21:36.008Z",
  "sourceVolume" : "50217-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:21:24.075Z",
  "modificationTime" : "2021-08-30T01:21:24.075Z",
  "sourceVolume" : "50217-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:21:30.316Z",
  "modificationTime" : "2021-08-30T01:21:30.316Z",
  "sourceVolume" : "50217-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:13:41.590Z",
  "modificationTime" : "2021-08-30T01:14:28.407Z",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T01:13:48.735Z",
  "modificationTime" : "2021-08-30T01:13:48.735Z",
  "sourceVolume" : "50217-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210830 01:23:58.327" endtime="20210830 01:23:58.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:23:58.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:23:58.329" endtime="20210830 01:23:58.337"/>
</kw>
<status status="PASS" starttime="20210830 01:23:51.690" endtime="20210830 01:23:58.338"/>
</kw>
<msg timestamp="20210830 01:23:58.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:23:51.690" endtime="20210830 01:23:58.338"/>
</kw>
<msg timestamp="20210830 01:23:58.338" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "50217-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-30T...</msg>
<status status="PASS" starttime="20210830 01:23:51.689" endtime="20210830 01:23:58.338"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:23:58.339" endtime="20210830 01:23:58.339"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:23:58.344" level="INFO">Running command 'ozone sh key list 50217-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:24:05.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:24:05.774" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210830 01:23:58.341" endtime="20210830 01:24:05.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:24:05.776" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210830 01:24:05.775" endtime="20210830 01:24:05.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:24:05.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:24:05.776" endtime="20210830 01:24:05.776"/>
</kw>
<status status="PASS" starttime="20210830 01:23:58.341" endtime="20210830 01:24:05.777"/>
</kw>
<msg timestamp="20210830 01:24:05.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:23:58.340" endtime="20210830 01:24:05.777"/>
</kw>
<msg timestamp="20210830 01:24:05.777" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210830 01:23:58.339" endtime="20210830 01:24:05.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:24:05.778" endtime="20210830 01:24:05.778"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210830 01:23:43.836" endtime="20210830 01:24:05.778"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210830 01:09:51.491" endtime="20210830 01:24:05.780"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210830 01:24:05.809" level="INFO">${random} = 96857</msg>
<status status="PASS" starttime="20210830 01:24:05.809" endtime="20210830 01:24:05.809"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:24:05.810" level="INFO">${prefix} = 96857</msg>
<status status="PASS" starttime="20210830 01:24:05.810" endtime="20210830 01:24:05.810"/>
</kw>
<status status="PASS" starttime="20210830 01:24:05.808" endtime="20210830 01:24:05.810"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:24:05.816" level="INFO">Running command 'ozone sh volume info /96857-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:24:12.053" level="INFO">${rc} = 255</msg>
<msg timestamp="20210830 01:24:12.053" level="INFO">${output} = VOLUME_NOT_FOUND Volume 96857-rpcbasic is not found</msg>
<status status="PASS" starttime="20210830 01:24:05.814" endtime="20210830 01:24:12.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:24:12.055" level="INFO">VOLUME_NOT_FOUND Volume 96857-rpcbasic is not found</msg>
<status status="PASS" starttime="20210830 01:24:12.054" endtime="20210830 01:24:12.055"/>
</kw>
<msg timestamp="20210830 01:24:12.055" level="INFO">${result} = VOLUME_NOT_FOUND Volume 96857-rpcbasic is not found</msg>
<status status="PASS" starttime="20210830 01:24:05.813" endtime="20210830 01:24:12.055"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:24:12.056" endtime="20210830 01:24:12.056"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:24:12.061" level="INFO">Running command 'ozone sh volume create /96857-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:24:20.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:24:20.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:24:12.058" endtime="20210830 01:24:20.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:24:20.273" level="INFO"/>
<status status="PASS" starttime="20210830 01:24:20.271" endtime="20210830 01:24:20.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:24:20.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:24:20.273" endtime="20210830 01:24:20.275"/>
</kw>
<status status="PASS" starttime="20210830 01:24:12.057" endtime="20210830 01:24:20.275"/>
</kw>
<msg timestamp="20210830 01:24:20.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:24:12.057" endtime="20210830 01:24:20.276"/>
</kw>
<msg timestamp="20210830 01:24:20.276" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210830 01:24:12.056" endtime="20210830 01:24:20.277"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:24:20.277" endtime="20210830 01:24:20.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:24:20.284" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="96857-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:24:28.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:24:28.752" level="INFO">${output} = {
  "metadata": {},
  "name": "96857-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210830 01:24:20.280" endtime="20210830 01:24:28.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:24:28.754" level="INFO">{
  "metadata": {},
  "name": "96857-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-30T01:24:20.102Z",
  "modificationTime": "2021-08-30T01:24:20.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210830 01:24:28.753" endtime="20210830 01:24:28.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:24:28.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:24:28.754" endtime="20210830 01:24:28.755"/>
</kw>
<status status="PASS" starttime="20210830 01:24:20.280" endtime="20210830 01:24:28.755"/>
</kw>
<msg timestamp="20210830 01:24:28.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:24:20.279" endtime="20210830 01:24:28.756"/>
</kw>
<msg timestamp="20210830 01:24:28.756" level="INFO">${result} = {
  "metadata": {},
  "name": "96857-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210830 01:24:20.278" endtime="20210830 01:24:28.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:24:28.756" endtime="20210830 01:24:28.757"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:24:28.763" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="96857-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:24:36.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:24:36.451" level="INFO">${output} = {
  "metadata": {},
  "name": "96857-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210830 01:24:28.760" endtime="20210830 01:24:36.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:24:36.453" level="INFO">{
  "metadata": {},
  "name": "96857-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-30T01:24:20.102Z",
  "modificationTime": "2021-08-30T01:24:20.102Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210830 01:24:36.452" endtime="20210830 01:24:36.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:24:36.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:24:36.453" endtime="20210830 01:24:36.454"/>
</kw>
<status status="PASS" starttime="20210830 01:24:28.759" endtime="20210830 01:24:36.454"/>
</kw>
<msg timestamp="20210830 01:24:36.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:24:28.759" endtime="20210830 01:24:36.454"/>
</kw>
<msg timestamp="20210830 01:24:36.455" level="INFO">${result} = {
  "metadata": {},
  "name": "96857-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210830 01:24:28.758" endtime="20210830 01:24:36.455"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:24:36.455" endtime="20210830 01:24:36.455"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:24:36.459" level="INFO">Running command 'ozone sh volume setquota /96857-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:24:44.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:24:44.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:24:36.457" endtime="20210830 01:24:44.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:24:44.205" level="INFO"/>
<status status="PASS" starttime="20210830 01:24:44.204" endtime="20210830 01:24:44.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:24:44.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:24:44.206" endtime="20210830 01:24:44.206"/>
</kw>
<status status="PASS" starttime="20210830 01:24:36.457" endtime="20210830 01:24:44.207"/>
</kw>
<msg timestamp="20210830 01:24:44.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:24:36.456" endtime="20210830 01:24:44.207"/>
</kw>
<status status="PASS" starttime="20210830 01:24:36.455" endtime="20210830 01:24:44.207"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:24:44.214" level="INFO">Running command 'ozone sh volume info /96857-rpcbasic | jq -r '. | select(.name=="96857-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:24:52.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:24:52.444" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:24:44.210" endtime="20210830 01:24:52.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:24:52.446" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210830 01:24:52.445" endtime="20210830 01:24:52.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:24:52.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:24:52.446" endtime="20210830 01:24:52.447"/>
</kw>
<status status="PASS" starttime="20210830 01:24:44.209" endtime="20210830 01:24:52.447"/>
</kw>
<msg timestamp="20210830 01:24:52.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:24:44.209" endtime="20210830 01:24:52.447"/>
</kw>
<msg timestamp="20210830 01:24:52.448" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:24:44.207" endtime="20210830 01:24:52.448"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:24:52.449" endtime="20210830 01:24:52.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:24:52.453" level="INFO">Running command 'ozone sh bucket create /96857-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:24:59.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:24:59.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:24:52.451" endtime="20210830 01:24:59.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:24:59.245" level="INFO"/>
<status status="PASS" starttime="20210830 01:24:59.244" endtime="20210830 01:24:59.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:24:59.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:24:59.246" endtime="20210830 01:24:59.247"/>
</kw>
<status status="PASS" starttime="20210830 01:24:52.450" endtime="20210830 01:24:59.247"/>
</kw>
<msg timestamp="20210830 01:24:59.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:24:52.450" endtime="20210830 01:24:59.248"/>
</kw>
<status status="PASS" starttime="20210830 01:24:52.449" endtime="20210830 01:24:59.248"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:24:59.256" level="INFO">Running command 'ozone sh bucket info /96857-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:25:07.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:25:07.323" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210830 01:24:59.253" endtime="20210830 01:25:07.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:25:07.324" level="INFO">DISK</msg>
<status status="PASS" starttime="20210830 01:25:07.324" endtime="20210830 01:25:07.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:25:07.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:25:07.325" endtime="20210830 01:25:07.325"/>
</kw>
<status status="PASS" starttime="20210830 01:24:59.252" endtime="20210830 01:25:07.326"/>
</kw>
<msg timestamp="20210830 01:25:07.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:24:59.251" endtime="20210830 01:25:07.326"/>
</kw>
<msg timestamp="20210830 01:25:07.326" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210830 01:24:59.249" endtime="20210830 01:25:07.326"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:25:07.327" endtime="20210830 01:25:07.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:25:07.336" level="INFO">Running command 'ozone sh bucket info /96857-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:25:15.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:25:15.670" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:25:07.334" endtime="20210830 01:25:15.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:25:15.672" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210830 01:25:15.671" endtime="20210830 01:25:15.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:25:15.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:25:15.673" endtime="20210830 01:25:15.674"/>
</kw>
<status status="PASS" starttime="20210830 01:25:07.333" endtime="20210830 01:25:15.675"/>
</kw>
<msg timestamp="20210830 01:25:15.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:25:07.331" endtime="20210830 01:25:15.675"/>
</kw>
<msg timestamp="20210830 01:25:15.676" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:25:07.328" endtime="20210830 01:25:15.676"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:25:15.676" endtime="20210830 01:25:15.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:25:15.684" level="INFO">Running command 'ozone sh bucket info /96857-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:25:23.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:25:23.540" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210830 01:25:15.681" endtime="20210830 01:25:23.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:25:23.543" level="INFO">100</msg>
<status status="PASS" starttime="20210830 01:25:23.541" endtime="20210830 01:25:23.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:25:23.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:25:23.544" endtime="20210830 01:25:23.544"/>
</kw>
<status status="PASS" starttime="20210830 01:25:15.679" endtime="20210830 01:25:23.545"/>
</kw>
<msg timestamp="20210830 01:25:23.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:25:15.679" endtime="20210830 01:25:23.545"/>
</kw>
<msg timestamp="20210830 01:25:23.545" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210830 01:25:15.677" endtime="20210830 01:25:23.545"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:25:23.546" endtime="20210830 01:25:23.546"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:25:23.551" level="INFO">Running command 'ozone sh bucket setquota /96857-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:25:31.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:25:31.805" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:25:23.548" endtime="20210830 01:25:31.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:25:31.807" level="INFO"/>
<status status="PASS" starttime="20210830 01:25:31.806" endtime="20210830 01:25:31.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:25:31.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:25:31.808" endtime="20210830 01:25:31.812"/>
</kw>
<status status="PASS" starttime="20210830 01:25:23.548" endtime="20210830 01:25:31.818"/>
</kw>
<msg timestamp="20210830 01:25:31.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:25:23.547" endtime="20210830 01:25:31.818"/>
</kw>
<status status="PASS" starttime="20210830 01:25:23.546" endtime="20210830 01:25:31.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:25:31.825" level="INFO">Running command 'ozone sh bucket info /96857-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:25:39.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:25:39.988" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210830 01:25:31.821" endtime="20210830 01:25:39.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:25:39.990" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210830 01:25:39.989" endtime="20210830 01:25:39.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:25:39.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:25:39.991" endtime="20210830 01:25:39.992"/>
</kw>
<status status="PASS" starttime="20210830 01:25:31.820" endtime="20210830 01:25:39.993"/>
</kw>
<msg timestamp="20210830 01:25:39.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:25:31.820" endtime="20210830 01:25:39.993"/>
</kw>
<msg timestamp="20210830 01:25:39.994" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210830 01:25:31.818" endtime="20210830 01:25:39.994"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:25:39.994" endtime="20210830 01:25:39.995"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:25:40.004" level="INFO">Running command 'ozone sh bucket info /96857-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:25:47.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:25:47.994" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210830 01:25:40.000" endtime="20210830 01:25:47.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:25:47.995" level="INFO">1000</msg>
<status status="PASS" starttime="20210830 01:25:47.995" endtime="20210830 01:25:47.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:25:47.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:25:47.996" endtime="20210830 01:25:47.996"/>
</kw>
<status status="PASS" starttime="20210830 01:25:39.999" endtime="20210830 01:25:47.997"/>
</kw>
<msg timestamp="20210830 01:25:47.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:25:39.999" endtime="20210830 01:25:47.997"/>
</kw>
<msg timestamp="20210830 01:25:47.997" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210830 01:25:39.996" endtime="20210830 01:25:47.997"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:25:47.998" endtime="20210830 01:25:47.998"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:25:48.003" level="INFO">Running command 'ozone sh bucket list /96857-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:25:56.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:25:56.159" level="INFO">${output} = 96857-rpcbasic</msg>
<status status="PASS" starttime="20210830 01:25:48.000" endtime="20210830 01:25:56.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:25:56.160" level="INFO">96857-rpcbasic</msg>
<status status="PASS" starttime="20210830 01:25:56.159" endtime="20210830 01:25:56.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:25:56.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:25:56.160" endtime="20210830 01:25:56.161"/>
</kw>
<status status="PASS" starttime="20210830 01:25:48.000" endtime="20210830 01:25:56.161"/>
</kw>
<msg timestamp="20210830 01:25:56.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:25:47.999" endtime="20210830 01:25:56.162"/>
</kw>
<msg timestamp="20210830 01:25:56.162" level="INFO">${result} = 96857-rpcbasic</msg>
<status status="PASS" starttime="20210830 01:25:47.998" endtime="20210830 01:25:56.162"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:25:56.162" endtime="20210830 01:25:56.163"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:25:56.175" level="INFO">Running command 'ozone sh key put /96857-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:29:05.811" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210830 01:25:56.171" endtime="20210830 01:29:05.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.812" endtime="20210830 01:29:05.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.812" endtime="20210830 01:29:05.812"/>
</kw>
<status status="FAIL" starttime="20210830 01:25:56.169" endtime="20210830 01:29:05.812"/>
</kw>
<msg timestamp="20210830 01:29:05.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210830 01:25:56.168" endtime="20210830 01:29:05.813"/>
</kw>
<status status="FAIL" starttime="20210830 01:25:56.164" endtime="20210830 01:29:05.813"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.813" endtime="20210830 01:29:05.813"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.813" endtime="20210830 01:29:05.813"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.814" endtime="20210830 01:29:05.814"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.814" endtime="20210830 01:29:05.814"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.814" endtime="20210830 01:29:05.814"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.814" endtime="20210830 01:29:05.814"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.815" endtime="20210830 01:29:05.815"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.815" endtime="20210830 01:29:05.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.815" endtime="20210830 01:29:05.815"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.815" endtime="20210830 01:29:05.815"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.815" endtime="20210830 01:29:05.815"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.816" endtime="20210830 01:29:05.816"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.816" endtime="20210830 01:29:05.816"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.816" endtime="20210830 01:29:05.816"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.816" endtime="20210830 01:29:05.816"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.816" endtime="20210830 01:29:05.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.817" endtime="20210830 01:29:05.817"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.817" endtime="20210830 01:29:05.817"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.817" endtime="20210830 01:29:05.817"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.817" endtime="20210830 01:29:05.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.817" endtime="20210830 01:29:05.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.818" endtime="20210830 01:29:05.818"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.818" endtime="20210830 01:29:05.818"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.818" endtime="20210830 01:29:05.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.819" endtime="20210830 01:29:05.819"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.819" endtime="20210830 01:29:05.820"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.820" endtime="20210830 01:29:05.820"/>
</kw>
<status status="FAIL" starttime="20210830 01:25:56.163" endtime="20210830 01:29:05.820"/>
</kw>
<status status="FAIL" starttime="20210830 01:25:56.163" endtime="20210830 01:29:05.820"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.820" endtime="20210830 01:29:05.820"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.821" endtime="20210830 01:29:05.821"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.821" endtime="20210830 01:29:05.821"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.821" endtime="20210830 01:29:05.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.821" endtime="20210830 01:29:05.821"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.821" endtime="20210830 01:29:05.822"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.822" endtime="20210830 01:29:05.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.822" endtime="20210830 01:29:05.822"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.822" endtime="20210830 01:29:05.822"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.822" endtime="20210830 01:29:05.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.822" endtime="20210830 01:29:05.823"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.823" endtime="20210830 01:29:05.823"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.823" endtime="20210830 01:29:05.823"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.823" endtime="20210830 01:29:05.823"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.823" endtime="20210830 01:29:05.823"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.824" endtime="20210830 01:29:05.824"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.824" endtime="20210830 01:29:05.824"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.824" endtime="20210830 01:29:05.824"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.824" endtime="20210830 01:29:05.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.824" endtime="20210830 01:29:05.824"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.825" endtime="20210830 01:29:05.825"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.825" endtime="20210830 01:29:05.825"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.825" endtime="20210830 01:29:05.825"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:29:05.825" endtime="20210830 01:29:05.825"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.826" endtime="20210830 01:29:05.826"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:29:05.826" endtime="20210830 01:29:05.826"/>
</kw>
<status status="FAIL" starttime="20210830 01:24:05.811" endtime="20210830 01:29:05.826"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210830 01:24:05.810" endtime="20210830 01:29:05.827">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210830 01:24:05.785" endtime="20210830 01:29:05.828"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210830 01:29:05.842" level="INFO">${random} = 76572</msg>
<status status="PASS" starttime="20210830 01:29:05.842" endtime="20210830 01:29:05.842"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:29:05.843" level="INFO">${prefix} = 76572</msg>
<status status="PASS" starttime="20210830 01:29:05.842" endtime="20210830 01:29:05.843"/>
</kw>
<status status="PASS" starttime="20210830 01:29:05.841" endtime="20210830 01:29:05.843"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:29:05.851" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:29:05.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:29:05.855" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:29:05.847" endtime="20210830 01:29:05.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:29:05.856" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:29:05.855" endtime="20210830 01:29:05.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:29:05.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:29:05.857" endtime="20210830 01:29:05.860"/>
</kw>
<status status="PASS" starttime="20210830 01:29:05.847" endtime="20210830 01:29:05.860"/>
</kw>
<msg timestamp="20210830 01:29:05.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:29:05.846" endtime="20210830 01:29:05.860"/>
</kw>
<msg timestamp="20210830 01:29:05.861" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:29:05.845" endtime="20210830 01:29:05.861"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:29:05.863" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:29:05.861" endtime="20210830 01:29:05.863"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:29:05.869" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:29:06.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:29:06.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:29:05.866" endtime="20210830 01:29:06.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:29:06.094" level="INFO"/>
<status status="PASS" starttime="20210830 01:29:06.093" endtime="20210830 01:29:06.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:29:06.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:29:06.094" endtime="20210830 01:29:06.095"/>
</kw>
<status status="PASS" starttime="20210830 01:29:05.865" endtime="20210830 01:29:06.095"/>
</kw>
<msg timestamp="20210830 01:29:06.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:29:05.865" endtime="20210830 01:29:06.095"/>
</kw>
<status status="PASS" starttime="20210830 01:29:05.864" endtime="20210830 01:29:06.096"/>
</kw>
<status status="PASS" starttime="20210830 01:29:05.864" endtime="20210830 01:29:06.096"/>
</kw>
<status status="PASS" starttime="20210830 01:29:05.845" endtime="20210830 01:29:06.096"/>
</kw>
<status status="PASS" starttime="20210830 01:29:05.844" endtime="20210830 01:29:06.097"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:29:06.137" level="INFO">Running command 'ozone sh volume info o3://om:9862/76572-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:29:12.328" level="INFO">${rc} = 255</msg>
<msg timestamp="20210830 01:29:12.328" level="INFO">${output} = VOLUME_NOT_FOUND Volume 76572-rpcwoport is not found</msg>
<status status="PASS" starttime="20210830 01:29:06.115" endtime="20210830 01:29:12.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:29:12.330" level="INFO">VOLUME_NOT_FOUND Volume 76572-rpcwoport is not found</msg>
<status status="PASS" starttime="20210830 01:29:12.329" endtime="20210830 01:29:12.330"/>
</kw>
<msg timestamp="20210830 01:29:12.331" level="INFO">${result} = VOLUME_NOT_FOUND Volume 76572-rpcwoport is not found</msg>
<status status="PASS" starttime="20210830 01:29:06.111" endtime="20210830 01:29:12.331"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:29:12.331" endtime="20210830 01:29:12.332"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:29:12.336" level="INFO">Running command 'ozone sh volume create o3://om:9862/76572-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:29:19.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:29:19.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:29:12.334" endtime="20210830 01:29:19.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:29:19.142" level="INFO"/>
<status status="PASS" starttime="20210830 01:29:19.141" endtime="20210830 01:29:19.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:29:19.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:29:19.142" endtime="20210830 01:29:19.143"/>
</kw>
<status status="PASS" starttime="20210830 01:29:12.334" endtime="20210830 01:29:19.143"/>
</kw>
<msg timestamp="20210830 01:29:19.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:29:12.333" endtime="20210830 01:29:19.143"/>
</kw>
<msg timestamp="20210830 01:29:19.144" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210830 01:29:12.332" endtime="20210830 01:29:19.144"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:29:19.144" endtime="20210830 01:29:19.144"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:29:19.148" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="76572-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:29:26.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:29:26.571" level="INFO">${output} = {
  "metadata": {},
  "name": "76572-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210830 01:29:19.147" endtime="20210830 01:29:26.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:29:26.573" level="INFO">{
  "metadata": {},
  "name": "76572-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-30T01:29:19.022Z",
  "modificationTime": "2021-08-30T01:29:19.022Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210830 01:29:26.572" endtime="20210830 01:29:26.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:29:26.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:29:26.573" endtime="20210830 01:29:26.574"/>
</kw>
<status status="PASS" starttime="20210830 01:29:19.146" endtime="20210830 01:29:26.575"/>
</kw>
<msg timestamp="20210830 01:29:26.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:29:19.146" endtime="20210830 01:29:26.576"/>
</kw>
<msg timestamp="20210830 01:29:26.577" level="INFO">${result} = {
  "metadata": {},
  "name": "76572-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210830 01:29:19.145" endtime="20210830 01:29:26.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:29:26.577" endtime="20210830 01:29:26.578"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:29:26.583" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="76572-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:29:34.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:29:34.727" level="INFO">${output} = {
  "metadata": {},
  "name": "76572-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210830 01:29:26.580" endtime="20210830 01:29:34.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:29:34.729" level="INFO">{
  "metadata": {},
  "name": "76572-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-30T01:29:19.022Z",
  "modificationTime": "2021-08-30T01:29:19.022Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210830 01:29:34.728" endtime="20210830 01:29:34.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:29:34.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:29:34.729" endtime="20210830 01:29:34.731"/>
</kw>
<status status="PASS" starttime="20210830 01:29:26.579" endtime="20210830 01:29:34.731"/>
</kw>
<msg timestamp="20210830 01:29:34.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:29:26.579" endtime="20210830 01:29:34.731"/>
</kw>
<msg timestamp="20210830 01:29:34.732" level="INFO">${result} = {
  "metadata": {},
  "name": "76572-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210830 01:29:26.578" endtime="20210830 01:29:34.732"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:29:34.732" endtime="20210830 01:29:34.734"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:29:34.742" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/76572-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:29:42.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:29:42.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:29:34.738" endtime="20210830 01:29:42.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:29:42.606" level="INFO"/>
<status status="PASS" starttime="20210830 01:29:42.605" endtime="20210830 01:29:42.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:29:42.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:29:42.606" endtime="20210830 01:29:42.607"/>
</kw>
<status status="PASS" starttime="20210830 01:29:34.737" endtime="20210830 01:29:42.607"/>
</kw>
<msg timestamp="20210830 01:29:42.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:29:34.736" endtime="20210830 01:29:42.607"/>
</kw>
<status status="PASS" starttime="20210830 01:29:34.734" endtime="20210830 01:29:42.608"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:29:42.613" level="INFO">Running command 'ozone sh volume info o3://om:9862/76572-rpcwoport | jq -r '. | select(.name=="76572-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:29:51.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:29:51.382" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:29:42.610" endtime="20210830 01:29:51.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:29:51.384" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210830 01:29:51.384" endtime="20210830 01:29:51.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:29:51.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:29:51.385" endtime="20210830 01:29:51.387"/>
</kw>
<status status="PASS" starttime="20210830 01:29:42.610" endtime="20210830 01:29:51.387"/>
</kw>
<msg timestamp="20210830 01:29:51.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:29:42.609" endtime="20210830 01:29:51.388"/>
</kw>
<msg timestamp="20210830 01:29:51.389" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:29:42.608" endtime="20210830 01:29:51.389"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:29:51.389" endtime="20210830 01:29:51.390"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:29:51.396" level="INFO">Running command 'ozone sh bucket create o3://om:9862/76572-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:29:59.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:29:59.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:29:51.394" endtime="20210830 01:29:59.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:29:59.350" level="INFO"/>
<status status="PASS" starttime="20210830 01:29:59.349" endtime="20210830 01:29:59.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:29:59.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:29:59.351" endtime="20210830 01:29:59.353"/>
</kw>
<status status="PASS" starttime="20210830 01:29:51.392" endtime="20210830 01:29:59.354"/>
</kw>
<msg timestamp="20210830 01:29:59.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:29:51.392" endtime="20210830 01:29:59.354"/>
</kw>
<status status="PASS" starttime="20210830 01:29:51.391" endtime="20210830 01:29:59.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:29:59.363" level="INFO">Running command 'ozone sh bucket info o3://om:9862/76572-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:30:08.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:30:08.085" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210830 01:29:59.360" endtime="20210830 01:30:08.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:30:08.088" level="INFO">DISK</msg>
<status status="PASS" starttime="20210830 01:30:08.086" endtime="20210830 01:30:08.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:30:08.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:30:08.088" endtime="20210830 01:30:08.089"/>
</kw>
<status status="PASS" starttime="20210830 01:29:59.359" endtime="20210830 01:30:08.094"/>
</kw>
<msg timestamp="20210830 01:30:08.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:29:59.358" endtime="20210830 01:30:08.095"/>
</kw>
<msg timestamp="20210830 01:30:08.095" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210830 01:29:59.355" endtime="20210830 01:30:08.095"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:30:08.096" endtime="20210830 01:30:08.097"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:30:08.103" level="INFO">Running command 'ozone sh bucket info o3://om:9862/76572-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:30:16.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:30:16.564" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:30:08.100" endtime="20210830 01:30:16.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:30:16.566" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210830 01:30:16.565" endtime="20210830 01:30:16.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:30:16.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:30:16.566" endtime="20210830 01:30:16.568"/>
</kw>
<status status="PASS" starttime="20210830 01:30:08.099" endtime="20210830 01:30:16.568"/>
</kw>
<msg timestamp="20210830 01:30:16.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:30:08.099" endtime="20210830 01:30:16.568"/>
</kw>
<msg timestamp="20210830 01:30:16.569" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:30:08.097" endtime="20210830 01:30:16.569"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:30:16.569" endtime="20210830 01:30:16.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:30:16.574" level="INFO">Running command 'ozone sh bucket info o3://om:9862/76572-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:30:24.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:30:24.623" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210830 01:30:16.572" endtime="20210830 01:30:24.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:30:24.625" level="INFO">100</msg>
<status status="PASS" starttime="20210830 01:30:24.624" endtime="20210830 01:30:24.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:30:24.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:30:24.625" endtime="20210830 01:30:24.626"/>
</kw>
<status status="PASS" starttime="20210830 01:30:16.571" endtime="20210830 01:30:24.626"/>
</kw>
<msg timestamp="20210830 01:30:24.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:30:16.571" endtime="20210830 01:30:24.626"/>
</kw>
<msg timestamp="20210830 01:30:24.626" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210830 01:30:16.570" endtime="20210830 01:30:24.627"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:30:24.627" endtime="20210830 01:30:24.627"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:30:24.631" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/76572-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:30:31.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:30:31.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:30:24.629" endtime="20210830 01:30:31.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:30:31.296" level="INFO"/>
<status status="PASS" starttime="20210830 01:30:31.295" endtime="20210830 01:30:31.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:30:31.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:30:31.296" endtime="20210830 01:30:31.297"/>
</kw>
<status status="PASS" starttime="20210830 01:30:24.628" endtime="20210830 01:30:31.297"/>
</kw>
<msg timestamp="20210830 01:30:31.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:30:24.628" endtime="20210830 01:30:31.298"/>
</kw>
<status status="PASS" starttime="20210830 01:30:24.627" endtime="20210830 01:30:31.298"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:30:31.302" level="INFO">Running command 'ozone sh bucket info o3://om:9862/76572-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:30:38.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:30:38.339" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210830 01:30:31.300" endtime="20210830 01:30:38.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:30:38.341" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210830 01:30:38.340" endtime="20210830 01:30:38.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:30:38.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:30:38.341" endtime="20210830 01:30:38.342"/>
</kw>
<status status="PASS" starttime="20210830 01:30:31.300" endtime="20210830 01:30:38.342"/>
</kw>
<msg timestamp="20210830 01:30:38.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:30:31.299" endtime="20210830 01:30:38.343"/>
</kw>
<msg timestamp="20210830 01:30:38.343" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210830 01:30:31.298" endtime="20210830 01:30:38.343"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:30:38.343" endtime="20210830 01:30:38.343"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:30:38.349" level="INFO">Running command 'ozone sh bucket info o3://om:9862/76572-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:30:46.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:30:46.740" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210830 01:30:38.347" endtime="20210830 01:30:46.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:30:46.743" level="INFO">1000</msg>
<status status="PASS" starttime="20210830 01:30:46.741" endtime="20210830 01:30:46.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:30:46.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:30:46.744" endtime="20210830 01:30:46.745"/>
</kw>
<status status="PASS" starttime="20210830 01:30:38.346" endtime="20210830 01:30:46.746"/>
</kw>
<msg timestamp="20210830 01:30:46.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:30:38.346" endtime="20210830 01:30:46.747"/>
</kw>
<msg timestamp="20210830 01:30:46.747" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210830 01:30:38.344" endtime="20210830 01:30:46.747"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:30:46.748" endtime="20210830 01:30:46.749"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:30:46.756" level="INFO">Running command 'ozone sh bucket list o3://om:9862/76572-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:30:55.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:30:55.645" level="INFO">${output} = 76572-rpcwoport</msg>
<status status="PASS" starttime="20210830 01:30:46.752" endtime="20210830 01:30:55.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:30:55.647" level="INFO">76572-rpcwoport</msg>
<status status="PASS" starttime="20210830 01:30:55.646" endtime="20210830 01:30:55.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:30:55.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:30:55.647" endtime="20210830 01:30:55.648"/>
</kw>
<status status="PASS" starttime="20210830 01:30:46.752" endtime="20210830 01:30:55.648"/>
</kw>
<msg timestamp="20210830 01:30:55.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:30:46.751" endtime="20210830 01:30:55.648"/>
</kw>
<msg timestamp="20210830 01:30:55.649" level="INFO">${result} = 76572-rpcwoport</msg>
<status status="PASS" starttime="20210830 01:30:46.749" endtime="20210830 01:30:55.649"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:30:55.649" endtime="20210830 01:30:55.649"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:30:55.658" level="INFO">Running command 'ozone sh key put o3://om:9862/76572-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:34:05.845" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210830 01:30:55.655" endtime="20210830 01:34:05.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.846" endtime="20210830 01:34:05.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.846" endtime="20210830 01:34:05.846"/>
</kw>
<status status="FAIL" starttime="20210830 01:30:55.654" endtime="20210830 01:34:05.847"/>
</kw>
<msg timestamp="20210830 01:34:05.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210830 01:30:55.653" endtime="20210830 01:34:05.847"/>
</kw>
<status status="FAIL" starttime="20210830 01:30:55.652" endtime="20210830 01:34:05.848"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.848" endtime="20210830 01:34:05.848"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.848" endtime="20210830 01:34:05.848"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.849" endtime="20210830 01:34:05.849"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.851" endtime="20210830 01:34:05.851"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.851" endtime="20210830 01:34:05.851"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.851" endtime="20210830 01:34:05.851"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.851" endtime="20210830 01:34:05.851"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.852" endtime="20210830 01:34:05.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.867" endtime="20210830 01:34:05.867"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.867" endtime="20210830 01:34:05.867"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.867" endtime="20210830 01:34:05.868"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.868" endtime="20210830 01:34:05.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.868" endtime="20210830 01:34:05.868"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.868" endtime="20210830 01:34:05.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.868" endtime="20210830 01:34:05.868"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.869" endtime="20210830 01:34:05.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.871" endtime="20210830 01:34:05.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.871" endtime="20210830 01:34:05.871"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.871" endtime="20210830 01:34:05.873"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.875" endtime="20210830 01:34:05.875"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.875" endtime="20210830 01:34:05.875"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.875" endtime="20210830 01:34:05.875"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.876" endtime="20210830 01:34:05.876"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.876" endtime="20210830 01:34:05.876"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.881" endtime="20210830 01:34:05.881"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.882" endtime="20210830 01:34:05.882"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.882" endtime="20210830 01:34:05.882"/>
</kw>
<status status="FAIL" starttime="20210830 01:30:55.650" endtime="20210830 01:34:05.883"/>
</kw>
<status status="FAIL" starttime="20210830 01:30:55.650" endtime="20210830 01:34:05.883"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.884" endtime="20210830 01:34:05.885"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.886" endtime="20210830 01:34:05.887"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.888" endtime="20210830 01:34:05.889"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.890" endtime="20210830 01:34:05.891"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.891" endtime="20210830 01:34:05.893"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.893" endtime="20210830 01:34:05.893"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.893" endtime="20210830 01:34:05.893"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.898" endtime="20210830 01:34:05.898"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.899" endtime="20210830 01:34:05.899"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.899" endtime="20210830 01:34:05.899"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.899" endtime="20210830 01:34:05.901"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.902" endtime="20210830 01:34:05.902"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.902" endtime="20210830 01:34:05.902"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.905" endtime="20210830 01:34:05.905"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.905" endtime="20210830 01:34:05.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.908" endtime="20210830 01:34:05.908"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.909" endtime="20210830 01:34:05.909"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.909" endtime="20210830 01:34:05.909"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.909" endtime="20210830 01:34:05.909"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.909" endtime="20210830 01:34:05.910"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.910" endtime="20210830 01:34:05.910"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.910" endtime="20210830 01:34:05.910"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.910" endtime="20210830 01:34:05.910"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:34:05.911" endtime="20210830 01:34:05.911"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.911" endtime="20210830 01:34:05.911"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:34:05.912" endtime="20210830 01:34:05.912"/>
</kw>
<status status="FAIL" starttime="20210830 01:29:06.098" endtime="20210830 01:34:05.913"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210830 01:29:05.843" endtime="20210830 01:34:05.914">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:34:05.947" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:34:05.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:34:05.984" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:34:05.929" endtime="20210830 01:34:05.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:34:05.991" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:34:05.988" endtime="20210830 01:34:05.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:34:05.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:34:05.993" endtime="20210830 01:34:05.996"/>
</kw>
<status status="PASS" starttime="20210830 01:34:05.927" endtime="20210830 01:34:05.996"/>
</kw>
<msg timestamp="20210830 01:34:05.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:34:05.927" endtime="20210830 01:34:05.996"/>
</kw>
<msg timestamp="20210830 01:34:05.997" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:34:05.926" endtime="20210830 01:34:05.997"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:34:06.002" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:34:05.997" endtime="20210830 01:34:06.004"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:34:06.119" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:34:06.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:34:06.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:34:06.023" endtime="20210830 01:34:06.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:34:06.327" level="INFO"/>
<status status="PASS" starttime="20210830 01:34:06.326" endtime="20210830 01:34:06.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:34:06.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:34:06.327" endtime="20210830 01:34:06.328"/>
</kw>
<status status="PASS" starttime="20210830 01:34:06.017" endtime="20210830 01:34:06.328"/>
</kw>
<msg timestamp="20210830 01:34:06.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:34:06.014" endtime="20210830 01:34:06.328"/>
</kw>
<status status="PASS" starttime="20210830 01:34:06.008" endtime="20210830 01:34:06.329"/>
</kw>
<status status="PASS" starttime="20210830 01:34:06.005" endtime="20210830 01:34:06.329"/>
</kw>
<status status="PASS" starttime="20210830 01:34:05.924" endtime="20210830 01:34:06.329"/>
</kw>
<status status="PASS" starttime="20210830 01:34:05.922" endtime="20210830 01:34:06.331"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:34:06.336" level="INFO">Running command 'ozone sh volume create o3://om:9862/76572-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:34:14.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:34:14.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:34:06.334" endtime="20210830 01:34:14.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:34:14.191" level="INFO"/>
<status status="PASS" starttime="20210830 01:34:14.190" endtime="20210830 01:34:14.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:34:14.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:34:14.192" endtime="20210830 01:34:14.193"/>
</kw>
<status status="PASS" starttime="20210830 01:34:06.333" endtime="20210830 01:34:14.193"/>
</kw>
<msg timestamp="20210830 01:34:14.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:34:06.333" endtime="20210830 01:34:14.194"/>
</kw>
<status status="PASS" starttime="20210830 01:34:06.332" endtime="20210830 01:34:14.194"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:34:14.200" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/76572-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:34:23.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:34:23.301" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:34:14.197" endtime="20210830 01:34:23.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:34:23.304" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:34:23.302" endtime="20210830 01:34:23.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:34:23.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:34:23.304" endtime="20210830 01:34:23.306"/>
</kw>
<status status="PASS" starttime="20210830 01:34:14.196" endtime="20210830 01:34:23.306"/>
</kw>
<msg timestamp="20210830 01:34:23.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:34:14.196" endtime="20210830 01:34:23.307"/>
</kw>
<msg timestamp="20210830 01:34:23.307" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:34:14.194" endtime="20210830 01:34:23.307"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:34:23.308" endtime="20210830 01:34:23.309"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:34:23.316" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/76572-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:34:30.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:34:30.611" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210830 01:34:23.314" endtime="20210830 01:34:30.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:34:30.613" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210830 01:34:30.612" endtime="20210830 01:34:30.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:34:30.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:34:30.614" endtime="20210830 01:34:30.615"/>
</kw>
<status status="PASS" starttime="20210830 01:34:23.312" endtime="20210830 01:34:30.616"/>
</kw>
<msg timestamp="20210830 01:34:30.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:34:23.311" endtime="20210830 01:34:30.616"/>
</kw>
<msg timestamp="20210830 01:34:30.617" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210830 01:34:23.310" endtime="20210830 01:34:30.617"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:34:30.623" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/76572-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:34:38.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:34:38.217" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210830 01:34:30.620" endtime="20210830 01:34:38.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:34:38.219" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:34:38.218" endtime="20210830 01:34:38.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:34:38.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:34:38.219" endtime="20210830 01:34:38.220"/>
</kw>
<status status="PASS" starttime="20210830 01:34:30.619" endtime="20210830 01:34:38.220"/>
</kw>
<msg timestamp="20210830 01:34:38.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:34:30.619" endtime="20210830 01:34:38.221"/>
</kw>
<msg timestamp="20210830 01:34:38.221" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210830 01:34:30.617" endtime="20210830 01:34:38.221"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:34:38.221" endtime="20210830 01:34:38.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:34:38.227" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/76572-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:34:43.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:34:43.666" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210830 01:34:38.224" endtime="20210830 01:34:43.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:34:43.667" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210830 01:34:43.666" endtime="20210830 01:34:43.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:34:43.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:34:43.667" endtime="20210830 01:34:43.668"/>
</kw>
<status status="PASS" starttime="20210830 01:34:38.224" endtime="20210830 01:34:43.668"/>
</kw>
<msg timestamp="20210830 01:34:43.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:34:38.223" endtime="20210830 01:34:43.668"/>
</kw>
<msg timestamp="20210830 01:34:43.669" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210830 01:34:38.223" endtime="20210830 01:34:43.669"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:34:43.673" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/76572-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:34:51.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:34:51.316" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210830 01:34:43.671" endtime="20210830 01:34:51.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:34:51.318" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:34:51.317" endtime="20210830 01:34:51.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:34:51.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:34:51.318" endtime="20210830 01:34:51.318"/>
</kw>
<status status="PASS" starttime="20210830 01:34:43.670" endtime="20210830 01:34:51.319"/>
</kw>
<msg timestamp="20210830 01:34:51.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:34:43.670" endtime="20210830 01:34:51.319"/>
</kw>
<msg timestamp="20210830 01:34:51.319" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210830 01:34:43.669" endtime="20210830 01:34:51.319"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:34:51.320" endtime="20210830 01:34:51.321"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:34:51.330" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/76572-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:34:58.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:34:58.936" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210830 01:34:51.325" endtime="20210830 01:34:58.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:34:58.937" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210830 01:34:58.936" endtime="20210830 01:34:58.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:34:58.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:34:58.937" endtime="20210830 01:34:58.938"/>
</kw>
<status status="PASS" starttime="20210830 01:34:51.323" endtime="20210830 01:34:58.939"/>
</kw>
<msg timestamp="20210830 01:34:58.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:34:51.322" endtime="20210830 01:34:58.939"/>
</kw>
<msg timestamp="20210830 01:34:58.939" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210830 01:34:51.321" endtime="20210830 01:34:58.939"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:34:58.945" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/76572-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:35:05.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:35:05.240" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210830 01:34:58.941" endtime="20210830 01:35:05.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:35:05.242" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:35:05.241" endtime="20210830 01:35:05.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:35:05.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:35:05.243" endtime="20210830 01:35:05.243"/>
</kw>
<status status="PASS" starttime="20210830 01:34:58.940" endtime="20210830 01:35:05.244"/>
</kw>
<msg timestamp="20210830 01:35:05.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:34:58.940" endtime="20210830 01:35:05.244"/>
</kw>
<msg timestamp="20210830 01:35:05.244" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210830 01:34:58.939" endtime="20210830 01:35:05.244"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:35:05.245" endtime="20210830 01:35:05.245"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:35:05.245" endtime="20210830 01:35:05.246"/>
</kw>
<status status="PASS" starttime="20210830 01:34:06.331" endtime="20210830 01:35:05.247"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210830 01:34:05.919" endtime="20210830 01:35:05.247"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:35:05.257" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:35:05.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:35:05.261" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:35:05.254" endtime="20210830 01:35:05.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:35:05.263" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:35:05.262" endtime="20210830 01:35:05.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:35:05.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:35:05.263" endtime="20210830 01:35:05.264"/>
</kw>
<status status="PASS" starttime="20210830 01:35:05.253" endtime="20210830 01:35:05.265"/>
</kw>
<msg timestamp="20210830 01:35:05.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:35:05.253" endtime="20210830 01:35:05.265"/>
</kw>
<msg timestamp="20210830 01:35:05.265" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:35:05.252" endtime="20210830 01:35:05.265"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:35:05.266" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:35:05.266" endtime="20210830 01:35:05.267"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:35:05.273" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:35:05.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:35:05.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:35:05.271" endtime="20210830 01:35:05.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:35:05.286" level="INFO"/>
<status status="PASS" starttime="20210830 01:35:05.285" endtime="20210830 01:35:05.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:35:05.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:35:05.286" endtime="20210830 01:35:05.287"/>
</kw>
<status status="PASS" starttime="20210830 01:35:05.269" endtime="20210830 01:35:05.287"/>
</kw>
<msg timestamp="20210830 01:35:05.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:35:05.269" endtime="20210830 01:35:05.288"/>
</kw>
<status status="PASS" starttime="20210830 01:35:05.268" endtime="20210830 01:35:05.288"/>
</kw>
<status status="PASS" starttime="20210830 01:35:05.267" endtime="20210830 01:35:05.288"/>
</kw>
<status status="PASS" starttime="20210830 01:35:05.251" endtime="20210830 01:35:05.288"/>
</kw>
<status status="PASS" starttime="20210830 01:35:05.251" endtime="20210830 01:35:05.288"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:35:05.294" level="INFO">Running command 'ozone sh bucket create o3://om:9862/76572-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:35:13.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:35:13.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:35:05.292" endtime="20210830 01:35:13.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:35:13.363" level="INFO"/>
<status status="PASS" starttime="20210830 01:35:13.363" endtime="20210830 01:35:13.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:35:13.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:35:13.364" endtime="20210830 01:35:13.364"/>
</kw>
<status status="PASS" starttime="20210830 01:35:05.291" endtime="20210830 01:35:13.365"/>
</kw>
<msg timestamp="20210830 01:35:13.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:35:05.291" endtime="20210830 01:35:13.365"/>
</kw>
<status status="PASS" starttime="20210830 01:35:05.290" endtime="20210830 01:35:13.366"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:35:13.374" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/76572-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:35:21.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:35:21.712" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210830 01:35:13.369" endtime="20210830 01:35:21.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:35:21.714" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:35:21.713" endtime="20210830 01:35:21.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:35:21.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:35:21.714" endtime="20210830 01:35:21.715"/>
</kw>
<status status="PASS" starttime="20210830 01:35:13.368" endtime="20210830 01:35:21.715"/>
</kw>
<msg timestamp="20210830 01:35:21.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:35:13.368" endtime="20210830 01:35:21.716"/>
</kw>
<msg timestamp="20210830 01:35:21.716" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210830 01:35:13.366" endtime="20210830 01:35:21.716"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:35:21.716" endtime="20210830 01:35:21.717"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:35:21.722" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/76572-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:35:29.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:35:29.222" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210830 01:35:21.719" endtime="20210830 01:35:29.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:35:29.223" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210830 01:35:29.222" endtime="20210830 01:35:29.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:35:29.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:35:29.223" endtime="20210830 01:35:29.224"/>
</kw>
<status status="PASS" starttime="20210830 01:35:21.719" endtime="20210830 01:35:29.225"/>
</kw>
<msg timestamp="20210830 01:35:29.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:35:21.718" endtime="20210830 01:35:29.225"/>
</kw>
<msg timestamp="20210830 01:35:29.225" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210830 01:35:21.717" endtime="20210830 01:35:29.225"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:35:29.230" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/76572-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:35:37.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:35:37.570" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210830 01:35:29.228" endtime="20210830 01:35:37.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:35:37.572" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:35:37.571" endtime="20210830 01:35:37.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:35:37.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:35:37.573" endtime="20210830 01:35:37.574"/>
</kw>
<status status="PASS" starttime="20210830 01:35:29.227" endtime="20210830 01:35:37.575"/>
</kw>
<msg timestamp="20210830 01:35:37.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:35:29.226" endtime="20210830 01:35:37.575"/>
</kw>
<msg timestamp="20210830 01:35:37.576" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210830 01:35:29.226" endtime="20210830 01:35:37.576"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:35:37.576" endtime="20210830 01:35:37.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:35:37.586" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/76572-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:35:42.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:35:42.969" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210830 01:35:37.583" endtime="20210830 01:35:42.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:35:42.970" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210830 01:35:42.969" endtime="20210830 01:35:42.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:35:42.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:35:42.971" endtime="20210830 01:35:42.971"/>
</kw>
<status status="PASS" starttime="20210830 01:35:37.582" endtime="20210830 01:35:42.972"/>
</kw>
<msg timestamp="20210830 01:35:42.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:35:37.581" endtime="20210830 01:35:42.972"/>
</kw>
<msg timestamp="20210830 01:35:42.972" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210830 01:35:37.580" endtime="20210830 01:35:42.972"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:35:42.977" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/76572-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:35:51.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:35:51.241" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210830 01:35:42.974" endtime="20210830 01:35:51.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:35:51.242" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:35:51.242" endtime="20210830 01:35:51.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:35:51.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:35:51.243" endtime="20210830 01:35:51.243"/>
</kw>
<status status="PASS" starttime="20210830 01:35:42.974" endtime="20210830 01:35:51.245"/>
</kw>
<msg timestamp="20210830 01:35:51.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:35:42.973" endtime="20210830 01:35:51.245"/>
</kw>
<msg timestamp="20210830 01:35:51.245" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210830 01:35:42.973" endtime="20210830 01:35:51.245"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:35:51.245" endtime="20210830 01:35:51.246"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:35:51.253" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/76572-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:35:58.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:35:58.828" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210830 01:35:51.250" endtime="20210830 01:35:58.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:35:58.830" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210830 01:35:58.829" endtime="20210830 01:35:58.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:35:58.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:35:58.830" endtime="20210830 01:35:58.831"/>
</kw>
<status status="PASS" starttime="20210830 01:35:51.249" endtime="20210830 01:35:58.832"/>
</kw>
<msg timestamp="20210830 01:35:58.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:35:51.248" endtime="20210830 01:35:58.832"/>
</kw>
<msg timestamp="20210830 01:35:58.832" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210830 01:35:51.246" endtime="20210830 01:35:58.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:35:58.837" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/76572-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:36:06.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:36:06.565" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210830 01:35:58.834" endtime="20210830 01:36:06.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:36:06.567" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:36:06.566" endtime="20210830 01:36:06.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:36:06.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:36:06.567" endtime="20210830 01:36:06.568"/>
</kw>
<status status="PASS" starttime="20210830 01:35:58.834" endtime="20210830 01:36:06.569"/>
</kw>
<msg timestamp="20210830 01:36:06.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:35:58.833" endtime="20210830 01:36:06.569"/>
</kw>
<msg timestamp="20210830 01:36:06.569" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210830 01:35:58.833" endtime="20210830 01:36:06.569"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:36:06.570" endtime="20210830 01:36:06.570"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:36:06.571" endtime="20210830 01:36:06.571"/>
</kw>
<status status="PASS" starttime="20210830 01:35:05.289" endtime="20210830 01:36:06.572"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210830 01:35:05.250" endtime="20210830 01:36:06.572"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:36:06.582" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:36:06.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:36:06.586" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:36:06.579" endtime="20210830 01:36:06.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:36:06.588" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:36:06.587" endtime="20210830 01:36:06.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:36:06.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:36:06.589" endtime="20210830 01:36:06.590"/>
</kw>
<status status="PASS" starttime="20210830 01:36:06.578" endtime="20210830 01:36:06.590"/>
</kw>
<msg timestamp="20210830 01:36:06.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:36:06.578" endtime="20210830 01:36:06.590"/>
</kw>
<msg timestamp="20210830 01:36:06.591" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:36:06.577" endtime="20210830 01:36:06.591"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:36:06.591" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:36:06.591" endtime="20210830 01:36:06.591"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:36:06.597" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:36:06.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:36:06.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:36:06.594" endtime="20210830 01:36:06.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:36:06.607" level="INFO"/>
<status status="PASS" starttime="20210830 01:36:06.607" endtime="20210830 01:36:06.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:36:06.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:36:06.608" endtime="20210830 01:36:06.608"/>
</kw>
<status status="PASS" starttime="20210830 01:36:06.593" endtime="20210830 01:36:06.609"/>
</kw>
<msg timestamp="20210830 01:36:06.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:36:06.593" endtime="20210830 01:36:06.609"/>
</kw>
<status status="PASS" starttime="20210830 01:36:06.592" endtime="20210830 01:36:06.609"/>
</kw>
<status status="PASS" starttime="20210830 01:36:06.592" endtime="20210830 01:36:06.610"/>
</kw>
<status status="PASS" starttime="20210830 01:36:06.575" endtime="20210830 01:36:06.610"/>
</kw>
<status status="PASS" starttime="20210830 01:36:06.574" endtime="20210830 01:36:06.610"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:36:06.618" level="INFO">Running command 'ozone sh key put o3://om:9862/76572-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:39:17.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:39:17.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:36:06.615" endtime="20210830 01:39:17.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:39:17.489" level="INFO"/>
<status status="PASS" starttime="20210830 01:39:17.488" endtime="20210830 01:39:17.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:39:17.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:39:17.489" endtime="20210830 01:39:17.491"/>
</kw>
<status status="PASS" starttime="20210830 01:36:06.613" endtime="20210830 01:39:17.492"/>
</kw>
<msg timestamp="20210830 01:39:17.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:36:06.613" endtime="20210830 01:39:17.492"/>
</kw>
<status status="PASS" starttime="20210830 01:36:06.612" endtime="20210830 01:39:17.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:39:17.500" level="INFO">Running command 'ozone sh key getacl o3://om:9862/76572-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:39:24.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:39:24.793" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210830 01:39:17.497" endtime="20210830 01:39:24.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:39:24.795" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:39:24.794" endtime="20210830 01:39:24.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:39:24.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:39:24.795" endtime="20210830 01:39:24.796"/>
</kw>
<status status="PASS" starttime="20210830 01:39:17.495" endtime="20210830 01:39:24.796"/>
</kw>
<msg timestamp="20210830 01:39:24.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:39:17.494" endtime="20210830 01:39:24.796"/>
</kw>
<msg timestamp="20210830 01:39:24.797" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210830 01:39:17.493" endtime="20210830 01:39:24.797"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:39:24.797" endtime="20210830 01:39:24.797"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:39:24.801" level="INFO">Running command 'ozone sh key addacl o3://om:9862/76572-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:39:32.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:39:32.071" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:39:24.799" endtime="20210830 01:39:32.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:39:32.073" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:39:32.071" endtime="20210830 01:39:32.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:39:32.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:39:32.073" endtime="20210830 01:39:32.074"/>
</kw>
<status status="PASS" starttime="20210830 01:39:24.799" endtime="20210830 01:39:32.074"/>
</kw>
<msg timestamp="20210830 01:39:32.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:39:24.798" endtime="20210830 01:39:32.075"/>
</kw>
<msg timestamp="20210830 01:39:32.075" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210830 01:39:24.798" endtime="20210830 01:39:32.075"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:39:32.081" level="INFO">Running command 'ozone sh key getacl o3://om:9862/76572-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:39:39.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:39:39.937" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210830 01:39:32.078" endtime="20210830 01:39:39.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:39:39.938" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:39:39.937" endtime="20210830 01:39:39.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:39:39.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:39:39.939" endtime="20210830 01:39:39.939"/>
</kw>
<status status="PASS" starttime="20210830 01:39:32.077" endtime="20210830 01:39:39.940"/>
</kw>
<msg timestamp="20210830 01:39:39.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:39:32.076" endtime="20210830 01:39:39.940"/>
</kw>
<msg timestamp="20210830 01:39:39.940" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210830 01:39:32.075" endtime="20210830 01:39:39.940"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:39:39.940" endtime="20210830 01:39:39.943"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:39:39.947" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/76572-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:39:46.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:39:46.377" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210830 01:39:39.945" endtime="20210830 01:39:46.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:39:46.379" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210830 01:39:46.378" endtime="20210830 01:39:46.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:39:46.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:39:46.379" endtime="20210830 01:39:46.380"/>
</kw>
<status status="PASS" starttime="20210830 01:39:39.945" endtime="20210830 01:39:46.380"/>
</kw>
<msg timestamp="20210830 01:39:46.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:39:39.944" endtime="20210830 01:39:46.381"/>
</kw>
<msg timestamp="20210830 01:39:46.381" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210830 01:39:39.944" endtime="20210830 01:39:46.381"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:39:46.387" level="INFO">Running command 'ozone sh key getacl o3://om:9862/76572-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:39:54.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:39:54.536" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210830 01:39:46.384" endtime="20210830 01:39:54.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:39:54.539" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:39:54.538" endtime="20210830 01:39:54.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:39:54.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:39:54.540" endtime="20210830 01:39:54.541"/>
</kw>
<status status="PASS" starttime="20210830 01:39:46.383" endtime="20210830 01:39:54.542"/>
</kw>
<msg timestamp="20210830 01:39:54.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:39:46.383" endtime="20210830 01:39:54.542"/>
</kw>
<msg timestamp="20210830 01:39:54.543" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210830 01:39:46.381" endtime="20210830 01:39:54.543"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:39:54.543" endtime="20210830 01:39:54.544"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:39:54.549" level="INFO">Running command 'ozone sh key setacl o3://om:9862/76572-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:40:02.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:40:02.052" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210830 01:39:54.546" endtime="20210830 01:40:02.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:40:02.054" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210830 01:40:02.053" endtime="20210830 01:40:02.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:40:02.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:40:02.054" endtime="20210830 01:40:02.055"/>
</kw>
<status status="PASS" starttime="20210830 01:39:54.545" endtime="20210830 01:40:02.055"/>
</kw>
<msg timestamp="20210830 01:40:02.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:39:54.545" endtime="20210830 01:40:02.056"/>
</kw>
<msg timestamp="20210830 01:40:02.056" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210830 01:39:54.544" endtime="20210830 01:40:02.056"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:40:02.061" level="INFO">Running command 'ozone sh key getacl o3://om:9862/76572-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:40:10.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:40:10.074" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210830 01:40:02.058" endtime="20210830 01:40:10.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:40:10.076" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:40:10.075" endtime="20210830 01:40:10.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:40:10.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:40:10.077" endtime="20210830 01:40:10.078"/>
</kw>
<status status="PASS" starttime="20210830 01:40:02.057" endtime="20210830 01:40:10.078"/>
</kw>
<msg timestamp="20210830 01:40:10.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:40:02.057" endtime="20210830 01:40:10.079"/>
</kw>
<msg timestamp="20210830 01:40:10.080" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210830 01:40:02.056" endtime="20210830 01:40:10.080"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:40:10.080" endtime="20210830 01:40:10.081"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:40:10.081" endtime="20210830 01:40:10.082"/>
</kw>
<status status="PASS" starttime="20210830 01:36:06.611" endtime="20210830 01:40:10.083"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210830 01:36:06.573" endtime="20210830 01:40:10.083"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:40:10.093" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:40:10.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:40:10.097" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:40:10.090" endtime="20210830 01:40:10.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:40:10.099" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:40:10.098" endtime="20210830 01:40:10.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:40:10.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:40:10.100" endtime="20210830 01:40:10.103"/>
</kw>
<status status="PASS" starttime="20210830 01:40:10.088" endtime="20210830 01:40:10.104"/>
</kw>
<msg timestamp="20210830 01:40:10.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:40:10.088" endtime="20210830 01:40:10.105"/>
</kw>
<msg timestamp="20210830 01:40:10.106" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:40:10.087" endtime="20210830 01:40:10.106"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:40:10.107" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:40:10.106" endtime="20210830 01:40:10.108"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:40:10.123" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:40:10.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:40:10.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:40:10.117" endtime="20210830 01:40:10.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:40:10.347" level="INFO"/>
<status status="PASS" starttime="20210830 01:40:10.347" endtime="20210830 01:40:10.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:40:10.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:40:10.348" endtime="20210830 01:40:10.349"/>
</kw>
<status status="PASS" starttime="20210830 01:40:10.115" endtime="20210830 01:40:10.349"/>
</kw>
<msg timestamp="20210830 01:40:10.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:40:10.115" endtime="20210830 01:40:10.349"/>
</kw>
<status status="PASS" starttime="20210830 01:40:10.114" endtime="20210830 01:40:10.349"/>
</kw>
<status status="PASS" starttime="20210830 01:40:10.108" endtime="20210830 01:40:10.350"/>
</kw>
<status status="PASS" starttime="20210830 01:40:10.086" endtime="20210830 01:40:10.350"/>
</kw>
<status status="PASS" starttime="20210830 01:40:10.085" endtime="20210830 01:40:10.351"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:40:10.355" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/76572-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:40:18.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:40:18.373" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210830 01:40:10.353" endtime="20210830 01:40:18.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:40:18.376" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210830 01:40:18.375" endtime="20210830 01:40:18.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:40:18.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:40:18.376" endtime="20210830 01:40:18.378"/>
</kw>
<status status="PASS" starttime="20210830 01:40:10.353" endtime="20210830 01:40:18.378"/>
</kw>
<msg timestamp="20210830 01:40:18.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:40:10.352" endtime="20210830 01:40:18.379"/>
</kw>
<status status="PASS" starttime="20210830 01:40:10.352" endtime="20210830 01:40:18.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:40:18.387" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/76572-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:40:26.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:40:26.752" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210830 01:40:18.383" endtime="20210830 01:40:26.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:40:26.755" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:40:26.754" endtime="20210830 01:40:26.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:40:26.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:40:26.755" endtime="20210830 01:40:26.756"/>
</kw>
<status status="PASS" starttime="20210830 01:40:18.382" endtime="20210830 01:40:26.756"/>
</kw>
<msg timestamp="20210830 01:40:26.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:40:18.381" endtime="20210830 01:40:26.756"/>
</kw>
<msg timestamp="20210830 01:40:26.757" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210830 01:40:18.380" endtime="20210830 01:40:26.757"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:40:26.757" endtime="20210830 01:40:26.759"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:40:26.765" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/76572-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:40:34.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:40:34.412" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210830 01:40:26.762" endtime="20210830 01:40:34.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:40:34.413" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210830 01:40:34.412" endtime="20210830 01:40:34.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:40:34.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:40:34.413" endtime="20210830 01:40:34.414"/>
</kw>
<status status="PASS" starttime="20210830 01:40:26.761" endtime="20210830 01:40:34.414"/>
</kw>
<msg timestamp="20210830 01:40:34.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:40:26.760" endtime="20210830 01:40:34.415"/>
</kw>
<msg timestamp="20210830 01:40:34.415" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210830 01:40:26.759" endtime="20210830 01:40:34.415"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:40:34.420" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/76572-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:40:42.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:40:42.179" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210830 01:40:34.417" endtime="20210830 01:40:42.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:40:42.180" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:40:42.179" endtime="20210830 01:40:42.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:40:42.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:40:42.180" endtime="20210830 01:40:42.181"/>
</kw>
<status status="PASS" starttime="20210830 01:40:34.416" endtime="20210830 01:40:42.181"/>
</kw>
<msg timestamp="20210830 01:40:42.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:40:34.416" endtime="20210830 01:40:42.182"/>
</kw>
<msg timestamp="20210830 01:40:42.182" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210830 01:40:34.415" endtime="20210830 01:40:42.182"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:40:42.182" endtime="20210830 01:40:42.183"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:40:42.187" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/76572-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:40:47.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:40:47.402" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210830 01:40:42.185" endtime="20210830 01:40:47.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:40:47.404" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210830 01:40:47.403" endtime="20210830 01:40:47.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:40:47.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:40:47.404" endtime="20210830 01:40:47.405"/>
</kw>
<status status="PASS" starttime="20210830 01:40:42.184" endtime="20210830 01:40:47.405"/>
</kw>
<msg timestamp="20210830 01:40:47.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:40:42.184" endtime="20210830 01:40:47.405"/>
</kw>
<msg timestamp="20210830 01:40:47.406" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210830 01:40:42.183" endtime="20210830 01:40:47.406"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:40:47.410" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/76572-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:40:54.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:40:54.740" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210830 01:40:47.408" endtime="20210830 01:40:54.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:40:54.742" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:40:54.741" endtime="20210830 01:40:54.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:40:54.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:40:54.742" endtime="20210830 01:40:54.743"/>
</kw>
<status status="PASS" starttime="20210830 01:40:47.408" endtime="20210830 01:40:54.744"/>
</kw>
<msg timestamp="20210830 01:40:54.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:40:47.407" endtime="20210830 01:40:54.744"/>
</kw>
<msg timestamp="20210830 01:40:54.745" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210830 01:40:47.406" endtime="20210830 01:40:54.745"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:40:54.746" endtime="20210830 01:40:54.747"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:40:54.747" endtime="20210830 01:40:54.747"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:40:54.753" level="INFO">Running command 'ozone sh key put o3://om:9862/76572-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:44:05.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:44:05.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:40:54.750" endtime="20210830 01:44:05.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:44:05.431" level="INFO"/>
<status status="PASS" starttime="20210830 01:44:05.430" endtime="20210830 01:44:05.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:44:05.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:44:05.431" endtime="20210830 01:44:05.432"/>
</kw>
<status status="PASS" starttime="20210830 01:40:54.749" endtime="20210830 01:44:05.432"/>
</kw>
<msg timestamp="20210830 01:44:05.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:40:54.749" endtime="20210830 01:44:05.432"/>
</kw>
<status status="PASS" starttime="20210830 01:40:54.748" endtime="20210830 01:44:05.433"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:44:05.438" level="INFO">Running command 'ozone sh key getacl o3://om:9862/76572-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:44:14.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:44:14.245" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210830 01:44:05.435" endtime="20210830 01:44:14.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:44:14.248" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210830 01:44:14.246" endtime="20210830 01:44:14.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:44:14.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:44:14.248" endtime="20210830 01:44:14.250"/>
</kw>
<status status="PASS" starttime="20210830 01:44:05.434" endtime="20210830 01:44:14.251"/>
</kw>
<msg timestamp="20210830 01:44:14.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:44:05.434" endtime="20210830 01:44:14.251"/>
</kw>
<msg timestamp="20210830 01:44:14.252" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210830 01:44:05.433" endtime="20210830 01:44:14.252"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:44:14.252" endtime="20210830 01:44:14.254"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210830 01:44:14.254" endtime="20210830 01:44:14.255"/>
</kw>
<status status="PASS" starttime="20210830 01:40:10.351" endtime="20210830 01:44:14.257"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210830 01:40:10.084" endtime="20210830 01:44:14.258"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:44:14.272" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:44:14.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:44:14.278" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:44:14.268" endtime="20210830 01:44:14.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:44:14.281" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:44:14.279" endtime="20210830 01:44:14.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:44:14.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:44:14.282" endtime="20210830 01:44:14.283"/>
</kw>
<status status="PASS" starttime="20210830 01:44:14.267" endtime="20210830 01:44:14.284"/>
</kw>
<msg timestamp="20210830 01:44:14.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:44:14.266" endtime="20210830 01:44:14.285"/>
</kw>
<msg timestamp="20210830 01:44:14.285" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:44:14.264" endtime="20210830 01:44:14.285"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:44:14.287" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:44:14.286" endtime="20210830 01:44:14.287"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:44:14.296" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:44:14.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:44:14.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:44:14.292" endtime="20210830 01:44:14.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:44:14.308" level="INFO"/>
<status status="PASS" starttime="20210830 01:44:14.307" endtime="20210830 01:44:14.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:44:14.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:44:14.308" endtime="20210830 01:44:14.309"/>
</kw>
<status status="PASS" starttime="20210830 01:44:14.291" endtime="20210830 01:44:14.309"/>
</kw>
<msg timestamp="20210830 01:44:14.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:44:14.290" endtime="20210830 01:44:14.310"/>
</kw>
<status status="PASS" starttime="20210830 01:44:14.288" endtime="20210830 01:44:14.310"/>
</kw>
<status status="PASS" starttime="20210830 01:44:14.288" endtime="20210830 01:44:14.310"/>
</kw>
<status status="PASS" starttime="20210830 01:44:14.263" endtime="20210830 01:44:14.311"/>
</kw>
<status status="PASS" starttime="20210830 01:44:14.261" endtime="20210830 01:44:14.311"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:44:14.317" level="INFO">Running command 'ozone sh volume info o3:///76572-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:44:22.397" level="INFO">${rc} = 255</msg>
<msg timestamp="20210830 01:44:22.397" level="INFO">${output} = VOLUME_NOT_FOUND Volume 76572-rpcwport is not found</msg>
<status status="PASS" starttime="20210830 01:44:14.314" endtime="20210830 01:44:22.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:44:22.399" level="INFO">VOLUME_NOT_FOUND Volume 76572-rpcwport is not found</msg>
<status status="PASS" starttime="20210830 01:44:22.398" endtime="20210830 01:44:22.399"/>
</kw>
<msg timestamp="20210830 01:44:22.400" level="INFO">${result} = VOLUME_NOT_FOUND Volume 76572-rpcwport is not found</msg>
<status status="PASS" starttime="20210830 01:44:14.313" endtime="20210830 01:44:22.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:44:22.400" endtime="20210830 01:44:22.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:44:22.406" level="INFO">Running command 'ozone sh volume create o3:///76572-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:44:27.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:44:27.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:44:22.403" endtime="20210830 01:44:27.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:44:27.734" level="INFO"/>
<status status="PASS" starttime="20210830 01:44:27.732" endtime="20210830 01:44:27.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:44:27.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:44:27.734" endtime="20210830 01:44:27.736"/>
</kw>
<status status="PASS" starttime="20210830 01:44:22.402" endtime="20210830 01:44:27.736"/>
</kw>
<msg timestamp="20210830 01:44:27.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:44:22.402" endtime="20210830 01:44:27.737"/>
</kw>
<msg timestamp="20210830 01:44:27.737" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210830 01:44:22.401" endtime="20210830 01:44:27.737"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:44:27.738" endtime="20210830 01:44:27.739"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:44:27.745" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="76572-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:44:36.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:44:36.331" level="INFO">${output} = {
  "metadata": {},
  "name": "76572-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210830 01:44:27.742" endtime="20210830 01:44:36.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:44:36.333" level="INFO">{
  "metadata": {},
  "name": "76572-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-30T01:44:27.661Z",
  "modificationTime": "2021-08-30T01:44:27.661Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210830 01:44:36.332" endtime="20210830 01:44:36.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:44:36.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:44:36.334" endtime="20210830 01:44:36.335"/>
</kw>
<status status="PASS" starttime="20210830 01:44:27.742" endtime="20210830 01:44:36.336"/>
</kw>
<msg timestamp="20210830 01:44:36.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:44:27.741" endtime="20210830 01:44:36.336"/>
</kw>
<msg timestamp="20210830 01:44:36.337" level="INFO">${result} = {
  "metadata": {},
  "name": "76572-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210830 01:44:27.739" endtime="20210830 01:44:36.337"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:44:36.338" endtime="20210830 01:44:36.338"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:44:36.344" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="76572-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:44:45.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:44:45.453" level="INFO">${output} = {
  "metadata": {},
  "name": "76572-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210830 01:44:36.342" endtime="20210830 01:44:45.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:44:45.455" level="INFO">{
  "metadata": {},
  "name": "76572-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-30T01:44:27.661Z",
  "modificationTime": "2021-08-30T01:44:27.661Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210830 01:44:45.454" endtime="20210830 01:44:45.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:44:45.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:44:45.456" endtime="20210830 01:44:45.459"/>
</kw>
<status status="PASS" starttime="20210830 01:44:36.341" endtime="20210830 01:44:45.459"/>
</kw>
<msg timestamp="20210830 01:44:45.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:44:36.340" endtime="20210830 01:44:45.460"/>
</kw>
<msg timestamp="20210830 01:44:45.460" level="INFO">${result} = {
  "metadata": {},
  "name": "76572-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210830 01:44:36.339" endtime="20210830 01:44:45.460"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:44:45.462" endtime="20210830 01:44:45.463"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:44:45.467" level="INFO">Running command 'ozone sh volume setquota o3:///76572-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:44:53.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:44:53.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:44:45.464" endtime="20210830 01:44:53.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:44:53.355" level="INFO"/>
<status status="PASS" starttime="20210830 01:44:53.354" endtime="20210830 01:44:53.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:44:53.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:44:53.355" endtime="20210830 01:44:53.356"/>
</kw>
<status status="PASS" starttime="20210830 01:44:45.464" endtime="20210830 01:44:53.356"/>
</kw>
<msg timestamp="20210830 01:44:53.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:44:45.463" endtime="20210830 01:44:53.357"/>
</kw>
<status status="PASS" starttime="20210830 01:44:45.463" endtime="20210830 01:44:53.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:44:53.363" level="INFO">Running command 'ozone sh volume info o3:///76572-rpcwport | jq -r '. | select(.name=="76572-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:45:01.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:45:01.691" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:44:53.360" endtime="20210830 01:45:01.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:45:01.694" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210830 01:45:01.692" endtime="20210830 01:45:01.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:45:01.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:45:01.694" endtime="20210830 01:45:01.695"/>
</kw>
<status status="PASS" starttime="20210830 01:44:53.360" endtime="20210830 01:45:01.695"/>
</kw>
<msg timestamp="20210830 01:45:01.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:44:53.359" endtime="20210830 01:45:01.696"/>
</kw>
<msg timestamp="20210830 01:45:01.696" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:44:53.358" endtime="20210830 01:45:01.696"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:45:01.697" endtime="20210830 01:45:01.697"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:45:01.703" level="INFO">Running command 'ozone sh bucket create o3:///76572-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:45:08.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:45:08.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:45:01.700" endtime="20210830 01:45:08.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:45:08.794" level="INFO"/>
<status status="PASS" starttime="20210830 01:45:08.793" endtime="20210830 01:45:08.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:45:08.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:45:08.794" endtime="20210830 01:45:08.795"/>
</kw>
<status status="PASS" starttime="20210830 01:45:01.699" endtime="20210830 01:45:08.796"/>
</kw>
<msg timestamp="20210830 01:45:08.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:45:01.699" endtime="20210830 01:45:08.796"/>
</kw>
<status status="PASS" starttime="20210830 01:45:01.697" endtime="20210830 01:45:08.796"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:45:08.805" level="INFO">Running command 'ozone sh bucket info o3:///76572-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:45:16.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:45:16.787" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210830 01:45:08.800" endtime="20210830 01:45:16.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:45:16.788" level="INFO">DISK</msg>
<status status="PASS" starttime="20210830 01:45:16.787" endtime="20210830 01:45:16.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:45:16.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:45:16.788" endtime="20210830 01:45:16.789"/>
</kw>
<status status="PASS" starttime="20210830 01:45:08.798" endtime="20210830 01:45:16.789"/>
</kw>
<msg timestamp="20210830 01:45:16.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:45:08.798" endtime="20210830 01:45:16.790"/>
</kw>
<msg timestamp="20210830 01:45:16.790" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210830 01:45:08.797" endtime="20210830 01:45:16.790"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:45:16.790" endtime="20210830 01:45:16.791"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:45:16.798" level="INFO">Running command 'ozone sh bucket info o3:///76572-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:45:24.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:45:24.838" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:45:16.794" endtime="20210830 01:45:24.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:45:24.840" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210830 01:45:24.839" endtime="20210830 01:45:24.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:45:24.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:45:24.840" endtime="20210830 01:45:24.841"/>
</kw>
<status status="PASS" starttime="20210830 01:45:16.793" endtime="20210830 01:45:24.842"/>
</kw>
<msg timestamp="20210830 01:45:24.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:45:16.792" endtime="20210830 01:45:24.843"/>
</kw>
<msg timestamp="20210830 01:45:24.843" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:45:16.791" endtime="20210830 01:45:24.843"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:45:24.844" endtime="20210830 01:45:24.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:45:24.851" level="INFO">Running command 'ozone sh bucket info o3:///76572-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:45:31.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:45:31.828" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210830 01:45:24.848" endtime="20210830 01:45:31.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:45:31.829" level="INFO">100</msg>
<status status="PASS" starttime="20210830 01:45:31.828" endtime="20210830 01:45:31.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:45:31.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:45:31.829" endtime="20210830 01:45:31.830"/>
</kw>
<status status="PASS" starttime="20210830 01:45:24.847" endtime="20210830 01:45:31.830"/>
</kw>
<msg timestamp="20210830 01:45:31.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:45:24.847" endtime="20210830 01:45:31.831"/>
</kw>
<msg timestamp="20210830 01:45:31.831" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210830 01:45:24.845" endtime="20210830 01:45:31.831"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:45:31.831" endtime="20210830 01:45:31.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:45:31.837" level="INFO">Running command 'ozone sh bucket setquota o3:///76572-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:45:39.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:45:39.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:45:31.834" endtime="20210830 01:45:39.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:45:39.534" level="INFO"/>
<status status="PASS" starttime="20210830 01:45:39.533" endtime="20210830 01:45:39.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:45:39.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:45:39.534" endtime="20210830 01:45:39.535"/>
</kw>
<status status="PASS" starttime="20210830 01:45:31.833" endtime="20210830 01:45:39.535"/>
</kw>
<msg timestamp="20210830 01:45:39.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:45:31.832" endtime="20210830 01:45:39.535"/>
</kw>
<status status="PASS" starttime="20210830 01:45:31.832" endtime="20210830 01:45:39.535"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:45:39.540" level="INFO">Running command 'ozone sh bucket info o3:///76572-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:45:46.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:45:46.132" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210830 01:45:39.538" endtime="20210830 01:45:46.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:45:46.134" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210830 01:45:46.133" endtime="20210830 01:45:46.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:45:46.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:45:46.134" endtime="20210830 01:45:46.135"/>
</kw>
<status status="PASS" starttime="20210830 01:45:39.537" endtime="20210830 01:45:46.135"/>
</kw>
<msg timestamp="20210830 01:45:46.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:45:39.537" endtime="20210830 01:45:46.135"/>
</kw>
<msg timestamp="20210830 01:45:46.136" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210830 01:45:39.536" endtime="20210830 01:45:46.136"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:45:46.136" endtime="20210830 01:45:46.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:45:46.143" level="INFO">Running command 'ozone sh bucket info o3:///76572-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:45:54.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:45:54.209" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210830 01:45:46.140" endtime="20210830 01:45:54.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:45:54.212" level="INFO">1000</msg>
<status status="PASS" starttime="20210830 01:45:54.210" endtime="20210830 01:45:54.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:45:54.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:45:54.212" endtime="20210830 01:45:54.214"/>
</kw>
<status status="PASS" starttime="20210830 01:45:46.139" endtime="20210830 01:45:54.215"/>
</kw>
<msg timestamp="20210830 01:45:54.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:45:46.138" endtime="20210830 01:45:54.215"/>
</kw>
<msg timestamp="20210830 01:45:54.216" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210830 01:45:46.137" endtime="20210830 01:45:54.216"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:45:54.216" endtime="20210830 01:45:54.218"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:45:54.225" level="INFO">Running command 'ozone sh bucket list o3:///76572-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:46:01.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:46:01.920" level="INFO">${output} = 76572-rpcwport</msg>
<status status="PASS" starttime="20210830 01:45:54.221" endtime="20210830 01:46:01.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:46:01.921" level="INFO">76572-rpcwport</msg>
<status status="PASS" starttime="20210830 01:46:01.921" endtime="20210830 01:46:01.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:46:01.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:46:01.922" endtime="20210830 01:46:01.923"/>
</kw>
<status status="PASS" starttime="20210830 01:45:54.220" endtime="20210830 01:46:01.923"/>
</kw>
<msg timestamp="20210830 01:46:01.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:45:54.220" endtime="20210830 01:46:01.923"/>
</kw>
<msg timestamp="20210830 01:46:01.924" level="INFO">${result} = 76572-rpcwport</msg>
<status status="PASS" starttime="20210830 01:45:54.218" endtime="20210830 01:46:01.924"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:46:01.924" endtime="20210830 01:46:01.925"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:46:01.933" level="INFO">Running command 'ozone sh key put o3:///76572-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:49:14.260" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210830 01:46:01.929" endtime="20210830 01:49:14.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.260" endtime="20210830 01:49:14.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.261" endtime="20210830 01:49:14.261"/>
</kw>
<status status="FAIL" starttime="20210830 01:46:01.928" endtime="20210830 01:49:14.261"/>
</kw>
<msg timestamp="20210830 01:49:14.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210830 01:46:01.928" endtime="20210830 01:49:14.261"/>
</kw>
<status status="FAIL" starttime="20210830 01:46:01.927" endtime="20210830 01:49:14.262"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.262" endtime="20210830 01:49:14.262"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.262" endtime="20210830 01:49:14.262"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.262" endtime="20210830 01:49:14.262"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.263" endtime="20210830 01:49:14.263"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.263" endtime="20210830 01:49:14.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.263" endtime="20210830 01:49:14.263"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.263" endtime="20210830 01:49:14.263"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.263" endtime="20210830 01:49:14.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.264" endtime="20210830 01:49:14.264"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.264" endtime="20210830 01:49:14.264"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.264" endtime="20210830 01:49:14.264"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.264" endtime="20210830 01:49:14.264"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.264" endtime="20210830 01:49:14.265"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.265" endtime="20210830 01:49:14.265"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.265" endtime="20210830 01:49:14.265"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.265" endtime="20210830 01:49:14.265"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.265" endtime="20210830 01:49:14.265"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.266" endtime="20210830 01:49:14.266"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.267" endtime="20210830 01:49:14.267"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.267" endtime="20210830 01:49:14.267"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.267" endtime="20210830 01:49:14.267"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.267" endtime="20210830 01:49:14.267"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.268" endtime="20210830 01:49:14.268"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.268" endtime="20210830 01:49:14.268"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.268" endtime="20210830 01:49:14.268"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.268" endtime="20210830 01:49:14.268"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.268" endtime="20210830 01:49:14.268"/>
</kw>
<status status="FAIL" starttime="20210830 01:46:01.926" endtime="20210830 01:49:14.269"/>
</kw>
<status status="FAIL" starttime="20210830 01:46:01.925" endtime="20210830 01:49:14.269"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.269" endtime="20210830 01:49:14.269"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.269" endtime="20210830 01:49:14.269"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.269" endtime="20210830 01:49:14.270"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.270" endtime="20210830 01:49:14.270"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.270" endtime="20210830 01:49:14.270"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.271" endtime="20210830 01:49:14.271"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.271" endtime="20210830 01:49:14.271"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.272" endtime="20210830 01:49:14.272"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.272" endtime="20210830 01:49:14.272"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.272" endtime="20210830 01:49:14.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.273" endtime="20210830 01:49:14.273"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.273" endtime="20210830 01:49:14.274"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.274" endtime="20210830 01:49:14.274"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.274" endtime="20210830 01:49:14.274"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.274" endtime="20210830 01:49:14.275"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.275" endtime="20210830 01:49:14.275"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.275" endtime="20210830 01:49:14.275"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.275" endtime="20210830 01:49:14.275"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.276" endtime="20210830 01:49:14.276"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.276" endtime="20210830 01:49:14.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.276" endtime="20210830 01:49:14.276"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.276" endtime="20210830 01:49:14.277"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.277" endtime="20210830 01:49:14.277"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:49:14.277" endtime="20210830 01:49:14.277"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.277" endtime="20210830 01:49:14.277"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:49:14.278" endtime="20210830 01:49:14.278"/>
</kw>
<status status="FAIL" starttime="20210830 01:44:14.311" endtime="20210830 01:49:14.278"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210830 01:44:14.259" endtime="20210830 01:49:14.279">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:49:14.288" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:49:14.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:49:14.292" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:49:14.285" endtime="20210830 01:49:14.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:49:14.294" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:49:14.293" endtime="20210830 01:49:14.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:49:14.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:49:14.294" endtime="20210830 01:49:14.295"/>
</kw>
<status status="PASS" starttime="20210830 01:49:14.284" endtime="20210830 01:49:14.296"/>
</kw>
<msg timestamp="20210830 01:49:14.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:49:14.282" endtime="20210830 01:49:14.296"/>
</kw>
<msg timestamp="20210830 01:49:14.297" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:49:14.282" endtime="20210830 01:49:14.297"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:49:14.298" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:49:14.297" endtime="20210830 01:49:14.298"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:49:14.303" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:49:14.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:49:14.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:49:14.300" endtime="20210830 01:49:14.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:49:14.534" level="INFO"/>
<status status="PASS" starttime="20210830 01:49:14.533" endtime="20210830 01:49:14.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:49:14.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:49:14.534" endtime="20210830 01:49:14.535"/>
</kw>
<status status="PASS" starttime="20210830 01:49:14.300" endtime="20210830 01:49:14.535"/>
</kw>
<msg timestamp="20210830 01:49:14.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:49:14.299" endtime="20210830 01:49:14.536"/>
</kw>
<status status="PASS" starttime="20210830 01:49:14.299" endtime="20210830 01:49:14.536"/>
</kw>
<status status="PASS" starttime="20210830 01:49:14.298" endtime="20210830 01:49:14.536"/>
</kw>
<status status="PASS" starttime="20210830 01:49:14.281" endtime="20210830 01:49:14.537"/>
</kw>
<status status="PASS" starttime="20210830 01:49:14.280" endtime="20210830 01:49:14.537"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:49:14.556" level="INFO">Running command 'ozone sh volume info /76572-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:49:22.849" level="INFO">${rc} = 255</msg>
<msg timestamp="20210830 01:49:22.850" level="INFO">${output} = VOLUME_NOT_FOUND Volume 76572-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210830 01:49:14.544" endtime="20210830 01:49:22.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:49:22.853" level="INFO">VOLUME_NOT_FOUND Volume 76572-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210830 01:49:22.851" endtime="20210830 01:49:22.853"/>
</kw>
<msg timestamp="20210830 01:49:22.854" level="INFO">${result} = VOLUME_NOT_FOUND Volume 76572-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210830 01:49:14.542" endtime="20210830 01:49:22.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:49:22.855" endtime="20210830 01:49:22.857"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:49:22.863" level="INFO">Running command 'ozone sh volume create /76572-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:49:31.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:49:31.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:49:22.859" endtime="20210830 01:49:31.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:49:31.253" level="INFO"/>
<status status="PASS" starttime="20210830 01:49:31.252" endtime="20210830 01:49:31.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:49:31.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:49:31.253" endtime="20210830 01:49:31.254"/>
</kw>
<status status="PASS" starttime="20210830 01:49:22.859" endtime="20210830 01:49:31.255"/>
</kw>
<msg timestamp="20210830 01:49:31.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:49:22.858" endtime="20210830 01:49:31.256"/>
</kw>
<msg timestamp="20210830 01:49:31.256" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210830 01:49:22.857" endtime="20210830 01:49:31.256"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:49:31.257" endtime="20210830 01:49:31.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:49:31.266" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="76572-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:49:39.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:49:39.512" level="INFO">${output} = {
  "metadata": {},
  "name": "76572-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210830 01:49:31.262" endtime="20210830 01:49:39.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:49:39.514" level="INFO">{
  "metadata": {},
  "name": "76572-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-30T01:49:31.166Z",
  "modificationTime": "2021-08-30T01:49:31.166Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210830 01:49:39.513" endtime="20210830 01:49:39.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:49:39.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:49:39.514" endtime="20210830 01:49:39.515"/>
</kw>
<status status="PASS" starttime="20210830 01:49:31.261" endtime="20210830 01:49:39.515"/>
</kw>
<msg timestamp="20210830 01:49:39.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:49:31.260" endtime="20210830 01:49:39.515"/>
</kw>
<msg timestamp="20210830 01:49:39.516" level="INFO">${result} = {
  "metadata": {},
  "name": "76572-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210830 01:49:31.258" endtime="20210830 01:49:39.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:49:39.516" endtime="20210830 01:49:39.517"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:49:39.522" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="76572-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:49:48.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:49:48.390" level="INFO">${output} = {
  "metadata": {},
  "name": "76572-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210830 01:49:39.518" endtime="20210830 01:49:48.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:49:48.392" level="INFO">{
  "metadata": {},
  "name": "76572-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-30T01:49:31.166Z",
  "modificationTime": "2021-08-30T01:49:31.166Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210830 01:49:48.391" endtime="20210830 01:49:48.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:49:48.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:49:48.392" endtime="20210830 01:49:48.393"/>
</kw>
<status status="PASS" starttime="20210830 01:49:39.518" endtime="20210830 01:49:48.393"/>
</kw>
<msg timestamp="20210830 01:49:48.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:49:39.518" endtime="20210830 01:49:48.393"/>
</kw>
<msg timestamp="20210830 01:49:48.394" level="INFO">${result} = {
  "metadata": {},
  "name": "76572-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210830 01:49:39.517" endtime="20210830 01:49:48.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210830 01:49:48.394" endtime="20210830 01:49:48.394"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:49:48.399" level="INFO">Running command 'ozone sh volume setquota /76572-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:49:54.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:49:54.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:49:48.396" endtime="20210830 01:49:54.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:49:54.254" level="INFO"/>
<status status="PASS" starttime="20210830 01:49:54.253" endtime="20210830 01:49:54.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:49:54.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:49:54.254" endtime="20210830 01:49:54.255"/>
</kw>
<status status="PASS" starttime="20210830 01:49:48.396" endtime="20210830 01:49:54.256"/>
</kw>
<msg timestamp="20210830 01:49:54.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:49:48.395" endtime="20210830 01:49:54.257"/>
</kw>
<status status="PASS" starttime="20210830 01:49:48.395" endtime="20210830 01:49:54.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:49:54.263" level="INFO">Running command 'ozone sh volume info /76572-rpcwoscheme | jq -r '. | select(.name=="76572-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:50:00.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:50:00.779" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:49:54.260" endtime="20210830 01:50:00.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:50:00.780" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210830 01:50:00.779" endtime="20210830 01:50:00.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:50:00.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:50:00.781" endtime="20210830 01:50:00.781"/>
</kw>
<status status="PASS" starttime="20210830 01:49:54.260" endtime="20210830 01:50:00.782"/>
</kw>
<msg timestamp="20210830 01:50:00.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:49:54.259" endtime="20210830 01:50:00.782"/>
</kw>
<msg timestamp="20210830 01:50:00.783" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:49:54.258" endtime="20210830 01:50:00.783"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:50:00.783" endtime="20210830 01:50:00.783"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:50:00.789" level="INFO">Running command 'ozone sh bucket create /76572-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:50:08.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:50:08.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:50:00.786" endtime="20210830 01:50:08.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:50:08.223" level="INFO"/>
<status status="PASS" starttime="20210830 01:50:08.222" endtime="20210830 01:50:08.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:50:08.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:50:08.223" endtime="20210830 01:50:08.224"/>
</kw>
<status status="PASS" starttime="20210830 01:50:00.785" endtime="20210830 01:50:08.224"/>
</kw>
<msg timestamp="20210830 01:50:08.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:50:00.785" endtime="20210830 01:50:08.225"/>
</kw>
<status status="PASS" starttime="20210830 01:50:00.784" endtime="20210830 01:50:08.225"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:50:08.230" level="INFO">Running command 'ozone sh bucket info /76572-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:50:16.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:50:16.851" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210830 01:50:08.228" endtime="20210830 01:50:16.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:50:16.852" level="INFO">DISK</msg>
<status status="PASS" starttime="20210830 01:50:16.851" endtime="20210830 01:50:16.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:50:16.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:50:16.852" endtime="20210830 01:50:16.853"/>
</kw>
<status status="PASS" starttime="20210830 01:50:08.227" endtime="20210830 01:50:16.853"/>
</kw>
<msg timestamp="20210830 01:50:16.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:50:08.226" endtime="20210830 01:50:16.854"/>
</kw>
<msg timestamp="20210830 01:50:16.854" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210830 01:50:08.225" endtime="20210830 01:50:16.854"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:50:16.854" endtime="20210830 01:50:16.855"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:50:16.859" level="INFO">Running command 'ozone sh bucket info /76572-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:50:23.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:50:23.830" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:50:16.857" endtime="20210830 01:50:23.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:50:23.832" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210830 01:50:23.831" endtime="20210830 01:50:23.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:50:23.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:50:23.833" endtime="20210830 01:50:23.834"/>
</kw>
<status status="PASS" starttime="20210830 01:50:16.856" endtime="20210830 01:50:23.834"/>
</kw>
<msg timestamp="20210830 01:50:23.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:50:16.856" endtime="20210830 01:50:23.835"/>
</kw>
<msg timestamp="20210830 01:50:23.835" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210830 01:50:16.855" endtime="20210830 01:50:23.835"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:50:23.836" endtime="20210830 01:50:23.837"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:50:23.842" level="INFO">Running command 'ozone sh bucket info /76572-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:50:30.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:50:30.541" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210830 01:50:23.839" endtime="20210830 01:50:30.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:50:30.543" level="INFO">100</msg>
<status status="PASS" starttime="20210830 01:50:30.543" endtime="20210830 01:50:30.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:50:30.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:50:30.544" endtime="20210830 01:50:30.547"/>
</kw>
<status status="PASS" starttime="20210830 01:50:23.839" endtime="20210830 01:50:30.548"/>
</kw>
<msg timestamp="20210830 01:50:30.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:50:23.838" endtime="20210830 01:50:30.549"/>
</kw>
<msg timestamp="20210830 01:50:30.550" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210830 01:50:23.837" endtime="20210830 01:50:30.550"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:50:30.550" endtime="20210830 01:50:30.551"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:50:30.556" level="INFO">Running command 'ozone sh bucket setquota /76572-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:50:38.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:50:38.917" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:50:30.554" endtime="20210830 01:50:38.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:50:38.919" level="INFO"/>
<status status="PASS" starttime="20210830 01:50:38.918" endtime="20210830 01:50:38.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:50:38.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:50:38.920" endtime="20210830 01:50:38.920"/>
</kw>
<status status="PASS" starttime="20210830 01:50:30.553" endtime="20210830 01:50:38.921"/>
</kw>
<msg timestamp="20210830 01:50:38.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:50:30.553" endtime="20210830 01:50:38.921"/>
</kw>
<status status="PASS" starttime="20210830 01:50:30.551" endtime="20210830 01:50:38.922"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:50:38.929" level="INFO">Running command 'ozone sh bucket info /76572-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:50:45.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:50:45.878" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210830 01:50:38.926" endtime="20210830 01:50:45.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:50:45.879" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210830 01:50:45.878" endtime="20210830 01:50:45.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:50:45.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:50:45.879" endtime="20210830 01:50:45.880"/>
</kw>
<status status="PASS" starttime="20210830 01:50:38.925" endtime="20210830 01:50:45.880"/>
</kw>
<msg timestamp="20210830 01:50:45.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:50:38.924" endtime="20210830 01:50:45.881"/>
</kw>
<msg timestamp="20210830 01:50:45.881" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210830 01:50:38.922" endtime="20210830 01:50:45.881"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:50:45.882" endtime="20210830 01:50:45.882"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:50:45.887" level="INFO">Running command 'ozone sh bucket info /76572-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:50:53.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:50:53.910" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210830 01:50:45.884" endtime="20210830 01:50:53.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:50:53.913" level="INFO">1000</msg>
<status status="PASS" starttime="20210830 01:50:53.911" endtime="20210830 01:50:53.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:50:53.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:50:53.914" endtime="20210830 01:50:53.917"/>
</kw>
<status status="PASS" starttime="20210830 01:50:45.884" endtime="20210830 01:50:53.917"/>
</kw>
<msg timestamp="20210830 01:50:53.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:50:45.883" endtime="20210830 01:50:53.918"/>
</kw>
<msg timestamp="20210830 01:50:53.919" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210830 01:50:45.882" endtime="20210830 01:50:53.919"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:50:53.919" endtime="20210830 01:50:53.920"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:50:53.930" level="INFO">Running command 'ozone sh bucket list /76572-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:51:01.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:51:01.182" level="INFO">${output} = 76572-rpcwoscheme</msg>
<status status="PASS" starttime="20210830 01:50:53.926" endtime="20210830 01:51:01.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:51:01.183" level="INFO">76572-rpcwoscheme</msg>
<status status="PASS" starttime="20210830 01:51:01.182" endtime="20210830 01:51:01.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:51:01.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:51:01.183" endtime="20210830 01:51:01.184"/>
</kw>
<status status="PASS" starttime="20210830 01:50:53.924" endtime="20210830 01:51:01.185"/>
</kw>
<msg timestamp="20210830 01:51:01.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:50:53.923" endtime="20210830 01:51:01.185"/>
</kw>
<msg timestamp="20210830 01:51:01.185" level="INFO">${result} = 76572-rpcwoscheme</msg>
<status status="PASS" starttime="20210830 01:50:53.921" endtime="20210830 01:51:01.185"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210830 01:51:01.185" endtime="20210830 01:51:01.186"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:51:01.191" level="INFO">Running command 'ozone sh key put /76572-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:54:10.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:54:10.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:51:01.189" endtime="20210830 01:54:10.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:54:10.461" level="INFO"/>
<status status="PASS" starttime="20210830 01:54:10.460" endtime="20210830 01:54:10.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:54:10.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:54:10.462" endtime="20210830 01:54:10.463"/>
</kw>
<status status="PASS" starttime="20210830 01:51:01.189" endtime="20210830 01:54:10.463"/>
</kw>
<msg timestamp="20210830 01:54:10.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:51:01.188" endtime="20210830 01:54:10.463"/>
</kw>
<status status="PASS" starttime="20210830 01:51:01.187" endtime="20210830 01:54:10.464"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:54:10.469" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:54:10.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:54:10.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:54:10.466" endtime="20210830 01:54:10.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:54:10.474" level="INFO"/>
<status status="PASS" starttime="20210830 01:54:10.473" endtime="20210830 01:54:10.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:54:10.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:54:10.474" endtime="20210830 01:54:10.475"/>
</kw>
<status status="PASS" starttime="20210830 01:54:10.465" endtime="20210830 01:54:10.475"/>
</kw>
<msg timestamp="20210830 01:54:10.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:54:10.465" endtime="20210830 01:54:10.476"/>
</kw>
<status status="PASS" starttime="20210830 01:54:10.464" endtime="20210830 01:54:10.476"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:54:10.481" level="INFO">Running command 'ozone sh key get /76572-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:54:14.281" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210830 01:54:10.479" endtime="20210830 01:54:14.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.281" endtime="20210830 01:54:14.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.282" endtime="20210830 01:54:14.282"/>
</kw>
<status status="FAIL" starttime="20210830 01:54:10.479" endtime="20210830 01:54:14.282"/>
</kw>
<msg timestamp="20210830 01:54:14.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210830 01:54:10.477" endtime="20210830 01:54:14.284"/>
</kw>
<status status="FAIL" starttime="20210830 01:54:10.476" endtime="20210830 01:54:14.285"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.287" endtime="20210830 01:54:14.287"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.288" endtime="20210830 01:54:14.288"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.289" endtime="20210830 01:54:14.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.289" endtime="20210830 01:54:14.289"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.289" endtime="20210830 01:54:14.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.290" endtime="20210830 01:54:14.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.290" endtime="20210830 01:54:14.290"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.290" endtime="20210830 01:54:14.290"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.290" endtime="20210830 01:54:14.290"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.290" endtime="20210830 01:54:14.290"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.291" endtime="20210830 01:54:14.291"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.291" endtime="20210830 01:54:14.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.291" endtime="20210830 01:54:14.291"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.291" endtime="20210830 01:54:14.291"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.291" endtime="20210830 01:54:14.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.292" endtime="20210830 01:54:14.292"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.292" endtime="20210830 01:54:14.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.292" endtime="20210830 01:54:14.292"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.292" endtime="20210830 01:54:14.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.292" endtime="20210830 01:54:14.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.298" endtime="20210830 01:54:14.308"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.309" endtime="20210830 01:54:14.309"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.313" endtime="20210830 01:54:14.314"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.314" endtime="20210830 01:54:14.314"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.315" endtime="20210830 01:54:14.315"/>
</kw>
<status status="FAIL" starttime="20210830 01:51:01.187" endtime="20210830 01:54:14.317"/>
</kw>
<status status="FAIL" starttime="20210830 01:51:01.186" endtime="20210830 01:54:14.317"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.317" endtime="20210830 01:54:14.317"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.317" endtime="20210830 01:54:14.317"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.322" endtime="20210830 01:54:14.322"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.322" endtime="20210830 01:54:14.322"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.327" endtime="20210830 01:54:14.327"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.328" endtime="20210830 01:54:14.328"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.329" endtime="20210830 01:54:14.332"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.333" endtime="20210830 01:54:14.334"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.334" endtime="20210830 01:54:14.334"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.334" endtime="20210830 01:54:14.334"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.335" endtime="20210830 01:54:14.335"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.337" endtime="20210830 01:54:14.337"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.337" endtime="20210830 01:54:14.337"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.337" endtime="20210830 01:54:14.337"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.337" endtime="20210830 01:54:14.337"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.338" endtime="20210830 01:54:14.338"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.338" endtime="20210830 01:54:14.338"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.338" endtime="20210830 01:54:14.338"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.338" endtime="20210830 01:54:14.338"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.349" endtime="20210830 01:54:14.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.349" endtime="20210830 01:54:14.349"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.349" endtime="20210830 01:54:14.350"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.350" endtime="20210830 01:54:14.350"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210830 01:54:14.350" endtime="20210830 01:54:14.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.350" endtime="20210830 01:54:14.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210830 01:54:14.350" endtime="20210830 01:54:14.350"/>
</kw>
<status status="FAIL" starttime="20210830 01:49:14.537" endtime="20210830 01:54:14.351"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210830 01:49:14.279" endtime="20210830 01:54:14.351">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210830 01:29:05.831" endtime="20210830 01:54:14.361"/>
</suite>
<status status="FAIL" starttime="20210830 01:04:31.192" endtime="20210830 01:54:14.386"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:04:25.539" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:04:25.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:04:25.544" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210830 01:04:25.535" endtime="20210830 01:04:25.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:04:25.545" level="INFO">scm</msg>
<status status="PASS" starttime="20210830 01:04:25.544" endtime="20210830 01:04:25.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:04:25.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:04:25.545" endtime="20210830 01:04:25.546"/>
</kw>
<status status="PASS" starttime="20210830 01:04:25.534" endtime="20210830 01:04:25.547"/>
</kw>
<msg timestamp="20210830 01:04:25.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:04:25.534" endtime="20210830 01:04:25.547"/>
</kw>
<msg timestamp="20210830 01:04:25.547" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210830 01:04:25.533" endtime="20210830 01:04:25.547"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210830 01:04:25.548" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210830 01:04:25.547" endtime="20210830 01:04:25.548"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210830 01:04:25.553" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210830 01:04:25.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210830 01:04:25.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210830 01:04:25.551" endtime="20210830 01:04:25.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210830 01:04:25.563" level="INFO"/>
<status status="PASS" starttime="20210830 01:04:25.561" endtime="20210830 01:04:25.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210830 01:04:25.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210830 01:04:25.563" endtime="20210830 01:04:25.564"/>
</kw>
<status status="PASS" starttime="20210830 01:04:25.550" endtime="20210830 01:04:25.564"/>
</kw>
<msg timestamp="20210830 01:04:25.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210830 01:04:25.550" endtime="20210830 01:04:25.565"/>
</kw>
<status status="PASS" starttime="20210830 01:04:25.549" endtime="20210830 01:04:25.565"/>
</kw>
<status status="PASS" starttime="20210830 01:04:25.548" endtime="20210830 01:04:25.565"/>
</kw>
<status status="PASS" starttime="20210830 01:04:25.532" endtime="20210830 01:04:25.565"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210830 01:04:25.532" endtime="20210830 01:04:25.566"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210830 01:04:25.464" endtime="20210830 01:04:25.567"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2983297"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
