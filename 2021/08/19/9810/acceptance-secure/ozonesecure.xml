<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210819 06:08:54.667" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:19:23.071" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:19:23.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:19:23.075" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:19:23.067" endtime="20210819 05:19:23.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:19:23.076" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:19:23.076" endtime="20210819 05:19:23.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:19:23.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:19:23.077" endtime="20210819 05:19:23.077"/>
</kw>
<status status="PASS" starttime="20210819 05:19:23.067" endtime="20210819 05:19:23.078"/>
</kw>
<msg timestamp="20210819 05:19:23.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:19:23.067" endtime="20210819 05:19:23.078"/>
</kw>
<msg timestamp="20210819 05:19:23.078" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210819 05:19:23.066" endtime="20210819 05:19:23.078"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:19:23.082" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:19:23.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:19:23.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:19:23.080" endtime="20210819 05:19:23.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:19:23.090" level="INFO"/>
<status status="PASS" starttime="20210819 05:19:23.090" endtime="20210819 05:19:23.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:19:23.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:19:23.090" endtime="20210819 05:19:23.091"/>
</kw>
<status status="PASS" starttime="20210819 05:19:23.080" endtime="20210819 05:19:23.091"/>
</kw>
<msg timestamp="20210819 05:19:23.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:19:23.079" endtime="20210819 05:19:23.092"/>
</kw>
<status status="PASS" starttime="20210819 05:19:23.079" endtime="20210819 05:19:23.092"/>
</kw>
<status status="PASS" starttime="20210819 05:19:23.078" endtime="20210819 05:19:23.092"/>
</kw>
<status status="PASS" starttime="20210819 05:19:23.066" endtime="20210819 05:19:23.092"/>
</kw>
<status status="PASS" starttime="20210819 05:19:23.065" endtime="20210819 05:19:23.092"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:19:23.098" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:19:23.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:19:23.218" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210819 05:19:23.094" endtime="20210819 05:19:23.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:19:23.220" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Thu, 19 Aug 2021 05:19:23 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCpCFv3HTk3Wyu7P8xpWwihaA1EQJkQiUBr7fUCHHdMFtwpqZk+pv2Fo7TpbOjrzDEAp/1MPNFqMFVDovG8OGQscLo
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1629386363207&amp;s=woigpw6jxE/OVRDf1cYkDUPxVyQ0xldPwXdDUL2O1io="; Path=/; HttpOnly
Last-Modified: Thu, 19 Aug 2021 05:02:52 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210819 05:19:23.219" endtime="20210819 05:19:23.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:19:23.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:19:23.220" endtime="20210819 05:19:23.221"/>
</kw>
<status status="PASS" starttime="20210819 05:19:23.093" endtime="20210819 05:19:23.221"/>
</kw>
<msg timestamp="20210819 05:19:23.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:19:23.093" endtime="20210819 05:19:23.221"/>
</kw>
<msg timestamp="20210819 05:19:23.222" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210819 05:19:23.092" endtime="20210819 05:19:23.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:19:23.222" endtime="20210819 05:19:23.222"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210819 05:19:23.064" endtime="20210819 05:19:23.223"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:19:23.230" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:19:23.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:19:23.234" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:19:23.228" endtime="20210819 05:19:23.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:19:23.235" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:19:23.234" endtime="20210819 05:19:23.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:19:23.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:19:23.235" endtime="20210819 05:19:23.236"/>
</kw>
<status status="PASS" starttime="20210819 05:19:23.228" endtime="20210819 05:19:23.236"/>
</kw>
<msg timestamp="20210819 05:19:23.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:19:23.227" endtime="20210819 05:19:23.237"/>
</kw>
<msg timestamp="20210819 05:19:23.237" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:19:23.227" endtime="20210819 05:19:23.237"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:19:23.239" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:19:23.237" endtime="20210819 05:19:23.239"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:19:23.244" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:19:23.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:19:23.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:19:23.241" endtime="20210819 05:19:23.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:19:23.252" level="INFO"/>
<status status="PASS" starttime="20210819 05:19:23.251" endtime="20210819 05:19:23.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:19:23.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:19:23.252" endtime="20210819 05:19:23.252"/>
</kw>
<status status="PASS" starttime="20210819 05:19:23.241" endtime="20210819 05:19:23.253"/>
</kw>
<msg timestamp="20210819 05:19:23.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:19:23.240" endtime="20210819 05:19:23.253"/>
</kw>
<status status="PASS" starttime="20210819 05:19:23.240" endtime="20210819 05:19:23.253"/>
</kw>
<status status="PASS" starttime="20210819 05:19:23.239" endtime="20210819 05:19:23.254"/>
</kw>
<status status="PASS" starttime="20210819 05:19:23.226" endtime="20210819 05:19:23.254"/>
</kw>
<status status="PASS" starttime="20210819 05:19:23.226" endtime="20210819 05:19:23.254"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:19:23.258" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:24:23.225" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210819 05:19:23.256" endtime="20210819 05:24:23.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210819 05:24:23.226" endtime="20210819 05:24:23.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210819 05:24:23.226" endtime="20210819 05:24:23.226"/>
</kw>
<status status="FAIL" starttime="20210819 05:19:23.255" endtime="20210819 05:24:23.227"/>
</kw>
<msg timestamp="20210819 05:24:23.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210819 05:19:23.255" endtime="20210819 05:24:23.227"/>
</kw>
<status status="FAIL" starttime="20210819 05:19:23.254" endtime="20210819 05:24:23.227"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210819 05:24:23.227" endtime="20210819 05:24:23.227"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 05:24:23.228" endtime="20210819 05:24:23.228"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210819 05:19:23.225" endtime="20210819 05:24:23.228">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210819 05:19:23.025" endtime="20210819 05:24:23.230"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:24:23.243" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:24:26.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:24:26.274" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210819 05:24:23.240" endtime="20210819 05:24:26.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:24:26.275" level="INFO">om</msg>
<status status="PASS" starttime="20210819 05:24:26.274" endtime="20210819 05:24:26.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:24:26.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:24:26.275" endtime="20210819 05:24:26.276"/>
</kw>
<status status="PASS" starttime="20210819 05:24:23.239" endtime="20210819 05:24:26.276"/>
</kw>
<msg timestamp="20210819 05:24:26.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:24:23.239" endtime="20210819 05:24:26.277"/>
</kw>
<msg timestamp="20210819 05:24:26.277" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210819 05:24:23.238" endtime="20210819 05:24:26.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:24:26.278" endtime="20210819 05:24:26.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:24:26.283" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:24:29.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:24:29.090" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210819 05:24:26.281" endtime="20210819 05:24:29.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:24:29.092" level="INFO">om</msg>
<status status="PASS" starttime="20210819 05:24:29.091" endtime="20210819 05:24:29.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:24:29.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:24:29.092" endtime="20210819 05:24:29.093"/>
</kw>
<status status="PASS" starttime="20210819 05:24:26.280" endtime="20210819 05:24:29.095"/>
</kw>
<msg timestamp="20210819 05:24:29.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:24:26.279" endtime="20210819 05:24:29.096"/>
</kw>
<msg timestamp="20210819 05:24:29.096" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210819 05:24:26.278" endtime="20210819 05:24:29.096"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:24:29.096" endtime="20210819 05:24:29.097"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210819 05:24:23.237" endtime="20210819 05:24:29.097"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:24:29.103" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:24:31.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:24:31.980" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:24:29.100" endtime="20210819 05:24:31.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:24:31.981" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:24:31.981" endtime="20210819 05:24:31.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:24:31.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:24:31.982" endtime="20210819 05:24:31.982"/>
</kw>
<status status="PASS" starttime="20210819 05:24:29.100" endtime="20210819 05:24:31.983"/>
</kw>
<msg timestamp="20210819 05:24:31.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:24:29.099" endtime="20210819 05:24:31.983"/>
</kw>
<msg timestamp="20210819 05:24:31.983" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210819 05:24:29.099" endtime="20210819 05:24:31.983"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:24:31.984" endtime="20210819 05:24:31.984"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:24:31.988" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:24:35.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:24:35.140" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:24:31.986" endtime="20210819 05:24:35.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:24:35.141" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:24:35.141" endtime="20210819 05:24:35.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:24:35.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:24:35.142" endtime="20210819 05:24:35.142"/>
</kw>
<status status="PASS" starttime="20210819 05:24:31.985" endtime="20210819 05:24:35.143"/>
</kw>
<msg timestamp="20210819 05:24:35.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:24:31.985" endtime="20210819 05:24:35.143"/>
</kw>
<msg timestamp="20210819 05:24:35.143" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210819 05:24:31.984" endtime="20210819 05:24:35.143"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:24:35.143" endtime="20210819 05:24:35.144"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210819 05:24:29.098" endtime="20210819 05:24:35.144"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:24:35.149" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:24:37.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:24:37.809" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210819 05:24:35.147" endtime="20210819 05:24:37.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:24:37.810" level="INFO">om</msg>
<status status="PASS" starttime="20210819 05:24:37.810" endtime="20210819 05:24:37.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:24:37.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:24:37.811" endtime="20210819 05:24:37.812"/>
</kw>
<status status="PASS" starttime="20210819 05:24:35.147" endtime="20210819 05:24:37.812"/>
</kw>
<msg timestamp="20210819 05:24:37.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:24:35.146" endtime="20210819 05:24:37.812"/>
</kw>
<msg timestamp="20210819 05:24:37.813" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210819 05:24:35.146" endtime="20210819 05:24:37.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:24:37.813" endtime="20210819 05:24:37.813"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:24:37.814" endtime="20210819 05:24:37.814"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:24:37.822" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:24:40.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:24:40.648" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210819 05:24:37.819" endtime="20210819 05:24:40.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:24:40.652" level="INFO">om</msg>
<status status="PASS" starttime="20210819 05:24:40.650" endtime="20210819 05:24:40.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:24:40.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:24:40.653" endtime="20210819 05:24:40.655"/>
</kw>
<status status="PASS" starttime="20210819 05:24:37.817" endtime="20210819 05:24:40.656"/>
</kw>
<msg timestamp="20210819 05:24:40.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:24:37.816" endtime="20210819 05:24:40.657"/>
</kw>
<msg timestamp="20210819 05:24:40.657" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210819 05:24:37.814" endtime="20210819 05:24:40.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:24:40.658" endtime="20210819 05:24:40.660"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:24:40.660" endtime="20210819 05:24:40.662"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210819 05:24:35.145" endtime="20210819 05:24:40.662"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:24:40.669" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:24:43.274" level="INFO">${rc} = 255</msg>
<msg timestamp="20210819 05:24:43.274" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210819 05:24:40.666" endtime="20210819 05:24:43.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:24:43.275" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210819 05:24:43.275" endtime="20210819 05:24:43.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:24:43.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:24:43.275" endtime="20210819 05:24:43.276"/>
</kw>
<msg timestamp="20210819 05:24:43.276" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210819 05:24:40.665" endtime="20210819 05:24:43.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:24:43.277" endtime="20210819 05:24:43.277"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:24:43.281" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:24:45.823" level="INFO">${rc} = 255</msg>
<msg timestamp="20210819 05:24:45.823" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210819 05:24:43.278" endtime="20210819 05:24:45.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:24:45.825" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210819 05:24:45.824" endtime="20210819 05:24:45.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:24:45.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:24:45.825" endtime="20210819 05:24:45.826"/>
</kw>
<msg timestamp="20210819 05:24:45.826" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210819 05:24:43.277" endtime="20210819 05:24:45.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:24:45.826" endtime="20210819 05:24:45.827"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210819 05:24:40.664" endtime="20210819 05:24:45.827"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210819 05:24:23.232" endtime="20210819 05:24:45.829"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210819 05:24:45.853" level="INFO">${random} = 80069</msg>
<status status="PASS" starttime="20210819 05:24:45.853" endtime="20210819 05:24:45.853"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:24:45.855" level="INFO">${source} = 80069-source</msg>
<status status="PASS" starttime="20210819 05:24:45.854" endtime="20210819 05:24:45.856"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:24:45.858" level="INFO">${target} = 80069-target</msg>
<status status="PASS" starttime="20210819 05:24:45.856" endtime="20210819 05:24:45.858"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:24:45.861" level="INFO">Running command 'ozone sh volume create 80069-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:24:53.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:24:53.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:24:45.859" endtime="20210819 05:24:53.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:24:53.182" level="INFO"/>
<status status="PASS" starttime="20210819 05:24:53.181" endtime="20210819 05:24:53.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:24:53.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:24:53.182" endtime="20210819 05:24:53.183"/>
</kw>
<status status="PASS" starttime="20210819 05:24:45.859" endtime="20210819 05:24:53.183"/>
</kw>
<msg timestamp="20210819 05:24:53.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:24:45.858" endtime="20210819 05:24:53.183"/>
</kw>
<status status="PASS" starttime="20210819 05:24:45.858" endtime="20210819 05:24:53.184"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:24:53.189" level="INFO">Running command 'ozone sh volume create 80069-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:25:00.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:25:00.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:24:53.186" endtime="20210819 05:25:00.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:25:00.505" level="INFO"/>
<status status="PASS" starttime="20210819 05:25:00.505" endtime="20210819 05:25:00.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:25:00.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:25:00.506" endtime="20210819 05:25:00.506"/>
</kw>
<status status="PASS" starttime="20210819 05:24:53.185" endtime="20210819 05:25:00.506"/>
</kw>
<msg timestamp="20210819 05:25:00.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:24:53.185" endtime="20210819 05:25:00.507"/>
</kw>
<status status="PASS" starttime="20210819 05:24:53.184" endtime="20210819 05:25:00.507"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:25:00.514" level="INFO">Running command 'ozone sh bucket create 80069-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:25:06.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:25:06.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:25:00.511" endtime="20210819 05:25:06.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:25:06.521" level="INFO"/>
<status status="PASS" starttime="20210819 05:25:06.520" endtime="20210819 05:25:06.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:25:06.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:25:06.521" endtime="20210819 05:25:06.521"/>
</kw>
<status status="PASS" starttime="20210819 05:25:00.511" endtime="20210819 05:25:06.522"/>
</kw>
<msg timestamp="20210819 05:25:06.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:25:00.509" endtime="20210819 05:25:06.522"/>
</kw>
<status status="PASS" starttime="20210819 05:25:00.509" endtime="20210819 05:25:06.522"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:25:06.526" level="INFO">Running command 'ozone sh key put 80069-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:28:17.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:28:17.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:25:06.524" endtime="20210819 05:28:17.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:28:17.053" level="INFO"/>
<status status="PASS" starttime="20210819 05:28:17.053" endtime="20210819 05:28:17.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:28:17.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:28:17.053" endtime="20210819 05:28:17.054"/>
</kw>
<status status="PASS" starttime="20210819 05:25:06.523" endtime="20210819 05:28:17.054"/>
</kw>
<msg timestamp="20210819 05:28:17.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:25:06.523" endtime="20210819 05:28:17.055"/>
</kw>
<status status="PASS" starttime="20210819 05:25:06.522" endtime="20210819 05:28:17.055"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:28:17.059" level="INFO">Running command 'ozone sh bucket create 80069-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:28:25.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:28:25.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:28:17.057" endtime="20210819 05:28:25.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:28:25.103" level="INFO"/>
<status status="PASS" starttime="20210819 05:28:25.103" endtime="20210819 05:28:25.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:28:25.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:28:25.104" endtime="20210819 05:28:25.105"/>
</kw>
<status status="PASS" starttime="20210819 05:28:17.056" endtime="20210819 05:28:25.105"/>
</kw>
<msg timestamp="20210819 05:28:25.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:28:17.056" endtime="20210819 05:28:25.106"/>
</kw>
<status status="PASS" starttime="20210819 05:28:17.055" endtime="20210819 05:28:25.106"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:28:25.112" level="INFO">Running command 'ozone sh bucket link 80069-source/readable-bucket 80069-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:28:31.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:28:31.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:28:25.109" endtime="20210819 05:28:31.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:28:31.231" level="INFO"/>
<status status="PASS" starttime="20210819 05:28:31.230" endtime="20210819 05:28:31.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:28:31.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:28:31.231" endtime="20210819 05:28:31.231"/>
</kw>
<status status="PASS" starttime="20210819 05:28:25.108" endtime="20210819 05:28:31.232"/>
</kw>
<msg timestamp="20210819 05:28:31.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:28:25.107" endtime="20210819 05:28:31.232"/>
</kw>
<status status="PASS" starttime="20210819 05:28:25.106" endtime="20210819 05:28:31.232"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:28:31.236" level="INFO">Running command 'ozone sh bucket link 80069-source/readable-bucket 80069-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:28:37.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:28:37.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:28:31.234" endtime="20210819 05:28:37.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:28:37.310" level="INFO"/>
<status status="PASS" starttime="20210819 05:28:37.310" endtime="20210819 05:28:37.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:28:37.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:28:37.310" endtime="20210819 05:28:37.311"/>
</kw>
<status status="PASS" starttime="20210819 05:28:31.233" endtime="20210819 05:28:37.311"/>
</kw>
<msg timestamp="20210819 05:28:37.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:28:31.233" endtime="20210819 05:28:37.312"/>
</kw>
<status status="PASS" starttime="20210819 05:28:31.232" endtime="20210819 05:28:37.312"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:28:37.324" level="INFO">Running command 'ozone sh bucket link 80069-source/unreadable-bucket 80069-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:28:44.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:28:44.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:28:37.322" endtime="20210819 05:28:44.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:28:44.946" level="INFO"/>
<status status="PASS" starttime="20210819 05:28:44.946" endtime="20210819 05:28:44.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:28:44.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:28:44.946" endtime="20210819 05:28:44.947"/>
</kw>
<status status="PASS" starttime="20210819 05:28:37.318" endtime="20210819 05:28:44.947"/>
</kw>
<msg timestamp="20210819 05:28:44.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:28:37.317" endtime="20210819 05:28:44.947"/>
</kw>
<status status="PASS" starttime="20210819 05:28:37.312" endtime="20210819 05:28:44.948"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:28:44.952" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 80069-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:28:52.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:28:52.204" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:28:44.950" endtime="20210819 05:28:52.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:28:52.206" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:28:52.205" endtime="20210819 05:28:52.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:28:52.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:28:52.207" endtime="20210819 05:28:52.208"/>
</kw>
<status status="PASS" starttime="20210819 05:28:44.949" endtime="20210819 05:28:52.209"/>
</kw>
<msg timestamp="20210819 05:28:52.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:28:44.948" endtime="20210819 05:28:52.209"/>
</kw>
<status status="PASS" starttime="20210819 05:28:44.948" endtime="20210819 05:28:52.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:28:52.215" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 80069-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:28:58.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:28:58.881" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:28:52.213" endtime="20210819 05:28:58.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:28:58.882" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:28:58.882" endtime="20210819 05:28:58.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:28:58.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:28:58.883" endtime="20210819 05:28:58.883"/>
</kw>
<status status="PASS" starttime="20210819 05:28:52.212" endtime="20210819 05:28:58.884"/>
</kw>
<msg timestamp="20210819 05:28:58.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:28:52.212" endtime="20210819 05:28:58.884"/>
</kw>
<status status="PASS" starttime="20210819 05:28:52.210" endtime="20210819 05:28:58.884"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:28:58.887" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 80069-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:29:04.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:29:04.664" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:28:58.886" endtime="20210819 05:29:04.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:29:04.665" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:29:04.665" endtime="20210819 05:29:04.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:29:04.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:29:04.666" endtime="20210819 05:29:04.666"/>
</kw>
<status status="PASS" starttime="20210819 05:28:58.885" endtime="20210819 05:29:04.667"/>
</kw>
<msg timestamp="20210819 05:29:04.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:28:58.885" endtime="20210819 05:29:04.667"/>
</kw>
<status status="PASS" starttime="20210819 05:28:58.884" endtime="20210819 05:29:04.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:29:04.672" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 80069-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:29:10.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:29:10.611" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:29:04.669" endtime="20210819 05:29:10.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:29:10.612" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:29:10.611" endtime="20210819 05:29:10.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:29:10.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:29:10.612" endtime="20210819 05:29:10.613"/>
</kw>
<status status="PASS" starttime="20210819 05:29:04.668" endtime="20210819 05:29:10.613"/>
</kw>
<msg timestamp="20210819 05:29:10.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:29:04.668" endtime="20210819 05:29:10.614"/>
</kw>
<status status="PASS" starttime="20210819 05:29:04.667" endtime="20210819 05:29:10.614"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:29:10.619" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 80069-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:29:16.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:29:16.202" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:29:10.615" endtime="20210819 05:29:16.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:29:16.203" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:29:16.202" endtime="20210819 05:29:16.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:29:16.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:29:16.204" endtime="20210819 05:29:16.204"/>
</kw>
<status status="PASS" starttime="20210819 05:29:10.615" endtime="20210819 05:29:16.205"/>
</kw>
<msg timestamp="20210819 05:29:16.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:29:10.615" endtime="20210819 05:29:16.205"/>
</kw>
<status status="PASS" starttime="20210819 05:29:10.614" endtime="20210819 05:29:16.206"/>
</kw>
<status status="PASS" starttime="20210819 05:25:00.508" endtime="20210819 05:29:16.206"/>
</kw>
<status status="PASS" starttime="20210819 05:25:00.508" endtime="20210819 05:29:16.206"/>
</kw>
<status status="PASS" starttime="20210819 05:24:45.852" endtime="20210819 05:29:16.206"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:29:16.214" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:29:16.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:29:16.220" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:29:16.211" endtime="20210819 05:29:16.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:29:16.222" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:29:16.221" endtime="20210819 05:29:16.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:29:16.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:29:16.222" endtime="20210819 05:29:16.224"/>
</kw>
<status status="PASS" starttime="20210819 05:29:16.211" endtime="20210819 05:29:16.225"/>
</kw>
<msg timestamp="20210819 05:29:16.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:29:16.210" endtime="20210819 05:29:16.225"/>
</kw>
<msg timestamp="20210819 05:29:16.226" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:29:16.210" endtime="20210819 05:29:16.226"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:29:16.229" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:29:16.226" endtime="20210819 05:29:16.229"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:29:16.234" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:29:16.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:29:16.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:29:16.232" endtime="20210819 05:29:16.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:29:16.448" level="INFO"/>
<status status="PASS" starttime="20210819 05:29:16.447" endtime="20210819 05:29:16.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:29:16.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:29:16.448" endtime="20210819 05:29:16.449"/>
</kw>
<status status="PASS" starttime="20210819 05:29:16.231" endtime="20210819 05:29:16.450"/>
</kw>
<msg timestamp="20210819 05:29:16.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:29:16.230" endtime="20210819 05:29:16.450"/>
</kw>
<status status="PASS" starttime="20210819 05:29:16.230" endtime="20210819 05:29:16.450"/>
</kw>
<status status="PASS" starttime="20210819 05:29:16.229" endtime="20210819 05:29:16.450"/>
</kw>
<status status="PASS" starttime="20210819 05:29:16.209" endtime="20210819 05:29:16.450"/>
</kw>
<status status="PASS" starttime="20210819 05:29:16.208" endtime="20210819 05:29:16.450"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:29:16.454" level="INFO">Running command 'ozone sh bucket link 80069-source/no-such-bucket 80069-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:29:23.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:29:23.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:29:16.452" endtime="20210819 05:29:23.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:29:23.152" level="INFO"/>
<status status="PASS" starttime="20210819 05:29:23.151" endtime="20210819 05:29:23.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:29:23.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:29:23.152" endtime="20210819 05:29:23.153"/>
</kw>
<status status="PASS" starttime="20210819 05:29:16.452" endtime="20210819 05:29:23.153"/>
</kw>
<msg timestamp="20210819 05:29:23.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:29:16.451" endtime="20210819 05:29:23.154"/>
</kw>
<status status="PASS" starttime="20210819 05:29:16.451" endtime="20210819 05:29:23.154"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:29:23.157" level="INFO">Running command 'ozone sh key list 80069-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:29:30.043" level="INFO">${rc} = 255</msg>
<msg timestamp="20210819 05:29:30.043" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210819 05:29:23.155" endtime="20210819 05:29:30.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:29:30.044" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210819 05:29:30.044" endtime="20210819 05:29:30.045"/>
</kw>
<msg timestamp="20210819 05:29:30.045" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210819 05:29:23.154" endtime="20210819 05:29:30.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:29:30.045" endtime="20210819 05:29:30.046"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210819 05:29:16.207" endtime="20210819 05:29:30.046"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:29:30.055" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:29:30.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:29:30.063" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:29:30.052" endtime="20210819 05:29:30.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:29:30.065" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:29:30.063" endtime="20210819 05:29:30.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:29:30.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:29:30.065" endtime="20210819 05:29:30.066"/>
</kw>
<status status="PASS" starttime="20210819 05:29:30.051" endtime="20210819 05:29:30.066"/>
</kw>
<msg timestamp="20210819 05:29:30.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:29:30.051" endtime="20210819 05:29:30.067"/>
</kw>
<msg timestamp="20210819 05:29:30.067" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:29:30.049" endtime="20210819 05:29:30.067"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:29:30.068" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:29:30.067" endtime="20210819 05:29:30.068"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:29:30.074" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:29:30.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:29:30.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:29:30.072" endtime="20210819 05:29:30.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:29:30.085" level="INFO"/>
<status status="PASS" starttime="20210819 05:29:30.084" endtime="20210819 05:29:30.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:29:30.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:29:30.085" endtime="20210819 05:29:30.086"/>
</kw>
<status status="PASS" starttime="20210819 05:29:30.071" endtime="20210819 05:29:30.086"/>
</kw>
<msg timestamp="20210819 05:29:30.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:29:30.070" endtime="20210819 05:29:30.087"/>
</kw>
<status status="PASS" starttime="20210819 05:29:30.069" endtime="20210819 05:29:30.087"/>
</kw>
<status status="PASS" starttime="20210819 05:29:30.069" endtime="20210819 05:29:30.087"/>
</kw>
<status status="PASS" starttime="20210819 05:29:30.048" endtime="20210819 05:29:30.087"/>
</kw>
<status status="PASS" starttime="20210819 05:29:30.048" endtime="20210819 05:29:30.087"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:29:30.092" level="INFO">Running command 'ozone sh bucket link 80069-source/bucket1 80069-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:29:36.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:29:36.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:29:30.090" endtime="20210819 05:29:36.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:29:36.938" level="INFO"/>
<status status="PASS" starttime="20210819 05:29:36.937" endtime="20210819 05:29:36.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:29:36.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:29:36.938" endtime="20210819 05:29:36.939"/>
</kw>
<status status="PASS" starttime="20210819 05:29:30.089" endtime="20210819 05:29:36.939"/>
</kw>
<msg timestamp="20210819 05:29:36.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:29:30.089" endtime="20210819 05:29:36.939"/>
</kw>
<status status="PASS" starttime="20210819 05:29:30.088" endtime="20210819 05:29:36.939"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:29:36.945" level="INFO">Running command 'ozone sh bucket create 80069-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:29:43.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:29:43.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:29:36.942" endtime="20210819 05:29:43.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:29:43.996" level="INFO"/>
<status status="PASS" starttime="20210819 05:29:43.995" endtime="20210819 05:29:43.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:29:43.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:29:43.997" endtime="20210819 05:29:43.998"/>
</kw>
<status status="PASS" starttime="20210819 05:29:36.941" endtime="20210819 05:29:43.998"/>
</kw>
<msg timestamp="20210819 05:29:43.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:29:36.941" endtime="20210819 05:29:43.998"/>
</kw>
<status status="PASS" starttime="20210819 05:29:36.940" endtime="20210819 05:29:43.999"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:29:44.003" level="INFO">Running command 'ozone sh key put 80069-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:31:30.048" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210819 05:29:44.001" endtime="20210819 05:31:30.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210819 05:31:30.049" endtime="20210819 05:31:30.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210819 05:31:30.050" endtime="20210819 05:31:30.050"/>
</kw>
<status status="FAIL" starttime="20210819 05:29:44.000" endtime="20210819 05:31:30.050"/>
</kw>
<msg timestamp="20210819 05:31:30.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210819 05:29:44.000" endtime="20210819 05:31:30.050"/>
</kw>
<status status="FAIL" starttime="20210819 05:29:43.999" endtime="20210819 05:31:30.051"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210819 05:31:30.051" endtime="20210819 05:31:30.051"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210819 05:29:30.047" endtime="20210819 05:31:30.051">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:31:30.065" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:31:30.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:31:30.068" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:31:30.061" endtime="20210819 05:31:30.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:31:30.070" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:31:30.069" endtime="20210819 05:31:30.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:31:30.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:31:30.070" endtime="20210819 05:31:30.071"/>
</kw>
<status status="PASS" starttime="20210819 05:31:30.059" endtime="20210819 05:31:30.071"/>
</kw>
<msg timestamp="20210819 05:31:30.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:31:30.058" endtime="20210819 05:31:30.071"/>
</kw>
<msg timestamp="20210819 05:31:30.072" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:31:30.055" endtime="20210819 05:31:30.072"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:31:30.072" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:31:30.072" endtime="20210819 05:31:30.073"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:31:30.079" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:31:30.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:31:30.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:31:30.075" endtime="20210819 05:31:30.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:31:30.089" level="INFO"/>
<status status="PASS" starttime="20210819 05:31:30.088" endtime="20210819 05:31:30.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:31:30.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:31:30.089" endtime="20210819 05:31:30.090"/>
</kw>
<status status="PASS" starttime="20210819 05:31:30.074" endtime="20210819 05:31:30.090"/>
</kw>
<msg timestamp="20210819 05:31:30.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:31:30.074" endtime="20210819 05:31:30.091"/>
</kw>
<status status="PASS" starttime="20210819 05:31:30.073" endtime="20210819 05:31:30.091"/>
</kw>
<status status="PASS" starttime="20210819 05:31:30.073" endtime="20210819 05:31:30.091"/>
</kw>
<status status="PASS" starttime="20210819 05:31:30.054" endtime="20210819 05:31:30.091"/>
</kw>
<status status="PASS" starttime="20210819 05:31:30.053" endtime="20210819 05:31:30.091"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:31:30.095" level="INFO">Running command 'ozone sh key put 80069-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:33:30.054" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210819 05:31:30.093" endtime="20210819 05:33:30.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210819 05:33:30.055" endtime="20210819 05:33:30.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210819 05:33:30.055" endtime="20210819 05:33:30.055"/>
</kw>
<status status="FAIL" starttime="20210819 05:31:30.093" endtime="20210819 05:33:30.056"/>
</kw>
<msg timestamp="20210819 05:33:30.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210819 05:31:30.092" endtime="20210819 05:33:30.056"/>
</kw>
<status status="FAIL" starttime="20210819 05:31:30.092" endtime="20210819 05:33:30.056"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210819 05:33:30.056" endtime="20210819 05:33:30.057"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210819 05:31:30.053" endtime="20210819 05:33:30.057">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:33:30.067" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:33:30.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:33:30.072" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:33:30.063" endtime="20210819 05:33:30.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:33:30.074" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:33:30.073" endtime="20210819 05:33:30.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:33:30.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:33:30.074" endtime="20210819 05:33:30.075"/>
</kw>
<status status="PASS" starttime="20210819 05:33:30.063" endtime="20210819 05:33:30.075"/>
</kw>
<msg timestamp="20210819 05:33:30.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:33:30.062" endtime="20210819 05:33:30.076"/>
</kw>
<msg timestamp="20210819 05:33:30.076" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:33:30.062" endtime="20210819 05:33:30.076"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:33:30.077" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:33:30.076" endtime="20210819 05:33:30.077"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:33:30.083" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:33:30.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:33:30.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:33:30.080" endtime="20210819 05:33:30.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:33:30.094" level="INFO"/>
<status status="PASS" starttime="20210819 05:33:30.093" endtime="20210819 05:33:30.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:33:30.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:33:30.097" endtime="20210819 05:33:30.097"/>
</kw>
<status status="PASS" starttime="20210819 05:33:30.079" endtime="20210819 05:33:30.098"/>
</kw>
<msg timestamp="20210819 05:33:30.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:33:30.078" endtime="20210819 05:33:30.098"/>
</kw>
<status status="PASS" starttime="20210819 05:33:30.077" endtime="20210819 05:33:30.098"/>
</kw>
<status status="PASS" starttime="20210819 05:33:30.077" endtime="20210819 05:33:30.098"/>
</kw>
<status status="PASS" starttime="20210819 05:33:30.061" endtime="20210819 05:33:30.098"/>
</kw>
<status status="PASS" starttime="20210819 05:33:30.060" endtime="20210819 05:33:30.098"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:33:30.104" level="INFO">Running command 'ozone sh key list 80069-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:33:35.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:33:35.187" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210819 05:33:30.101" endtime="20210819 05:33:35.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:33:35.190" level="INFO">key1</msg>
<status status="PASS" starttime="20210819 05:33:35.188" endtime="20210819 05:33:35.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:33:35.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:33:35.190" endtime="20210819 05:33:35.191"/>
</kw>
<status status="PASS" starttime="20210819 05:33:30.101" endtime="20210819 05:33:35.192"/>
</kw>
<msg timestamp="20210819 05:33:35.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:33:30.101" endtime="20210819 05:33:35.192"/>
</kw>
<msg timestamp="20210819 05:33:35.192" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210819 05:33:30.099" endtime="20210819 05:33:35.192"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:33:35.197" level="INFO">Running command 'ozone sh key list 80069-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:33:41.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:33:41.798" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210819 05:33:35.195" endtime="20210819 05:33:41.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:33:41.799" level="INFO">key1</msg>
<status status="PASS" starttime="20210819 05:33:41.798" endtime="20210819 05:33:41.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:33:41.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:33:41.800" endtime="20210819 05:33:41.801"/>
</kw>
<status status="PASS" starttime="20210819 05:33:35.194" endtime="20210819 05:33:41.801"/>
</kw>
<msg timestamp="20210819 05:33:41.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:33:35.193" endtime="20210819 05:33:41.801"/>
</kw>
<msg timestamp="20210819 05:33:41.802" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210819 05:33:35.193" endtime="20210819 05:33:41.802"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:33:41.802" endtime="20210819 05:33:41.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:33:41.803" endtime="20210819 05:33:41.804"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210819 05:33:41.804" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210819 05:33:41.804" endtime="20210819 05:33:41.805"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210819 05:33:30.058" endtime="20210819 05:33:41.805">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:33:41.814" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:33:41.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:33:41.820" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:33:41.811" endtime="20210819 05:33:41.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:33:41.822" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:33:41.821" endtime="20210819 05:33:41.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:33:41.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:33:41.823" endtime="20210819 05:33:41.824"/>
</kw>
<status status="PASS" starttime="20210819 05:33:41.810" endtime="20210819 05:33:41.824"/>
</kw>
<msg timestamp="20210819 05:33:41.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:33:41.810" endtime="20210819 05:33:41.825"/>
</kw>
<msg timestamp="20210819 05:33:41.825" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:33:41.809" endtime="20210819 05:33:41.825"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:33:41.827" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:33:41.825" endtime="20210819 05:33:41.827"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:33:41.834" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:33:41.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:33:41.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:33:41.831" endtime="20210819 05:33:41.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:33:41.847" level="INFO"/>
<status status="PASS" starttime="20210819 05:33:41.846" endtime="20210819 05:33:41.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:33:41.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:33:41.847" endtime="20210819 05:33:41.849"/>
</kw>
<status status="PASS" starttime="20210819 05:33:41.830" endtime="20210819 05:33:41.851"/>
</kw>
<msg timestamp="20210819 05:33:41.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:33:41.830" endtime="20210819 05:33:41.851"/>
</kw>
<status status="PASS" starttime="20210819 05:33:41.828" endtime="20210819 05:33:41.852"/>
</kw>
<status status="PASS" starttime="20210819 05:33:41.827" endtime="20210819 05:33:41.852"/>
</kw>
<status status="PASS" starttime="20210819 05:33:41.808" endtime="20210819 05:33:41.852"/>
</kw>
<status status="PASS" starttime="20210819 05:33:41.807" endtime="20210819 05:33:41.852"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:33:41.858" level="INFO">Running command 'ozone sh key delete 80069-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:33:49.443" level="INFO">${rc} = 255</msg>
<msg timestamp="20210819 05:33:49.443" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210819 05:33:41.855" endtime="20210819 05:33:49.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:33:49.446" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210819 05:33:49.444" endtime="20210819 05:33:49.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:33:49.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210819 05:33:49.448" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210819 05:33:49.446" endtime="20210819 05:33:49.448"/>
</kw>
<status status="FAIL" starttime="20210819 05:33:41.854" endtime="20210819 05:33:49.449"/>
</kw>
<msg timestamp="20210819 05:33:49.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210819 05:33:41.854" endtime="20210819 05:33:49.449"/>
</kw>
<status status="FAIL" starttime="20210819 05:33:41.853" endtime="20210819 05:33:49.450"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210819 05:33:49.450" endtime="20210819 05:33:49.450"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 05:33:49.450" endtime="20210819 05:33:49.451"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210819 05:33:41.806" endtime="20210819 05:33:49.451">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:33:49.462" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:33:49.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:33:49.468" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:33:49.459" endtime="20210819 05:33:49.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:33:49.471" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:33:49.469" endtime="20210819 05:33:49.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:33:49.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:33:49.471" endtime="20210819 05:33:49.473"/>
</kw>
<status status="PASS" starttime="20210819 05:33:49.458" endtime="20210819 05:33:49.474"/>
</kw>
<msg timestamp="20210819 05:33:49.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:33:49.458" endtime="20210819 05:33:49.474"/>
</kw>
<msg timestamp="20210819 05:33:49.475" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:33:49.457" endtime="20210819 05:33:49.475"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:33:49.476" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:33:49.475" endtime="20210819 05:33:49.477"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:33:49.484" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:33:49.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:33:49.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:33:49.482" endtime="20210819 05:33:49.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:33:49.496" level="INFO"/>
<status status="PASS" starttime="20210819 05:33:49.495" endtime="20210819 05:33:49.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:33:49.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:33:49.497" endtime="20210819 05:33:49.498"/>
</kw>
<status status="PASS" starttime="20210819 05:33:49.480" endtime="20210819 05:33:49.498"/>
</kw>
<msg timestamp="20210819 05:33:49.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:33:49.479" endtime="20210819 05:33:49.499"/>
</kw>
<status status="PASS" starttime="20210819 05:33:49.478" endtime="20210819 05:33:49.499"/>
</kw>
<status status="PASS" starttime="20210819 05:33:49.477" endtime="20210819 05:33:49.499"/>
</kw>
<status status="PASS" starttime="20210819 05:33:49.456" endtime="20210819 05:33:49.500"/>
</kw>
<status status="PASS" starttime="20210819 05:33:49.455" endtime="20210819 05:33:49.501"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:33:49.507" level="INFO">Running command 'ozone sh bucket list 80069-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:33:57.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:33:57.453" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210819 05:33:49.504" endtime="20210819 05:33:57.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:33:57.456" level="INFO">{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:29:23.077Z",
  "modificationTime" : "2021-08-19T05:29:23.077Z",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:28:44.879Z",
  "modificationTime" : "2021-08-19T05:29:15.972Z",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:29:36.881Z",
  "modificationTime" : "2021-08-19T05:29:36.881Z",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:28:31.107Z",
  "modificationTime" : "2021-08-19T05:29:10.566Z",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:28:37.211Z",
  "modificationTime" : "2021-08-19T05:28:37.211Z",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210819 05:33:57.454" endtime="20210819 05:33:57.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:33:57.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:33:57.456" endtime="20210819 05:33:57.457"/>
</kw>
<status status="PASS" starttime="20210819 05:33:49.503" endtime="20210819 05:33:57.458"/>
</kw>
<msg timestamp="20210819 05:33:57.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:33:49.503" endtime="20210819 05:33:57.458"/>
</kw>
<msg timestamp="20210819 05:33:57.458" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210819 05:33:49.501" endtime="20210819 05:33:57.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:33:57.459" endtime="20210819 05:33:57.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:33:57.459" endtime="20210819 05:33:57.460"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210819 05:33:49.454" endtime="20210819 05:33:57.460"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:33:57.470" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:33:57.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:33:57.474" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:33:57.467" endtime="20210819 05:33:57.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:33:57.475" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:33:57.474" endtime="20210819 05:33:57.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:33:57.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:33:57.475" endtime="20210819 05:33:57.476"/>
</kw>
<status status="PASS" starttime="20210819 05:33:57.466" endtime="20210819 05:33:57.476"/>
</kw>
<msg timestamp="20210819 05:33:57.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:33:57.466" endtime="20210819 05:33:57.477"/>
</kw>
<msg timestamp="20210819 05:33:57.478" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:33:57.465" endtime="20210819 05:33:57.478"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:33:57.479" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:33:57.478" endtime="20210819 05:33:57.479"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:33:57.484" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:33:57.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:33:57.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:33:57.482" endtime="20210819 05:33:57.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:33:57.493" level="INFO"/>
<status status="PASS" starttime="20210819 05:33:57.493" endtime="20210819 05:33:57.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:33:57.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:33:57.494" endtime="20210819 05:33:57.495"/>
</kw>
<status status="PASS" starttime="20210819 05:33:57.481" endtime="20210819 05:33:57.495"/>
</kw>
<msg timestamp="20210819 05:33:57.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:33:57.480" endtime="20210819 05:33:57.495"/>
</kw>
<status status="PASS" starttime="20210819 05:33:57.480" endtime="20210819 05:33:57.496"/>
</kw>
<status status="PASS" starttime="20210819 05:33:57.479" endtime="20210819 05:33:57.496"/>
</kw>
<status status="PASS" starttime="20210819 05:33:57.465" endtime="20210819 05:33:57.496"/>
</kw>
<status status="PASS" starttime="20210819 05:33:57.464" endtime="20210819 05:33:57.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:33:57.501" level="INFO">Running command 'ozone sh bucket info 80069-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:34:03.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:34:03.554" level="INFO">${output} = {
  "volumeName" : "80069-target",
  "bucketName" : "link1",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-19T05:29:36.881Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210819 05:33:57.499" endtime="20210819 05:34:03.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:34:03.555" level="INFO">{
  "volumeName" : "80069-target",
  "bucketName" : "link1",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-19T05:29:36.881Z",
  "modificationTime" : "2021-08-19T05:29:36.881Z"
}</msg>
<status status="PASS" starttime="20210819 05:34:03.554" endtime="20210819 05:34:03.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:34:03.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:34:03.555" endtime="20210819 05:34:03.556"/>
</kw>
<status status="PASS" starttime="20210819 05:33:57.498" endtime="20210819 05:34:03.556"/>
</kw>
<msg timestamp="20210819 05:34:03.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:33:57.497" endtime="20210819 05:34:03.557"/>
</kw>
<msg timestamp="20210819 05:34:03.558" level="INFO">${result} = {
  "volumeName" : "80069-target",
  "bucketName" : "link1",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-19T05:29:36.881Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210819 05:33:57.497" endtime="20210819 05:34:03.558"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:34:03.558" endtime="20210819 05:34:03.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:34:03.559" endtime="20210819 05:34:03.560"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:34:03.561" endtime="20210819 05:34:03.561"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:34:03.562" endtime="20210819 05:34:03.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:34:03.563" endtime="20210819 05:34:03.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:34:03.564" endtime="20210819 05:34:03.565"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:34:03.565" endtime="20210819 05:34:03.566"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210819 05:33:57.463" endtime="20210819 05:34:03.566"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:34:03.576" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:34:03.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:34:03.581" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:34:03.574" endtime="20210819 05:34:03.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:34:03.583" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:34:03.582" endtime="20210819 05:34:03.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:34:03.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:34:03.584" endtime="20210819 05:34:03.585"/>
</kw>
<status status="PASS" starttime="20210819 05:34:03.573" endtime="20210819 05:34:03.585"/>
</kw>
<msg timestamp="20210819 05:34:03.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:34:03.572" endtime="20210819 05:34:03.586"/>
</kw>
<msg timestamp="20210819 05:34:03.586" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:34:03.571" endtime="20210819 05:34:03.586"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:34:03.587" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:34:03.586" endtime="20210819 05:34:03.587"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:34:03.593" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:34:03.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:34:03.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:34:03.591" endtime="20210819 05:34:03.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:34:03.604" level="INFO"/>
<status status="PASS" starttime="20210819 05:34:03.603" endtime="20210819 05:34:03.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:34:03.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:34:03.604" endtime="20210819 05:34:03.605"/>
</kw>
<status status="PASS" starttime="20210819 05:34:03.590" endtime="20210819 05:34:03.606"/>
</kw>
<msg timestamp="20210819 05:34:03.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:34:03.589" endtime="20210819 05:34:03.606"/>
</kw>
<status status="PASS" starttime="20210819 05:34:03.588" endtime="20210819 05:34:03.606"/>
</kw>
<status status="PASS" starttime="20210819 05:34:03.588" endtime="20210819 05:34:03.607"/>
</kw>
<status status="PASS" starttime="20210819 05:34:03.570" endtime="20210819 05:34:03.607"/>
</kw>
<status status="PASS" starttime="20210819 05:34:03.569" endtime="20210819 05:34:03.607"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:34:03.613" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 80069-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:34:10.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:34:10.975" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:34:03.610" endtime="20210819 05:34:10.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:34:10.977" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:34:10.976" endtime="20210819 05:34:10.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:34:10.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:34:10.977" endtime="20210819 05:34:10.978"/>
</kw>
<status status="PASS" starttime="20210819 05:34:03.609" endtime="20210819 05:34:10.979"/>
</kw>
<msg timestamp="20210819 05:34:10.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:34:03.608" endtime="20210819 05:34:10.979"/>
</kw>
<status status="PASS" starttime="20210819 05:34:03.608" endtime="20210819 05:34:10.979"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:34:10.986" level="INFO">Running command 'ozone sh bucket getacl 80069-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:34:19.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:34:19.151" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210819 05:34:10.983" endtime="20210819 05:34:19.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:34:19.155" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210819 05:34:19.153" endtime="20210819 05:34:19.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:34:19.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:34:19.157" endtime="20210819 05:34:19.159"/>
</kw>
<status status="PASS" starttime="20210819 05:34:10.982" endtime="20210819 05:34:19.160"/>
</kw>
<msg timestamp="20210819 05:34:19.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:34:10.982" endtime="20210819 05:34:19.161"/>
</kw>
<msg timestamp="20210819 05:34:19.161" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210819 05:34:10.981" endtime="20210819 05:34:19.161"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:34:19.162" endtime="20210819 05:34:19.162"/>
</kw>
<status status="PASS" starttime="20210819 05:34:10.980" endtime="20210819 05:34:19.163"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:34:19.170" level="INFO">Running command 'ozone sh bucket getacl 80069-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:34:27.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:34:27.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:34:19.167" endtime="20210819 05:34:27.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:34:27.027" level="INFO"/>
<status status="PASS" starttime="20210819 05:34:27.022" endtime="20210819 05:34:27.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:34:27.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:34:27.028" endtime="20210819 05:34:27.029"/>
</kw>
<status status="PASS" starttime="20210819 05:34:19.166" endtime="20210819 05:34:27.030"/>
</kw>
<msg timestamp="20210819 05:34:27.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:34:19.166" endtime="20210819 05:34:27.031"/>
</kw>
<msg timestamp="20210819 05:34:27.032" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210819 05:34:19.165" endtime="20210819 05:34:27.032"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:34:27.033" endtime="20210819 05:34:27.034"/>
</kw>
<status status="PASS" starttime="20210819 05:34:19.163" endtime="20210819 05:34:27.035"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:34:27.044" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 80069-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:34:34.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:34:34.611" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:34:27.040" endtime="20210819 05:34:34.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:34:34.614" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:34:34.613" endtime="20210819 05:34:34.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:34:34.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:34:34.615" endtime="20210819 05:34:34.616"/>
</kw>
<status status="PASS" starttime="20210819 05:34:27.038" endtime="20210819 05:34:34.617"/>
</kw>
<msg timestamp="20210819 05:34:34.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:34:27.037" endtime="20210819 05:34:34.617"/>
</kw>
<status status="PASS" starttime="20210819 05:34:27.036" endtime="20210819 05:34:34.618"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:34:34.629" level="INFO">Running command 'ozone sh bucket getacl 80069-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:34:42.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:34:42.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:34:34.626" endtime="20210819 05:34:42.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:34:42.097" level="INFO"/>
<status status="PASS" starttime="20210819 05:34:42.096" endtime="20210819 05:34:42.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:34:42.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:34:42.097" endtime="20210819 05:34:42.098"/>
</kw>
<status status="PASS" starttime="20210819 05:34:34.624" endtime="20210819 05:34:42.098"/>
</kw>
<msg timestamp="20210819 05:34:42.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:34:34.623" endtime="20210819 05:34:42.098"/>
</kw>
<msg timestamp="20210819 05:34:42.099" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210819 05:34:34.621" endtime="20210819 05:34:42.099"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:34:42.099" endtime="20210819 05:34:42.099"/>
</kw>
<status status="PASS" starttime="20210819 05:34:34.618" endtime="20210819 05:34:42.100"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:34:42.105" level="INFO">Running command 'ozone sh bucket getacl 80069-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:34:48.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:34:48.574" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210819 05:34:42.103" endtime="20210819 05:34:48.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:34:48.576" level="INFO">READ</msg>
<status status="PASS" starttime="20210819 05:34:48.575" endtime="20210819 05:34:48.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:34:48.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:34:48.576" endtime="20210819 05:34:48.578"/>
</kw>
<status status="PASS" starttime="20210819 05:34:42.102" endtime="20210819 05:34:48.578"/>
</kw>
<msg timestamp="20210819 05:34:48.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:34:42.102" endtime="20210819 05:34:48.579"/>
</kw>
<msg timestamp="20210819 05:34:48.579" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210819 05:34:42.101" endtime="20210819 05:34:48.579"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:34:48.579" endtime="20210819 05:34:48.580"/>
</kw>
<status status="PASS" starttime="20210819 05:34:42.100" endtime="20210819 05:34:48.581"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210819 05:34:03.568" endtime="20210819 05:34:48.581"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:34:48.593" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:34:48.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:34:48.597" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:34:48.590" endtime="20210819 05:34:48.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:34:48.599" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:34:48.598" endtime="20210819 05:34:48.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:34:48.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:34:48.599" endtime="20210819 05:34:48.599"/>
</kw>
<status status="PASS" starttime="20210819 05:34:48.588" endtime="20210819 05:34:48.600"/>
</kw>
<msg timestamp="20210819 05:34:48.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:34:48.587" endtime="20210819 05:34:48.600"/>
</kw>
<msg timestamp="20210819 05:34:48.600" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:34:48.586" endtime="20210819 05:34:48.600"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:34:48.601" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:34:48.601" endtime="20210819 05:34:48.601"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:34:48.606" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:34:48.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:34:48.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:34:48.603" endtime="20210819 05:34:48.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:34:48.822" level="INFO"/>
<status status="PASS" starttime="20210819 05:34:48.821" endtime="20210819 05:34:48.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:34:48.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:34:48.822" endtime="20210819 05:34:48.823"/>
</kw>
<status status="PASS" starttime="20210819 05:34:48.603" endtime="20210819 05:34:48.823"/>
</kw>
<msg timestamp="20210819 05:34:48.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:34:48.603" endtime="20210819 05:34:48.823"/>
</kw>
<status status="PASS" starttime="20210819 05:34:48.602" endtime="20210819 05:34:48.824"/>
</kw>
<status status="PASS" starttime="20210819 05:34:48.601" endtime="20210819 05:34:48.824"/>
</kw>
<status status="PASS" starttime="20210819 05:34:48.585" endtime="20210819 05:34:48.824"/>
</kw>
<status status="PASS" starttime="20210819 05:34:48.585" endtime="20210819 05:34:48.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:34:48.830" level="INFO">Running command 'ozone sh bucket link 80069-source/bucket2 80069-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:34:56.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:34:56.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:34:48.827" endtime="20210819 05:34:56.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:34:56.092" level="INFO"/>
<status status="PASS" starttime="20210819 05:34:56.091" endtime="20210819 05:34:56.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:34:56.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:34:56.093" endtime="20210819 05:34:56.095"/>
</kw>
<status status="PASS" starttime="20210819 05:34:48.827" endtime="20210819 05:34:56.095"/>
</kw>
<msg timestamp="20210819 05:34:56.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:34:48.826" endtime="20210819 05:34:56.095"/>
</kw>
<status status="PASS" starttime="20210819 05:34:48.824" endtime="20210819 05:34:56.096"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:34:56.100" level="INFO">Running command 'ozone sh bucket create 80069-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:03.944" level="INFO">${rc} = 255</msg>
<msg timestamp="20210819 05:35:03.944" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210819 05:34:56.097" endtime="20210819 05:35:03.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:03.945" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210819 05:35:03.945" endtime="20210819 05:35:03.946"/>
</kw>
<msg timestamp="20210819 05:35:03.946" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210819 05:34:56.096" endtime="20210819 05:35:03.946"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:35:03.946" endtime="20210819 05:35:03.947"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:03.951" level="INFO">Running command 'ozone sh bucket create 80069-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:08.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:08.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:35:03.949" endtime="20210819 05:35:08.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:08.666" level="INFO"/>
<status status="PASS" starttime="20210819 05:35:08.665" endtime="20210819 05:35:08.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:08.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:08.666" endtime="20210819 05:35:08.667"/>
</kw>
<status status="PASS" starttime="20210819 05:35:03.948" endtime="20210819 05:35:08.667"/>
</kw>
<msg timestamp="20210819 05:35:08.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:03.948" endtime="20210819 05:35:08.668"/>
</kw>
<status status="PASS" starttime="20210819 05:35:03.947" endtime="20210819 05:35:08.668"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:08.674" level="INFO">Running command 'ozone sh bucket link 80069-source/bucket1 80069-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:15.380" level="INFO">${rc} = 255</msg>
<msg timestamp="20210819 05:35:15.381" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210819 05:35:08.670" endtime="20210819 05:35:15.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:15.384" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210819 05:35:15.382" endtime="20210819 05:35:15.384"/>
</kw>
<msg timestamp="20210819 05:35:15.385" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210819 05:35:08.669" endtime="20210819 05:35:15.385"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:35:15.386" endtime="20210819 05:35:15.387"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210819 05:34:48.583" endtime="20210819 05:35:15.388"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:15.396" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:15.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:15.400" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:35:15.393" endtime="20210819 05:35:15.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:15.402" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:35:15.401" endtime="20210819 05:35:15.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:15.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:15.402" endtime="20210819 05:35:15.404"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.393" endtime="20210819 05:35:15.404"/>
</kw>
<msg timestamp="20210819 05:35:15.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:15.392" endtime="20210819 05:35:15.404"/>
</kw>
<msg timestamp="20210819 05:35:15.405" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:35:15.392" endtime="20210819 05:35:15.405"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:35:15.406" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:35:15.405" endtime="20210819 05:35:15.406"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:15.413" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:15.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:15.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:35:15.410" endtime="20210819 05:35:15.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:15.423" level="INFO"/>
<status status="PASS" starttime="20210819 05:35:15.422" endtime="20210819 05:35:15.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:15.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:15.424" endtime="20210819 05:35:15.424"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.408" endtime="20210819 05:35:15.425"/>
</kw>
<msg timestamp="20210819 05:35:15.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:15.408" endtime="20210819 05:35:15.425"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.407" endtime="20210819 05:35:15.425"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.406" endtime="20210819 05:35:15.426"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.391" endtime="20210819 05:35:15.426"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.390" endtime="20210819 05:35:15.426"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:15.432" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:15.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:15.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:35:15.430" endtime="20210819 05:35:15.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:15.439" level="INFO"/>
<status status="PASS" starttime="20210819 05:35:15.438" endtime="20210819 05:35:15.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:15.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:15.439" endtime="20210819 05:35:15.440"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.429" endtime="20210819 05:35:15.441"/>
</kw>
<msg timestamp="20210819 05:35:15.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:15.428" endtime="20210819 05:35:15.441"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.428" endtime="20210819 05:35:15.441"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:15.447" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:15.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:15.451" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:35:15.445" endtime="20210819 05:35:15.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:15.453" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:35:15.452" endtime="20210819 05:35:15.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:15.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:15.453" endtime="20210819 05:35:15.455"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.444" endtime="20210819 05:35:15.455"/>
</kw>
<msg timestamp="20210819 05:35:15.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:15.443" endtime="20210819 05:35:15.456"/>
</kw>
<msg timestamp="20210819 05:35:15.456" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:35:15.443" endtime="20210819 05:35:15.457"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:35:15.458" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:35:15.457" endtime="20210819 05:35:15.458"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:15.463" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:15.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:15.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:35:15.461" endtime="20210819 05:35:15.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:15.475" level="INFO"/>
<status status="PASS" starttime="20210819 05:35:15.474" endtime="20210819 05:35:15.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:15.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:15.475" endtime="20210819 05:35:15.476"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.460" endtime="20210819 05:35:15.477"/>
</kw>
<msg timestamp="20210819 05:35:15.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:15.460" endtime="20210819 05:35:15.477"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.459" endtime="20210819 05:35:15.478"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.458" endtime="20210819 05:35:15.478"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.442" endtime="20210819 05:35:15.478"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.442" endtime="20210819 05:35:15.478"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:15.482" level="INFO">Running command 'ozone sh key list 80069-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:23.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:23.225" level="INFO">${output} = {
  "volumeName" : "80069-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-19T05:25:12.861Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210819 05:35:15.480" endtime="20210819 05:35:23.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:23.227" level="INFO">{
  "volumeName" : "80069-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-19T05:25:12.861Z",
  "modificationTime" : "2021-08-19T05:28:16.551Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210819 05:35:23.226" endtime="20210819 05:35:23.227"/>
</kw>
<msg timestamp="20210819 05:35:23.228" level="INFO">${result} = {
  "volumeName" : "80069-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-19T05:25:12.861Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210819 05:35:15.479" endtime="20210819 05:35:23.228"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:35:23.228" endtime="20210819 05:35:23.229"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.427" endtime="20210819 05:35:23.229"/>
</kw>
<status status="PASS" starttime="20210819 05:35:15.426" endtime="20210819 05:35:23.229"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210819 05:35:15.389" endtime="20210819 05:35:23.230"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:23.240" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:23.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:23.245" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:35:23.238" endtime="20210819 05:35:23.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:23.247" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:35:23.246" endtime="20210819 05:35:23.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:23.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:23.247" endtime="20210819 05:35:23.248"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.237" endtime="20210819 05:35:23.249"/>
</kw>
<msg timestamp="20210819 05:35:23.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:23.236" endtime="20210819 05:35:23.249"/>
</kw>
<msg timestamp="20210819 05:35:23.250" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:35:23.235" endtime="20210819 05:35:23.250"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:35:23.251" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:35:23.250" endtime="20210819 05:35:23.251"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:23.257" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:23.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:23.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:35:23.254" endtime="20210819 05:35:23.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:23.271" level="INFO"/>
<status status="PASS" starttime="20210819 05:35:23.269" endtime="20210819 05:35:23.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:23.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:23.271" endtime="20210819 05:35:23.273"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.253" endtime="20210819 05:35:23.273"/>
</kw>
<msg timestamp="20210819 05:35:23.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:23.252" endtime="20210819 05:35:23.274"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.251" endtime="20210819 05:35:23.274"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.251" endtime="20210819 05:35:23.275"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.234" endtime="20210819 05:35:23.275"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.233" endtime="20210819 05:35:23.275"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:23.281" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:23.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:23.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:35:23.279" endtime="20210819 05:35:23.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:23.288" level="INFO"/>
<status status="PASS" starttime="20210819 05:35:23.287" endtime="20210819 05:35:23.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:23.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:23.288" endtime="20210819 05:35:23.289"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.278" endtime="20210819 05:35:23.289"/>
</kw>
<msg timestamp="20210819 05:35:23.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:23.277" endtime="20210819 05:35:23.290"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.276" endtime="20210819 05:35:23.290"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:23.295" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:23.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:23.300" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:35:23.293" endtime="20210819 05:35:23.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:23.301" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:35:23.301" endtime="20210819 05:35:23.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:23.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:23.302" endtime="20210819 05:35:23.303"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.292" endtime="20210819 05:35:23.303"/>
</kw>
<msg timestamp="20210819 05:35:23.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:23.292" endtime="20210819 05:35:23.303"/>
</kw>
<msg timestamp="20210819 05:35:23.304" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:35:23.291" endtime="20210819 05:35:23.304"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:35:23.304" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:35:23.304" endtime="20210819 05:35:23.304"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:23.310" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:23.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:23.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:35:23.307" endtime="20210819 05:35:23.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:23.321" level="INFO"/>
<status status="PASS" starttime="20210819 05:35:23.320" endtime="20210819 05:35:23.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:23.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:23.322" endtime="20210819 05:35:23.323"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.306" endtime="20210819 05:35:23.324"/>
</kw>
<msg timestamp="20210819 05:35:23.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:23.306" endtime="20210819 05:35:23.325"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.305" endtime="20210819 05:35:23.325"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.305" endtime="20210819 05:35:23.326"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.291" endtime="20210819 05:35:23.326"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.290" endtime="20210819 05:35:23.326"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:23.333" level="INFO">Running command 'ozone sh key list 80069-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:28.518" level="INFO">${rc} = 255</msg>
<msg timestamp="20210819 05:35:28.518" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 80069-target unreadable-link null</msg>
<status status="PASS" starttime="20210819 05:35:23.327" endtime="20210819 05:35:28.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:28.519" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 80069-target unreadable-link null</msg>
<status status="PASS" starttime="20210819 05:35:28.518" endtime="20210819 05:35:28.519"/>
</kw>
<msg timestamp="20210819 05:35:28.519" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 80069-target unreadable-link null</msg>
<status status="PASS" starttime="20210819 05:35:23.326" endtime="20210819 05:35:28.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:35:28.520" endtime="20210819 05:35:28.520"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.276" endtime="20210819 05:35:28.520"/>
</kw>
<status status="PASS" starttime="20210819 05:35:23.275" endtime="20210819 05:35:28.520"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210819 05:35:23.231" endtime="20210819 05:35:28.521"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:28.526" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:28.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:28.530" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:35:28.525" endtime="20210819 05:35:28.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:28.531" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:35:28.530" endtime="20210819 05:35:28.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:28.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:28.531" endtime="20210819 05:35:28.532"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.524" endtime="20210819 05:35:28.532"/>
</kw>
<msg timestamp="20210819 05:35:28.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:28.524" endtime="20210819 05:35:28.532"/>
</kw>
<msg timestamp="20210819 05:35:28.532" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:35:28.523" endtime="20210819 05:35:28.533"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:35:28.533" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:35:28.533" endtime="20210819 05:35:28.533"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:28.537" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:28.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:28.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:35:28.536" endtime="20210819 05:35:28.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:28.545" level="INFO"/>
<status status="PASS" starttime="20210819 05:35:28.544" endtime="20210819 05:35:28.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:28.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:28.545" endtime="20210819 05:35:28.546"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.535" endtime="20210819 05:35:28.546"/>
</kw>
<msg timestamp="20210819 05:35:28.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:28.535" endtime="20210819 05:35:28.546"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.534" endtime="20210819 05:35:28.546"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.533" endtime="20210819 05:35:28.546"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.523" endtime="20210819 05:35:28.547"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.522" endtime="20210819 05:35:28.547"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:28.550" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:28.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:28.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:35:28.549" endtime="20210819 05:35:28.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:28.555" level="INFO"/>
<status status="PASS" starttime="20210819 05:35:28.554" endtime="20210819 05:35:28.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:28.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:28.555" endtime="20210819 05:35:28.555"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.548" endtime="20210819 05:35:28.556"/>
</kw>
<msg timestamp="20210819 05:35:28.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:28.548" endtime="20210819 05:35:28.556"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.548" endtime="20210819 05:35:28.556"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:28.560" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:28.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:28.563" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:35:28.559" endtime="20210819 05:35:28.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:28.564" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:35:28.563" endtime="20210819 05:35:28.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:28.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:28.564" endtime="20210819 05:35:28.565"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.558" endtime="20210819 05:35:28.565"/>
</kw>
<msg timestamp="20210819 05:35:28.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:28.558" endtime="20210819 05:35:28.565"/>
</kw>
<msg timestamp="20210819 05:35:28.565" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:35:28.557" endtime="20210819 05:35:28.565"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:35:28.566" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:35:28.566" endtime="20210819 05:35:28.566"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:28.570" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:28.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:28.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:35:28.568" endtime="20210819 05:35:28.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:28.576" level="INFO"/>
<status status="PASS" starttime="20210819 05:35:28.576" endtime="20210819 05:35:28.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:28.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:28.577" endtime="20210819 05:35:28.577"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.568" endtime="20210819 05:35:28.577"/>
</kw>
<msg timestamp="20210819 05:35:28.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:28.567" endtime="20210819 05:35:28.578"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.567" endtime="20210819 05:35:28.578"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.566" endtime="20210819 05:35:28.578"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.557" endtime="20210819 05:35:28.578"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.556" endtime="20210819 05:35:28.578"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:28.581" level="INFO">Running command 'ozone sh bucket info 80069-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:34.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:34.909" level="INFO">${output} = {
  "volumeName" : "80069-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-19T05:28:44.879Z...</msg>
<status status="PASS" starttime="20210819 05:35:28.580" endtime="20210819 05:35:34.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:34.910" level="INFO">{
  "volumeName" : "80069-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-19T05:28:44.879Z",
  "modificationTime" : "2021-08-19T05:29:15.972Z"
}</msg>
<status status="PASS" starttime="20210819 05:35:34.910" endtime="20210819 05:35:34.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:34.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:34.911" endtime="20210819 05:35:34.911"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.579" endtime="20210819 05:35:34.912"/>
</kw>
<msg timestamp="20210819 05:35:34.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:28.579" endtime="20210819 05:35:34.912"/>
</kw>
<msg timestamp="20210819 05:35:34.912" level="INFO">${result} = {
  "volumeName" : "80069-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-19T05:28:44.879Z...</msg>
<status status="PASS" starttime="20210819 05:35:28.578" endtime="20210819 05:35:34.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:35:34.912" endtime="20210819 05:35:34.913"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:35:34.913" endtime="20210819 05:35:34.913"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:34.917" level="INFO">Running command 'ozone sh key list 80069-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:42.190" level="INFO">${rc} = 255</msg>
<msg timestamp="20210819 05:35:42.190" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 80069-source unreadable-bucket </msg>
<status status="PASS" starttime="20210819 05:35:34.914" endtime="20210819 05:35:42.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:42.191" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 80069-source unreadable-bucket </msg>
<status status="PASS" starttime="20210819 05:35:42.191" endtime="20210819 05:35:42.192"/>
</kw>
<msg timestamp="20210819 05:35:42.192" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 80069-source unreadable-bucket </msg>
<status status="PASS" starttime="20210819 05:35:34.914" endtime="20210819 05:35:42.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:35:42.192" endtime="20210819 05:35:42.193"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.547" endtime="20210819 05:35:42.193"/>
</kw>
<status status="PASS" starttime="20210819 05:35:28.547" endtime="20210819 05:35:42.193"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210819 05:35:28.521" endtime="20210819 05:35:42.193"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:42.205" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:42.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:42.211" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:35:42.202" endtime="20210819 05:35:42.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:42.214" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:35:42.212" endtime="20210819 05:35:42.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:42.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:42.215" endtime="20210819 05:35:42.216"/>
</kw>
<status status="PASS" starttime="20210819 05:35:42.201" endtime="20210819 05:35:42.217"/>
</kw>
<msg timestamp="20210819 05:35:42.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:42.200" endtime="20210819 05:35:42.217"/>
</kw>
<msg timestamp="20210819 05:35:42.218" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:35:42.198" endtime="20210819 05:35:42.218"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:35:42.220" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:35:42.218" endtime="20210819 05:35:42.220"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:42.228" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:42.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:42.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:35:42.225" endtime="20210819 05:35:42.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:42.237" level="INFO"/>
<status status="PASS" starttime="20210819 05:35:42.236" endtime="20210819 05:35:42.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:42.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:42.238" endtime="20210819 05:35:42.239"/>
</kw>
<status status="PASS" starttime="20210819 05:35:42.223" endtime="20210819 05:35:42.239"/>
</kw>
<msg timestamp="20210819 05:35:42.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:42.223" endtime="20210819 05:35:42.239"/>
</kw>
<status status="PASS" starttime="20210819 05:35:42.221" endtime="20210819 05:35:42.239"/>
</kw>
<status status="PASS" starttime="20210819 05:35:42.220" endtime="20210819 05:35:42.240"/>
</kw>
<status status="PASS" starttime="20210819 05:35:42.197" endtime="20210819 05:35:42.240"/>
</kw>
<status status="PASS" starttime="20210819 05:35:42.196" endtime="20210819 05:35:42.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:42.244" level="INFO">Running command 'ozone sh bucket link 80069-target/loop1 80069-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:49.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:49.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:35:42.242" endtime="20210819 05:35:49.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:49.750" level="INFO"/>
<status status="PASS" starttime="20210819 05:35:49.749" endtime="20210819 05:35:49.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:49.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:49.750" endtime="20210819 05:35:49.750"/>
</kw>
<status status="PASS" starttime="20210819 05:35:42.241" endtime="20210819 05:35:49.751"/>
</kw>
<msg timestamp="20210819 05:35:49.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:42.241" endtime="20210819 05:35:49.751"/>
</kw>
<status status="PASS" starttime="20210819 05:35:42.240" endtime="20210819 05:35:49.751"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:49.757" level="INFO">Running command 'ozone sh bucket link 80069-target/loop2 80069-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:35:56.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:35:56.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:35:49.754" endtime="20210819 05:35:56.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:35:56.830" level="INFO"/>
<status status="PASS" starttime="20210819 05:35:56.828" endtime="20210819 05:35:56.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:35:56.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:35:56.830" endtime="20210819 05:35:56.831"/>
</kw>
<status status="PASS" starttime="20210819 05:35:49.753" endtime="20210819 05:35:56.831"/>
</kw>
<msg timestamp="20210819 05:35:56.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:49.753" endtime="20210819 05:35:56.832"/>
</kw>
<status status="PASS" starttime="20210819 05:35:49.751" endtime="20210819 05:35:56.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:35:56.839" level="INFO">Running command 'ozone sh bucket link 80069-target/loop3 80069-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:36:04.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:36:04.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:35:56.835" endtime="20210819 05:36:04.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:36:04.501" level="INFO"/>
<status status="PASS" starttime="20210819 05:36:04.500" endtime="20210819 05:36:04.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:36:04.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:36:04.501" endtime="20210819 05:36:04.502"/>
</kw>
<status status="PASS" starttime="20210819 05:35:56.834" endtime="20210819 05:36:04.502"/>
</kw>
<msg timestamp="20210819 05:36:04.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:35:56.834" endtime="20210819 05:36:04.503"/>
</kw>
<status status="PASS" starttime="20210819 05:35:56.833" endtime="20210819 05:36:04.503"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:36:04.507" level="INFO">Running command 'ozone sh key list 80069-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:36:10.958" level="INFO">${rc} = 255</msg>
<msg timestamp="20210819 05:36:10.958" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210819 05:36:04.503" endtime="20210819 05:36:10.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:36:10.959" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210819 05:36:10.958" endtime="20210819 05:36:10.960"/>
</kw>
<msg timestamp="20210819 05:36:10.960" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210819 05:36:04.503" endtime="20210819 05:36:10.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:36:10.960" endtime="20210819 05:36:10.961"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210819 05:35:42.194" endtime="20210819 05:36:10.961"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:36:10.968" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:36:10.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:36:10.972" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:36:10.966" endtime="20210819 05:36:10.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:36:10.974" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:36:10.973" endtime="20210819 05:36:10.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:36:10.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:36:10.974" endtime="20210819 05:36:10.975"/>
</kw>
<status status="PASS" starttime="20210819 05:36:10.965" endtime="20210819 05:36:10.975"/>
</kw>
<msg timestamp="20210819 05:36:10.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:36:10.965" endtime="20210819 05:36:10.976"/>
</kw>
<msg timestamp="20210819 05:36:10.976" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:36:10.964" endtime="20210819 05:36:10.976"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:36:10.977" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:36:10.976" endtime="20210819 05:36:10.977"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:36:10.981" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:36:10.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:36:10.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:36:10.979" endtime="20210819 05:36:10.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:36:10.989" level="INFO"/>
<status status="PASS" starttime="20210819 05:36:10.988" endtime="20210819 05:36:10.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:36:10.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:36:10.989" endtime="20210819 05:36:10.990"/>
</kw>
<status status="PASS" starttime="20210819 05:36:10.979" endtime="20210819 05:36:10.990"/>
</kw>
<msg timestamp="20210819 05:36:10.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:36:10.978" endtime="20210819 05:36:10.990"/>
</kw>
<status status="PASS" starttime="20210819 05:36:10.978" endtime="20210819 05:36:10.991"/>
</kw>
<status status="PASS" starttime="20210819 05:36:10.977" endtime="20210819 05:36:10.991"/>
</kw>
<status status="PASS" starttime="20210819 05:36:10.964" endtime="20210819 05:36:10.991"/>
</kw>
<status status="PASS" starttime="20210819 05:36:10.963" endtime="20210819 05:36:10.991"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:36:10.996" level="INFO">Running command 'ozone sh bucket link 80069-source/bucket1 80069-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:36:15.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:36:15.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:36:10.993" endtime="20210819 05:36:15.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:36:15.902" level="INFO"/>
<status status="PASS" starttime="20210819 05:36:15.901" endtime="20210819 05:36:15.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:36:15.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:36:15.903" endtime="20210819 05:36:15.904"/>
</kw>
<status status="PASS" starttime="20210819 05:36:10.992" endtime="20210819 05:36:15.904"/>
</kw>
<msg timestamp="20210819 05:36:15.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:36:10.992" endtime="20210819 05:36:15.905"/>
</kw>
<status status="PASS" starttime="20210819 05:36:10.991" endtime="20210819 05:36:15.905"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:36:15.912" level="INFO">Running command 'ozone sh key put 80069-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:38:10.963" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210819 05:36:15.910" endtime="20210819 05:38:10.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210819 05:38:10.964" endtime="20210819 05:38:10.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210819 05:38:10.964" endtime="20210819 05:38:10.964"/>
</kw>
<status status="FAIL" starttime="20210819 05:36:15.909" endtime="20210819 05:38:10.965"/>
</kw>
<msg timestamp="20210819 05:38:10.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210819 05:36:15.908" endtime="20210819 05:38:10.965"/>
</kw>
<status status="FAIL" starttime="20210819 05:36:15.906" endtime="20210819 05:38:10.966"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210819 05:38:10.966" endtime="20210819 05:38:10.966"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210819 05:36:10.962" endtime="20210819 05:38:10.967">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:38:10.976" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:38:10.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:38:10.981" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:38:10.973" endtime="20210819 05:38:10.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:38:10.984" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:38:10.982" endtime="20210819 05:38:10.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:38:10.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:38:10.984" endtime="20210819 05:38:10.985"/>
</kw>
<status status="PASS" starttime="20210819 05:38:10.972" endtime="20210819 05:38:10.986"/>
</kw>
<msg timestamp="20210819 05:38:10.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:38:10.972" endtime="20210819 05:38:10.987"/>
</kw>
<msg timestamp="20210819 05:38:10.987" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:38:10.971" endtime="20210819 05:38:10.987"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:38:10.988" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:38:10.987" endtime="20210819 05:38:10.988"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:38:10.994" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:38:11.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:38:11.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:38:10.991" endtime="20210819 05:38:11.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:38:11.007" level="INFO"/>
<status status="PASS" starttime="20210819 05:38:11.005" endtime="20210819 05:38:11.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:38:11.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:38:11.007" endtime="20210819 05:38:11.008"/>
</kw>
<status status="PASS" starttime="20210819 05:38:10.991" endtime="20210819 05:38:11.008"/>
</kw>
<msg timestamp="20210819 05:38:11.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:38:10.990" endtime="20210819 05:38:11.009"/>
</kw>
<status status="PASS" starttime="20210819 05:38:10.989" endtime="20210819 05:38:11.009"/>
</kw>
<status status="PASS" starttime="20210819 05:38:10.989" endtime="20210819 05:38:11.009"/>
</kw>
<status status="PASS" starttime="20210819 05:38:10.971" endtime="20210819 05:38:11.010"/>
</kw>
<status status="PASS" starttime="20210819 05:38:10.970" endtime="20210819 05:38:11.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:38:11.015" level="INFO">Running command 'ozone sh bucket delete 80069-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:38:18.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:38:18.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:38:11.012" endtime="20210819 05:38:18.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:38:18.633" level="INFO"/>
<status status="PASS" starttime="20210819 05:38:18.632" endtime="20210819 05:38:18.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:38:18.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:38:18.633" endtime="20210819 05:38:18.634"/>
</kw>
<status status="PASS" starttime="20210819 05:38:11.011" endtime="20210819 05:38:18.634"/>
</kw>
<msg timestamp="20210819 05:38:18.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:38:11.011" endtime="20210819 05:38:18.635"/>
</kw>
<status status="PASS" starttime="20210819 05:38:11.010" endtime="20210819 05:38:18.635"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:38:18.640" level="INFO">Running command 'ozone sh bucket list 80069-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:38:26.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:38:26.303" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T...</msg>
<status status="PASS" starttime="20210819 05:38:18.637" endtime="20210819 05:38:26.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:38:26.305" level="INFO">{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:35:08.580Z",
  "modificationTime" : "2021-08-19T05:35:08.580Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:29:23.077Z",
  "modificationTime" : "2021-08-19T05:29:23.077Z",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:28:44.879Z",
  "modificationTime" : "2021-08-19T05:29:15.972Z",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:34:55.939Z",
  "modificationTime" : "2021-08-19T05:34:55.939Z",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:36:15.765Z",
  "modificationTime" : "2021-08-19T05:36:15.765Z",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:36:04.423Z",
  "modificationTime" : "2021-08-19T05:36:04.423Z",
  "sourceVolume" : "80069-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:35:49.467Z",
  "modificationTime" : "2021-08-19T05:35:49.467Z",
  "sourceVolume" : "80069-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:35:56.493Z",
  "modificationTime" : "2021-08-19T05:35:56.493Z",
  "sourceVolume" : "80069-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:28:31.107Z",
  "modificationTime" : "2021-08-19T05:29:10.566Z",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T05:28:37.211Z",
  "modificationTime" : "2021-08-19T05:28:37.211Z",
  "sourceVolume" : "80069-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210819 05:38:26.304" endtime="20210819 05:38:26.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:38:26.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:38:26.305" endtime="20210819 05:38:26.306"/>
</kw>
<status status="PASS" starttime="20210819 05:38:18.637" endtime="20210819 05:38:26.307"/>
</kw>
<msg timestamp="20210819 05:38:26.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:38:18.636" endtime="20210819 05:38:26.307"/>
</kw>
<msg timestamp="20210819 05:38:26.308" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "80069-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-19T...</msg>
<status status="PASS" starttime="20210819 05:38:18.635" endtime="20210819 05:38:26.308"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:38:26.308" endtime="20210819 05:38:26.309"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:38:26.314" level="INFO">Running command 'ozone sh key list 80069-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:38:33.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:38:33.639" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210819 05:38:26.312" endtime="20210819 05:38:33.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:38:33.641" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210819 05:38:33.640" endtime="20210819 05:38:33.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:38:33.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:38:33.641" endtime="20210819 05:38:33.642"/>
</kw>
<status status="PASS" starttime="20210819 05:38:26.310" endtime="20210819 05:38:33.642"/>
</kw>
<msg timestamp="20210819 05:38:33.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:38:26.310" endtime="20210819 05:38:33.642"/>
</kw>
<msg timestamp="20210819 05:38:33.643" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210819 05:38:26.309" endtime="20210819 05:38:33.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:38:33.643" endtime="20210819 05:38:33.644"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210819 05:38:10.968" endtime="20210819 05:38:33.644"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210819 05:24:45.832" endtime="20210819 05:38:33.647"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210819 05:38:33.679" level="INFO">${random} = 15650</msg>
<status status="PASS" starttime="20210819 05:38:33.678" endtime="20210819 05:38:33.679"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:38:33.680" level="INFO">${prefix} = 15650</msg>
<status status="PASS" starttime="20210819 05:38:33.679" endtime="20210819 05:38:33.680"/>
</kw>
<status status="PASS" starttime="20210819 05:38:33.678" endtime="20210819 05:38:33.680"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:38:33.686" level="INFO">Running command 'ozone sh volume info /15650-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:38:40.997" level="INFO">${rc} = 255</msg>
<msg timestamp="20210819 05:38:40.998" level="INFO">${output} = VOLUME_NOT_FOUND Volume 15650-rpcbasic is not found</msg>
<status status="PASS" starttime="20210819 05:38:33.684" endtime="20210819 05:38:40.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:38:41.000" level="INFO">VOLUME_NOT_FOUND Volume 15650-rpcbasic is not found</msg>
<status status="PASS" starttime="20210819 05:38:40.998" endtime="20210819 05:38:41.001"/>
</kw>
<msg timestamp="20210819 05:38:41.001" level="INFO">${result} = VOLUME_NOT_FOUND Volume 15650-rpcbasic is not found</msg>
<status status="PASS" starttime="20210819 05:38:33.683" endtime="20210819 05:38:41.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:38:41.002" endtime="20210819 05:38:41.002"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:38:41.007" level="INFO">Running command 'ozone sh volume create /15650-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:38:48.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:38:48.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:38:41.004" endtime="20210819 05:38:48.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:38:48.927" level="INFO"/>
<status status="PASS" starttime="20210819 05:38:48.926" endtime="20210819 05:38:48.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:38:48.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:38:48.927" endtime="20210819 05:38:48.928"/>
</kw>
<status status="PASS" starttime="20210819 05:38:41.004" endtime="20210819 05:38:48.929"/>
</kw>
<msg timestamp="20210819 05:38:48.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:38:41.003" endtime="20210819 05:38:48.929"/>
</kw>
<msg timestamp="20210819 05:38:48.929" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210819 05:38:41.002" endtime="20210819 05:38:48.929"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:38:48.930" endtime="20210819 05:38:48.931"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:38:48.936" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="15650-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:38:56.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:38:56.989" level="INFO">${output} = {
  "metadata": {},
  "name": "15650-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210819 05:38:48.933" endtime="20210819 05:38:56.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:38:56.992" level="INFO">{
  "metadata": {},
  "name": "15650-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-19T05:38:48.558Z",
  "modificationTime": "2021-08-19T05:38:48.558Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210819 05:38:56.990" endtime="20210819 05:38:56.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:38:56.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:38:56.993" endtime="20210819 05:38:56.994"/>
</kw>
<status status="PASS" starttime="20210819 05:38:48.932" endtime="20210819 05:38:56.995"/>
</kw>
<msg timestamp="20210819 05:38:56.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:38:48.932" endtime="20210819 05:38:56.995"/>
</kw>
<msg timestamp="20210819 05:38:56.996" level="INFO">${result} = {
  "metadata": {},
  "name": "15650-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210819 05:38:48.931" endtime="20210819 05:38:56.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:38:56.996" endtime="20210819 05:38:56.997"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:38:57.004" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="15650-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:39:05.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:39:05.425" level="INFO">${output} = {
  "metadata": {},
  "name": "15650-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210819 05:38:57.001" endtime="20210819 05:39:05.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:39:05.426" level="INFO">{
  "metadata": {},
  "name": "15650-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-19T05:38:48.558Z",
  "modificationTime": "2021-08-19T05:38:48.558Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210819 05:39:05.425" endtime="20210819 05:39:05.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:39:05.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:39:05.426" endtime="20210819 05:39:05.427"/>
</kw>
<status status="PASS" starttime="20210819 05:38:56.999" endtime="20210819 05:39:05.427"/>
</kw>
<msg timestamp="20210819 05:39:05.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:38:56.999" endtime="20210819 05:39:05.427"/>
</kw>
<msg timestamp="20210819 05:39:05.428" level="INFO">${result} = {
  "metadata": {},
  "name": "15650-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210819 05:38:56.997" endtime="20210819 05:39:05.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:39:05.429" endtime="20210819 05:39:05.429"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:39:05.433" level="INFO">Running command 'ozone sh volume setquota /15650-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:39:11.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:39:11.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:39:05.431" endtime="20210819 05:39:11.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:39:11.060" level="INFO"/>
<status status="PASS" starttime="20210819 05:39:11.059" endtime="20210819 05:39:11.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:39:11.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:39:11.061" endtime="20210819 05:39:11.062"/>
</kw>
<status status="PASS" starttime="20210819 05:39:05.430" endtime="20210819 05:39:11.063"/>
</kw>
<msg timestamp="20210819 05:39:11.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:39:05.430" endtime="20210819 05:39:11.064"/>
</kw>
<status status="PASS" starttime="20210819 05:39:05.429" endtime="20210819 05:39:11.065"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:39:11.073" level="INFO">Running command 'ozone sh volume info /15650-rpcbasic | jq -r '. | select(.name=="15650-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:39:18.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:39:18.512" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210819 05:39:11.070" endtime="20210819 05:39:18.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:39:18.515" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210819 05:39:18.514" endtime="20210819 05:39:18.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:39:18.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:39:18.516" endtime="20210819 05:39:18.516"/>
</kw>
<status status="PASS" starttime="20210819 05:39:11.069" endtime="20210819 05:39:18.517"/>
</kw>
<msg timestamp="20210819 05:39:18.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:39:11.068" endtime="20210819 05:39:18.518"/>
</kw>
<msg timestamp="20210819 05:39:18.519" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210819 05:39:11.066" endtime="20210819 05:39:18.519"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:39:18.519" endtime="20210819 05:39:18.520"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:39:18.527" level="INFO">Running command 'ozone sh bucket create /15650-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:39:26.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:39:26.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:39:18.524" endtime="20210819 05:39:26.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:39:26.250" level="INFO"/>
<status status="PASS" starttime="20210819 05:39:26.249" endtime="20210819 05:39:26.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:39:26.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:39:26.251" endtime="20210819 05:39:26.252"/>
</kw>
<status status="PASS" starttime="20210819 05:39:18.523" endtime="20210819 05:39:26.253"/>
</kw>
<msg timestamp="20210819 05:39:26.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:39:18.522" endtime="20210819 05:39:26.253"/>
</kw>
<status status="PASS" starttime="20210819 05:39:18.520" endtime="20210819 05:39:26.254"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:39:26.261" level="INFO">Running command 'ozone sh bucket info /15650-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:39:34.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:39:34.896" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210819 05:39:26.258" endtime="20210819 05:39:34.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:39:34.899" level="INFO">DISK</msg>
<status status="PASS" starttime="20210819 05:39:34.897" endtime="20210819 05:39:34.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:39:34.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:39:34.899" endtime="20210819 05:39:34.901"/>
</kw>
<status status="PASS" starttime="20210819 05:39:26.257" endtime="20210819 05:39:34.902"/>
</kw>
<msg timestamp="20210819 05:39:34.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:39:26.256" endtime="20210819 05:39:34.902"/>
</kw>
<msg timestamp="20210819 05:39:34.903" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210819 05:39:26.254" endtime="20210819 05:39:34.903"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:39:34.903" endtime="20210819 05:39:34.904"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:39:34.916" level="INFO">Running command 'ozone sh bucket info /15650-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:39:43.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:39:43.007" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210819 05:39:34.912" endtime="20210819 05:39:43.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:39:43.008" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210819 05:39:43.008" endtime="20210819 05:39:43.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:39:43.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:39:43.009" endtime="20210819 05:39:43.009"/>
</kw>
<status status="PASS" starttime="20210819 05:39:34.908" endtime="20210819 05:39:43.010"/>
</kw>
<msg timestamp="20210819 05:39:43.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:39:34.907" endtime="20210819 05:39:43.010"/>
</kw>
<msg timestamp="20210819 05:39:43.011" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210819 05:39:34.905" endtime="20210819 05:39:43.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:39:43.011" endtime="20210819 05:39:43.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:39:43.017" level="INFO">Running command 'ozone sh bucket info /15650-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:39:48.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:39:48.608" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210819 05:39:43.014" endtime="20210819 05:39:48.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:39:48.610" level="INFO">100</msg>
<status status="PASS" starttime="20210819 05:39:48.609" endtime="20210819 05:39:48.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:39:48.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:39:48.610" endtime="20210819 05:39:48.611"/>
</kw>
<status status="PASS" starttime="20210819 05:39:43.013" endtime="20210819 05:39:48.611"/>
</kw>
<msg timestamp="20210819 05:39:48.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:39:43.013" endtime="20210819 05:39:48.612"/>
</kw>
<msg timestamp="20210819 05:39:48.612" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210819 05:39:43.012" endtime="20210819 05:39:48.612"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:39:48.612" endtime="20210819 05:39:48.613"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:39:48.618" level="INFO">Running command 'ozone sh bucket setquota /15650-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:39:55.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:39:55.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:39:48.615" endtime="20210819 05:39:55.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:39:55.690" level="INFO"/>
<status status="PASS" starttime="20210819 05:39:55.688" endtime="20210819 05:39:55.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:39:55.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:39:55.690" endtime="20210819 05:39:55.692"/>
</kw>
<status status="PASS" starttime="20210819 05:39:48.614" endtime="20210819 05:39:55.692"/>
</kw>
<msg timestamp="20210819 05:39:55.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:39:48.614" endtime="20210819 05:39:55.693"/>
</kw>
<status status="PASS" starttime="20210819 05:39:48.613" endtime="20210819 05:39:55.693"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:39:55.699" level="INFO">Running command 'ozone sh bucket info /15650-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:40:03.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:40:03.688" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210819 05:39:55.696" endtime="20210819 05:40:03.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:40:03.689" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210819 05:40:03.689" endtime="20210819 05:40:03.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:40:03.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:40:03.690" endtime="20210819 05:40:03.690"/>
</kw>
<status status="PASS" starttime="20210819 05:39:55.695" endtime="20210819 05:40:03.691"/>
</kw>
<msg timestamp="20210819 05:40:03.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:39:55.695" endtime="20210819 05:40:03.691"/>
</kw>
<msg timestamp="20210819 05:40:03.691" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210819 05:39:55.693" endtime="20210819 05:40:03.691"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:40:03.691" endtime="20210819 05:40:03.692"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:40:03.698" level="INFO">Running command 'ozone sh bucket info /15650-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:40:10.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:40:10.639" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210819 05:40:03.694" endtime="20210819 05:40:10.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:40:10.641" level="INFO">1000</msg>
<status status="PASS" starttime="20210819 05:40:10.640" endtime="20210819 05:40:10.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:40:10.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:40:10.641" endtime="20210819 05:40:10.643"/>
</kw>
<status status="PASS" starttime="20210819 05:40:03.693" endtime="20210819 05:40:10.643"/>
</kw>
<msg timestamp="20210819 05:40:10.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:40:03.693" endtime="20210819 05:40:10.644"/>
</kw>
<msg timestamp="20210819 05:40:10.644" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210819 05:40:03.692" endtime="20210819 05:40:10.644"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:40:10.645" endtime="20210819 05:40:10.646"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:40:10.654" level="INFO">Running command 'ozone sh bucket list /15650-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:40:17.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:40:17.642" level="INFO">${output} = 15650-rpcbasic</msg>
<status status="PASS" starttime="20210819 05:40:10.651" endtime="20210819 05:40:17.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:40:17.644" level="INFO">15650-rpcbasic</msg>
<status status="PASS" starttime="20210819 05:40:17.642" endtime="20210819 05:40:17.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:40:17.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:40:17.645" endtime="20210819 05:40:17.646"/>
</kw>
<status status="PASS" starttime="20210819 05:40:10.649" endtime="20210819 05:40:17.647"/>
</kw>
<msg timestamp="20210819 05:40:17.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:40:10.649" endtime="20210819 05:40:17.647"/>
</kw>
<msg timestamp="20210819 05:40:17.648" level="INFO">${result} = 15650-rpcbasic</msg>
<status status="PASS" starttime="20210819 05:40:10.646" endtime="20210819 05:40:17.648"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:40:17.648" endtime="20210819 05:40:17.649"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:40:17.655" level="INFO">Running command 'ozone sh key put /15650-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:43:27.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:43:27.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:40:17.653" endtime="20210819 05:43:27.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:43:27.094" level="INFO"/>
<status status="PASS" starttime="20210819 05:43:27.093" endtime="20210819 05:43:27.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:43:27.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:43:27.094" endtime="20210819 05:43:27.095"/>
</kw>
<status status="PASS" starttime="20210819 05:40:17.652" endtime="20210819 05:43:27.095"/>
</kw>
<msg timestamp="20210819 05:43:27.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:40:17.651" endtime="20210819 05:43:27.095"/>
</kw>
<status status="PASS" starttime="20210819 05:40:17.651" endtime="20210819 05:43:27.096"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:43:27.101" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:43:27.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:43:27.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:43:27.098" endtime="20210819 05:43:27.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:43:27.108" level="INFO"/>
<status status="PASS" starttime="20210819 05:43:27.106" endtime="20210819 05:43:27.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:43:27.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:43:27.108" endtime="20210819 05:43:27.110"/>
</kw>
<status status="PASS" starttime="20210819 05:43:27.097" endtime="20210819 05:43:27.111"/>
</kw>
<msg timestamp="20210819 05:43:27.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:43:27.096" endtime="20210819 05:43:27.112"/>
</kw>
<status status="PASS" starttime="20210819 05:43:27.096" endtime="20210819 05:43:27.112"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:43:27.119" level="INFO">Running command 'ozone sh key get /15650-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:43:33.682" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210819 05:43:27.116" endtime="20210819 05:43:33.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.683" endtime="20210819 05:43:33.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.683" endtime="20210819 05:43:33.683"/>
</kw>
<status status="FAIL" starttime="20210819 05:43:27.115" endtime="20210819 05:43:33.684"/>
</kw>
<msg timestamp="20210819 05:43:33.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210819 05:43:27.114" endtime="20210819 05:43:33.684"/>
</kw>
<status status="FAIL" starttime="20210819 05:43:27.113" endtime="20210819 05:43:33.688"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.688" endtime="20210819 05:43:33.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.689" endtime="20210819 05:43:33.689"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.689" endtime="20210819 05:43:33.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.689" endtime="20210819 05:43:33.690"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.690" endtime="20210819 05:43:33.690"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.690" endtime="20210819 05:43:33.690"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.690" endtime="20210819 05:43:33.691"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.691" endtime="20210819 05:43:33.691"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.691" endtime="20210819 05:43:33.691"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.691" endtime="20210819 05:43:33.691"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.692" endtime="20210819 05:43:33.692"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.692" endtime="20210819 05:43:33.694"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.694" endtime="20210819 05:43:33.695"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.695" endtime="20210819 05:43:33.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.696" endtime="20210819 05:43:33.696"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.696" endtime="20210819 05:43:33.696"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.697" endtime="20210819 05:43:33.697"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.697" endtime="20210819 05:43:33.698"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.698" endtime="20210819 05:43:33.698"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.698" endtime="20210819 05:43:33.698"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.698" endtime="20210819 05:43:33.698"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.698" endtime="20210819 05:43:33.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.702" endtime="20210819 05:43:33.702"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.702" endtime="20210819 05:43:33.703"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.703" endtime="20210819 05:43:33.704"/>
</kw>
<status status="FAIL" starttime="20210819 05:40:17.650" endtime="20210819 05:43:33.704"/>
</kw>
<status status="FAIL" starttime="20210819 05:40:17.650" endtime="20210819 05:43:33.704"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.705" endtime="20210819 05:43:33.705"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.706" endtime="20210819 05:43:33.706"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.707" endtime="20210819 05:43:33.707"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.707" endtime="20210819 05:43:33.707"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.707" endtime="20210819 05:43:33.708"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.708" endtime="20210819 05:43:33.708"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.708" endtime="20210819 05:43:33.708"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.708" endtime="20210819 05:43:33.708"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.708" endtime="20210819 05:43:33.711"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.711" endtime="20210819 05:43:33.711"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.713" endtime="20210819 05:43:33.713"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.713" endtime="20210819 05:43:33.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.713" endtime="20210819 05:43:33.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.713" endtime="20210819 05:43:33.714"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.714" endtime="20210819 05:43:33.714"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.714" endtime="20210819 05:43:33.715"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.715" endtime="20210819 05:43:33.715"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.715" endtime="20210819 05:43:33.715"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.715" endtime="20210819 05:43:33.719"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.720" endtime="20210819 05:43:33.721"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.721" endtime="20210819 05:43:33.721"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.721" endtime="20210819 05:43:33.721"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.721" endtime="20210819 05:43:33.722"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:43:33.722" endtime="20210819 05:43:33.722"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.722" endtime="20210819 05:43:33.722"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 05:43:33.722" endtime="20210819 05:43:33.722"/>
</kw>
<status status="FAIL" starttime="20210819 05:38:33.681" endtime="20210819 05:43:33.723"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210819 05:38:33.680" endtime="20210819 05:43:33.723">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210819 05:38:33.653" endtime="20210819 05:43:33.730"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210819 05:43:33.785" level="INFO">${random} = 63477</msg>
<status status="PASS" starttime="20210819 05:43:33.784" endtime="20210819 05:43:33.786"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:43:33.787" level="INFO">${prefix} = 63477</msg>
<status status="PASS" starttime="20210819 05:43:33.786" endtime="20210819 05:43:33.787"/>
</kw>
<status status="PASS" starttime="20210819 05:43:33.780" endtime="20210819 05:43:33.788"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:43:33.804" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:43:33.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:43:33.811" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:43:33.800" endtime="20210819 05:43:33.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:43:33.814" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:43:33.811" endtime="20210819 05:43:33.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:43:33.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:43:33.814" endtime="20210819 05:43:33.815"/>
</kw>
<status status="PASS" starttime="20210819 05:43:33.797" endtime="20210819 05:43:33.820"/>
</kw>
<msg timestamp="20210819 05:43:33.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:43:33.796" endtime="20210819 05:43:33.821"/>
</kw>
<msg timestamp="20210819 05:43:33.821" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:43:33.792" endtime="20210819 05:43:33.821"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:43:33.824" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:43:33.822" endtime="20210819 05:43:33.824"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:43:33.835" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:43:34.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:43:34.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:43:33.832" endtime="20210819 05:43:34.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:43:34.082" level="INFO"/>
<status status="PASS" starttime="20210819 05:43:34.081" endtime="20210819 05:43:34.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:43:34.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:43:34.082" endtime="20210819 05:43:34.083"/>
</kw>
<status status="PASS" starttime="20210819 05:43:33.830" endtime="20210819 05:43:34.084"/>
</kw>
<msg timestamp="20210819 05:43:34.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:43:33.828" endtime="20210819 05:43:34.084"/>
</kw>
<status status="PASS" starttime="20210819 05:43:33.826" endtime="20210819 05:43:34.084"/>
</kw>
<status status="PASS" starttime="20210819 05:43:33.824" endtime="20210819 05:43:34.084"/>
</kw>
<status status="PASS" starttime="20210819 05:43:33.791" endtime="20210819 05:43:34.085"/>
</kw>
<status status="PASS" starttime="20210819 05:43:33.791" endtime="20210819 05:43:34.085"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:43:34.102" level="INFO">Running command 'ozone sh volume info o3://om:9862/63477-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:43:45.405" level="INFO">${rc} = 255</msg>
<msg timestamp="20210819 05:43:45.405" level="INFO">${output} = VOLUME_NOT_FOUND Volume 63477-rpcwoport is not found</msg>
<status status="PASS" starttime="20210819 05:43:34.091" endtime="20210819 05:43:45.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:43:45.407" level="INFO">VOLUME_NOT_FOUND Volume 63477-rpcwoport is not found</msg>
<status status="PASS" starttime="20210819 05:43:45.406" endtime="20210819 05:43:45.407"/>
</kw>
<msg timestamp="20210819 05:43:45.407" level="INFO">${result} = VOLUME_NOT_FOUND Volume 63477-rpcwoport is not found</msg>
<status status="PASS" starttime="20210819 05:43:34.086" endtime="20210819 05:43:45.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:43:45.407" endtime="20210819 05:43:45.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:43:45.412" level="INFO">Running command 'ozone sh volume create o3://om:9862/63477-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:43:51.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:43:51.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:43:45.410" endtime="20210819 05:43:51.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:43:51.096" level="INFO"/>
<status status="PASS" starttime="20210819 05:43:51.094" endtime="20210819 05:43:51.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:43:51.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:43:51.096" endtime="20210819 05:43:51.098"/>
</kw>
<status status="PASS" starttime="20210819 05:43:45.409" endtime="20210819 05:43:51.098"/>
</kw>
<msg timestamp="20210819 05:43:51.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:43:45.409" endtime="20210819 05:43:51.099"/>
</kw>
<msg timestamp="20210819 05:43:51.099" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210819 05:43:45.408" endtime="20210819 05:43:51.099"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:43:51.100" endtime="20210819 05:43:51.101"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:43:51.109" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="63477-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:43:58.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:43:58.812" level="INFO">${output} = {
  "metadata": {},
  "name": "63477-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210819 05:43:51.105" endtime="20210819 05:43:58.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:43:58.816" level="INFO">{
  "metadata": {},
  "name": "63477-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-19T05:43:50.837Z",
  "modificationTime": "2021-08-19T05:43:50.837Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210819 05:43:58.814" endtime="20210819 05:43:58.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:43:58.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:43:58.816" endtime="20210819 05:43:58.817"/>
</kw>
<status status="PASS" starttime="20210819 05:43:51.104" endtime="20210819 05:43:58.817"/>
</kw>
<msg timestamp="20210819 05:43:58.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:43:51.103" endtime="20210819 05:43:58.818"/>
</kw>
<msg timestamp="20210819 05:43:58.818" level="INFO">${result} = {
  "metadata": {},
  "name": "63477-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210819 05:43:51.101" endtime="20210819 05:43:58.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:43:58.819" endtime="20210819 05:43:58.820"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:43:58.826" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="63477-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:44:07.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:44:07.459" level="INFO">${output} = {
  "metadata": {},
  "name": "63477-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210819 05:43:58.823" endtime="20210819 05:44:07.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:44:07.461" level="INFO">{
  "metadata": {},
  "name": "63477-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-19T05:43:50.837Z",
  "modificationTime": "2021-08-19T05:43:50.837Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210819 05:44:07.460" endtime="20210819 05:44:07.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:44:07.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:44:07.461" endtime="20210819 05:44:07.462"/>
</kw>
<status status="PASS" starttime="20210819 05:43:58.822" endtime="20210819 05:44:07.462"/>
</kw>
<msg timestamp="20210819 05:44:07.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:43:58.822" endtime="20210819 05:44:07.462"/>
</kw>
<msg timestamp="20210819 05:44:07.462" level="INFO">${result} = {
  "metadata": {},
  "name": "63477-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210819 05:43:58.820" endtime="20210819 05:44:07.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:44:07.463" endtime="20210819 05:44:07.463"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:44:07.470" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/63477-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:44:14.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:44:14.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:44:07.467" endtime="20210819 05:44:14.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:44:14.833" level="INFO"/>
<status status="PASS" starttime="20210819 05:44:14.831" endtime="20210819 05:44:14.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:44:14.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:44:14.834" endtime="20210819 05:44:14.835"/>
</kw>
<status status="PASS" starttime="20210819 05:44:07.465" endtime="20210819 05:44:14.835"/>
</kw>
<msg timestamp="20210819 05:44:14.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:44:07.464" endtime="20210819 05:44:14.836"/>
</kw>
<status status="PASS" starttime="20210819 05:44:07.463" endtime="20210819 05:44:14.837"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:44:14.845" level="INFO">Running command 'ozone sh volume info o3://om:9862/63477-rpcwoport | jq -r '. | select(.name=="63477-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:44:22.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:44:22.879" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210819 05:44:14.842" endtime="20210819 05:44:22.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:44:22.881" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210819 05:44:22.880" endtime="20210819 05:44:22.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:44:22.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:44:22.881" endtime="20210819 05:44:22.882"/>
</kw>
<status status="PASS" starttime="20210819 05:44:14.840" endtime="20210819 05:44:22.883"/>
</kw>
<msg timestamp="20210819 05:44:22.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:44:14.839" endtime="20210819 05:44:22.883"/>
</kw>
<msg timestamp="20210819 05:44:22.884" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210819 05:44:14.837" endtime="20210819 05:44:22.884"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:44:22.884" endtime="20210819 05:44:22.885"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:44:22.890" level="INFO">Running command 'ozone sh bucket create o3://om:9862/63477-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:44:29.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:44:29.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:44:22.887" endtime="20210819 05:44:29.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:44:29.831" level="INFO"/>
<status status="PASS" starttime="20210819 05:44:29.830" endtime="20210819 05:44:29.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:44:29.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:44:29.831" endtime="20210819 05:44:29.832"/>
</kw>
<status status="PASS" starttime="20210819 05:44:22.887" endtime="20210819 05:44:29.832"/>
</kw>
<msg timestamp="20210819 05:44:29.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:44:22.886" endtime="20210819 05:44:29.832"/>
</kw>
<status status="PASS" starttime="20210819 05:44:22.885" endtime="20210819 05:44:29.833"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:44:29.842" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63477-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:44:36.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:44:36.248" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210819 05:44:29.838" endtime="20210819 05:44:36.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:44:36.250" level="INFO">DISK</msg>
<status status="PASS" starttime="20210819 05:44:36.249" endtime="20210819 05:44:36.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:44:36.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:44:36.250" endtime="20210819 05:44:36.251"/>
</kw>
<status status="PASS" starttime="20210819 05:44:29.837" endtime="20210819 05:44:36.251"/>
</kw>
<msg timestamp="20210819 05:44:36.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:44:29.835" endtime="20210819 05:44:36.251"/>
</kw>
<msg timestamp="20210819 05:44:36.252" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210819 05:44:29.833" endtime="20210819 05:44:36.252"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:44:36.252" endtime="20210819 05:44:36.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:44:36.262" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63477-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:44:42.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:44:42.557" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210819 05:44:36.259" endtime="20210819 05:44:42.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:44:42.560" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210819 05:44:42.558" endtime="20210819 05:44:42.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:44:42.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:44:42.560" endtime="20210819 05:44:42.562"/>
</kw>
<status status="PASS" starttime="20210819 05:44:36.256" endtime="20210819 05:44:42.563"/>
</kw>
<msg timestamp="20210819 05:44:42.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:44:36.255" endtime="20210819 05:44:42.563"/>
</kw>
<msg timestamp="20210819 05:44:42.564" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210819 05:44:36.253" endtime="20210819 05:44:42.564"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:44:42.565" endtime="20210819 05:44:42.566"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:44:42.573" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63477-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:44:50.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:44:50.820" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210819 05:44:42.569" endtime="20210819 05:44:50.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:44:50.822" level="INFO">100</msg>
<status status="PASS" starttime="20210819 05:44:50.821" endtime="20210819 05:44:50.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:44:50.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:44:50.822" endtime="20210819 05:44:50.823"/>
</kw>
<status status="PASS" starttime="20210819 05:44:42.569" endtime="20210819 05:44:50.823"/>
</kw>
<msg timestamp="20210819 05:44:50.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:44:42.568" endtime="20210819 05:44:50.823"/>
</kw>
<msg timestamp="20210819 05:44:50.824" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210819 05:44:42.566" endtime="20210819 05:44:50.824"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:44:50.824" endtime="20210819 05:44:50.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:44:50.830" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/63477-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:44:56.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:44:56.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:44:50.828" endtime="20210819 05:44:56.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:44:56.163" level="INFO"/>
<status status="PASS" starttime="20210819 05:44:56.163" endtime="20210819 05:44:56.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:44:56.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:44:56.164" endtime="20210819 05:44:56.165"/>
</kw>
<status status="PASS" starttime="20210819 05:44:50.827" endtime="20210819 05:44:56.165"/>
</kw>
<msg timestamp="20210819 05:44:56.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:44:50.826" endtime="20210819 05:44:56.166"/>
</kw>
<status status="PASS" starttime="20210819 05:44:50.825" endtime="20210819 05:44:56.166"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:44:56.172" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63477-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:45:02.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:45:02.316" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210819 05:44:56.170" endtime="20210819 05:45:02.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:45:02.318" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210819 05:45:02.317" endtime="20210819 05:45:02.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:45:02.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:45:02.318" endtime="20210819 05:45:02.319"/>
</kw>
<status status="PASS" starttime="20210819 05:44:56.169" endtime="20210819 05:45:02.321"/>
</kw>
<msg timestamp="20210819 05:45:02.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:44:56.168" endtime="20210819 05:45:02.325"/>
</kw>
<msg timestamp="20210819 05:45:02.326" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210819 05:44:56.167" endtime="20210819 05:45:02.326"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:45:02.326" endtime="20210819 05:45:02.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:45:02.334" level="INFO">Running command 'ozone sh bucket info o3://om:9862/63477-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:45:10.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:45:10.846" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210819 05:45:02.331" endtime="20210819 05:45:10.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:45:10.848" level="INFO">1000</msg>
<status status="PASS" starttime="20210819 05:45:10.847" endtime="20210819 05:45:10.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:45:10.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:45:10.848" endtime="20210819 05:45:10.849"/>
</kw>
<status status="PASS" starttime="20210819 05:45:02.330" endtime="20210819 05:45:10.849"/>
</kw>
<msg timestamp="20210819 05:45:10.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:45:02.329" endtime="20210819 05:45:10.849"/>
</kw>
<msg timestamp="20210819 05:45:10.849" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210819 05:45:02.328" endtime="20210819 05:45:10.850"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:45:10.850" endtime="20210819 05:45:10.850"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:45:10.856" level="INFO">Running command 'ozone sh bucket list o3://om:9862/63477-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:45:19.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:45:19.018" level="INFO">${output} = 63477-rpcwoport</msg>
<status status="PASS" starttime="20210819 05:45:10.853" endtime="20210819 05:45:19.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:45:19.021" level="INFO">63477-rpcwoport</msg>
<status status="PASS" starttime="20210819 05:45:19.019" endtime="20210819 05:45:19.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:45:19.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:45:19.021" endtime="20210819 05:45:19.022"/>
</kw>
<status status="PASS" starttime="20210819 05:45:10.852" endtime="20210819 05:45:19.023"/>
</kw>
<msg timestamp="20210819 05:45:19.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:45:10.852" endtime="20210819 05:45:19.023"/>
</kw>
<msg timestamp="20210819 05:45:19.024" level="INFO">${result} = 63477-rpcwoport</msg>
<status status="PASS" starttime="20210819 05:45:10.850" endtime="20210819 05:45:19.024"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:45:19.024" endtime="20210819 05:45:19.025"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:45:19.037" level="INFO">Running command 'ozone sh key put o3://om:9862/63477-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:48:30.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:48:30.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:45:19.033" endtime="20210819 05:48:30.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:48:30.150" level="INFO"/>
<status status="PASS" starttime="20210819 05:48:30.149" endtime="20210819 05:48:30.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:48:30.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:48:30.150" endtime="20210819 05:48:30.151"/>
</kw>
<status status="PASS" starttime="20210819 05:45:19.032" endtime="20210819 05:48:30.151"/>
</kw>
<msg timestamp="20210819 05:48:30.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:45:19.029" endtime="20210819 05:48:30.151"/>
</kw>
<status status="PASS" starttime="20210819 05:45:19.028" endtime="20210819 05:48:30.152"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:48:30.158" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:48:30.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:48:30.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:48:30.155" endtime="20210819 05:48:30.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:48:30.164" level="INFO"/>
<status status="PASS" starttime="20210819 05:48:30.163" endtime="20210819 05:48:30.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:48:30.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:48:30.164" endtime="20210819 05:48:30.165"/>
</kw>
<status status="PASS" starttime="20210819 05:48:30.154" endtime="20210819 05:48:30.166"/>
</kw>
<msg timestamp="20210819 05:48:30.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:48:30.153" endtime="20210819 05:48:30.166"/>
</kw>
<status status="PASS" starttime="20210819 05:48:30.152" endtime="20210819 05:48:30.167"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:48:30.172" level="INFO">Running command 'ozone sh key get o3://om:9862/63477-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:48:33.791" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210819 05:48:30.170" endtime="20210819 05:48:33.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.792" endtime="20210819 05:48:33.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.793" endtime="20210819 05:48:33.793"/>
</kw>
<status status="FAIL" starttime="20210819 05:48:30.169" endtime="20210819 05:48:33.793"/>
</kw>
<msg timestamp="20210819 05:48:33.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210819 05:48:30.168" endtime="20210819 05:48:33.794"/>
</kw>
<status status="FAIL" starttime="20210819 05:48:30.167" endtime="20210819 05:48:33.794"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.794" endtime="20210819 05:48:33.795"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.795" endtime="20210819 05:48:33.795"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.795" endtime="20210819 05:48:33.795"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.795" endtime="20210819 05:48:33.795"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.796" endtime="20210819 05:48:33.796"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.796" endtime="20210819 05:48:33.796"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.796" endtime="20210819 05:48:33.797"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.797" endtime="20210819 05:48:33.797"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.797" endtime="20210819 05:48:33.797"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.798" endtime="20210819 05:48:33.798"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.798" endtime="20210819 05:48:33.798"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.799" endtime="20210819 05:48:33.799"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.799" endtime="20210819 05:48:33.799"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.807" endtime="20210819 05:48:33.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.810" endtime="20210819 05:48:33.810"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.812" endtime="20210819 05:48:33.812"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.812" endtime="20210819 05:48:33.815"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.817" endtime="20210819 05:48:33.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.818" endtime="20210819 05:48:33.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.819" endtime="20210819 05:48:33.820"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.820" endtime="20210819 05:48:33.821"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.821" endtime="20210819 05:48:33.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.822" endtime="20210819 05:48:33.823"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.823" endtime="20210819 05:48:33.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.825" endtime="20210819 05:48:33.825"/>
</kw>
<status status="FAIL" starttime="20210819 05:45:19.027" endtime="20210819 05:48:33.826"/>
</kw>
<status status="FAIL" starttime="20210819 05:45:19.026" endtime="20210819 05:48:33.826"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.827" endtime="20210819 05:48:33.828"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.828" endtime="20210819 05:48:33.828"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.829" endtime="20210819 05:48:33.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.831" endtime="20210819 05:48:33.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.831" endtime="20210819 05:48:33.832"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.832" endtime="20210819 05:48:33.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.834" endtime="20210819 05:48:33.834"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.835" endtime="20210819 05:48:33.835"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.837" endtime="20210819 05:48:33.837"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.837" endtime="20210819 05:48:33.839"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.840" endtime="20210819 05:48:33.840"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.840" endtime="20210819 05:48:33.841"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.841" endtime="20210819 05:48:33.841"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.842" endtime="20210819 05:48:33.842"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.842" endtime="20210819 05:48:33.842"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.843" endtime="20210819 05:48:33.843"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.844" endtime="20210819 05:48:33.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.845" endtime="20210819 05:48:33.846"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.846" endtime="20210819 05:48:33.847"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.847" endtime="20210819 05:48:33.847"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.849" endtime="20210819 05:48:33.849"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.850" endtime="20210819 05:48:33.850"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.851" endtime="20210819 05:48:33.851"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 05:48:33.923" endtime="20210819 05:48:33.923"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.924" endtime="20210819 05:48:33.924"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 05:48:33.925" endtime="20210819 05:48:33.925"/>
</kw>
<status status="FAIL" starttime="20210819 05:43:34.085" endtime="20210819 05:48:33.926"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210819 05:43:33.789" endtime="20210819 05:48:33.927">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:48:33.952" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:48:33.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:48:33.975" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:48:33.941" endtime="20210819 05:48:33.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:48:33.977" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:48:33.976" endtime="20210819 05:48:33.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:48:33.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:48:33.977" endtime="20210819 05:48:33.978"/>
</kw>
<status status="PASS" starttime="20210819 05:48:33.939" endtime="20210819 05:48:33.979"/>
</kw>
<msg timestamp="20210819 05:48:33.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:48:33.938" endtime="20210819 05:48:33.979"/>
</kw>
<msg timestamp="20210819 05:48:33.980" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:48:33.937" endtime="20210819 05:48:33.980"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:48:33.981" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:48:33.980" endtime="20210819 05:48:33.982"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:48:34.015" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:48:34.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:48:34.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:48:33.997" endtime="20210819 05:48:34.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:48:34.283" level="INFO"/>
<status status="PASS" starttime="20210819 05:48:34.282" endtime="20210819 05:48:34.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:48:34.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:48:34.284" endtime="20210819 05:48:34.284"/>
</kw>
<status status="PASS" starttime="20210819 05:48:33.992" endtime="20210819 05:48:34.284"/>
</kw>
<msg timestamp="20210819 05:48:34.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:48:33.989" endtime="20210819 05:48:34.285"/>
</kw>
<status status="PASS" starttime="20210819 05:48:33.986" endtime="20210819 05:48:34.285"/>
</kw>
<status status="PASS" starttime="20210819 05:48:33.983" endtime="20210819 05:48:34.285"/>
</kw>
<status status="PASS" starttime="20210819 05:48:33.934" endtime="20210819 05:48:34.286"/>
</kw>
<status status="PASS" starttime="20210819 05:48:33.933" endtime="20210819 05:48:34.286"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:48:34.311" level="INFO">Running command 'ozone sh volume create o3://om:9862/63477-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:48:47.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:48:47.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:48:34.293" endtime="20210819 05:48:47.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:48:47.453" level="INFO"/>
<status status="PASS" starttime="20210819 05:48:47.452" endtime="20210819 05:48:47.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:48:47.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:48:47.453" endtime="20210819 05:48:47.454"/>
</kw>
<status status="PASS" starttime="20210819 05:48:34.291" endtime="20210819 05:48:47.455"/>
</kw>
<msg timestamp="20210819 05:48:47.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:48:34.289" endtime="20210819 05:48:47.455"/>
</kw>
<status status="PASS" starttime="20210819 05:48:34.288" endtime="20210819 05:48:47.455"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:48:47.459" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/63477-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:48:55.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:48:55.190" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:48:47.457" endtime="20210819 05:48:55.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:48:55.193" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:48:55.191" endtime="20210819 05:48:55.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:48:55.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:48:55.193" endtime="20210819 05:48:55.194"/>
</kw>
<status status="PASS" starttime="20210819 05:48:47.457" endtime="20210819 05:48:55.195"/>
</kw>
<msg timestamp="20210819 05:48:55.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:48:47.456" endtime="20210819 05:48:55.195"/>
</kw>
<msg timestamp="20210819 05:48:55.196" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:48:47.455" endtime="20210819 05:48:55.196"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:48:55.196" endtime="20210819 05:48:55.198"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:48:55.204" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/63477-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:49:01.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:49:01.941" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210819 05:48:55.201" endtime="20210819 05:49:01.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:49:01.943" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210819 05:49:01.942" endtime="20210819 05:49:01.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:49:01.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:49:01.943" endtime="20210819 05:49:01.944"/>
</kw>
<status status="PASS" starttime="20210819 05:48:55.200" endtime="20210819 05:49:01.945"/>
</kw>
<msg timestamp="20210819 05:49:01.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:48:55.200" endtime="20210819 05:49:01.945"/>
</kw>
<msg timestamp="20210819 05:49:01.946" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210819 05:48:55.198" endtime="20210819 05:49:01.946"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:49:01.952" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/63477-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:49:08.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:49:08.290" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:49:01.948" endtime="20210819 05:49:08.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:49:08.292" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:49:08.291" endtime="20210819 05:49:08.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:49:08.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:49:08.292" endtime="20210819 05:49:08.293"/>
</kw>
<status status="PASS" starttime="20210819 05:49:01.947" endtime="20210819 05:49:08.294"/>
</kw>
<msg timestamp="20210819 05:49:08.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:49:01.947" endtime="20210819 05:49:08.294"/>
</kw>
<msg timestamp="20210819 05:49:08.294" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:49:01.946" endtime="20210819 05:49:08.294"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:49:08.294" endtime="20210819 05:49:08.296"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:49:08.301" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/63477-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:49:15.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:49:15.514" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210819 05:49:08.298" endtime="20210819 05:49:15.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:49:15.517" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210819 05:49:15.515" endtime="20210819 05:49:15.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:49:15.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:49:15.517" endtime="20210819 05:49:15.519"/>
</kw>
<status status="PASS" starttime="20210819 05:49:08.298" endtime="20210819 05:49:15.520"/>
</kw>
<msg timestamp="20210819 05:49:15.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:49:08.297" endtime="20210819 05:49:15.520"/>
</kw>
<msg timestamp="20210819 05:49:15.521" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210819 05:49:08.296" endtime="20210819 05:49:15.521"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:49:15.528" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/63477-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:49:24.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:49:24.013" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:49:15.525" endtime="20210819 05:49:24.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:49:24.016" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:49:24.014" endtime="20210819 05:49:24.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:49:24.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:49:24.017" endtime="20210819 05:49:24.019"/>
</kw>
<status status="PASS" starttime="20210819 05:49:15.523" endtime="20210819 05:49:24.020"/>
</kw>
<msg timestamp="20210819 05:49:24.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:49:15.523" endtime="20210819 05:49:24.021"/>
</kw>
<msg timestamp="20210819 05:49:24.024" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:49:15.521" endtime="20210819 05:49:24.024"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:49:24.024" endtime="20210819 05:49:24.026"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:49:24.033" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/63477-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:49:31.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:49:31.533" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210819 05:49:24.029" endtime="20210819 05:49:31.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:49:31.536" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210819 05:49:31.534" endtime="20210819 05:49:31.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:49:31.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:49:31.537" endtime="20210819 05:49:31.539"/>
</kw>
<status status="PASS" starttime="20210819 05:49:24.028" endtime="20210819 05:49:31.540"/>
</kw>
<msg timestamp="20210819 05:49:31.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:49:24.028" endtime="20210819 05:49:31.540"/>
</kw>
<msg timestamp="20210819 05:49:31.541" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210819 05:49:24.026" endtime="20210819 05:49:31.541"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:49:31.549" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/63477-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:49:39.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:49:39.564" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210819 05:49:31.546" endtime="20210819 05:49:39.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:49:39.567" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:49:39.565" endtime="20210819 05:49:39.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:49:39.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:49:39.569" endtime="20210819 05:49:39.570"/>
</kw>
<status status="PASS" starttime="20210819 05:49:31.544" endtime="20210819 05:49:39.571"/>
</kw>
<msg timestamp="20210819 05:49:39.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:49:31.543" endtime="20210819 05:49:39.572"/>
</kw>
<msg timestamp="20210819 05:49:39.572" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210819 05:49:31.541" endtime="20210819 05:49:39.573"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:49:39.573" endtime="20210819 05:49:39.574"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:49:39.574" endtime="20210819 05:49:39.576"/>
</kw>
<status status="PASS" starttime="20210819 05:48:34.286" endtime="20210819 05:49:39.577"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210819 05:48:33.930" endtime="20210819 05:49:39.578"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:49:39.587" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:49:39.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:49:39.592" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:49:39.585" endtime="20210819 05:49:39.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:49:39.593" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:49:39.592" endtime="20210819 05:49:39.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:49:39.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:49:39.593" endtime="20210819 05:49:39.594"/>
</kw>
<status status="PASS" starttime="20210819 05:49:39.584" endtime="20210819 05:49:39.594"/>
</kw>
<msg timestamp="20210819 05:49:39.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:49:39.583" endtime="20210819 05:49:39.594"/>
</kw>
<msg timestamp="20210819 05:49:39.595" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:49:39.583" endtime="20210819 05:49:39.595"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:49:39.596" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:49:39.595" endtime="20210819 05:49:39.596"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:49:39.602" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:49:39.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:49:39.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:49:39.600" endtime="20210819 05:49:39.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:49:39.613" level="INFO"/>
<status status="PASS" starttime="20210819 05:49:39.611" endtime="20210819 05:49:39.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:49:39.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:49:39.613" endtime="20210819 05:49:39.614"/>
</kw>
<status status="PASS" starttime="20210819 05:49:39.599" endtime="20210819 05:49:39.614"/>
</kw>
<msg timestamp="20210819 05:49:39.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:49:39.598" endtime="20210819 05:49:39.615"/>
</kw>
<status status="PASS" starttime="20210819 05:49:39.596" endtime="20210819 05:49:39.615"/>
</kw>
<status status="PASS" starttime="20210819 05:49:39.596" endtime="20210819 05:49:39.615"/>
</kw>
<status status="PASS" starttime="20210819 05:49:39.581" endtime="20210819 05:49:39.615"/>
</kw>
<status status="PASS" starttime="20210819 05:49:39.581" endtime="20210819 05:49:39.615"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:49:39.621" level="INFO">Running command 'ozone sh bucket create o3://om:9862/63477-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:49:46.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:49:46.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:49:39.619" endtime="20210819 05:49:46.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:49:46.434" level="INFO"/>
<status status="PASS" starttime="20210819 05:49:46.433" endtime="20210819 05:49:46.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:49:46.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:49:46.434" endtime="20210819 05:49:46.435"/>
</kw>
<status status="PASS" starttime="20210819 05:49:39.617" endtime="20210819 05:49:46.436"/>
</kw>
<msg timestamp="20210819 05:49:46.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:49:39.617" endtime="20210819 05:49:46.436"/>
</kw>
<status status="PASS" starttime="20210819 05:49:39.616" endtime="20210819 05:49:46.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:49:46.443" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/63477-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:49:54.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:49:54.480" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:49:46.440" endtime="20210819 05:49:54.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:49:54.483" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:49:54.482" endtime="20210819 05:49:54.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:49:54.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:49:54.483" endtime="20210819 05:49:54.485"/>
</kw>
<status status="PASS" starttime="20210819 05:49:46.439" endtime="20210819 05:49:54.486"/>
</kw>
<msg timestamp="20210819 05:49:54.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:49:46.439" endtime="20210819 05:49:54.486"/>
</kw>
<msg timestamp="20210819 05:49:54.486" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:49:46.438" endtime="20210819 05:49:54.487"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:49:54.487" endtime="20210819 05:49:54.488"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:49:54.495" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/63477-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:50:00.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:50:00.176" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210819 05:49:54.492" endtime="20210819 05:50:00.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:50:00.177" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210819 05:50:00.176" endtime="20210819 05:50:00.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:50:00.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:50:00.177" endtime="20210819 05:50:00.178"/>
</kw>
<status status="PASS" starttime="20210819 05:49:54.491" endtime="20210819 05:50:00.178"/>
</kw>
<msg timestamp="20210819 05:50:00.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:49:54.490" endtime="20210819 05:50:00.179"/>
</kw>
<msg timestamp="20210819 05:50:00.179" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210819 05:49:54.489" endtime="20210819 05:50:00.179"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:50:00.184" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/63477-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:50:06.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:50:06.990" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:50:00.181" endtime="20210819 05:50:06.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:50:06.992" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:50:06.991" endtime="20210819 05:50:06.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:50:06.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:50:06.993" endtime="20210819 05:50:06.993"/>
</kw>
<status status="PASS" starttime="20210819 05:50:00.180" endtime="20210819 05:50:06.994"/>
</kw>
<msg timestamp="20210819 05:50:06.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:50:00.180" endtime="20210819 05:50:06.996"/>
</kw>
<msg timestamp="20210819 05:50:06.998" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:50:00.179" endtime="20210819 05:50:06.998"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:50:06.998" endtime="20210819 05:50:06.999"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:50:07.008" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/63477-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:50:14.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:50:14.311" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210819 05:50:07.004" endtime="20210819 05:50:14.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:50:14.313" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210819 05:50:14.312" endtime="20210819 05:50:14.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:50:14.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:50:14.313" endtime="20210819 05:50:14.314"/>
</kw>
<status status="PASS" starttime="20210819 05:50:07.003" endtime="20210819 05:50:14.315"/>
</kw>
<msg timestamp="20210819 05:50:14.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:50:07.000" endtime="20210819 05:50:14.315"/>
</kw>
<msg timestamp="20210819 05:50:14.316" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210819 05:50:06.999" endtime="20210819 05:50:14.316"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:50:14.323" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/63477-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:50:19.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:50:19.724" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:50:14.319" endtime="20210819 05:50:19.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:50:19.725" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:50:19.724" endtime="20210819 05:50:19.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:50:19.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:50:19.726" endtime="20210819 05:50:19.727"/>
</kw>
<status status="PASS" starttime="20210819 05:50:14.318" endtime="20210819 05:50:19.727"/>
</kw>
<msg timestamp="20210819 05:50:19.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:50:14.318" endtime="20210819 05:50:19.727"/>
</kw>
<msg timestamp="20210819 05:50:19.728" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:50:14.316" endtime="20210819 05:50:19.728"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:50:19.729" endtime="20210819 05:50:19.730"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:50:19.735" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/63477-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:50:26.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:50:26.879" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210819 05:50:19.732" endtime="20210819 05:50:26.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:50:26.881" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210819 05:50:26.880" endtime="20210819 05:50:26.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:50:26.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:50:26.881" endtime="20210819 05:50:26.882"/>
</kw>
<status status="PASS" starttime="20210819 05:50:19.731" endtime="20210819 05:50:26.882"/>
</kw>
<msg timestamp="20210819 05:50:26.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:50:19.731" endtime="20210819 05:50:26.882"/>
</kw>
<msg timestamp="20210819 05:50:26.883" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210819 05:50:19.730" endtime="20210819 05:50:26.883"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:50:26.888" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/63477-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:50:34.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:50:34.176" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210819 05:50:26.885" endtime="20210819 05:50:34.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:50:34.178" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:50:34.177" endtime="20210819 05:50:34.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:50:34.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:50:34.179" endtime="20210819 05:50:34.179"/>
</kw>
<status status="PASS" starttime="20210819 05:50:26.884" endtime="20210819 05:50:34.180"/>
</kw>
<msg timestamp="20210819 05:50:34.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:50:26.884" endtime="20210819 05:50:34.180"/>
</kw>
<msg timestamp="20210819 05:50:34.180" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210819 05:50:26.883" endtime="20210819 05:50:34.180"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:50:34.180" endtime="20210819 05:50:34.181"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:50:34.181" endtime="20210819 05:50:34.182"/>
</kw>
<status status="PASS" starttime="20210819 05:49:39.615" endtime="20210819 05:50:34.182"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210819 05:49:39.579" endtime="20210819 05:50:34.183"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:50:34.191" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:50:34.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:50:34.198" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:50:34.189" endtime="20210819 05:50:34.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:50:34.200" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:50:34.199" endtime="20210819 05:50:34.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:50:34.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:50:34.200" endtime="20210819 05:50:34.201"/>
</kw>
<status status="PASS" starttime="20210819 05:50:34.188" endtime="20210819 05:50:34.201"/>
</kw>
<msg timestamp="20210819 05:50:34.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:50:34.187" endtime="20210819 05:50:34.202"/>
</kw>
<msg timestamp="20210819 05:50:34.202" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:50:34.187" endtime="20210819 05:50:34.202"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:50:34.203" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:50:34.203" endtime="20210819 05:50:34.204"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:50:34.216" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:50:34.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:50:34.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:50:34.207" endtime="20210819 05:50:34.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:50:34.226" level="INFO"/>
<status status="PASS" starttime="20210819 05:50:34.226" endtime="20210819 05:50:34.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:50:34.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:50:34.227" endtime="20210819 05:50:34.227"/>
</kw>
<status status="PASS" starttime="20210819 05:50:34.206" endtime="20210819 05:50:34.228"/>
</kw>
<msg timestamp="20210819 05:50:34.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:50:34.206" endtime="20210819 05:50:34.228"/>
</kw>
<status status="PASS" starttime="20210819 05:50:34.205" endtime="20210819 05:50:34.228"/>
</kw>
<status status="PASS" starttime="20210819 05:50:34.204" endtime="20210819 05:50:34.228"/>
</kw>
<status status="PASS" starttime="20210819 05:50:34.186" endtime="20210819 05:50:34.228"/>
</kw>
<status status="PASS" starttime="20210819 05:50:34.186" endtime="20210819 05:50:34.228"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:50:34.242" level="INFO">Running command 'ozone sh key put o3://om:9862/63477-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:53:45.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:53:45.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:50:34.231" endtime="20210819 05:53:45.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:53:45.275" level="INFO"/>
<status status="PASS" starttime="20210819 05:53:45.274" endtime="20210819 05:53:45.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:53:45.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:53:45.275" endtime="20210819 05:53:45.275"/>
</kw>
<status status="PASS" starttime="20210819 05:50:34.230" endtime="20210819 05:53:45.276"/>
</kw>
<msg timestamp="20210819 05:53:45.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:50:34.230" endtime="20210819 05:53:45.276"/>
</kw>
<status status="PASS" starttime="20210819 05:50:34.229" endtime="20210819 05:53:45.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:53:45.282" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63477-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:53:52.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:53:52.935" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:53:45.279" endtime="20210819 05:53:52.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:53:52.936" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:53:52.935" endtime="20210819 05:53:52.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:53:52.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:53:52.937" endtime="20210819 05:53:52.937"/>
</kw>
<status status="PASS" starttime="20210819 05:53:45.279" endtime="20210819 05:53:52.937"/>
</kw>
<msg timestamp="20210819 05:53:52.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:53:45.278" endtime="20210819 05:53:52.938"/>
</kw>
<msg timestamp="20210819 05:53:52.938" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:53:45.277" endtime="20210819 05:53:52.938"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:53:52.938" endtime="20210819 05:53:52.939"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:53:52.944" level="INFO">Running command 'ozone sh key addacl o3://om:9862/63477-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:54:00.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:54:00.123" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:53:52.942" endtime="20210819 05:54:00.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:54:00.126" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:54:00.125" endtime="20210819 05:54:00.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:54:00.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:54:00.126" endtime="20210819 05:54:00.126"/>
</kw>
<status status="PASS" starttime="20210819 05:53:52.941" endtime="20210819 05:54:00.127"/>
</kw>
<msg timestamp="20210819 05:54:00.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:53:52.940" endtime="20210819 05:54:00.127"/>
</kw>
<msg timestamp="20210819 05:54:00.129" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210819 05:53:52.939" endtime="20210819 05:54:00.129"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:54:00.134" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63477-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:54:07.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:54:07.902" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:54:00.131" endtime="20210819 05:54:07.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:54:07.903" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:54:07.902" endtime="20210819 05:54:07.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:54:07.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:54:07.904" endtime="20210819 05:54:07.905"/>
</kw>
<status status="PASS" starttime="20210819 05:54:00.131" endtime="20210819 05:54:07.906"/>
</kw>
<msg timestamp="20210819 05:54:07.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:54:00.130" endtime="20210819 05:54:07.906"/>
</kw>
<msg timestamp="20210819 05:54:07.907" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:54:00.129" endtime="20210819 05:54:07.907"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:54:07.907" endtime="20210819 05:54:07.909"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:54:07.915" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/63477-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:54:15.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:54:15.072" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210819 05:54:07.912" endtime="20210819 05:54:15.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:54:15.076" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210819 05:54:15.074" endtime="20210819 05:54:15.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:54:15.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:54:15.077" endtime="20210819 05:54:15.078"/>
</kw>
<status status="PASS" starttime="20210819 05:54:07.911" endtime="20210819 05:54:15.079"/>
</kw>
<msg timestamp="20210819 05:54:15.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:54:07.911" endtime="20210819 05:54:15.079"/>
</kw>
<msg timestamp="20210819 05:54:15.080" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210819 05:54:07.909" endtime="20210819 05:54:15.081"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:54:15.087" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63477-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:54:22.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:54:22.800" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:54:15.084" endtime="20210819 05:54:22.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:54:22.802" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:54:22.801" endtime="20210819 05:54:22.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:54:22.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:54:22.802" endtime="20210819 05:54:22.803"/>
</kw>
<status status="PASS" starttime="20210819 05:54:15.083" endtime="20210819 05:54:22.803"/>
</kw>
<msg timestamp="20210819 05:54:22.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:54:15.082" endtime="20210819 05:54:22.803"/>
</kw>
<msg timestamp="20210819 05:54:22.804" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:54:15.081" endtime="20210819 05:54:22.804"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:54:22.804" endtime="20210819 05:54:22.805"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:54:22.810" level="INFO">Running command 'ozone sh key setacl o3://om:9862/63477-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:54:29.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:54:29.839" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210819 05:54:22.807" endtime="20210819 05:54:29.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:54:29.840" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210819 05:54:29.839" endtime="20210819 05:54:29.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:54:29.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:54:29.842" endtime="20210819 05:54:29.843"/>
</kw>
<status status="PASS" starttime="20210819 05:54:22.806" endtime="20210819 05:54:29.843"/>
</kw>
<msg timestamp="20210819 05:54:29.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:54:22.806" endtime="20210819 05:54:29.843"/>
</kw>
<msg timestamp="20210819 05:54:29.843" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210819 05:54:22.805" endtime="20210819 05:54:29.843"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:54:29.848" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63477-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:54:37.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:54:37.323" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210819 05:54:29.846" endtime="20210819 05:54:37.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:54:37.325" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:54:37.323" endtime="20210819 05:54:37.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:54:37.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:54:37.325" endtime="20210819 05:54:37.326"/>
</kw>
<status status="PASS" starttime="20210819 05:54:29.845" endtime="20210819 05:54:37.327"/>
</kw>
<msg timestamp="20210819 05:54:37.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:54:29.844" endtime="20210819 05:54:37.327"/>
</kw>
<msg timestamp="20210819 05:54:37.327" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210819 05:54:29.844" endtime="20210819 05:54:37.327"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:54:37.328" endtime="20210819 05:54:37.329"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:54:37.329" endtime="20210819 05:54:37.330"/>
</kw>
<status status="PASS" starttime="20210819 05:50:34.229" endtime="20210819 05:54:37.331"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210819 05:50:34.184" endtime="20210819 05:54:37.331"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:54:37.340" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:54:37.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:54:37.345" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:54:37.337" endtime="20210819 05:54:37.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:54:37.347" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:54:37.346" endtime="20210819 05:54:37.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:54:37.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:54:37.347" endtime="20210819 05:54:37.348"/>
</kw>
<status status="PASS" starttime="20210819 05:54:37.336" endtime="20210819 05:54:37.349"/>
</kw>
<msg timestamp="20210819 05:54:37.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:54:37.335" endtime="20210819 05:54:37.349"/>
</kw>
<msg timestamp="20210819 05:54:37.350" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:54:37.335" endtime="20210819 05:54:37.350"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:54:37.351" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:54:37.350" endtime="20210819 05:54:37.351"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:54:37.357" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:54:37.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:54:37.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:54:37.355" endtime="20210819 05:54:37.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:54:37.626" level="INFO"/>
<status status="PASS" starttime="20210819 05:54:37.625" endtime="20210819 05:54:37.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:54:37.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:54:37.626" endtime="20210819 05:54:37.627"/>
</kw>
<status status="PASS" starttime="20210819 05:54:37.354" endtime="20210819 05:54:37.627"/>
</kw>
<msg timestamp="20210819 05:54:37.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:54:37.353" endtime="20210819 05:54:37.627"/>
</kw>
<status status="PASS" starttime="20210819 05:54:37.352" endtime="20210819 05:54:37.628"/>
</kw>
<status status="PASS" starttime="20210819 05:54:37.351" endtime="20210819 05:54:37.628"/>
</kw>
<status status="PASS" starttime="20210819 05:54:37.334" endtime="20210819 05:54:37.628"/>
</kw>
<status status="PASS" starttime="20210819 05:54:37.333" endtime="20210819 05:54:37.628"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:54:37.635" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/63477-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:54:44.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:54:44.748" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210819 05:54:37.631" endtime="20210819 05:54:44.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:54:44.753" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210819 05:54:44.749" endtime="20210819 05:54:44.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:54:44.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:54:44.753" endtime="20210819 05:54:44.754"/>
</kw>
<status status="PASS" starttime="20210819 05:54:37.630" endtime="20210819 05:54:44.754"/>
</kw>
<msg timestamp="20210819 05:54:44.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:54:37.630" endtime="20210819 05:54:44.755"/>
</kw>
<status status="PASS" starttime="20210819 05:54:37.629" endtime="20210819 05:54:44.755"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:54:44.762" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/63477-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:54:51.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:54:51.928" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210819 05:54:44.758" endtime="20210819 05:54:51.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:54:51.931" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:54:51.929" endtime="20210819 05:54:51.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:54:51.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:54:51.931" endtime="20210819 05:54:51.933"/>
</kw>
<status status="PASS" starttime="20210819 05:54:44.757" endtime="20210819 05:54:51.933"/>
</kw>
<msg timestamp="20210819 05:54:51.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:54:44.757" endtime="20210819 05:54:51.934"/>
</kw>
<msg timestamp="20210819 05:54:51.935" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210819 05:54:44.755" endtime="20210819 05:54:51.935"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:54:51.935" endtime="20210819 05:54:51.937"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:54:51.944" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/63477-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:54:57.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:54:57.146" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210819 05:54:51.941" endtime="20210819 05:54:57.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:54:57.149" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210819 05:54:57.147" endtime="20210819 05:54:57.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:54:57.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:54:57.149" endtime="20210819 05:54:57.150"/>
</kw>
<status status="PASS" starttime="20210819 05:54:51.940" endtime="20210819 05:54:57.151"/>
</kw>
<msg timestamp="20210819 05:54:57.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:54:51.938" endtime="20210819 05:54:57.151"/>
</kw>
<msg timestamp="20210819 05:54:57.152" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210819 05:54:51.937" endtime="20210819 05:54:57.152"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:54:57.159" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/63477-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:55:03.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:55:03.227" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210819 05:54:57.156" endtime="20210819 05:55:03.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:55:03.229" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:55:03.228" endtime="20210819 05:55:03.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:55:03.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:55:03.230" endtime="20210819 05:55:03.231"/>
</kw>
<status status="PASS" starttime="20210819 05:54:57.155" endtime="20210819 05:55:03.232"/>
</kw>
<msg timestamp="20210819 05:55:03.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:54:57.154" endtime="20210819 05:55:03.232"/>
</kw>
<msg timestamp="20210819 05:55:03.233" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210819 05:54:57.152" endtime="20210819 05:55:03.233"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:55:03.233" endtime="20210819 05:55:03.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:55:03.241" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/63477-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:55:09.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:55:09.006" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210819 05:55:03.238" endtime="20210819 05:55:09.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:55:09.007" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210819 05:55:09.006" endtime="20210819 05:55:09.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:55:09.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:55:09.007" endtime="20210819 05:55:09.008"/>
</kw>
<status status="PASS" starttime="20210819 05:55:03.237" endtime="20210819 05:55:09.008"/>
</kw>
<msg timestamp="20210819 05:55:09.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:55:03.236" endtime="20210819 05:55:09.008"/>
</kw>
<msg timestamp="20210819 05:55:09.009" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210819 05:55:03.235" endtime="20210819 05:55:09.009"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:55:09.013" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/63477-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:55:16.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:55:16.486" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210819 05:55:09.011" endtime="20210819 05:55:16.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:55:16.488" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:55:16.487" endtime="20210819 05:55:16.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:55:16.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:55:16.489" endtime="20210819 05:55:16.489"/>
</kw>
<status status="PASS" starttime="20210819 05:55:09.010" endtime="20210819 05:55:16.490"/>
</kw>
<msg timestamp="20210819 05:55:16.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:55:09.010" endtime="20210819 05:55:16.490"/>
</kw>
<msg timestamp="20210819 05:55:16.490" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210819 05:55:09.009" endtime="20210819 05:55:16.491"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:55:16.491" endtime="20210819 05:55:16.491"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:55:16.492" endtime="20210819 05:55:16.492"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:55:16.498" level="INFO">Running command 'ozone sh key put o3://om:9862/63477-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:58:27.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:58:27.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:55:16.495" endtime="20210819 05:58:27.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:58:27.975" level="INFO"/>
<status status="PASS" starttime="20210819 05:58:27.974" endtime="20210819 05:58:27.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:58:27.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:58:27.975" endtime="20210819 05:58:27.976"/>
</kw>
<status status="PASS" starttime="20210819 05:55:16.494" endtime="20210819 05:58:27.976"/>
</kw>
<msg timestamp="20210819 05:58:27.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:55:16.494" endtime="20210819 05:58:27.976"/>
</kw>
<status status="PASS" starttime="20210819 05:55:16.492" endtime="20210819 05:58:27.976"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:58:27.981" level="INFO">Running command 'ozone sh key getacl o3://om:9862/63477-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:58:36.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:58:36.148" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:58:27.978" endtime="20210819 05:58:36.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:58:36.152" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210819 05:58:36.150" endtime="20210819 05:58:36.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:58:36.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:58:36.152" endtime="20210819 05:58:36.154"/>
</kw>
<status status="PASS" starttime="20210819 05:58:27.978" endtime="20210819 05:58:36.155"/>
</kw>
<msg timestamp="20210819 05:58:36.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:58:27.977" endtime="20210819 05:58:36.155"/>
</kw>
<msg timestamp="20210819 05:58:36.156" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210819 05:58:27.977" endtime="20210819 05:58:36.156"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:58:36.157" endtime="20210819 05:58:36.158"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210819 05:58:36.158" endtime="20210819 05:58:36.160"/>
</kw>
<status status="PASS" starttime="20210819 05:54:37.628" endtime="20210819 05:58:36.160"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210819 05:54:37.332" endtime="20210819 05:58:36.161"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:58:36.174" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:58:36.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:58:36.181" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:58:36.169" endtime="20210819 05:58:36.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:58:36.182" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:58:36.181" endtime="20210819 05:58:36.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:58:36.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:58:36.183" endtime="20210819 05:58:36.184"/>
</kw>
<status status="PASS" starttime="20210819 05:58:36.168" endtime="20210819 05:58:36.184"/>
</kw>
<msg timestamp="20210819 05:58:36.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:58:36.168" endtime="20210819 05:58:36.185"/>
</kw>
<msg timestamp="20210819 05:58:36.185" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:58:36.167" endtime="20210819 05:58:36.185"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:58:36.186" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:58:36.185" endtime="20210819 05:58:36.187"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:58:36.192" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:58:36.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:58:36.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:58:36.189" endtime="20210819 05:58:36.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:58:36.211" level="INFO"/>
<status status="PASS" starttime="20210819 05:58:36.210" endtime="20210819 05:58:36.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:58:36.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:58:36.211" endtime="20210819 05:58:36.212"/>
</kw>
<status status="PASS" starttime="20210819 05:58:36.188" endtime="20210819 05:58:36.213"/>
</kw>
<msg timestamp="20210819 05:58:36.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:58:36.188" endtime="20210819 05:58:36.213"/>
</kw>
<status status="PASS" starttime="20210819 05:58:36.187" endtime="20210819 05:58:36.213"/>
</kw>
<status status="PASS" starttime="20210819 05:58:36.187" endtime="20210819 05:58:36.213"/>
</kw>
<status status="PASS" starttime="20210819 05:58:36.166" endtime="20210819 05:58:36.213"/>
</kw>
<status status="PASS" starttime="20210819 05:58:36.166" endtime="20210819 05:58:36.214"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:58:36.220" level="INFO">Running command 'ozone sh volume info o3:///63477-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:58:43.619" level="INFO">${rc} = 255</msg>
<msg timestamp="20210819 05:58:43.619" level="INFO">${output} = VOLUME_NOT_FOUND Volume 63477-rpcwport is not found</msg>
<status status="PASS" starttime="20210819 05:58:36.217" endtime="20210819 05:58:43.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:58:43.621" level="INFO">VOLUME_NOT_FOUND Volume 63477-rpcwport is not found</msg>
<status status="PASS" starttime="20210819 05:58:43.620" endtime="20210819 05:58:43.622"/>
</kw>
<msg timestamp="20210819 05:58:43.622" level="INFO">${result} = VOLUME_NOT_FOUND Volume 63477-rpcwport is not found</msg>
<status status="PASS" starttime="20210819 05:58:36.216" endtime="20210819 05:58:43.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:58:43.623" endtime="20210819 05:58:43.623"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:58:43.630" level="INFO">Running command 'ozone sh volume create o3:///63477-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:58:50.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:58:50.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:58:43.627" endtime="20210819 05:58:50.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:58:50.713" level="INFO"/>
<status status="PASS" starttime="20210819 05:58:50.711" endtime="20210819 05:58:50.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:58:50.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:58:50.714" endtime="20210819 05:58:50.715"/>
</kw>
<status status="PASS" starttime="20210819 05:58:43.626" endtime="20210819 05:58:50.716"/>
</kw>
<msg timestamp="20210819 05:58:50.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:58:43.625" endtime="20210819 05:58:50.716"/>
</kw>
<msg timestamp="20210819 05:58:50.717" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210819 05:58:43.624" endtime="20210819 05:58:50.717"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:58:50.717" endtime="20210819 05:58:50.718"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:58:50.724" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="63477-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:58:58.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:58:58.681" level="INFO">${output} = {
  "metadata": {},
  "name": "63477-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210819 05:58:50.721" endtime="20210819 05:58:58.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:58:58.683" level="INFO">{
  "metadata": {},
  "name": "63477-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-19T05:58:50.324Z",
  "modificationTime": "2021-08-19T05:58:50.324Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210819 05:58:58.682" endtime="20210819 05:58:58.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:58:58.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:58:58.683" endtime="20210819 05:58:58.684"/>
</kw>
<status status="PASS" starttime="20210819 05:58:50.720" endtime="20210819 05:58:58.684"/>
</kw>
<msg timestamp="20210819 05:58:58.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:58:50.719" endtime="20210819 05:58:58.685"/>
</kw>
<msg timestamp="20210819 05:58:58.685" level="INFO">${result} = {
  "metadata": {},
  "name": "63477-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210819 05:58:50.718" endtime="20210819 05:58:58.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:58:58.685" endtime="20210819 05:58:58.686"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:58:58.690" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="63477-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:59:06.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:59:06.770" level="INFO">${output} = {
  "metadata": {},
  "name": "63477-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210819 05:58:58.688" endtime="20210819 05:59:06.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:59:06.772" level="INFO">{
  "metadata": {},
  "name": "63477-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-19T05:58:50.324Z",
  "modificationTime": "2021-08-19T05:58:50.324Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210819 05:59:06.771" endtime="20210819 05:59:06.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:59:06.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:59:06.772" endtime="20210819 05:59:06.773"/>
</kw>
<status status="PASS" starttime="20210819 05:58:58.687" endtime="20210819 05:59:06.773"/>
</kw>
<msg timestamp="20210819 05:59:06.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:58:58.687" endtime="20210819 05:59:06.774"/>
</kw>
<msg timestamp="20210819 05:59:06.774" level="INFO">${result} = {
  "metadata": {},
  "name": "63477-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210819 05:58:58.686" endtime="20210819 05:59:06.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 05:59:06.775" endtime="20210819 05:59:06.776"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:59:06.783" level="INFO">Running command 'ozone sh volume setquota o3:///63477-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:59:13.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:59:13.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:59:06.780" endtime="20210819 05:59:13.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:59:13.652" level="INFO"/>
<status status="PASS" starttime="20210819 05:59:13.650" endtime="20210819 05:59:13.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:59:13.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:59:13.653" endtime="20210819 05:59:13.657"/>
</kw>
<status status="PASS" starttime="20210819 05:59:06.779" endtime="20210819 05:59:13.657"/>
</kw>
<msg timestamp="20210819 05:59:13.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:59:06.777" endtime="20210819 05:59:13.657"/>
</kw>
<status status="PASS" starttime="20210819 05:59:06.776" endtime="20210819 05:59:13.658"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:59:13.663" level="INFO">Running command 'ozone sh volume info o3:///63477-rpcwport | jq -r '. | select(.name=="63477-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:59:20.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:59:20.866" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210819 05:59:13.660" endtime="20210819 05:59:20.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:59:20.867" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210819 05:59:20.866" endtime="20210819 05:59:20.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:59:20.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:59:20.867" endtime="20210819 05:59:20.868"/>
</kw>
<status status="PASS" starttime="20210819 05:59:13.659" endtime="20210819 05:59:20.869"/>
</kw>
<msg timestamp="20210819 05:59:20.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:59:13.659" endtime="20210819 05:59:20.869"/>
</kw>
<msg timestamp="20210819 05:59:20.870" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210819 05:59:13.658" endtime="20210819 05:59:20.870"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:59:20.870" endtime="20210819 05:59:20.871"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:59:20.877" level="INFO">Running command 'ozone sh bucket create o3:///63477-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:59:27.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:59:27.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:59:20.874" endtime="20210819 05:59:27.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:59:27.835" level="INFO"/>
<status status="PASS" starttime="20210819 05:59:27.835" endtime="20210819 05:59:27.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:59:27.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:59:27.836" endtime="20210819 05:59:27.836"/>
</kw>
<status status="PASS" starttime="20210819 05:59:20.873" endtime="20210819 05:59:27.837"/>
</kw>
<msg timestamp="20210819 05:59:27.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:59:20.872" endtime="20210819 05:59:27.837"/>
</kw>
<status status="PASS" starttime="20210819 05:59:20.871" endtime="20210819 05:59:27.837"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:59:27.843" level="INFO">Running command 'ozone sh bucket info o3:///63477-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:59:36.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:59:36.650" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210819 05:59:27.840" endtime="20210819 05:59:36.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:59:36.652" level="INFO">DISK</msg>
<status status="PASS" starttime="20210819 05:59:36.651" endtime="20210819 05:59:36.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:59:36.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:59:36.652" endtime="20210819 05:59:36.653"/>
</kw>
<status status="PASS" starttime="20210819 05:59:27.839" endtime="20210819 05:59:36.653"/>
</kw>
<msg timestamp="20210819 05:59:36.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:59:27.838" endtime="20210819 05:59:36.653"/>
</kw>
<msg timestamp="20210819 05:59:36.654" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210819 05:59:27.837" endtime="20210819 05:59:36.654"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:59:36.655" endtime="20210819 05:59:36.656"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:59:36.664" level="INFO">Running command 'ozone sh bucket info o3:///63477-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:59:44.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:59:44.533" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210819 05:59:36.661" endtime="20210819 05:59:44.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:59:44.535" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210819 05:59:44.534" endtime="20210819 05:59:44.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:59:44.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:59:44.535" endtime="20210819 05:59:44.536"/>
</kw>
<status status="PASS" starttime="20210819 05:59:36.659" endtime="20210819 05:59:44.536"/>
</kw>
<msg timestamp="20210819 05:59:44.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:59:36.659" endtime="20210819 05:59:44.536"/>
</kw>
<msg timestamp="20210819 05:59:44.537" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210819 05:59:36.656" endtime="20210819 05:59:44.537"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:59:44.537" endtime="20210819 05:59:44.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:59:44.545" level="INFO">Running command 'ozone sh bucket info o3:///63477-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:59:52.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:59:52.261" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210819 05:59:44.541" endtime="20210819 05:59:52.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:59:52.263" level="INFO">100</msg>
<status status="PASS" starttime="20210819 05:59:52.262" endtime="20210819 05:59:52.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:59:52.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:59:52.263" endtime="20210819 05:59:52.264"/>
</kw>
<status status="PASS" starttime="20210819 05:59:44.540" endtime="20210819 05:59:52.265"/>
</kw>
<msg timestamp="20210819 05:59:52.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:59:44.540" endtime="20210819 05:59:52.265"/>
</kw>
<msg timestamp="20210819 05:59:52.266" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210819 05:59:44.538" endtime="20210819 05:59:52.266"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 05:59:52.266" endtime="20210819 05:59:52.267"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:59:52.273" level="INFO">Running command 'ozone sh bucket setquota o3:///63477-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:59:59.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:59:59.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:59:52.270" endtime="20210819 05:59:59.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:59:59.129" level="INFO"/>
<status status="PASS" starttime="20210819 05:59:59.129" endtime="20210819 05:59:59.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:59:59.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:59:59.130" endtime="20210819 05:59:59.131"/>
</kw>
<status status="PASS" starttime="20210819 05:59:52.269" endtime="20210819 05:59:59.131"/>
</kw>
<msg timestamp="20210819 05:59:59.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:59:52.268" endtime="20210819 05:59:59.131"/>
</kw>
<status status="PASS" starttime="20210819 05:59:52.267" endtime="20210819 05:59:59.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:59:59.137" level="INFO">Running command 'ozone sh bucket info o3:///63477-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:00:07.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:00:07.327" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210819 05:59:59.135" endtime="20210819 06:00:07.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:00:07.328" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210819 06:00:07.328" endtime="20210819 06:00:07.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:00:07.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:00:07.329" endtime="20210819 06:00:07.330"/>
</kw>
<status status="PASS" starttime="20210819 05:59:59.134" endtime="20210819 06:00:07.330"/>
</kw>
<msg timestamp="20210819 06:00:07.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:59:59.133" endtime="20210819 06:00:07.330"/>
</kw>
<msg timestamp="20210819 06:00:07.331" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210819 05:59:59.132" endtime="20210819 06:00:07.331"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 06:00:07.331" endtime="20210819 06:00:07.331"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:00:07.339" level="INFO">Running command 'ozone sh bucket info o3:///63477-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:00:15.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:00:15.347" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210819 06:00:07.336" endtime="20210819 06:00:15.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:00:15.350" level="INFO">1000</msg>
<status status="PASS" starttime="20210819 06:00:15.348" endtime="20210819 06:00:15.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:00:15.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:00:15.350" endtime="20210819 06:00:15.352"/>
</kw>
<status status="PASS" starttime="20210819 06:00:07.335" endtime="20210819 06:00:15.352"/>
</kw>
<msg timestamp="20210819 06:00:15.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:00:07.334" endtime="20210819 06:00:15.352"/>
</kw>
<msg timestamp="20210819 06:00:15.353" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210819 06:00:07.332" endtime="20210819 06:00:15.353"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 06:00:15.353" endtime="20210819 06:00:15.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:00:15.360" level="INFO">Running command 'ozone sh bucket list o3:///63477-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:00:22.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:00:22.985" level="INFO">${output} = 63477-rpcwport</msg>
<status status="PASS" starttime="20210819 06:00:15.357" endtime="20210819 06:00:22.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:00:22.987" level="INFO">63477-rpcwport</msg>
<status status="PASS" starttime="20210819 06:00:22.986" endtime="20210819 06:00:22.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:00:22.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:00:22.987" endtime="20210819 06:00:22.988"/>
</kw>
<status status="PASS" starttime="20210819 06:00:15.356" endtime="20210819 06:00:22.988"/>
</kw>
<msg timestamp="20210819 06:00:22.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:00:15.356" endtime="20210819 06:00:22.988"/>
</kw>
<msg timestamp="20210819 06:00:22.989" level="INFO">${result} = 63477-rpcwport</msg>
<status status="PASS" starttime="20210819 06:00:15.354" endtime="20210819 06:00:22.989"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 06:00:22.989" endtime="20210819 06:00:22.990"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:00:22.998" level="INFO">Running command 'ozone sh key put o3:///63477-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:03:34.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:03:34.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 06:00:22.993" endtime="20210819 06:03:34.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:03:34.967" level="INFO"/>
<status status="PASS" starttime="20210819 06:03:34.966" endtime="20210819 06:03:34.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:03:34.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:03:34.967" endtime="20210819 06:03:34.968"/>
</kw>
<status status="PASS" starttime="20210819 06:00:22.992" endtime="20210819 06:03:34.968"/>
</kw>
<msg timestamp="20210819 06:03:34.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:00:22.992" endtime="20210819 06:03:34.969"/>
</kw>
<status status="PASS" starttime="20210819 06:00:22.991" endtime="20210819 06:03:34.969"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:03:34.973" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:03:34.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:03:34.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 06:03:34.971" endtime="20210819 06:03:34.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:03:34.978" level="INFO"/>
<status status="PASS" starttime="20210819 06:03:34.977" endtime="20210819 06:03:34.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:03:34.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:03:34.978" endtime="20210819 06:03:34.979"/>
</kw>
<status status="PASS" starttime="20210819 06:03:34.970" endtime="20210819 06:03:34.980"/>
</kw>
<msg timestamp="20210819 06:03:34.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:03:34.970" endtime="20210819 06:03:34.980"/>
</kw>
<status status="PASS" starttime="20210819 06:03:34.969" endtime="20210819 06:03:34.980"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:03:34.986" level="INFO">Running command 'ozone sh key get o3:///63477-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:03:36.165" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210819 06:03:34.983" endtime="20210819 06:03:36.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.167" endtime="20210819 06:03:36.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.167" endtime="20210819 06:03:36.167"/>
</kw>
<status status="FAIL" starttime="20210819 06:03:34.982" endtime="20210819 06:03:36.168"/>
</kw>
<msg timestamp="20210819 06:03:36.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210819 06:03:34.982" endtime="20210819 06:03:36.168"/>
</kw>
<status status="FAIL" starttime="20210819 06:03:34.980" endtime="20210819 06:03:36.169"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.169" endtime="20210819 06:03:36.169"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.170" endtime="20210819 06:03:36.170"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.170" endtime="20210819 06:03:36.170"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.170" endtime="20210819 06:03:36.170"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.171" endtime="20210819 06:03:36.171"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.171" endtime="20210819 06:03:36.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.171" endtime="20210819 06:03:36.171"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.171" endtime="20210819 06:03:36.171"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.172" endtime="20210819 06:03:36.172"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.172" endtime="20210819 06:03:36.172"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.173" endtime="20210819 06:03:36.173"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.173" endtime="20210819 06:03:36.174"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.174" endtime="20210819 06:03:36.174"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.175" endtime="20210819 06:03:36.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.176" endtime="20210819 06:03:36.176"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.177" endtime="20210819 06:03:36.178"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.178" endtime="20210819 06:03:36.179"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.180" endtime="20210819 06:03:36.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.180" endtime="20210819 06:03:36.181"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.181" endtime="20210819 06:03:36.181"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.181" endtime="20210819 06:03:36.181"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.182" endtime="20210819 06:03:36.182"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.183" endtime="20210819 06:03:36.184"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.184" endtime="20210819 06:03:36.184"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.185" endtime="20210819 06:03:36.185"/>
</kw>
<status status="FAIL" starttime="20210819 06:00:22.990" endtime="20210819 06:03:36.186"/>
</kw>
<status status="FAIL" starttime="20210819 06:00:22.990" endtime="20210819 06:03:36.187"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.187" endtime="20210819 06:03:36.187"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.188" endtime="20210819 06:03:36.188"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.189" endtime="20210819 06:03:36.190"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.190" endtime="20210819 06:03:36.190"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.190" endtime="20210819 06:03:36.191"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.192" endtime="20210819 06:03:36.192"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.193" endtime="20210819 06:03:36.193"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.193" endtime="20210819 06:03:36.194"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.195" endtime="20210819 06:03:36.195"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.195" endtime="20210819 06:03:36.195"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.196" endtime="20210819 06:03:36.196"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.197" endtime="20210819 06:03:36.197"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.197" endtime="20210819 06:03:36.197"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.198" endtime="20210819 06:03:36.198"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.199" endtime="20210819 06:03:36.199"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.199" endtime="20210819 06:03:36.199"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.200" endtime="20210819 06:03:36.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.201" endtime="20210819 06:03:36.201"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.202" endtime="20210819 06:03:36.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.202" endtime="20210819 06:03:36.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.203" endtime="20210819 06:03:36.204"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.204" endtime="20210819 06:03:36.204"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.205" endtime="20210819 06:03:36.206"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:03:36.206" endtime="20210819 06:03:36.206"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.206" endtime="20210819 06:03:36.207"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 06:03:36.208" endtime="20210819 06:03:36.208"/>
</kw>
<status status="FAIL" starttime="20210819 05:58:36.214" endtime="20210819 06:03:36.209"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210819 05:58:36.162" endtime="20210819 06:03:36.210">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:03:36.235" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:03:36.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:03:36.256" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 06:03:36.224" endtime="20210819 06:03:36.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:03:36.258" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 06:03:36.257" endtime="20210819 06:03:36.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:03:36.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:03:36.259" endtime="20210819 06:03:36.261"/>
</kw>
<status status="PASS" starttime="20210819 06:03:36.222" endtime="20210819 06:03:36.261"/>
</kw>
<msg timestamp="20210819 06:03:36.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:03:36.221" endtime="20210819 06:03:36.262"/>
</kw>
<msg timestamp="20210819 06:03:36.263" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 06:03:36.219" endtime="20210819 06:03:36.263"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 06:03:36.264" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 06:03:36.263" endtime="20210819 06:03:36.265"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:03:36.289" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:03:36.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:03:36.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 06:03:36.276" endtime="20210819 06:03:36.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:03:36.547" level="INFO"/>
<status status="PASS" starttime="20210819 06:03:36.546" endtime="20210819 06:03:36.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:03:36.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:03:36.547" endtime="20210819 06:03:36.548"/>
</kw>
<status status="PASS" starttime="20210819 06:03:36.273" endtime="20210819 06:03:36.548"/>
</kw>
<msg timestamp="20210819 06:03:36.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:03:36.270" endtime="20210819 06:03:36.549"/>
</kw>
<status status="PASS" starttime="20210819 06:03:36.267" endtime="20210819 06:03:36.549"/>
</kw>
<status status="PASS" starttime="20210819 06:03:36.265" endtime="20210819 06:03:36.549"/>
</kw>
<status status="PASS" starttime="20210819 06:03:36.218" endtime="20210819 06:03:36.549"/>
</kw>
<status status="PASS" starttime="20210819 06:03:36.216" endtime="20210819 06:03:36.549"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:03:36.568" level="INFO">Running command 'ozone sh volume info /63477-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:03:49.724" level="INFO">${rc} = 255</msg>
<msg timestamp="20210819 06:03:49.725" level="INFO">${output} = VOLUME_NOT_FOUND Volume 63477-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210819 06:03:36.564" endtime="20210819 06:03:49.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:03:49.728" level="INFO">VOLUME_NOT_FOUND Volume 63477-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210819 06:03:49.726" endtime="20210819 06:03:49.728"/>
</kw>
<msg timestamp="20210819 06:03:49.729" level="INFO">${result} = VOLUME_NOT_FOUND Volume 63477-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210819 06:03:36.552" endtime="20210819 06:03:49.729"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 06:03:49.730" endtime="20210819 06:03:49.731"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:03:49.757" level="INFO">Running command 'ozone sh volume create /63477-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:03:59.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:03:59.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 06:03:49.740" endtime="20210819 06:03:59.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:03:59.712" level="INFO"/>
<status status="PASS" starttime="20210819 06:03:59.710" endtime="20210819 06:03:59.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:03:59.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:03:59.713" endtime="20210819 06:03:59.713"/>
</kw>
<status status="PASS" starttime="20210819 06:03:49.737" endtime="20210819 06:03:59.714"/>
</kw>
<msg timestamp="20210819 06:03:59.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:03:49.735" endtime="20210819 06:03:59.714"/>
</kw>
<msg timestamp="20210819 06:03:59.714" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210819 06:03:49.731" endtime="20210819 06:03:59.714"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 06:03:59.715" endtime="20210819 06:03:59.715"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:03:59.720" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="63477-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:04:07.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:04:07.642" level="INFO">${output} = {
  "metadata": {},
  "name": "63477-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210819 06:03:59.718" endtime="20210819 06:04:07.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:04:07.645" level="INFO">{
  "metadata": {},
  "name": "63477-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-19T06:03:59.619Z",
  "modificationTime": "2021-08-19T06:03:59.619Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210819 06:04:07.644" endtime="20210819 06:04:07.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:04:07.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:04:07.647" endtime="20210819 06:04:07.648"/>
</kw>
<status status="PASS" starttime="20210819 06:03:59.717" endtime="20210819 06:04:07.648"/>
</kw>
<msg timestamp="20210819 06:04:07.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:03:59.717" endtime="20210819 06:04:07.648"/>
</kw>
<msg timestamp="20210819 06:04:07.649" level="INFO">${result} = {
  "metadata": {},
  "name": "63477-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210819 06:03:59.715" endtime="20210819 06:04:07.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 06:04:07.649" endtime="20210819 06:04:07.649"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:04:07.655" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="63477-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:04:15.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:04:15.508" level="INFO">${output} = {
  "metadata": {},
  "name": "63477-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210819 06:04:07.652" endtime="20210819 06:04:15.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:04:15.510" level="INFO">{
  "metadata": {},
  "name": "63477-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-19T06:03:59.619Z",
  "modificationTime": "2021-08-19T06:03:59.619Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210819 06:04:15.508" endtime="20210819 06:04:15.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:04:15.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:04:15.510" endtime="20210819 06:04:15.510"/>
</kw>
<status status="PASS" starttime="20210819 06:04:07.652" endtime="20210819 06:04:15.511"/>
</kw>
<msg timestamp="20210819 06:04:15.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:04:07.651" endtime="20210819 06:04:15.511"/>
</kw>
<msg timestamp="20210819 06:04:15.511" level="INFO">${result} = {
  "metadata": {},
  "name": "63477-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210819 06:04:07.650" endtime="20210819 06:04:15.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210819 06:04:15.512" endtime="20210819 06:04:15.512"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:04:15.516" level="INFO">Running command 'ozone sh volume setquota /63477-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:04:22.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:04:22.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 06:04:15.514" endtime="20210819 06:04:22.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:04:22.855" level="INFO"/>
<status status="PASS" starttime="20210819 06:04:22.853" endtime="20210819 06:04:22.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:04:22.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:04:22.855" endtime="20210819 06:04:22.857"/>
</kw>
<status status="PASS" starttime="20210819 06:04:15.513" endtime="20210819 06:04:22.857"/>
</kw>
<msg timestamp="20210819 06:04:22.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:04:15.513" endtime="20210819 06:04:22.858"/>
</kw>
<status status="PASS" starttime="20210819 06:04:15.512" endtime="20210819 06:04:22.858"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:04:22.865" level="INFO">Running command 'ozone sh volume info /63477-rpcwoscheme | jq -r '. | select(.name=="63477-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:04:30.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:04:30.299" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210819 06:04:22.862" endtime="20210819 06:04:30.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:04:30.301" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210819 06:04:30.300" endtime="20210819 06:04:30.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:04:30.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:04:30.302" endtime="20210819 06:04:30.302"/>
</kw>
<status status="PASS" starttime="20210819 06:04:22.861" endtime="20210819 06:04:30.303"/>
</kw>
<msg timestamp="20210819 06:04:30.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:04:22.860" endtime="20210819 06:04:30.303"/>
</kw>
<msg timestamp="20210819 06:04:30.303" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210819 06:04:22.859" endtime="20210819 06:04:30.303"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 06:04:30.303" endtime="20210819 06:04:30.304"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:04:30.310" level="INFO">Running command 'ozone sh bucket create /63477-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:04:37.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:04:37.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 06:04:30.307" endtime="20210819 06:04:37.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:04:37.500" level="INFO"/>
<status status="PASS" starttime="20210819 06:04:37.499" endtime="20210819 06:04:37.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:04:37.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:04:37.500" endtime="20210819 06:04:37.501"/>
</kw>
<status status="PASS" starttime="20210819 06:04:30.306" endtime="20210819 06:04:37.502"/>
</kw>
<msg timestamp="20210819 06:04:37.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:04:30.305" endtime="20210819 06:04:37.502"/>
</kw>
<status status="PASS" starttime="20210819 06:04:30.304" endtime="20210819 06:04:37.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:04:37.508" level="INFO">Running command 'ozone sh bucket info /63477-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:04:44.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:04:44.665" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210819 06:04:37.505" endtime="20210819 06:04:44.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:04:44.668" level="INFO">DISK</msg>
<status status="PASS" starttime="20210819 06:04:44.666" endtime="20210819 06:04:44.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:04:44.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:04:44.669" endtime="20210819 06:04:44.672"/>
</kw>
<status status="PASS" starttime="20210819 06:04:37.504" endtime="20210819 06:04:44.673"/>
</kw>
<msg timestamp="20210819 06:04:44.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:04:37.504" endtime="20210819 06:04:44.674"/>
</kw>
<msg timestamp="20210819 06:04:44.675" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210819 06:04:37.502" endtime="20210819 06:04:44.675"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 06:04:44.675" endtime="20210819 06:04:44.676"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:04:44.686" level="INFO">Running command 'ozone sh bucket info /63477-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:04:52.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:04:52.185" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210819 06:04:44.682" endtime="20210819 06:04:52.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:04:52.189" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210819 06:04:52.187" endtime="20210819 06:04:52.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:04:52.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:04:52.189" endtime="20210819 06:04:52.192"/>
</kw>
<status status="PASS" starttime="20210819 06:04:44.681" endtime="20210819 06:04:52.192"/>
</kw>
<msg timestamp="20210819 06:04:52.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:04:44.680" endtime="20210819 06:04:52.192"/>
</kw>
<msg timestamp="20210819 06:04:52.193" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210819 06:04:44.677" endtime="20210819 06:04:52.193"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 06:04:52.193" endtime="20210819 06:04:52.194"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:04:52.200" level="INFO">Running command 'ozone sh bucket info /63477-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:04:59.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:04:59.525" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210819 06:04:52.197" endtime="20210819 06:04:59.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:04:59.527" level="INFO">100</msg>
<status status="PASS" starttime="20210819 06:04:59.526" endtime="20210819 06:04:59.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:04:59.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:04:59.527" endtime="20210819 06:04:59.528"/>
</kw>
<status status="PASS" starttime="20210819 06:04:52.196" endtime="20210819 06:04:59.528"/>
</kw>
<msg timestamp="20210819 06:04:59.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:04:52.195" endtime="20210819 06:04:59.528"/>
</kw>
<msg timestamp="20210819 06:04:59.529" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210819 06:04:52.194" endtime="20210819 06:04:59.529"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 06:04:59.529" endtime="20210819 06:04:59.530"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:04:59.537" level="INFO">Running command 'ozone sh bucket setquota /63477-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:05:07.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:05:07.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 06:04:59.534" endtime="20210819 06:05:07.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:05:07.288" level="INFO"/>
<status status="PASS" starttime="20210819 06:05:07.288" endtime="20210819 06:05:07.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:05:07.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:05:07.289" endtime="20210819 06:05:07.289"/>
</kw>
<status status="PASS" starttime="20210819 06:04:59.532" endtime="20210819 06:05:07.290"/>
</kw>
<msg timestamp="20210819 06:05:07.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:04:59.532" endtime="20210819 06:05:07.290"/>
</kw>
<status status="PASS" starttime="20210819 06:04:59.530" endtime="20210819 06:05:07.290"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:05:07.296" level="INFO">Running command 'ozone sh bucket info /63477-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:05:12.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:05:12.816" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210819 06:05:07.294" endtime="20210819 06:05:12.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:05:12.819" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210819 06:05:12.817" endtime="20210819 06:05:12.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:05:12.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:05:12.819" endtime="20210819 06:05:12.822"/>
</kw>
<status status="PASS" starttime="20210819 06:05:07.294" endtime="20210819 06:05:12.822"/>
</kw>
<msg timestamp="20210819 06:05:12.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:05:07.292" endtime="20210819 06:05:12.823"/>
</kw>
<msg timestamp="20210819 06:05:12.823" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210819 06:05:07.290" endtime="20210819 06:05:12.823"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 06:05:12.823" endtime="20210819 06:05:12.824"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:05:12.831" level="INFO">Running command 'ozone sh bucket info /63477-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:05:20.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:05:20.842" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210819 06:05:12.827" endtime="20210819 06:05:20.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:05:20.845" level="INFO">1000</msg>
<status status="PASS" starttime="20210819 06:05:20.843" endtime="20210819 06:05:20.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:05:20.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:05:20.845" endtime="20210819 06:05:20.847"/>
</kw>
<status status="PASS" starttime="20210819 06:05:12.826" endtime="20210819 06:05:20.847"/>
</kw>
<msg timestamp="20210819 06:05:20.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:05:12.825" endtime="20210819 06:05:20.848"/>
</kw>
<msg timestamp="20210819 06:05:20.849" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210819 06:05:12.824" endtime="20210819 06:05:20.849"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 06:05:20.849" endtime="20210819 06:05:20.850"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:05:20.857" level="INFO">Running command 'ozone sh bucket list /63477-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:05:28.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 06:05:28.729" level="INFO">${output} = 63477-rpcwoscheme</msg>
<status status="PASS" starttime="20210819 06:05:20.854" endtime="20210819 06:05:28.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 06:05:28.733" level="INFO">63477-rpcwoscheme</msg>
<status status="PASS" starttime="20210819 06:05:28.731" endtime="20210819 06:05:28.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 06:05:28.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 06:05:28.733" endtime="20210819 06:05:28.735"/>
</kw>
<status status="PASS" starttime="20210819 06:05:20.852" endtime="20210819 06:05:28.735"/>
</kw>
<msg timestamp="20210819 06:05:28.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 06:05:20.852" endtime="20210819 06:05:28.736"/>
</kw>
<msg timestamp="20210819 06:05:28.736" level="INFO">${result} = 63477-rpcwoscheme</msg>
<status status="PASS" starttime="20210819 06:05:20.850" endtime="20210819 06:05:28.737"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210819 06:05:28.737" endtime="20210819 06:05:28.738"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 06:05:28.748" level="INFO">Running command 'ozone sh key put /63477-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 06:08:36.214" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210819 06:05:28.745" endtime="20210819 06:08:36.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.215" endtime="20210819 06:08:36.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.215" endtime="20210819 06:08:36.215"/>
</kw>
<status status="FAIL" starttime="20210819 06:05:28.744" endtime="20210819 06:08:36.217"/>
</kw>
<msg timestamp="20210819 06:08:36.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210819 06:05:28.743" endtime="20210819 06:08:36.217"/>
</kw>
<status status="FAIL" starttime="20210819 06:05:28.742" endtime="20210819 06:08:36.217"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.218" endtime="20210819 06:08:36.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.218" endtime="20210819 06:08:36.218"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.218" endtime="20210819 06:08:36.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.218" endtime="20210819 06:08:36.218"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.218" endtime="20210819 06:08:36.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.219" endtime="20210819 06:08:36.219"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.219" endtime="20210819 06:08:36.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.219" endtime="20210819 06:08:36.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.220" endtime="20210819 06:08:36.220"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.220" endtime="20210819 06:08:36.220"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.220" endtime="20210819 06:08:36.220"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.220" endtime="20210819 06:08:36.221"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.221" endtime="20210819 06:08:36.221"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.221" endtime="20210819 06:08:36.221"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.221" endtime="20210819 06:08:36.221"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.221" endtime="20210819 06:08:36.221"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.222" endtime="20210819 06:08:36.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.222" endtime="20210819 06:08:36.222"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.222" endtime="20210819 06:08:36.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.222" endtime="20210819 06:08:36.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.223" endtime="20210819 06:08:36.223"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.223" endtime="20210819 06:08:36.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.223" endtime="20210819 06:08:36.223"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.223" endtime="20210819 06:08:36.223"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.224" endtime="20210819 06:08:36.224"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.224" endtime="20210819 06:08:36.224"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.225" endtime="20210819 06:08:36.226"/>
</kw>
<status status="FAIL" starttime="20210819 06:05:28.739" endtime="20210819 06:08:36.226"/>
</kw>
<status status="FAIL" starttime="20210819 06:05:28.739" endtime="20210819 06:08:36.226"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.226" endtime="20210819 06:08:36.226"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.227" endtime="20210819 06:08:36.227"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.227" endtime="20210819 06:08:36.227"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.227" endtime="20210819 06:08:36.227"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.227" endtime="20210819 06:08:36.227"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.227" endtime="20210819 06:08:36.228"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.228" endtime="20210819 06:08:36.228"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.228" endtime="20210819 06:08:36.229"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.229" endtime="20210819 06:08:36.229"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.229" endtime="20210819 06:08:36.229"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.229" endtime="20210819 06:08:36.229"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.230" endtime="20210819 06:08:36.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.230" endtime="20210819 06:08:36.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.230" endtime="20210819 06:08:36.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.230" endtime="20210819 06:08:36.230"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.230" endtime="20210819 06:08:36.232"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.232" endtime="20210819 06:08:36.233"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.233" endtime="20210819 06:08:36.233"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.233" endtime="20210819 06:08:36.234"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.234" endtime="20210819 06:08:36.234"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.234" endtime="20210819 06:08:36.234"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.234" endtime="20210819 06:08:36.234"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.234" endtime="20210819 06:08:36.234"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210819 06:08:36.235" endtime="20210819 06:08:36.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.235" endtime="20210819 06:08:36.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210819 06:08:36.235" endtime="20210819 06:08:36.235"/>
</kw>
<status status="FAIL" starttime="20210819 06:03:36.550" endtime="20210819 06:08:36.235"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210819 06:03:36.213" endtime="20210819 06:08:36.238">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210819 05:43:33.738" endtime="20210819 06:08:36.240"/>
</suite>
<status status="FAIL" starttime="20210819 05:19:22.991" endtime="20210819 06:08:36.246"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:19:17.608" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:19:17.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:19:17.614" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210819 05:19:17.604" endtime="20210819 05:19:17.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:19:17.615" level="INFO">scm</msg>
<status status="PASS" starttime="20210819 05:19:17.614" endtime="20210819 05:19:17.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:19:17.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:19:17.615" endtime="20210819 05:19:17.616"/>
</kw>
<status status="PASS" starttime="20210819 05:19:17.603" endtime="20210819 05:19:17.616"/>
</kw>
<msg timestamp="20210819 05:19:17.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:19:17.603" endtime="20210819 05:19:17.617"/>
</kw>
<msg timestamp="20210819 05:19:17.617" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210819 05:19:17.603" endtime="20210819 05:19:17.617"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210819 05:19:17.618" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210819 05:19:17.617" endtime="20210819 05:19:17.618"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210819 05:19:17.623" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210819 05:19:17.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20210819 05:19:17.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210819 05:19:17.620" endtime="20210819 05:19:17.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210819 05:19:17.633" level="INFO"/>
<status status="PASS" starttime="20210819 05:19:17.632" endtime="20210819 05:19:17.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210819 05:19:17.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210819 05:19:17.633" endtime="20210819 05:19:17.634"/>
</kw>
<status status="PASS" starttime="20210819 05:19:17.620" endtime="20210819 05:19:17.634"/>
</kw>
<msg timestamp="20210819 05:19:17.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210819 05:19:17.619" endtime="20210819 05:19:17.634"/>
</kw>
<status status="PASS" starttime="20210819 05:19:17.619" endtime="20210819 05:19:17.634"/>
</kw>
<status status="PASS" starttime="20210819 05:19:17.618" endtime="20210819 05:19:17.635"/>
</kw>
<status status="PASS" starttime="20210819 05:19:17.602" endtime="20210819 05:19:17.635"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210819 05:19:17.601" endtime="20210819 05:19:17.635"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210819 05:19:17.537" endtime="20210819 05:19:17.636"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2953354"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
