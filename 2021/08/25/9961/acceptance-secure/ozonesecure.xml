<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210825 23:52:09.103" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:02:03.498" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:02:03.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:02:03.502" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:02:03.494" endtime="20210825 23:02:03.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:02:03.504" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:02:03.503" endtime="20210825 23:02:03.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:02:03.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:02:03.504" endtime="20210825 23:02:03.505"/>
</kw>
<status status="PASS" starttime="20210825 23:02:03.493" endtime="20210825 23:02:03.505"/>
</kw>
<msg timestamp="20210825 23:02:03.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:02:03.493" endtime="20210825 23:02:03.505"/>
</kw>
<msg timestamp="20210825 23:02:03.506" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210825 23:02:03.492" endtime="20210825 23:02:03.506"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:02:03.511" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:02:03.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:02:03.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:02:03.509" endtime="20210825 23:02:03.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:02:03.520" level="INFO"/>
<status status="PASS" starttime="20210825 23:02:03.519" endtime="20210825 23:02:03.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:02:03.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:02:03.520" endtime="20210825 23:02:03.521"/>
</kw>
<status status="PASS" starttime="20210825 23:02:03.507" endtime="20210825 23:02:03.521"/>
</kw>
<msg timestamp="20210825 23:02:03.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:02:03.507" endtime="20210825 23:02:03.521"/>
</kw>
<status status="PASS" starttime="20210825 23:02:03.506" endtime="20210825 23:02:03.522"/>
</kw>
<status status="PASS" starttime="20210825 23:02:03.506" endtime="20210825 23:02:03.522"/>
</kw>
<status status="PASS" starttime="20210825 23:02:03.492" endtime="20210825 23:02:03.522"/>
</kw>
<status status="PASS" starttime="20210825 23:02:03.491" endtime="20210825 23:02:03.522"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:02:03.526" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:02:03.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:02:03.656" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210825 23:02:03.524" endtime="20210825 23:02:03.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:02:03.657" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Wed, 25 Aug 2021 23:02:03 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCw6mSQaQRHpw0P7jcjoGFix+bnNsL49idAkd4kDbEvQgVT5fCLPbAEWKWjZJStAV2voDYgEj6kkmAcW6+i7le1ZiK
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1629968523642&amp;s=u+vTZv3T3VbxvDkdQUOSAxlfNZAVdZDgLUGC4ZajD1E="; Path=/; HttpOnly
Last-Modified: Wed, 25 Aug 2021 22:48:46 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210825 23:02:03.656" endtime="20210825 23:02:03.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:02:03.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:02:03.658" endtime="20210825 23:02:03.658"/>
</kw>
<status status="PASS" starttime="20210825 23:02:03.523" endtime="20210825 23:02:03.659"/>
</kw>
<msg timestamp="20210825 23:02:03.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:02:03.523" endtime="20210825 23:02:03.659"/>
</kw>
<msg timestamp="20210825 23:02:03.660" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210825 23:02:03.522" endtime="20210825 23:02:03.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:02:03.660" endtime="20210825 23:02:03.661"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210825 23:02:03.490" endtime="20210825 23:02:03.661"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:02:03.669" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:02:03.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:02:03.673" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:02:03.667" endtime="20210825 23:02:03.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:02:03.675" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:02:03.674" endtime="20210825 23:02:03.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:02:03.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:02:03.675" endtime="20210825 23:02:03.676"/>
</kw>
<status status="PASS" starttime="20210825 23:02:03.666" endtime="20210825 23:02:03.676"/>
</kw>
<msg timestamp="20210825 23:02:03.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:02:03.666" endtime="20210825 23:02:03.676"/>
</kw>
<msg timestamp="20210825 23:02:03.677" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:02:03.665" endtime="20210825 23:02:03.677"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:02:03.679" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:02:03.677" endtime="20210825 23:02:03.679"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:02:03.683" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:02:03.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:02:03.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:02:03.681" endtime="20210825 23:02:03.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:02:03.693" level="INFO"/>
<status status="PASS" starttime="20210825 23:02:03.692" endtime="20210825 23:02:03.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:02:03.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:02:03.693" endtime="20210825 23:02:03.694"/>
</kw>
<status status="PASS" starttime="20210825 23:02:03.681" endtime="20210825 23:02:03.694"/>
</kw>
<msg timestamp="20210825 23:02:03.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:02:03.680" endtime="20210825 23:02:03.694"/>
</kw>
<status status="PASS" starttime="20210825 23:02:03.680" endtime="20210825 23:02:03.695"/>
</kw>
<status status="PASS" starttime="20210825 23:02:03.679" endtime="20210825 23:02:03.695"/>
</kw>
<status status="PASS" starttime="20210825 23:02:03.665" endtime="20210825 23:02:03.695"/>
</kw>
<status status="PASS" starttime="20210825 23:02:03.664" endtime="20210825 23:02:03.695"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:02:03.699" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:07:03.664" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210825 23:02:03.697" endtime="20210825 23:07:03.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210825 23:07:03.665" endtime="20210825 23:07:03.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210825 23:07:03.665" endtime="20210825 23:07:03.665"/>
</kw>
<status status="FAIL" starttime="20210825 23:02:03.696" endtime="20210825 23:07:03.666"/>
</kw>
<msg timestamp="20210825 23:07:03.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210825 23:02:03.696" endtime="20210825 23:07:03.666"/>
</kw>
<status status="FAIL" starttime="20210825 23:02:03.695" endtime="20210825 23:07:03.667"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210825 23:07:03.667" endtime="20210825 23:07:03.667"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:07:03.667" endtime="20210825 23:07:03.667"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210825 23:02:03.663" endtime="20210825 23:07:03.668">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210825 23:02:03.457" endtime="20210825 23:07:03.670"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:07:03.683" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:07:05.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:07:05.564" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210825 23:07:03.679" endtime="20210825 23:07:05.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:07:05.565" level="INFO">om</msg>
<status status="PASS" starttime="20210825 23:07:05.564" endtime="20210825 23:07:05.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:07:05.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:07:05.565" endtime="20210825 23:07:05.566"/>
</kw>
<status status="PASS" starttime="20210825 23:07:03.679" endtime="20210825 23:07:05.567"/>
</kw>
<msg timestamp="20210825 23:07:05.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:07:03.678" endtime="20210825 23:07:05.567"/>
</kw>
<msg timestamp="20210825 23:07:05.567" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210825 23:07:03.677" endtime="20210825 23:07:05.567"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:07:05.567" endtime="20210825 23:07:05.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:07:05.576" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:07:07.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:07:07.546" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210825 23:07:05.574" endtime="20210825 23:07:07.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:07:07.547" level="INFO">om</msg>
<status status="PASS" starttime="20210825 23:07:07.547" endtime="20210825 23:07:07.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:07:07.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:07:07.548" endtime="20210825 23:07:07.548"/>
</kw>
<status status="PASS" starttime="20210825 23:07:05.573" endtime="20210825 23:07:07.549"/>
</kw>
<msg timestamp="20210825 23:07:07.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:07:05.568" endtime="20210825 23:07:07.549"/>
</kw>
<msg timestamp="20210825 23:07:07.549" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210825 23:07:05.568" endtime="20210825 23:07:07.549"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:07:07.550" endtime="20210825 23:07:07.550"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210825 23:07:03.676" endtime="20210825 23:07:07.550"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:07:07.557" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:07:10.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:07:10.873" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:07:07.555" endtime="20210825 23:07:10.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:07:10.875" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:07:10.875" endtime="20210825 23:07:10.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:07:10.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:07:10.876" endtime="20210825 23:07:10.877"/>
</kw>
<status status="PASS" starttime="20210825 23:07:07.554" endtime="20210825 23:07:10.877"/>
</kw>
<msg timestamp="20210825 23:07:10.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:07:07.554" endtime="20210825 23:07:10.877"/>
</kw>
<msg timestamp="20210825 23:07:10.878" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210825 23:07:07.553" endtime="20210825 23:07:10.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:07:10.878" endtime="20210825 23:07:10.879"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:07:10.888" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:07:14.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:07:14.331" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:07:10.881" endtime="20210825 23:07:14.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:07:14.333" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:07:14.332" endtime="20210825 23:07:14.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:07:14.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:07:14.333" endtime="20210825 23:07:14.333"/>
</kw>
<status status="PASS" starttime="20210825 23:07:10.880" endtime="20210825 23:07:14.334"/>
</kw>
<msg timestamp="20210825 23:07:14.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:07:10.880" endtime="20210825 23:07:14.334"/>
</kw>
<msg timestamp="20210825 23:07:14.335" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210825 23:07:10.879" endtime="20210825 23:07:14.335"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:07:14.336" endtime="20210825 23:07:14.336"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210825 23:07:07.552" endtime="20210825 23:07:14.337"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:07:14.345" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:07:16.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:07:16.966" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210825 23:07:14.342" endtime="20210825 23:07:16.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:07:16.967" level="INFO">om</msg>
<status status="PASS" starttime="20210825 23:07:16.967" endtime="20210825 23:07:16.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:07:16.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:07:16.968" endtime="20210825 23:07:16.969"/>
</kw>
<status status="PASS" starttime="20210825 23:07:14.340" endtime="20210825 23:07:16.969"/>
</kw>
<msg timestamp="20210825 23:07:16.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:07:14.340" endtime="20210825 23:07:16.969"/>
</kw>
<msg timestamp="20210825 23:07:16.970" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210825 23:07:14.339" endtime="20210825 23:07:16.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:07:16.970" endtime="20210825 23:07:16.971"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:07:16.971" endtime="20210825 23:07:16.971"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:07:16.978" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:07:18.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:07:18.831" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210825 23:07:16.975" endtime="20210825 23:07:18.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:07:18.832" level="INFO">om</msg>
<status status="PASS" starttime="20210825 23:07:18.832" endtime="20210825 23:07:18.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:07:18.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:07:18.833" endtime="20210825 23:07:18.833"/>
</kw>
<status status="PASS" starttime="20210825 23:07:16.973" endtime="20210825 23:07:18.834"/>
</kw>
<msg timestamp="20210825 23:07:18.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:07:16.972" endtime="20210825 23:07:18.834"/>
</kw>
<msg timestamp="20210825 23:07:18.834" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210825 23:07:16.972" endtime="20210825 23:07:18.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:07:18.835" endtime="20210825 23:07:18.835"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:07:18.835" endtime="20210825 23:07:18.836"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210825 23:07:14.338" endtime="20210825 23:07:18.836"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:07:18.841" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:07:20.374" level="INFO">${rc} = 255</msg>
<msg timestamp="20210825 23:07:20.375" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210825 23:07:18.839" endtime="20210825 23:07:20.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:07:20.376" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210825 23:07:20.375" endtime="20210825 23:07:20.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:07:20.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:07:20.376" endtime="20210825 23:07:20.377"/>
</kw>
<msg timestamp="20210825 23:07:20.377" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210825 23:07:18.838" endtime="20210825 23:07:20.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:07:20.378" endtime="20210825 23:07:20.378"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:07:20.381" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:07:23.126" level="INFO">${rc} = 255</msg>
<msg timestamp="20210825 23:07:23.127" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210825 23:07:20.379" endtime="20210825 23:07:23.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:07:23.128" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210825 23:07:23.127" endtime="20210825 23:07:23.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:07:23.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:07:23.128" endtime="20210825 23:07:23.129"/>
</kw>
<msg timestamp="20210825 23:07:23.129" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210825 23:07:20.378" endtime="20210825 23:07:23.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:07:23.129" endtime="20210825 23:07:23.130"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210825 23:07:18.837" endtime="20210825 23:07:23.130"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210825 23:07:03.672" endtime="20210825 23:07:23.132"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210825 23:07:23.160" level="INFO">${random} = 58013</msg>
<status status="PASS" starttime="20210825 23:07:23.159" endtime="20210825 23:07:23.160"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:07:23.164" level="INFO">${source} = 58013-source</msg>
<status status="PASS" starttime="20210825 23:07:23.161" endtime="20210825 23:07:23.164"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:07:23.167" level="INFO">${target} = 58013-target</msg>
<status status="PASS" starttime="20210825 23:07:23.164" endtime="20210825 23:07:23.168"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:07:23.173" level="INFO">Running command 'ozone sh volume create 58013-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:07:31.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:07:31.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:07:23.170" endtime="20210825 23:07:31.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:07:31.128" level="INFO"/>
<status status="PASS" starttime="20210825 23:07:31.127" endtime="20210825 23:07:31.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:07:31.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:07:31.129" endtime="20210825 23:07:31.129"/>
</kw>
<status status="PASS" starttime="20210825 23:07:23.169" endtime="20210825 23:07:31.130"/>
</kw>
<msg timestamp="20210825 23:07:31.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:07:23.169" endtime="20210825 23:07:31.131"/>
</kw>
<status status="PASS" starttime="20210825 23:07:23.168" endtime="20210825 23:07:31.131"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:07:31.136" level="INFO">Running command 'ozone sh volume create 58013-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:07:38.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:07:38.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:07:31.134" endtime="20210825 23:07:38.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:07:38.709" level="INFO"/>
<status status="PASS" starttime="20210825 23:07:38.708" endtime="20210825 23:07:38.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:07:38.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:07:38.709" endtime="20210825 23:07:38.710"/>
</kw>
<status status="PASS" starttime="20210825 23:07:31.133" endtime="20210825 23:07:38.710"/>
</kw>
<msg timestamp="20210825 23:07:38.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:07:31.132" endtime="20210825 23:07:38.711"/>
</kw>
<status status="PASS" starttime="20210825 23:07:31.131" endtime="20210825 23:07:38.711"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:07:38.719" level="INFO">Running command 'ozone sh bucket create 58013-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:07:46.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:07:46.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:07:38.716" endtime="20210825 23:07:46.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:07:46.534" level="INFO"/>
<status status="PASS" starttime="20210825 23:07:46.532" endtime="20210825 23:07:46.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:07:46.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:07:46.534" endtime="20210825 23:07:46.535"/>
</kw>
<status status="PASS" starttime="20210825 23:07:38.715" endtime="20210825 23:07:46.536"/>
</kw>
<msg timestamp="20210825 23:07:46.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:07:38.713" endtime="20210825 23:07:46.537"/>
</kw>
<status status="PASS" starttime="20210825 23:07:38.712" endtime="20210825 23:07:46.538"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:07:46.548" level="INFO">Running command 'ozone sh key put 58013-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:10:58.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:10:58.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:07:46.546" endtime="20210825 23:10:58.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:10:58.844" level="INFO"/>
<status status="PASS" starttime="20210825 23:10:58.843" endtime="20210825 23:10:58.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:10:58.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:10:58.844" endtime="20210825 23:10:58.845"/>
</kw>
<status status="PASS" starttime="20210825 23:07:46.545" endtime="20210825 23:10:58.846"/>
</kw>
<msg timestamp="20210825 23:10:58.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:07:46.545" endtime="20210825 23:10:58.847"/>
</kw>
<status status="PASS" starttime="20210825 23:07:46.538" endtime="20210825 23:10:58.847"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:10:58.852" level="INFO">Running command 'ozone sh bucket create 58013-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:11:06.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:11:06.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:10:58.849" endtime="20210825 23:11:06.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:11:06.215" level="INFO"/>
<status status="PASS" starttime="20210825 23:11:06.214" endtime="20210825 23:11:06.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:11:06.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:11:06.215" endtime="20210825 23:11:06.216"/>
</kw>
<status status="PASS" starttime="20210825 23:10:58.849" endtime="20210825 23:11:06.216"/>
</kw>
<msg timestamp="20210825 23:11:06.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:10:58.848" endtime="20210825 23:11:06.217"/>
</kw>
<status status="PASS" starttime="20210825 23:10:58.847" endtime="20210825 23:11:06.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:11:06.223" level="INFO">Running command 'ozone sh bucket link 58013-source/readable-bucket 58013-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:11:10.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:11:10.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:11:06.220" endtime="20210825 23:11:10.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:11:10.672" level="INFO"/>
<status status="PASS" starttime="20210825 23:11:10.671" endtime="20210825 23:11:10.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:11:10.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:11:10.672" endtime="20210825 23:11:10.673"/>
</kw>
<status status="PASS" starttime="20210825 23:11:06.219" endtime="20210825 23:11:10.673"/>
</kw>
<msg timestamp="20210825 23:11:10.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:11:06.218" endtime="20210825 23:11:10.674"/>
</kw>
<status status="PASS" starttime="20210825 23:11:06.217" endtime="20210825 23:11:10.674"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:11:10.678" level="INFO">Running command 'ozone sh bucket link 58013-source/readable-bucket 58013-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:11:17.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:11:17.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:11:10.676" endtime="20210825 23:11:17.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:11:17.837" level="INFO"/>
<status status="PASS" starttime="20210825 23:11:17.836" endtime="20210825 23:11:17.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:11:17.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:11:17.838" endtime="20210825 23:11:17.839"/>
</kw>
<status status="PASS" starttime="20210825 23:11:10.675" endtime="20210825 23:11:17.839"/>
</kw>
<msg timestamp="20210825 23:11:17.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:11:10.675" endtime="20210825 23:11:17.840"/>
</kw>
<status status="PASS" starttime="20210825 23:11:10.674" endtime="20210825 23:11:17.840"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:11:17.846" level="INFO">Running command 'ozone sh bucket link 58013-source/unreadable-bucket 58013-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:11:24.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:11:24.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:11:17.843" endtime="20210825 23:11:24.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:11:24.139" level="INFO"/>
<status status="PASS" starttime="20210825 23:11:24.139" endtime="20210825 23:11:24.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:11:24.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:11:24.139" endtime="20210825 23:11:24.140"/>
</kw>
<status status="PASS" starttime="20210825 23:11:17.843" endtime="20210825 23:11:24.140"/>
</kw>
<msg timestamp="20210825 23:11:24.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:11:17.842" endtime="20210825 23:11:24.141"/>
</kw>
<status status="PASS" starttime="20210825 23:11:17.840" endtime="20210825 23:11:24.141"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:11:24.145" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 58013-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:11:30.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:11:30.498" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:11:24.142" endtime="20210825 23:11:30.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:11:30.499" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:11:30.499" endtime="20210825 23:11:30.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:11:30.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:11:30.500" endtime="20210825 23:11:30.500"/>
</kw>
<status status="PASS" starttime="20210825 23:11:24.142" endtime="20210825 23:11:30.501"/>
</kw>
<msg timestamp="20210825 23:11:30.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:11:24.142" endtime="20210825 23:11:30.501"/>
</kw>
<status status="PASS" starttime="20210825 23:11:24.141" endtime="20210825 23:11:30.501"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:11:30.506" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 58013-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:11:38.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:11:38.194" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:11:30.503" endtime="20210825 23:11:38.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:11:38.197" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:11:38.195" endtime="20210825 23:11:38.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:11:38.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:11:38.197" endtime="20210825 23:11:38.199"/>
</kw>
<status status="PASS" starttime="20210825 23:11:30.502" endtime="20210825 23:11:38.199"/>
</kw>
<msg timestamp="20210825 23:11:38.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:11:30.502" endtime="20210825 23:11:38.200"/>
</kw>
<status status="PASS" starttime="20210825 23:11:30.501" endtime="20210825 23:11:38.200"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:11:38.209" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 58013-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:11:46.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:11:46.236" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:11:38.206" endtime="20210825 23:11:46.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:11:46.238" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:11:46.237" endtime="20210825 23:11:46.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:11:46.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:11:46.239" endtime="20210825 23:11:46.239"/>
</kw>
<status status="PASS" starttime="20210825 23:11:38.204" endtime="20210825 23:11:46.240"/>
</kw>
<msg timestamp="20210825 23:11:46.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:11:38.203" endtime="20210825 23:11:46.240"/>
</kw>
<status status="PASS" starttime="20210825 23:11:38.201" endtime="20210825 23:11:46.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:11:46.245" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 58013-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:11:54.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:11:54.608" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:11:46.242" endtime="20210825 23:11:54.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:11:54.609" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:11:54.608" endtime="20210825 23:11:54.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:11:54.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:11:54.609" endtime="20210825 23:11:54.610"/>
</kw>
<status status="PASS" starttime="20210825 23:11:46.241" endtime="20210825 23:11:54.610"/>
</kw>
<msg timestamp="20210825 23:11:54.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:11:46.241" endtime="20210825 23:11:54.610"/>
</kw>
<status status="PASS" starttime="20210825 23:11:46.240" endtime="20210825 23:11:54.611"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:11:54.617" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 58013-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:12:01.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:12:01.913" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:11:54.615" endtime="20210825 23:12:01.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:12:01.914" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:12:01.913" endtime="20210825 23:12:01.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:12:01.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:12:01.914" endtime="20210825 23:12:01.915"/>
</kw>
<status status="PASS" starttime="20210825 23:11:54.614" endtime="20210825 23:12:01.915"/>
</kw>
<msg timestamp="20210825 23:12:01.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:11:54.613" endtime="20210825 23:12:01.916"/>
</kw>
<status status="PASS" starttime="20210825 23:11:54.612" endtime="20210825 23:12:01.916"/>
</kw>
<status status="PASS" starttime="20210825 23:07:38.712" endtime="20210825 23:12:01.916"/>
</kw>
<status status="PASS" starttime="20210825 23:07:38.711" endtime="20210825 23:12:01.917"/>
</kw>
<status status="PASS" starttime="20210825 23:07:23.159" endtime="20210825 23:12:01.917"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:12:01.924" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:12:01.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:12:01.931" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:12:01.922" endtime="20210825 23:12:01.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:12:01.933" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:12:01.932" endtime="20210825 23:12:01.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:12:01.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:12:01.933" endtime="20210825 23:12:01.935"/>
</kw>
<status status="PASS" starttime="20210825 23:12:01.921" endtime="20210825 23:12:01.936"/>
</kw>
<msg timestamp="20210825 23:12:01.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:12:01.920" endtime="20210825 23:12:01.936"/>
</kw>
<msg timestamp="20210825 23:12:01.937" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:12:01.920" endtime="20210825 23:12:01.937"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:12:01.940" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:12:01.937" endtime="20210825 23:12:01.940"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:12:01.945" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:12:01.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:12:01.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:12:01.943" endtime="20210825 23:12:01.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:12:01.981" level="INFO"/>
<status status="PASS" starttime="20210825 23:12:01.981" endtime="20210825 23:12:01.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:12:01.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:12:01.982" endtime="20210825 23:12:01.982"/>
</kw>
<status status="PASS" starttime="20210825 23:12:01.942" endtime="20210825 23:12:01.983"/>
</kw>
<msg timestamp="20210825 23:12:01.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:12:01.942" endtime="20210825 23:12:01.983"/>
</kw>
<status status="PASS" starttime="20210825 23:12:01.941" endtime="20210825 23:12:01.983"/>
</kw>
<status status="PASS" starttime="20210825 23:12:01.940" endtime="20210825 23:12:01.983"/>
</kw>
<status status="PASS" starttime="20210825 23:12:01.919" endtime="20210825 23:12:01.984"/>
</kw>
<status status="PASS" starttime="20210825 23:12:01.918" endtime="20210825 23:12:01.984"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:12:01.989" level="INFO">Running command 'ozone sh bucket link 58013-source/no-such-bucket 58013-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:12:09.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:12:09.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:12:01.987" endtime="20210825 23:12:09.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:12:09.283" level="INFO"/>
<status status="PASS" starttime="20210825 23:12:09.282" endtime="20210825 23:12:09.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:12:09.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:12:09.283" endtime="20210825 23:12:09.284"/>
</kw>
<status status="PASS" starttime="20210825 23:12:01.986" endtime="20210825 23:12:09.285"/>
</kw>
<msg timestamp="20210825 23:12:09.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:12:01.985" endtime="20210825 23:12:09.285"/>
</kw>
<status status="PASS" starttime="20210825 23:12:01.984" endtime="20210825 23:12:09.285"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:12:09.290" level="INFO">Running command 'ozone sh key list 58013-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:12:15.281" level="INFO">${rc} = 255</msg>
<msg timestamp="20210825 23:12:15.281" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210825 23:12:09.287" endtime="20210825 23:12:15.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:12:15.284" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210825 23:12:15.282" endtime="20210825 23:12:15.284"/>
</kw>
<msg timestamp="20210825 23:12:15.285" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210825 23:12:09.285" endtime="20210825 23:12:15.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:12:15.286" endtime="20210825 23:12:15.287"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210825 23:12:01.917" endtime="20210825 23:12:15.288"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:12:15.299" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:12:15.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:12:15.304" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:12:15.296" endtime="20210825 23:12:15.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:12:15.306" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:12:15.305" endtime="20210825 23:12:15.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:12:15.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:12:15.306" endtime="20210825 23:12:15.307"/>
</kw>
<status status="PASS" starttime="20210825 23:12:15.295" endtime="20210825 23:12:15.308"/>
</kw>
<msg timestamp="20210825 23:12:15.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:12:15.294" endtime="20210825 23:12:15.308"/>
</kw>
<msg timestamp="20210825 23:12:15.309" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:12:15.292" endtime="20210825 23:12:15.309"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:12:15.310" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:12:15.309" endtime="20210825 23:12:15.310"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:12:15.317" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:12:15.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:12:15.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:12:15.313" endtime="20210825 23:12:15.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:12:15.330" level="INFO"/>
<status status="PASS" starttime="20210825 23:12:15.328" endtime="20210825 23:12:15.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:12:15.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:12:15.330" endtime="20210825 23:12:15.331"/>
</kw>
<status status="PASS" starttime="20210825 23:12:15.312" endtime="20210825 23:12:15.332"/>
</kw>
<msg timestamp="20210825 23:12:15.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:12:15.312" endtime="20210825 23:12:15.333"/>
</kw>
<status status="PASS" starttime="20210825 23:12:15.310" endtime="20210825 23:12:15.333"/>
</kw>
<status status="PASS" starttime="20210825 23:12:15.310" endtime="20210825 23:12:15.333"/>
</kw>
<status status="PASS" starttime="20210825 23:12:15.291" endtime="20210825 23:12:15.334"/>
</kw>
<status status="PASS" starttime="20210825 23:12:15.290" endtime="20210825 23:12:15.334"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:12:15.340" level="INFO">Running command 'ozone sh bucket link 58013-source/bucket1 58013-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:12:22.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:12:22.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:12:15.337" endtime="20210825 23:12:22.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:12:22.422" level="INFO"/>
<status status="PASS" starttime="20210825 23:12:22.421" endtime="20210825 23:12:22.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:12:22.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:12:22.423" endtime="20210825 23:12:22.423"/>
</kw>
<status status="PASS" starttime="20210825 23:12:15.336" endtime="20210825 23:12:22.424"/>
</kw>
<msg timestamp="20210825 23:12:22.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:12:15.336" endtime="20210825 23:12:22.424"/>
</kw>
<status status="PASS" starttime="20210825 23:12:15.334" endtime="20210825 23:12:22.424"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:12:22.429" level="INFO">Running command 'ozone sh bucket create 58013-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:12:27.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:12:27.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:12:22.427" endtime="20210825 23:12:27.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:12:27.865" level="INFO"/>
<status status="PASS" starttime="20210825 23:12:27.864" endtime="20210825 23:12:27.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:12:27.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:12:27.865" endtime="20210825 23:12:27.866"/>
</kw>
<status status="PASS" starttime="20210825 23:12:22.426" endtime="20210825 23:12:27.867"/>
</kw>
<msg timestamp="20210825 23:12:27.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:12:22.426" endtime="20210825 23:12:27.867"/>
</kw>
<status status="PASS" starttime="20210825 23:12:22.425" endtime="20210825 23:12:27.867"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:12:27.872" level="INFO">Running command 'ozone sh key put 58013-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:14:15.289" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210825 23:12:27.869" endtime="20210825 23:14:15.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210825 23:14:15.291" endtime="20210825 23:14:15.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210825 23:14:15.291" endtime="20210825 23:14:15.291"/>
</kw>
<status status="FAIL" starttime="20210825 23:12:27.869" endtime="20210825 23:14:15.291"/>
</kw>
<msg timestamp="20210825 23:14:15.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210825 23:12:27.868" endtime="20210825 23:14:15.292"/>
</kw>
<status status="FAIL" starttime="20210825 23:12:27.867" endtime="20210825 23:14:15.292"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210825 23:14:15.292" endtime="20210825 23:14:15.292"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210825 23:12:15.288" endtime="20210825 23:14:15.293">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:14:15.299" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:14:15.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:14:15.305" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:14:15.297" endtime="20210825 23:14:15.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:14:15.307" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:14:15.306" endtime="20210825 23:14:15.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:14:15.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:14:15.307" endtime="20210825 23:14:15.308"/>
</kw>
<status status="PASS" starttime="20210825 23:14:15.296" endtime="20210825 23:14:15.308"/>
</kw>
<msg timestamp="20210825 23:14:15.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:14:15.296" endtime="20210825 23:14:15.309"/>
</kw>
<msg timestamp="20210825 23:14:15.309" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:14:15.295" endtime="20210825 23:14:15.309"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:14:15.310" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:14:15.309" endtime="20210825 23:14:15.310"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:14:15.317" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:14:15.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:14:15.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:14:15.314" endtime="20210825 23:14:15.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:14:15.328" level="INFO"/>
<status status="PASS" starttime="20210825 23:14:15.327" endtime="20210825 23:14:15.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:14:15.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:14:15.328" endtime="20210825 23:14:15.330"/>
</kw>
<status status="PASS" starttime="20210825 23:14:15.313" endtime="20210825 23:14:15.330"/>
</kw>
<msg timestamp="20210825 23:14:15.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:14:15.312" endtime="20210825 23:14:15.330"/>
</kw>
<status status="PASS" starttime="20210825 23:14:15.311" endtime="20210825 23:14:15.331"/>
</kw>
<status status="PASS" starttime="20210825 23:14:15.311" endtime="20210825 23:14:15.331"/>
</kw>
<status status="PASS" starttime="20210825 23:14:15.295" endtime="20210825 23:14:15.331"/>
</kw>
<status status="PASS" starttime="20210825 23:14:15.294" endtime="20210825 23:14:15.331"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:14:15.339" level="INFO">Running command 'ozone sh key put 58013-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:15.295" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210825 23:14:15.335" endtime="20210825 23:16:15.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210825 23:16:15.296" endtime="20210825 23:16:15.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210825 23:16:15.296" endtime="20210825 23:16:15.296"/>
</kw>
<status status="FAIL" starttime="20210825 23:14:15.334" endtime="20210825 23:16:15.297"/>
</kw>
<msg timestamp="20210825 23:16:15.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210825 23:14:15.333" endtime="20210825 23:16:15.297"/>
</kw>
<status status="FAIL" starttime="20210825 23:14:15.332" endtime="20210825 23:16:15.297"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210825 23:16:15.297" endtime="20210825 23:16:15.297"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210825 23:14:15.293" endtime="20210825 23:16:15.298">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:15.304" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:15.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:16:15.309" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:16:15.302" endtime="20210825 23:16:15.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:15.311" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:16:15.310" endtime="20210825 23:16:15.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:15.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:16:15.312" endtime="20210825 23:16:15.313"/>
</kw>
<status status="PASS" starttime="20210825 23:16:15.301" endtime="20210825 23:16:15.313"/>
</kw>
<msg timestamp="20210825 23:16:15.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:15.301" endtime="20210825 23:16:15.314"/>
</kw>
<msg timestamp="20210825 23:16:15.314" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:16:15.301" endtime="20210825 23:16:15.314"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:16:15.316" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:16:15.315" endtime="20210825 23:16:15.316"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:15.322" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:15.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:16:15.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:16:15.320" endtime="20210825 23:16:15.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:15.335" level="INFO"/>
<status status="PASS" starttime="20210825 23:16:15.334" endtime="20210825 23:16:15.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:15.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:16:15.335" endtime="20210825 23:16:15.336"/>
</kw>
<status status="PASS" starttime="20210825 23:16:15.319" endtime="20210825 23:16:15.336"/>
</kw>
<msg timestamp="20210825 23:16:15.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:15.318" endtime="20210825 23:16:15.337"/>
</kw>
<status status="PASS" starttime="20210825 23:16:15.317" endtime="20210825 23:16:15.337"/>
</kw>
<status status="PASS" starttime="20210825 23:16:15.316" endtime="20210825 23:16:15.337"/>
</kw>
<status status="PASS" starttime="20210825 23:16:15.300" endtime="20210825 23:16:15.338"/>
</kw>
<status status="PASS" starttime="20210825 23:16:15.299" endtime="20210825 23:16:15.338"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:15.344" level="INFO">Running command 'ozone sh key list 58013-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:23.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:16:23.886" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210825 23:16:15.340" endtime="20210825 23:16:23.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:23.888" level="INFO">key1</msg>
<status status="PASS" starttime="20210825 23:16:23.887" endtime="20210825 23:16:23.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:23.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:16:23.889" endtime="20210825 23:16:23.892"/>
</kw>
<status status="PASS" starttime="20210825 23:16:15.340" endtime="20210825 23:16:23.892"/>
</kw>
<msg timestamp="20210825 23:16:23.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:15.339" endtime="20210825 23:16:23.893"/>
</kw>
<msg timestamp="20210825 23:16:23.894" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210825 23:16:15.338" endtime="20210825 23:16:23.894"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:23.900" level="INFO">Running command 'ozone sh key list 58013-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:32.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:16:32.255" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210825 23:16:23.897" endtime="20210825 23:16:32.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:32.256" level="INFO">key1</msg>
<status status="PASS" starttime="20210825 23:16:32.255" endtime="20210825 23:16:32.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:32.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:16:32.256" endtime="20210825 23:16:32.257"/>
</kw>
<status status="PASS" starttime="20210825 23:16:23.896" endtime="20210825 23:16:32.258"/>
</kw>
<msg timestamp="20210825 23:16:32.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:23.895" endtime="20210825 23:16:32.258"/>
</kw>
<msg timestamp="20210825 23:16:32.259" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210825 23:16:23.894" endtime="20210825 23:16:32.259"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:16:32.259" endtime="20210825 23:16:32.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:16:32.260" endtime="20210825 23:16:32.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210825 23:16:32.263" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210825 23:16:32.262" endtime="20210825 23:16:32.263"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210825 23:16:15.298" endtime="20210825 23:16:32.263">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:32.274" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:32.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:16:32.280" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:16:32.271" endtime="20210825 23:16:32.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:32.282" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:16:32.281" endtime="20210825 23:16:32.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:32.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:16:32.283" endtime="20210825 23:16:32.286"/>
</kw>
<status status="PASS" starttime="20210825 23:16:32.270" endtime="20210825 23:16:32.287"/>
</kw>
<msg timestamp="20210825 23:16:32.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:32.269" endtime="20210825 23:16:32.287"/>
</kw>
<msg timestamp="20210825 23:16:32.287" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:16:32.268" endtime="20210825 23:16:32.287"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:16:32.288" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:16:32.287" endtime="20210825 23:16:32.288"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:32.294" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:32.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:16:32.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:16:32.291" endtime="20210825 23:16:32.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:32.305" level="INFO"/>
<status status="PASS" starttime="20210825 23:16:32.304" endtime="20210825 23:16:32.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:32.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:16:32.305" endtime="20210825 23:16:32.306"/>
</kw>
<status status="PASS" starttime="20210825 23:16:32.290" endtime="20210825 23:16:32.307"/>
</kw>
<msg timestamp="20210825 23:16:32.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:32.290" endtime="20210825 23:16:32.307"/>
</kw>
<status status="PASS" starttime="20210825 23:16:32.289" endtime="20210825 23:16:32.307"/>
</kw>
<status status="PASS" starttime="20210825 23:16:32.288" endtime="20210825 23:16:32.307"/>
</kw>
<status status="PASS" starttime="20210825 23:16:32.267" endtime="20210825 23:16:32.307"/>
</kw>
<status status="PASS" starttime="20210825 23:16:32.266" endtime="20210825 23:16:32.308"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:32.312" level="INFO">Running command 'ozone sh key delete 58013-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:40.352" level="INFO">${rc} = 255</msg>
<msg timestamp="20210825 23:16:40.352" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210825 23:16:32.309" endtime="20210825 23:16:40.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:40.354" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210825 23:16:40.353" endtime="20210825 23:16:40.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:40.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210825 23:16:40.356" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210825 23:16:40.355" endtime="20210825 23:16:40.356"/>
</kw>
<status status="FAIL" starttime="20210825 23:16:32.309" endtime="20210825 23:16:40.357"/>
</kw>
<msg timestamp="20210825 23:16:40.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210825 23:16:32.308" endtime="20210825 23:16:40.357"/>
</kw>
<status status="FAIL" starttime="20210825 23:16:32.308" endtime="20210825 23:16:40.358"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210825 23:16:40.358" endtime="20210825 23:16:40.359"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:16:40.359" endtime="20210825 23:16:40.359"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210825 23:16:32.265" endtime="20210825 23:16:40.360">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:40.371" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:40.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:16:40.375" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:16:40.368" endtime="20210825 23:16:40.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:40.377" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:16:40.376" endtime="20210825 23:16:40.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:40.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:16:40.378" endtime="20210825 23:16:40.379"/>
</kw>
<status status="PASS" starttime="20210825 23:16:40.367" endtime="20210825 23:16:40.380"/>
</kw>
<msg timestamp="20210825 23:16:40.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:40.367" endtime="20210825 23:16:40.380"/>
</kw>
<msg timestamp="20210825 23:16:40.381" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:16:40.366" endtime="20210825 23:16:40.381"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:16:40.382" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:16:40.381" endtime="20210825 23:16:40.382"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:40.388" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:40.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:16:40.395" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:16:40.385" endtime="20210825 23:16:40.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:40.396" level="INFO"/>
<status status="PASS" starttime="20210825 23:16:40.396" endtime="20210825 23:16:40.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:40.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:16:40.397" endtime="20210825 23:16:40.397"/>
</kw>
<status status="PASS" starttime="20210825 23:16:40.384" endtime="20210825 23:16:40.398"/>
</kw>
<msg timestamp="20210825 23:16:40.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:40.384" endtime="20210825 23:16:40.398"/>
</kw>
<status status="PASS" starttime="20210825 23:16:40.383" endtime="20210825 23:16:40.398"/>
</kw>
<status status="PASS" starttime="20210825 23:16:40.382" endtime="20210825 23:16:40.398"/>
</kw>
<status status="PASS" starttime="20210825 23:16:40.365" endtime="20210825 23:16:40.398"/>
</kw>
<status status="PASS" starttime="20210825 23:16:40.364" endtime="20210825 23:16:40.398"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:40.405" level="INFO">Running command 'ozone sh bucket list 58013-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:49.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:16:49.289" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210825 23:16:40.402" endtime="20210825 23:16:49.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:49.290" level="INFO">{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:12:09.162Z",
  "modificationTime" : "2021-08-25T23:12:09.162Z",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:11:24.079Z",
  "modificationTime" : "2021-08-25T23:12:01.830Z",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:12:22.218Z",
  "modificationTime" : "2021-08-25T23:12:22.218Z",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:11:10.553Z",
  "modificationTime" : "2021-08-25T23:11:54.163Z",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:11:17.547Z",
  "modificationTime" : "2021-08-25T23:11:17.547Z",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210825 23:16:49.289" endtime="20210825 23:16:49.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:49.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:16:49.291" endtime="20210825 23:16:49.291"/>
</kw>
<status status="PASS" starttime="20210825 23:16:40.400" endtime="20210825 23:16:49.292"/>
</kw>
<msg timestamp="20210825 23:16:49.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:40.400" endtime="20210825 23:16:49.292"/>
</kw>
<msg timestamp="20210825 23:16:49.292" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210825 23:16:40.399" endtime="20210825 23:16:49.292"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:16:49.293" endtime="20210825 23:16:49.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:16:49.293" endtime="20210825 23:16:49.294"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210825 23:16:40.363" endtime="20210825 23:16:49.294"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:49.302" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:49.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:16:49.309" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:16:49.299" endtime="20210825 23:16:49.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:49.311" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:16:49.310" endtime="20210825 23:16:49.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:49.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:16:49.312" endtime="20210825 23:16:49.313"/>
</kw>
<status status="PASS" starttime="20210825 23:16:49.298" endtime="20210825 23:16:49.313"/>
</kw>
<msg timestamp="20210825 23:16:49.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:49.298" endtime="20210825 23:16:49.314"/>
</kw>
<msg timestamp="20210825 23:16:49.314" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:16:49.297" endtime="20210825 23:16:49.314"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:16:49.315" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:16:49.314" endtime="20210825 23:16:49.315"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:49.321" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:49.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:16:49.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:16:49.319" endtime="20210825 23:16:49.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:49.332" level="INFO"/>
<status status="PASS" starttime="20210825 23:16:49.331" endtime="20210825 23:16:49.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:49.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:16:49.332" endtime="20210825 23:16:49.333"/>
</kw>
<status status="PASS" starttime="20210825 23:16:49.317" endtime="20210825 23:16:49.333"/>
</kw>
<msg timestamp="20210825 23:16:49.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:49.317" endtime="20210825 23:16:49.334"/>
</kw>
<status status="PASS" starttime="20210825 23:16:49.316" endtime="20210825 23:16:49.334"/>
</kw>
<status status="PASS" starttime="20210825 23:16:49.315" endtime="20210825 23:16:49.334"/>
</kw>
<status status="PASS" starttime="20210825 23:16:49.297" endtime="20210825 23:16:49.334"/>
</kw>
<status status="PASS" starttime="20210825 23:16:49.296" endtime="20210825 23:16:49.335"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:49.339" level="INFO">Running command 'ozone sh bucket info 58013-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:57.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:16:57.526" level="INFO">${output} = {
  "volumeName" : "58013-target",
  "bucketName" : "link1",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-25T23:12:22.218Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210825 23:16:49.337" endtime="20210825 23:16:57.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:57.528" level="INFO">{
  "volumeName" : "58013-target",
  "bucketName" : "link1",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-25T23:12:22.218Z",
  "modificationTime" : "2021-08-25T23:12:22.218Z"
}</msg>
<status status="PASS" starttime="20210825 23:16:57.527" endtime="20210825 23:16:57.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:57.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:16:57.528" endtime="20210825 23:16:57.529"/>
</kw>
<status status="PASS" starttime="20210825 23:16:49.336" endtime="20210825 23:16:57.529"/>
</kw>
<msg timestamp="20210825 23:16:57.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:49.336" endtime="20210825 23:16:57.530"/>
</kw>
<msg timestamp="20210825 23:16:57.530" level="INFO">${result} = {
  "volumeName" : "58013-target",
  "bucketName" : "link1",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-08-25T23:12:22.218Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210825 23:16:49.335" endtime="20210825 23:16:57.530"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:16:57.530" endtime="20210825 23:16:57.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:16:57.531" endtime="20210825 23:16:57.532"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:16:57.532" endtime="20210825 23:16:57.532"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:16:57.532" endtime="20210825 23:16:57.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:16:57.533" endtime="20210825 23:16:57.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:16:57.534" endtime="20210825 23:16:57.534"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:16:57.535" endtime="20210825 23:16:57.535"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210825 23:16:49.295" endtime="20210825 23:16:57.535"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:57.543" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:57.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:16:57.546" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:16:57.540" endtime="20210825 23:16:57.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:57.547" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:16:57.547" endtime="20210825 23:16:57.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:57.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:16:57.548" endtime="20210825 23:16:57.549"/>
</kw>
<status status="PASS" starttime="20210825 23:16:57.539" endtime="20210825 23:16:57.549"/>
</kw>
<msg timestamp="20210825 23:16:57.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:57.539" endtime="20210825 23:16:57.549"/>
</kw>
<msg timestamp="20210825 23:16:57.550" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:16:57.538" endtime="20210825 23:16:57.550"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:16:57.550" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:16:57.550" endtime="20210825 23:16:57.551"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:57.555" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:16:57.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:16:57.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:16:57.553" endtime="20210825 23:16:57.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:16:57.564" level="INFO"/>
<status status="PASS" starttime="20210825 23:16:57.564" endtime="20210825 23:16:57.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:16:57.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:16:57.565" endtime="20210825 23:16:57.565"/>
</kw>
<status status="PASS" starttime="20210825 23:16:57.553" endtime="20210825 23:16:57.566"/>
</kw>
<msg timestamp="20210825 23:16:57.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:57.552" endtime="20210825 23:16:57.566"/>
</kw>
<status status="PASS" starttime="20210825 23:16:57.551" endtime="20210825 23:16:57.566"/>
</kw>
<status status="PASS" starttime="20210825 23:16:57.551" endtime="20210825 23:16:57.567"/>
</kw>
<status status="PASS" starttime="20210825 23:16:57.537" endtime="20210825 23:16:57.567"/>
</kw>
<status status="PASS" starttime="20210825 23:16:57.537" endtime="20210825 23:16:57.567"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:16:57.571" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 58013-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:17:04.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:17:04.932" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:16:57.569" endtime="20210825 23:17:04.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:17:04.934" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:17:04.933" endtime="20210825 23:17:04.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:17:04.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:17:04.934" endtime="20210825 23:17:04.935"/>
</kw>
<status status="PASS" starttime="20210825 23:16:57.568" endtime="20210825 23:17:04.936"/>
</kw>
<msg timestamp="20210825 23:17:04.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:16:57.568" endtime="20210825 23:17:04.936"/>
</kw>
<status status="PASS" starttime="20210825 23:16:57.567" endtime="20210825 23:17:04.936"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:17:04.944" level="INFO">Running command 'ozone sh bucket getacl 58013-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:17:13.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:17:13.314" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210825 23:17:04.941" endtime="20210825 23:17:13.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:17:13.315" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210825 23:17:13.314" endtime="20210825 23:17:13.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:17:13.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:17:13.315" endtime="20210825 23:17:13.316"/>
</kw>
<status status="PASS" starttime="20210825 23:17:04.939" endtime="20210825 23:17:13.316"/>
</kw>
<msg timestamp="20210825 23:17:13.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:17:04.938" endtime="20210825 23:17:13.317"/>
</kw>
<msg timestamp="20210825 23:17:13.317" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210825 23:17:04.937" endtime="20210825 23:17:13.317"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:17:13.317" endtime="20210825 23:17:13.318"/>
</kw>
<status status="PASS" starttime="20210825 23:17:04.936" endtime="20210825 23:17:13.318"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:17:13.326" level="INFO">Running command 'ozone sh bucket getacl 58013-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:17:20.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:17:20.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:17:13.323" endtime="20210825 23:17:20.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:17:20.939" level="INFO"/>
<status status="PASS" starttime="20210825 23:17:20.937" endtime="20210825 23:17:20.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:17:20.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:17:20.940" endtime="20210825 23:17:20.940"/>
</kw>
<status status="PASS" starttime="20210825 23:17:13.323" endtime="20210825 23:17:20.941"/>
</kw>
<msg timestamp="20210825 23:17:20.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:17:13.322" endtime="20210825 23:17:20.941"/>
</kw>
<msg timestamp="20210825 23:17:20.942" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210825 23:17:13.321" endtime="20210825 23:17:20.942"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:17:20.942" endtime="20210825 23:17:20.943"/>
</kw>
<status status="PASS" starttime="20210825 23:17:13.318" endtime="20210825 23:17:20.943"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:17:20.949" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 58013-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:17:28.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:17:28.707" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:17:20.945" endtime="20210825 23:17:28.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:17:28.708" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:17:28.707" endtime="20210825 23:17:28.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:17:28.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:17:28.708" endtime="20210825 23:17:28.709"/>
</kw>
<status status="PASS" starttime="20210825 23:17:20.944" endtime="20210825 23:17:28.709"/>
</kw>
<msg timestamp="20210825 23:17:28.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:17:20.944" endtime="20210825 23:17:28.710"/>
</kw>
<status status="PASS" starttime="20210825 23:17:20.943" endtime="20210825 23:17:28.710"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:17:28.716" level="INFO">Running command 'ozone sh bucket getacl 58013-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:17:34.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:17:34.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:17:28.714" endtime="20210825 23:17:34.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:17:34.499" level="INFO"/>
<status status="PASS" starttime="20210825 23:17:34.498" endtime="20210825 23:17:34.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:17:34.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:17:34.499" endtime="20210825 23:17:34.501"/>
</kw>
<status status="PASS" starttime="20210825 23:17:28.713" endtime="20210825 23:17:34.502"/>
</kw>
<msg timestamp="20210825 23:17:34.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:17:28.713" endtime="20210825 23:17:34.502"/>
</kw>
<msg timestamp="20210825 23:17:34.503" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210825 23:17:28.712" endtime="20210825 23:17:34.503"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:17:34.503" endtime="20210825 23:17:34.504"/>
</kw>
<status status="PASS" starttime="20210825 23:17:28.710" endtime="20210825 23:17:34.505"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:17:34.515" level="INFO">Running command 'ozone sh bucket getacl 58013-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:17:42.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:17:42.084" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210825 23:17:34.511" endtime="20210825 23:17:42.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:17:42.085" level="INFO">READ</msg>
<status status="PASS" starttime="20210825 23:17:42.084" endtime="20210825 23:17:42.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:17:42.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:17:42.085" endtime="20210825 23:17:42.086"/>
</kw>
<status status="PASS" starttime="20210825 23:17:34.510" endtime="20210825 23:17:42.087"/>
</kw>
<msg timestamp="20210825 23:17:42.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:17:34.509" endtime="20210825 23:17:42.087"/>
</kw>
<msg timestamp="20210825 23:17:42.087" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210825 23:17:34.508" endtime="20210825 23:17:42.087"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:17:42.087" endtime="20210825 23:17:42.088"/>
</kw>
<status status="PASS" starttime="20210825 23:17:34.507" endtime="20210825 23:17:42.088"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210825 23:16:57.536" endtime="20210825 23:17:42.088"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:17:42.096" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:17:42.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:17:42.105" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:17:42.093" endtime="20210825 23:17:42.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:17:42.107" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:17:42.106" endtime="20210825 23:17:42.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:17:42.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:17:42.108" endtime="20210825 23:17:42.109"/>
</kw>
<status status="PASS" starttime="20210825 23:17:42.093" endtime="20210825 23:17:42.110"/>
</kw>
<msg timestamp="20210825 23:17:42.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:17:42.092" endtime="20210825 23:17:42.110"/>
</kw>
<msg timestamp="20210825 23:17:42.111" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:17:42.092" endtime="20210825 23:17:42.111"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:17:42.112" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:17:42.111" endtime="20210825 23:17:42.112"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:17:42.119" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:17:42.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:17:42.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:17:42.116" endtime="20210825 23:17:42.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:17:42.156" level="INFO"/>
<status status="PASS" starttime="20210825 23:17:42.155" endtime="20210825 23:17:42.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:17:42.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:17:42.156" endtime="20210825 23:17:42.157"/>
</kw>
<status status="PASS" starttime="20210825 23:17:42.115" endtime="20210825 23:17:42.157"/>
</kw>
<msg timestamp="20210825 23:17:42.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:17:42.115" endtime="20210825 23:17:42.158"/>
</kw>
<status status="PASS" starttime="20210825 23:17:42.113" endtime="20210825 23:17:42.158"/>
</kw>
<status status="PASS" starttime="20210825 23:17:42.112" endtime="20210825 23:17:42.158"/>
</kw>
<status status="PASS" starttime="20210825 23:17:42.091" endtime="20210825 23:17:42.158"/>
</kw>
<status status="PASS" starttime="20210825 23:17:42.091" endtime="20210825 23:17:42.158"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:17:42.164" level="INFO">Running command 'ozone sh bucket link 58013-source/bucket2 58013-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:17:49.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:17:49.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:17:42.161" endtime="20210825 23:17:49.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:17:49.870" level="INFO"/>
<status status="PASS" starttime="20210825 23:17:49.869" endtime="20210825 23:17:49.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:17:49.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:17:49.871" endtime="20210825 23:17:49.872"/>
</kw>
<status status="PASS" starttime="20210825 23:17:42.160" endtime="20210825 23:17:49.872"/>
</kw>
<msg timestamp="20210825 23:17:49.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:17:42.160" endtime="20210825 23:17:49.872"/>
</kw>
<status status="PASS" starttime="20210825 23:17:42.159" endtime="20210825 23:17:49.872"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:17:49.876" level="INFO">Running command 'ozone sh bucket create 58013-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:17:57.253" level="INFO">${rc} = 255</msg>
<msg timestamp="20210825 23:17:57.253" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210825 23:17:49.873" endtime="20210825 23:17:57.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:17:57.255" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210825 23:17:57.254" endtime="20210825 23:17:57.255"/>
</kw>
<msg timestamp="20210825 23:17:57.256" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210825 23:17:49.873" endtime="20210825 23:17:57.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:17:57.256" endtime="20210825 23:17:57.257"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:17:57.263" level="INFO">Running command 'ozone sh bucket create 58013-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:05.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:05.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:17:57.260" endtime="20210825 23:18:05.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:05.265" level="INFO"/>
<status status="PASS" starttime="20210825 23:18:05.264" endtime="20210825 23:18:05.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:05.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:05.265" endtime="20210825 23:18:05.266"/>
</kw>
<status status="PASS" starttime="20210825 23:17:57.259" endtime="20210825 23:18:05.266"/>
</kw>
<msg timestamp="20210825 23:18:05.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:17:57.259" endtime="20210825 23:18:05.268"/>
</kw>
<status status="PASS" starttime="20210825 23:17:57.257" endtime="20210825 23:18:05.269"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:05.275" level="INFO">Running command 'ozone sh bucket link 58013-source/bucket1 58013-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:11.486" level="INFO">${rc} = 255</msg>
<msg timestamp="20210825 23:18:11.487" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210825 23:18:05.272" endtime="20210825 23:18:11.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:11.488" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210825 23:18:11.488" endtime="20210825 23:18:11.489"/>
</kw>
<msg timestamp="20210825 23:18:11.489" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210825 23:18:05.270" endtime="20210825 23:18:11.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:18:11.489" endtime="20210825 23:18:11.490"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210825 23:17:42.089" endtime="20210825 23:18:11.490"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:11.501" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:11.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:11.506" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:18:11.497" endtime="20210825 23:18:11.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:11.508" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:18:11.507" endtime="20210825 23:18:11.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:11.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:11.508" endtime="20210825 23:18:11.509"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.496" endtime="20210825 23:18:11.510"/>
</kw>
<msg timestamp="20210825 23:18:11.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:11.496" endtime="20210825 23:18:11.510"/>
</kw>
<msg timestamp="20210825 23:18:11.511" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:18:11.495" endtime="20210825 23:18:11.511"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:18:11.513" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:18:11.512" endtime="20210825 23:18:11.513"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:11.521" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:11.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:11.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:18:11.518" endtime="20210825 23:18:11.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:11.538" level="INFO"/>
<status status="PASS" starttime="20210825 23:18:11.536" endtime="20210825 23:18:11.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:11.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:11.538" endtime="20210825 23:18:11.539"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.516" endtime="20210825 23:18:11.540"/>
</kw>
<msg timestamp="20210825 23:18:11.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:11.516" endtime="20210825 23:18:11.540"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.514" endtime="20210825 23:18:11.540"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.513" endtime="20210825 23:18:11.541"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.494" endtime="20210825 23:18:11.541"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.493" endtime="20210825 23:18:11.541"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:11.548" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:11.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:11.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:18:11.546" endtime="20210825 23:18:11.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:11.555" level="INFO"/>
<status status="PASS" starttime="20210825 23:18:11.555" endtime="20210825 23:18:11.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:11.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:11.556" endtime="20210825 23:18:11.557"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.544" endtime="20210825 23:18:11.558"/>
</kw>
<msg timestamp="20210825 23:18:11.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:11.544" endtime="20210825 23:18:11.558"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.543" endtime="20210825 23:18:11.559"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:11.566" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:11.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:11.571" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:18:11.563" endtime="20210825 23:18:11.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:11.573" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:18:11.572" endtime="20210825 23:18:11.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:11.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:11.574" endtime="20210825 23:18:11.575"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.562" endtime="20210825 23:18:11.575"/>
</kw>
<msg timestamp="20210825 23:18:11.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:11.561" endtime="20210825 23:18:11.576"/>
</kw>
<msg timestamp="20210825 23:18:11.576" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:18:11.560" endtime="20210825 23:18:11.576"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:18:11.578" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:18:11.576" endtime="20210825 23:18:11.578"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:11.584" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:11.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:11.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:18:11.582" endtime="20210825 23:18:11.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:11.601" level="INFO"/>
<status status="PASS" starttime="20210825 23:18:11.600" endtime="20210825 23:18:11.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:11.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:11.602" endtime="20210825 23:18:11.603"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.580" endtime="20210825 23:18:11.603"/>
</kw>
<msg timestamp="20210825 23:18:11.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:11.580" endtime="20210825 23:18:11.604"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.579" endtime="20210825 23:18:11.604"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.578" endtime="20210825 23:18:11.604"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.559" endtime="20210825 23:18:11.604"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.559" endtime="20210825 23:18:11.605"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:11.612" level="INFO">Running command 'ozone sh key list 58013-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:19.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:19.722" level="INFO">${output} = {
  "volumeName" : "58013-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-25T23:07:54.089Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210825 23:18:11.606" endtime="20210825 23:18:19.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:19.724" level="INFO">{
  "volumeName" : "58013-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-25T23:07:54.089Z",
  "modificationTime" : "2021-08-25T23:10:57.920Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210825 23:18:19.723" endtime="20210825 23:18:19.724"/>
</kw>
<msg timestamp="20210825 23:18:19.724" level="INFO">${result} = {
  "volumeName" : "58013-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-08-25T23:07:54.089Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210825 23:18:11.605" endtime="20210825 23:18:19.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:18:19.725" endtime="20210825 23:18:19.725"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.542" endtime="20210825 23:18:19.725"/>
</kw>
<status status="PASS" starttime="20210825 23:18:11.541" endtime="20210825 23:18:19.726"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210825 23:18:11.492" endtime="20210825 23:18:19.726"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:19.734" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:19.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:19.739" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:18:19.732" endtime="20210825 23:18:19.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:19.741" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:18:19.740" endtime="20210825 23:18:19.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:19.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:19.741" endtime="20210825 23:18:19.742"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.731" endtime="20210825 23:18:19.742"/>
</kw>
<msg timestamp="20210825 23:18:19.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:19.730" endtime="20210825 23:18:19.743"/>
</kw>
<msg timestamp="20210825 23:18:19.744" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:18:19.729" endtime="20210825 23:18:19.744"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:18:19.745" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:18:19.744" endtime="20210825 23:18:19.745"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:19.750" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:19.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:19.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:18:19.748" endtime="20210825 23:18:19.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:19.759" level="INFO"/>
<status status="PASS" starttime="20210825 23:18:19.758" endtime="20210825 23:18:19.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:19.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:19.759" endtime="20210825 23:18:19.761"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.747" endtime="20210825 23:18:19.762"/>
</kw>
<msg timestamp="20210825 23:18:19.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:19.747" endtime="20210825 23:18:19.762"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.746" endtime="20210825 23:18:19.763"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.745" endtime="20210825 23:18:19.763"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.729" endtime="20210825 23:18:19.763"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.728" endtime="20210825 23:18:19.763"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:19.771" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:19.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:19.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:18:19.767" endtime="20210825 23:18:19.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:19.776" level="INFO"/>
<status status="PASS" starttime="20210825 23:18:19.775" endtime="20210825 23:18:19.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:19.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:19.777" endtime="20210825 23:18:19.777"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.766" endtime="20210825 23:18:19.778"/>
</kw>
<msg timestamp="20210825 23:18:19.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:19.766" endtime="20210825 23:18:19.782"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.765" endtime="20210825 23:18:19.783"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:19.789" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:19.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:19.793" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:18:19.786" endtime="20210825 23:18:19.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:19.795" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:18:19.794" endtime="20210825 23:18:19.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:19.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:19.795" endtime="20210825 23:18:19.796"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.785" endtime="20210825 23:18:19.796"/>
</kw>
<msg timestamp="20210825 23:18:19.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:19.785" endtime="20210825 23:18:19.796"/>
</kw>
<msg timestamp="20210825 23:18:19.797" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:18:19.784" endtime="20210825 23:18:19.797"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:18:19.797" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:18:19.797" endtime="20210825 23:18:19.798"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:19.804" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:19.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:19.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:18:19.801" endtime="20210825 23:18:19.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:19.815" level="INFO"/>
<status status="PASS" starttime="20210825 23:18:19.814" endtime="20210825 23:18:19.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:19.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:19.815" endtime="20210825 23:18:19.816"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.799" endtime="20210825 23:18:19.817"/>
</kw>
<msg timestamp="20210825 23:18:19.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:19.799" endtime="20210825 23:18:19.817"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.798" endtime="20210825 23:18:19.817"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.798" endtime="20210825 23:18:19.817"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.783" endtime="20210825 23:18:19.817"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.783" endtime="20210825 23:18:19.817"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:19.820" level="INFO">Running command 'ozone sh key list 58013-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:27.197" level="INFO">${rc} = 255</msg>
<msg timestamp="20210825 23:18:27.197" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 58013-target unreadable-link null</msg>
<status status="PASS" starttime="20210825 23:18:19.818" endtime="20210825 23:18:27.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:27.198" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 58013-target unreadable-link null</msg>
<status status="PASS" starttime="20210825 23:18:27.197" endtime="20210825 23:18:27.198"/>
</kw>
<msg timestamp="20210825 23:18:27.199" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 58013-target unreadable-link null</msg>
<status status="PASS" starttime="20210825 23:18:19.818" endtime="20210825 23:18:27.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:18:27.199" endtime="20210825 23:18:27.199"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.764" endtime="20210825 23:18:27.200"/>
</kw>
<status status="PASS" starttime="20210825 23:18:19.764" endtime="20210825 23:18:27.200"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210825 23:18:19.727" endtime="20210825 23:18:27.200"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:27.208" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:27.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:27.213" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:18:27.206" endtime="20210825 23:18:27.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:27.216" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:18:27.215" endtime="20210825 23:18:27.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:27.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:27.216" endtime="20210825 23:18:27.217"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.205" endtime="20210825 23:18:27.218"/>
</kw>
<msg timestamp="20210825 23:18:27.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:27.204" endtime="20210825 23:18:27.218"/>
</kw>
<msg timestamp="20210825 23:18:27.219" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:18:27.203" endtime="20210825 23:18:27.219"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:18:27.220" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:18:27.219" endtime="20210825 23:18:27.220"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:27.227" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:27.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:27.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:18:27.224" endtime="20210825 23:18:27.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:27.240" level="INFO"/>
<status status="PASS" starttime="20210825 23:18:27.238" endtime="20210825 23:18:27.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:27.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:27.240" endtime="20210825 23:18:27.241"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.223" endtime="20210825 23:18:27.241"/>
</kw>
<msg timestamp="20210825 23:18:27.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:27.223" endtime="20210825 23:18:27.241"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.222" endtime="20210825 23:18:27.242"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.220" endtime="20210825 23:18:27.242"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.203" endtime="20210825 23:18:27.242"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.202" endtime="20210825 23:18:27.242"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:27.249" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:27.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:27.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:18:27.246" endtime="20210825 23:18:27.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:27.256" level="INFO"/>
<status status="PASS" starttime="20210825 23:18:27.255" endtime="20210825 23:18:27.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:27.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:27.256" endtime="20210825 23:18:27.257"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.245" endtime="20210825 23:18:27.258"/>
</kw>
<msg timestamp="20210825 23:18:27.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:27.245" endtime="20210825 23:18:27.258"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.244" endtime="20210825 23:18:27.258"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:27.268" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:27.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:27.271" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:18:27.264" endtime="20210825 23:18:27.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:27.272" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:18:27.271" endtime="20210825 23:18:27.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:27.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:27.272" endtime="20210825 23:18:27.273"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.263" endtime="20210825 23:18:27.273"/>
</kw>
<msg timestamp="20210825 23:18:27.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:27.263" endtime="20210825 23:18:27.274"/>
</kw>
<msg timestamp="20210825 23:18:27.274" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:18:27.261" endtime="20210825 23:18:27.274"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:18:27.275" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:18:27.274" endtime="20210825 23:18:27.275"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:27.280" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:27.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:27.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:18:27.278" endtime="20210825 23:18:27.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:27.289" level="INFO"/>
<status status="PASS" starttime="20210825 23:18:27.289" endtime="20210825 23:18:27.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:27.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:27.290" endtime="20210825 23:18:27.291"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.277" endtime="20210825 23:18:27.291"/>
</kw>
<msg timestamp="20210825 23:18:27.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:27.277" endtime="20210825 23:18:27.291"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.276" endtime="20210825 23:18:27.292"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.275" endtime="20210825 23:18:27.292"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.259" endtime="20210825 23:18:27.292"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.259" endtime="20210825 23:18:27.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:27.296" level="INFO">Running command 'ozone sh bucket info 58013-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:35.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:35.407" level="INFO">${output} = {
  "volumeName" : "58013-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-25T23:11:24.079Z...</msg>
<status status="PASS" starttime="20210825 23:18:27.294" endtime="20210825 23:18:35.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:35.409" level="INFO">{
  "volumeName" : "58013-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-25T23:11:24.079Z",
  "modificationTime" : "2021-08-25T23:12:01.830Z"
}</msg>
<status status="PASS" starttime="20210825 23:18:35.408" endtime="20210825 23:18:35.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:35.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:35.410" endtime="20210825 23:18:35.411"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.293" endtime="20210825 23:18:35.412"/>
</kw>
<msg timestamp="20210825 23:18:35.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:27.293" endtime="20210825 23:18:35.412"/>
</kw>
<msg timestamp="20210825 23:18:35.413" level="INFO">${result} = {
  "volumeName" : "58013-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-08-25T23:11:24.079Z...</msg>
<status status="PASS" starttime="20210825 23:18:27.292" endtime="20210825 23:18:35.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:18:35.413" endtime="20210825 23:18:35.414"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:18:35.414" endtime="20210825 23:18:35.415"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:35.420" level="INFO">Running command 'ozone sh key list 58013-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:43.041" level="INFO">${rc} = 255</msg>
<msg timestamp="20210825 23:18:43.041" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 58013-source unreadable-bucket </msg>
<status status="PASS" starttime="20210825 23:18:35.417" endtime="20210825 23:18:43.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:43.044" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 58013-source unreadable-bucket </msg>
<status status="PASS" starttime="20210825 23:18:43.042" endtime="20210825 23:18:43.044"/>
</kw>
<msg timestamp="20210825 23:18:43.045" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 58013-source unreadable-bucket </msg>
<status status="PASS" starttime="20210825 23:18:35.416" endtime="20210825 23:18:43.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:18:43.045" endtime="20210825 23:18:43.046"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.243" endtime="20210825 23:18:43.046"/>
</kw>
<status status="PASS" starttime="20210825 23:18:27.243" endtime="20210825 23:18:43.046"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210825 23:18:27.201" endtime="20210825 23:18:43.046"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:43.062" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:43.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:43.067" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:18:43.059" endtime="20210825 23:18:43.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:43.068" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:18:43.067" endtime="20210825 23:18:43.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:43.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:43.068" endtime="20210825 23:18:43.069"/>
</kw>
<status status="PASS" starttime="20210825 23:18:43.058" endtime="20210825 23:18:43.069"/>
</kw>
<msg timestamp="20210825 23:18:43.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:43.056" endtime="20210825 23:18:43.069"/>
</kw>
<msg timestamp="20210825 23:18:43.070" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:18:43.055" endtime="20210825 23:18:43.070"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:18:43.071" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:18:43.070" endtime="20210825 23:18:43.071"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:43.077" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:43.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:43.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:18:43.075" endtime="20210825 23:18:43.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:43.090" level="INFO"/>
<status status="PASS" starttime="20210825 23:18:43.089" endtime="20210825 23:18:43.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:43.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:43.091" endtime="20210825 23:18:43.091"/>
</kw>
<status status="PASS" starttime="20210825 23:18:43.074" endtime="20210825 23:18:43.092"/>
</kw>
<msg timestamp="20210825 23:18:43.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:43.073" endtime="20210825 23:18:43.092"/>
</kw>
<status status="PASS" starttime="20210825 23:18:43.072" endtime="20210825 23:18:43.092"/>
</kw>
<status status="PASS" starttime="20210825 23:18:43.071" endtime="20210825 23:18:43.092"/>
</kw>
<status status="PASS" starttime="20210825 23:18:43.054" endtime="20210825 23:18:43.092"/>
</kw>
<status status="PASS" starttime="20210825 23:18:43.053" endtime="20210825 23:18:43.093"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:43.097" level="INFO">Running command 'ozone sh bucket link 58013-target/loop1 58013-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:51.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:51.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:18:43.095" endtime="20210825 23:18:51.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:51.842" level="INFO"/>
<status status="PASS" starttime="20210825 23:18:51.841" endtime="20210825 23:18:51.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:51.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:51.843" endtime="20210825 23:18:51.843"/>
</kw>
<status status="PASS" starttime="20210825 23:18:43.094" endtime="20210825 23:18:51.844"/>
</kw>
<msg timestamp="20210825 23:18:51.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:43.093" endtime="20210825 23:18:51.844"/>
</kw>
<status status="PASS" starttime="20210825 23:18:43.093" endtime="20210825 23:18:51.844"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:51.849" level="INFO">Running command 'ozone sh bucket link 58013-target/loop2 58013-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:18:59.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:18:59.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:18:51.846" endtime="20210825 23:18:59.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:18:59.274" level="INFO"/>
<status status="PASS" starttime="20210825 23:18:59.273" endtime="20210825 23:18:59.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:18:59.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:18:59.275" endtime="20210825 23:18:59.276"/>
</kw>
<status status="PASS" starttime="20210825 23:18:51.846" endtime="20210825 23:18:59.276"/>
</kw>
<msg timestamp="20210825 23:18:59.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:51.845" endtime="20210825 23:18:59.277"/>
</kw>
<status status="PASS" starttime="20210825 23:18:51.844" endtime="20210825 23:18:59.277"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:18:59.283" level="INFO">Running command 'ozone sh bucket link 58013-target/loop3 58013-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:19:07.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:19:07.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:18:59.280" endtime="20210825 23:19:07.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:19:07.269" level="INFO"/>
<status status="PASS" starttime="20210825 23:19:07.268" endtime="20210825 23:19:07.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:19:07.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:19:07.269" endtime="20210825 23:19:07.270"/>
</kw>
<status status="PASS" starttime="20210825 23:18:59.279" endtime="20210825 23:19:07.271"/>
</kw>
<msg timestamp="20210825 23:19:07.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:18:59.279" endtime="20210825 23:19:07.271"/>
</kw>
<status status="PASS" starttime="20210825 23:18:59.277" endtime="20210825 23:19:07.272"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:19:07.278" level="INFO">Running command 'ozone sh key list 58013-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:19:13.192" level="INFO">${rc} = 255</msg>
<msg timestamp="20210825 23:19:13.192" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210825 23:19:07.275" endtime="20210825 23:19:13.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:19:13.193" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210825 23:19:13.193" endtime="20210825 23:19:13.194"/>
</kw>
<msg timestamp="20210825 23:19:13.194" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210825 23:19:07.272" endtime="20210825 23:19:13.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:19:13.194" endtime="20210825 23:19:13.195"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210825 23:18:43.051" endtime="20210825 23:19:13.195"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:19:13.202" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:19:13.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:19:13.206" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:19:13.200" endtime="20210825 23:19:13.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:19:13.207" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:19:13.207" endtime="20210825 23:19:13.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:19:13.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:19:13.208" endtime="20210825 23:19:13.208"/>
</kw>
<status status="PASS" starttime="20210825 23:19:13.199" endtime="20210825 23:19:13.209"/>
</kw>
<msg timestamp="20210825 23:19:13.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:19:13.199" endtime="20210825 23:19:13.209"/>
</kw>
<msg timestamp="20210825 23:19:13.209" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:19:13.198" endtime="20210825 23:19:13.209"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:19:13.210" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:19:13.210" endtime="20210825 23:19:13.210"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:19:13.215" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:19:13.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:19:13.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:19:13.213" endtime="20210825 23:19:13.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:19:13.231" level="INFO"/>
<status status="PASS" starttime="20210825 23:19:13.231" endtime="20210825 23:19:13.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:19:13.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:19:13.232" endtime="20210825 23:19:13.232"/>
</kw>
<status status="PASS" starttime="20210825 23:19:13.212" endtime="20210825 23:19:13.233"/>
</kw>
<msg timestamp="20210825 23:19:13.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:19:13.212" endtime="20210825 23:19:13.233"/>
</kw>
<status status="PASS" starttime="20210825 23:19:13.211" endtime="20210825 23:19:13.233"/>
</kw>
<status status="PASS" starttime="20210825 23:19:13.211" endtime="20210825 23:19:13.233"/>
</kw>
<status status="PASS" starttime="20210825 23:19:13.198" endtime="20210825 23:19:13.234"/>
</kw>
<status status="PASS" starttime="20210825 23:19:13.197" endtime="20210825 23:19:13.234"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:19:13.239" level="INFO">Running command 'ozone sh bucket link 58013-source/bucket1 58013-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:19:21.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:19:21.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:19:13.236" endtime="20210825 23:19:21.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:19:21.503" level="INFO"/>
<status status="PASS" starttime="20210825 23:19:21.502" endtime="20210825 23:19:21.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:19:21.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:19:21.503" endtime="20210825 23:19:21.504"/>
</kw>
<status status="PASS" starttime="20210825 23:19:13.235" endtime="20210825 23:19:21.504"/>
</kw>
<msg timestamp="20210825 23:19:21.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:19:13.235" endtime="20210825 23:19:21.505"/>
</kw>
<status status="PASS" starttime="20210825 23:19:13.234" endtime="20210825 23:19:21.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:19:21.510" level="INFO">Running command 'ozone sh key put 58013-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:21:13.197" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210825 23:19:21.507" endtime="20210825 23:21:13.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210825 23:21:13.197" endtime="20210825 23:21:13.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210825 23:21:13.198" endtime="20210825 23:21:13.198"/>
</kw>
<status status="FAIL" starttime="20210825 23:19:21.507" endtime="20210825 23:21:13.198"/>
</kw>
<msg timestamp="20210825 23:21:13.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210825 23:19:21.506" endtime="20210825 23:21:13.198"/>
</kw>
<status status="FAIL" starttime="20210825 23:19:21.505" endtime="20210825 23:21:13.199"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210825 23:21:13.199" endtime="20210825 23:21:13.199"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210825 23:19:13.196" endtime="20210825 23:21:13.200">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:21:13.209" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:21:13.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:21:13.212" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:21:13.205" endtime="20210825 23:21:13.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:21:13.213" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:21:13.212" endtime="20210825 23:21:13.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:21:13.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:21:13.213" endtime="20210825 23:21:13.214"/>
</kw>
<status status="PASS" starttime="20210825 23:21:13.204" endtime="20210825 23:21:13.215"/>
</kw>
<msg timestamp="20210825 23:21:13.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:21:13.204" endtime="20210825 23:21:13.215"/>
</kw>
<msg timestamp="20210825 23:21:13.215" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:21:13.203" endtime="20210825 23:21:13.215"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:21:13.216" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:21:13.215" endtime="20210825 23:21:13.216"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:21:13.222" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:21:13.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:21:13.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:21:13.219" endtime="20210825 23:21:13.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:21:13.232" level="INFO"/>
<status status="PASS" starttime="20210825 23:21:13.231" endtime="20210825 23:21:13.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:21:13.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:21:13.233" endtime="20210825 23:21:13.234"/>
</kw>
<status status="PASS" starttime="20210825 23:21:13.218" endtime="20210825 23:21:13.234"/>
</kw>
<msg timestamp="20210825 23:21:13.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:21:13.217" endtime="20210825 23:21:13.235"/>
</kw>
<status status="PASS" starttime="20210825 23:21:13.217" endtime="20210825 23:21:13.235"/>
</kw>
<status status="PASS" starttime="20210825 23:21:13.216" endtime="20210825 23:21:13.235"/>
</kw>
<status status="PASS" starttime="20210825 23:21:13.203" endtime="20210825 23:21:13.235"/>
</kw>
<status status="PASS" starttime="20210825 23:21:13.202" endtime="20210825 23:21:13.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:21:13.240" level="INFO">Running command 'ozone sh bucket delete 58013-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:21:21.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:21:21.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:21:13.237" endtime="20210825 23:21:21.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:21:21.114" level="INFO"/>
<status status="PASS" starttime="20210825 23:21:21.112" endtime="20210825 23:21:21.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:21:21.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:21:21.115" endtime="20210825 23:21:21.116"/>
</kw>
<status status="PASS" starttime="20210825 23:21:13.237" endtime="20210825 23:21:21.117"/>
</kw>
<msg timestamp="20210825 23:21:21.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:21:13.236" endtime="20210825 23:21:21.117"/>
</kw>
<status status="PASS" starttime="20210825 23:21:13.236" endtime="20210825 23:21:21.118"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:21:21.125" level="INFO">Running command 'ozone sh bucket list 58013-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:21:29.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:21:29.457" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T...</msg>
<status status="PASS" starttime="20210825 23:21:21.122" endtime="20210825 23:21:29.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:21:29.459" level="INFO">{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:18:05.147Z",
  "modificationTime" : "2021-08-25T23:18:05.147Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:12:09.162Z",
  "modificationTime" : "2021-08-25T23:12:09.162Z",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:11:24.079Z",
  "modificationTime" : "2021-08-25T23:12:01.830Z",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:17:49.734Z",
  "modificationTime" : "2021-08-25T23:17:49.734Z",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:19:21.367Z",
  "modificationTime" : "2021-08-25T23:19:21.367Z",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:19:07Z",
  "modificationTime" : "2021-08-25T23:19:07Z",
  "sourceVolume" : "58013-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:18:51.493Z",
  "modificationTime" : "2021-08-25T23:18:51.493Z",
  "sourceVolume" : "58013-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:18:59.189Z",
  "modificationTime" : "2021-08-25T23:18:59.189Z",
  "sourceVolume" : "58013-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:11:10.553Z",
  "modificationTime" : "2021-08-25T23:11:54.163Z",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T23:11:17.547Z",
  "modificationTime" : "2021-08-25T23:11:17.547Z",
  "sourceVolume" : "58013-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210825 23:21:29.458" endtime="20210825 23:21:29.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:21:29.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:21:29.460" endtime="20210825 23:21:29.461"/>
</kw>
<status status="PASS" starttime="20210825 23:21:21.121" endtime="20210825 23:21:29.461"/>
</kw>
<msg timestamp="20210825 23:21:29.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:21:21.120" endtime="20210825 23:21:29.462"/>
</kw>
<msg timestamp="20210825 23:21:29.462" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "58013-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-25T...</msg>
<status status="PASS" starttime="20210825 23:21:21.119" endtime="20210825 23:21:29.462"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:21:29.462" endtime="20210825 23:21:29.463"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:21:29.470" level="INFO">Running command 'ozone sh key list 58013-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:21:38.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:21:38.950" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210825 23:21:29.466" endtime="20210825 23:21:38.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:21:38.952" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210825 23:21:38.951" endtime="20210825 23:21:38.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:21:38.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:21:38.953" endtime="20210825 23:21:38.953"/>
</kw>
<status status="PASS" starttime="20210825 23:21:29.465" endtime="20210825 23:21:38.953"/>
</kw>
<msg timestamp="20210825 23:21:38.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:21:29.465" endtime="20210825 23:21:38.954"/>
</kw>
<msg timestamp="20210825 23:21:38.954" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210825 23:21:29.464" endtime="20210825 23:21:38.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:21:38.954" endtime="20210825 23:21:38.955"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210825 23:21:13.201" endtime="20210825 23:21:38.955"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210825 23:07:23.136" endtime="20210825 23:21:38.958"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210825 23:21:38.994" level="INFO">${random} = 06422</msg>
<status status="PASS" starttime="20210825 23:21:38.994" endtime="20210825 23:21:38.994"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:21:38.995" level="INFO">${prefix} = 06422</msg>
<status status="PASS" starttime="20210825 23:21:38.995" endtime="20210825 23:21:38.995"/>
</kw>
<status status="PASS" starttime="20210825 23:21:38.993" endtime="20210825 23:21:38.996"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:21:39.003" level="INFO">Running command 'ozone sh volume info /06422-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:21:47.595" level="INFO">${rc} = 255</msg>
<msg timestamp="20210825 23:21:47.596" level="INFO">${output} = VOLUME_NOT_FOUND Volume 06422-rpcbasic is not found</msg>
<status status="PASS" starttime="20210825 23:21:39.001" endtime="20210825 23:21:47.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:21:47.598" level="INFO">VOLUME_NOT_FOUND Volume 06422-rpcbasic is not found</msg>
<status status="PASS" starttime="20210825 23:21:47.597" endtime="20210825 23:21:47.599"/>
</kw>
<msg timestamp="20210825 23:21:47.599" level="INFO">${result} = VOLUME_NOT_FOUND Volume 06422-rpcbasic is not found</msg>
<status status="PASS" starttime="20210825 23:21:39.000" endtime="20210825 23:21:47.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:21:47.599" endtime="20210825 23:21:47.600"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:21:47.605" level="INFO">Running command 'ozone sh volume create /06422-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:21:55.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:21:55.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:21:47.602" endtime="20210825 23:21:55.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:21:55.727" level="INFO"/>
<status status="PASS" starttime="20210825 23:21:55.726" endtime="20210825 23:21:55.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:21:55.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:21:55.727" endtime="20210825 23:21:55.729"/>
</kw>
<status status="PASS" starttime="20210825 23:21:47.601" endtime="20210825 23:21:55.729"/>
</kw>
<msg timestamp="20210825 23:21:55.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:21:47.601" endtime="20210825 23:21:55.730"/>
</kw>
<msg timestamp="20210825 23:21:55.731" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210825 23:21:47.600" endtime="20210825 23:21:55.731"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:21:55.731" endtime="20210825 23:21:55.732"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:21:55.738" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="06422-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:22:02.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:22:02.863" level="INFO">${output} = {
  "metadata": {},
  "name": "06422-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210825 23:21:55.735" endtime="20210825 23:22:02.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:22:02.864" level="INFO">{
  "metadata": {},
  "name": "06422-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-25T23:21:55.410Z",
  "modificationTime": "2021-08-25T23:21:55.410Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210825 23:22:02.864" endtime="20210825 23:22:02.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:22:02.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:22:02.865" endtime="20210825 23:22:02.865"/>
</kw>
<status status="PASS" starttime="20210825 23:21:55.735" endtime="20210825 23:22:02.866"/>
</kw>
<msg timestamp="20210825 23:22:02.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:21:55.734" endtime="20210825 23:22:02.866"/>
</kw>
<msg timestamp="20210825 23:22:02.866" level="INFO">${result} = {
  "metadata": {},
  "name": "06422-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210825 23:21:55.732" endtime="20210825 23:22:02.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:22:02.867" endtime="20210825 23:22:02.867"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:22:02.871" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="06422-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:22:10.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:22:10.939" level="INFO">${output} = {
  "metadata": {},
  "name": "06422-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210825 23:22:02.869" endtime="20210825 23:22:10.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:22:10.943" level="INFO">{
  "metadata": {},
  "name": "06422-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-25T23:21:55.410Z",
  "modificationTime": "2021-08-25T23:21:55.410Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210825 23:22:10.941" endtime="20210825 23:22:10.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:22:10.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:22:10.943" endtime="20210825 23:22:10.945"/>
</kw>
<status status="PASS" starttime="20210825 23:22:02.869" endtime="20210825 23:22:10.946"/>
</kw>
<msg timestamp="20210825 23:22:10.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:22:02.868" endtime="20210825 23:22:10.947"/>
</kw>
<msg timestamp="20210825 23:22:10.948" level="INFO">${result} = {
  "metadata": {},
  "name": "06422-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210825 23:22:02.867" endtime="20210825 23:22:10.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:22:10.948" endtime="20210825 23:22:10.950"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:22:10.959" level="INFO">Running command 'ozone sh volume setquota /06422-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:22:17.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:22:17.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:22:10.952" endtime="20210825 23:22:17.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:22:17.334" level="INFO"/>
<status status="PASS" starttime="20210825 23:22:17.334" endtime="20210825 23:22:17.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:22:17.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:22:17.335" endtime="20210825 23:22:17.335"/>
</kw>
<status status="PASS" starttime="20210825 23:22:10.951" endtime="20210825 23:22:17.336"/>
</kw>
<msg timestamp="20210825 23:22:17.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:22:10.951" endtime="20210825 23:22:17.336"/>
</kw>
<status status="PASS" starttime="20210825 23:22:10.950" endtime="20210825 23:22:17.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:22:17.341" level="INFO">Running command 'ozone sh volume info /06422-rpcbasic | jq -r '. | select(.name=="06422-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:22:25.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:22:25.358" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:22:17.339" endtime="20210825 23:22:25.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:22:25.360" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210825 23:22:25.359" endtime="20210825 23:22:25.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:22:25.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:22:25.360" endtime="20210825 23:22:25.361"/>
</kw>
<status status="PASS" starttime="20210825 23:22:17.338" endtime="20210825 23:22:25.361"/>
</kw>
<msg timestamp="20210825 23:22:25.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:22:17.338" endtime="20210825 23:22:25.361"/>
</kw>
<msg timestamp="20210825 23:22:25.362" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:22:17.337" endtime="20210825 23:22:25.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:22:25.362" endtime="20210825 23:22:25.363"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:22:25.368" level="INFO">Running command 'ozone sh bucket create /06422-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:22:33.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:22:33.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:22:25.365" endtime="20210825 23:22:33.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:22:33.753" level="INFO"/>
<status status="PASS" starttime="20210825 23:22:33.752" endtime="20210825 23:22:33.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:22:33.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:22:33.754" endtime="20210825 23:22:33.755"/>
</kw>
<status status="PASS" starttime="20210825 23:22:25.364" endtime="20210825 23:22:33.755"/>
</kw>
<msg timestamp="20210825 23:22:33.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:22:25.364" endtime="20210825 23:22:33.756"/>
</kw>
<status status="PASS" starttime="20210825 23:22:25.363" endtime="20210825 23:22:33.756"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:22:33.764" level="INFO">Running command 'ozone sh bucket info /06422-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:22:41.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:22:41.924" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210825 23:22:33.761" endtime="20210825 23:22:41.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:22:41.928" level="INFO">DISK</msg>
<status status="PASS" starttime="20210825 23:22:41.925" endtime="20210825 23:22:41.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:22:41.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:22:41.928" endtime="20210825 23:22:41.930"/>
</kw>
<status status="PASS" starttime="20210825 23:22:33.759" endtime="20210825 23:22:41.931"/>
</kw>
<msg timestamp="20210825 23:22:41.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:22:33.759" endtime="20210825 23:22:41.931"/>
</kw>
<msg timestamp="20210825 23:22:41.933" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210825 23:22:33.757" endtime="20210825 23:22:41.933"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:22:41.933" endtime="20210825 23:22:41.935"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:22:41.944" level="INFO">Running command 'ozone sh bucket info /06422-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:22:50.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:22:50.198" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:22:41.941" endtime="20210825 23:22:50.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:22:50.199" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210825 23:22:50.198" endtime="20210825 23:22:50.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:22:50.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:22:50.200" endtime="20210825 23:22:50.200"/>
</kw>
<status status="PASS" starttime="20210825 23:22:41.939" endtime="20210825 23:22:50.201"/>
</kw>
<msg timestamp="20210825 23:22:50.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:22:41.939" endtime="20210825 23:22:50.201"/>
</kw>
<msg timestamp="20210825 23:22:50.201" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:22:41.936" endtime="20210825 23:22:50.201"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:22:50.202" endtime="20210825 23:22:50.202"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:22:50.209" level="INFO">Running command 'ozone sh bucket info /06422-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:22:58.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:22:58.282" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210825 23:22:50.207" endtime="20210825 23:22:58.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:22:58.284" level="INFO">100</msg>
<status status="PASS" starttime="20210825 23:22:58.282" endtime="20210825 23:22:58.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:22:58.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:22:58.284" endtime="20210825 23:22:58.285"/>
</kw>
<status status="PASS" starttime="20210825 23:22:50.205" endtime="20210825 23:22:58.286"/>
</kw>
<msg timestamp="20210825 23:22:58.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:22:50.204" endtime="20210825 23:22:58.286"/>
</kw>
<msg timestamp="20210825 23:22:58.286" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210825 23:22:50.203" endtime="20210825 23:22:58.286"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:22:58.287" endtime="20210825 23:22:58.288"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:22:58.296" level="INFO">Running command 'ozone sh bucket setquota /06422-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:23:05.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:23:05.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:22:58.290" endtime="20210825 23:23:05.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:23:05.867" level="INFO"/>
<status status="PASS" starttime="20210825 23:23:05.866" endtime="20210825 23:23:05.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:23:05.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:23:05.867" endtime="20210825 23:23:05.868"/>
</kw>
<status status="PASS" starttime="20210825 23:22:58.289" endtime="20210825 23:23:05.868"/>
</kw>
<msg timestamp="20210825 23:23:05.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:22:58.289" endtime="20210825 23:23:05.869"/>
</kw>
<status status="PASS" starttime="20210825 23:22:58.288" endtime="20210825 23:23:05.869"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:23:05.880" level="INFO">Running command 'ozone sh bucket info /06422-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:23:12.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:23:12.965" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210825 23:23:05.873" endtime="20210825 23:23:12.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:23:12.966" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210825 23:23:12.965" endtime="20210825 23:23:12.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:23:12.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:23:12.966" endtime="20210825 23:23:12.967"/>
</kw>
<status status="PASS" starttime="20210825 23:23:05.872" endtime="20210825 23:23:12.968"/>
</kw>
<msg timestamp="20210825 23:23:12.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:23:05.870" endtime="20210825 23:23:12.968"/>
</kw>
<msg timestamp="20210825 23:23:12.968" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210825 23:23:05.869" endtime="20210825 23:23:12.968"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:23:12.968" endtime="20210825 23:23:12.969"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:23:12.974" level="INFO">Running command 'ozone sh bucket info /06422-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:23:19.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:23:19.838" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210825 23:23:12.972" endtime="20210825 23:23:19.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:23:19.839" level="INFO">1000</msg>
<status status="PASS" starttime="20210825 23:23:19.839" endtime="20210825 23:23:19.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:23:19.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:23:19.840" endtime="20210825 23:23:19.840"/>
</kw>
<status status="PASS" starttime="20210825 23:23:12.971" endtime="20210825 23:23:19.841"/>
</kw>
<msg timestamp="20210825 23:23:19.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:23:12.971" endtime="20210825 23:23:19.841"/>
</kw>
<msg timestamp="20210825 23:23:19.841" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210825 23:23:12.970" endtime="20210825 23:23:19.841"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:23:19.842" endtime="20210825 23:23:19.842"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:23:19.847" level="INFO">Running command 'ozone sh bucket list /06422-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:23:26.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:23:26.345" level="INFO">${output} = 06422-rpcbasic</msg>
<status status="PASS" starttime="20210825 23:23:19.845" endtime="20210825 23:23:26.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:23:26.348" level="INFO">06422-rpcbasic</msg>
<status status="PASS" starttime="20210825 23:23:26.346" endtime="20210825 23:23:26.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:23:26.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:23:26.348" endtime="20210825 23:23:26.349"/>
</kw>
<status status="PASS" starttime="20210825 23:23:19.844" endtime="20210825 23:23:26.350"/>
</kw>
<msg timestamp="20210825 23:23:26.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:23:19.844" endtime="20210825 23:23:26.351"/>
</kw>
<msg timestamp="20210825 23:23:26.351" level="INFO">${result} = 06422-rpcbasic</msg>
<status status="PASS" starttime="20210825 23:23:19.842" endtime="20210825 23:23:26.351"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:23:26.352" endtime="20210825 23:23:26.353"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:23:26.363" level="INFO">Running command 'ozone sh key put /06422-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:26:38.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:26:38.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:23:26.360" endtime="20210825 23:26:38.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:26:38.429" level="INFO"/>
<status status="PASS" starttime="20210825 23:26:38.427" endtime="20210825 23:26:38.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:26:38.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:26:38.429" endtime="20210825 23:26:38.431"/>
</kw>
<status status="PASS" starttime="20210825 23:23:26.358" endtime="20210825 23:26:38.431"/>
</kw>
<msg timestamp="20210825 23:26:38.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:23:26.357" endtime="20210825 23:26:38.432"/>
</kw>
<status status="PASS" starttime="20210825 23:23:26.356" endtime="20210825 23:26:38.433"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:26:38.439" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:26:38.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:26:38.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:26:38.436" endtime="20210825 23:26:38.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:26:38.446" level="INFO"/>
<status status="PASS" starttime="20210825 23:26:38.445" endtime="20210825 23:26:38.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:26:38.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:26:38.447" endtime="20210825 23:26:38.451"/>
</kw>
<status status="PASS" starttime="20210825 23:26:38.435" endtime="20210825 23:26:38.451"/>
</kw>
<msg timestamp="20210825 23:26:38.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:26:38.434" endtime="20210825 23:26:38.451"/>
</kw>
<status status="PASS" starttime="20210825 23:26:38.433" endtime="20210825 23:26:38.451"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:26:38.456" level="INFO">Running command 'ozone sh key get /06422-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:26:38.997" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210825 23:26:38.454" endtime="20210825 23:26:38.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210825 23:26:38.997" endtime="20210825 23:26:38.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210825 23:26:38.998" endtime="20210825 23:26:38.998"/>
</kw>
<status status="FAIL" starttime="20210825 23:26:38.453" endtime="20210825 23:26:38.999"/>
</kw>
<msg timestamp="20210825 23:26:38.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210825 23:26:38.453" endtime="20210825 23:26:38.999"/>
</kw>
<status status="FAIL" starttime="20210825 23:26:38.452" endtime="20210825 23:26:38.999"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:26:38.999" endtime="20210825 23:26:38.999"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.000" endtime="20210825 23:26:39.000"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.000" endtime="20210825 23:26:39.000"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.000" endtime="20210825 23:26:39.000"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.000" endtime="20210825 23:26:39.000"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.001" endtime="20210825 23:26:39.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:26:39.001" endtime="20210825 23:26:39.001"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.001" endtime="20210825 23:26:39.001"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.001" endtime="20210825 23:26:39.001"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.002" endtime="20210825 23:26:39.002"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.002" endtime="20210825 23:26:39.002"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.002" endtime="20210825 23:26:39.002"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.002" endtime="20210825 23:26:39.003"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.003" endtime="20210825 23:26:39.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:26:39.003" endtime="20210825 23:26:39.003"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.003" endtime="20210825 23:26:39.003"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:26:39.003" endtime="20210825 23:26:39.004"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.004" endtime="20210825 23:26:39.004"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:26:39.009" endtime="20210825 23:26:39.010"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.010" endtime="20210825 23:26:39.010"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:26:39.010" endtime="20210825 23:26:39.011"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.011" endtime="20210825 23:26:39.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.011" endtime="20210825 23:26:39.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:26:39.011" endtime="20210825 23:26:39.011"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.012" endtime="20210825 23:26:39.012"/>
</kw>
<status status="FAIL" starttime="20210825 23:23:26.354" endtime="20210825 23:26:39.012"/>
</kw>
<status status="FAIL" starttime="20210825 23:23:26.353" endtime="20210825 23:26:39.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.012" endtime="20210825 23:26:39.012"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.012" endtime="20210825 23:26:39.013"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:26:39.013" endtime="20210825 23:26:39.013"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.013" endtime="20210825 23:26:39.013"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.013" endtime="20210825 23:26:39.013"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:26:39.013" endtime="20210825 23:26:39.013"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.014" endtime="20210825 23:26:39.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.014" endtime="20210825 23:26:39.014"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:26:39.018" endtime="20210825 23:26:39.018"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.019" endtime="20210825 23:26:39.019"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.020" endtime="20210825 23:26:39.021"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:26:39.021" endtime="20210825 23:26:39.022"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.023" endtime="20210825 23:26:39.023"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.023" endtime="20210825 23:26:39.023"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.024" endtime="20210825 23:26:39.024"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.026" endtime="20210825 23:26:39.027"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:26:39.027" endtime="20210825 23:26:39.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.027" endtime="20210825 23:26:39.027"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:26:39.027" endtime="20210825 23:26:39.027"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.027" endtime="20210825 23:26:39.028"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.028" endtime="20210825 23:26:39.028"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:26:39.028" endtime="20210825 23:26:39.028"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.028" endtime="20210825 23:26:39.028"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:26:39.028" endtime="20210825 23:26:39.028"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.029" endtime="20210825 23:26:39.029"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:26:39.029" endtime="20210825 23:26:39.029"/>
</kw>
<status status="FAIL" starttime="20210825 23:21:38.997" endtime="20210825 23:26:39.029"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210825 23:21:38.996" endtime="20210825 23:26:39.034">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210825 23:21:38.965" endtime="20210825 23:26:39.039"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210825 23:26:39.089" level="INFO">${random} = 19504</msg>
<status status="PASS" starttime="20210825 23:26:39.088" endtime="20210825 23:26:39.089"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:26:39.090" level="INFO">${prefix} = 19504</msg>
<status status="PASS" starttime="20210825 23:26:39.089" endtime="20210825 23:26:39.090"/>
</kw>
<status status="PASS" starttime="20210825 23:26:39.087" endtime="20210825 23:26:39.090"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:26:39.099" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:26:39.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:26:39.116" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:26:39.097" endtime="20210825 23:26:39.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:26:39.118" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:26:39.117" endtime="20210825 23:26:39.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:26:39.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:26:39.118" endtime="20210825 23:26:39.119"/>
</kw>
<status status="PASS" starttime="20210825 23:26:39.096" endtime="20210825 23:26:39.120"/>
</kw>
<msg timestamp="20210825 23:26:39.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:26:39.095" endtime="20210825 23:26:39.120"/>
</kw>
<msg timestamp="20210825 23:26:39.120" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:26:39.095" endtime="20210825 23:26:39.120"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:26:39.126" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:26:39.121" endtime="20210825 23:26:39.127"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:26:39.147" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:26:39.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:26:39.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:26:39.129" endtime="20210825 23:26:39.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:26:39.222" level="INFO"/>
<status status="PASS" starttime="20210825 23:26:39.221" endtime="20210825 23:26:39.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:26:39.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:26:39.222" endtime="20210825 23:26:39.223"/>
</kw>
<status status="PASS" starttime="20210825 23:26:39.129" endtime="20210825 23:26:39.223"/>
</kw>
<msg timestamp="20210825 23:26:39.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:26:39.128" endtime="20210825 23:26:39.224"/>
</kw>
<status status="PASS" starttime="20210825 23:26:39.127" endtime="20210825 23:26:39.224"/>
</kw>
<status status="PASS" starttime="20210825 23:26:39.127" endtime="20210825 23:26:39.224"/>
</kw>
<status status="PASS" starttime="20210825 23:26:39.094" endtime="20210825 23:26:39.224"/>
</kw>
<status status="PASS" starttime="20210825 23:26:39.092" endtime="20210825 23:26:39.224"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:26:39.235" level="INFO">Running command 'ozone sh volume info o3://om:9862/19504-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:26:54.099" level="INFO">${rc} = 255</msg>
<msg timestamp="20210825 23:26:54.099" level="INFO">${output} = VOLUME_NOT_FOUND Volume 19504-rpcwoport is not found</msg>
<status status="PASS" starttime="20210825 23:26:39.231" endtime="20210825 23:26:54.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:26:54.101" level="INFO">VOLUME_NOT_FOUND Volume 19504-rpcwoport is not found</msg>
<status status="PASS" starttime="20210825 23:26:54.100" endtime="20210825 23:26:54.101"/>
</kw>
<msg timestamp="20210825 23:26:54.101" level="INFO">${result} = VOLUME_NOT_FOUND Volume 19504-rpcwoport is not found</msg>
<status status="PASS" starttime="20210825 23:26:39.225" endtime="20210825 23:26:54.101"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:26:54.102" endtime="20210825 23:26:54.102"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:26:54.116" level="INFO">Running command 'ozone sh volume create o3://om:9862/19504-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:27:03.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:27:03.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:26:54.104" endtime="20210825 23:27:03.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:27:03.069" level="INFO"/>
<status status="PASS" starttime="20210825 23:27:03.068" endtime="20210825 23:27:03.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:27:03.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:27:03.069" endtime="20210825 23:27:03.070"/>
</kw>
<status status="PASS" starttime="20210825 23:26:54.104" endtime="20210825 23:27:03.071"/>
</kw>
<msg timestamp="20210825 23:27:03.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:26:54.103" endtime="20210825 23:27:03.071"/>
</kw>
<msg timestamp="20210825 23:27:03.071" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210825 23:26:54.102" endtime="20210825 23:27:03.072"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:27:03.072" endtime="20210825 23:27:03.072"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:27:03.079" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="19504-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:27:10.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:27:10.722" level="INFO">${output} = {
  "metadata": {},
  "name": "19504-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210825 23:27:03.076" endtime="20210825 23:27:10.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:27:10.724" level="INFO">{
  "metadata": {},
  "name": "19504-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-25T23:27:02.990Z",
  "modificationTime": "2021-08-25T23:27:02.990Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210825 23:27:10.723" endtime="20210825 23:27:10.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:27:10.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:27:10.724" endtime="20210825 23:27:10.725"/>
</kw>
<status status="PASS" starttime="20210825 23:27:03.075" endtime="20210825 23:27:10.726"/>
</kw>
<msg timestamp="20210825 23:27:10.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:27:03.075" endtime="20210825 23:27:10.727"/>
</kw>
<msg timestamp="20210825 23:27:10.727" level="INFO">${result} = {
  "metadata": {},
  "name": "19504-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210825 23:27:03.073" endtime="20210825 23:27:10.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:27:10.728" endtime="20210825 23:27:10.729"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:27:10.736" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="19504-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:27:19.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:27:19.373" level="INFO">${output} = {
  "metadata": {},
  "name": "19504-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210825 23:27:10.733" endtime="20210825 23:27:19.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:27:19.375" level="INFO">{
  "metadata": {},
  "name": "19504-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-25T23:27:02.990Z",
  "modificationTime": "2021-08-25T23:27:02.990Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210825 23:27:19.374" endtime="20210825 23:27:19.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:27:19.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:27:19.376" endtime="20210825 23:27:19.377"/>
</kw>
<status status="PASS" starttime="20210825 23:27:10.731" endtime="20210825 23:27:19.377"/>
</kw>
<msg timestamp="20210825 23:27:19.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:27:10.731" endtime="20210825 23:27:19.378"/>
</kw>
<msg timestamp="20210825 23:27:19.378" level="INFO">${result} = {
  "metadata": {},
  "name": "19504-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210825 23:27:10.729" endtime="20210825 23:27:19.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:27:19.378" endtime="20210825 23:27:19.379"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:27:19.385" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/19504-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:27:26.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:27:26.749" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:27:19.382" endtime="20210825 23:27:26.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:27:26.752" level="INFO"/>
<status status="PASS" starttime="20210825 23:27:26.751" endtime="20210825 23:27:26.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:27:26.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:27:26.753" endtime="20210825 23:27:26.754"/>
</kw>
<status status="PASS" starttime="20210825 23:27:19.382" endtime="20210825 23:27:26.754"/>
</kw>
<msg timestamp="20210825 23:27:26.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:27:19.381" endtime="20210825 23:27:26.755"/>
</kw>
<status status="PASS" starttime="20210825 23:27:19.380" endtime="20210825 23:27:26.755"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:27:26.762" level="INFO">Running command 'ozone sh volume info o3://om:9862/19504-rpcwoport | jq -r '. | select(.name=="19504-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:27:34.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:27:34.563" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:27:26.757" endtime="20210825 23:27:34.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:27:34.566" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210825 23:27:34.564" endtime="20210825 23:27:34.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:27:34.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:27:34.566" endtime="20210825 23:27:34.567"/>
</kw>
<status status="PASS" starttime="20210825 23:27:26.757" endtime="20210825 23:27:34.568"/>
</kw>
<msg timestamp="20210825 23:27:34.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:27:26.756" endtime="20210825 23:27:34.568"/>
</kw>
<msg timestamp="20210825 23:27:34.569" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:27:26.755" endtime="20210825 23:27:34.569"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:27:34.569" endtime="20210825 23:27:34.570"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:27:34.576" level="INFO">Running command 'ozone sh bucket create o3://om:9862/19504-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:27:41.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:27:41.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:27:34.573" endtime="20210825 23:27:41.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:27:41.847" level="INFO"/>
<status status="PASS" starttime="20210825 23:27:41.846" endtime="20210825 23:27:41.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:27:41.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:27:41.848" endtime="20210825 23:27:41.849"/>
</kw>
<status status="PASS" starttime="20210825 23:27:34.572" endtime="20210825 23:27:41.850"/>
</kw>
<msg timestamp="20210825 23:27:41.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:27:34.571" endtime="20210825 23:27:41.850"/>
</kw>
<status status="PASS" starttime="20210825 23:27:34.571" endtime="20210825 23:27:41.850"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:27:41.856" level="INFO">Running command 'ozone sh bucket info o3://om:9862/19504-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:27:50.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:27:50.518" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210825 23:27:41.853" endtime="20210825 23:27:50.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:27:50.520" level="INFO">DISK</msg>
<status status="PASS" starttime="20210825 23:27:50.519" endtime="20210825 23:27:50.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:27:50.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:27:50.521" endtime="20210825 23:27:50.522"/>
</kw>
<status status="PASS" starttime="20210825 23:27:41.852" endtime="20210825 23:27:50.523"/>
</kw>
<msg timestamp="20210825 23:27:50.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:27:41.852" endtime="20210825 23:27:50.524"/>
</kw>
<msg timestamp="20210825 23:27:50.524" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210825 23:27:41.851" endtime="20210825 23:27:50.525"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:27:50.525" endtime="20210825 23:27:50.527"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:27:50.534" level="INFO">Running command 'ozone sh bucket info o3://om:9862/19504-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:27:58.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:27:58.164" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:27:50.531" endtime="20210825 23:27:58.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:27:58.167" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210825 23:27:58.165" endtime="20210825 23:27:58.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:27:58.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:27:58.167" endtime="20210825 23:27:58.168"/>
</kw>
<status status="PASS" starttime="20210825 23:27:50.530" endtime="20210825 23:27:58.168"/>
</kw>
<msg timestamp="20210825 23:27:58.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:27:50.529" endtime="20210825 23:27:58.169"/>
</kw>
<msg timestamp="20210825 23:27:58.169" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:27:50.527" endtime="20210825 23:27:58.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:27:58.170" endtime="20210825 23:27:58.170"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:27:58.179" level="INFO">Running command 'ozone sh bucket info o3://om:9862/19504-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:28:07.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:28:07.113" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210825 23:27:58.176" endtime="20210825 23:28:07.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:28:07.115" level="INFO">100</msg>
<status status="PASS" starttime="20210825 23:28:07.114" endtime="20210825 23:28:07.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:28:07.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:28:07.116" endtime="20210825 23:28:07.117"/>
</kw>
<status status="PASS" starttime="20210825 23:27:58.175" endtime="20210825 23:28:07.118"/>
</kw>
<msg timestamp="20210825 23:28:07.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:27:58.174" endtime="20210825 23:28:07.118"/>
</kw>
<msg timestamp="20210825 23:28:07.119" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210825 23:27:58.171" endtime="20210825 23:28:07.119"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:28:07.119" endtime="20210825 23:28:07.120"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:28:07.128" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/19504-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:28:14.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:28:14.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:28:07.124" endtime="20210825 23:28:14.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:28:14.835" level="INFO"/>
<status status="PASS" starttime="20210825 23:28:14.834" endtime="20210825 23:28:14.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:28:14.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:28:14.836" endtime="20210825 23:28:14.837"/>
</kw>
<status status="PASS" starttime="20210825 23:28:07.122" endtime="20210825 23:28:14.838"/>
</kw>
<msg timestamp="20210825 23:28:14.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:28:07.122" endtime="20210825 23:28:14.838"/>
</kw>
<status status="PASS" starttime="20210825 23:28:07.120" endtime="20210825 23:28:14.839"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:28:14.847" level="INFO">Running command 'ozone sh bucket info o3://om:9862/19504-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:28:22.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:28:22.922" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210825 23:28:14.844" endtime="20210825 23:28:22.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:28:22.925" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210825 23:28:22.923" endtime="20210825 23:28:22.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:28:22.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:28:22.925" endtime="20210825 23:28:22.927"/>
</kw>
<status status="PASS" starttime="20210825 23:28:14.842" endtime="20210825 23:28:22.927"/>
</kw>
<msg timestamp="20210825 23:28:22.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:28:14.842" endtime="20210825 23:28:22.927"/>
</kw>
<msg timestamp="20210825 23:28:22.928" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210825 23:28:14.840" endtime="20210825 23:28:22.928"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:28:22.929" endtime="20210825 23:28:22.930"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:28:22.938" level="INFO">Running command 'ozone sh bucket info o3://om:9862/19504-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:28:31.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:28:31.375" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210825 23:28:22.935" endtime="20210825 23:28:31.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:28:31.377" level="INFO">1000</msg>
<status status="PASS" starttime="20210825 23:28:31.376" endtime="20210825 23:28:31.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:28:31.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:28:31.378" endtime="20210825 23:28:31.379"/>
</kw>
<status status="PASS" starttime="20210825 23:28:22.933" endtime="20210825 23:28:31.379"/>
</kw>
<msg timestamp="20210825 23:28:31.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:28:22.932" endtime="20210825 23:28:31.379"/>
</kw>
<msg timestamp="20210825 23:28:31.380" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210825 23:28:22.930" endtime="20210825 23:28:31.380"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:28:31.380" endtime="20210825 23:28:31.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:28:31.385" level="INFO">Running command 'ozone sh bucket list o3://om:9862/19504-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:28:39.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:28:39.713" level="INFO">${output} = 19504-rpcwoport</msg>
<status status="PASS" starttime="20210825 23:28:31.383" endtime="20210825 23:28:39.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:28:39.715" level="INFO">19504-rpcwoport</msg>
<status status="PASS" starttime="20210825 23:28:39.714" endtime="20210825 23:28:39.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:28:39.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:28:39.715" endtime="20210825 23:28:39.716"/>
</kw>
<status status="PASS" starttime="20210825 23:28:31.382" endtime="20210825 23:28:39.716"/>
</kw>
<msg timestamp="20210825 23:28:39.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:28:31.382" endtime="20210825 23:28:39.716"/>
</kw>
<msg timestamp="20210825 23:28:39.717" level="INFO">${result} = 19504-rpcwoport</msg>
<status status="PASS" starttime="20210825 23:28:31.381" endtime="20210825 23:28:39.717"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:28:39.717" endtime="20210825 23:28:39.718"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:28:39.726" level="INFO">Running command 'ozone sh key put o3://om:9862/19504-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:31:39.092" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210825 23:28:39.723" endtime="20210825 23:31:39.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.092" endtime="20210825 23:31:39.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.093" endtime="20210825 23:31:39.093"/>
</kw>
<status status="FAIL" starttime="20210825 23:28:39.723" endtime="20210825 23:31:39.093"/>
</kw>
<msg timestamp="20210825 23:31:39.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210825 23:28:39.720" endtime="20210825 23:31:39.094"/>
</kw>
<status status="FAIL" starttime="20210825 23:28:39.720" endtime="20210825 23:31:39.094"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.094" endtime="20210825 23:31:39.094"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.094" endtime="20210825 23:31:39.094"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.095" endtime="20210825 23:31:39.095"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.095" endtime="20210825 23:31:39.095"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.095" endtime="20210825 23:31:39.095"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.095" endtime="20210825 23:31:39.095"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.095" endtime="20210825 23:31:39.096"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.096" endtime="20210825 23:31:39.096"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.096" endtime="20210825 23:31:39.096"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.096" endtime="20210825 23:31:39.096"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.096" endtime="20210825 23:31:39.097"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.097" endtime="20210825 23:31:39.097"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.097" endtime="20210825 23:31:39.097"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.097" endtime="20210825 23:31:39.097"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.097" endtime="20210825 23:31:39.097"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.098" endtime="20210825 23:31:39.098"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.098" endtime="20210825 23:31:39.098"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.098" endtime="20210825 23:31:39.098"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.098" endtime="20210825 23:31:39.098"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.098" endtime="20210825 23:31:39.099"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.099" endtime="20210825 23:31:39.099"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.099" endtime="20210825 23:31:39.099"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.099" endtime="20210825 23:31:39.099"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.099" endtime="20210825 23:31:39.100"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.100" endtime="20210825 23:31:39.100"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.100" endtime="20210825 23:31:39.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.100" endtime="20210825 23:31:39.100"/>
</kw>
<status status="FAIL" starttime="20210825 23:28:39.719" endtime="20210825 23:31:39.100"/>
</kw>
<status status="FAIL" starttime="20210825 23:28:39.718" endtime="20210825 23:31:39.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.101" endtime="20210825 23:31:39.101"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.101" endtime="20210825 23:31:39.101"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.101" endtime="20210825 23:31:39.101"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.101" endtime="20210825 23:31:39.102"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.102" endtime="20210825 23:31:39.102"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.102" endtime="20210825 23:31:39.102"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.102" endtime="20210825 23:31:39.102"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.102" endtime="20210825 23:31:39.102"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.103" endtime="20210825 23:31:39.103"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.103" endtime="20210825 23:31:39.103"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.103" endtime="20210825 23:31:39.104"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.104" endtime="20210825 23:31:39.104"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.104" endtime="20210825 23:31:39.104"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.105" endtime="20210825 23:31:39.105"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.105" endtime="20210825 23:31:39.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.105" endtime="20210825 23:31:39.105"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.106" endtime="20210825 23:31:39.106"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.106" endtime="20210825 23:31:39.107"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.107" endtime="20210825 23:31:39.107"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.108" endtime="20210825 23:31:39.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.108" endtime="20210825 23:31:39.108"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.108" endtime="20210825 23:31:39.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.109" endtime="20210825 23:31:39.109"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:31:39.109" endtime="20210825 23:31:39.109"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.110" endtime="20210825 23:31:39.110"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:31:39.110" endtime="20210825 23:31:39.110"/>
</kw>
<status status="FAIL" starttime="20210825 23:26:39.225" endtime="20210825 23:31:39.110"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210825 23:26:39.091" endtime="20210825 23:31:39.111">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:31:39.136" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:31:39.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:31:39.142" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:31:39.118" endtime="20210825 23:31:39.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:31:39.143" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:31:39.142" endtime="20210825 23:31:39.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:31:39.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:31:39.143" endtime="20210825 23:31:39.144"/>
</kw>
<status status="PASS" starttime="20210825 23:31:39.117" endtime="20210825 23:31:39.145"/>
</kw>
<msg timestamp="20210825 23:31:39.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:31:39.117" endtime="20210825 23:31:39.146"/>
</kw>
<msg timestamp="20210825 23:31:39.146" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:31:39.116" endtime="20210825 23:31:39.146"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:31:39.147" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:31:39.147" endtime="20210825 23:31:39.148"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:31:39.153" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:31:39.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:31:39.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:31:39.151" endtime="20210825 23:31:39.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:31:39.165" level="INFO"/>
<status status="PASS" starttime="20210825 23:31:39.164" endtime="20210825 23:31:39.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:31:39.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:31:39.165" endtime="20210825 23:31:39.166"/>
</kw>
<status status="PASS" starttime="20210825 23:31:39.150" endtime="20210825 23:31:39.166"/>
</kw>
<msg timestamp="20210825 23:31:39.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:31:39.150" endtime="20210825 23:31:39.167"/>
</kw>
<status status="PASS" starttime="20210825 23:31:39.148" endtime="20210825 23:31:39.167"/>
</kw>
<status status="PASS" starttime="20210825 23:31:39.148" endtime="20210825 23:31:39.167"/>
</kw>
<status status="PASS" starttime="20210825 23:31:39.115" endtime="20210825 23:31:39.168"/>
</kw>
<status status="PASS" starttime="20210825 23:31:39.114" endtime="20210825 23:31:39.168"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:31:39.174" level="INFO">Running command 'ozone sh volume create o3://om:9862/19504-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:31:46.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:31:46.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:31:39.171" endtime="20210825 23:31:46.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:31:46.677" level="INFO"/>
<status status="PASS" starttime="20210825 23:31:46.676" endtime="20210825 23:31:46.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:31:46.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:31:46.677" endtime="20210825 23:31:46.678"/>
</kw>
<status status="PASS" starttime="20210825 23:31:39.170" endtime="20210825 23:31:46.679"/>
</kw>
<msg timestamp="20210825 23:31:46.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:31:39.170" endtime="20210825 23:31:46.679"/>
</kw>
<status status="PASS" starttime="20210825 23:31:39.169" endtime="20210825 23:31:46.679"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:31:46.684" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/19504-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:31:54.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:31:54.090" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:31:46.681" endtime="20210825 23:31:54.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:31:54.092" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:31:54.091" endtime="20210825 23:31:54.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:31:54.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:31:54.092" endtime="20210825 23:31:54.094"/>
</kw>
<status status="PASS" starttime="20210825 23:31:46.681" endtime="20210825 23:31:54.094"/>
</kw>
<msg timestamp="20210825 23:31:54.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:31:46.680" endtime="20210825 23:31:54.095"/>
</kw>
<msg timestamp="20210825 23:31:54.095" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:31:46.680" endtime="20210825 23:31:54.096"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:31:54.096" endtime="20210825 23:31:54.097"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:31:54.103" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/19504-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:32:01.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:32:01.384" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210825 23:31:54.100" endtime="20210825 23:32:01.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:32:01.387" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210825 23:32:01.385" endtime="20210825 23:32:01.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:32:01.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:32:01.387" endtime="20210825 23:32:01.388"/>
</kw>
<status status="PASS" starttime="20210825 23:31:54.099" endtime="20210825 23:32:01.389"/>
</kw>
<msg timestamp="20210825 23:32:01.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:31:54.098" endtime="20210825 23:32:01.389"/>
</kw>
<msg timestamp="20210825 23:32:01.390" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210825 23:31:54.097" endtime="20210825 23:32:01.391"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:32:01.399" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/19504-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:32:09.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:32:09.095" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:32:01.395" endtime="20210825 23:32:09.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:32:09.097" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:32:09.096" endtime="20210825 23:32:09.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:32:09.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:32:09.097" endtime="20210825 23:32:09.098"/>
</kw>
<status status="PASS" starttime="20210825 23:32:01.394" endtime="20210825 23:32:09.098"/>
</kw>
<msg timestamp="20210825 23:32:09.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:32:01.393" endtime="20210825 23:32:09.098"/>
</kw>
<msg timestamp="20210825 23:32:09.099" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:32:01.391" endtime="20210825 23:32:09.099"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:32:09.099" endtime="20210825 23:32:09.101"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:32:09.107" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/19504-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:32:16.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:32:16.381" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210825 23:32:09.104" endtime="20210825 23:32:16.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:32:16.386" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210825 23:32:16.384" endtime="20210825 23:32:16.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:32:16.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:32:16.387" endtime="20210825 23:32:16.388"/>
</kw>
<status status="PASS" starttime="20210825 23:32:09.103" endtime="20210825 23:32:16.388"/>
</kw>
<msg timestamp="20210825 23:32:16.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:32:09.102" endtime="20210825 23:32:16.389"/>
</kw>
<msg timestamp="20210825 23:32:16.389" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210825 23:32:09.101" endtime="20210825 23:32:16.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:32:16.398" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/19504-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:32:24.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:32:24.339" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:32:16.394" endtime="20210825 23:32:24.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:32:24.341" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:32:24.340" endtime="20210825 23:32:24.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:32:24.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:32:24.342" endtime="20210825 23:32:24.343"/>
</kw>
<status status="PASS" starttime="20210825 23:32:16.393" endtime="20210825 23:32:24.343"/>
</kw>
<msg timestamp="20210825 23:32:24.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:32:16.390" endtime="20210825 23:32:24.344"/>
</kw>
<msg timestamp="20210825 23:32:24.344" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:32:16.389" endtime="20210825 23:32:24.345"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:32:24.345" endtime="20210825 23:32:24.346"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:32:24.354" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/19504-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:32:32.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:32:32.207" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210825 23:32:24.350" endtime="20210825 23:32:32.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:32:32.209" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210825 23:32:32.208" endtime="20210825 23:32:32.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:32:32.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:32:32.210" endtime="20210825 23:32:32.211"/>
</kw>
<status status="PASS" starttime="20210825 23:32:24.349" endtime="20210825 23:32:32.212"/>
</kw>
<msg timestamp="20210825 23:32:32.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:32:24.348" endtime="20210825 23:32:32.212"/>
</kw>
<msg timestamp="20210825 23:32:32.213" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210825 23:32:24.347" endtime="20210825 23:32:32.213"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:32:32.221" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/19504-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:32:40.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:32:40.334" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210825 23:32:32.217" endtime="20210825 23:32:40.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:32:40.337" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:32:40.335" endtime="20210825 23:32:40.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:32:40.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:32:40.337" endtime="20210825 23:32:40.338"/>
</kw>
<status status="PASS" starttime="20210825 23:32:32.216" endtime="20210825 23:32:40.340"/>
</kw>
<msg timestamp="20210825 23:32:40.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:32:32.215" endtime="20210825 23:32:40.340"/>
</kw>
<msg timestamp="20210825 23:32:40.340" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210825 23:32:32.213" endtime="20210825 23:32:40.340"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:32:40.341" endtime="20210825 23:32:40.341"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:32:40.342" endtime="20210825 23:32:40.343"/>
</kw>
<status status="PASS" starttime="20210825 23:31:39.168" endtime="20210825 23:32:40.344"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210825 23:31:39.113" endtime="20210825 23:32:40.344"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:32:40.355" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:32:40.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:32:40.360" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:32:40.351" endtime="20210825 23:32:40.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:32:40.361" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:32:40.360" endtime="20210825 23:32:40.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:32:40.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:32:40.362" endtime="20210825 23:32:40.363"/>
</kw>
<status status="PASS" starttime="20210825 23:32:40.350" endtime="20210825 23:32:40.363"/>
</kw>
<msg timestamp="20210825 23:32:40.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:32:40.350" endtime="20210825 23:32:40.364"/>
</kw>
<msg timestamp="20210825 23:32:40.364" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:32:40.349" endtime="20210825 23:32:40.364"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:32:40.366" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:32:40.365" endtime="20210825 23:32:40.366"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:32:40.371" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:32:40.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:32:40.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:32:40.369" endtime="20210825 23:32:40.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:32:40.407" level="INFO"/>
<status status="PASS" starttime="20210825 23:32:40.406" endtime="20210825 23:32:40.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:32:40.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:32:40.407" endtime="20210825 23:32:40.408"/>
</kw>
<status status="PASS" starttime="20210825 23:32:40.368" endtime="20210825 23:32:40.408"/>
</kw>
<msg timestamp="20210825 23:32:40.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:32:40.368" endtime="20210825 23:32:40.409"/>
</kw>
<status status="PASS" starttime="20210825 23:32:40.367" endtime="20210825 23:32:40.409"/>
</kw>
<status status="PASS" starttime="20210825 23:32:40.366" endtime="20210825 23:32:40.409"/>
</kw>
<status status="PASS" starttime="20210825 23:32:40.348" endtime="20210825 23:32:40.409"/>
</kw>
<status status="PASS" starttime="20210825 23:32:40.347" endtime="20210825 23:32:40.409"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:32:40.414" level="INFO">Running command 'ozone sh bucket create o3://om:9862/19504-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:32:48.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:32:48.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:32:40.412" endtime="20210825 23:32:48.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:32:48.470" level="INFO"/>
<status status="PASS" starttime="20210825 23:32:48.469" endtime="20210825 23:32:48.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:32:48.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:32:48.471" endtime="20210825 23:32:48.472"/>
</kw>
<status status="PASS" starttime="20210825 23:32:40.411" endtime="20210825 23:32:48.472"/>
</kw>
<msg timestamp="20210825 23:32:48.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:32:40.411" endtime="20210825 23:32:48.473"/>
</kw>
<status status="PASS" starttime="20210825 23:32:40.410" endtime="20210825 23:32:48.473"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:32:48.477" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/19504-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:32:55.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:32:55.750" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:32:48.475" endtime="20210825 23:32:55.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:32:55.752" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:32:55.751" endtime="20210825 23:32:55.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:32:55.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:32:55.752" endtime="20210825 23:32:55.753"/>
</kw>
<status status="PASS" starttime="20210825 23:32:48.474" endtime="20210825 23:32:55.754"/>
</kw>
<msg timestamp="20210825 23:32:55.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:32:48.474" endtime="20210825 23:32:55.754"/>
</kw>
<msg timestamp="20210825 23:32:55.755" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:32:48.473" endtime="20210825 23:32:55.755"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:32:55.755" endtime="20210825 23:32:55.755"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:32:55.762" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/19504-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:33:03.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:33:03.145" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210825 23:32:55.758" endtime="20210825 23:33:03.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:33:03.147" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210825 23:33:03.146" endtime="20210825 23:33:03.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:33:03.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:33:03.147" endtime="20210825 23:33:03.148"/>
</kw>
<status status="PASS" starttime="20210825 23:32:55.757" endtime="20210825 23:33:03.148"/>
</kw>
<msg timestamp="20210825 23:33:03.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:32:55.757" endtime="20210825 23:33:03.149"/>
</kw>
<msg timestamp="20210825 23:33:03.149" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210825 23:32:55.756" endtime="20210825 23:33:03.149"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:33:03.154" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/19504-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:33:10.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:33:10.901" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:33:03.151" endtime="20210825 23:33:10.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:33:10.903" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:33:10.901" endtime="20210825 23:33:10.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:33:10.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:33:10.904" endtime="20210825 23:33:10.905"/>
</kw>
<status status="PASS" starttime="20210825 23:33:03.150" endtime="20210825 23:33:10.906"/>
</kw>
<msg timestamp="20210825 23:33:10.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:33:03.150" endtime="20210825 23:33:10.906"/>
</kw>
<msg timestamp="20210825 23:33:10.907" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:33:03.149" endtime="20210825 23:33:10.907"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:33:10.907" endtime="20210825 23:33:10.909"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:33:10.916" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/19504-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:33:18.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:33:18.570" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210825 23:33:10.913" endtime="20210825 23:33:18.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:33:18.571" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210825 23:33:18.570" endtime="20210825 23:33:18.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:33:18.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:33:18.578" endtime="20210825 23:33:18.578"/>
</kw>
<status status="PASS" starttime="20210825 23:33:10.912" endtime="20210825 23:33:18.579"/>
</kw>
<msg timestamp="20210825 23:33:18.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:33:10.911" endtime="20210825 23:33:18.579"/>
</kw>
<msg timestamp="20210825 23:33:18.580" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210825 23:33:10.910" endtime="20210825 23:33:18.580"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:33:18.585" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/19504-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:33:26.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:33:26.666" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:33:18.582" endtime="20210825 23:33:26.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:33:26.669" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:33:26.668" endtime="20210825 23:33:26.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:33:26.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:33:26.670" endtime="20210825 23:33:26.672"/>
</kw>
<status status="PASS" starttime="20210825 23:33:18.581" endtime="20210825 23:33:26.675"/>
</kw>
<msg timestamp="20210825 23:33:26.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:33:18.581" endtime="20210825 23:33:26.675"/>
</kw>
<msg timestamp="20210825 23:33:26.675" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:33:18.580" endtime="20210825 23:33:26.676"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:33:26.676" endtime="20210825 23:33:26.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:33:26.685" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/19504-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:33:34.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:33:34.852" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210825 23:33:26.680" endtime="20210825 23:33:34.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:33:34.855" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210825 23:33:34.853" endtime="20210825 23:33:34.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:33:34.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:33:34.855" endtime="20210825 23:33:34.856"/>
</kw>
<status status="PASS" starttime="20210825 23:33:26.678" endtime="20210825 23:33:34.857"/>
</kw>
<msg timestamp="20210825 23:33:34.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:33:26.678" endtime="20210825 23:33:34.858"/>
</kw>
<msg timestamp="20210825 23:33:34.858" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210825 23:33:26.677" endtime="20210825 23:33:34.859"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:33:34.865" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/19504-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:33:42.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:33:42.297" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210825 23:33:34.862" endtime="20210825 23:33:42.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:33:42.299" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:33:42.298" endtime="20210825 23:33:42.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:33:42.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:33:42.299" endtime="20210825 23:33:42.300"/>
</kw>
<status status="PASS" starttime="20210825 23:33:34.861" endtime="20210825 23:33:42.301"/>
</kw>
<msg timestamp="20210825 23:33:42.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:33:34.861" endtime="20210825 23:33:42.301"/>
</kw>
<msg timestamp="20210825 23:33:42.301" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210825 23:33:34.859" endtime="20210825 23:33:42.301"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:33:42.301" endtime="20210825 23:33:42.302"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:33:42.302" endtime="20210825 23:33:42.303"/>
</kw>
<status status="PASS" starttime="20210825 23:32:40.409" endtime="20210825 23:33:42.304"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210825 23:32:40.346" endtime="20210825 23:33:42.305"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:33:42.315" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:33:42.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:33:42.320" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:33:42.312" endtime="20210825 23:33:42.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:33:42.321" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:33:42.321" endtime="20210825 23:33:42.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:33:42.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:33:42.322" endtime="20210825 23:33:42.323"/>
</kw>
<status status="PASS" starttime="20210825 23:33:42.311" endtime="20210825 23:33:42.323"/>
</kw>
<msg timestamp="20210825 23:33:42.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:33:42.310" endtime="20210825 23:33:42.324"/>
</kw>
<msg timestamp="20210825 23:33:42.324" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:33:42.310" endtime="20210825 23:33:42.324"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:33:42.326" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:33:42.325" endtime="20210825 23:33:42.326"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:33:42.331" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:33:42.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:33:42.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:33:42.329" endtime="20210825 23:33:42.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:33:42.342" level="INFO"/>
<status status="PASS" starttime="20210825 23:33:42.341" endtime="20210825 23:33:42.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:33:42.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:33:42.342" endtime="20210825 23:33:42.344"/>
</kw>
<status status="PASS" starttime="20210825 23:33:42.328" endtime="20210825 23:33:42.344"/>
</kw>
<msg timestamp="20210825 23:33:42.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:33:42.328" endtime="20210825 23:33:42.345"/>
</kw>
<status status="PASS" starttime="20210825 23:33:42.327" endtime="20210825 23:33:42.345"/>
</kw>
<status status="PASS" starttime="20210825 23:33:42.326" endtime="20210825 23:33:42.345"/>
</kw>
<status status="PASS" starttime="20210825 23:33:42.309" endtime="20210825 23:33:42.345"/>
</kw>
<status status="PASS" starttime="20210825 23:33:42.308" endtime="20210825 23:33:42.347"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:33:42.352" level="INFO">Running command 'ozone sh key put o3://om:9862/19504-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:36:54.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:36:54.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:33:42.350" endtime="20210825 23:36:54.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:36:54.469" level="INFO"/>
<status status="PASS" starttime="20210825 23:36:54.468" endtime="20210825 23:36:54.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:36:54.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:36:54.470" endtime="20210825 23:36:54.471"/>
</kw>
<status status="PASS" starttime="20210825 23:33:42.350" endtime="20210825 23:36:54.471"/>
</kw>
<msg timestamp="20210825 23:36:54.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:33:42.349" endtime="20210825 23:36:54.471"/>
</kw>
<status status="PASS" starttime="20210825 23:33:42.348" endtime="20210825 23:36:54.472"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:36:54.478" level="INFO">Running command 'ozone sh key getacl o3://om:9862/19504-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:37:01.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:37:01.894" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:36:54.476" endtime="20210825 23:37:01.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:37:01.896" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:37:01.895" endtime="20210825 23:37:01.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:37:01.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:37:01.897" endtime="20210825 23:37:01.898"/>
</kw>
<status status="PASS" starttime="20210825 23:36:54.475" endtime="20210825 23:37:01.898"/>
</kw>
<msg timestamp="20210825 23:37:01.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:36:54.474" endtime="20210825 23:37:01.898"/>
</kw>
<msg timestamp="20210825 23:37:01.899" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:36:54.472" endtime="20210825 23:37:01.899"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:37:01.900" endtime="20210825 23:37:01.900"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:37:01.907" level="INFO">Running command 'ozone sh key addacl o3://om:9862/19504-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:37:09.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:37:09.332" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:37:01.904" endtime="20210825 23:37:09.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:37:09.333" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:37:09.333" endtime="20210825 23:37:09.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:37:09.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:37:09.334" endtime="20210825 23:37:09.335"/>
</kw>
<status status="PASS" starttime="20210825 23:37:01.903" endtime="20210825 23:37:09.335"/>
</kw>
<msg timestamp="20210825 23:37:09.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:37:01.902" endtime="20210825 23:37:09.335"/>
</kw>
<msg timestamp="20210825 23:37:09.336" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210825 23:37:01.901" endtime="20210825 23:37:09.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:37:09.343" level="INFO">Running command 'ozone sh key getacl o3://om:9862/19504-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:37:17.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:37:17.327" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:37:09.339" endtime="20210825 23:37:17.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:37:17.328" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:37:17.327" endtime="20210825 23:37:17.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:37:17.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:37:17.328" endtime="20210825 23:37:17.329"/>
</kw>
<status status="PASS" starttime="20210825 23:37:09.338" endtime="20210825 23:37:17.330"/>
</kw>
<msg timestamp="20210825 23:37:17.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:37:09.337" endtime="20210825 23:37:17.330"/>
</kw>
<msg timestamp="20210825 23:37:17.330" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:37:09.336" endtime="20210825 23:37:17.330"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:37:17.330" endtime="20210825 23:37:17.331"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:37:17.336" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/19504-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:37:24.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:37:24.995" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210825 23:37:17.333" endtime="20210825 23:37:24.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:37:24.996" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210825 23:37:24.995" endtime="20210825 23:37:24.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:37:24.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:37:24.997" endtime="20210825 23:37:24.997"/>
</kw>
<status status="PASS" starttime="20210825 23:37:17.333" endtime="20210825 23:37:24.998"/>
</kw>
<msg timestamp="20210825 23:37:24.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:37:17.332" endtime="20210825 23:37:24.998"/>
</kw>
<msg timestamp="20210825 23:37:24.999" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210825 23:37:17.332" endtime="20210825 23:37:24.999"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:37:25.008" level="INFO">Running command 'ozone sh key getacl o3://om:9862/19504-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:37:32.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:37:32.821" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:37:25.003" endtime="20210825 23:37:32.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:37:32.823" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:37:32.822" endtime="20210825 23:37:32.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:37:32.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:37:32.823" endtime="20210825 23:37:32.824"/>
</kw>
<status status="PASS" starttime="20210825 23:37:25.001" endtime="20210825 23:37:32.824"/>
</kw>
<msg timestamp="20210825 23:37:32.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:37:25.001" endtime="20210825 23:37:32.825"/>
</kw>
<msg timestamp="20210825 23:37:32.825" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:37:24.999" endtime="20210825 23:37:32.825"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:37:32.825" endtime="20210825 23:37:32.826"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:37:32.832" level="INFO">Running command 'ozone sh key setacl o3://om:9862/19504-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:37:40.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:37:40.460" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210825 23:37:32.828" endtime="20210825 23:37:40.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:37:40.462" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210825 23:37:40.461" endtime="20210825 23:37:40.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:37:40.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:37:40.462" endtime="20210825 23:37:40.463"/>
</kw>
<status status="PASS" starttime="20210825 23:37:32.828" endtime="20210825 23:37:40.463"/>
</kw>
<msg timestamp="20210825 23:37:40.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:37:32.827" endtime="20210825 23:37:40.464"/>
</kw>
<msg timestamp="20210825 23:37:40.464" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210825 23:37:32.826" endtime="20210825 23:37:40.464"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:37:40.468" level="INFO">Running command 'ozone sh key getacl o3://om:9862/19504-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:37:47.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:37:47.976" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210825 23:37:40.466" endtime="20210825 23:37:47.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:37:47.979" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:37:47.977" endtime="20210825 23:37:47.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:37:47.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:37:47.979" endtime="20210825 23:37:47.980"/>
</kw>
<status status="PASS" starttime="20210825 23:37:40.466" endtime="20210825 23:37:47.980"/>
</kw>
<msg timestamp="20210825 23:37:47.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:37:40.465" endtime="20210825 23:37:47.980"/>
</kw>
<msg timestamp="20210825 23:37:47.981" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210825 23:37:40.464" endtime="20210825 23:37:47.981"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:37:47.981" endtime="20210825 23:37:47.982"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:37:47.982" endtime="20210825 23:37:47.983"/>
</kw>
<status status="PASS" starttime="20210825 23:33:42.347" endtime="20210825 23:37:47.983"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210825 23:33:42.306" endtime="20210825 23:37:47.983"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:37:47.990" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:37:47.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:37:47.997" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:37:47.988" endtime="20210825 23:37:47.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:37:47.998" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:37:47.997" endtime="20210825 23:37:47.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:37:48.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:37:47.999" endtime="20210825 23:37:48.000"/>
</kw>
<status status="PASS" starttime="20210825 23:37:47.987" endtime="20210825 23:37:48.001"/>
</kw>
<msg timestamp="20210825 23:37:48.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:37:47.987" endtime="20210825 23:37:48.001"/>
</kw>
<msg timestamp="20210825 23:37:48.001" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:37:47.986" endtime="20210825 23:37:48.001"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:37:48.002" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:37:48.002" endtime="20210825 23:37:48.003"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:37:48.008" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:37:48.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:37:48.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:37:48.005" endtime="20210825 23:37:48.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:37:48.045" level="INFO"/>
<status status="PASS" starttime="20210825 23:37:48.043" endtime="20210825 23:37:48.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:37:48.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:37:48.045" endtime="20210825 23:37:48.045"/>
</kw>
<status status="PASS" starttime="20210825 23:37:48.005" endtime="20210825 23:37:48.046"/>
</kw>
<msg timestamp="20210825 23:37:48.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:37:48.004" endtime="20210825 23:37:48.046"/>
</kw>
<status status="PASS" starttime="20210825 23:37:48.003" endtime="20210825 23:37:48.047"/>
</kw>
<status status="PASS" starttime="20210825 23:37:48.003" endtime="20210825 23:37:48.047"/>
</kw>
<status status="PASS" starttime="20210825 23:37:47.986" endtime="20210825 23:37:48.047"/>
</kw>
<status status="PASS" starttime="20210825 23:37:47.985" endtime="20210825 23:37:48.047"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:37:48.053" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/19504-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:37:55.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:37:55.362" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210825 23:37:48.050" endtime="20210825 23:37:55.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:37:55.363" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210825 23:37:55.362" endtime="20210825 23:37:55.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:37:55.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:37:55.364" endtime="20210825 23:37:55.364"/>
</kw>
<status status="PASS" starttime="20210825 23:37:48.049" endtime="20210825 23:37:55.365"/>
</kw>
<msg timestamp="20210825 23:37:55.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:37:48.049" endtime="20210825 23:37:55.365"/>
</kw>
<status status="PASS" starttime="20210825 23:37:48.048" endtime="20210825 23:37:55.365"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:37:55.371" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/19504-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:38:03.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:38:03.502" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210825 23:37:55.367" endtime="20210825 23:38:03.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:38:03.504" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:38:03.502" endtime="20210825 23:38:03.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:38:03.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:38:03.505" endtime="20210825 23:38:03.506"/>
</kw>
<status status="PASS" starttime="20210825 23:37:55.367" endtime="20210825 23:38:03.507"/>
</kw>
<msg timestamp="20210825 23:38:03.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:37:55.366" endtime="20210825 23:38:03.507"/>
</kw>
<msg timestamp="20210825 23:38:03.508" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210825 23:37:55.366" endtime="20210825 23:38:03.508"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:38:03.509" endtime="20210825 23:38:03.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:38:03.522" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/19504-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:38:10.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:38:10.827" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210825 23:38:03.515" endtime="20210825 23:38:10.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:38:10.828" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210825 23:38:10.828" endtime="20210825 23:38:10.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:38:10.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:38:10.829" endtime="20210825 23:38:10.829"/>
</kw>
<status status="PASS" starttime="20210825 23:38:03.513" endtime="20210825 23:38:10.830"/>
</kw>
<msg timestamp="20210825 23:38:10.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:38:03.513" endtime="20210825 23:38:10.830"/>
</kw>
<msg timestamp="20210825 23:38:10.830" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210825 23:38:03.511" endtime="20210825 23:38:10.830"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:38:10.840" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/19504-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:38:16.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:38:16.727" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210825 23:38:10.834" endtime="20210825 23:38:16.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:38:16.728" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:38:16.727" endtime="20210825 23:38:16.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:38:16.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:38:16.728" endtime="20210825 23:38:16.729"/>
</kw>
<status status="PASS" starttime="20210825 23:38:10.833" endtime="20210825 23:38:16.729"/>
</kw>
<msg timestamp="20210825 23:38:16.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:38:10.832" endtime="20210825 23:38:16.730"/>
</kw>
<msg timestamp="20210825 23:38:16.730" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210825 23:38:10.831" endtime="20210825 23:38:16.730"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:38:16.730" endtime="20210825 23:38:16.731"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:38:16.736" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/19504-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:38:24.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:38:24.151" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210825 23:38:16.733" endtime="20210825 23:38:24.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:38:24.153" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210825 23:38:24.152" endtime="20210825 23:38:24.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:38:24.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:38:24.154" endtime="20210825 23:38:24.154"/>
</kw>
<status status="PASS" starttime="20210825 23:38:16.733" endtime="20210825 23:38:24.155"/>
</kw>
<msg timestamp="20210825 23:38:24.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:38:16.732" endtime="20210825 23:38:24.155"/>
</kw>
<msg timestamp="20210825 23:38:24.156" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210825 23:38:16.731" endtime="20210825 23:38:24.156"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:38:24.161" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/19504-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:38:31.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:38:31.905" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210825 23:38:24.158" endtime="20210825 23:38:31.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:38:31.907" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:38:31.906" endtime="20210825 23:38:31.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:38:31.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:38:31.907" endtime="20210825 23:38:31.908"/>
</kw>
<status status="PASS" starttime="20210825 23:38:24.157" endtime="20210825 23:38:31.908"/>
</kw>
<msg timestamp="20210825 23:38:31.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:38:24.157" endtime="20210825 23:38:31.908"/>
</kw>
<msg timestamp="20210825 23:38:31.909" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210825 23:38:24.156" endtime="20210825 23:38:31.909"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:38:31.909" endtime="20210825 23:38:31.909"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:38:31.910" endtime="20210825 23:38:31.910"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:38:31.916" level="INFO">Running command 'ozone sh key put o3://om:9862/19504-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:41:43.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:41:43.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:38:31.912" endtime="20210825 23:41:43.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:41:43.636" level="INFO"/>
<status status="PASS" starttime="20210825 23:41:43.636" endtime="20210825 23:41:43.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:41:43.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:41:43.637" endtime="20210825 23:41:43.637"/>
</kw>
<status status="PASS" starttime="20210825 23:38:31.912" endtime="20210825 23:41:43.638"/>
</kw>
<msg timestamp="20210825 23:41:43.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:38:31.912" endtime="20210825 23:41:43.638"/>
</kw>
<status status="PASS" starttime="20210825 23:38:31.910" endtime="20210825 23:41:43.638"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:41:43.645" level="INFO">Running command 'ozone sh key getacl o3://om:9862/19504-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:41:49.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:41:49.857" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:41:43.642" endtime="20210825 23:41:49.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:41:49.859" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210825 23:41:49.858" endtime="20210825 23:41:49.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:41:49.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:41:49.859" endtime="20210825 23:41:49.860"/>
</kw>
<status status="PASS" starttime="20210825 23:41:43.641" endtime="20210825 23:41:49.860"/>
</kw>
<msg timestamp="20210825 23:41:49.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:41:43.640" endtime="20210825 23:41:49.861"/>
</kw>
<msg timestamp="20210825 23:41:49.861" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210825 23:41:43.639" endtime="20210825 23:41:49.861"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:41:49.861" endtime="20210825 23:41:49.862"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210825 23:41:49.862" endtime="20210825 23:41:49.863"/>
</kw>
<status status="PASS" starttime="20210825 23:37:48.047" endtime="20210825 23:41:49.863"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210825 23:37:47.984" endtime="20210825 23:41:49.863"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:41:49.872" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:41:49.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:41:49.877" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:41:49.870" endtime="20210825 23:41:49.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:41:49.878" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:41:49.877" endtime="20210825 23:41:49.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:41:49.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:41:49.879" endtime="20210825 23:41:49.879"/>
</kw>
<status status="PASS" starttime="20210825 23:41:49.869" endtime="20210825 23:41:49.880"/>
</kw>
<msg timestamp="20210825 23:41:49.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:41:49.868" endtime="20210825 23:41:49.881"/>
</kw>
<msg timestamp="20210825 23:41:49.881" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:41:49.867" endtime="20210825 23:41:49.881"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:41:49.882" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:41:49.882" endtime="20210825 23:41:49.882"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:41:49.891" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:41:49.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:41:49.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:41:49.887" endtime="20210825 23:41:49.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:41:49.902" level="INFO"/>
<status status="PASS" starttime="20210825 23:41:49.901" endtime="20210825 23:41:49.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:41:49.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:41:49.902" endtime="20210825 23:41:49.903"/>
</kw>
<status status="PASS" starttime="20210825 23:41:49.886" endtime="20210825 23:41:49.903"/>
</kw>
<msg timestamp="20210825 23:41:49.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:41:49.885" endtime="20210825 23:41:49.904"/>
</kw>
<status status="PASS" starttime="20210825 23:41:49.884" endtime="20210825 23:41:49.904"/>
</kw>
<status status="PASS" starttime="20210825 23:41:49.883" endtime="20210825 23:41:49.904"/>
</kw>
<status status="PASS" starttime="20210825 23:41:49.867" endtime="20210825 23:41:49.904"/>
</kw>
<status status="PASS" starttime="20210825 23:41:49.866" endtime="20210825 23:41:49.904"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:41:49.911" level="INFO">Running command 'ozone sh volume info o3:///19504-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:41:57.047" level="INFO">${rc} = 255</msg>
<msg timestamp="20210825 23:41:57.047" level="INFO">${output} = VOLUME_NOT_FOUND Volume 19504-rpcwport is not found</msg>
<status status="PASS" starttime="20210825 23:41:49.908" endtime="20210825 23:41:57.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:41:57.048" level="INFO">VOLUME_NOT_FOUND Volume 19504-rpcwport is not found</msg>
<status status="PASS" starttime="20210825 23:41:57.047" endtime="20210825 23:41:57.048"/>
</kw>
<msg timestamp="20210825 23:41:57.049" level="INFO">${result} = VOLUME_NOT_FOUND Volume 19504-rpcwport is not found</msg>
<status status="PASS" starttime="20210825 23:41:49.907" endtime="20210825 23:41:57.049"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:41:57.049" endtime="20210825 23:41:57.049"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:41:57.055" level="INFO">Running command 'ozone sh volume create o3:///19504-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:42:02.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:42:02.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:41:57.053" endtime="20210825 23:42:02.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:42:02.830" level="INFO"/>
<status status="PASS" starttime="20210825 23:42:02.830" endtime="20210825 23:42:02.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:42:02.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:42:02.831" endtime="20210825 23:42:02.831"/>
</kw>
<status status="PASS" starttime="20210825 23:41:57.052" endtime="20210825 23:42:02.832"/>
</kw>
<msg timestamp="20210825 23:42:02.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:41:57.051" endtime="20210825 23:42:02.832"/>
</kw>
<msg timestamp="20210825 23:42:02.832" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210825 23:41:57.049" endtime="20210825 23:42:02.832"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:42:02.833" endtime="20210825 23:42:02.833"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:42:02.839" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="19504-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:42:10.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:42:10.946" level="INFO">${output} = {
  "metadata": {},
  "name": "19504-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210825 23:42:02.835" endtime="20210825 23:42:10.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:42:10.948" level="INFO">{
  "metadata": {},
  "name": "19504-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-25T23:42:02.772Z",
  "modificationTime": "2021-08-25T23:42:02.772Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210825 23:42:10.947" endtime="20210825 23:42:10.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:42:10.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:42:10.948" endtime="20210825 23:42:10.949"/>
</kw>
<status status="PASS" starttime="20210825 23:42:02.835" endtime="20210825 23:42:10.949"/>
</kw>
<msg timestamp="20210825 23:42:10.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:42:02.834" endtime="20210825 23:42:10.949"/>
</kw>
<msg timestamp="20210825 23:42:10.950" level="INFO">${result} = {
  "metadata": {},
  "name": "19504-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210825 23:42:02.833" endtime="20210825 23:42:10.950"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:42:10.950" endtime="20210825 23:42:10.951"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:42:10.956" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="19504-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:42:19.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:42:19.462" level="INFO">${output} = {
  "metadata": {},
  "name": "19504-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210825 23:42:10.953" endtime="20210825 23:42:19.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:42:19.464" level="INFO">{
  "metadata": {},
  "name": "19504-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-25T23:42:02.772Z",
  "modificationTime": "2021-08-25T23:42:02.772Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210825 23:42:19.463" endtime="20210825 23:42:19.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:42:19.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:42:19.464" endtime="20210825 23:42:19.465"/>
</kw>
<status status="PASS" starttime="20210825 23:42:10.952" endtime="20210825 23:42:19.466"/>
</kw>
<msg timestamp="20210825 23:42:19.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:42:10.952" endtime="20210825 23:42:19.466"/>
</kw>
<msg timestamp="20210825 23:42:19.466" level="INFO">${result} = {
  "metadata": {},
  "name": "19504-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210825 23:42:10.951" endtime="20210825 23:42:19.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:42:19.467" endtime="20210825 23:42:19.467"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:42:19.472" level="INFO">Running command 'ozone sh volume setquota o3:///19504-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:42:26.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:42:26.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:42:19.470" endtime="20210825 23:42:26.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:42:26.923" level="INFO"/>
<status status="PASS" starttime="20210825 23:42:26.923" endtime="20210825 23:42:26.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:42:26.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:42:26.924" endtime="20210825 23:42:26.925"/>
</kw>
<status status="PASS" starttime="20210825 23:42:19.469" endtime="20210825 23:42:26.925"/>
</kw>
<msg timestamp="20210825 23:42:26.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:42:19.468" endtime="20210825 23:42:26.926"/>
</kw>
<status status="PASS" starttime="20210825 23:42:19.467" endtime="20210825 23:42:26.926"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:42:26.935" level="INFO">Running command 'ozone sh volume info o3:///19504-rpcwport | jq -r '. | select(.name=="19504-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:42:34.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:42:34.864" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:42:26.929" endtime="20210825 23:42:34.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:42:34.867" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210825 23:42:34.865" endtime="20210825 23:42:34.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:42:34.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:42:34.868" endtime="20210825 23:42:34.868"/>
</kw>
<status status="PASS" starttime="20210825 23:42:26.928" endtime="20210825 23:42:34.869"/>
</kw>
<msg timestamp="20210825 23:42:34.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:42:26.927" endtime="20210825 23:42:34.869"/>
</kw>
<msg timestamp="20210825 23:42:34.870" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:42:26.926" endtime="20210825 23:42:34.870"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:42:34.870" endtime="20210825 23:42:34.871"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:42:34.878" level="INFO">Running command 'ozone sh bucket create o3:///19504-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:42:42.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:42:42.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:42:34.875" endtime="20210825 23:42:42.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:42:42.199" level="INFO"/>
<status status="PASS" starttime="20210825 23:42:42.198" endtime="20210825 23:42:42.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:42:42.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:42:42.200" endtime="20210825 23:42:42.201"/>
</kw>
<status status="PASS" starttime="20210825 23:42:34.873" endtime="20210825 23:42:42.201"/>
</kw>
<msg timestamp="20210825 23:42:42.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:42:34.873" endtime="20210825 23:42:42.202"/>
</kw>
<status status="PASS" starttime="20210825 23:42:34.871" endtime="20210825 23:42:42.202"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:42:42.210" level="INFO">Running command 'ozone sh bucket info o3:///19504-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:42:50.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:42:50.970" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210825 23:42:42.207" endtime="20210825 23:42:50.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:42:50.972" level="INFO">DISK</msg>
<status status="PASS" starttime="20210825 23:42:50.971" endtime="20210825 23:42:50.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:42:50.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:42:50.972" endtime="20210825 23:42:50.973"/>
</kw>
<status status="PASS" starttime="20210825 23:42:42.206" endtime="20210825 23:42:50.974"/>
</kw>
<msg timestamp="20210825 23:42:50.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:42:42.204" endtime="20210825 23:42:50.974"/>
</kw>
<msg timestamp="20210825 23:42:50.975" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210825 23:42:42.203" endtime="20210825 23:42:50.975"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:42:50.975" endtime="20210825 23:42:50.976"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:42:50.982" level="INFO">Running command 'ozone sh bucket info o3:///19504-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:42:59.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:42:59.965" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:42:50.979" endtime="20210825 23:42:59.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:42:59.967" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210825 23:42:59.966" endtime="20210825 23:42:59.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:42:59.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:42:59.967" endtime="20210825 23:42:59.968"/>
</kw>
<status status="PASS" starttime="20210825 23:42:50.978" endtime="20210825 23:42:59.968"/>
</kw>
<msg timestamp="20210825 23:42:59.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:42:50.978" endtime="20210825 23:42:59.969"/>
</kw>
<msg timestamp="20210825 23:42:59.969" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:42:50.976" endtime="20210825 23:42:59.969"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:42:59.969" endtime="20210825 23:42:59.969"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:42:59.976" level="INFO">Running command 'ozone sh bucket info o3:///19504-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:43:07.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:43:07.484" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210825 23:42:59.973" endtime="20210825 23:43:07.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:43:07.486" level="INFO">100</msg>
<status status="PASS" starttime="20210825 23:43:07.485" endtime="20210825 23:43:07.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:43:07.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:43:07.486" endtime="20210825 23:43:07.487"/>
</kw>
<status status="PASS" starttime="20210825 23:42:59.972" endtime="20210825 23:43:07.487"/>
</kw>
<msg timestamp="20210825 23:43:07.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:42:59.971" endtime="20210825 23:43:07.487"/>
</kw>
<msg timestamp="20210825 23:43:07.488" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210825 23:42:59.970" endtime="20210825 23:43:07.488"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:43:07.488" endtime="20210825 23:43:07.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:43:07.495" level="INFO">Running command 'ozone sh bucket setquota o3:///19504-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:43:13.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:43:13.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:43:07.491" endtime="20210825 23:43:13.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:43:13.690" level="INFO"/>
<status status="PASS" starttime="20210825 23:43:13.688" endtime="20210825 23:43:13.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:43:13.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:43:13.690" endtime="20210825 23:43:13.691"/>
</kw>
<status status="PASS" starttime="20210825 23:43:07.490" endtime="20210825 23:43:13.692"/>
</kw>
<msg timestamp="20210825 23:43:13.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:43:07.490" endtime="20210825 23:43:13.692"/>
</kw>
<status status="PASS" starttime="20210825 23:43:07.489" endtime="20210825 23:43:13.693"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:43:13.701" level="INFO">Running command 'ozone sh bucket info o3:///19504-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:43:22.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:43:22.299" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210825 23:43:13.698" endtime="20210825 23:43:22.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:43:22.301" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210825 23:43:22.300" endtime="20210825 23:43:22.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:43:22.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:43:22.302" endtime="20210825 23:43:22.303"/>
</kw>
<status status="PASS" starttime="20210825 23:43:13.696" endtime="20210825 23:43:22.303"/>
</kw>
<msg timestamp="20210825 23:43:22.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:43:13.695" endtime="20210825 23:43:22.304"/>
</kw>
<msg timestamp="20210825 23:43:22.304" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210825 23:43:13.693" endtime="20210825 23:43:22.304"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:43:22.304" endtime="20210825 23:43:22.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:43:22.312" level="INFO">Running command 'ozone sh bucket info o3:///19504-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:43:28.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:43:28.740" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210825 23:43:22.309" endtime="20210825 23:43:28.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:43:28.741" level="INFO">1000</msg>
<status status="PASS" starttime="20210825 23:43:28.740" endtime="20210825 23:43:28.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:43:28.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:43:28.742" endtime="20210825 23:43:28.742"/>
</kw>
<status status="PASS" starttime="20210825 23:43:22.308" endtime="20210825 23:43:28.743"/>
</kw>
<msg timestamp="20210825 23:43:28.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:43:22.307" endtime="20210825 23:43:28.743"/>
</kw>
<msg timestamp="20210825 23:43:28.743" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210825 23:43:22.306" endtime="20210825 23:43:28.743"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:43:28.744" endtime="20210825 23:43:28.744"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:43:28.749" level="INFO">Running command 'ozone sh bucket list o3:///19504-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:43:36.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:43:36.601" level="INFO">${output} = 19504-rpcwport</msg>
<status status="PASS" starttime="20210825 23:43:28.747" endtime="20210825 23:43:36.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:43:36.602" level="INFO">19504-rpcwport</msg>
<status status="PASS" starttime="20210825 23:43:36.601" endtime="20210825 23:43:36.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:43:36.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:43:36.603" endtime="20210825 23:43:36.604"/>
</kw>
<status status="PASS" starttime="20210825 23:43:28.746" endtime="20210825 23:43:36.604"/>
</kw>
<msg timestamp="20210825 23:43:36.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:43:28.746" endtime="20210825 23:43:36.604"/>
</kw>
<msg timestamp="20210825 23:43:36.605" level="INFO">${result} = 19504-rpcwport</msg>
<status status="PASS" starttime="20210825 23:43:28.744" endtime="20210825 23:43:36.605"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:43:36.605" endtime="20210825 23:43:36.606"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:43:36.614" level="INFO">Running command 'ozone sh key put o3:///19504-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:46:48.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:46:48.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:43:36.612" endtime="20210825 23:46:48.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:46:48.494" level="INFO"/>
<status status="PASS" starttime="20210825 23:46:48.493" endtime="20210825 23:46:48.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:46:48.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:46:48.496" endtime="20210825 23:46:48.497"/>
</kw>
<status status="PASS" starttime="20210825 23:43:36.611" endtime="20210825 23:46:48.497"/>
</kw>
<msg timestamp="20210825 23:46:48.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:43:36.611" endtime="20210825 23:46:48.498"/>
</kw>
<status status="PASS" starttime="20210825 23:43:36.610" endtime="20210825 23:46:48.498"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:46:48.504" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:46:48.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:46:48.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:46:48.500" endtime="20210825 23:46:48.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:46:48.513" level="INFO"/>
<status status="PASS" starttime="20210825 23:46:48.513" endtime="20210825 23:46:48.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:46:48.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:46:48.514" endtime="20210825 23:46:48.519"/>
</kw>
<status status="PASS" starttime="20210825 23:46:48.499" endtime="20210825 23:46:48.519"/>
</kw>
<msg timestamp="20210825 23:46:48.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:46:48.499" endtime="20210825 23:46:48.519"/>
</kw>
<status status="PASS" starttime="20210825 23:46:48.498" endtime="20210825 23:46:48.519"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:46:48.541" level="INFO">Running command 'ozone sh key get o3:///19504-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:46:49.865" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210825 23:46:48.531" endtime="20210825 23:46:49.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.866" endtime="20210825 23:46:49.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.867" endtime="20210825 23:46:49.867"/>
</kw>
<status status="FAIL" starttime="20210825 23:46:48.530" endtime="20210825 23:46:49.868"/>
</kw>
<msg timestamp="20210825 23:46:49.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210825 23:46:48.520" endtime="20210825 23:46:49.868"/>
</kw>
<status status="FAIL" starttime="20210825 23:46:48.520" endtime="20210825 23:46:49.869"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.869" endtime="20210825 23:46:49.869"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.870" endtime="20210825 23:46:49.870"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.870" endtime="20210825 23:46:49.870"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.871" endtime="20210825 23:46:49.871"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.871" endtime="20210825 23:46:49.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.871" endtime="20210825 23:46:49.871"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.872" endtime="20210825 23:46:49.872"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.872" endtime="20210825 23:46:49.872"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.873" endtime="20210825 23:46:49.874"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.874" endtime="20210825 23:46:49.874"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.875" endtime="20210825 23:46:49.875"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.877" endtime="20210825 23:46:49.877"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.878" endtime="20210825 23:46:49.879"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.881" endtime="20210825 23:46:49.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.881" endtime="20210825 23:46:49.881"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.882" endtime="20210825 23:46:49.882"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.883" endtime="20210825 23:46:49.883"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.885" endtime="20210825 23:46:49.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.886" endtime="20210825 23:46:49.886"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.887" endtime="20210825 23:46:49.887"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.889" endtime="20210825 23:46:49.889"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.889" endtime="20210825 23:46:49.890"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.891" endtime="20210825 23:46:49.892"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.892" endtime="20210825 23:46:49.892"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.892" endtime="20210825 23:46:49.893"/>
</kw>
<status status="FAIL" starttime="20210825 23:43:36.608" endtime="20210825 23:46:49.893"/>
</kw>
<status status="FAIL" starttime="20210825 23:43:36.607" endtime="20210825 23:46:49.894"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.894" endtime="20210825 23:46:49.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.897" endtime="20210825 23:46:49.897"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.899" endtime="20210825 23:46:49.899"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.899" endtime="20210825 23:46:49.900"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.902" endtime="20210825 23:46:49.902"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.903" endtime="20210825 23:46:49.903"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.903" endtime="20210825 23:46:49.903"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.904" endtime="20210825 23:46:49.904"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.905" endtime="20210825 23:46:49.905"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.906" endtime="20210825 23:46:49.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.907" endtime="20210825 23:46:49.907"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.908" endtime="20210825 23:46:49.908"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.908" endtime="20210825 23:46:49.909"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.909" endtime="20210825 23:46:49.909"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.910" endtime="20210825 23:46:49.911"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.912" endtime="20210825 23:46:49.913"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.913" endtime="20210825 23:46:49.913"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.913" endtime="20210825 23:46:49.917"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.917" endtime="20210825 23:46:49.917"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.918" endtime="20210825 23:46:49.919"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.920" endtime="20210825 23:46:49.920"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.920" endtime="20210825 23:46:49.920"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.920" endtime="20210825 23:46:49.920"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:46:49.921" endtime="20210825 23:46:49.922"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.922" endtime="20210825 23:46:49.923"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:46:49.923" endtime="20210825 23:46:49.923"/>
</kw>
<status status="FAIL" starttime="20210825 23:41:49.905" endtime="20210825 23:46:49.924"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210825 23:41:49.864" endtime="20210825 23:46:49.925">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:46:49.956" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:46:49.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:46:49.977" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:46:49.942" endtime="20210825 23:46:49.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:46:49.979" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:46:49.977" endtime="20210825 23:46:49.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:46:49.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:46:49.979" endtime="20210825 23:46:49.980"/>
</kw>
<status status="PASS" starttime="20210825 23:46:49.939" endtime="20210825 23:46:49.981"/>
</kw>
<msg timestamp="20210825 23:46:49.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:46:49.937" endtime="20210825 23:46:49.981"/>
</kw>
<msg timestamp="20210825 23:46:49.982" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:46:49.936" endtime="20210825 23:46:49.982"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:46:49.983" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:46:49.982" endtime="20210825 23:46:49.984"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:46:50.015" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:46:50.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:46:50.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:46:49.998" endtime="20210825 23:46:50.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:46:50.086" level="INFO"/>
<status status="PASS" starttime="20210825 23:46:50.085" endtime="20210825 23:46:50.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:46:50.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:46:50.086" endtime="20210825 23:46:50.087"/>
</kw>
<status status="PASS" starttime="20210825 23:46:49.996" endtime="20210825 23:46:50.088"/>
</kw>
<msg timestamp="20210825 23:46:50.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:46:49.994" endtime="20210825 23:46:50.089"/>
</kw>
<status status="PASS" starttime="20210825 23:46:49.986" endtime="20210825 23:46:50.089"/>
</kw>
<status status="PASS" starttime="20210825 23:46:49.984" endtime="20210825 23:46:50.089"/>
</kw>
<status status="PASS" starttime="20210825 23:46:49.933" endtime="20210825 23:46:50.090"/>
</kw>
<status status="PASS" starttime="20210825 23:46:49.931" endtime="20210825 23:46:50.090"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:46:50.113" level="INFO">Running command 'ozone sh volume info /19504-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:47:04.051" level="INFO">${rc} = 255</msg>
<msg timestamp="20210825 23:47:04.051" level="INFO">${output} = VOLUME_NOT_FOUND Volume 19504-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210825 23:46:50.101" endtime="20210825 23:47:04.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:47:04.053" level="INFO">VOLUME_NOT_FOUND Volume 19504-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210825 23:47:04.052" endtime="20210825 23:47:04.054"/>
</kw>
<msg timestamp="20210825 23:47:04.054" level="INFO">${result} = VOLUME_NOT_FOUND Volume 19504-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210825 23:46:50.099" endtime="20210825 23:47:04.054"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:47:04.054" endtime="20210825 23:47:04.055"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:47:04.064" level="INFO">Running command 'ozone sh volume create /19504-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:47:13.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:47:13.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:47:04.059" endtime="20210825 23:47:13.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:47:13.545" level="INFO"/>
<status status="PASS" starttime="20210825 23:47:13.543" endtime="20210825 23:47:13.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:47:13.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:47:13.545" endtime="20210825 23:47:13.546"/>
</kw>
<status status="PASS" starttime="20210825 23:47:04.056" endtime="20210825 23:47:13.547"/>
</kw>
<msg timestamp="20210825 23:47:13.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:47:04.056" endtime="20210825 23:47:13.548"/>
</kw>
<msg timestamp="20210825 23:47:13.548" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210825 23:47:04.055" endtime="20210825 23:47:13.548"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:47:13.549" endtime="20210825 23:47:13.550"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:47:13.559" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="19504-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:47:21.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:47:21.704" level="INFO">${output} = {
  "metadata": {},
  "name": "19504-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210825 23:47:13.555" endtime="20210825 23:47:21.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:47:21.707" level="INFO">{
  "metadata": {},
  "name": "19504-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-25T23:47:13.447Z",
  "modificationTime": "2021-08-25T23:47:13.447Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210825 23:47:21.705" endtime="20210825 23:47:21.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:47:21.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:47:21.707" endtime="20210825 23:47:21.709"/>
</kw>
<status status="PASS" starttime="20210825 23:47:13.553" endtime="20210825 23:47:21.710"/>
</kw>
<msg timestamp="20210825 23:47:21.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:47:13.553" endtime="20210825 23:47:21.711"/>
</kw>
<msg timestamp="20210825 23:47:21.711" level="INFO">${result} = {
  "metadata": {},
  "name": "19504-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210825 23:47:13.551" endtime="20210825 23:47:21.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:47:21.712" endtime="20210825 23:47:21.713"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:47:21.719" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="19504-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:47:29.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:47:29.824" level="INFO">${output} = {
  "metadata": {},
  "name": "19504-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210825 23:47:21.716" endtime="20210825 23:47:29.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:47:29.825" level="INFO">{
  "metadata": {},
  "name": "19504-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-08-25T23:47:13.447Z",
  "modificationTime": "2021-08-25T23:47:13.447Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210825 23:47:29.825" endtime="20210825 23:47:29.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:47:29.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:47:29.826" endtime="20210825 23:47:29.827"/>
</kw>
<status status="PASS" starttime="20210825 23:47:21.715" endtime="20210825 23:47:29.827"/>
</kw>
<msg timestamp="20210825 23:47:29.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:47:21.714" endtime="20210825 23:47:29.828"/>
</kw>
<msg timestamp="20210825 23:47:29.828" level="INFO">${result} = {
  "metadata": {},
  "name": "19504-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210825 23:47:21.713" endtime="20210825 23:47:29.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210825 23:47:29.828" endtime="20210825 23:47:29.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:47:29.834" level="INFO">Running command 'ozone sh volume setquota /19504-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:47:36.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:47:36.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:47:29.831" endtime="20210825 23:47:36.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:47:36.933" level="INFO"/>
<status status="PASS" starttime="20210825 23:47:36.931" endtime="20210825 23:47:36.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:47:36.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:47:36.933" endtime="20210825 23:47:36.935"/>
</kw>
<status status="PASS" starttime="20210825 23:47:29.830" endtime="20210825 23:47:36.935"/>
</kw>
<msg timestamp="20210825 23:47:36.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:47:29.830" endtime="20210825 23:47:36.936"/>
</kw>
<status status="PASS" starttime="20210825 23:47:29.829" endtime="20210825 23:47:36.937"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:47:36.947" level="INFO">Running command 'ozone sh volume info /19504-rpcwoscheme | jq -r '. | select(.name=="19504-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:47:45.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:47:45.165" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:47:36.943" endtime="20210825 23:47:45.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:47:45.167" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210825 23:47:45.166" endtime="20210825 23:47:45.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:47:45.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:47:45.167" endtime="20210825 23:47:45.168"/>
</kw>
<status status="PASS" starttime="20210825 23:47:36.941" endtime="20210825 23:47:45.168"/>
</kw>
<msg timestamp="20210825 23:47:45.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:47:36.941" endtime="20210825 23:47:45.168"/>
</kw>
<msg timestamp="20210825 23:47:45.169" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:47:36.938" endtime="20210825 23:47:45.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:47:45.173" endtime="20210825 23:47:45.173"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:47:45.189" level="INFO">Running command 'ozone sh bucket create /19504-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:47:52.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:47:52.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:47:45.179" endtime="20210825 23:47:52.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:47:52.956" level="INFO"/>
<status status="PASS" starttime="20210825 23:47:52.955" endtime="20210825 23:47:52.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:47:52.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:47:52.957" endtime="20210825 23:47:52.960"/>
</kw>
<status status="PASS" starttime="20210825 23:47:45.179" endtime="20210825 23:47:52.960"/>
</kw>
<msg timestamp="20210825 23:47:52.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:47:45.178" endtime="20210825 23:47:52.961"/>
</kw>
<status status="PASS" starttime="20210825 23:47:45.178" endtime="20210825 23:47:52.962"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:47:52.969" level="INFO">Running command 'ozone sh bucket info /19504-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:48:00.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:48:00.329" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210825 23:47:52.967" endtime="20210825 23:48:00.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:48:00.330" level="INFO">DISK</msg>
<status status="PASS" starttime="20210825 23:48:00.330" endtime="20210825 23:48:00.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:48:00.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:48:00.331" endtime="20210825 23:48:00.331"/>
</kw>
<status status="PASS" starttime="20210825 23:47:52.966" endtime="20210825 23:48:00.332"/>
</kw>
<msg timestamp="20210825 23:48:00.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:47:52.966" endtime="20210825 23:48:00.332"/>
</kw>
<msg timestamp="20210825 23:48:00.332" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210825 23:47:52.964" endtime="20210825 23:48:00.332"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:48:00.333" endtime="20210825 23:48:00.333"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:48:00.339" level="INFO">Running command 'ozone sh bucket info /19504-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:48:07.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:48:07.293" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:48:00.336" endtime="20210825 23:48:07.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:48:07.295" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210825 23:48:07.294" endtime="20210825 23:48:07.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:48:07.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:48:07.295" endtime="20210825 23:48:07.296"/>
</kw>
<status status="PASS" starttime="20210825 23:48:00.335" endtime="20210825 23:48:07.296"/>
</kw>
<msg timestamp="20210825 23:48:07.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:48:00.335" endtime="20210825 23:48:07.296"/>
</kw>
<msg timestamp="20210825 23:48:07.297" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210825 23:48:00.333" endtime="20210825 23:48:07.297"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:48:07.297" endtime="20210825 23:48:07.297"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:48:07.302" level="INFO">Running command 'ozone sh bucket info /19504-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:48:15.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:48:15.192" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210825 23:48:07.300" endtime="20210825 23:48:15.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:48:15.196" level="INFO">100</msg>
<status status="PASS" starttime="20210825 23:48:15.193" endtime="20210825 23:48:15.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:48:15.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:48:15.196" endtime="20210825 23:48:15.197"/>
</kw>
<status status="PASS" starttime="20210825 23:48:07.299" endtime="20210825 23:48:15.198"/>
</kw>
<msg timestamp="20210825 23:48:15.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:48:07.299" endtime="20210825 23:48:15.199"/>
</kw>
<msg timestamp="20210825 23:48:15.199" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210825 23:48:07.297" endtime="20210825 23:48:15.199"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:48:15.200" endtime="20210825 23:48:15.201"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:48:15.209" level="INFO">Running command 'ozone sh bucket setquota /19504-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:48:22.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:48:22.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:48:15.205" endtime="20210825 23:48:22.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:48:22.432" level="INFO"/>
<status status="PASS" starttime="20210825 23:48:22.432" endtime="20210825 23:48:22.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:48:22.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:48:22.433" endtime="20210825 23:48:22.434"/>
</kw>
<status status="PASS" starttime="20210825 23:48:15.204" endtime="20210825 23:48:22.435"/>
</kw>
<msg timestamp="20210825 23:48:22.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:48:15.203" endtime="20210825 23:48:22.435"/>
</kw>
<status status="PASS" starttime="20210825 23:48:15.201" endtime="20210825 23:48:22.435"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:48:22.441" level="INFO">Running command 'ozone sh bucket info /19504-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:48:30.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:48:30.202" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210825 23:48:22.439" endtime="20210825 23:48:30.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:48:30.203" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210825 23:48:30.202" endtime="20210825 23:48:30.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:48:30.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:48:30.204" endtime="20210825 23:48:30.204"/>
</kw>
<status status="PASS" starttime="20210825 23:48:22.438" endtime="20210825 23:48:30.205"/>
</kw>
<msg timestamp="20210825 23:48:30.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:48:22.437" endtime="20210825 23:48:30.205"/>
</kw>
<msg timestamp="20210825 23:48:30.205" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210825 23:48:22.436" endtime="20210825 23:48:30.205"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:48:30.206" endtime="20210825 23:48:30.206"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:48:30.212" level="INFO">Running command 'ozone sh bucket info /19504-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:48:38.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:48:38.297" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210825 23:48:30.210" endtime="20210825 23:48:38.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:48:38.301" level="INFO">1000</msg>
<status status="PASS" starttime="20210825 23:48:38.299" endtime="20210825 23:48:38.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:48:38.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:48:38.301" endtime="20210825 23:48:38.302"/>
</kw>
<status status="PASS" starttime="20210825 23:48:30.209" endtime="20210825 23:48:38.303"/>
</kw>
<msg timestamp="20210825 23:48:38.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:48:30.209" endtime="20210825 23:48:38.304"/>
</kw>
<msg timestamp="20210825 23:48:38.305" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210825 23:48:30.207" endtime="20210825 23:48:38.305"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:48:38.305" endtime="20210825 23:48:38.306"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:48:38.317" level="INFO">Running command 'ozone sh bucket list /19504-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:48:46.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:48:46.028" level="INFO">${output} = 19504-rpcwoscheme</msg>
<status status="PASS" starttime="20210825 23:48:38.312" endtime="20210825 23:48:46.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:48:46.029" level="INFO">19504-rpcwoscheme</msg>
<status status="PASS" starttime="20210825 23:48:46.028" endtime="20210825 23:48:46.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:48:46.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:48:46.029" endtime="20210825 23:48:46.030"/>
</kw>
<status status="PASS" starttime="20210825 23:48:38.311" endtime="20210825 23:48:46.031"/>
</kw>
<msg timestamp="20210825 23:48:46.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:48:38.310" endtime="20210825 23:48:46.031"/>
</kw>
<msg timestamp="20210825 23:48:46.031" level="INFO">${result} = 19504-rpcwoscheme</msg>
<status status="PASS" starttime="20210825 23:48:38.307" endtime="20210825 23:48:46.031"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210825 23:48:46.031" endtime="20210825 23:48:46.032"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:48:46.041" level="INFO">Running command 'ozone sh key put /19504-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:51:49.930" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210825 23:48:46.037" endtime="20210825 23:51:49.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.931" endtime="20210825 23:51:49.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.931" endtime="20210825 23:51:49.931"/>
</kw>
<status status="FAIL" starttime="20210825 23:48:46.036" endtime="20210825 23:51:49.932"/>
</kw>
<msg timestamp="20210825 23:51:49.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210825 23:48:46.035" endtime="20210825 23:51:49.932"/>
</kw>
<status status="FAIL" starttime="20210825 23:48:46.033" endtime="20210825 23:51:49.932"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.933" endtime="20210825 23:51:49.933"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.933" endtime="20210825 23:51:49.933"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.933" endtime="20210825 23:51:49.933"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.933" endtime="20210825 23:51:49.933"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.934" endtime="20210825 23:51:49.934"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.934" endtime="20210825 23:51:49.934"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.934" endtime="20210825 23:51:49.934"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.935" endtime="20210825 23:51:49.935"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.935" endtime="20210825 23:51:49.935"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.935" endtime="20210825 23:51:49.935"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.935" endtime="20210825 23:51:49.935"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.935" endtime="20210825 23:51:49.936"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.936" endtime="20210825 23:51:49.936"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.936" endtime="20210825 23:51:49.936"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.936" endtime="20210825 23:51:49.936"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.937" endtime="20210825 23:51:49.937"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.937" endtime="20210825 23:51:49.937"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.937" endtime="20210825 23:51:49.937"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.937" endtime="20210825 23:51:49.937"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.938" endtime="20210825 23:51:49.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.938" endtime="20210825 23:51:49.938"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.938" endtime="20210825 23:51:49.938"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.938" endtime="20210825 23:51:49.939"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.939" endtime="20210825 23:51:49.939"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.939" endtime="20210825 23:51:49.940"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.940" endtime="20210825 23:51:49.940"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.940" endtime="20210825 23:51:49.940"/>
</kw>
<status status="FAIL" starttime="20210825 23:48:46.033" endtime="20210825 23:51:49.941"/>
</kw>
<status status="FAIL" starttime="20210825 23:48:46.032" endtime="20210825 23:51:49.941"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.941" endtime="20210825 23:51:49.941"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.942" endtime="20210825 23:51:49.942"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.942" endtime="20210825 23:51:49.942"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.943" endtime="20210825 23:51:49.943"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.943" endtime="20210825 23:51:49.943"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.943" endtime="20210825 23:51:49.943"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.944" endtime="20210825 23:51:49.944"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.944" endtime="20210825 23:51:49.945"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.945" endtime="20210825 23:51:49.945"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.945" endtime="20210825 23:51:49.945"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.946" endtime="20210825 23:51:49.946"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.946" endtime="20210825 23:51:49.946"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.946" endtime="20210825 23:51:49.946"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.946" endtime="20210825 23:51:49.947"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.947" endtime="20210825 23:51:49.947"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.947" endtime="20210825 23:51:49.947"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.948" endtime="20210825 23:51:49.948"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.948" endtime="20210825 23:51:49.948"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.949" endtime="20210825 23:51:49.949"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.949" endtime="20210825 23:51:49.949"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.949" endtime="20210825 23:51:49.949"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.950" endtime="20210825 23:51:49.950"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.950" endtime="20210825 23:51:49.950"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210825 23:51:49.950" endtime="20210825 23:51:49.950"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.951" endtime="20210825 23:51:49.951"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210825 23:51:49.951" endtime="20210825 23:51:49.951"/>
</kw>
<status status="FAIL" starttime="20210825 23:46:50.090" endtime="20210825 23:51:49.951"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210825 23:46:49.928" endtime="20210825 23:51:49.952">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210825 23:26:39.050" endtime="20210825 23:51:49.955"/>
</suite>
<status status="FAIL" starttime="20210825 23:02:03.423" endtime="20210825 23:51:49.964"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:01:57.858" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:01:57.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:01:57.865" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210825 23:01:57.854" endtime="20210825 23:01:57.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:01:57.866" level="INFO">scm</msg>
<status status="PASS" starttime="20210825 23:01:57.865" endtime="20210825 23:01:57.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:01:57.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:01:57.867" endtime="20210825 23:01:57.867"/>
</kw>
<status status="PASS" starttime="20210825 23:01:57.853" endtime="20210825 23:01:57.868"/>
</kw>
<msg timestamp="20210825 23:01:57.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:01:57.853" endtime="20210825 23:01:57.868"/>
</kw>
<msg timestamp="20210825 23:01:57.869" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210825 23:01:57.852" endtime="20210825 23:01:57.869"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210825 23:01:57.869" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210825 23:01:57.869" endtime="20210825 23:01:57.870"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210825 23:01:57.874" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210825 23:01:57.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210825 23:01:57.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210825 23:01:57.872" endtime="20210825 23:01:57.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210825 23:01:57.883" level="INFO"/>
<status status="PASS" starttime="20210825 23:01:57.883" endtime="20210825 23:01:57.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210825 23:01:57.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210825 23:01:57.884" endtime="20210825 23:01:57.884"/>
</kw>
<status status="PASS" starttime="20210825 23:01:57.871" endtime="20210825 23:01:57.885"/>
</kw>
<msg timestamp="20210825 23:01:57.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210825 23:01:57.871" endtime="20210825 23:01:57.885"/>
</kw>
<status status="PASS" starttime="20210825 23:01:57.870" endtime="20210825 23:01:57.885"/>
</kw>
<status status="PASS" starttime="20210825 23:01:57.870" endtime="20210825 23:01:57.885"/>
</kw>
<status status="PASS" starttime="20210825 23:01:57.851" endtime="20210825 23:01:57.885"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210825 23:01:57.851" endtime="20210825 23:01:57.886"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210825 23:01:57.785" endtime="20210825 23:01:57.887"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2986643"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
