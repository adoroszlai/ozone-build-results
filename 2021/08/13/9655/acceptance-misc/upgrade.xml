<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210813 02:33:59.478" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210813 02:26:43.343" level="INFO">${random} = 85439</msg>
<status status="PASS" starttime="20210813 02:26:43.342" endtime="20210813 02:26:43.343"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:26:43.345" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-85439 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:26:46.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:26:46.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:26:43.344" endtime="20210813 02:26:46.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:26:46.604" level="INFO"/>
<status status="PASS" starttime="20210813 02:26:46.603" endtime="20210813 02:26:46.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:26:46.604" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:26:46.604" endtime="20210813 02:26:46.604"/>
</kw>
<status status="PASS" starttime="20210813 02:26:43.344" endtime="20210813 02:26:46.605"/>
</kw>
<msg timestamp="20210813 02:26:46.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:26:43.344" endtime="20210813 02:26:46.605"/>
</kw>
<msg timestamp="20210813 02:26:46.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:26:43.343" endtime="20210813 02:26:46.605"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:26:46.605" endtime="20210813 02:26:46.605"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:26:43.342" endtime="20210813 02:26:46.605"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210813 02:26:43.308" endtime="20210813 02:26:46.606"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:26:32.604" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:26:34.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:26:34.764" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:26:32.603" endtime="20210813 02:26:34.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:26:34.765" level="INFO"/>
<status status="PASS" starttime="20210813 02:26:34.765" endtime="20210813 02:26:34.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:26:34.766" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:26:34.765" endtime="20210813 02:26:34.766"/>
</kw>
<status status="PASS" starttime="20210813 02:26:32.603" endtime="20210813 02:26:34.766"/>
</kw>
<msg timestamp="20210813 02:26:34.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:26:32.602" endtime="20210813 02:26:34.766"/>
</kw>
<msg timestamp="20210813 02:26:34.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:26:32.602" endtime="20210813 02:26:34.766"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:26:34.766" endtime="20210813 02:26:34.767"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:26:34.769" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:26:36.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:26:36.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:26:34.768" endtime="20210813 02:26:36.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:26:36.461" level="INFO"/>
<status status="PASS" starttime="20210813 02:26:36.460" endtime="20210813 02:26:36.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:26:36.461" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:26:36.461" endtime="20210813 02:26:36.461"/>
</kw>
<status status="PASS" starttime="20210813 02:26:34.767" endtime="20210813 02:26:36.461"/>
</kw>
<msg timestamp="20210813 02:26:36.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:26:34.767" endtime="20210813 02:26:36.462"/>
</kw>
<msg timestamp="20210813 02:26:36.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:26:34.767" endtime="20210813 02:26:36.462"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:26:36.462" endtime="20210813 02:26:36.462"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:26:36.466" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:26:40.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:26:40.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:26:36.465" endtime="20210813 02:26:40.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:26:40.387" level="INFO"/>
<status status="PASS" starttime="20210813 02:26:40.387" endtime="20210813 02:26:40.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:26:40.388" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:26:40.388" endtime="20210813 02:26:40.388"/>
</kw>
<status status="PASS" starttime="20210813 02:26:36.463" endtime="20210813 02:26:40.388"/>
</kw>
<msg timestamp="20210813 02:26:40.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:26:36.463" endtime="20210813 02:26:40.389"/>
</kw>
<msg timestamp="20210813 02:26:40.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:26:36.463" endtime="20210813 02:26:40.389"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:26:40.389" endtime="20210813 02:26:40.389"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:26:32.601" endtime="20210813 02:26:40.389"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210813 02:26:32.566" endtime="20210813 02:26:40.390"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:27:44.948" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:27:46.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:27:46.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:27:44.946" endtime="20210813 02:27:46.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:27:46.989" level="INFO"/>
<status status="PASS" starttime="20210813 02:27:46.989" endtime="20210813 02:27:46.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:27:46.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:27:46.990" endtime="20210813 02:27:46.990"/>
</kw>
<status status="PASS" starttime="20210813 02:27:44.945" endtime="20210813 02:27:46.990"/>
</kw>
<msg timestamp="20210813 02:27:46.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:27:44.945" endtime="20210813 02:27:46.991"/>
</kw>
<msg timestamp="20210813 02:27:46.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:27:44.944" endtime="20210813 02:27:46.991"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:27:46.991" endtime="20210813 02:27:46.992"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:27:46.995" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:27:48.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:27:48.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:27:46.993" endtime="20210813 02:27:48.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:27:48.929" level="INFO"/>
<status status="PASS" starttime="20210813 02:27:48.929" endtime="20210813 02:27:48.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:27:48.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:27:48.930" endtime="20210813 02:27:48.930"/>
</kw>
<status status="PASS" starttime="20210813 02:27:46.993" endtime="20210813 02:27:48.931"/>
</kw>
<msg timestamp="20210813 02:27:48.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:27:46.992" endtime="20210813 02:27:48.931"/>
</kw>
<msg timestamp="20210813 02:27:48.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:27:46.992" endtime="20210813 02:27:48.931"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:27:48.931" endtime="20210813 02:27:48.932"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:27:48.935" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:27:53.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:27:53.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:27:48.933" endtime="20210813 02:27:53.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:27:53.054" level="INFO"/>
<status status="PASS" starttime="20210813 02:27:53.053" endtime="20210813 02:27:53.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:27:53.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:27:53.054" endtime="20210813 02:27:53.055"/>
</kw>
<status status="PASS" starttime="20210813 02:27:48.933" endtime="20210813 02:27:53.055"/>
</kw>
<msg timestamp="20210813 02:27:53.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:27:48.932" endtime="20210813 02:27:53.055"/>
</kw>
<msg timestamp="20210813 02:27:53.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:27:48.932" endtime="20210813 02:27:53.056"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:27:53.056" endtime="20210813 02:27:53.056"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:27:44.944" endtime="20210813 02:27:53.056"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210813 02:27:44.900" endtime="20210813 02:27:53.057"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210813 02:27:56.115" level="INFO">${random} = 57339</msg>
<status status="PASS" starttime="20210813 02:27:56.115" endtime="20210813 02:27:56.115"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:27:56.120" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-57339 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:27:59.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:27:59.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:27:56.117" endtime="20210813 02:27:59.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:27:59.449" level="INFO"/>
<status status="PASS" starttime="20210813 02:27:59.449" endtime="20210813 02:27:59.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:27:59.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:27:59.449" endtime="20210813 02:27:59.450"/>
</kw>
<status status="PASS" starttime="20210813 02:27:56.116" endtime="20210813 02:27:59.450"/>
</kw>
<msg timestamp="20210813 02:27:59.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:27:56.116" endtime="20210813 02:27:59.451"/>
</kw>
<msg timestamp="20210813 02:27:59.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:27:56.115" endtime="20210813 02:27:59.451"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:27:59.451" endtime="20210813 02:27:59.451"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:27:56.114" endtime="20210813 02:27:59.451"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210813 02:27:56.069" endtime="20210813 02:27:59.452"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210813 02:27:38.131" level="INFO">${random} = 13371</msg>
<status status="PASS" starttime="20210813 02:27:38.130" endtime="20210813 02:27:38.131"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:27:38.135" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-13371 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:27:41.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:27:41.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:27:38.132" endtime="20210813 02:27:41.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:27:41.885" level="INFO"/>
<status status="PASS" starttime="20210813 02:27:41.885" endtime="20210813 02:27:41.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:27:41.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:27:41.886" endtime="20210813 02:27:41.886"/>
</kw>
<status status="PASS" starttime="20210813 02:27:38.132" endtime="20210813 02:27:41.887"/>
</kw>
<msg timestamp="20210813 02:27:41.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:27:38.131" endtime="20210813 02:27:41.887"/>
</kw>
<msg timestamp="20210813 02:27:41.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:27:38.131" endtime="20210813 02:27:41.887"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:27:41.887" endtime="20210813 02:27:41.887"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:27:38.129" endtime="20210813 02:27:41.888"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210813 02:27:38.084" endtime="20210813 02:27:41.889"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="26467"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210813 02:29:22.491" level="INFO">${random} = 53812</msg>
<status status="PASS" starttime="20210813 02:29:22.490" endtime="20210813 02:29:22.491"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:29:22.493" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-53812 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:29:25.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:29:25.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:29:22.492" endtime="20210813 02:29:25.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:29:25.718" level="INFO"/>
<status status="PASS" starttime="20210813 02:29:25.717" endtime="20210813 02:29:25.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:29:25.718" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:29:25.718" endtime="20210813 02:29:25.719"/>
</kw>
<status status="PASS" starttime="20210813 02:29:22.492" endtime="20210813 02:29:25.719"/>
</kw>
<msg timestamp="20210813 02:29:25.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:29:22.491" endtime="20210813 02:29:25.719"/>
</kw>
<msg timestamp="20210813 02:29:25.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:29:22.491" endtime="20210813 02:29:25.719"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:29:25.719" endtime="20210813 02:29:25.720"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:29:22.490" endtime="20210813 02:29:25.720"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210813 02:29:22.448" endtime="20210813 02:29:25.721"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:29:11.648" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:29:13.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:29:13.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:29:11.647" endtime="20210813 02:29:13.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:29:13.373" level="INFO"/>
<status status="PASS" starttime="20210813 02:29:13.373" endtime="20210813 02:29:13.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:29:13.374" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:29:13.373" endtime="20210813 02:29:13.374"/>
</kw>
<status status="PASS" starttime="20210813 02:29:11.647" endtime="20210813 02:29:13.374"/>
</kw>
<msg timestamp="20210813 02:29:13.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:29:11.646" endtime="20210813 02:29:13.374"/>
</kw>
<msg timestamp="20210813 02:29:13.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:29:11.646" endtime="20210813 02:29:13.375"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:29:13.375" endtime="20210813 02:29:13.375"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:29:13.378" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:29:15.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:29:15.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:29:13.376" endtime="20210813 02:29:15.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:29:15.102" level="INFO"/>
<status status="PASS" starttime="20210813 02:29:15.101" endtime="20210813 02:29:15.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:29:15.103" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:29:15.102" endtime="20210813 02:29:15.103"/>
</kw>
<status status="PASS" starttime="20210813 02:29:13.376" endtime="20210813 02:29:15.103"/>
</kw>
<msg timestamp="20210813 02:29:15.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:29:13.376" endtime="20210813 02:29:15.103"/>
</kw>
<msg timestamp="20210813 02:29:15.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:29:13.375" endtime="20210813 02:29:15.104"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:29:15.104" endtime="20210813 02:29:15.104"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:29:15.108" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:29:19.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:29:19.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:29:15.107" endtime="20210813 02:29:19.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:29:19.377" level="INFO"/>
<status status="PASS" starttime="20210813 02:29:19.376" endtime="20210813 02:29:19.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:29:19.377" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:29:19.377" endtime="20210813 02:29:19.377"/>
</kw>
<status status="PASS" starttime="20210813 02:29:15.105" endtime="20210813 02:29:19.378"/>
</kw>
<msg timestamp="20210813 02:29:19.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:29:15.105" endtime="20210813 02:29:19.378"/>
</kw>
<msg timestamp="20210813 02:29:19.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210813 02:29:15.104" endtime="20210813 02:29:19.378"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:29:19.378" endtime="20210813 02:29:19.378"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:29:11.645" endtime="20210813 02:29:19.379"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210813 02:29:11.611" endtime="20210813 02:29:19.380"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:30:37.371" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210813 02:30:37.370" endtime="20210813 02:30:37.371"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:30:37.371" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210813 02:30:37.371" endtime="20210813 02:30:37.371"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210813 02:30:37.372" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210813 02:30:37.371" endtime="20210813 02:30:37.372"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210813 02:30:37.372" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210813 02:30:37.372" endtime="20210813 02:30:37.372"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210813 02:30:37.373" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210813 02:30:37.374" level="INFO">${version_file_contents} = #Fri Aug 13 02:30:07 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628821788762
clusterID=25aca63a-289c-41db-86e1-80d952adacdf
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210813 02:30:37.373" endtime="20210813 02:30:37.374"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210813 02:30:37.374" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210813 02:30:37.374" endtime="20210813 02:30:37.374"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:30:37.374" endtime="20210813 02:30:37.375"/>
</kw>
<status status="PASS" starttime="20210813 02:30:37.373" endtime="20210813 02:30:37.375"/>
</kw>
<status status="PASS" starttime="20210813 02:30:37.372" endtime="20210813 02:30:37.375"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:30:37.369" endtime="20210813 02:30:37.375"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210813 02:30:37.325" endtime="20210813 02:30:37.376"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210813 02:31:23.090" endtime="20210813 02:31:23.090"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:31:23.094" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:32:50.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:32:50.645" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210813 02:31:23.091" endtime="20210813 02:32:50.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:32:50.646" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210813 02:32:50.645" endtime="20210813 02:32:50.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:32:50.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:32:50.646" endtime="20210813 02:32:50.647"/>
</kw>
<status status="PASS" starttime="20210813 02:31:23.091" endtime="20210813 02:32:50.647"/>
</kw>
<msg timestamp="20210813 02:32:50.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:31:23.091" endtime="20210813 02:32:50.647"/>
</kw>
<msg timestamp="20210813 02:32:50.647" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210813 02:31:23.090" endtime="20210813 02:32:50.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:32:50.648" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210813 02:32:50.648" endtime="20210813 02:32:50.648"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:31:23.089" endtime="20210813 02:32:50.648"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210813 02:32:50.649" endtime="20210813 02:32:50.650"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:32:50.653" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:32:52.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:32:52.767" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210813 02:32:50.651" endtime="20210813 02:32:52.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:32:52.768" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:421)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:407)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:240)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210813 02:32:52.768" endtime="20210813 02:32:52.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:32:52.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:32:52.769" endtime="20210813 02:32:52.769"/>
</kw>
<status status="PASS" starttime="20210813 02:32:50.651" endtime="20210813 02:32:52.769"/>
</kw>
<msg timestamp="20210813 02:32:52.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:32:50.650" endtime="20210813 02:32:52.770"/>
</kw>
<msg timestamp="20210813 02:32:52.770" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210813 02:32:50.650" endtime="20210813 02:32:52.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:32:52.770" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:421)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:407)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:240)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210813 02:32:52.770" endtime="20210813 02:32:52.770"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:32:50.649" endtime="20210813 02:32:52.771"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210813 02:31:23.044" endtime="20210813 02:32:52.772"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:32:55.941" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210813 02:32:55.940" endtime="20210813 02:32:55.941"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:32:55.941" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210813 02:32:55.941" endtime="20210813 02:32:55.942"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210813 02:32:55.942" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210813 02:32:55.942" endtime="20210813 02:32:55.942"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210813 02:32:55.942" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210813 02:32:55.942" endtime="20210813 02:32:55.943"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210813 02:32:55.944" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210813 02:32:55.944" level="INFO">${version_file_contents} = #Fri Aug 13 02:31:29 UTC 2021
cTime=1628821716012
clusterID=CID-012bb4f6-3d73-4392-8f3f-0999a08b2827
nodeType=SCM
scmUuid=a8972604-29b6-4606-95c4-d49d5a3db175
layoutVersion=2
</msg>
<status status="PASS" starttime="20210813 02:32:55.943" endtime="20210813 02:32:55.944"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210813 02:32:55.944" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210813 02:32:55.944" endtime="20210813 02:32:55.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:32:55.945" endtime="20210813 02:32:55.945"/>
</kw>
<status status="PASS" starttime="20210813 02:32:55.943" endtime="20210813 02:32:55.945"/>
</kw>
<status status="PASS" starttime="20210813 02:32:55.943" endtime="20210813 02:32:55.945"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:32:55.940" endtime="20210813 02:32:55.945"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210813 02:32:55.895" endtime="20210813 02:32:55.946"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:32:59.119" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210813 02:32:59.119" endtime="20210813 02:32:59.119"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:32:59.120" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210813 02:32:59.120" endtime="20210813 02:32:59.120"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210813 02:32:59.120" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210813 02:32:59.120" endtime="20210813 02:32:59.120"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210813 02:32:59.121" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210813 02:32:59.121" endtime="20210813 02:32:59.121"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210813 02:32:59.122" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210813 02:32:59.122" level="INFO">${version_file_contents} = #Fri Aug 13 02:31:43 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628821788762
clusterID=25aca63a-289c-41db-86e1-80d952adacdf
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210813 02:32:59.122" endtime="20210813 02:32:59.122"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210813 02:32:59.123" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210813 02:32:59.123" endtime="20210813 02:32:59.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:32:59.123" endtime="20210813 02:32:59.124"/>
</kw>
<status status="PASS" starttime="20210813 02:32:59.122" endtime="20210813 02:32:59.124"/>
</kw>
<status status="PASS" starttime="20210813 02:32:59.121" endtime="20210813 02:32:59.124"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:32:59.118" endtime="20210813 02:32:59.124"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210813 02:32:59.073" endtime="20210813 02:32:59.125"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:33:02.297" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210813 02:33:02.296" endtime="20210813 02:33:02.297"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:33:02.297" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210813 02:33:02.297" endtime="20210813 02:33:02.297"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210813 02:33:02.298" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210813 02:33:02.297" endtime="20210813 02:33:02.298"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210813 02:33:02.298" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210813 02:33:02.298" endtime="20210813 02:33:02.298"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210813 02:33:02.299" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210813 02:33:02.299" level="INFO">${version_file_contents} = #Fri Aug 13 02:31:43 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628821790654
clusterID=a1c97ecd-2159-413d-a686-3ec59cd6b155
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210813 02:33:02.299" endtime="20210813 02:33:02.299"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210813 02:33:02.300" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210813 02:33:02.300" endtime="20210813 02:33:02.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:33:02.300" endtime="20210813 02:33:02.301"/>
</kw>
<status status="PASS" starttime="20210813 02:33:02.299" endtime="20210813 02:33:02.301"/>
</kw>
<status status="PASS" starttime="20210813 02:33:02.298" endtime="20210813 02:33:02.301"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:33:02.295" endtime="20210813 02:33:02.301"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210813 02:33:02.250" endtime="20210813 02:33:02.301"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:33:05.491" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210813 02:33:05.491" endtime="20210813 02:33:05.492"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:33:05.492" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210813 02:33:05.492" endtime="20210813 02:33:05.492"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210813 02:33:05.492" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210813 02:33:05.492" endtime="20210813 02:33:05.493"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210813 02:33:05.493" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210813 02:33:05.493" endtime="20210813 02:33:05.493"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210813 02:33:05.494" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210813 02:33:05.494" level="INFO">${version_file_contents} = #Fri Aug 13 02:31:43 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628821788119
clusterID=9e7ca013-2c14-47ea-84bd-f86ade51126f
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210813 02:33:05.494" endtime="20210813 02:33:05.494"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210813 02:33:05.495" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210813 02:33:05.495" endtime="20210813 02:33:05.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:33:05.495" endtime="20210813 02:33:05.496"/>
</kw>
<status status="PASS" starttime="20210813 02:33:05.494" endtime="20210813 02:33:05.496"/>
</kw>
<status status="PASS" starttime="20210813 02:33:05.493" endtime="20210813 02:33:05.496"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:33:05.490" endtime="20210813 02:33:05.496"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210813 02:33:05.446" endtime="20210813 02:33:05.497"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:33:08.742" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210813 02:33:08.741" endtime="20210813 02:33:08.742"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:33:08.742" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210813 02:33:08.742" endtime="20210813 02:33:08.742"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210813 02:33:08.743" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210813 02:33:08.743" endtime="20210813 02:33:08.743"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210813 02:33:08.743" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210813 02:33:08.743" endtime="20210813 02:33:08.743"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210813 02:33:08.745" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210813 02:33:08.745" level="INFO">${version_file_contents} = #Fri Aug 13 02:28:48 UTC 2021
cTime=1628821715924
clusterID=CID-012bb4f6-3d73-4392-8f3f-0999a08b2827
omUuid=3d8bfc82-7e80-49cd-a48b-e34904a94f5c
nodeType=OM
scmUuid=a8972604-29b6-4606-95c4-d49d5a3db17...</msg>
<status status="PASS" starttime="20210813 02:33:08.744" endtime="20210813 02:33:08.745"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210813 02:33:08.745" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210813 02:33:08.745" endtime="20210813 02:33:08.745"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:33:08.746" endtime="20210813 02:33:08.746"/>
</kw>
<status status="PASS" starttime="20210813 02:33:08.744" endtime="20210813 02:33:08.746"/>
</kw>
<status status="PASS" starttime="20210813 02:33:08.744" endtime="20210813 02:33:08.746"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:33:08.741" endtime="20210813 02:33:08.746"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210813 02:33:08.695" endtime="20210813 02:33:08.747"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:33:11.971" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210813 02:33:11.971" endtime="20210813 02:33:11.971"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:33:11.972" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210813 02:33:11.971" endtime="20210813 02:33:11.972"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210813 02:33:11.972" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210813 02:33:11.972" endtime="20210813 02:33:11.972"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210813 02:33:11.973" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210813 02:33:11.973" endtime="20210813 02:33:11.973"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210813 02:33:11.974" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210813 02:33:11.974" level="INFO">${version_file_contents} = #Fri Aug 13 02:28:50 UTC 2021
cTime=1628821713848
clusterID=CID-012bb4f6-3d73-4392-8f3f-0999a08b2827
omUuid=7f10cf4d-fc50-4193-83ee-710669caf30c
nodeType=OM
scmUuid=a8972604-29b6-4606-95c4-d49d5a3db17...</msg>
<status status="PASS" starttime="20210813 02:33:11.974" endtime="20210813 02:33:11.974"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210813 02:33:11.975" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210813 02:33:11.974" endtime="20210813 02:33:11.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:33:11.975" endtime="20210813 02:33:11.975"/>
</kw>
<status status="PASS" starttime="20210813 02:33:11.973" endtime="20210813 02:33:11.975"/>
</kw>
<status status="PASS" starttime="20210813 02:33:11.973" endtime="20210813 02:33:11.976"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:33:11.970" endtime="20210813 02:33:11.976"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210813 02:33:11.926" endtime="20210813 02:33:11.976"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:33:15.153" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210813 02:33:15.152" endtime="20210813 02:33:15.153"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:33:15.153" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210813 02:33:15.153" endtime="20210813 02:33:15.154"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210813 02:33:15.154" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210813 02:33:15.154" endtime="20210813 02:33:15.154"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210813 02:33:15.155" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210813 02:33:15.154" endtime="20210813 02:33:15.155"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210813 02:33:15.156" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210813 02:33:15.156" level="INFO">${version_file_contents} = #Fri Aug 13 02:28:50 UTC 2021
cTime=1628821714338
clusterID=CID-012bb4f6-3d73-4392-8f3f-0999a08b2827
omUuid=d729e250-28a3-45fc-83ee-fbe301a6d73c
nodeType=OM
scmUuid=a8972604-29b6-4606-95c4-d49d5a3db17...</msg>
<status status="PASS" starttime="20210813 02:33:15.155" endtime="20210813 02:33:15.156"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210813 02:33:15.157" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210813 02:33:15.156" endtime="20210813 02:33:15.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:33:15.157" endtime="20210813 02:33:15.157"/>
</kw>
<status status="PASS" starttime="20210813 02:33:15.155" endtime="20210813 02:33:15.157"/>
</kw>
<status status="PASS" starttime="20210813 02:33:15.155" endtime="20210813 02:33:15.158"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:33:15.152" endtime="20210813 02:33:15.158"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210813 02:33:15.106" endtime="20210813 02:33:15.159"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210813 02:33:18.317" level="INFO">${random} = 57438</msg>
<status status="PASS" starttime="20210813 02:33:18.317" endtime="20210813 02:33:18.317"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:33:18.322" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-57438 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:33:21.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:33:21.966" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:18.319" endtime="20210813 02:33:21.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:33:21.967" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:21.966" endtime="20210813 02:33:21.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:33:21.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:33:21.967" endtime="20210813 02:33:21.968"/>
</kw>
<status status="PASS" starttime="20210813 02:33:18.318" endtime="20210813 02:33:21.968"/>
</kw>
<msg timestamp="20210813 02:33:21.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:33:18.318" endtime="20210813 02:33:21.968"/>
</kw>
<msg timestamp="20210813 02:33:21.968" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:18.317" endtime="20210813 02:33:21.968"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:33:21.969" endtime="20210813 02:33:21.969"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:33:18.316" endtime="20210813 02:33:21.969"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210813 02:33:18.272" endtime="20210813 02:33:21.970"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210813 02:33:25.110" level="INFO">${random} = 13930</msg>
<status status="PASS" starttime="20210813 02:33:25.109" endtime="20210813 02:33:25.110"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:33:25.115" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-13930 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:33:28.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:33:28.694" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:25.112" endtime="20210813 02:33:28.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:33:28.695" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:28.694" endtime="20210813 02:33:28.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:33:28.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:33:28.695" endtime="20210813 02:33:28.696"/>
</kw>
<status status="PASS" starttime="20210813 02:33:25.111" endtime="20210813 02:33:28.696"/>
</kw>
<msg timestamp="20210813 02:33:28.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:33:25.111" endtime="20210813 02:33:28.696"/>
</kw>
<msg timestamp="20210813 02:33:28.696" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:25.110" endtime="20210813 02:33:28.696"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:33:28.696" endtime="20210813 02:33:28.697"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:33:25.109" endtime="20210813 02:33:28.697"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210813 02:33:25.064" endtime="20210813 02:33:28.698"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:30:40.573" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210813 02:30:40.573" endtime="20210813 02:30:40.573"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:30:40.574" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210813 02:30:40.574" endtime="20210813 02:30:40.574"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210813 02:30:40.574" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210813 02:30:40.574" endtime="20210813 02:30:40.574"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210813 02:30:40.575" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210813 02:30:40.575" endtime="20210813 02:30:40.575"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210813 02:30:40.576" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210813 02:30:40.576" level="INFO">${version_file_contents} = #Fri Aug 13 02:30:07 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628821790654
clusterID=a1c97ecd-2159-413d-a686-3ec59cd6b155
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210813 02:30:40.576" endtime="20210813 02:30:40.576"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210813 02:30:40.577" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210813 02:30:40.576" endtime="20210813 02:30:40.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:30:40.577" endtime="20210813 02:30:40.577"/>
</kw>
<status status="PASS" starttime="20210813 02:30:40.575" endtime="20210813 02:30:40.577"/>
</kw>
<status status="PASS" starttime="20210813 02:30:40.575" endtime="20210813 02:30:40.578"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:30:40.572" endtime="20210813 02:30:40.578"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210813 02:30:40.528" endtime="20210813 02:30:40.578"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:33:31.826" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:33:33.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:33:33.755" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:31.823" endtime="20210813 02:33:33.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:33:33.757" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:33.756" endtime="20210813 02:33:33.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:33:33.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:33:33.757" endtime="20210813 02:33:33.757"/>
</kw>
<status status="PASS" starttime="20210813 02:33:31.823" endtime="20210813 02:33:33.758"/>
</kw>
<msg timestamp="20210813 02:33:33.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:33:31.822" endtime="20210813 02:33:33.758"/>
</kw>
<msg timestamp="20210813 02:33:33.758" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:31.822" endtime="20210813 02:33:33.758"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:33:33.758" endtime="20210813 02:33:33.759"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:33:33.762" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:33:35.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:33:35.763" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:33.760" endtime="20210813 02:33:35.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:33:35.764" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:35.764" endtime="20210813 02:33:35.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:33:35.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:33:35.764" endtime="20210813 02:33:35.765"/>
</kw>
<status status="PASS" starttime="20210813 02:33:33.759" endtime="20210813 02:33:35.765"/>
</kw>
<msg timestamp="20210813 02:33:35.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:33:33.759" endtime="20210813 02:33:35.765"/>
</kw>
<msg timestamp="20210813 02:33:35.766" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:33.759" endtime="20210813 02:33:35.766"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:33:35.766" endtime="20210813 02:33:35.766"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:33:35.770" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:33:39.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:33:39.823" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:35.768" endtime="20210813 02:33:39.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:33:39.824" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:39.824" endtime="20210813 02:33:39.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:33:39.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:33:39.824" endtime="20210813 02:33:39.825"/>
</kw>
<status status="PASS" starttime="20210813 02:33:35.767" endtime="20210813 02:33:39.825"/>
</kw>
<msg timestamp="20210813 02:33:39.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:33:35.767" endtime="20210813 02:33:39.825"/>
</kw>
<msg timestamp="20210813 02:33:39.826" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:35.766" endtime="20210813 02:33:39.826"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:33:39.826" endtime="20210813 02:33:39.826"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:33:31.821" endtime="20210813 02:33:39.826"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210813 02:33:31.777" endtime="20210813 02:33:39.827"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210813 02:33:42.969" level="INFO">${random} = 10675</msg>
<status status="PASS" starttime="20210813 02:33:42.968" endtime="20210813 02:33:42.969"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:33:42.973" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-10675 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:33:46.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:33:46.402" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:42.970" endtime="20210813 02:33:46.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:33:46.404" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:46.403" endtime="20210813 02:33:46.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:33:46.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:33:46.404" endtime="20210813 02:33:46.404"/>
</kw>
<status status="PASS" starttime="20210813 02:33:42.970" endtime="20210813 02:33:46.404"/>
</kw>
<msg timestamp="20210813 02:33:46.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:33:42.969" endtime="20210813 02:33:46.405"/>
</kw>
<msg timestamp="20210813 02:33:46.405" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:33:42.969" endtime="20210813 02:33:46.405"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:33:46.405" endtime="20210813 02:33:46.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:33:42.968" endtime="20210813 02:33:46.406"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210813 02:33:42.924" endtime="20210813 02:33:46.407"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:30:43.764" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210813 02:30:43.763" endtime="20210813 02:30:43.764"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:30:43.764" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210813 02:30:43.764" endtime="20210813 02:30:43.764"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210813 02:30:43.765" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210813 02:30:43.765" endtime="20210813 02:30:43.765"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210813 02:30:43.765" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210813 02:30:43.765" endtime="20210813 02:30:43.765"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210813 02:30:43.767" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210813 02:30:43.767" level="INFO">${version_file_contents} = #Fri Aug 13 02:30:06 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628821788119
clusterID=9e7ca013-2c14-47ea-84bd-f86ade51126f
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210813 02:30:43.766" endtime="20210813 02:30:43.767"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210813 02:30:43.767" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210813 02:30:43.767" endtime="20210813 02:30:43.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:30:43.768" endtime="20210813 02:30:43.768"/>
</kw>
<status status="PASS" starttime="20210813 02:30:43.766" endtime="20210813 02:30:43.768"/>
</kw>
<status status="PASS" starttime="20210813 02:30:43.766" endtime="20210813 02:30:43.768"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:30:43.763" endtime="20210813 02:30:43.768"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210813 02:30:43.717" endtime="20210813 02:30:43.769"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:30:47.013" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210813 02:30:47.013" endtime="20210813 02:30:47.013"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:30:47.014" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210813 02:30:47.013" endtime="20210813 02:30:47.014"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210813 02:30:47.014" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210813 02:30:47.014" endtime="20210813 02:30:47.014"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210813 02:30:47.015" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210813 02:30:47.014" endtime="20210813 02:30:47.015"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210813 02:30:47.016" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210813 02:30:47.016" level="INFO">${version_file_contents} = #Fri Aug 13 02:28:48 UTC 2021
cTime=1628821715924
clusterID=CID-012bb4f6-3d73-4392-8f3f-0999a08b2827
omUuid=3d8bfc82-7e80-49cd-a48b-e34904a94f5c
nodeType=OM
scmUuid=a8972604-29b6-4606-95c4-d49d5a3db17...</msg>
<status status="PASS" starttime="20210813 02:30:47.015" endtime="20210813 02:30:47.016"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210813 02:30:47.017" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210813 02:30:47.016" endtime="20210813 02:30:47.017"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:30:47.017" endtime="20210813 02:30:47.017"/>
</kw>
<status status="PASS" starttime="20210813 02:30:47.015" endtime="20210813 02:30:47.017"/>
</kw>
<status status="PASS" starttime="20210813 02:30:47.015" endtime="20210813 02:30:47.017"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:30:47.012" endtime="20210813 02:30:47.017"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210813 02:30:46.967" endtime="20210813 02:30:47.018"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:30:50.231" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210813 02:30:50.230" endtime="20210813 02:30:50.231"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:30:50.231" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210813 02:30:50.231" endtime="20210813 02:30:50.232"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210813 02:30:50.232" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210813 02:30:50.232" endtime="20210813 02:30:50.232"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210813 02:30:50.232" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210813 02:30:50.232" endtime="20210813 02:30:50.233"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210813 02:30:50.234" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210813 02:30:50.234" level="INFO">${version_file_contents} = #Fri Aug 13 02:28:50 UTC 2021
cTime=1628821713848
clusterID=CID-012bb4f6-3d73-4392-8f3f-0999a08b2827
omUuid=7f10cf4d-fc50-4193-83ee-710669caf30c
nodeType=OM
scmUuid=a8972604-29b6-4606-95c4-d49d5a3db17...</msg>
<status status="PASS" starttime="20210813 02:30:50.233" endtime="20210813 02:30:50.234"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210813 02:30:50.234" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210813 02:30:50.234" endtime="20210813 02:30:50.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:30:50.235" endtime="20210813 02:30:50.235"/>
</kw>
<status status="PASS" starttime="20210813 02:30:50.233" endtime="20210813 02:30:50.235"/>
</kw>
<status status="PASS" starttime="20210813 02:30:50.233" endtime="20210813 02:30:50.235"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:30:50.230" endtime="20210813 02:30:50.235"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210813 02:30:50.186" endtime="20210813 02:30:50.236"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:30:53.432" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210813 02:30:53.431" endtime="20210813 02:30:53.432"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:30:53.433" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210813 02:30:53.432" endtime="20210813 02:30:53.433"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210813 02:30:53.433" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210813 02:30:53.433" endtime="20210813 02:30:53.433"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210813 02:30:53.434" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210813 02:30:53.433" endtime="20210813 02:30:53.434"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210813 02:30:53.435" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210813 02:30:53.435" level="INFO">${version_file_contents} = #Fri Aug 13 02:28:50 UTC 2021
cTime=1628821714338
clusterID=CID-012bb4f6-3d73-4392-8f3f-0999a08b2827
omUuid=d729e250-28a3-45fc-83ee-fbe301a6d73c
nodeType=OM
scmUuid=a8972604-29b6-4606-95c4-d49d5a3db17...</msg>
<status status="PASS" starttime="20210813 02:30:53.434" endtime="20210813 02:30:53.435"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210813 02:30:53.436" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210813 02:30:53.435" endtime="20210813 02:30:53.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:30:53.436" endtime="20210813 02:30:53.436"/>
</kw>
<status status="PASS" starttime="20210813 02:30:53.434" endtime="20210813 02:30:53.436"/>
</kw>
<status status="PASS" starttime="20210813 02:30:53.434" endtime="20210813 02:30:53.436"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:30:53.431" endtime="20210813 02:30:53.436"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210813 02:30:53.386" endtime="20210813 02:30:53.437"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210813 02:30:56.604" level="INFO">${random} = 56784</msg>
<status status="PASS" starttime="20210813 02:30:56.604" endtime="20210813 02:30:56.605"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:30:56.610" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-56784 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:31:00.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:31:00.552" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:30:56.606" endtime="20210813 02:31:00.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:31:00.553" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:31:00.552" endtime="20210813 02:31:00.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:31:00.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:31:00.553" endtime="20210813 02:31:00.554"/>
</kw>
<status status="PASS" starttime="20210813 02:30:56.606" endtime="20210813 02:31:00.554"/>
</kw>
<msg timestamp="20210813 02:31:00.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:30:56.605" endtime="20210813 02:31:00.554"/>
</kw>
<msg timestamp="20210813 02:31:00.554" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:30:56.605" endtime="20210813 02:31:00.554"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:31:00.554" endtime="20210813 02:31:00.555"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:30:56.603" endtime="20210813 02:31:00.555"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210813 02:30:56.559" endtime="20210813 02:31:00.556"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:31:03.714" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:31:05.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:31:05.823" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:31:03.711" endtime="20210813 02:31:05.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:31:05.824" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:31:05.823" endtime="20210813 02:31:05.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:31:05.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:31:05.824" endtime="20210813 02:31:05.829"/>
</kw>
<status status="PASS" starttime="20210813 02:31:03.711" endtime="20210813 02:31:05.829"/>
</kw>
<msg timestamp="20210813 02:31:05.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:31:03.711" endtime="20210813 02:31:05.830"/>
</kw>
<msg timestamp="20210813 02:31:05.830" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:31:03.710" endtime="20210813 02:31:05.830"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:31:05.830" endtime="20210813 02:31:05.830"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:31:05.834" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:31:08.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:31:08.296" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:31:05.832" endtime="20210813 02:31:08.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:31:08.297" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:31:08.296" endtime="20210813 02:31:08.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:31:08.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:31:08.297" endtime="20210813 02:31:08.298"/>
</kw>
<status status="PASS" starttime="20210813 02:31:05.831" endtime="20210813 02:31:08.298"/>
</kw>
<msg timestamp="20210813 02:31:08.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:31:05.831" endtime="20210813 02:31:08.298"/>
</kw>
<msg timestamp="20210813 02:31:08.299" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:31:05.831" endtime="20210813 02:31:08.299"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:31:08.299" endtime="20210813 02:31:08.299"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:31:08.302" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:31:13.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:31:13.070" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:31:08.301" endtime="20210813 02:31:13.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:31:13.071" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:31:13.070" endtime="20210813 02:31:13.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:31:13.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:31:13.071" endtime="20210813 02:31:13.071"/>
</kw>
<status status="PASS" starttime="20210813 02:31:08.300" endtime="20210813 02:31:13.072"/>
</kw>
<msg timestamp="20210813 02:31:13.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:31:08.300" endtime="20210813 02:31:13.072"/>
</kw>
<msg timestamp="20210813 02:31:13.072" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:31:08.299" endtime="20210813 02:31:13.072"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:31:13.072" endtime="20210813 02:31:13.073"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:31:03.709" endtime="20210813 02:31:13.073"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210813 02:31:03.665" endtime="20210813 02:31:13.075"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210813 02:31:16.232" level="INFO">${random} = 67437</msg>
<status status="PASS" starttime="20210813 02:31:16.232" endtime="20210813 02:31:16.232"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210813 02:31:16.237" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-67437 2&gt;&amp;1'.</msg>
<msg timestamp="20210813 02:31:19.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210813 02:31:19.925" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:31:16.234" endtime="20210813 02:31:19.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210813 02:31:19.926" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:31:19.925" endtime="20210813 02:31:19.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210813 02:31:19.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210813 02:31:19.926" endtime="20210813 02:31:19.927"/>
</kw>
<status status="PASS" starttime="20210813 02:31:16.234" endtime="20210813 02:31:19.927"/>
</kw>
<msg timestamp="20210813 02:31:19.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210813 02:31:16.233" endtime="20210813 02:31:19.927"/>
</kw>
<msg timestamp="20210813 02:31:19.927" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210813 02:31:16.233" endtime="20210813 02:31:19.927"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:31:19.927" endtime="20210813 02:31:19.928"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:31:16.231" endtime="20210813 02:31:19.928"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210813 02:31:16.188" endtime="20210813 02:31:19.929"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:30:34.155" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210813 02:30:34.155" endtime="20210813 02:30:34.155"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210813 02:30:34.156" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210813 02:30:34.156" endtime="20210813 02:30:34.156"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210813 02:30:34.156" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210813 02:30:34.156" endtime="20210813 02:30:34.156"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210813 02:30:34.157" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210813 02:30:34.157" endtime="20210813 02:30:34.157"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210813 02:30:34.158" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210813 02:30:34.158" level="INFO">${version_file_contents} = #Fri Aug 13 02:28:36 UTC 2021
cTime=1628821716012
clusterID=CID-012bb4f6-3d73-4392-8f3f-0999a08b2827
nodeType=SCM
scmUuid=a8972604-29b6-4606-95c4-d49d5a3db175
layoutVersion=0
</msg>
<status status="PASS" starttime="20210813 02:30:34.158" endtime="20210813 02:30:34.158"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210813 02:30:34.159" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210813 02:30:34.158" endtime="20210813 02:30:34.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210813 02:30:34.159" endtime="20210813 02:30:34.159"/>
</kw>
<status status="PASS" starttime="20210813 02:30:34.157" endtime="20210813 02:30:34.159"/>
</kw>
<status status="PASS" starttime="20210813 02:30:34.157" endtime="20210813 02:30:34.159"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210813 02:30:34.154" endtime="20210813 02:30:34.160"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210813 02:30:34.107" endtime="20210813 02:30:34.160"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="137501"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="163968"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
