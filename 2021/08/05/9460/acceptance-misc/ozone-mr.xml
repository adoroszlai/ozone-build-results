<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210805 21:21:53.205" rpa="false" schemaversion="2">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite id="s1-s1-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:03:58.676" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:03:58.676" endtime="20210805 21:03:58.676"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:03:58.677" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:03:58.676" endtime="20210805 21:03:58.677"/>
</kw>
<status status="PASS" starttime="20210805 21:03:58.675" endtime="20210805 21:03:58.677"/>
</kw>
<msg timestamp="20210805 21:03:58.677" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:03:58.675" endtime="20210805 21:03:58.677"/>
</kw>
<status status="PASS" starttime="20210805 21:03:58.674" endtime="20210805 21:03:58.677"/>
</kw>
<msg timestamp="20210805 21:03:58.677" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:03:58.674" endtime="20210805 21:03:58.677"/>
</kw>
<msg timestamp="20210805 21:03:58.678" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:03:58.673" endtime="20210805 21:03:58.678"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:03:58.678" level="INFO">${random} = 65691</msg>
<status status="PASS" starttime="20210805 21:03:58.678" endtime="20210805 21:03:58.678"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:03:58.683" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-65691 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:04:02.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:04:02.184" level="INFO">${output} = 2021-08-05 21:04:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:04:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 ...</msg>
<status status="PASS" starttime="20210805 21:03:58.679" endtime="20210805 21:04:02.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:04:02.185" level="INFO">2021-08-05 21:04:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:04:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 21:04:00 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-08-05 21:04:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210805 21:04:02.184" endtime="20210805 21:04:02.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:04:02.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:04:02.185" endtime="20210805 21:04:02.185"/>
</kw>
<status status="PASS" starttime="20210805 21:03:58.679" endtime="20210805 21:04:02.185"/>
</kw>
<msg timestamp="20210805 21:04:02.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:03:58.679" endtime="20210805 21:04:02.186"/>
</kw>
<msg timestamp="20210805 21:04:02.186" level="INFO">${result} = 2021-08-05 21:04:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:04:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 ...</msg>
<status status="PASS" starttime="20210805 21:03:58.678" endtime="20210805 21:04:02.186"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:04:02.189" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:04:03.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:04:03.855" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-08-05 21:04 o3fs://bucket1.volume1.om/ozone-65691
dr...</msg>
<status status="PASS" starttime="20210805 21:04:02.187" endtime="20210805 21:04:03.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:04:03.856" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-08-05 21:04 o3fs://bucket1.volume1.om/ozone-65691
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:03 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210805 21:04:03.855" endtime="20210805 21:04:03.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:04:03.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:04:03.856" endtime="20210805 21:04:03.856"/>
</kw>
<status status="PASS" starttime="20210805 21:04:02.187" endtime="20210805 21:04:03.857"/>
</kw>
<msg timestamp="20210805 21:04:03.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:04:02.187" endtime="20210805 21:04:03.857"/>
</kw>
<msg timestamp="20210805 21:04:03.857" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-08-05 21:04 o3fs://bucket1.volume1.om/ozone-65691
dr...</msg>
<status status="PASS" starttime="20210805 21:04:02.186" endtime="20210805 21:04:03.857"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:04:03.857" endtime="20210805 21:04:03.857"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:04:03.860" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-65691 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:04:06.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:04:06.648" level="INFO">${output} = 2021-08-05 21:04:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:04:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 ...</msg>
<status status="PASS" starttime="20210805 21:04:03.859" endtime="20210805 21:04:06.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:04:06.649" level="INFO">2021-08-05 21:04:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:04:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 21:04:05 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20210805 21:04:06.648" endtime="20210805 21:04:06.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:04:06.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:04:06.649" endtime="20210805 21:04:06.650"/>
</kw>
<status status="PASS" starttime="20210805 21:04:03.858" endtime="20210805 21:04:06.650"/>
</kw>
<msg timestamp="20210805 21:04:06.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:04:03.858" endtime="20210805 21:04:06.650"/>
</kw>
<msg timestamp="20210805 21:04:06.651" level="INFO">${result} = 2021-08-05 21:04:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:04:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 ...</msg>
<status status="PASS" starttime="20210805 21:04:03.858" endtime="20210805 21:04:06.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:04:06.652" endtime="20210805 21:04:06.652"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 21:03:58.672" endtime="20210805 21:04:06.652"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210805 21:03:58.626" endtime="20210805 21:04:06.653"/>
</suite>
<suite id="s1-s1-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:04:10.915" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:04:10.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:04:10.921" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:04:10.912" endtime="20210805 21:04:10.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:04:10.922" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:04:10.921" endtime="20210805 21:04:10.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:04:10.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:04:10.922" endtime="20210805 21:04:10.922"/>
</kw>
<status status="PASS" starttime="20210805 21:04:10.911" endtime="20210805 21:04:10.923"/>
</kw>
<msg timestamp="20210805 21:04:10.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:04:10.911" endtime="20210805 21:04:10.923"/>
</kw>
<msg timestamp="20210805 21:04:10.923" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:04:10.911" endtime="20210805 21:04:10.923"/>
</kw>
<msg timestamp="20210805 21:04:10.923" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:04:10.910" endtime="20210805 21:04:10.923"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:04:10.927" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:04:10.927" endtime="20210805 21:04:10.927"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:04:10.928" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:04:10.928" endtime="20210805 21:04:10.928"/>
</kw>
<status status="PASS" starttime="20210805 21:04:10.927" endtime="20210805 21:04:10.928"/>
</kw>
<msg timestamp="20210805 21:04:10.928" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:04:10.926" endtime="20210805 21:04:10.928"/>
</kw>
<status status="PASS" starttime="20210805 21:04:10.926" endtime="20210805 21:04:10.928"/>
</kw>
<msg timestamp="20210805 21:04:10.929" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:04:10.925" endtime="20210805 21:04:10.929"/>
</kw>
<msg timestamp="20210805 21:04:10.929" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:04:10.923" endtime="20210805 21:04:10.929"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:04:10.932" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:04:53.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:04:53.668" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:04:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:04:12 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210805 21:04:10.930" endtime="20210805 21:04:53.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:04:53.669" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:04:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:04:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 21:04:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-08-05 21:04:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-05 21:04:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-08-05 21:04:16 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-08-05 21:04:16 INFO  JobSubmitter:198 - number of splits:3
2021-08-05 21:04:17 INFO  JobSubmitter:287 - Submitting tokens for job: job_1628197368804_0001
2021-08-05 21:04:17 INFO  YarnClientImpl:273 - Submitted application application_1628197368804_0001
2021-08-05 21:04:17 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1628197368804_0001/
2021-08-05 21:04:17 INFO  Job:1339 - Running job: job_1628197368804_0001
2021-08-05 21:04:26 INFO  Job:1360 - Job job_1628197368804_0001 running in uber mode : false
2021-08-05 21:04:26 INFO  Job:1367 -  map 0% reduce 0%
2021-08-05 21:04:32 INFO  Job:1367 -  map 33% reduce 0%
2021-08-05 21:04:37 INFO  Job:1367 -  map 67% reduce 0%
2021-08-05 21:04:42 INFO  Job:1367 -  map 100% reduce 0%
2021-08-05 21:04:49 INFO  Job:1367 -  map 100% reduce 100%
2021-08-05 21:04:52 INFO  Job:1378 - Job job_1628197368804_0001 completed successfully
2021-08-05 21:04:53 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=632765
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39004
		Total time spent by all reduces in occupied slots (ms)=23276
		Total time spent by all map tasks (ms)=9751
		Total time spent by all reduce tasks (ms)=5819
		Total vcore-milliseconds taken by all map tasks=9751
		Total vcore-milliseconds taken by all reduce tasks=5819
		Total megabyte-milliseconds taken by all map tasks=39940096
		Total megabyte-milliseconds taken by all reduce tasks=23834624
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=563
		CPU time spent (ms)=6740
		Physical memory (bytes) snapshot=1317040128
		Virtual memory (bytes) snapshot=15831298048
		Total committed heap usage (bytes)=1065877504
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.232 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210805 21:04:53.668" endtime="20210805 21:04:53.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:04:53.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:04:53.669" endtime="20210805 21:04:53.670"/>
</kw>
<status status="PASS" starttime="20210805 21:04:10.930" endtime="20210805 21:04:53.670"/>
</kw>
<msg timestamp="20210805 21:04:53.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:04:10.929" endtime="20210805 21:04:53.670"/>
</kw>
<msg timestamp="20210805 21:04:53.671" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:04:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:04:12 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210805 21:04:10.929" endtime="20210805 21:04:53.671"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:04:53.671" endtime="20210805 21:04:53.671"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:04:10.909" endtime="20210805 21:04:53.671"/>
</test>
<test id="s1-s1-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:04:53.675" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:04:53.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:04:53.681" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:04:53.674" endtime="20210805 21:04:53.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:04:53.682" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:04:53.681" endtime="20210805 21:04:53.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:04:53.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:04:53.682" endtime="20210805 21:04:53.683"/>
</kw>
<status status="PASS" starttime="20210805 21:04:53.673" endtime="20210805 21:04:53.683"/>
</kw>
<msg timestamp="20210805 21:04:53.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:04:53.673" endtime="20210805 21:04:53.683"/>
</kw>
<msg timestamp="20210805 21:04:53.683" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:04:53.673" endtime="20210805 21:04:53.683"/>
</kw>
<msg timestamp="20210805 21:04:53.683" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:04:53.672" endtime="20210805 21:04:53.684"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:04:53.684" level="INFO">${random} = 9k2WbPHu</msg>
<status status="PASS" starttime="20210805 21:04:53.684" endtime="20210805 21:04:53.684"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:04:53.687" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:04:53.687" endtime="20210805 21:04:53.687"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:04:53.688" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:04:53.687" endtime="20210805 21:04:53.688"/>
</kw>
<status status="PASS" starttime="20210805 21:04:53.686" endtime="20210805 21:04:53.688"/>
</kw>
<msg timestamp="20210805 21:04:53.688" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:04:53.686" endtime="20210805 21:04:53.688"/>
</kw>
<status status="PASS" starttime="20210805 21:04:53.685" endtime="20210805 21:04:53.688"/>
</kw>
<msg timestamp="20210805 21:04:53.688" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:04:53.685" endtime="20210805 21:04:53.688"/>
</kw>
<msg timestamp="20210805 21:04:53.689" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:04:53.684" endtime="20210805 21:04:53.689"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:04:53.692" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:04:53.691" endtime="20210805 21:04:53.692"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:04:53.692" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:04:53.692" endtime="20210805 21:04:53.692"/>
</kw>
<status status="PASS" starttime="20210805 21:04:53.691" endtime="20210805 21:04:53.692"/>
</kw>
<msg timestamp="20210805 21:04:53.693" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:04:53.691" endtime="20210805 21:04:53.693"/>
</kw>
<status status="PASS" starttime="20210805 21:04:53.690" endtime="20210805 21:04:53.693"/>
</kw>
<msg timestamp="20210805 21:04:53.693" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210805 21:04:53.689" endtime="20210805 21:04:53.693"/>
</kw>
<msg timestamp="20210805 21:04:53.693" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210805 21:04:53.689" endtime="20210805 21:04:53.693"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:04:53.696" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:04:53.696" endtime="20210805 21:04:53.696"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:04:53.697" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:04:53.696" endtime="20210805 21:04:53.697"/>
</kw>
<status status="PASS" starttime="20210805 21:04:53.695" endtime="20210805 21:04:53.697"/>
</kw>
<msg timestamp="20210805 21:04:53.697" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:04:53.695" endtime="20210805 21:04:53.697"/>
</kw>
<status status="PASS" starttime="20210805 21:04:53.694" endtime="20210805 21:04:53.697"/>
</kw>
<msg timestamp="20210805 21:04:53.697" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-9k2WbPHu.txt</msg>
<status status="PASS" starttime="20210805 21:04:53.694" endtime="20210805 21:04:53.697"/>
</kw>
<msg timestamp="20210805 21:04:53.697" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-9k2WbPHu.txt</msg>
<status status="PASS" starttime="20210805 21:04:53.693" endtime="20210805 21:04:53.697"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:04:53.701" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-9k2WbPHu.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:05:31.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:05:31.205" level="INFO">${output} = 2021-08-05 21:04:55 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-08-05 21:04:55 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210805 21:04:53.699" endtime="20210805 21:05:31.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:05:31.206" level="INFO">2021-08-05 21:04:55 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-08-05 21:04:55 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 21:04:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:04:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 21:04:55 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-08-05 21:04:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-05 21:04:56 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-08-05 21:04:56 INFO  JobSubmitter:198 - number of splits:3
2021-08-05 21:04:57 INFO  JobSubmitter:287 - Submitting tokens for job: job_1628197368804_0002
2021-08-05 21:04:57 INFO  YarnClientImpl:273 - Submitted application application_1628197368804_0002
2021-08-05 21:04:57 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1628197368804_0002/
2021-08-05 21:04:57 INFO  Job:1339 - Running job: job_1628197368804_0002
2021-08-05 21:05:04 INFO  Job:1360 - Job job_1628197368804_0002 running in uber mode : false
2021-08-05 21:05:04 INFO  Job:1367 -  map 0% reduce 0%
2021-08-05 21:05:11 INFO  Job:1367 -  map 33% reduce 0%
2021-08-05 21:05:15 INFO  Job:1367 -  map 67% reduce 0%
2021-08-05 21:05:20 INFO  Job:1367 -  map 100% reduce 0%
2021-08-05 21:05:27 INFO  Job:1367 -  map 100% reduce 100%
2021-08-05 21:05:30 INFO  Job:1378 - Job job_1628197368804_0002 completed successfully
2021-08-05 21:05:30 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=695619
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36784
		Total time spent by all reduces in occupied slots (ms)=23036
		Total time spent by all map tasks (ms)=9196
		Total time spent by all reduce tasks (ms)=5759
		Total vcore-milliseconds taken by all map tasks=9196
		Total vcore-milliseconds taken by all reduce tasks=5759
		Total megabyte-milliseconds taken by all map tasks=37666816
		Total megabyte-milliseconds taken by all reduce tasks=23588864
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=504
		CPU time spent (ms)=6780
		Physical memory (bytes) snapshot=1306664960
		Virtual memory (bytes) snapshot=15816110080
		Total committed heap usage (bytes)=1051197440
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210805 21:05:31.206" endtime="20210805 21:05:31.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:05:31.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:05:31.207" endtime="20210805 21:05:31.207"/>
</kw>
<status status="PASS" starttime="20210805 21:04:53.698" endtime="20210805 21:05:31.208"/>
</kw>
<msg timestamp="20210805 21:05:31.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:04:53.698" endtime="20210805 21:05:31.208"/>
</kw>
<msg timestamp="20210805 21:05:31.208" level="INFO">${output} = 2021-08-05 21:04:55 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-08-05 21:04:55 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210805 21:04:53.698" endtime="20210805 21:05:31.208"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:05:31.209" endtime="20210805 21:05:31.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:05:31.209" endtime="20210805 21:05:31.209"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:04:53.672" endtime="20210805 21:05:31.210"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210805 21:04:10.864" endtime="20210805 21:05:31.211"/>
</suite>
<suite id="s1-s1-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:05:35.556" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:05:35.556" endtime="20210805 21:05:35.556"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:05:35.557" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:05:35.557" endtime="20210805 21:05:35.557"/>
</kw>
<status status="PASS" starttime="20210805 21:05:35.556" endtime="20210805 21:05:35.561"/>
</kw>
<msg timestamp="20210805 21:05:35.561" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:05:35.555" endtime="20210805 21:05:35.561"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 21:05:35.561" endtime="20210805 21:05:35.562"/>
</kw>
<msg timestamp="20210805 21:05:35.562" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 21:05:35.561" endtime="20210805 21:05:35.562"/>
</kw>
<status status="PASS" starttime="20210805 21:05:35.555" endtime="20210805 21:05:35.562"/>
</kw>
<msg timestamp="20210805 21:05:35.562" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:05:35.554" endtime="20210805 21:05:35.562"/>
</kw>
<msg timestamp="20210805 21:05:35.562" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:05:35.553" endtime="20210805 21:05:35.562"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:05:35.563" level="INFO">${random} = 28112</msg>
<status status="PASS" starttime="20210805 21:05:35.563" endtime="20210805 21:05:35.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:05:35.570" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-28112 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:05:38.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:05:38.728" level="INFO">${output} = 2021-08-05 21:05:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:05:37 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 ...</msg>
<status status="PASS" starttime="20210805 21:05:35.565" endtime="20210805 21:05:38.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:05:38.729" level="INFO">2021-08-05 21:05:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:05:37 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 21:05:37 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-08-05 21:05:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210805 21:05:38.728" endtime="20210805 21:05:38.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:05:38.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:05:38.729" endtime="20210805 21:05:38.729"/>
</kw>
<status status="PASS" starttime="20210805 21:05:35.564" endtime="20210805 21:05:38.730"/>
</kw>
<msg timestamp="20210805 21:05:38.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:05:35.563" endtime="20210805 21:05:38.730"/>
</kw>
<msg timestamp="20210805 21:05:38.730" level="INFO">${result} = 2021-08-05 21:05:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:05:37 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 ...</msg>
<status status="PASS" starttime="20210805 21:05:35.563" endtime="20210805 21:05:38.730"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:05:38.733" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:05:40.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:05:40.267" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-08-05 21:05 ofs://om/volume1/bucket1/ozone-28112
-rw-...</msg>
<status status="PASS" starttime="20210805 21:05:38.731" endtime="20210805 21:05:40.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:05:40.268" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-08-05 21:05 ofs://om/volume1/bucket1/ozone-28112
-rw-rw-rw-   3 hadoop hadoop      14978 2021-08-05 21:04 ofs://om/volume1/bucket1/ozone-65691
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:03 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:05 ofs://om/volume1/bucket1/wordcount-9k2WbPHu.txt</msg>
<status status="PASS" starttime="20210805 21:05:40.267" endtime="20210805 21:05:40.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:05:40.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:05:40.268" endtime="20210805 21:05:40.268"/>
</kw>
<status status="PASS" starttime="20210805 21:05:38.731" endtime="20210805 21:05:40.269"/>
</kw>
<msg timestamp="20210805 21:05:40.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:05:38.731" endtime="20210805 21:05:40.269"/>
</kw>
<msg timestamp="20210805 21:05:40.269" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-08-05 21:05 ofs://om/volume1/bucket1/ozone-28112
-rw-...</msg>
<status status="PASS" starttime="20210805 21:05:38.730" endtime="20210805 21:05:40.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:05:40.269" endtime="20210805 21:05:40.270"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:05:40.273" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-28112 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:05:43.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:05:43.042" level="INFO">${output} = 2021-08-05 21:05:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:05:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 ...</msg>
<status status="PASS" starttime="20210805 21:05:40.271" endtime="20210805 21:05:43.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:05:43.044" level="INFO">2021-08-05 21:05:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:05:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 21:05:41 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20210805 21:05:43.043" endtime="20210805 21:05:43.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:05:43.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:05:43.044" endtime="20210805 21:05:43.045"/>
</kw>
<status status="PASS" starttime="20210805 21:05:40.270" endtime="20210805 21:05:43.045"/>
</kw>
<msg timestamp="20210805 21:05:43.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:05:40.270" endtime="20210805 21:05:43.045"/>
</kw>
<msg timestamp="20210805 21:05:43.046" level="INFO">${result} = 2021-08-05 21:05:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:05:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 ...</msg>
<status status="PASS" starttime="20210805 21:05:40.270" endtime="20210805 21:05:43.046"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:05:43.046" endtime="20210805 21:05:43.047"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 21:05:35.553" endtime="20210805 21:05:43.047"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210805 21:05:35.501" endtime="20210805 21:05:43.048"/>
</suite>
<suite id="s1-s1-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:05:47.275" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:05:47.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:05:47.280" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:05:47.272" endtime="20210805 21:05:47.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:05:47.281" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:05:47.280" endtime="20210805 21:05:47.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:05:47.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:05:47.281" endtime="20210805 21:05:47.281"/>
</kw>
<status status="PASS" starttime="20210805 21:05:47.271" endtime="20210805 21:05:47.281"/>
</kw>
<msg timestamp="20210805 21:05:47.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:05:47.271" endtime="20210805 21:05:47.282"/>
</kw>
<msg timestamp="20210805 21:05:47.282" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:05:47.270" endtime="20210805 21:05:47.282"/>
</kw>
<msg timestamp="20210805 21:05:47.282" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:05:47.270" endtime="20210805 21:05:47.282"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:05:47.286" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:05:47.286" endtime="20210805 21:05:47.286"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:05:47.287" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:05:47.286" endtime="20210805 21:05:47.287"/>
</kw>
<status status="PASS" starttime="20210805 21:05:47.285" endtime="20210805 21:05:47.287"/>
</kw>
<msg timestamp="20210805 21:05:47.287" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:05:47.285" endtime="20210805 21:05:47.287"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 21:05:47.287" endtime="20210805 21:05:47.288"/>
</kw>
<msg timestamp="20210805 21:05:47.288" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 21:05:47.287" endtime="20210805 21:05:47.288"/>
</kw>
<status status="PASS" starttime="20210805 21:05:47.284" endtime="20210805 21:05:47.288"/>
</kw>
<msg timestamp="20210805 21:05:47.288" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:05:47.284" endtime="20210805 21:05:47.288"/>
</kw>
<msg timestamp="20210805 21:05:47.288" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:05:47.282" endtime="20210805 21:05:47.288"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:05:47.291" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:06:22.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:06:22.646" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:05:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:05:49 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210805 21:05:47.290" endtime="20210805 21:06:22.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:06:22.647" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:05:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:05:49 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 21:05:49 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-08-05 21:05:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-05 21:05:52 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-08-05 21:05:53 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 21:05:53 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-08-05 21:05:53 INFO  JobSubmitter:198 - number of splits:3
2021-08-05 21:05:53 INFO  JobSubmitter:287 - Submitting tokens for job: job_1628197368804_0003
2021-08-05 21:05:53 INFO  YarnClientImpl:273 - Submitted application application_1628197368804_0003
2021-08-05 21:05:53 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1628197368804_0003/
2021-08-05 21:05:53 INFO  Job:1339 - Running job: job_1628197368804_0003
2021-08-05 21:06:00 INFO  Job:1360 - Job job_1628197368804_0003 running in uber mode : false
2021-08-05 21:06:00 INFO  Job:1367 -  map 0% reduce 0%
2021-08-05 21:06:06 INFO  Job:1367 -  map 33% reduce 0%
2021-08-05 21:06:10 INFO  Job:1367 -  map 67% reduce 0%
2021-08-05 21:06:14 INFO  Job:1367 -  map 100% reduce 0%
2021-08-05 21:06:20 INFO  Job:1367 -  map 100% reduce 100%
2021-08-05 21:06:21 INFO  Job:1378 - Job job_1628197368804_0003 completed successfully
2021-08-05 21:06:22 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=632561
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35340
		Total time spent by all reduces in occupied slots (ms)=22796
		Total time spent by all map tasks (ms)=8835
		Total time spent by all reduce tasks (ms)=5699
		Total vcore-milliseconds taken by all map tasks=8835
		Total vcore-milliseconds taken by all reduce tasks=5699
		Total megabyte-milliseconds taken by all map tasks=36188160
		Total megabyte-milliseconds taken by all reduce tasks=23343104
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=509
		CPU time spent (ms)=6490
		Physical memory (bytes) snapshot=1311547392
		Virtual memory (bytes) snapshot=15814463488
		Total committed heap usage (bytes)=1065877504
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.289 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210805 21:06:22.647" endtime="20210805 21:06:22.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:06:22.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:06:22.648" endtime="20210805 21:06:22.648"/>
</kw>
<status status="PASS" starttime="20210805 21:05:47.289" endtime="20210805 21:06:22.648"/>
</kw>
<msg timestamp="20210805 21:06:22.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:05:47.289" endtime="20210805 21:06:22.648"/>
</kw>
<msg timestamp="20210805 21:06:22.649" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:05:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:05:49 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210805 21:05:47.289" endtime="20210805 21:06:22.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:06:22.649" endtime="20210805 21:06:22.649"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:05:47.269" endtime="20210805 21:06:22.649"/>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:06:22.654" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:06:22.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:06:22.659" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:06:22.652" endtime="20210805 21:06:22.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:06:22.660" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:06:22.659" endtime="20210805 21:06:22.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:06:22.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:06:22.660" endtime="20210805 21:06:22.660"/>
</kw>
<status status="PASS" starttime="20210805 21:06:22.652" endtime="20210805 21:06:22.660"/>
</kw>
<msg timestamp="20210805 21:06:22.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:06:22.652" endtime="20210805 21:06:22.661"/>
</kw>
<msg timestamp="20210805 21:06:22.661" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:06:22.651" endtime="20210805 21:06:22.661"/>
</kw>
<msg timestamp="20210805 21:06:22.661" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210805 21:06:22.651" endtime="20210805 21:06:22.661"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:06:22.662" level="INFO">${random} = qypCj459</msg>
<status status="PASS" starttime="20210805 21:06:22.661" endtime="20210805 21:06:22.662"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:06:22.665" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:06:22.665" endtime="20210805 21:06:22.665"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:06:22.666" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:06:22.665" endtime="20210805 21:06:22.666"/>
</kw>
<status status="PASS" starttime="20210805 21:06:22.664" endtime="20210805 21:06:22.666"/>
</kw>
<msg timestamp="20210805 21:06:22.666" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:06:22.664" endtime="20210805 21:06:22.666"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 21:06:22.667" endtime="20210805 21:06:22.667"/>
</kw>
<msg timestamp="20210805 21:06:22.667" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 21:06:22.666" endtime="20210805 21:06:22.667"/>
</kw>
<status status="PASS" starttime="20210805 21:06:22.663" endtime="20210805 21:06:22.668"/>
</kw>
<msg timestamp="20210805 21:06:22.668" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:06:22.663" endtime="20210805 21:06:22.668"/>
</kw>
<msg timestamp="20210805 21:06:22.668" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:06:22.662" endtime="20210805 21:06:22.668"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:06:22.671" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:06:22.671" endtime="20210805 21:06:22.671"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:06:22.672" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:06:22.671" endtime="20210805 21:06:22.672"/>
</kw>
<status status="PASS" starttime="20210805 21:06:22.670" endtime="20210805 21:06:22.672"/>
</kw>
<msg timestamp="20210805 21:06:22.672" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:06:22.670" endtime="20210805 21:06:22.672"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:06:22.674" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210805 21:06:22.673" endtime="20210805 21:06:22.674"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:06:22.674" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210805 21:06:22.674" endtime="20210805 21:06:22.674"/>
</kw>
<status status="PASS" starttime="20210805 21:06:22.672" endtime="20210805 21:06:22.674"/>
</kw>
<msg timestamp="20210805 21:06:22.675" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210805 21:06:22.672" endtime="20210805 21:06:22.675"/>
</kw>
<status status="PASS" starttime="20210805 21:06:22.669" endtime="20210805 21:06:22.675"/>
</kw>
<msg timestamp="20210805 21:06:22.675" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210805 21:06:22.669" endtime="20210805 21:06:22.675"/>
</kw>
<msg timestamp="20210805 21:06:22.675" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210805 21:06:22.668" endtime="20210805 21:06:22.675"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:06:22.680" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:06:22.680" endtime="20210805 21:06:22.680"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:06:22.681" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:06:22.681" endtime="20210805 21:06:22.681"/>
</kw>
<status status="PASS" starttime="20210805 21:06:22.678" endtime="20210805 21:06:22.681"/>
</kw>
<msg timestamp="20210805 21:06:22.681" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:06:22.677" endtime="20210805 21:06:22.681"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:06:22.682" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210805 21:06:22.682" endtime="20210805 21:06:22.683"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:06:22.683" level="INFO">${result} = /wordcount-qypCj459.txt</msg>
<status status="PASS" starttime="20210805 21:06:22.683" endtime="20210805 21:06:22.683"/>
</kw>
<status status="PASS" starttime="20210805 21:06:22.682" endtime="20210805 21:06:22.683"/>
</kw>
<msg timestamp="20210805 21:06:22.683" level="INFO">${path_with_leading} = /wordcount-qypCj459.txt</msg>
<status status="PASS" starttime="20210805 21:06:22.681" endtime="20210805 21:06:22.683"/>
</kw>
<status status="PASS" starttime="20210805 21:06:22.677" endtime="20210805 21:06:22.684"/>
</kw>
<msg timestamp="20210805 21:06:22.684" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-qypCj459.txt</msg>
<status status="PASS" starttime="20210805 21:06:22.676" endtime="20210805 21:06:22.684"/>
</kw>
<msg timestamp="20210805 21:06:22.684" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-qypCj459.txt</msg>
<status status="PASS" starttime="20210805 21:06:22.675" endtime="20210805 21:06:22.684"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:06:22.687" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-qypCj459.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:06:56.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:06:56.246" level="INFO">${output} = 2021-08-05 21:06:24 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-08-05 21:06:24 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210805 21:06:22.685" endtime="20210805 21:06:56.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:06:56.248" level="INFO">2021-08-05 21:06:24 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-08-05 21:06:24 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 21:06:24 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:06:24 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-08-05 21:06:24 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-08-05 21:06:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-05 21:06:25 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-08-05 21:06:28 INFO  JobSubmitter:198 - number of splits:3
2021-08-05 21:06:28 INFO  JobSubmitter:287 - Submitting tokens for job: job_1628197368804_0004
2021-08-05 21:06:28 INFO  YarnClientImpl:273 - Submitted application application_1628197368804_0004
2021-08-05 21:06:28 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1628197368804_0004/
2021-08-05 21:06:28 INFO  Job:1339 - Running job: job_1628197368804_0004
2021-08-05 21:06:34 INFO  Job:1360 - Job job_1628197368804_0004 running in uber mode : false
2021-08-05 21:06:34 INFO  Job:1367 -  map 0% reduce 0%
2021-08-05 21:06:41 INFO  Job:1367 -  map 33% reduce 0%
2021-08-05 21:06:45 INFO  Job:1367 -  map 67% reduce 0%
2021-08-05 21:06:50 INFO  Job:1367 -  map 100% reduce 0%
2021-08-05 21:06:55 INFO  Job:1367 -  map 100% reduce 100%
2021-08-05 21:06:55 INFO  Job:1378 - Job job_1628197368804_0004 completed successfully
2021-08-05 21:06:55 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=695535
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36328
		Total time spent by all reduces in occupied slots (ms)=13088
		Total time spent by all map tasks (ms)=9082
		Total time spent by all reduce tasks (ms)=3272
		Total vcore-milliseconds taken by all map tasks=9082
		Total vcore-milliseconds taken by all reduce tasks=3272
		Total megabyte-milliseconds taken by all map tasks=37199872
		Total megabyte-milliseconds taken by all reduce tasks=13402112
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=506
		CPU time spent (ms)=6530
		Physical memory (bytes) snapshot=1292648448
		Virtual memory (bytes) snapshot=15810977792
		Total committed heap usage (bytes)=1054867456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210805 21:06:56.247" endtime="20210805 21:06:56.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:06:56.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:06:56.248" endtime="20210805 21:06:56.249"/>
</kw>
<status status="PASS" starttime="20210805 21:06:22.685" endtime="20210805 21:06:56.249"/>
</kw>
<msg timestamp="20210805 21:06:56.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:06:22.685" endtime="20210805 21:06:56.249"/>
</kw>
<msg timestamp="20210805 21:06:56.249" level="INFO">${output} = 2021-08-05 21:06:24 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-08-05 21:06:24 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210805 21:06:22.684" endtime="20210805 21:06:56.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:06:56.250" endtime="20210805 21:06:56.250"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:06:56.250" endtime="20210805 21:06:56.250"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:06:22.650" endtime="20210805 21:06:56.250"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210805 21:05:47.222" endtime="20210805 21:06:56.251"/>
</suite>
<suite id="s1-s1-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:03:26.020" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:03:28.593" level="INFO">${rc} = 255</msg>
<msg timestamp="20210805 21:03:28.593" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 21:03:26.014" endtime="20210805 21:03:28.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:03:28.594" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 21:03:28.593" endtime="20210805 21:03:28.594"/>
</kw>
<msg timestamp="20210805 21:03:28.594" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 21:03:26.012" endtime="20210805 21:03:28.594"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:03:28.598" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:03:30.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:03:30.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:03:28.597" endtime="20210805 21:03:30.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:03:30.636" level="INFO"/>
<status status="PASS" starttime="20210805 21:03:30.635" endtime="20210805 21:03:30.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:03:30.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:03:30.636" endtime="20210805 21:03:30.636"/>
</kw>
<status status="PASS" starttime="20210805 21:03:28.596" endtime="20210805 21:03:30.637"/>
</kw>
<msg timestamp="20210805 21:03:30.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:03:28.596" endtime="20210805 21:03:30.637"/>
</kw>
<msg timestamp="20210805 21:03:30.637" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210805 21:03:28.595" endtime="20210805 21:03:30.637"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:03:30.637" endtime="20210805 21:03:30.638"/>
</kw>
<status status="PASS" starttime="20210805 21:03:28.595" endtime="20210805 21:03:30.638"/>
</kw>
<status status="PASS" starttime="20210805 21:03:28.594" endtime="20210805 21:03:30.638"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:03:30.642" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:03:32.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:03:32.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:03:30.640" endtime="20210805 21:03:32.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:03:32.722" level="INFO"/>
<status status="PASS" starttime="20210805 21:03:32.721" endtime="20210805 21:03:32.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:03:32.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:03:32.722" endtime="20210805 21:03:32.723"/>
</kw>
<status status="PASS" starttime="20210805 21:03:30.640" endtime="20210805 21:03:32.723"/>
</kw>
<msg timestamp="20210805 21:03:32.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:03:30.640" endtime="20210805 21:03:32.723"/>
</kw>
<status status="PASS" starttime="20210805 21:03:30.639" endtime="20210805 21:03:32.724"/>
</kw>
<status status="PASS" starttime="20210805 21:03:30.639" endtime="20210805 21:03:32.724"/>
</kw>
<status status="PASS" starttime="20210805 21:03:30.638" endtime="20210805 21:03:32.724"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210805 21:03:32.724" endtime="20210805 21:03:32.724"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:03:32.727" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:03:35.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:03:35.016" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T21:03...</msg>
<status status="PASS" starttime="20210805 21:03:32.726" endtime="20210805 21:03:35.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:03:35.017" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T21:03:32.692Z",
  "modificationTime" : "2021-08-05T21:03:32.692Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210805 21:03:35.017" endtime="20210805 21:03:35.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:03:35.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:03:35.018" endtime="20210805 21:03:35.018"/>
</kw>
<status status="PASS" starttime="20210805 21:03:32.725" endtime="20210805 21:03:35.019"/>
</kw>
<msg timestamp="20210805 21:03:35.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:03:32.725" endtime="20210805 21:03:35.019"/>
</kw>
<msg timestamp="20210805 21:03:35.019" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T21:03...</msg>
<status status="PASS" starttime="20210805 21:03:32.724" endtime="20210805 21:03:35.019"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:03:35.019" endtime="20210805 21:03:35.020"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:03:35.023" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:03:35.023" endtime="20210805 21:03:35.023"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:03:35.024" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:03:35.024" endtime="20210805 21:03:35.024"/>
</kw>
<status status="PASS" starttime="20210805 21:03:35.023" endtime="20210805 21:03:35.024"/>
</kw>
<msg timestamp="20210805 21:03:35.024" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:03:35.022" endtime="20210805 21:03:35.024"/>
</kw>
<status status="PASS" starttime="20210805 21:03:35.021" endtime="20210805 21:03:35.025"/>
</kw>
<msg timestamp="20210805 21:03:35.025" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210805 21:03:35.020" endtime="20210805 21:03:35.025"/>
</kw>
<msg timestamp="20210805 21:03:35.025" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210805 21:03:35.020" endtime="20210805 21:03:35.025"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:03:35.028" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:03:37.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:03:37.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:03:35.026" endtime="20210805 21:03:37.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:03:37.292" level="INFO"/>
<status status="PASS" starttime="20210805 21:03:37.291" endtime="20210805 21:03:37.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:03:37.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:03:37.292" endtime="20210805 21:03:37.292"/>
</kw>
<status status="PASS" starttime="20210805 21:03:35.026" endtime="20210805 21:03:37.293"/>
</kw>
<msg timestamp="20210805 21:03:37.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:03:35.026" endtime="20210805 21:03:37.293"/>
</kw>
<status status="PASS" starttime="20210805 21:03:35.025" endtime="20210805 21:03:37.293"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:03:37.299" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:03:41.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:03:41.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:03:37.294" endtime="20210805 21:03:41.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:03:41.923" level="INFO"/>
<status status="PASS" starttime="20210805 21:03:41.922" endtime="20210805 21:03:41.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:03:41.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:03:41.924" endtime="20210805 21:03:41.924"/>
</kw>
<status status="PASS" starttime="20210805 21:03:37.294" endtime="20210805 21:03:41.925"/>
</kw>
<msg timestamp="20210805 21:03:41.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:03:37.294" endtime="20210805 21:03:41.925"/>
</kw>
<status status="PASS" starttime="20210805 21:03:37.293" endtime="20210805 21:03:41.925"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:03:41.928" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:03:46.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:03:46.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:03:41.926" endtime="20210805 21:03:46.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:03:46.262" level="INFO"/>
<status status="PASS" starttime="20210805 21:03:46.261" endtime="20210805 21:03:46.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:03:46.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:03:46.262" endtime="20210805 21:03:46.262"/>
</kw>
<status status="PASS" starttime="20210805 21:03:41.926" endtime="20210805 21:03:46.263"/>
</kw>
<msg timestamp="20210805 21:03:46.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:03:41.926" endtime="20210805 21:03:46.263"/>
</kw>
<status status="PASS" starttime="20210805 21:03:41.925" endtime="20210805 21:03:46.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:03:46.266" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:03:50.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:03:50.158" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:03:46.264" endtime="20210805 21:03:50.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:03:50.159" level="INFO"/>
<status status="PASS" starttime="20210805 21:03:50.158" endtime="20210805 21:03:50.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:03:50.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:03:50.159" endtime="20210805 21:03:50.160"/>
</kw>
<status status="PASS" starttime="20210805 21:03:46.264" endtime="20210805 21:03:50.160"/>
</kw>
<msg timestamp="20210805 21:03:50.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:03:46.264" endtime="20210805 21:03:50.160"/>
</kw>
<status status="PASS" starttime="20210805 21:03:46.263" endtime="20210805 21:03:50.160"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210805 21:03:26.011" endtime="20210805 21:03:50.160"/>
</test>
<test id="s1-s1-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:03:50.166" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:03:50.166" endtime="20210805 21:03:50.166"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:03:50.167" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:03:50.166" endtime="20210805 21:03:50.167"/>
</kw>
<status status="PASS" starttime="20210805 21:03:50.165" endtime="20210805 21:03:50.167"/>
</kw>
<msg timestamp="20210805 21:03:50.167" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:03:50.164" endtime="20210805 21:03:50.167"/>
</kw>
<status status="PASS" starttime="20210805 21:03:50.163" endtime="20210805 21:03:50.167"/>
</kw>
<msg timestamp="20210805 21:03:50.167" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210805 21:03:50.163" endtime="20210805 21:03:50.167"/>
</kw>
<msg timestamp="20210805 21:03:50.168" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210805 21:03:50.162" endtime="20210805 21:03:50.168"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:03:50.171" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:03:52.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:03:52.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:03:50.169" endtime="20210805 21:03:52.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:03:52.325" level="INFO"/>
<status status="PASS" starttime="20210805 21:03:52.324" endtime="20210805 21:03:52.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:03:52.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:03:52.325" endtime="20210805 21:03:52.326"/>
</kw>
<status status="PASS" starttime="20210805 21:03:50.168" endtime="20210805 21:03:52.326"/>
</kw>
<msg timestamp="20210805 21:03:52.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:03:50.168" endtime="20210805 21:03:52.326"/>
</kw>
<status status="PASS" starttime="20210805 21:03:50.168" endtime="20210805 21:03:52.326"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:03:52.329" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:03:54.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:03:54.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:03:52.328" endtime="20210805 21:03:54.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:03:54.472" level="INFO"/>
<status status="PASS" starttime="20210805 21:03:54.471" endtime="20210805 21:03:54.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:03:54.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:03:54.472" endtime="20210805 21:03:54.473"/>
</kw>
<status status="PASS" starttime="20210805 21:03:52.327" endtime="20210805 21:03:54.473"/>
</kw>
<msg timestamp="20210805 21:03:54.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:03:52.327" endtime="20210805 21:03:54.473"/>
</kw>
<status status="PASS" starttime="20210805 21:03:52.327" endtime="20210805 21:03:54.473"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210805 21:03:50.161" endtime="20210805 21:03:54.474"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210805 21:03:25.933" endtime="20210805 21:03:54.475"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="193492"/>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite id="s1-s2-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:08:38.904" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:08:38.903" endtime="20210805 21:08:38.904"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:08:38.904" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:08:38.904" endtime="20210805 21:08:38.904"/>
</kw>
<status status="PASS" starttime="20210805 21:08:38.903" endtime="20210805 21:08:38.904"/>
</kw>
<msg timestamp="20210805 21:08:38.904" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:08:38.902" endtime="20210805 21:08:38.905"/>
</kw>
<status status="PASS" starttime="20210805 21:08:38.902" endtime="20210805 21:08:38.905"/>
</kw>
<msg timestamp="20210805 21:08:38.905" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:08:38.901" endtime="20210805 21:08:38.905"/>
</kw>
<msg timestamp="20210805 21:08:38.905" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:08:38.900" endtime="20210805 21:08:38.905"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:08:38.906" level="INFO">${random} = 79544</msg>
<status status="PASS" starttime="20210805 21:08:38.905" endtime="20210805 21:08:38.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:38.910" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-79544 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:08:42.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:08:42.595" level="INFO">${output} = 2021-08-05 21:08:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:08:38.907" endtime="20210805 21:08:42.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:08:42.596" level="INFO">2021-08-05 21:08:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:40 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-05 21:08:40 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:08:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:08:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:08:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-05 21:08:42 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210805 21:08:42.595" endtime="20210805 21:08:42.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:08:42.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:08:42.596" endtime="20210805 21:08:42.596"/>
</kw>
<status status="PASS" starttime="20210805 21:08:38.906" endtime="20210805 21:08:42.597"/>
</kw>
<msg timestamp="20210805 21:08:42.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:08:38.906" endtime="20210805 21:08:42.597"/>
</kw>
<msg timestamp="20210805 21:08:42.597" level="INFO">${result} = 2021-08-05 21:08:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:40 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:08:38.906" endtime="20210805 21:08:42.597"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:42.600" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:08:44.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:08:44.295" level="INFO">${output} = 2021-08-05 21:08:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:08:42.598" endtime="20210805 21:08:44.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:08:44.296" level="INFO">2021-08-05 21:08:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:44 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-08-05 21:08 o3fs://bucket1.volume1.om/ozone-79544
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:08 o3fs://bucket1.volume1.om/user
2021-08-05 21:08:44 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210805 21:08:44.296" endtime="20210805 21:08:44.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:08:44.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:08:44.297" endtime="20210805 21:08:44.297"/>
</kw>
<status status="PASS" starttime="20210805 21:08:42.598" endtime="20210805 21:08:44.297"/>
</kw>
<msg timestamp="20210805 21:08:44.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:08:42.598" endtime="20210805 21:08:44.297"/>
</kw>
<msg timestamp="20210805 21:08:44.298" level="INFO">${result} = 2021-08-05 21:08:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:08:42.597" endtime="20210805 21:08:44.298"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:08:44.298" endtime="20210805 21:08:44.298"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:44.303" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-79544 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:08:47.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:08:47.249" level="INFO">${output} = 2021-08-05 21:08:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:08:44.300" endtime="20210805 21:08:47.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:08:47.250" level="INFO">2021-08-05 21:08:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:46 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-05 21:08:46 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:08:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:08:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/
2021-08-05 21:08:46 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210805 21:08:47.250" endtime="20210805 21:08:47.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:08:47.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:08:47.251" endtime="20210805 21:08:47.252"/>
</kw>
<status status="PASS" starttime="20210805 21:08:44.299" endtime="20210805 21:08:47.252"/>
</kw>
<msg timestamp="20210805 21:08:47.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:08:44.299" endtime="20210805 21:08:47.252"/>
</kw>
<msg timestamp="20210805 21:08:47.253" level="INFO">${result} = 2021-08-05 21:08:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:08:44.298" endtime="20210805 21:08:47.253"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:08:47.253" endtime="20210805 21:08:47.254"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 21:08:38.900" endtime="20210805 21:08:47.254"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210805 21:08:38.853" endtime="20210805 21:08:47.255"/>
</suite>
<suite id="s1-s2-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:51.481" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:08:51.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:08:51.488" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:08:51.478" endtime="20210805 21:08:51.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:08:51.488" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:08:51.488" endtime="20210805 21:08:51.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:08:51.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:08:51.489" endtime="20210805 21:08:51.489"/>
</kw>
<status status="PASS" starttime="20210805 21:08:51.477" endtime="20210805 21:08:51.489"/>
</kw>
<msg timestamp="20210805 21:08:51.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:08:51.477" endtime="20210805 21:08:51.489"/>
</kw>
<msg timestamp="20210805 21:08:51.490" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:08:51.477" endtime="20210805 21:08:51.490"/>
</kw>
<msg timestamp="20210805 21:08:51.490" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:08:51.476" endtime="20210805 21:08:51.490"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:08:51.494" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:08:51.494" endtime="20210805 21:08:51.494"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:08:51.494" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:08:51.494" endtime="20210805 21:08:51.495"/>
</kw>
<status status="PASS" starttime="20210805 21:08:51.493" endtime="20210805 21:08:51.495"/>
</kw>
<msg timestamp="20210805 21:08:51.495" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:08:51.493" endtime="20210805 21:08:51.495"/>
</kw>
<status status="PASS" starttime="20210805 21:08:51.492" endtime="20210805 21:08:51.495"/>
</kw>
<msg timestamp="20210805 21:08:51.495" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:08:51.492" endtime="20210805 21:08:51.495"/>
</kw>
<msg timestamp="20210805 21:08:51.495" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:08:51.490" endtime="20210805 21:08:51.495"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:51.498" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:09:30.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:09:30.489" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:08:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08...</msg>
<status status="PASS" starttime="20210805 21:08:51.497" endtime="20210805 21:09:30.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:09:30.490" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:08:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:53 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-05 21:08:53 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:08:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:08:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:08:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-05 21:08:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2021-08-05 21:08:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:57 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-05 21:08:57 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 21:08:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628197657185_0001
2021-08-05 21:08:57 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-05 21:08:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:58 INFO  Configuration:2752 - resource-types.xml not found
2021-08-05 21:08:58 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-08-05 21:08:58 INFO  YarnClientImpl:324 - Submitted application application_1628197657185_0001
2021-08-05 21:08:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1628197657185_0001/
2021-08-05 21:08:58 INFO  Job:1619 - Running job: job_1628197657185_0001
2021-08-05 21:09:08 INFO  Job:1640 - Job job_1628197657185_0001 running in uber mode : false
2021-08-05 21:09:08 INFO  Job:1647 -  map 0% reduce 0%
2021-08-05 21:09:14 INFO  Job:1647 -  map 33% reduce 0%
2021-08-05 21:09:19 INFO  Job:1647 -  map 67% reduce 0%
2021-08-05 21:09:24 INFO  Job:1647 -  map 100% reduce 0%
2021-08-05 21:09:28 INFO  Job:1647 -  map 100% reduce 100%
2021-08-05 21:09:29 INFO  Job:1658 - Job job_1628197657185_0001 completed successfully
2021-08-05 21:09:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:29 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1041109
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37464
		Total time spent by all reduces in occupied slots (ms)=14172
		Total time spent by all map tasks (ms)=9366
		Total time spent by all reduce tasks (ms)=3543
		Total vcore-milliseconds taken by all map tasks=9366
		Total vcore-milliseconds taken by all reduce tasks=3543
		Total megabyte-milliseconds taken by all map tasks=38363136
		Total megabyte-milliseconds taken by all reduce tasks=14512128
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=529
		CPU time spent (ms)=6080
		Physical memory (bytes) snapshot=1503830016
		Virtual memory (bytes) snapshot=15802277888
		Total committed heap usage (bytes)=1392508928
		Peak Map Physical memory (bytes)=397389824
		Peak Map Virtual memory (bytes)=3949068288
		Peak Reduce Physical memory (bytes)=340688896
		Peak Reduce Virtual memory (bytes)=3972608000
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.023 seconds
2021-08-05 21:09:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:29 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-08-05 21:09:30 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210805 21:09:30.489" endtime="20210805 21:09:30.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:09:30.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:09:30.490" endtime="20210805 21:09:30.491"/>
</kw>
<status status="PASS" starttime="20210805 21:08:51.496" endtime="20210805 21:09:30.491"/>
</kw>
<msg timestamp="20210805 21:09:30.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:08:51.496" endtime="20210805 21:09:30.491"/>
</kw>
<msg timestamp="20210805 21:09:30.492" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:08:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:08...</msg>
<status status="PASS" starttime="20210805 21:08:51.495" endtime="20210805 21:09:30.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:09:30.492" endtime="20210805 21:09:30.492"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:08:51.476" endtime="20210805 21:09:30.492"/>
</test>
<test id="s1-s2-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:09:30.497" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:09:30.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:09:30.502" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:09:30.495" endtime="20210805 21:09:30.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:09:30.503" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:09:30.502" endtime="20210805 21:09:30.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:09:30.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:09:30.503" endtime="20210805 21:09:30.504"/>
</kw>
<status status="PASS" starttime="20210805 21:09:30.495" endtime="20210805 21:09:30.504"/>
</kw>
<msg timestamp="20210805 21:09:30.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:09:30.495" endtime="20210805 21:09:30.504"/>
</kw>
<msg timestamp="20210805 21:09:30.504" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:09:30.494" endtime="20210805 21:09:30.504"/>
</kw>
<msg timestamp="20210805 21:09:30.505" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:09:30.494" endtime="20210805 21:09:30.505"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:09:30.505" level="INFO">${random} = zefm6izM</msg>
<status status="PASS" starttime="20210805 21:09:30.505" endtime="20210805 21:09:30.505"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:09:30.508" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:09:30.508" endtime="20210805 21:09:30.508"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:09:30.509" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:09:30.508" endtime="20210805 21:09:30.509"/>
</kw>
<status status="PASS" starttime="20210805 21:09:30.507" endtime="20210805 21:09:30.509"/>
</kw>
<msg timestamp="20210805 21:09:30.509" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:09:30.507" endtime="20210805 21:09:30.509"/>
</kw>
<status status="PASS" starttime="20210805 21:09:30.506" endtime="20210805 21:09:30.509"/>
</kw>
<msg timestamp="20210805 21:09:30.509" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:09:30.506" endtime="20210805 21:09:30.509"/>
</kw>
<msg timestamp="20210805 21:09:30.510" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:09:30.505" endtime="20210805 21:09:30.510"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:09:30.513" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:09:30.512" endtime="20210805 21:09:30.513"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:09:30.513" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:09:30.513" endtime="20210805 21:09:30.513"/>
</kw>
<status status="PASS" starttime="20210805 21:09:30.512" endtime="20210805 21:09:30.513"/>
</kw>
<msg timestamp="20210805 21:09:30.514" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:09:30.512" endtime="20210805 21:09:30.514"/>
</kw>
<status status="PASS" starttime="20210805 21:09:30.511" endtime="20210805 21:09:30.514"/>
</kw>
<msg timestamp="20210805 21:09:30.514" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210805 21:09:30.510" endtime="20210805 21:09:30.514"/>
</kw>
<msg timestamp="20210805 21:09:30.514" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210805 21:09:30.510" endtime="20210805 21:09:30.514"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:09:30.517" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:09:30.517" endtime="20210805 21:09:30.517"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:09:30.517" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:09:30.517" endtime="20210805 21:09:30.517"/>
</kw>
<status status="PASS" starttime="20210805 21:09:30.516" endtime="20210805 21:09:30.518"/>
</kw>
<msg timestamp="20210805 21:09:30.518" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:09:30.516" endtime="20210805 21:09:30.518"/>
</kw>
<status status="PASS" starttime="20210805 21:09:30.515" endtime="20210805 21:09:30.518"/>
</kw>
<msg timestamp="20210805 21:09:30.518" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-zefm6izM.txt</msg>
<status status="PASS" starttime="20210805 21:09:30.515" endtime="20210805 21:09:30.518"/>
</kw>
<msg timestamp="20210805 21:09:30.518" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-zefm6izM.txt</msg>
<status status="PASS" starttime="20210805 21:09:30.514" endtime="20210805 21:09:30.518"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:09:30.521" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-zefm6izM.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:10:06.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:10:06.112" level="INFO">${output} = 2021-08-05 21:09:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:09:30.520" endtime="20210805 21:10:06.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:10:06.113" level="INFO">2021-08-05 21:09:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2021-08-05 21:09:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 21:09:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:32 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-05 21:09:32 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:09:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:09:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:09:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-05 21:09:33 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-05 21:09:33 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 21:09:34 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628197657185_0002
2021-08-05 21:09:34 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-05 21:09:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:34 INFO  Configuration:2752 - resource-types.xml not found
2021-08-05 21:09:34 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-08-05 21:09:34 INFO  YarnClientImpl:324 - Submitted application application_1628197657185_0002
2021-08-05 21:09:34 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1628197657185_0002/
2021-08-05 21:09:34 INFO  Job:1619 - Running job: job_1628197657185_0002
2021-08-05 21:09:42 INFO  Job:1640 - Job job_1628197657185_0002 running in uber mode : false
2021-08-05 21:09:42 INFO  Job:1647 -  map 0% reduce 0%
2021-08-05 21:09:48 INFO  Job:1647 -  map 33% reduce 0%
2021-08-05 21:09:53 INFO  Job:1647 -  map 67% reduce 0%
2021-08-05 21:09:58 INFO  Job:1647 -  map 100% reduce 0%
2021-08-05 21:10:02 INFO  Job:1647 -  map 100% reduce 100%
2021-08-05 21:10:05 INFO  Job:1658 - Job job_1628197657185_0002 completed successfully
2021-08-05 21:10:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:05 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1103867
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37516
		Total time spent by all reduces in occupied slots (ms)=12988
		Total time spent by all map tasks (ms)=9379
		Total time spent by all reduce tasks (ms)=3247
		Total vcore-milliseconds taken by all map tasks=9379
		Total vcore-milliseconds taken by all reduce tasks=3247
		Total megabyte-milliseconds taken by all map tasks=38416384
		Total megabyte-milliseconds taken by all reduce tasks=13299712
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=526
		CPU time spent (ms)=6310
		Physical memory (bytes) snapshot=1518604288
		Virtual memory (bytes) snapshot=15808069632
		Total committed heap usage (bytes)=1391984640
		Peak Map Physical memory (bytes)=401969152
		Peak Map Virtual memory (bytes)=3951620096
		Peak Reduce Physical memory (bytes)=320917504
		Peak Reduce Virtual memory (bytes)=3955482624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299
2021-08-05 21:10:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210805 21:10:06.112" endtime="20210805 21:10:06.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:10:06.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:10:06.113" endtime="20210805 21:10:06.114"/>
</kw>
<status status="PASS" starttime="20210805 21:09:30.519" endtime="20210805 21:10:06.114"/>
</kw>
<msg timestamp="20210805 21:10:06.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:09:30.519" endtime="20210805 21:10:06.114"/>
</kw>
<msg timestamp="20210805 21:10:06.114" level="INFO">${output} = 2021-08-05 21:09:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:09:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:09:30.518" endtime="20210805 21:10:06.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:10:06.115" endtime="20210805 21:10:06.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:10:06.115" endtime="20210805 21:10:06.116"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:09:30.493" endtime="20210805 21:10:06.116"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210805 21:08:51.430" endtime="20210805 21:10:06.117"/>
</suite>
<suite id="s1-s2-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:10:10.373" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:10:10.372" endtime="20210805 21:10:10.373"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:10:10.373" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:10:10.373" endtime="20210805 21:10:10.373"/>
</kw>
<status status="PASS" starttime="20210805 21:10:10.372" endtime="20210805 21:10:10.373"/>
</kw>
<msg timestamp="20210805 21:10:10.373" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:10:10.371" endtime="20210805 21:10:10.373"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 21:10:10.374" endtime="20210805 21:10:10.374"/>
</kw>
<msg timestamp="20210805 21:10:10.374" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 21:10:10.374" endtime="20210805 21:10:10.374"/>
</kw>
<status status="PASS" starttime="20210805 21:10:10.371" endtime="20210805 21:10:10.375"/>
</kw>
<msg timestamp="20210805 21:10:10.375" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:10:10.370" endtime="20210805 21:10:10.375"/>
</kw>
<msg timestamp="20210805 21:10:10.375" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:10:10.369" endtime="20210805 21:10:10.375"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:10:10.375" level="INFO">${random} = 14291</msg>
<status status="PASS" starttime="20210805 21:10:10.375" endtime="20210805 21:10:10.375"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:10:10.382" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-14291 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:10:13.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:10:13.628" level="INFO">${output} = 2021-08-05 21:10:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:11 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:10:10.377" endtime="20210805 21:10:13.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:10:13.629" level="INFO">2021-08-05 21:10:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:12 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-05 21:10:12 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:10:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:10:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:10:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-05 21:10:13 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210805 21:10:13.628" endtime="20210805 21:10:13.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:10:13.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:10:13.629" endtime="20210805 21:10:13.629"/>
</kw>
<status status="PASS" starttime="20210805 21:10:10.376" endtime="20210805 21:10:13.630"/>
</kw>
<msg timestamp="20210805 21:10:13.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:10:10.376" endtime="20210805 21:10:13.630"/>
</kw>
<msg timestamp="20210805 21:10:13.630" level="INFO">${result} = 2021-08-05 21:10:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:11 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:10:10.376" endtime="20210805 21:10:13.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:10:13.633" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:10:15.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:10:15.243" level="INFO">${output} = 2021-08-05 21:10:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:10:13.632" endtime="20210805 21:10:15.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:10:15.244" level="INFO">2021-08-05 21:10:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:15 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-08-05 21:10 ofs://om/volume1/bucket1/ozone-14291
-rw-rw-rw-   3 hadoop hadoop      21867 2021-08-05 21:08 ofs://om/volume1/bucket1/ozone-79544
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:08 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:09 ofs://om/volume1/bucket1/wordcount-zefm6izM.txt
2021-08-05 21:10:15 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210805 21:10:15.244" endtime="20210805 21:10:15.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:10:15.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:10:15.245" endtime="20210805 21:10:15.245"/>
</kw>
<status status="PASS" starttime="20210805 21:10:13.631" endtime="20210805 21:10:15.245"/>
</kw>
<msg timestamp="20210805 21:10:15.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:10:13.631" endtime="20210805 21:10:15.245"/>
</kw>
<msg timestamp="20210805 21:10:15.246" level="INFO">${result} = 2021-08-05 21:10:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:10:13.630" endtime="20210805 21:10:15.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:10:15.246" endtime="20210805 21:10:15.246"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:10:15.249" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-14291 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:10:18.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:10:18.114" level="INFO">${output} = 2021-08-05 21:10:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:10:15.248" endtime="20210805 21:10:18.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:10:18.115" level="INFO">2021-08-05 21:10:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:16 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-05 21:10:16 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:10:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:10:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/
2021-08-05 21:10:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210805 21:10:18.115" endtime="20210805 21:10:18.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:10:18.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:10:18.116" endtime="20210805 21:10:18.117"/>
</kw>
<status status="PASS" starttime="20210805 21:10:15.247" endtime="20210805 21:10:18.117"/>
</kw>
<msg timestamp="20210805 21:10:18.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:10:15.247" endtime="20210805 21:10:18.117"/>
</kw>
<msg timestamp="20210805 21:10:18.118" level="INFO">${result} = 2021-08-05 21:10:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:10:15.246" endtime="20210805 21:10:18.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:10:18.119" endtime="20210805 21:10:18.119"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 21:10:10.369" endtime="20210805 21:10:18.119"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210805 21:10:10.321" endtime="20210805 21:10:18.120"/>
</suite>
<suite id="s1-s2-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:10:22.362" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:10:22.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:10:22.368" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:10:22.358" endtime="20210805 21:10:22.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:10:22.369" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:10:22.368" endtime="20210805 21:10:22.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:10:22.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:10:22.369" endtime="20210805 21:10:22.369"/>
</kw>
<status status="PASS" starttime="20210805 21:10:22.358" endtime="20210805 21:10:22.370"/>
</kw>
<msg timestamp="20210805 21:10:22.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:10:22.358" endtime="20210805 21:10:22.370"/>
</kw>
<msg timestamp="20210805 21:10:22.370" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:10:22.357" endtime="20210805 21:10:22.370"/>
</kw>
<msg timestamp="20210805 21:10:22.370" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:10:22.357" endtime="20210805 21:10:22.370"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:10:22.375" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:10:22.374" endtime="20210805 21:10:22.375"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:10:22.375" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:10:22.375" endtime="20210805 21:10:22.375"/>
</kw>
<status status="PASS" starttime="20210805 21:10:22.374" endtime="20210805 21:10:22.375"/>
</kw>
<msg timestamp="20210805 21:10:22.376" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:10:22.373" endtime="20210805 21:10:22.376"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 21:10:22.376" endtime="20210805 21:10:22.376"/>
</kw>
<msg timestamp="20210805 21:10:22.376" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 21:10:22.376" endtime="20210805 21:10:22.376"/>
</kw>
<status status="PASS" starttime="20210805 21:10:22.373" endtime="20210805 21:10:22.377"/>
</kw>
<msg timestamp="20210805 21:10:22.377" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:10:22.372" endtime="20210805 21:10:22.377"/>
</kw>
<msg timestamp="20210805 21:10:22.377" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:10:22.371" endtime="20210805 21:10:22.377"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:10:22.380" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:10:57.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:10:57.933" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:10:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10...</msg>
<status status="PASS" starttime="20210805 21:10:22.378" endtime="20210805 21:10:57.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:10:57.935" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:10:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:24 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-05 21:10:24 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:10:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:10:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:10:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-05 21:10:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2021-08-05 21:10:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 21:10:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:25 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-05 21:10:28 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 21:10:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628197657185_0003
2021-08-05 21:10:28 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-05 21:10:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:28 INFO  Configuration:2752 - resource-types.xml not found
2021-08-05 21:10:28 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-08-05 21:10:28 INFO  YarnClientImpl:324 - Submitted application application_1628197657185_0003
2021-08-05 21:10:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1628197657185_0003/
2021-08-05 21:10:29 INFO  Job:1619 - Running job: job_1628197657185_0003
2021-08-05 21:10:36 INFO  Job:1640 - Job job_1628197657185_0003 running in uber mode : false
2021-08-05 21:10:36 INFO  Job:1647 -  map 0% reduce 0%
2021-08-05 21:10:42 INFO  Job:1647 -  map 33% reduce 0%
2021-08-05 21:10:47 INFO  Job:1647 -  map 67% reduce 0%
2021-08-05 21:10:52 INFO  Job:1647 -  map 100% reduce 0%
2021-08-05 21:10:57 INFO  Job:1647 -  map 100% reduce 100%
2021-08-05 21:10:57 INFO  Job:1658 - Job job_1628197657185_0003 completed successfully
2021-08-05 21:10:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:57 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1040905
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36516
		Total time spent by all reduces in occupied slots (ms)=13832
		Total time spent by all map tasks (ms)=9129
		Total time spent by all reduce tasks (ms)=3458
		Total vcore-milliseconds taken by all map tasks=9129
		Total vcore-milliseconds taken by all reduce tasks=3458
		Total megabyte-milliseconds taken by all map tasks=37392384
		Total megabyte-milliseconds taken by all reduce tasks=14163968
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=492
		CPU time spent (ms)=6280
		Physical memory (bytes) snapshot=1539735552
		Virtual memory (bytes) snapshot=15833169920
		Total committed heap usage (bytes)=1391984640
		Peak Map Physical memory (bytes)=400633856
		Peak Map Virtual memory (bytes)=3956731904
		Peak Reduce Physical memory (bytes)=343351296
		Peak Reduce Virtual memory (bytes)=3970351104
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.06 seconds
2021-08-05 21:10:57 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-08-05 21:10:57 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210805 21:10:57.934" endtime="20210805 21:10:57.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:10:57.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:10:57.935" endtime="20210805 21:10:57.936"/>
</kw>
<status status="PASS" starttime="20210805 21:10:22.378" endtime="20210805 21:10:57.936"/>
</kw>
<msg timestamp="20210805 21:10:57.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:10:22.378" endtime="20210805 21:10:57.936"/>
</kw>
<msg timestamp="20210805 21:10:57.936" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:10:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10...</msg>
<status status="PASS" starttime="20210805 21:10:22.377" endtime="20210805 21:10:57.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:10:57.937" endtime="20210805 21:10:57.937"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:10:22.356" endtime="20210805 21:10:57.937"/>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:10:57.942" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:10:57.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:10:57.947" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:10:57.940" endtime="20210805 21:10:57.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:10:57.948" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:10:57.947" endtime="20210805 21:10:57.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:10:57.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:10:57.948" endtime="20210805 21:10:57.949"/>
</kw>
<status status="PASS" starttime="20210805 21:10:57.939" endtime="20210805 21:10:57.949"/>
</kw>
<msg timestamp="20210805 21:10:57.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:10:57.939" endtime="20210805 21:10:57.949"/>
</kw>
<msg timestamp="20210805 21:10:57.949" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:10:57.939" endtime="20210805 21:10:57.949"/>
</kw>
<msg timestamp="20210805 21:10:57.950" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210805 21:10:57.938" endtime="20210805 21:10:57.950"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:10:57.950" level="INFO">${random} = ghFAWmfv</msg>
<status status="PASS" starttime="20210805 21:10:57.950" endtime="20210805 21:10:57.950"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:10:57.953" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:10:57.953" endtime="20210805 21:10:57.953"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:10:57.954" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:10:57.953" endtime="20210805 21:10:57.954"/>
</kw>
<status status="PASS" starttime="20210805 21:10:57.952" endtime="20210805 21:10:57.954"/>
</kw>
<msg timestamp="20210805 21:10:57.954" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:10:57.952" endtime="20210805 21:10:57.954"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 21:10:57.955" endtime="20210805 21:10:57.955"/>
</kw>
<msg timestamp="20210805 21:10:57.955" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 21:10:57.954" endtime="20210805 21:10:57.955"/>
</kw>
<status status="PASS" starttime="20210805 21:10:57.951" endtime="20210805 21:10:57.955"/>
</kw>
<msg timestamp="20210805 21:10:57.955" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:10:57.951" endtime="20210805 21:10:57.955"/>
</kw>
<msg timestamp="20210805 21:10:57.956" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:10:57.950" endtime="20210805 21:10:57.956"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:10:57.958" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:10:57.958" endtime="20210805 21:10:57.959"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:10:57.959" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:10:57.959" endtime="20210805 21:10:57.959"/>
</kw>
<status status="PASS" starttime="20210805 21:10:57.958" endtime="20210805 21:10:57.959"/>
</kw>
<msg timestamp="20210805 21:10:57.960" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:10:57.957" endtime="20210805 21:10:57.960"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:10:57.961" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210805 21:10:57.960" endtime="20210805 21:10:57.961"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:10:57.961" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210805 21:10:57.961" endtime="20210805 21:10:57.961"/>
</kw>
<status status="PASS" starttime="20210805 21:10:57.960" endtime="20210805 21:10:57.962"/>
</kw>
<msg timestamp="20210805 21:10:57.962" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210805 21:10:57.960" endtime="20210805 21:10:57.962"/>
</kw>
<status status="PASS" starttime="20210805 21:10:57.957" endtime="20210805 21:10:57.962"/>
</kw>
<msg timestamp="20210805 21:10:57.962" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210805 21:10:57.956" endtime="20210805 21:10:57.962"/>
</kw>
<msg timestamp="20210805 21:10:57.962" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210805 21:10:57.956" endtime="20210805 21:10:57.962"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:10:57.965" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:10:57.965" endtime="20210805 21:10:57.965"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:10:57.966" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:10:57.966" endtime="20210805 21:10:57.966"/>
</kw>
<status status="PASS" starttime="20210805 21:10:57.964" endtime="20210805 21:10:57.966"/>
</kw>
<msg timestamp="20210805 21:10:57.966" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:10:57.964" endtime="20210805 21:10:57.966"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:10:57.967" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210805 21:10:57.967" endtime="20210805 21:10:57.968"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:10:57.968" level="INFO">${result} = /wordcount-ghFAWmfv.txt</msg>
<status status="PASS" starttime="20210805 21:10:57.968" endtime="20210805 21:10:57.968"/>
</kw>
<status status="PASS" starttime="20210805 21:10:57.967" endtime="20210805 21:10:57.968"/>
</kw>
<msg timestamp="20210805 21:10:57.968" level="INFO">${path_with_leading} = /wordcount-ghFAWmfv.txt</msg>
<status status="PASS" starttime="20210805 21:10:57.966" endtime="20210805 21:10:57.968"/>
</kw>
<status status="PASS" starttime="20210805 21:10:57.963" endtime="20210805 21:10:57.969"/>
</kw>
<msg timestamp="20210805 21:10:57.969" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-ghFAWmfv.txt</msg>
<status status="PASS" starttime="20210805 21:10:57.963" endtime="20210805 21:10:57.969"/>
</kw>
<msg timestamp="20210805 21:10:57.969" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-ghFAWmfv.txt</msg>
<status status="PASS" starttime="20210805 21:10:57.962" endtime="20210805 21:10:57.969"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:10:57.972" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-ghFAWmfv.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:11:37.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:11:37.967" level="INFO">${output} = 2021-08-05 21:10:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:59 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:10:57.970" endtime="20210805 21:11:37.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:11:37.968" level="INFO">2021-08-05 21:10:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2021-08-05 21:10:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:59 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 21:10:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:11:00 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-08-05 21:11:00 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-08-05 21:11:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:11:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:11:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-05 21:11:01 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-05 21:11:03 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 21:11:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628197657185_0004
2021-08-05 21:11:03 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-05 21:11:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:11:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:11:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:11:04 INFO  Configuration:2752 - resource-types.xml not found
2021-08-05 21:11:04 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-08-05 21:11:04 INFO  YarnClientImpl:324 - Submitted application application_1628197657185_0004
2021-08-05 21:11:04 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1628197657185_0004/
2021-08-05 21:11:04 INFO  Job:1619 - Running job: job_1628197657185_0004
2021-08-05 21:11:11 INFO  Job:1640 - Job job_1628197657185_0004 running in uber mode : false
2021-08-05 21:11:11 INFO  Job:1647 -  map 0% reduce 0%
2021-08-05 21:11:17 INFO  Job:1647 -  map 33% reduce 0%
2021-08-05 21:11:22 INFO  Job:1647 -  map 67% reduce 0%
2021-08-05 21:11:27 INFO  Job:1647 -  map 100% reduce 0%
2021-08-05 21:11:33 INFO  Job:1647 -  map 100% reduce 100%
2021-08-05 21:11:37 INFO  Job:1658 - Job job_1628197657185_0004 completed successfully
2021-08-05 21:11:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:11:37 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1103783
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36956
		Total time spent by all reduces in occupied slots (ms)=23452
		Total time spent by all map tasks (ms)=9239
		Total time spent by all reduce tasks (ms)=5863
		Total vcore-milliseconds taken by all map tasks=9239
		Total vcore-milliseconds taken by all reduce tasks=5863
		Total megabyte-milliseconds taken by all map tasks=37842944
		Total megabyte-milliseconds taken by all reduce tasks=24014848
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=528
		CPU time spent (ms)=6540
		Physical memory (bytes) snapshot=1516187648
		Virtual memory (bytes) snapshot=15820484608
		Total committed heap usage (bytes)=1394606080
		Peak Map Physical memory (bytes)=402456576
		Peak Map Virtual memory (bytes)=3959795712
		Peak Reduce Physical memory (bytes)=338776064
		Peak Reduce Virtual memory (bytes)=3971330048
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299
2021-08-05 21:11:37 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210805 21:11:37.967" endtime="20210805 21:11:37.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:11:37.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:11:37.968" endtime="20210805 21:11:37.969"/>
</kw>
<status status="PASS" starttime="20210805 21:10:57.970" endtime="20210805 21:11:37.969"/>
</kw>
<msg timestamp="20210805 21:11:37.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:10:57.970" endtime="20210805 21:11:37.969"/>
</kw>
<msg timestamp="20210805 21:11:37.970" level="INFO">${output} = 2021-08-05 21:10:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-08-05 21:10:59 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210805 21:10:57.969" endtime="20210805 21:11:37.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:11:37.970" endtime="20210805 21:11:37.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:11:37.970" endtime="20210805 21:11:37.971"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:10:57.938" endtime="20210805 21:11:37.971"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210805 21:10:22.308" endtime="20210805 21:11:37.972"/>
</suite>
<suite id="s1-s2-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s2-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:06.366" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:08:08.980" level="INFO">${rc} = 255</msg>
<msg timestamp="20210805 21:08:08.980" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 21:08:06.363" endtime="20210805 21:08:08.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:08:08.981" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 21:08:08.980" endtime="20210805 21:08:08.981"/>
</kw>
<msg timestamp="20210805 21:08:08.981" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 21:08:06.362" endtime="20210805 21:08:08.981"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:08.985" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:08:11.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:08:11.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:08:08.984" endtime="20210805 21:08:11.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:08:11.112" level="INFO"/>
<status status="PASS" starttime="20210805 21:08:11.111" endtime="20210805 21:08:11.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:08:11.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:08:11.112" endtime="20210805 21:08:11.113"/>
</kw>
<status status="PASS" starttime="20210805 21:08:08.983" endtime="20210805 21:08:11.113"/>
</kw>
<msg timestamp="20210805 21:08:11.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:08:08.983" endtime="20210805 21:08:11.113"/>
</kw>
<msg timestamp="20210805 21:08:11.113" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210805 21:08:08.982" endtime="20210805 21:08:11.113"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:08:11.113" endtime="20210805 21:08:11.114"/>
</kw>
<status status="PASS" starttime="20210805 21:08:08.982" endtime="20210805 21:08:11.114"/>
</kw>
<status status="PASS" starttime="20210805 21:08:08.982" endtime="20210805 21:08:11.114"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:11.121" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:08:13.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:08:13.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:08:11.117" endtime="20210805 21:08:13.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:08:13.072" level="INFO"/>
<status status="PASS" starttime="20210805 21:08:13.072" endtime="20210805 21:08:13.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:08:13.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:08:13.073" endtime="20210805 21:08:13.073"/>
</kw>
<status status="PASS" starttime="20210805 21:08:11.116" endtime="20210805 21:08:13.073"/>
</kw>
<msg timestamp="20210805 21:08:13.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:08:11.116" endtime="20210805 21:08:13.073"/>
</kw>
<status status="PASS" starttime="20210805 21:08:11.115" endtime="20210805 21:08:13.074"/>
</kw>
<status status="PASS" starttime="20210805 21:08:11.115" endtime="20210805 21:08:13.074"/>
</kw>
<status status="PASS" starttime="20210805 21:08:11.114" endtime="20210805 21:08:13.074"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210805 21:08:13.074" endtime="20210805 21:08:13.075"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:13.078" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:08:15.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:08:15.285" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T21:08...</msg>
<status status="PASS" starttime="20210805 21:08:13.076" endtime="20210805 21:08:15.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:08:15.289" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T21:08:13.037Z",
  "modificationTime" : "2021-08-05T21:08:13.037Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210805 21:08:15.287" endtime="20210805 21:08:15.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:08:15.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:08:15.290" endtime="20210805 21:08:15.292"/>
</kw>
<status status="PASS" starttime="20210805 21:08:13.076" endtime="20210805 21:08:15.293"/>
</kw>
<msg timestamp="20210805 21:08:15.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:08:13.075" endtime="20210805 21:08:15.294"/>
</kw>
<msg timestamp="20210805 21:08:15.294" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T21:08...</msg>
<status status="PASS" starttime="20210805 21:08:13.075" endtime="20210805 21:08:15.294"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:08:15.294" endtime="20210805 21:08:15.295"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:08:15.299" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:08:15.299" endtime="20210805 21:08:15.299"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:08:15.300" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:08:15.299" endtime="20210805 21:08:15.300"/>
</kw>
<status status="PASS" starttime="20210805 21:08:15.298" endtime="20210805 21:08:15.300"/>
</kw>
<msg timestamp="20210805 21:08:15.300" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:08:15.297" endtime="20210805 21:08:15.300"/>
</kw>
<status status="PASS" starttime="20210805 21:08:15.296" endtime="20210805 21:08:15.301"/>
</kw>
<msg timestamp="20210805 21:08:15.301" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210805 21:08:15.296" endtime="20210805 21:08:15.301"/>
</kw>
<msg timestamp="20210805 21:08:15.301" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210805 21:08:15.295" endtime="20210805 21:08:15.301"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:15.304" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:08:17.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:08:17.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:08:15.302" endtime="20210805 21:08:17.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:08:17.644" level="INFO"/>
<status status="PASS" starttime="20210805 21:08:17.644" endtime="20210805 21:08:17.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:08:17.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:08:17.645" endtime="20210805 21:08:17.645"/>
</kw>
<status status="PASS" starttime="20210805 21:08:15.302" endtime="20210805 21:08:17.645"/>
</kw>
<msg timestamp="20210805 21:08:17.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:08:15.301" endtime="20210805 21:08:17.646"/>
</kw>
<status status="PASS" starttime="20210805 21:08:15.301" endtime="20210805 21:08:17.646"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:17.649" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:08:22.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:08:22.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:08:17.647" endtime="20210805 21:08:22.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:08:22.367" level="INFO"/>
<status status="PASS" starttime="20210805 21:08:22.367" endtime="20210805 21:08:22.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:08:22.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:08:22.368" endtime="20210805 21:08:22.368"/>
</kw>
<status status="PASS" starttime="20210805 21:08:17.647" endtime="20210805 21:08:22.369"/>
</kw>
<msg timestamp="20210805 21:08:22.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:08:17.647" endtime="20210805 21:08:22.369"/>
</kw>
<status status="PASS" starttime="20210805 21:08:17.646" endtime="20210805 21:08:22.369"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:22.372" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:08:26.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:08:26.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:08:22.370" endtime="20210805 21:08:26.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:08:26.468" level="INFO"/>
<status status="PASS" starttime="20210805 21:08:26.468" endtime="20210805 21:08:26.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:08:26.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:08:26.468" endtime="20210805 21:08:26.469"/>
</kw>
<status status="PASS" starttime="20210805 21:08:22.370" endtime="20210805 21:08:26.469"/>
</kw>
<msg timestamp="20210805 21:08:26.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:08:22.370" endtime="20210805 21:08:26.470"/>
</kw>
<status status="PASS" starttime="20210805 21:08:22.369" endtime="20210805 21:08:26.470"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:26.473" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:08:30.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:08:30.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:08:26.471" endtime="20210805 21:08:30.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:08:30.562" level="INFO"/>
<status status="PASS" starttime="20210805 21:08:30.561" endtime="20210805 21:08:30.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:08:30.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:08:30.562" endtime="20210805 21:08:30.562"/>
</kw>
<status status="PASS" starttime="20210805 21:08:26.471" endtime="20210805 21:08:30.563"/>
</kw>
<msg timestamp="20210805 21:08:30.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:08:26.470" endtime="20210805 21:08:30.563"/>
</kw>
<status status="PASS" starttime="20210805 21:08:26.470" endtime="20210805 21:08:30.563"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210805 21:08:06.361" endtime="20210805 21:08:30.563"/>
</test>
<test id="s1-s2-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:08:30.568" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:08:30.568" endtime="20210805 21:08:30.568"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:08:30.569" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:08:30.568" endtime="20210805 21:08:30.569"/>
</kw>
<status status="PASS" starttime="20210805 21:08:30.567" endtime="20210805 21:08:30.569"/>
</kw>
<msg timestamp="20210805 21:08:30.569" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:08:30.566" endtime="20210805 21:08:30.569"/>
</kw>
<status status="PASS" starttime="20210805 21:08:30.566" endtime="20210805 21:08:30.570"/>
</kw>
<msg timestamp="20210805 21:08:30.570" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210805 21:08:30.565" endtime="20210805 21:08:30.570"/>
</kw>
<msg timestamp="20210805 21:08:30.570" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210805 21:08:30.565" endtime="20210805 21:08:30.570"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:30.573" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:08:32.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:08:32.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:08:30.571" endtime="20210805 21:08:32.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:08:32.592" level="INFO"/>
<status status="PASS" starttime="20210805 21:08:32.591" endtime="20210805 21:08:32.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:08:32.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:08:32.592" endtime="20210805 21:08:32.593"/>
</kw>
<status status="PASS" starttime="20210805 21:08:30.571" endtime="20210805 21:08:32.593"/>
</kw>
<msg timestamp="20210805 21:08:32.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:08:30.571" endtime="20210805 21:08:32.593"/>
</kw>
<status status="PASS" starttime="20210805 21:08:30.570" endtime="20210805 21:08:32.594"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:08:32.597" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:08:34.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:08:34.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:08:32.595" endtime="20210805 21:08:34.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:08:34.669" level="INFO"/>
<status status="PASS" starttime="20210805 21:08:34.668" endtime="20210805 21:08:34.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:08:34.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:08:34.669" endtime="20210805 21:08:34.670"/>
</kw>
<status status="PASS" starttime="20210805 21:08:32.594" endtime="20210805 21:08:34.670"/>
</kw>
<msg timestamp="20210805 21:08:34.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:08:32.594" endtime="20210805 21:08:34.670"/>
</kw>
<status status="PASS" starttime="20210805 21:08:32.594" endtime="20210805 21:08:34.670"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210805 21:08:30.564" endtime="20210805 21:08:34.670"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210805 21:08:06.311" endtime="20210805 21:08:34.672"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="194913"/>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite id="s1-s3-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:13:36.968" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:13:36.967" endtime="20210805 21:13:36.968"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:13:36.968" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:13:36.968" endtime="20210805 21:13:36.968"/>
</kw>
<status status="PASS" starttime="20210805 21:13:36.967" endtime="20210805 21:13:36.968"/>
</kw>
<msg timestamp="20210805 21:13:36.968" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:13:36.966" endtime="20210805 21:13:36.968"/>
</kw>
<status status="PASS" starttime="20210805 21:13:36.966" endtime="20210805 21:13:36.969"/>
</kw>
<msg timestamp="20210805 21:13:36.969" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:13:36.965" endtime="20210805 21:13:36.969"/>
</kw>
<msg timestamp="20210805 21:13:36.969" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:13:36.964" endtime="20210805 21:13:36.969"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:13:36.969" level="INFO">${random} = 32278</msg>
<status status="PASS" starttime="20210805 21:13:36.969" endtime="20210805 21:13:36.969"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:13:36.974" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-32278 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:13:40.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:13:40.566" level="INFO">${output} = 2021-08-05 21:13:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:13:38 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:13:36.971" endtime="20210805 21:13:40.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:13:40.567" level="INFO">2021-08-05 21:13:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:13:38 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:13:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:13:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210805 21:13:40.566" endtime="20210805 21:13:40.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:13:40.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:13:40.567" endtime="20210805 21:13:40.567"/>
</kw>
<status status="PASS" starttime="20210805 21:13:36.970" endtime="20210805 21:13:40.568"/>
</kw>
<msg timestamp="20210805 21:13:40.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:13:36.970" endtime="20210805 21:13:40.568"/>
</kw>
<msg timestamp="20210805 21:13:40.568" level="INFO">${result} = 2021-08-05 21:13:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:13:38 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:13:36.970" endtime="20210805 21:13:40.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:13:40.571" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:13:42.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:13:42.193" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:13 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-08-05 21:13 o3fs://bucket1.volume1.om/ozone-32278
dr...</msg>
<status status="PASS" starttime="20210805 21:13:40.570" endtime="20210805 21:13:42.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:13:42.194" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:13 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-08-05 21:13 o3fs://bucket1.volume1.om/ozone-32278
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:13 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210805 21:13:42.193" endtime="20210805 21:13:42.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:13:42.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:13:42.194" endtime="20210805 21:13:42.195"/>
</kw>
<status status="PASS" starttime="20210805 21:13:40.569" endtime="20210805 21:13:42.195"/>
</kw>
<msg timestamp="20210805 21:13:42.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:13:40.569" endtime="20210805 21:13:42.195"/>
</kw>
<msg timestamp="20210805 21:13:42.195" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:13 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-08-05 21:13 o3fs://bucket1.volume1.om/ozone-32278
dr...</msg>
<status status="PASS" starttime="20210805 21:13:40.568" endtime="20210805 21:13:42.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:13:42.195" endtime="20210805 21:13:42.196"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:13:42.199" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-32278 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:13:45.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:13:45.163" level="INFO">${output} = 2021-08-05 21:13:43 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:13:43 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:13:42.197" endtime="20210805 21:13:45.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:13:45.164" level="INFO">2021-08-05 21:13:43 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:13:43 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:13:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20210805 21:13:45.163" endtime="20210805 21:13:45.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:13:45.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:13:45.165" endtime="20210805 21:13:45.165"/>
</kw>
<status status="PASS" starttime="20210805 21:13:42.197" endtime="20210805 21:13:45.166"/>
</kw>
<msg timestamp="20210805 21:13:45.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:13:42.196" endtime="20210805 21:13:45.166"/>
</kw>
<msg timestamp="20210805 21:13:45.167" level="INFO">${result} = 2021-08-05 21:13:43 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:13:43 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:13:42.196" endtime="20210805 21:13:45.167"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:13:45.167" endtime="20210805 21:13:45.168"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 21:13:36.964" endtime="20210805 21:13:45.168"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210805 21:13:36.917" endtime="20210805 21:13:45.169"/>
</suite>
<suite id="s1-s3-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:13:49.422" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:13:49.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:13:49.426" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:13:49.418" endtime="20210805 21:13:49.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:13:49.427" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:13:49.427" endtime="20210805 21:13:49.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:13:49.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:13:49.428" endtime="20210805 21:13:49.428"/>
</kw>
<status status="PASS" starttime="20210805 21:13:49.418" endtime="20210805 21:13:49.428"/>
</kw>
<msg timestamp="20210805 21:13:49.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:13:49.417" endtime="20210805 21:13:49.428"/>
</kw>
<msg timestamp="20210805 21:13:49.429" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:13:49.417" endtime="20210805 21:13:49.430"/>
</kw>
<msg timestamp="20210805 21:13:49.430" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:13:49.416" endtime="20210805 21:13:49.430"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:13:49.433" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:13:49.433" endtime="20210805 21:13:49.433"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:13:49.434" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:13:49.433" endtime="20210805 21:13:49.434"/>
</kw>
<status status="PASS" starttime="20210805 21:13:49.432" endtime="20210805 21:13:49.434"/>
</kw>
<msg timestamp="20210805 21:13:49.434" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:13:49.432" endtime="20210805 21:13:49.434"/>
</kw>
<status status="PASS" starttime="20210805 21:13:49.431" endtime="20210805 21:13:49.434"/>
</kw>
<msg timestamp="20210805 21:13:49.434" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:13:49.431" endtime="20210805 21:13:49.434"/>
</kw>
<msg timestamp="20210805 21:13:49.434" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:13:49.430" endtime="20210805 21:13:49.434"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:13:49.437" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:14:29.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:14:29.271" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:13:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:13:51 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210805 21:13:49.436" endtime="20210805 21:14:29.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:14:29.272" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:13:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:13:51 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:13:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:13:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-05 21:13:54 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-08-05 21:13:55 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-05 21:13:55 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 21:13:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628197939338_0001
2021-08-05 21:13:55 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-05 21:13:55 INFO  Configuration:2795 - resource-types.xml not found
2021-08-05 21:13:55 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-08-05 21:13:56 INFO  YarnClientImpl:329 - Submitted application application_1628197939338_0001
2021-08-05 21:13:56 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1628197939338_0001/
2021-08-05 21:13:56 INFO  Job:1614 - Running job: job_1628197939338_0001
2021-08-05 21:14:06 INFO  Job:1635 - Job job_1628197939338_0001 running in uber mode : false
2021-08-05 21:14:06 INFO  Job:1642 -  map 0% reduce 0%
2021-08-05 21:14:12 INFO  Job:1642 -  map 33% reduce 0%
2021-08-05 21:14:18 INFO  Job:1642 -  map 67% reduce 0%
2021-08-05 21:14:23 INFO  Job:1642 -  map 100% reduce 0%
2021-08-05 21:14:27 INFO  Job:1642 -  map 100% reduce 100%
2021-08-05 21:14:28 INFO  Job:1653 - Job job_1628197939338_0001 completed successfully
2021-08-05 21:14:28 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1116501
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37784
		Total time spent by all reduces in occupied slots (ms)=13888
		Total time spent by all map tasks (ms)=9446
		Total time spent by all reduce tasks (ms)=3472
		Total vcore-milliseconds taken by all map tasks=9446
		Total vcore-milliseconds taken by all reduce tasks=3472
		Total megabyte-milliseconds taken by all map tasks=38690816
		Total megabyte-milliseconds taken by all reduce tasks=14221312
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=848
		CPU time spent (ms)=6560
		Physical memory (bytes) snapshot=1624911872
		Virtual memory (bytes) snapshot=15814828032
		Total committed heap usage (bytes)=1735917568
		Peak Map Physical memory (bytes)=560488448
		Peak Map Virtual memory (bytes)=3952533504
		Peak Reduce Physical memory (bytes)=339243008
		Peak Reduce Virtual memory (bytes)=3974639616
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.744 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210805 21:14:29.271" endtime="20210805 21:14:29.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:14:29.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:14:29.272" endtime="20210805 21:14:29.273"/>
</kw>
<status status="PASS" starttime="20210805 21:13:49.435" endtime="20210805 21:14:29.273"/>
</kw>
<msg timestamp="20210805 21:14:29.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:13:49.435" endtime="20210805 21:14:29.273"/>
</kw>
<msg timestamp="20210805 21:14:29.273" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:13:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:13:51 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210805 21:13:49.435" endtime="20210805 21:14:29.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:14:29.274" endtime="20210805 21:14:29.274"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:13:49.416" endtime="20210805 21:14:29.274"/>
</test>
<test id="s1-s3-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:14:29.279" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:14:29.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:14:29.284" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:14:29.277" endtime="20210805 21:14:29.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:14:29.285" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:14:29.285" endtime="20210805 21:14:29.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:14:29.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:14:29.286" endtime="20210805 21:14:29.286"/>
</kw>
<status status="PASS" starttime="20210805 21:14:29.277" endtime="20210805 21:14:29.286"/>
</kw>
<msg timestamp="20210805 21:14:29.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:14:29.276" endtime="20210805 21:14:29.286"/>
</kw>
<msg timestamp="20210805 21:14:29.287" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:14:29.276" endtime="20210805 21:14:29.287"/>
</kw>
<msg timestamp="20210805 21:14:29.287" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:14:29.276" endtime="20210805 21:14:29.287"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:14:29.287" level="INFO">${random} = 32O8VN9A</msg>
<status status="PASS" starttime="20210805 21:14:29.287" endtime="20210805 21:14:29.287"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:14:29.290" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:14:29.290" endtime="20210805 21:14:29.291"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:14:29.291" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:14:29.291" endtime="20210805 21:14:29.291"/>
</kw>
<status status="PASS" starttime="20210805 21:14:29.290" endtime="20210805 21:14:29.291"/>
</kw>
<msg timestamp="20210805 21:14:29.291" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:14:29.289" endtime="20210805 21:14:29.291"/>
</kw>
<status status="PASS" starttime="20210805 21:14:29.289" endtime="20210805 21:14:29.292"/>
</kw>
<msg timestamp="20210805 21:14:29.292" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:14:29.288" endtime="20210805 21:14:29.292"/>
</kw>
<msg timestamp="20210805 21:14:29.292" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:14:29.287" endtime="20210805 21:14:29.292"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:14:29.295" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:14:29.294" endtime="20210805 21:14:29.295"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:14:29.295" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:14:29.295" endtime="20210805 21:14:29.295"/>
</kw>
<status status="PASS" starttime="20210805 21:14:29.294" endtime="20210805 21:14:29.295"/>
</kw>
<msg timestamp="20210805 21:14:29.295" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:14:29.294" endtime="20210805 21:14:29.296"/>
</kw>
<status status="PASS" starttime="20210805 21:14:29.293" endtime="20210805 21:14:29.296"/>
</kw>
<msg timestamp="20210805 21:14:29.296" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210805 21:14:29.293" endtime="20210805 21:14:29.296"/>
</kw>
<msg timestamp="20210805 21:14:29.296" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210805 21:14:29.292" endtime="20210805 21:14:29.296"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:14:29.299" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:14:29.298" endtime="20210805 21:14:29.299"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:14:29.299" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:14:29.299" endtime="20210805 21:14:29.299"/>
</kw>
<status status="PASS" starttime="20210805 21:14:29.298" endtime="20210805 21:14:29.300"/>
</kw>
<msg timestamp="20210805 21:14:29.300" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:14:29.298" endtime="20210805 21:14:29.300"/>
</kw>
<status status="PASS" starttime="20210805 21:14:29.297" endtime="20210805 21:14:29.300"/>
</kw>
<msg timestamp="20210805 21:14:29.300" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-32O8VN9A.txt</msg>
<status status="PASS" starttime="20210805 21:14:29.297" endtime="20210805 21:14:29.300"/>
</kw>
<msg timestamp="20210805 21:14:29.300" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-32O8VN9A.txt</msg>
<status status="PASS" starttime="20210805 21:14:29.296" endtime="20210805 21:14:29.300"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:14:29.304" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-32O8VN9A.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:15:02.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:15:02.874" level="INFO">${output} = 2021-08-05 21:14:30 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-08-05 21:14:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210805 21:14:29.302" endtime="20210805 21:15:02.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:15:02.875" level="INFO">2021-08-05 21:14:30 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-08-05 21:14:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 21:14:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:14:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:14:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:14:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-05 21:14:32 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-05 21:14:32 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 21:14:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628197939338_0002
2021-08-05 21:14:32 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-05 21:14:33 INFO  Configuration:2795 - resource-types.xml not found
2021-08-05 21:14:33 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-08-05 21:14:33 INFO  YarnClientImpl:329 - Submitted application application_1628197939338_0002
2021-08-05 21:14:33 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1628197939338_0002/
2021-08-05 21:14:33 INFO  Job:1614 - Running job: job_1628197939338_0002
2021-08-05 21:14:41 INFO  Job:1635 - Job job_1628197939338_0002 running in uber mode : false
2021-08-05 21:14:41 INFO  Job:1642 -  map 0% reduce 0%
2021-08-05 21:14:47 INFO  Job:1642 -  map 33% reduce 0%
2021-08-05 21:14:52 INFO  Job:1642 -  map 67% reduce 0%
2021-08-05 21:14:57 INFO  Job:1642 -  map 100% reduce 0%
2021-08-05 21:15:01 INFO  Job:1642 -  map 100% reduce 100%
2021-08-05 21:15:02 INFO  Job:1653 - Job job_1628197939338_0002 completed successfully
2021-08-05 21:15:02 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1179267
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38936
		Total time spent by all reduces in occupied slots (ms)=13012
		Total time spent by all map tasks (ms)=9734
		Total time spent by all reduce tasks (ms)=3253
		Total vcore-milliseconds taken by all map tasks=9734
		Total vcore-milliseconds taken by all reduce tasks=3253
		Total megabyte-milliseconds taken by all map tasks=39870464
		Total megabyte-milliseconds taken by all reduce tasks=13324288
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=818
		CPU time spent (ms)=6740
		Physical memory (bytes) snapshot=1641566208
		Virtual memory (bytes) snapshot=15819943936
		Total committed heap usage (bytes)=1654652928
		Peak Map Physical memory (bytes)=564903936
		Peak Map Virtual memory (bytes)=3958906880
		Peak Reduce Physical memory (bytes)=308129792
		Peak Reduce Virtual memory (bytes)=3958128640
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210805 21:15:02.874" endtime="20210805 21:15:02.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:15:02.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:15:02.875" endtime="20210805 21:15:02.876"/>
</kw>
<status status="PASS" starttime="20210805 21:14:29.301" endtime="20210805 21:15:02.876"/>
</kw>
<msg timestamp="20210805 21:15:02.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:14:29.301" endtime="20210805 21:15:02.877"/>
</kw>
<msg timestamp="20210805 21:15:02.877" level="INFO">${output} = 2021-08-05 21:14:30 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-08-05 21:14:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210805 21:14:29.300" endtime="20210805 21:15:02.877"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:15:02.877" endtime="20210805 21:15:02.877"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:15:02.878" endtime="20210805 21:15:02.878"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:14:29.275" endtime="20210805 21:15:02.878"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210805 21:13:49.368" endtime="20210805 21:15:02.880"/>
</suite>
<suite id="s1-s3-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:15:07.125" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:15:07.124" endtime="20210805 21:15:07.125"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:15:07.125" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:15:07.125" endtime="20210805 21:15:07.125"/>
</kw>
<status status="PASS" starttime="20210805 21:15:07.124" endtime="20210805 21:15:07.125"/>
</kw>
<msg timestamp="20210805 21:15:07.125" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:15:07.124" endtime="20210805 21:15:07.126"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 21:15:07.126" endtime="20210805 21:15:07.127"/>
</kw>
<msg timestamp="20210805 21:15:07.127" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 21:15:07.126" endtime="20210805 21:15:07.127"/>
</kw>
<status status="PASS" starttime="20210805 21:15:07.123" endtime="20210805 21:15:07.127"/>
</kw>
<msg timestamp="20210805 21:15:07.127" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:15:07.122" endtime="20210805 21:15:07.127"/>
</kw>
<msg timestamp="20210805 21:15:07.127" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:15:07.121" endtime="20210805 21:15:07.127"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:15:07.128" level="INFO">${random} = 33738</msg>
<status status="PASS" starttime="20210805 21:15:07.127" endtime="20210805 21:15:07.128"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:15:07.135" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-33738 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:15:10.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:15:10.239" level="INFO">${output} = 2021-08-05 21:15:08 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:15:08 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:15:07.129" endtime="20210805 21:15:10.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:15:10.240" level="INFO">2021-08-05 21:15:08 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:15:08 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:15:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:15:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210805 21:15:10.239" endtime="20210805 21:15:10.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:15:10.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:15:10.240" endtime="20210805 21:15:10.241"/>
</kw>
<status status="PASS" starttime="20210805 21:15:07.129" endtime="20210805 21:15:10.241"/>
</kw>
<msg timestamp="20210805 21:15:10.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:15:07.128" endtime="20210805 21:15:10.241"/>
</kw>
<msg timestamp="20210805 21:15:10.241" level="INFO">${result} = 2021-08-05 21:15:08 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:15:08 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:15:07.128" endtime="20210805 21:15:10.241"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:15:10.244" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:15:11.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:15:11.885" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:13 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-08-05 21:13 ofs://om/volume1/bucket1/ozone-32278
-rw-...</msg>
<status status="PASS" starttime="20210805 21:15:10.243" endtime="20210805 21:15:11.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:15:11.886" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:13 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-08-05 21:13 ofs://om/volume1/bucket1/ozone-32278
-rw-rw-rw-   3 hadoop hadoop      21943 2021-08-05 21:15 ofs://om/volume1/bucket1/ozone-33738
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:13 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:14 ofs://om/volume1/bucket1/wordcount-32O8VN9A.txt</msg>
<status status="PASS" starttime="20210805 21:15:11.885" endtime="20210805 21:15:11.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:15:11.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:15:11.886" endtime="20210805 21:15:11.887"/>
</kw>
<status status="PASS" starttime="20210805 21:15:10.242" endtime="20210805 21:15:11.887"/>
</kw>
<msg timestamp="20210805 21:15:11.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:15:10.242" endtime="20210805 21:15:11.887"/>
</kw>
<msg timestamp="20210805 21:15:11.888" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:13 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-08-05 21:13 ofs://om/volume1/bucket1/ozone-32278
-rw-...</msg>
<status status="PASS" starttime="20210805 21:15:10.241" endtime="20210805 21:15:11.888"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:15:11.888" endtime="20210805 21:15:11.888"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:15:11.891" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-33738 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:15:14.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:15:14.740" level="INFO">${output} = 2021-08-05 21:15:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:15:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:15:11.889" endtime="20210805 21:15:14.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:15:14.741" level="INFO">2021-08-05 21:15:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:15:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:15:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20210805 21:15:14.740" endtime="20210805 21:15:14.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:15:14.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:15:14.742" endtime="20210805 21:15:14.742"/>
</kw>
<status status="PASS" starttime="20210805 21:15:11.889" endtime="20210805 21:15:14.742"/>
</kw>
<msg timestamp="20210805 21:15:14.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:15:11.889" endtime="20210805 21:15:14.743"/>
</kw>
<msg timestamp="20210805 21:15:14.744" level="INFO">${result} = 2021-08-05 21:15:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:15:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:15:11.888" endtime="20210805 21:15:14.744"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:15:14.744" endtime="20210805 21:15:14.744"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 21:15:07.121" endtime="20210805 21:15:14.745"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210805 21:15:07.075" endtime="20210805 21:15:14.746"/>
</suite>
<suite id="s1-s3-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:15:19.039" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:15:19.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:15:19.045" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:15:19.036" endtime="20210805 21:15:19.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:15:19.046" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:15:19.045" endtime="20210805 21:15:19.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:15:19.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:15:19.046" endtime="20210805 21:15:19.046"/>
</kw>
<status status="PASS" starttime="20210805 21:15:19.035" endtime="20210805 21:15:19.047"/>
</kw>
<msg timestamp="20210805 21:15:19.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:15:19.035" endtime="20210805 21:15:19.047"/>
</kw>
<msg timestamp="20210805 21:15:19.047" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:15:19.034" endtime="20210805 21:15:19.048"/>
</kw>
<msg timestamp="20210805 21:15:19.048" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:15:19.034" endtime="20210805 21:15:19.048"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:15:19.051" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:15:19.051" endtime="20210805 21:15:19.051"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:15:19.052" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:15:19.052" endtime="20210805 21:15:19.052"/>
</kw>
<status status="PASS" starttime="20210805 21:15:19.051" endtime="20210805 21:15:19.052"/>
</kw>
<msg timestamp="20210805 21:15:19.052" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:15:19.050" endtime="20210805 21:15:19.052"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 21:15:19.053" endtime="20210805 21:15:19.053"/>
</kw>
<msg timestamp="20210805 21:15:19.053" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 21:15:19.052" endtime="20210805 21:15:19.053"/>
</kw>
<status status="PASS" starttime="20210805 21:15:19.050" endtime="20210805 21:15:19.053"/>
</kw>
<msg timestamp="20210805 21:15:19.054" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:15:19.049" endtime="20210805 21:15:19.054"/>
</kw>
<msg timestamp="20210805 21:15:19.054" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:15:19.048" endtime="20210805 21:15:19.054"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:15:19.057" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:15:51.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:15:51.251" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:15:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:15:20 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210805 21:15:19.055" endtime="20210805 21:15:51.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:15:51.252" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:15:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:15:20 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:15:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:15:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-05 21:15:22 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-08-05 21:15:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 21:15:22 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-05 21:15:22 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 21:15:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628197939338_0003
2021-08-05 21:15:22 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-05 21:15:23 INFO  Configuration:2795 - resource-types.xml not found
2021-08-05 21:15:23 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-08-05 21:15:23 INFO  YarnClientImpl:329 - Submitted application application_1628197939338_0003
2021-08-05 21:15:23 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1628197939338_0003/
2021-08-05 21:15:23 INFO  Job:1614 - Running job: job_1628197939338_0003
2021-08-05 21:15:29 INFO  Job:1635 - Job job_1628197939338_0003 running in uber mode : false
2021-08-05 21:15:29 INFO  Job:1642 -  map 0% reduce 0%
2021-08-05 21:15:36 INFO  Job:1642 -  map 33% reduce 0%
2021-08-05 21:15:41 INFO  Job:1642 -  map 67% reduce 0%
2021-08-05 21:15:45 INFO  Job:1642 -  map 100% reduce 0%
2021-08-05 21:15:50 INFO  Job:1642 -  map 100% reduce 100%
2021-08-05 21:15:50 INFO  Job:1653 - Job job_1628197939338_0003 completed successfully
2021-08-05 21:15:50 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1116281
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37872
		Total time spent by all reduces in occupied slots (ms)=13552
		Total time spent by all map tasks (ms)=9468
		Total time spent by all reduce tasks (ms)=3388
		Total vcore-milliseconds taken by all map tasks=9468
		Total vcore-milliseconds taken by all reduce tasks=3388
		Total megabyte-milliseconds taken by all map tasks=38780928
		Total megabyte-milliseconds taken by all reduce tasks=13877248
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=903
		CPU time spent (ms)=7260
		Physical memory (bytes) snapshot=1903034368
		Virtual memory (bytes) snapshot=15828078592
		Total committed heap usage (bytes)=1809842176
		Peak Map Physical memory (bytes)=560291840
		Peak Map Virtual memory (bytes)=3952869376
		Peak Reduce Physical memory (bytes)=392593408
		Peak Reduce Virtual memory (bytes)=3974295552
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.531 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210805 21:15:51.251" endtime="20210805 21:15:51.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:15:51.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:15:51.252" endtime="20210805 21:15:51.253"/>
</kw>
<status status="PASS" starttime="20210805 21:15:19.055" endtime="20210805 21:15:51.253"/>
</kw>
<msg timestamp="20210805 21:15:51.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:15:19.054" endtime="20210805 21:15:51.253"/>
</kw>
<msg timestamp="20210805 21:15:51.254" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:15:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:15:20 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210805 21:15:19.054" endtime="20210805 21:15:51.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:15:51.254" endtime="20210805 21:15:51.254"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:15:19.033" endtime="20210805 21:15:51.255"/>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:15:51.259" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:15:51.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:15:51.264" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:15:51.257" endtime="20210805 21:15:51.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:15:51.265" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:15:51.264" endtime="20210805 21:15:51.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:15:51.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:15:51.265" endtime="20210805 21:15:51.266"/>
</kw>
<status status="PASS" starttime="20210805 21:15:51.257" endtime="20210805 21:15:51.266"/>
</kw>
<msg timestamp="20210805 21:15:51.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:15:51.257" endtime="20210805 21:15:51.266"/>
</kw>
<msg timestamp="20210805 21:15:51.266" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:15:51.256" endtime="20210805 21:15:51.266"/>
</kw>
<msg timestamp="20210805 21:15:51.267" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210805 21:15:51.256" endtime="20210805 21:15:51.267"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:15:51.267" level="INFO">${random} = r8OO3HK8</msg>
<status status="PASS" starttime="20210805 21:15:51.267" endtime="20210805 21:15:51.267"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:15:51.270" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:15:51.270" endtime="20210805 21:15:51.270"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:15:51.271" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:15:51.270" endtime="20210805 21:15:51.271"/>
</kw>
<status status="PASS" starttime="20210805 21:15:51.270" endtime="20210805 21:15:51.271"/>
</kw>
<msg timestamp="20210805 21:15:51.271" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:15:51.269" endtime="20210805 21:15:51.271"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 21:15:51.272" endtime="20210805 21:15:51.272"/>
</kw>
<msg timestamp="20210805 21:15:51.272" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 21:15:51.271" endtime="20210805 21:15:51.272"/>
</kw>
<status status="PASS" starttime="20210805 21:15:51.268" endtime="20210805 21:15:51.272"/>
</kw>
<msg timestamp="20210805 21:15:51.272" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:15:51.268" endtime="20210805 21:15:51.272"/>
</kw>
<msg timestamp="20210805 21:15:51.273" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:15:51.267" endtime="20210805 21:15:51.273"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:15:51.276" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:15:51.275" endtime="20210805 21:15:51.276"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:15:51.276" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:15:51.276" endtime="20210805 21:15:51.276"/>
</kw>
<status status="PASS" starttime="20210805 21:15:51.275" endtime="20210805 21:15:51.276"/>
</kw>
<msg timestamp="20210805 21:15:51.277" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:15:51.274" endtime="20210805 21:15:51.277"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:15:51.278" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210805 21:15:51.278" endtime="20210805 21:15:51.278"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:15:51.279" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210805 21:15:51.278" endtime="20210805 21:15:51.279"/>
</kw>
<status status="PASS" starttime="20210805 21:15:51.277" endtime="20210805 21:15:51.279"/>
</kw>
<msg timestamp="20210805 21:15:51.279" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210805 21:15:51.277" endtime="20210805 21:15:51.279"/>
</kw>
<status status="PASS" starttime="20210805 21:15:51.274" endtime="20210805 21:15:51.279"/>
</kw>
<msg timestamp="20210805 21:15:51.279" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210805 21:15:51.273" endtime="20210805 21:15:51.279"/>
</kw>
<msg timestamp="20210805 21:15:51.279" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210805 21:15:51.273" endtime="20210805 21:15:51.280"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:15:51.283" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:15:51.282" endtime="20210805 21:15:51.283"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:15:51.283" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:15:51.283" endtime="20210805 21:15:51.283"/>
</kw>
<status status="PASS" starttime="20210805 21:15:51.282" endtime="20210805 21:15:51.283"/>
</kw>
<msg timestamp="20210805 21:15:51.283" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:15:51.281" endtime="20210805 21:15:51.283"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:15:51.285" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210805 21:15:51.284" endtime="20210805 21:15:51.285"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:15:51.285" level="INFO">${result} = /wordcount-r8OO3HK8.txt</msg>
<status status="PASS" starttime="20210805 21:15:51.285" endtime="20210805 21:15:51.285"/>
</kw>
<status status="PASS" starttime="20210805 21:15:51.284" endtime="20210805 21:15:51.285"/>
</kw>
<msg timestamp="20210805 21:15:51.286" level="INFO">${path_with_leading} = /wordcount-r8OO3HK8.txt</msg>
<status status="PASS" starttime="20210805 21:15:51.284" endtime="20210805 21:15:51.286"/>
</kw>
<status status="PASS" starttime="20210805 21:15:51.281" endtime="20210805 21:15:51.286"/>
</kw>
<msg timestamp="20210805 21:15:51.286" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-r8OO3HK8.txt</msg>
<status status="PASS" starttime="20210805 21:15:51.280" endtime="20210805 21:15:51.286"/>
</kw>
<msg timestamp="20210805 21:15:51.286" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-r8OO3HK8.txt</msg>
<status status="PASS" starttime="20210805 21:15:51.280" endtime="20210805 21:15:51.286"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:15:51.289" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-r8OO3HK8.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:16:28.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:16:28.833" level="INFO">${output} = 2021-08-05 21:15:52 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-08-05 21:15:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210805 21:15:51.288" endtime="20210805 21:16:28.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:16:28.834" level="INFO">2021-08-05 21:15:52 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-08-05 21:15:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 21:15:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:15:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:15:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:15:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-05 21:15:56 INFO  FileInputFormat:292 - Total input files to process : 3
2021-08-05 21:15:57 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 21:15:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628197939338_0004
2021-08-05 21:15:59 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-05 21:15:59 INFO  Configuration:2795 - resource-types.xml not found
2021-08-05 21:15:59 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-08-05 21:15:59 INFO  YarnClientImpl:329 - Submitted application application_1628197939338_0004
2021-08-05 21:15:59 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1628197939338_0004/
2021-08-05 21:15:59 INFO  Job:1614 - Running job: job_1628197939338_0004
2021-08-05 21:16:07 INFO  Job:1635 - Job job_1628197939338_0004 running in uber mode : false
2021-08-05 21:16:07 INFO  Job:1642 -  map 0% reduce 0%
2021-08-05 21:16:13 INFO  Job:1642 -  map 33% reduce 0%
2021-08-05 21:16:18 INFO  Job:1642 -  map 67% reduce 0%
2021-08-05 21:16:23 INFO  Job:1642 -  map 100% reduce 0%
2021-08-05 21:16:27 INFO  Job:1642 -  map 100% reduce 100%
2021-08-05 21:16:28 INFO  Job:1653 - Job job_1628197939338_0004 completed successfully
2021-08-05 21:16:28 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1179183
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37748
		Total time spent by all reduces in occupied slots (ms)=13168
		Total time spent by all map tasks (ms)=9437
		Total time spent by all reduce tasks (ms)=3292
		Total vcore-milliseconds taken by all map tasks=9437
		Total vcore-milliseconds taken by all reduce tasks=3292
		Total megabyte-milliseconds taken by all map tasks=38653952
		Total megabyte-milliseconds taken by all reduce tasks=13484032
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=713
		CPU time spent (ms)=7100
		Physical memory (bytes) snapshot=1660207104
		Virtual memory (bytes) snapshot=15829278720
		Total committed heap usage (bytes)=1645215744
		Peak Map Physical memory (bytes)=557805568
		Peak Map Virtual memory (bytes)=3954946048
		Peak Reduce Physical memory (bytes)=328900608
		Peak Reduce Virtual memory (bytes)=3970871296
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210805 21:16:28.834" endtime="20210805 21:16:28.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:16:28.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:16:28.835" endtime="20210805 21:16:28.835"/>
</kw>
<status status="PASS" starttime="20210805 21:15:51.287" endtime="20210805 21:16:28.836"/>
</kw>
<msg timestamp="20210805 21:16:28.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:15:51.287" endtime="20210805 21:16:28.836"/>
</kw>
<msg timestamp="20210805 21:16:28.836" level="INFO">${output} = 2021-08-05 21:15:52 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-08-05 21:15:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210805 21:15:51.286" endtime="20210805 21:16:28.836"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:16:28.836" endtime="20210805 21:16:28.837"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:16:28.837" endtime="20210805 21:16:28.837"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:15:51.255" endtime="20210805 21:16:28.837"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210805 21:15:18.987" endtime="20210805 21:16:28.838"/>
</suite>
<suite id="s1-s3-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s3-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:12:54.081" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:12:58.008" level="INFO">${rc} = 255</msg>
<msg timestamp="20210805 21:12:58.008" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 21:12:54.078" endtime="20210805 21:12:58.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:12:58.010" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 21:12:58.009" endtime="20210805 21:12:58.010"/>
</kw>
<msg timestamp="20210805 21:12:58.010" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 21:12:54.077" endtime="20210805 21:12:58.010"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:12:58.015" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:13:01.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:13:01.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:12:58.013" endtime="20210805 21:13:01.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:13:01.174" level="INFO"/>
<status status="PASS" starttime="20210805 21:13:01.174" endtime="20210805 21:13:01.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:13:01.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:13:01.175" endtime="20210805 21:13:01.175"/>
</kw>
<status status="PASS" starttime="20210805 21:12:58.012" endtime="20210805 21:13:01.175"/>
</kw>
<msg timestamp="20210805 21:13:01.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:12:58.012" endtime="20210805 21:13:01.176"/>
</kw>
<msg timestamp="20210805 21:13:01.176" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210805 21:12:58.011" endtime="20210805 21:13:01.176"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:13:01.176" endtime="20210805 21:13:01.177"/>
</kw>
<status status="PASS" starttime="20210805 21:12:58.011" endtime="20210805 21:13:01.177"/>
</kw>
<status status="PASS" starttime="20210805 21:12:58.010" endtime="20210805 21:13:01.177"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:13:01.181" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:13:04.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:13:04.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:13:01.179" endtime="20210805 21:13:04.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:13:04.004" level="INFO"/>
<status status="PASS" starttime="20210805 21:13:04.003" endtime="20210805 21:13:04.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:13:04.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:13:04.004" endtime="20210805 21:13:04.004"/>
</kw>
<status status="PASS" starttime="20210805 21:13:01.178" endtime="20210805 21:13:04.005"/>
</kw>
<msg timestamp="20210805 21:13:04.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:13:01.178" endtime="20210805 21:13:04.005"/>
</kw>
<status status="PASS" starttime="20210805 21:13:01.178" endtime="20210805 21:13:04.005"/>
</kw>
<status status="PASS" starttime="20210805 21:13:01.177" endtime="20210805 21:13:04.005"/>
</kw>
<status status="PASS" starttime="20210805 21:13:01.177" endtime="20210805 21:13:04.005"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210805 21:13:04.005" endtime="20210805 21:13:04.006"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:13:04.009" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:13:07.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:13:07.143" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T21:13...</msg>
<status status="PASS" starttime="20210805 21:13:04.007" endtime="20210805 21:13:07.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:13:07.144" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T21:13:03.914Z",
  "modificationTime" : "2021-08-05T21:13:03.914Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210805 21:13:07.144" endtime="20210805 21:13:07.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:13:07.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:13:07.145" endtime="20210805 21:13:07.145"/>
</kw>
<status status="PASS" starttime="20210805 21:13:04.007" endtime="20210805 21:13:07.145"/>
</kw>
<msg timestamp="20210805 21:13:07.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:13:04.006" endtime="20210805 21:13:07.146"/>
</kw>
<msg timestamp="20210805 21:13:07.146" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T21:13...</msg>
<status status="PASS" starttime="20210805 21:13:04.006" endtime="20210805 21:13:07.146"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:13:07.146" endtime="20210805 21:13:07.146"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:13:07.150" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:13:07.150" endtime="20210805 21:13:07.150"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:13:07.151" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:13:07.150" endtime="20210805 21:13:07.151"/>
</kw>
<status status="PASS" starttime="20210805 21:13:07.149" endtime="20210805 21:13:07.151"/>
</kw>
<msg timestamp="20210805 21:13:07.151" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:13:07.148" endtime="20210805 21:13:07.151"/>
</kw>
<status status="PASS" starttime="20210805 21:13:07.148" endtime="20210805 21:13:07.152"/>
</kw>
<msg timestamp="20210805 21:13:07.152" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210805 21:13:07.147" endtime="20210805 21:13:07.152"/>
</kw>
<msg timestamp="20210805 21:13:07.152" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210805 21:13:07.146" endtime="20210805 21:13:07.152"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:13:07.155" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:13:10.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:13:10.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:13:07.153" endtime="20210805 21:13:10.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:13:10.225" level="INFO"/>
<status status="PASS" starttime="20210805 21:13:10.224" endtime="20210805 21:13:10.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:13:10.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:13:10.225" endtime="20210805 21:13:10.225"/>
</kw>
<status status="PASS" starttime="20210805 21:13:07.153" endtime="20210805 21:13:10.226"/>
</kw>
<msg timestamp="20210805 21:13:10.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:13:07.152" endtime="20210805 21:13:10.226"/>
</kw>
<status status="PASS" starttime="20210805 21:13:07.152" endtime="20210805 21:13:10.226"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:13:10.229" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:13:16.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:13:16.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:13:10.227" endtime="20210805 21:13:16.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:13:16.260" level="INFO"/>
<status status="PASS" starttime="20210805 21:13:16.259" endtime="20210805 21:13:16.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:13:16.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:13:16.260" endtime="20210805 21:13:16.261"/>
</kw>
<status status="PASS" starttime="20210805 21:13:10.227" endtime="20210805 21:13:16.261"/>
</kw>
<msg timestamp="20210805 21:13:16.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:13:10.227" endtime="20210805 21:13:16.261"/>
</kw>
<status status="PASS" starttime="20210805 21:13:10.226" endtime="20210805 21:13:16.261"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:13:16.265" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:13:21.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:13:21.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:13:16.263" endtime="20210805 21:13:21.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:13:21.238" level="INFO"/>
<status status="PASS" starttime="20210805 21:13:21.238" endtime="20210805 21:13:21.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:13:21.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:13:21.238" endtime="20210805 21:13:21.239"/>
</kw>
<status status="PASS" starttime="20210805 21:13:16.262" endtime="20210805 21:13:21.239"/>
</kw>
<msg timestamp="20210805 21:13:21.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:13:16.262" endtime="20210805 21:13:21.239"/>
</kw>
<status status="PASS" starttime="20210805 21:13:16.262" endtime="20210805 21:13:21.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:13:21.243" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:13:26.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:13:26.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:13:21.241" endtime="20210805 21:13:26.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:13:26.615" level="INFO"/>
<status status="PASS" starttime="20210805 21:13:26.614" endtime="20210805 21:13:26.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:13:26.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:13:26.615" endtime="20210805 21:13:26.615"/>
</kw>
<status status="PASS" starttime="20210805 21:13:21.240" endtime="20210805 21:13:26.616"/>
</kw>
<msg timestamp="20210805 21:13:26.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:13:21.240" endtime="20210805 21:13:26.616"/>
</kw>
<status status="PASS" starttime="20210805 21:13:21.240" endtime="20210805 21:13:26.616"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210805 21:12:54.076" endtime="20210805 21:13:26.616"/>
</test>
<test id="s1-s3-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:13:26.621" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:13:26.621" endtime="20210805 21:13:26.621"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:13:26.622" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:13:26.621" endtime="20210805 21:13:26.622"/>
</kw>
<status status="PASS" starttime="20210805 21:13:26.620" endtime="20210805 21:13:26.622"/>
</kw>
<msg timestamp="20210805 21:13:26.622" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:13:26.619" endtime="20210805 21:13:26.622"/>
</kw>
<status status="PASS" starttime="20210805 21:13:26.619" endtime="20210805 21:13:26.623"/>
</kw>
<msg timestamp="20210805 21:13:26.623" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210805 21:13:26.618" endtime="20210805 21:13:26.623"/>
</kw>
<msg timestamp="20210805 21:13:26.623" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210805 21:13:26.617" endtime="20210805 21:13:26.623"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:13:26.626" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:13:29.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:13:29.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:13:26.624" endtime="20210805 21:13:29.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:13:29.571" level="INFO"/>
<status status="PASS" starttime="20210805 21:13:29.570" endtime="20210805 21:13:29.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:13:29.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:13:29.572" endtime="20210805 21:13:29.572"/>
</kw>
<status status="PASS" starttime="20210805 21:13:26.624" endtime="20210805 21:13:29.572"/>
</kw>
<msg timestamp="20210805 21:13:29.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:13:26.624" endtime="20210805 21:13:29.572"/>
</kw>
<status status="PASS" starttime="20210805 21:13:26.623" endtime="20210805 21:13:29.573"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:13:29.576" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:13:32.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:13:32.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:13:29.574" endtime="20210805 21:13:32.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:13:32.700" level="INFO"/>
<status status="PASS" starttime="20210805 21:13:32.699" endtime="20210805 21:13:32.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:13:32.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:13:32.700" endtime="20210805 21:13:32.700"/>
</kw>
<status status="PASS" starttime="20210805 21:13:29.574" endtime="20210805 21:13:32.701"/>
</kw>
<msg timestamp="20210805 21:13:32.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:13:29.573" endtime="20210805 21:13:32.701"/>
</kw>
<status status="PASS" starttime="20210805 21:13:29.573" endtime="20210805 21:13:32.701"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210805 21:13:26.617" endtime="20210805 21:13:32.701"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210805 21:12:54.013" endtime="20210805 21:13:32.702"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="197975"/>
</suite>
<suite id="s1-s4" name="hadoop33">
<suite id="s1-s4-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:18:32.854" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:18:32.854" endtime="20210805 21:18:32.854"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:18:32.855" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:18:32.854" endtime="20210805 21:18:32.855"/>
</kw>
<status status="PASS" starttime="20210805 21:18:32.853" endtime="20210805 21:18:32.855"/>
</kw>
<msg timestamp="20210805 21:18:32.855" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:18:32.853" endtime="20210805 21:18:32.855"/>
</kw>
<status status="PASS" starttime="20210805 21:18:32.852" endtime="20210805 21:18:32.855"/>
</kw>
<msg timestamp="20210805 21:18:32.856" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:18:32.852" endtime="20210805 21:18:32.856"/>
</kw>
<msg timestamp="20210805 21:18:32.856" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:18:32.851" endtime="20210805 21:18:32.856"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:18:32.856" level="INFO">${random} = 36709</msg>
<status status="PASS" starttime="20210805 21:18:32.856" endtime="20210805 21:18:32.856"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:18:32.861" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-36709 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:18:36.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:18:36.386" level="INFO">${output} = 2021-08-05 21:18:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:18:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:18:32.857" endtime="20210805 21:18:36.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:18:36.387" level="INFO">2021-08-05 21:18:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:18:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:18:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:18:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210805 21:18:36.386" endtime="20210805 21:18:36.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:18:36.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:18:36.387" endtime="20210805 21:18:36.388"/>
</kw>
<status status="PASS" starttime="20210805 21:18:32.857" endtime="20210805 21:18:36.388"/>
</kw>
<msg timestamp="20210805 21:18:36.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:18:32.857" endtime="20210805 21:18:36.388"/>
</kw>
<msg timestamp="20210805 21:18:36.388" level="INFO">${result} = 2021-08-05 21:18:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:18:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:18:32.856" endtime="20210805 21:18:36.388"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:18:36.391" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:18:38.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:18:38.142" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-05 21:18 o3fs://bucket1.volume1.om/ozone-36709
dr...</msg>
<status status="PASS" starttime="20210805 21:18:36.390" endtime="20210805 21:18:38.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:18:38.143" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-05 21:18 o3fs://bucket1.volume1.om/ozone-36709
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:18 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210805 21:18:38.142" endtime="20210805 21:18:38.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:18:38.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:18:38.143" endtime="20210805 21:18:38.143"/>
</kw>
<status status="PASS" starttime="20210805 21:18:36.389" endtime="20210805 21:18:38.144"/>
</kw>
<msg timestamp="20210805 21:18:38.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:18:36.389" endtime="20210805 21:18:38.144"/>
</kw>
<msg timestamp="20210805 21:18:38.144" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-05 21:18 o3fs://bucket1.volume1.om/ozone-36709
dr...</msg>
<status status="PASS" starttime="20210805 21:18:36.388" endtime="20210805 21:18:38.144"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:18:38.144" endtime="20210805 21:18:38.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:18:38.148" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-36709 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:18:41.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:18:41.191" level="INFO">${output} = 2021-08-05 21:18:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:18:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:18:38.146" endtime="20210805 21:18:41.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:18:41.192" level="INFO">2021-08-05 21:18:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:18:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:18:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20210805 21:18:41.192" endtime="20210805 21:18:41.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:18:41.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:18:41.193" endtime="20210805 21:18:41.193"/>
</kw>
<status status="PASS" starttime="20210805 21:18:38.146" endtime="20210805 21:18:41.193"/>
</kw>
<msg timestamp="20210805 21:18:41.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:18:38.145" endtime="20210805 21:18:41.194"/>
</kw>
<msg timestamp="20210805 21:18:41.194" level="INFO">${result} = 2021-08-05 21:18:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:18:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:18:38.145" endtime="20210805 21:18:41.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:18:41.194" endtime="20210805 21:18:41.194"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 21:18:32.850" endtime="20210805 21:18:41.194"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210805 21:18:32.803" endtime="20210805 21:18:41.196"/>
</suite>
<suite id="s1-s4-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:18:45.533" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:18:45.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:18:45.539" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:18:45.530" endtime="20210805 21:18:45.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:18:45.540" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:18:45.540" endtime="20210805 21:18:45.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:18:45.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:18:45.541" endtime="20210805 21:18:45.541"/>
</kw>
<status status="PASS" starttime="20210805 21:18:45.529" endtime="20210805 21:18:45.541"/>
</kw>
<msg timestamp="20210805 21:18:45.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:18:45.529" endtime="20210805 21:18:45.541"/>
</kw>
<msg timestamp="20210805 21:18:45.542" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:18:45.529" endtime="20210805 21:18:45.542"/>
</kw>
<msg timestamp="20210805 21:18:45.543" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:18:45.528" endtime="20210805 21:18:45.543"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:18:45.546" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:18:45.546" endtime="20210805 21:18:45.546"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:18:45.546" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:18:45.546" endtime="20210805 21:18:45.547"/>
</kw>
<status status="PASS" starttime="20210805 21:18:45.545" endtime="20210805 21:18:45.547"/>
</kw>
<msg timestamp="20210805 21:18:45.547" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:18:45.545" endtime="20210805 21:18:45.547"/>
</kw>
<status status="PASS" starttime="20210805 21:18:45.544" endtime="20210805 21:18:45.547"/>
</kw>
<msg timestamp="20210805 21:18:45.547" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:18:45.544" endtime="20210805 21:18:45.547"/>
</kw>
<msg timestamp="20210805 21:18:45.547" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:18:45.543" endtime="20210805 21:18:45.547"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:18:45.550" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:19:28.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:19:28.427" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:18:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:18:47 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210805 21:18:45.549" endtime="20210805 21:19:28.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:19:28.428" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:18:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:18:47 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:18:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:18:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-05 21:18:51 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.9:8032
2021-08-05 21:18:54 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-05 21:18:54 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 21:18:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628198238007_0001
2021-08-05 21:18:54 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-05 21:18:55 INFO  Configuration:2824 - resource-types.xml not found
2021-08-05 21:18:55 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-05 21:18:55 INFO  YarnClientImpl:338 - Submitted application application_1628198238007_0001
2021-08-05 21:18:55 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1628198238007_0001/
2021-08-05 21:18:55 INFO  Job:1620 - Running job: job_1628198238007_0001
2021-08-05 21:19:05 INFO  Job:1641 - Job job_1628198238007_0001 running in uber mode : false
2021-08-05 21:19:05 INFO  Job:1648 -  map 0% reduce 0%
2021-08-05 21:19:11 INFO  Job:1648 -  map 33% reduce 0%
2021-08-05 21:19:17 INFO  Job:1648 -  map 67% reduce 0%
2021-08-05 21:19:22 INFO  Job:1648 -  map 100% reduce 0%
2021-08-05 21:19:26 INFO  Job:1648 -  map 100% reduce 100%
2021-08-05 21:19:27 INFO  Job:1659 - Job job_1628198238007_0001 completed successfully
2021-08-05 21:19:27 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1268453
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39344
		Total time spent by all reduces in occupied slots (ms)=14696
		Total time spent by all map tasks (ms)=9836
		Total time spent by all reduce tasks (ms)=3674
		Total vcore-milliseconds taken by all map tasks=9836
		Total vcore-milliseconds taken by all reduce tasks=3674
		Total megabyte-milliseconds taken by all map tasks=40288256
		Total megabyte-milliseconds taken by all reduce tasks=15048704
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=540
		CPU time spent (ms)=5710
		Physical memory (bytes) snapshot=1565245440
		Virtual memory (bytes) snapshot=15754207232
		Total committed heap usage (bytes)=1417150464
		Peak Map Physical memory (bytes)=417542144
		Peak Map Virtual memory (bytes)=3932934144
		Peak Reduce Physical memory (bytes)=317624320
		Peak Reduce Virtual memory (bytes)=3956834304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.369 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210805 21:19:28.427" endtime="20210805 21:19:28.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:19:28.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:19:28.428" endtime="20210805 21:19:28.429"/>
</kw>
<status status="PASS" starttime="20210805 21:18:45.548" endtime="20210805 21:19:28.429"/>
</kw>
<msg timestamp="20210805 21:19:28.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:18:45.548" endtime="20210805 21:19:28.429"/>
</kw>
<msg timestamp="20210805 21:19:28.429" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:18:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:18:47 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210805 21:18:45.547" endtime="20210805 21:19:28.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:19:28.430" endtime="20210805 21:19:28.430"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:18:45.528" endtime="20210805 21:19:28.430"/>
</test>
<test id="s1-s4-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:19:28.435" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:19:28.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:19:28.441" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:19:28.433" endtime="20210805 21:19:28.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:19:28.442" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:19:28.442" endtime="20210805 21:19:28.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:19:28.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:19:28.443" endtime="20210805 21:19:28.443"/>
</kw>
<status status="PASS" starttime="20210805 21:19:28.432" endtime="20210805 21:19:28.443"/>
</kw>
<msg timestamp="20210805 21:19:28.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:19:28.432" endtime="20210805 21:19:28.444"/>
</kw>
<msg timestamp="20210805 21:19:28.444" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:19:28.432" endtime="20210805 21:19:28.444"/>
</kw>
<msg timestamp="20210805 21:19:28.444" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:19:28.431" endtime="20210805 21:19:28.444"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:19:28.445" level="INFO">${random} = OqFhECKH</msg>
<status status="PASS" starttime="20210805 21:19:28.444" endtime="20210805 21:19:28.445"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:19:28.448" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:19:28.447" endtime="20210805 21:19:28.448"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:19:28.448" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:19:28.448" endtime="20210805 21:19:28.448"/>
</kw>
<status status="PASS" starttime="20210805 21:19:28.447" endtime="20210805 21:19:28.449"/>
</kw>
<msg timestamp="20210805 21:19:28.449" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:19:28.447" endtime="20210805 21:19:28.449"/>
</kw>
<status status="PASS" starttime="20210805 21:19:28.446" endtime="20210805 21:19:28.449"/>
</kw>
<msg timestamp="20210805 21:19:28.449" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:19:28.445" endtime="20210805 21:19:28.449"/>
</kw>
<msg timestamp="20210805 21:19:28.449" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 21:19:28.445" endtime="20210805 21:19:28.449"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:19:28.452" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:19:28.452" endtime="20210805 21:19:28.452"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:19:28.453" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:19:28.452" endtime="20210805 21:19:28.453"/>
</kw>
<status status="PASS" starttime="20210805 21:19:28.451" endtime="20210805 21:19:28.455"/>
</kw>
<msg timestamp="20210805 21:19:28.455" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:19:28.451" endtime="20210805 21:19:28.455"/>
</kw>
<status status="PASS" starttime="20210805 21:19:28.450" endtime="20210805 21:19:28.455"/>
</kw>
<msg timestamp="20210805 21:19:28.455" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210805 21:19:28.450" endtime="20210805 21:19:28.455"/>
</kw>
<msg timestamp="20210805 21:19:28.456" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210805 21:19:28.449" endtime="20210805 21:19:28.456"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:19:28.459" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:19:28.458" endtime="20210805 21:19:28.459"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:19:28.459" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:19:28.459" endtime="20210805 21:19:28.459"/>
</kw>
<status status="PASS" starttime="20210805 21:19:28.458" endtime="20210805 21:19:28.459"/>
</kw>
<msg timestamp="20210805 21:19:28.460" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:19:28.457" endtime="20210805 21:19:28.460"/>
</kw>
<status status="PASS" starttime="20210805 21:19:28.457" endtime="20210805 21:19:28.460"/>
</kw>
<msg timestamp="20210805 21:19:28.460" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-OqFhECKH.txt</msg>
<status status="PASS" starttime="20210805 21:19:28.456" endtime="20210805 21:19:28.460"/>
</kw>
<msg timestamp="20210805 21:19:28.460" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-OqFhECKH.txt</msg>
<status status="PASS" starttime="20210805 21:19:28.456" endtime="20210805 21:19:28.460"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:19:28.463" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-OqFhECKH.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:20:06.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:20:06.421" level="INFO">${output} = 2021-08-05 21:19:30 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.9:8032
2021-08-05 21:19:30 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20210805 21:19:28.461" endtime="20210805 21:20:06.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:20:06.422" level="INFO">2021-08-05 21:19:30 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.9:8032
2021-08-05 21:19:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 21:19:30 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:19:30 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:19:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:19:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-05 21:19:31 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-05 21:19:31 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 21:19:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628198238007_0002
2021-08-05 21:19:32 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-05 21:19:32 INFO  Configuration:2824 - resource-types.xml not found
2021-08-05 21:19:32 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-05 21:19:32 INFO  YarnClientImpl:338 - Submitted application application_1628198238007_0002
2021-08-05 21:19:32 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1628198238007_0002/
2021-08-05 21:19:32 INFO  Job:1620 - Running job: job_1628198238007_0002
2021-08-05 21:19:40 INFO  Job:1641 - Job job_1628198238007_0002 running in uber mode : false
2021-08-05 21:19:40 INFO  Job:1648 -  map 0% reduce 0%
2021-08-05 21:19:47 INFO  Job:1648 -  map 33% reduce 0%
2021-08-05 21:19:52 INFO  Job:1648 -  map 67% reduce 0%
2021-08-05 21:19:57 INFO  Job:1648 -  map 100% reduce 0%
2021-08-05 21:20:01 INFO  Job:1648 -  map 100% reduce 100%
2021-08-05 21:20:05 INFO  Job:1659 - Job job_1628198238007_0002 completed successfully
2021-08-05 21:20:06 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1331211
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40020
		Total time spent by all reduces in occupied slots (ms)=13940
		Total time spent by all map tasks (ms)=10005
		Total time spent by all reduce tasks (ms)=3485
		Total vcore-milliseconds taken by all map tasks=10005
		Total vcore-milliseconds taken by all reduce tasks=3485
		Total megabyte-milliseconds taken by all map tasks=40980480
		Total megabyte-milliseconds taken by all reduce tasks=14274560
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=534
		CPU time spent (ms)=6360
		Physical memory (bytes) snapshot=1618292736
		Virtual memory (bytes) snapshot=15778115584
		Total committed heap usage (bytes)=1461714944
		Peak Map Physical memory (bytes)=444018688
		Peak Map Virtual memory (bytes)=3954786304
		Peak Reduce Physical memory (bytes)=337633280
		Peak Reduce Virtual memory (bytes)=3956363264
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210805 21:20:06.422" endtime="20210805 21:20:06.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:20:06.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:20:06.423" endtime="20210805 21:20:06.424"/>
</kw>
<status status="PASS" starttime="20210805 21:19:28.461" endtime="20210805 21:20:06.424"/>
</kw>
<msg timestamp="20210805 21:20:06.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:19:28.461" endtime="20210805 21:20:06.424"/>
</kw>
<msg timestamp="20210805 21:20:06.424" level="INFO">${output} = 2021-08-05 21:19:30 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.9:8032
2021-08-05 21:19:30 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20210805 21:19:28.460" endtime="20210805 21:20:06.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:20:06.425" endtime="20210805 21:20:06.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:20:06.425" endtime="20210805 21:20:06.425"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:19:28.431" endtime="20210805 21:20:06.426"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210805 21:18:45.481" endtime="20210805 21:20:06.427"/>
</suite>
<suite id="s1-s4-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:20:10.699" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:20:10.698" endtime="20210805 21:20:10.699"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:20:10.699" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:20:10.699" endtime="20210805 21:20:10.699"/>
</kw>
<status status="PASS" starttime="20210805 21:20:10.698" endtime="20210805 21:20:10.700"/>
</kw>
<msg timestamp="20210805 21:20:10.700" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:20:10.698" endtime="20210805 21:20:10.700"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 21:20:10.700" endtime="20210805 21:20:10.700"/>
</kw>
<msg timestamp="20210805 21:20:10.701" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 21:20:10.700" endtime="20210805 21:20:10.701"/>
</kw>
<status status="PASS" starttime="20210805 21:20:10.697" endtime="20210805 21:20:10.701"/>
</kw>
<msg timestamp="20210805 21:20:10.701" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:20:10.697" endtime="20210805 21:20:10.701"/>
</kw>
<msg timestamp="20210805 21:20:10.701" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:20:10.696" endtime="20210805 21:20:10.701"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:20:10.702" level="INFO">${random} = 74146</msg>
<status status="PASS" starttime="20210805 21:20:10.701" endtime="20210805 21:20:10.702"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:20:10.707" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-74146 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:20:14.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:20:14.071" level="INFO">${output} = 2021-08-05 21:20:12 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:20:12 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:20:10.703" endtime="20210805 21:20:14.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:20:14.072" level="INFO">2021-08-05 21:20:12 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:20:12 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:20:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:20:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210805 21:20:14.071" endtime="20210805 21:20:14.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:20:14.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:20:14.072" endtime="20210805 21:20:14.073"/>
</kw>
<status status="PASS" starttime="20210805 21:20:10.702" endtime="20210805 21:20:14.073"/>
</kw>
<msg timestamp="20210805 21:20:14.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:20:10.702" endtime="20210805 21:20:14.073"/>
</kw>
<msg timestamp="20210805 21:20:14.073" level="INFO">${result} = 2021-08-05 21:20:12 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:20:12 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:20:10.702" endtime="20210805 21:20:14.073"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:20:14.077" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:20:15.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:20:15.911" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-05 21:18 ofs://om/volume1/bucket1/ozone-36709
-rw-...</msg>
<status status="PASS" starttime="20210805 21:20:14.075" endtime="20210805 21:20:15.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:20:15.912" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-05 21:18 ofs://om/volume1/bucket1/ozone-36709
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-05 21:20 ofs://om/volume1/bucket1/ozone-74146
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:18 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:19 ofs://om/volume1/bucket1/wordcount-OqFhECKH.txt</msg>
<status status="PASS" starttime="20210805 21:20:15.912" endtime="20210805 21:20:15.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:20:15.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:20:15.913" endtime="20210805 21:20:15.913"/>
</kw>
<status status="PASS" starttime="20210805 21:20:14.074" endtime="20210805 21:20:15.913"/>
</kw>
<msg timestamp="20210805 21:20:15.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:20:14.074" endtime="20210805 21:20:15.914"/>
</kw>
<msg timestamp="20210805 21:20:15.914" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 21:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-05 21:18 ofs://om/volume1/bucket1/ozone-36709
-rw-...</msg>
<status status="PASS" starttime="20210805 21:20:14.074" endtime="20210805 21:20:15.914"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:20:15.914" endtime="20210805 21:20:15.914"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:20:15.918" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-74146 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:20:18.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:20:18.864" level="INFO">${output} = 2021-08-05 21:20:17 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:20:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:20:15.916" endtime="20210805 21:20:18.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:20:18.865" level="INFO">2021-08-05 21:20:17 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:20:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:20:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20210805 21:20:18.864" endtime="20210805 21:20:18.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:20:18.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:20:18.865" endtime="20210805 21:20:18.866"/>
</kw>
<status status="PASS" starttime="20210805 21:20:15.915" endtime="20210805 21:20:18.866"/>
</kw>
<msg timestamp="20210805 21:20:18.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:20:15.915" endtime="20210805 21:20:18.866"/>
</kw>
<msg timestamp="20210805 21:20:18.866" level="INFO">${result} = 2021-08-05 21:20:17 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:20:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 21:20:15.914" endtime="20210805 21:20:18.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:20:18.866" endtime="20210805 21:20:18.867"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 21:20:10.695" endtime="20210805 21:20:18.867"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210805 21:20:10.648" endtime="20210805 21:20:18.868"/>
</suite>
<suite id="s1-s4-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:20:23.109" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:20:23.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:20:23.115" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:20:23.106" endtime="20210805 21:20:23.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:20:23.116" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:20:23.116" endtime="20210805 21:20:23.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:20:23.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:20:23.116" endtime="20210805 21:20:23.117"/>
</kw>
<status status="PASS" starttime="20210805 21:20:23.105" endtime="20210805 21:20:23.117"/>
</kw>
<msg timestamp="20210805 21:20:23.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:20:23.105" endtime="20210805 21:20:23.117"/>
</kw>
<msg timestamp="20210805 21:20:23.117" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:20:23.105" endtime="20210805 21:20:23.118"/>
</kw>
<msg timestamp="20210805 21:20:23.119" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:20:23.104" endtime="20210805 21:20:23.119"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:20:23.122" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:20:23.121" endtime="20210805 21:20:23.122"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:20:23.123" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:20:23.122" endtime="20210805 21:20:23.123"/>
</kw>
<status status="PASS" starttime="20210805 21:20:23.121" endtime="20210805 21:20:23.123"/>
</kw>
<msg timestamp="20210805 21:20:23.123" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:20:23.121" endtime="20210805 21:20:23.123"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 21:20:23.123" endtime="20210805 21:20:23.124"/>
</kw>
<msg timestamp="20210805 21:20:23.124" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 21:20:23.123" endtime="20210805 21:20:23.124"/>
</kw>
<status status="PASS" starttime="20210805 21:20:23.120" endtime="20210805 21:20:23.124"/>
</kw>
<msg timestamp="20210805 21:20:23.124" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:20:23.120" endtime="20210805 21:20:23.124"/>
</kw>
<msg timestamp="20210805 21:20:23.124" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:20:23.119" endtime="20210805 21:20:23.124"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:20:23.128" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:21:01.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:21:01.330" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:20:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:20:25 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210805 21:20:23.126" endtime="20210805 21:21:01.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:21:01.332" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:20:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:20:25 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:20:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:20:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-05 21:20:29 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.9:8032
2021-08-05 21:20:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 21:20:29 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-05 21:20:29 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 21:20:30 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628198238007_0003
2021-08-05 21:20:30 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-05 21:20:30 INFO  Configuration:2824 - resource-types.xml not found
2021-08-05 21:20:30 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-05 21:20:30 INFO  YarnClientImpl:338 - Submitted application application_1628198238007_0003
2021-08-05 21:20:30 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1628198238007_0003/
2021-08-05 21:20:30 INFO  Job:1620 - Running job: job_1628198238007_0003
2021-08-05 21:20:37 INFO  Job:1641 - Job job_1628198238007_0003 running in uber mode : false
2021-08-05 21:20:37 INFO  Job:1648 -  map 0% reduce 0%
2021-08-05 21:20:43 INFO  Job:1648 -  map 33% reduce 0%
2021-08-05 21:20:48 INFO  Job:1648 -  map 67% reduce 0%
2021-08-05 21:20:53 INFO  Job:1648 -  map 100% reduce 0%
2021-08-05 21:20:57 INFO  Job:1648 -  map 100% reduce 100%
2021-08-05 21:21:00 INFO  Job:1659 - Job job_1628198238007_0003 completed successfully
2021-08-05 21:21:00 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1268249
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38940
		Total time spent by all reduces in occupied slots (ms)=14124
		Total time spent by all map tasks (ms)=9735
		Total time spent by all reduce tasks (ms)=3531
		Total vcore-milliseconds taken by all map tasks=9735
		Total vcore-milliseconds taken by all reduce tasks=3531
		Total megabyte-milliseconds taken by all map tasks=39874560
		Total megabyte-milliseconds taken by all reduce tasks=14462976
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=572
		CPU time spent (ms)=6690
		Physical memory (bytes) snapshot=1651777536
		Virtual memory (bytes) snapshot=15795924992
		Total committed heap usage (bytes)=1467482112
		Peak Map Physical memory (bytes)=447664128
		Peak Map Virtual memory (bytes)=3951632384
		Peak Reduce Physical memory (bytes)=341909504
		Peak Reduce Virtual memory (bytes)=3959226368
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.624 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210805 21:21:01.331" endtime="20210805 21:21:01.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:21:01.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:21:01.332" endtime="20210805 21:21:01.332"/>
</kw>
<status status="PASS" starttime="20210805 21:20:23.125" endtime="20210805 21:21:01.333"/>
</kw>
<msg timestamp="20210805 21:21:01.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:20:23.125" endtime="20210805 21:21:01.333"/>
</kw>
<msg timestamp="20210805 21:21:01.333" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 21:20:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:20:25 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210805 21:20:23.125" endtime="20210805 21:21:01.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:21:01.333" endtime="20210805 21:21:01.334"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:20:23.104" endtime="20210805 21:21:01.334"/>
</test>
<test id="s1-s4-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:21:01.339" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:21:01.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:21:01.343" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:21:01.336" endtime="20210805 21:21:01.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:21:01.344" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:21:01.343" endtime="20210805 21:21:01.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:21:01.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:21:01.344" endtime="20210805 21:21:01.345"/>
</kw>
<status status="PASS" starttime="20210805 21:21:01.336" endtime="20210805 21:21:01.345"/>
</kw>
<msg timestamp="20210805 21:21:01.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:21:01.336" endtime="20210805 21:21:01.345"/>
</kw>
<msg timestamp="20210805 21:21:01.345" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:21:01.335" endtime="20210805 21:21:01.345"/>
</kw>
<msg timestamp="20210805 21:21:01.346" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 21:21:01.335" endtime="20210805 21:21:01.346"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 21:21:01.346" level="INFO">${random} = nKLLuuMp</msg>
<status status="PASS" starttime="20210805 21:21:01.346" endtime="20210805 21:21:01.346"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:21:01.349" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:21:01.349" endtime="20210805 21:21:01.349"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:21:01.350" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:21:01.350" endtime="20210805 21:21:01.350"/>
</kw>
<status status="PASS" starttime="20210805 21:21:01.349" endtime="20210805 21:21:01.350"/>
</kw>
<msg timestamp="20210805 21:21:01.350" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:21:01.348" endtime="20210805 21:21:01.350"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 21:21:01.351" endtime="20210805 21:21:01.351"/>
</kw>
<msg timestamp="20210805 21:21:01.351" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 21:21:01.350" endtime="20210805 21:21:01.351"/>
</kw>
<status status="PASS" starttime="20210805 21:21:01.348" endtime="20210805 21:21:01.352"/>
</kw>
<msg timestamp="20210805 21:21:01.352" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:21:01.347" endtime="20210805 21:21:01.352"/>
</kw>
<msg timestamp="20210805 21:21:01.352" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 21:21:01.346" endtime="20210805 21:21:01.352"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:21:01.355" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:21:01.354" endtime="20210805 21:21:01.355"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:21:01.355" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:21:01.355" endtime="20210805 21:21:01.355"/>
</kw>
<status status="PASS" starttime="20210805 21:21:01.354" endtime="20210805 21:21:01.356"/>
</kw>
<msg timestamp="20210805 21:21:01.356" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:21:01.354" endtime="20210805 21:21:01.356"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:21:01.357" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210805 21:21:01.357" endtime="20210805 21:21:01.357"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:21:01.358" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210805 21:21:01.357" endtime="20210805 21:21:01.358"/>
</kw>
<status status="PASS" starttime="20210805 21:21:01.356" endtime="20210805 21:21:01.358"/>
</kw>
<msg timestamp="20210805 21:21:01.358" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210805 21:21:01.356" endtime="20210805 21:21:01.358"/>
</kw>
<status status="PASS" starttime="20210805 21:21:01.353" endtime="20210805 21:21:01.358"/>
</kw>
<msg timestamp="20210805 21:21:01.358" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210805 21:21:01.353" endtime="20210805 21:21:01.358"/>
</kw>
<msg timestamp="20210805 21:21:01.359" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210805 21:21:01.352" endtime="20210805 21:21:01.359"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:21:01.362" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 21:21:01.361" endtime="20210805 21:21:01.362"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:21:01.362" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 21:21:01.362" endtime="20210805 21:21:01.362"/>
</kw>
<status status="PASS" starttime="20210805 21:21:01.361" endtime="20210805 21:21:01.362"/>
</kw>
<msg timestamp="20210805 21:21:01.362" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 21:21:01.360" endtime="20210805 21:21:01.362"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:21:01.364" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210805 21:21:01.363" endtime="20210805 21:21:01.364"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:21:01.364" level="INFO">${result} = /wordcount-nKLLuuMp.txt</msg>
<status status="PASS" starttime="20210805 21:21:01.364" endtime="20210805 21:21:01.364"/>
</kw>
<status status="PASS" starttime="20210805 21:21:01.363" endtime="20210805 21:21:01.364"/>
</kw>
<msg timestamp="20210805 21:21:01.365" level="INFO">${path_with_leading} = /wordcount-nKLLuuMp.txt</msg>
<status status="PASS" starttime="20210805 21:21:01.363" endtime="20210805 21:21:01.365"/>
</kw>
<status status="PASS" starttime="20210805 21:21:01.360" endtime="20210805 21:21:01.365"/>
</kw>
<msg timestamp="20210805 21:21:01.365" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-nKLLuuMp.txt</msg>
<status status="PASS" starttime="20210805 21:21:01.359" endtime="20210805 21:21:01.365"/>
</kw>
<msg timestamp="20210805 21:21:01.365" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-nKLLuuMp.txt</msg>
<status status="PASS" starttime="20210805 21:21:01.359" endtime="20210805 21:21:01.365"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:21:01.368" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-nKLLuuMp.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:21:41.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:21:41.695" level="INFO">${output} = 2021-08-05 21:21:03 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.9:8032
2021-08-05 21:21:03 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20210805 21:21:01.366" endtime="20210805 21:21:41.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:21:41.697" level="INFO">2021-08-05 21:21:03 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.9:8032
2021-08-05 21:21:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 21:21:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 21:21:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 21:21:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 21:21:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-05 21:21:04 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-05 21:21:07 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 21:21:07 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628198238007_0004
2021-08-05 21:21:07 INFO  JobSubmitter:299 - Executing with tokens: []
2021-08-05 21:21:07 INFO  Configuration:2824 - resource-types.xml not found
2021-08-05 21:21:07 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-05 21:21:07 INFO  YarnClientImpl:338 - Submitted application application_1628198238007_0004
2021-08-05 21:21:07 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1628198238007_0004/
2021-08-05 21:21:07 INFO  Job:1620 - Running job: job_1628198238007_0004
2021-08-05 21:21:15 INFO  Job:1641 - Job job_1628198238007_0004 running in uber mode : false
2021-08-05 21:21:15 INFO  Job:1648 -  map 0% reduce 0%
2021-08-05 21:21:21 INFO  Job:1648 -  map 33% reduce 0%
2021-08-05 21:21:26 INFO  Job:1648 -  map 67% reduce 0%
2021-08-05 21:21:31 INFO  Job:1648 -  map 100% reduce 0%
2021-08-05 21:21:35 INFO  Job:1648 -  map 100% reduce 100%
2021-08-05 21:21:41 INFO  Job:1659 - Job job_1628198238007_0004 completed successfully
2021-08-05 21:21:41 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1331127
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38812
		Total time spent by all reduces in occupied slots (ms)=13740
		Total time spent by all map tasks (ms)=9703
		Total time spent by all reduce tasks (ms)=3435
		Total vcore-milliseconds taken by all map tasks=9703
		Total vcore-milliseconds taken by all reduce tasks=3435
		Total megabyte-milliseconds taken by all map tasks=39743488
		Total megabyte-milliseconds taken by all reduce tasks=14069760
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=546
		CPU time spent (ms)=7020
		Physical memory (bytes) snapshot=1556582400
		Virtual memory (bytes) snapshot=15811649536
		Total committed heap usage (bytes)=1392508928
		Peak Map Physical memory (bytes)=444375040
		Peak Map Virtual memory (bytes)=3951706112
		Peak Reduce Physical memory (bytes)=338575360
		Peak Reduce Virtual memory (bytes)=3957100544
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210805 21:21:41.696" endtime="20210805 21:21:41.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:21:41.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:21:41.697" endtime="20210805 21:21:41.697"/>
</kw>
<status status="PASS" starttime="20210805 21:21:01.366" endtime="20210805 21:21:41.698"/>
</kw>
<msg timestamp="20210805 21:21:41.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:21:01.366" endtime="20210805 21:21:41.698"/>
</kw>
<msg timestamp="20210805 21:21:41.698" level="INFO">${output} = 2021-08-05 21:21:03 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.24.0.9:8032
2021-08-05 21:21:03 INFO  JobSubmissionFiles:156 - Permissions on staging director...</msg>
<status status="PASS" starttime="20210805 21:21:01.365" endtime="20210805 21:21:41.698"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:21:41.698" endtime="20210805 21:21:41.699"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:21:41.699" endtime="20210805 21:21:41.699"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 21:21:01.334" endtime="20210805 21:21:41.699"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210805 21:20:23.057" endtime="20210805 21:21:41.700"/>
</suite>
<suite id="s1-s4-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s4-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:17:50.915" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:17:54.578" level="INFO">${rc} = 255</msg>
<msg timestamp="20210805 21:17:54.578" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 21:17:50.911" endtime="20210805 21:17:54.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:17:54.579" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 21:17:54.578" endtime="20210805 21:17:54.579"/>
</kw>
<msg timestamp="20210805 21:17:54.579" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 21:17:50.910" endtime="20210805 21:17:54.579"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:17:54.583" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:17:57.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:17:57.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:17:54.581" endtime="20210805 21:17:57.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:17:57.808" level="INFO"/>
<status status="PASS" starttime="20210805 21:17:57.807" endtime="20210805 21:17:57.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:17:57.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:17:57.808" endtime="20210805 21:17:57.808"/>
</kw>
<status status="PASS" starttime="20210805 21:17:54.581" endtime="20210805 21:17:57.809"/>
</kw>
<msg timestamp="20210805 21:17:57.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:17:54.581" endtime="20210805 21:17:57.809"/>
</kw>
<msg timestamp="20210805 21:17:57.809" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210805 21:17:54.580" endtime="20210805 21:17:57.809"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:17:57.809" endtime="20210805 21:17:57.810"/>
</kw>
<status status="PASS" starttime="20210805 21:17:54.580" endtime="20210805 21:17:57.810"/>
</kw>
<status status="PASS" starttime="20210805 21:17:54.580" endtime="20210805 21:17:57.810"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:17:57.814" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:18:00.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:18:00.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:17:57.812" endtime="20210805 21:18:00.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:18:00.840" level="INFO"/>
<status status="PASS" starttime="20210805 21:18:00.840" endtime="20210805 21:18:00.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:18:00.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:18:00.841" endtime="20210805 21:18:00.841"/>
</kw>
<status status="PASS" starttime="20210805 21:17:57.812" endtime="20210805 21:18:00.841"/>
</kw>
<msg timestamp="20210805 21:18:00.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:17:57.811" endtime="20210805 21:18:00.842"/>
</kw>
<status status="PASS" starttime="20210805 21:17:57.811" endtime="20210805 21:18:00.842"/>
</kw>
<status status="PASS" starttime="20210805 21:17:57.810" endtime="20210805 21:18:00.842"/>
</kw>
<status status="PASS" starttime="20210805 21:17:57.810" endtime="20210805 21:18:00.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210805 21:18:00.843" endtime="20210805 21:18:00.843"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:18:00.846" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:18:03.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:18:03.741" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T21:18...</msg>
<status status="PASS" starttime="20210805 21:18:00.844" endtime="20210805 21:18:03.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:18:03.742" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T21:18:00.702Z",
  "modificationTime" : "2021-08-05T21:18:00.702Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210805 21:18:03.741" endtime="20210805 21:18:03.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:18:03.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:18:03.742" endtime="20210805 21:18:03.743"/>
</kw>
<status status="PASS" starttime="20210805 21:18:00.844" endtime="20210805 21:18:03.743"/>
</kw>
<msg timestamp="20210805 21:18:03.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:18:00.844" endtime="20210805 21:18:03.743"/>
</kw>
<msg timestamp="20210805 21:18:03.743" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T21:18...</msg>
<status status="PASS" starttime="20210805 21:18:00.843" endtime="20210805 21:18:03.744"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 21:18:03.744" endtime="20210805 21:18:03.744"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:18:03.748" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:18:03.748" endtime="20210805 21:18:03.748"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:18:03.749" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:18:03.748" endtime="20210805 21:18:03.749"/>
</kw>
<status status="PASS" starttime="20210805 21:18:03.747" endtime="20210805 21:18:03.749"/>
</kw>
<msg timestamp="20210805 21:18:03.749" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:18:03.746" endtime="20210805 21:18:03.749"/>
</kw>
<status status="PASS" starttime="20210805 21:18:03.746" endtime="20210805 21:18:03.750"/>
</kw>
<msg timestamp="20210805 21:18:03.750" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210805 21:18:03.745" endtime="20210805 21:18:03.750"/>
</kw>
<msg timestamp="20210805 21:18:03.750" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210805 21:18:03.744" endtime="20210805 21:18:03.750"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:18:03.753" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:18:06.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:18:06.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:18:03.751" endtime="20210805 21:18:06.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:18:06.914" level="INFO"/>
<status status="PASS" starttime="20210805 21:18:06.913" endtime="20210805 21:18:06.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:18:06.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:18:06.914" endtime="20210805 21:18:06.915"/>
</kw>
<status status="PASS" starttime="20210805 21:18:03.751" endtime="20210805 21:18:06.915"/>
</kw>
<msg timestamp="20210805 21:18:06.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:18:03.750" endtime="20210805 21:18:06.916"/>
</kw>
<status status="PASS" starttime="20210805 21:18:03.750" endtime="20210805 21:18:06.916"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:18:06.919" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:18:12.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:18:12.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:18:06.917" endtime="20210805 21:18:12.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:18:12.874" level="INFO"/>
<status status="PASS" starttime="20210805 21:18:12.873" endtime="20210805 21:18:12.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:18:12.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:18:12.874" endtime="20210805 21:18:12.875"/>
</kw>
<status status="PASS" starttime="20210805 21:18:06.917" endtime="20210805 21:18:12.875"/>
</kw>
<msg timestamp="20210805 21:18:12.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:18:06.917" endtime="20210805 21:18:12.876"/>
</kw>
<status status="PASS" starttime="20210805 21:18:06.916" endtime="20210805 21:18:12.876"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:18:12.879" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:18:17.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:18:17.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:18:12.877" endtime="20210805 21:18:17.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:18:17.743" level="INFO"/>
<status status="PASS" starttime="20210805 21:18:17.742" endtime="20210805 21:18:17.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:18:17.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:18:17.743" endtime="20210805 21:18:17.743"/>
</kw>
<status status="PASS" starttime="20210805 21:18:12.877" endtime="20210805 21:18:17.744"/>
</kw>
<msg timestamp="20210805 21:18:17.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:18:12.876" endtime="20210805 21:18:17.744"/>
</kw>
<status status="PASS" starttime="20210805 21:18:12.876" endtime="20210805 21:18:17.744"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:18:17.747" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:18:22.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:18:22.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:18:17.745" endtime="20210805 21:18:22.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:18:22.656" level="INFO"/>
<status status="PASS" starttime="20210805 21:18:22.656" endtime="20210805 21:18:22.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:18:22.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:18:22.657" endtime="20210805 21:18:22.657"/>
</kw>
<status status="PASS" starttime="20210805 21:18:17.745" endtime="20210805 21:18:22.657"/>
</kw>
<msg timestamp="20210805 21:18:22.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:18:17.745" endtime="20210805 21:18:22.657"/>
</kw>
<status status="PASS" starttime="20210805 21:18:17.744" endtime="20210805 21:18:22.658"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210805 21:17:50.910" endtime="20210805 21:18:22.658"/>
</test>
<test id="s1-s4-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 21:18:22.663" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 21:18:22.663" endtime="20210805 21:18:22.663"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 21:18:22.664" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 21:18:22.663" endtime="20210805 21:18:22.664"/>
</kw>
<status status="PASS" starttime="20210805 21:18:22.662" endtime="20210805 21:18:22.664"/>
</kw>
<msg timestamp="20210805 21:18:22.664" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 21:18:22.661" endtime="20210805 21:18:22.664"/>
</kw>
<status status="PASS" starttime="20210805 21:18:22.661" endtime="20210805 21:18:22.665"/>
</kw>
<msg timestamp="20210805 21:18:22.665" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210805 21:18:22.660" endtime="20210805 21:18:22.665"/>
</kw>
<msg timestamp="20210805 21:18:22.665" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210805 21:18:22.659" endtime="20210805 21:18:22.665"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:18:22.668" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:18:25.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:18:25.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:18:22.666" endtime="20210805 21:18:25.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:18:25.707" level="INFO"/>
<status status="PASS" starttime="20210805 21:18:25.706" endtime="20210805 21:18:25.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:18:25.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:18:25.707" endtime="20210805 21:18:25.708"/>
</kw>
<status status="PASS" starttime="20210805 21:18:22.666" endtime="20210805 21:18:25.708"/>
</kw>
<msg timestamp="20210805 21:18:25.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:18:22.665" endtime="20210805 21:18:25.708"/>
</kw>
<status status="PASS" starttime="20210805 21:18:22.665" endtime="20210805 21:18:25.708"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 21:18:25.711" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 21:18:28.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 21:18:28.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 21:18:25.710" endtime="20210805 21:18:28.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 21:18:28.591" level="INFO"/>
<status status="PASS" starttime="20210805 21:18:28.591" endtime="20210805 21:18:28.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 21:18:28.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 21:18:28.592" endtime="20210805 21:18:28.592"/>
</kw>
<status status="PASS" starttime="20210805 21:18:25.709" endtime="20210805 21:18:28.592"/>
</kw>
<msg timestamp="20210805 21:18:28.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 21:18:25.709" endtime="20210805 21:18:28.593"/>
</kw>
<status status="PASS" starttime="20210805 21:18:25.708" endtime="20210805 21:18:28.593"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210805 21:18:22.658" endtime="20210805 21:18:28.593"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210805 21:17:50.855" endtime="20210805 21:18:28.594"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="213941"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="800321"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-mr">ozone-mr</stat>
<stat pass="8" fail="0" skip="0" id="s1-s1" name="hadoop27">ozone-mr.hadoop27</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="hadoopfs-o3fs">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s2" name="mapreduce-o3fs">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="hadoopfs-ofs">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s4" name="mapreduce-ofs">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Createmrenv">ozone-mr.hadoop27.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s2" name="hadoop31">ozone-mr.hadoop31</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="hadoopfs-o3fs">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="mapreduce-o3fs">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="hadoopfs-ofs">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="mapreduce-ofs">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s5" name="Createmrenv">ozone-mr.hadoop31.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s3" name="hadoop32">ozone-mr.hadoop32</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s1" name="hadoopfs-o3fs">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s2" name="mapreduce-o3fs">ozone-mr.hadoop32.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s3" name="hadoopfs-ofs">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s4" name="mapreduce-ofs">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s5" name="Createmrenv">ozone-mr.hadoop32.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s4" name="hadoop33">ozone-mr.hadoop33</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s1" name="hadoopfs-o3fs">ozone-mr.hadoop33.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s2" name="mapreduce-o3fs">ozone-mr.hadoop33.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s3" name="hadoopfs-ofs">ozone-mr.hadoop33.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s4" name="mapreduce-ofs">ozone-mr.hadoop33.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s5" name="Createmrenv">ozone-mr.hadoop33.Createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
