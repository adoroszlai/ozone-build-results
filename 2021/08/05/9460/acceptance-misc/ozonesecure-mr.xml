<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210805 22:19:09.007" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:12:31.319" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:12:39.047" level="INFO">${rc} = 255</msg>
<msg timestamp="20210805 22:12:39.047" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 22:12:31.314" endtime="20210805 22:12:39.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:12:39.048" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 22:12:39.048" endtime="20210805 22:12:39.048"/>
</kw>
<msg timestamp="20210805 22:12:39.049" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210805 22:12:31.313" endtime="20210805 22:12:39.049"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:12:39.054" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:12:45.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:12:45.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:12:39.051" endtime="20210805 22:12:45.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:12:45.784" level="INFO"/>
<status status="PASS" starttime="20210805 22:12:45.783" endtime="20210805 22:12:45.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:12:45.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:12:45.784" endtime="20210805 22:12:45.785"/>
</kw>
<status status="PASS" starttime="20210805 22:12:39.051" endtime="20210805 22:12:45.785"/>
</kw>
<msg timestamp="20210805 22:12:45.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:12:39.051" endtime="20210805 22:12:45.785"/>
</kw>
<msg timestamp="20210805 22:12:45.785" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210805 22:12:39.050" endtime="20210805 22:12:45.785"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:12:45.786" endtime="20210805 22:12:45.786"/>
</kw>
<status status="PASS" starttime="20210805 22:12:39.050" endtime="20210805 22:12:45.786"/>
</kw>
<status status="PASS" starttime="20210805 22:12:39.049" endtime="20210805 22:12:45.786"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:12:45.810" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:12:52.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:12:52.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:12:45.796" endtime="20210805 22:12:52.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:12:52.521" level="INFO"/>
<status status="PASS" starttime="20210805 22:12:52.520" endtime="20210805 22:12:52.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:12:52.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:12:52.521" endtime="20210805 22:12:52.521"/>
</kw>
<status status="PASS" starttime="20210805 22:12:45.795" endtime="20210805 22:12:52.521"/>
</kw>
<msg timestamp="20210805 22:12:52.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:12:45.795" endtime="20210805 22:12:52.522"/>
</kw>
<status status="PASS" starttime="20210805 22:12:45.794" endtime="20210805 22:12:52.522"/>
</kw>
<status status="PASS" starttime="20210805 22:12:45.794" endtime="20210805 22:12:52.522"/>
</kw>
<status status="PASS" starttime="20210805 22:12:45.786" endtime="20210805 22:12:52.522"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210805 22:12:52.522" endtime="20210805 22:12:52.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:12:52.526" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:12:59.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:12:59.364" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T22:12...</msg>
<status status="PASS" starttime="20210805 22:12:52.524" endtime="20210805 22:12:59.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:12:59.365" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T22:12:52.138Z",
  "modificationTime" : "2021-08-05T22:12:52.138Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210805 22:12:59.364" endtime="20210805 22:12:59.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:12:59.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:12:59.365" endtime="20210805 22:12:59.366"/>
</kw>
<status status="PASS" starttime="20210805 22:12:52.524" endtime="20210805 22:12:59.366"/>
</kw>
<msg timestamp="20210805 22:12:59.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:12:52.523" endtime="20210805 22:12:59.366"/>
</kw>
<msg timestamp="20210805 22:12:59.366" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-05T22:12...</msg>
<status status="PASS" starttime="20210805 22:12:52.523" endtime="20210805 22:12:59.366"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:12:59.367" endtime="20210805 22:12:59.367"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 22:12:59.372" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 22:12:59.372" endtime="20210805 22:12:59.372"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 22:12:59.373" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 22:12:59.372" endtime="20210805 22:12:59.373"/>
</kw>
<status status="PASS" starttime="20210805 22:12:59.371" endtime="20210805 22:12:59.373"/>
</kw>
<msg timestamp="20210805 22:12:59.373" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 22:12:59.370" endtime="20210805 22:12:59.373"/>
</kw>
<status status="PASS" starttime="20210805 22:12:59.369" endtime="20210805 22:12:59.373"/>
</kw>
<msg timestamp="20210805 22:12:59.373" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210805 22:12:59.368" endtime="20210805 22:12:59.374"/>
</kw>
<msg timestamp="20210805 22:12:59.374" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210805 22:12:59.367" endtime="20210805 22:12:59.374"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:12:59.377" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:13:06.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:13:06.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:12:59.375" endtime="20210805 22:13:06.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:13:06.262" level="INFO"/>
<status status="PASS" starttime="20210805 22:13:06.261" endtime="20210805 22:13:06.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:13:06.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:13:06.262" endtime="20210805 22:13:06.263"/>
</kw>
<status status="PASS" starttime="20210805 22:12:59.375" endtime="20210805 22:13:06.263"/>
</kw>
<msg timestamp="20210805 22:13:06.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:12:59.374" endtime="20210805 22:13:06.263"/>
</kw>
<status status="PASS" starttime="20210805 22:12:59.374" endtime="20210805 22:13:06.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:13:06.267" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:13:19.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:13:19.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:13:06.265" endtime="20210805 22:13:19.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:13:19.116" level="INFO"/>
<status status="PASS" starttime="20210805 22:13:19.115" endtime="20210805 22:13:19.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:13:19.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:13:19.117" endtime="20210805 22:13:19.117"/>
</kw>
<status status="PASS" starttime="20210805 22:13:06.264" endtime="20210805 22:13:19.118"/>
</kw>
<msg timestamp="20210805 22:13:19.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:13:06.264" endtime="20210805 22:13:19.118"/>
</kw>
<status status="PASS" starttime="20210805 22:13:06.263" endtime="20210805 22:13:19.118"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:13:19.121" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:13:29.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:13:29.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:13:19.119" endtime="20210805 22:13:29.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:13:29.079" level="INFO"/>
<status status="PASS" starttime="20210805 22:13:29.078" endtime="20210805 22:13:29.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:13:29.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:13:29.079" endtime="20210805 22:13:29.080"/>
</kw>
<status status="PASS" starttime="20210805 22:13:19.119" endtime="20210805 22:13:29.080"/>
</kw>
<msg timestamp="20210805 22:13:29.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:13:19.119" endtime="20210805 22:13:29.080"/>
</kw>
<status status="PASS" starttime="20210805 22:13:19.118" endtime="20210805 22:13:29.080"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:13:29.084" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:13:39.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:13:39.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:13:29.082" endtime="20210805 22:13:39.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:13:39.232" level="INFO"/>
<status status="PASS" starttime="20210805 22:13:39.232" endtime="20210805 22:13:39.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:13:39.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:13:39.233" endtime="20210805 22:13:39.233"/>
</kw>
<status status="PASS" starttime="20210805 22:13:29.081" endtime="20210805 22:13:39.233"/>
</kw>
<msg timestamp="20210805 22:13:39.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:13:29.081" endtime="20210805 22:13:39.234"/>
</kw>
<status status="PASS" starttime="20210805 22:13:29.081" endtime="20210805 22:13:39.234"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210805 22:12:31.312" endtime="20210805 22:13:39.234"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 22:13:39.240" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 22:13:39.240" endtime="20210805 22:13:39.241"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 22:13:39.241" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 22:13:39.241" endtime="20210805 22:13:39.241"/>
</kw>
<status status="PASS" starttime="20210805 22:13:39.239" endtime="20210805 22:13:39.241"/>
</kw>
<msg timestamp="20210805 22:13:39.242" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 22:13:39.238" endtime="20210805 22:13:39.242"/>
</kw>
<status status="PASS" starttime="20210805 22:13:39.237" endtime="20210805 22:13:39.242"/>
</kw>
<msg timestamp="20210805 22:13:39.242" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210805 22:13:39.237" endtime="20210805 22:13:39.242"/>
</kw>
<msg timestamp="20210805 22:13:39.242" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210805 22:13:39.236" endtime="20210805 22:13:39.242"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:13:39.246" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:13:45.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:13:45.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:13:39.244" endtime="20210805 22:13:45.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:13:45.784" level="INFO"/>
<status status="PASS" starttime="20210805 22:13:45.783" endtime="20210805 22:13:45.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:13:45.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:13:45.784" endtime="20210805 22:13:45.785"/>
</kw>
<status status="PASS" starttime="20210805 22:13:39.243" endtime="20210805 22:13:45.785"/>
</kw>
<msg timestamp="20210805 22:13:45.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:13:39.243" endtime="20210805 22:13:45.785"/>
</kw>
<status status="PASS" starttime="20210805 22:13:39.242" endtime="20210805 22:13:45.786"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:13:45.789" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:13:52.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:13:52.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:13:45.787" endtime="20210805 22:13:52.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:13:52.114" level="INFO"/>
<status status="PASS" starttime="20210805 22:13:52.113" endtime="20210805 22:13:52.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:13:52.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:13:52.114" endtime="20210805 22:13:52.114"/>
</kw>
<status status="PASS" starttime="20210805 22:13:45.787" endtime="20210805 22:13:52.115"/>
</kw>
<msg timestamp="20210805 22:13:52.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:13:45.786" endtime="20210805 22:13:52.115"/>
</kw>
<status status="PASS" starttime="20210805 22:13:45.786" endtime="20210805 22:13:52.115"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210805 22:13:39.235" endtime="20210805 22:13:52.115"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210805 22:12:31.244" endtime="20210805 22:13:52.116"/>
</suite>
<suite id="s1-s2" name="Kinit-Hadoop" source="/opt/ozone/smoketest/kinit-hadoop.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:14:16.910" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:14:16.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:14:16.922" level="INFO">${output} = rm</msg>
<status status="PASS" starttime="20210805 22:14:16.906" endtime="20210805 22:14:16.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:14:16.923" level="INFO">rm</msg>
<status status="PASS" starttime="20210805 22:14:16.922" endtime="20210805 22:14:16.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:14:16.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:14:16.923" endtime="20210805 22:14:16.924"/>
</kw>
<status status="PASS" starttime="20210805 22:14:16.906" endtime="20210805 22:14:16.924"/>
</kw>
<msg timestamp="20210805 22:14:16.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:14:16.905" endtime="20210805 22:14:16.924"/>
</kw>
<msg timestamp="20210805 22:14:16.924" level="INFO">${instance} = rm</msg>
<status status="PASS" starttime="20210805 22:14:16.905" endtime="20210805 22:14:16.924"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210805 22:14:16.925" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210805 22:14:16.924" endtime="20210805 22:14:16.926"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:14:16.929" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:14:17.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:14:17.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:14:16.927" endtime="20210805 22:14:17.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:14:17.162" level="INFO"/>
<status status="PASS" starttime="20210805 22:14:17.161" endtime="20210805 22:14:17.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:14:17.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:14:17.162" endtime="20210805 22:14:17.162"/>
</kw>
<status status="PASS" starttime="20210805 22:14:16.927" endtime="20210805 22:14:17.163"/>
</kw>
<msg timestamp="20210805 22:14:17.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:14:16.927" endtime="20210805 22:14:17.163"/>
</kw>
<status status="PASS" starttime="20210805 22:14:16.926" endtime="20210805 22:14:17.163"/>
</kw>
<status status="PASS" starttime="20210805 22:14:16.926" endtime="20210805 22:14:17.163"/>
</kw>
<status status="PASS" starttime="20210805 22:14:16.904" endtime="20210805 22:14:17.163"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210805 22:14:16.903" endtime="20210805 22:14:17.164"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210805 22:14:16.852" endtime="20210805 22:14:17.165"/>
</suite>
<suite id="s1-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 22:14:22.677" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 22:14:22.676" endtime="20210805 22:14:22.677"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 22:14:22.677" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 22:14:22.677" endtime="20210805 22:14:22.677"/>
</kw>
<status status="PASS" starttime="20210805 22:14:22.676" endtime="20210805 22:14:22.678"/>
</kw>
<msg timestamp="20210805 22:14:22.678" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 22:14:22.676" endtime="20210805 22:14:22.678"/>
</kw>
<status status="PASS" starttime="20210805 22:14:22.675" endtime="20210805 22:14:22.678"/>
</kw>
<msg timestamp="20210805 22:14:22.678" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 22:14:22.674" endtime="20210805 22:14:22.678"/>
</kw>
<msg timestamp="20210805 22:14:22.678" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 22:14:22.673" endtime="20210805 22:14:22.678"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 22:14:22.679" level="INFO">${random} = 70339</msg>
<status status="PASS" starttime="20210805 22:14:22.678" endtime="20210805 22:14:22.679"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:14:22.684" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-70339 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:14:29.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:14:29.125" level="INFO">${output} = 2021-08-05 22:14:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:14:26 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 22:14:22.680" endtime="20210805 22:14:29.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:14:29.126" level="INFO">2021-08-05 22:14:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:14:26 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 22:14:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 22:14:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210805 22:14:29.125" endtime="20210805 22:14:29.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:14:29.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:14:29.126" endtime="20210805 22:14:29.126"/>
</kw>
<status status="PASS" starttime="20210805 22:14:22.680" endtime="20210805 22:14:29.127"/>
</kw>
<msg timestamp="20210805 22:14:29.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:14:22.679" endtime="20210805 22:14:29.127"/>
</kw>
<msg timestamp="20210805 22:14:29.127" level="INFO">${result} = 2021-08-05 22:14:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:14:26 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 22:14:22.679" endtime="20210805 22:14:29.127"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:14:29.130" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:14:31.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:14:31.896" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 22:13 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-05 22:14 o3fs://bucket1.volume1.om/ozone-70339
dr...</msg>
<status status="PASS" starttime="20210805 22:14:29.129" endtime="20210805 22:14:31.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:14:31.897" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 22:13 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-05 22:14 o3fs://bucket1.volume1.om/ozone-70339
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 22:13 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210805 22:14:31.896" endtime="20210805 22:14:31.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:14:31.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:14:31.897" endtime="20210805 22:14:31.898"/>
</kw>
<status status="PASS" starttime="20210805 22:14:29.128" endtime="20210805 22:14:31.898"/>
</kw>
<msg timestamp="20210805 22:14:31.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:14:29.128" endtime="20210805 22:14:31.898"/>
</kw>
<msg timestamp="20210805 22:14:31.899" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 22:13 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-05 22:14 o3fs://bucket1.volume1.om/ozone-70339
dr...</msg>
<status status="PASS" starttime="20210805 22:14:29.127" endtime="20210805 22:14:31.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:14:31.899" endtime="20210805 22:14:31.899"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:14:31.903" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-70339 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:14:36.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:14:36.670" level="INFO">${output} = 2021-08-05 22:14:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:14:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 22:14:31.901" endtime="20210805 22:14:36.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:14:36.671" level="INFO">2021-08-05 22:14:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:14:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 22:14:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20210805 22:14:36.670" endtime="20210805 22:14:36.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:14:36.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:14:36.671" endtime="20210805 22:14:36.671"/>
</kw>
<status status="PASS" starttime="20210805 22:14:31.900" endtime="20210805 22:14:36.672"/>
</kw>
<msg timestamp="20210805 22:14:36.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:14:31.900" endtime="20210805 22:14:36.672"/>
</kw>
<msg timestamp="20210805 22:14:36.672" level="INFO">${result} = 2021-08-05 22:14:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:14:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 22:14:31.899" endtime="20210805 22:14:36.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:14:36.672" endtime="20210805 22:14:36.672"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:14:22.672" endtime="20210805 22:14:36.673"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210805 22:14:22.622" endtime="20210805 22:14:36.674"/>
</suite>
<suite id="s1-s4" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:14:42.177" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:14:42.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:14:42.185" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:14:42.174" endtime="20210805 22:14:42.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:14:42.186" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:14:42.186" endtime="20210805 22:14:42.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:14:42.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:14:42.187" endtime="20210805 22:14:42.187"/>
</kw>
<status status="PASS" starttime="20210805 22:14:42.173" endtime="20210805 22:14:42.187"/>
</kw>
<msg timestamp="20210805 22:14:42.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:14:42.173" endtime="20210805 22:14:42.188"/>
</kw>
<msg timestamp="20210805 22:14:42.188" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:14:42.172" endtime="20210805 22:14:42.189"/>
</kw>
<msg timestamp="20210805 22:14:42.189" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:14:42.172" endtime="20210805 22:14:42.189"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 22:14:42.192" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 22:14:42.192" endtime="20210805 22:14:42.192"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 22:14:42.193" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 22:14:42.192" endtime="20210805 22:14:42.193"/>
</kw>
<status status="PASS" starttime="20210805 22:14:42.191" endtime="20210805 22:14:42.193"/>
</kw>
<msg timestamp="20210805 22:14:42.193" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 22:14:42.191" endtime="20210805 22:14:42.193"/>
</kw>
<status status="PASS" starttime="20210805 22:14:42.190" endtime="20210805 22:14:42.193"/>
</kw>
<msg timestamp="20210805 22:14:42.193" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 22:14:42.190" endtime="20210805 22:14:42.193"/>
</kw>
<msg timestamp="20210805 22:14:42.193" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 22:14:42.189" endtime="20210805 22:14:42.194"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:14:42.197" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:15:49.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:15:49.169" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 22:14:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:14:45 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210805 22:14:42.195" endtime="20210805 22:15:49.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:15:49.170" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-05 22:14:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:14:45 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 22:14:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 22:14:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-05 22:14:47 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-08-05 22:14:47 INFO  AHSProxy:43 - Connecting to Application History server at jhs/172.27.0.8:10200
2021-08-05 22:14:48 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1628201688290, maxDate=1628806488290, sequenceNumber=1, masterKeyId=2))
2021-08-05 22:14:48 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9a b6 88 c3 b1 2f 38 9a be ba e3 b3 2f 40 01 48 01 5a 0d 35 34 32 31 35 38 30 35 33 34 35 30 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-08-05 22:14:48 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1628201688290, maxDate=1628806488290, sequenceNumber=1, masterKeyId=2)
2021-08-05 22:14:51 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-05 22:14:51 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 22:14:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628201482066_0001
2021-08-05 22:14:51 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9a b6 88 c3 b1 2f 38 9a be ba e3 b3 2f 40 01 48 01 5a 0d 35 34 32 31 35 38 30 35 33 34 35 30 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1628201688290, maxDate=1628806488290, sequenceNumber=1, masterKeyId=2)]
2021-08-05 22:14:52 INFO  Configuration:2824 - resource-types.xml not found
2021-08-05 22:14:52 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-05 22:14:52 INFO  TimelineClientImpl:130 - Timeline service address: jhs:8188
2021-08-05 22:14:54 INFO  YarnClientImpl:338 - Submitted application application_1628201482066_0001
2021-08-05 22:14:54 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1628201482066_0001/
2021-08-05 22:14:54 INFO  Job:1620 - Running job: job_1628201482066_0001
2021-08-05 22:15:11 INFO  Job:1641 - Job job_1628201482066_0001 running in uber mode : false
2021-08-05 22:15:11 INFO  Job:1648 -  map 0% reduce 0%
2021-08-05 22:15:32 INFO  Job:1648 -  map 33% reduce 0%
2021-08-05 22:15:34 INFO  Job:1648 -  map 67% reduce 0%
2021-08-05 22:15:35 INFO  Job:1648 -  map 100% reduce 0%
2021-08-05 22:15:42 INFO  Job:1648 -  map 100% reduce 100%
2021-08-05 22:15:48 INFO  Job:1659 - Job job_1628201482066_0001 completed successfully
2021-08-05 22:15:48 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1277929
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=110260
		Total time spent by all reduces in occupied slots (ms)=15084
		Total time spent by all map tasks (ms)=55130
		Total time spent by all reduce tasks (ms)=7542
		Total vcore-milliseconds taken by all map tasks=55130
		Total vcore-milliseconds taken by all reduce tasks=7542
		Total megabyte-milliseconds taken by all map tasks=112906240
		Total megabyte-milliseconds taken by all reduce tasks=15446016
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1755
		CPU time spent (ms)=9880
		Physical memory (bytes) snapshot=1480474624
		Virtual memory (bytes) snapshot=14155476992
		Total committed heap usage (bytes)=1225785344
		Peak Map Physical memory (bytes)=375595008
		Peak Map Virtual memory (bytes)=3540037632
		Peak Reduce Physical memory (bytes)=360787968
		Peak Reduce Virtual memory (bytes)=3563954176
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 60.922 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210805 22:15:49.170" endtime="20210805 22:15:49.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:15:49.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:15:49.171" endtime="20210805 22:15:49.171"/>
</kw>
<status status="PASS" starttime="20210805 22:14:42.195" endtime="20210805 22:15:49.172"/>
</kw>
<msg timestamp="20210805 22:15:49.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:14:42.194" endtime="20210805 22:15:49.172"/>
</kw>
<msg timestamp="20210805 22:15:49.172" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 22:14:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:14:45 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210805 22:14:42.194" endtime="20210805 22:15:49.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:15:49.172" endtime="20210805 22:15:49.173"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 22:14:42.171" endtime="20210805 22:15:49.173"/>
</test>
<test id="s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:15:49.179" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:15:49.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:15:49.187" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:15:49.177" endtime="20210805 22:15:49.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:15:49.188" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:15:49.187" endtime="20210805 22:15:49.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:15:49.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:15:49.189" endtime="20210805 22:15:49.189"/>
</kw>
<status status="PASS" starttime="20210805 22:15:49.176" endtime="20210805 22:15:49.189"/>
</kw>
<msg timestamp="20210805 22:15:49.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:15:49.176" endtime="20210805 22:15:49.189"/>
</kw>
<msg timestamp="20210805 22:15:49.190" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:15:49.175" endtime="20210805 22:15:49.190"/>
</kw>
<msg timestamp="20210805 22:15:49.190" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:15:49.175" endtime="20210805 22:15:49.190"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 22:15:49.191" level="INFO">${random} = dSIGaW5j</msg>
<status status="PASS" starttime="20210805 22:15:49.190" endtime="20210805 22:15:49.191"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 22:15:49.194" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 22:15:49.193" endtime="20210805 22:15:49.194"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 22:15:49.194" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 22:15:49.194" endtime="20210805 22:15:49.195"/>
</kw>
<status status="PASS" starttime="20210805 22:15:49.193" endtime="20210805 22:15:49.195"/>
</kw>
<msg timestamp="20210805 22:15:49.195" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 22:15:49.192" endtime="20210805 22:15:49.195"/>
</kw>
<status status="PASS" starttime="20210805 22:15:49.192" endtime="20210805 22:15:49.195"/>
</kw>
<msg timestamp="20210805 22:15:49.195" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 22:15:49.191" endtime="20210805 22:15:49.195"/>
</kw>
<msg timestamp="20210805 22:15:49.195" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210805 22:15:49.191" endtime="20210805 22:15:49.195"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 22:15:49.198" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 22:15:49.198" endtime="20210805 22:15:49.198"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 22:15:49.199" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 22:15:49.199" endtime="20210805 22:15:49.199"/>
</kw>
<status status="PASS" starttime="20210805 22:15:49.197" endtime="20210805 22:15:49.199"/>
</kw>
<msg timestamp="20210805 22:15:49.199" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 22:15:49.197" endtime="20210805 22:15:49.199"/>
</kw>
<status status="PASS" starttime="20210805 22:15:49.197" endtime="20210805 22:15:49.200"/>
</kw>
<msg timestamp="20210805 22:15:49.200" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210805 22:15:49.196" endtime="20210805 22:15:49.200"/>
</kw>
<msg timestamp="20210805 22:15:49.200" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210805 22:15:49.195" endtime="20210805 22:15:49.200"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 22:15:49.203" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210805 22:15:49.202" endtime="20210805 22:15:49.203"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 22:15:49.203" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210805 22:15:49.203" endtime="20210805 22:15:49.203"/>
</kw>
<status status="PASS" starttime="20210805 22:15:49.202" endtime="20210805 22:15:49.204"/>
</kw>
<msg timestamp="20210805 22:15:49.204" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210805 22:15:49.202" endtime="20210805 22:15:49.204"/>
</kw>
<status status="PASS" starttime="20210805 22:15:49.201" endtime="20210805 22:15:49.204"/>
</kw>
<msg timestamp="20210805 22:15:49.204" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-dSIGaW5j.txt</msg>
<status status="PASS" starttime="20210805 22:15:49.201" endtime="20210805 22:15:49.204"/>
</kw>
<msg timestamp="20210805 22:15:49.204" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-dSIGaW5j.txt</msg>
<status status="PASS" starttime="20210805 22:15:49.200" endtime="20210805 22:15:49.205"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:15:49.208" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-dSIGaW5j.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:16:44.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:16:44.423" level="INFO">${output} = 2021-08-05 22:15:52 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-08-05 22:15:52 INFO  AHSProxy:43 - Connecting to Application History server a...</msg>
<status status="PASS" starttime="20210805 22:15:49.206" endtime="20210805 22:16:44.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:16:44.424" level="INFO">2021-08-05 22:15:52 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-08-05 22:15:52 INFO  AHSProxy:43 - Connecting to Application History server at jhs/172.27.0.8:10200
2021-08-05 22:15:52 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1628201752750, maxDate=1628806552750, sequenceNumber=2, masterKeyId=2))
2021-08-05 22:15:52 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a1 b0 8c c3 b1 2f 38 a1 b8 be e3 b3 2f 40 02 48 01 5a 0d 35 34 32 31 35 38 30 35 33 34 35 30 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-08-05 22:15:52 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1628201752750, maxDate=1628806552750, sequenceNumber=2, masterKeyId=2)
2021-08-05 22:15:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 22:15:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:15:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 22:15:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 22:15:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-05 22:15:55 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-05 22:15:58 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 22:15:58 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628201482066_0002
2021-08-05 22:15:58 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a1 b0 8c c3 b1 2f 38 a1 b8 be e3 b3 2f 40 02 48 01 5a 0d 35 34 32 31 35 38 30 35 33 34 35 30 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1628201752750, maxDate=1628806552750, sequenceNumber=2, masterKeyId=2)]
2021-08-05 22:15:59 INFO  Configuration:2824 - resource-types.xml not found
2021-08-05 22:15:59 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-05 22:15:59 INFO  TimelineClientImpl:130 - Timeline service address: jhs:8188
2021-08-05 22:16:00 INFO  YarnClientImpl:338 - Submitted application application_1628201482066_0002
2021-08-05 22:16:00 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1628201482066_0002/
2021-08-05 22:16:00 INFO  Job:1620 - Running job: job_1628201482066_0002
2021-08-05 22:16:12 INFO  Job:1641 - Job job_1628201482066_0002 running in uber mode : false
2021-08-05 22:16:12 INFO  Job:1648 -  map 0% reduce 0%
2021-08-05 22:16:32 INFO  Job:1648 -  map 33% reduce 0%
2021-08-05 22:16:34 INFO  Job:1648 -  map 67% reduce 0%
2021-08-05 22:16:35 INFO  Job:1648 -  map 100% reduce 0%
2021-08-05 22:16:42 INFO  Job:1648 -  map 100% reduce 100%
2021-08-05 22:16:43 INFO  Job:1659 - Job job_1628201482066_0002 completed successfully
2021-08-05 22:16:43 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1340683
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=108190
		Total time spent by all reduces in occupied slots (ms)=14210
		Total time spent by all map tasks (ms)=54095
		Total time spent by all reduce tasks (ms)=7105
		Total vcore-milliseconds taken by all map tasks=54095
		Total vcore-milliseconds taken by all reduce tasks=7105
		Total megabyte-milliseconds taken by all map tasks=110786560
		Total megabyte-milliseconds taken by all reduce tasks=14551040
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=2075
		CPU time spent (ms)=10220
		Physical memory (bytes) snapshot=1472212992
		Virtual memory (bytes) snapshot=14182572032
		Total committed heap usage (bytes)=1264582656
		Peak Map Physical memory (bytes)=391643136
		Peak Map Virtual memory (bytes)=3542433792
		Peak Reduce Physical memory (bytes)=346845184
		Peak Reduce Virtual memory (bytes)=3563962368
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210805 22:16:44.423" endtime="20210805 22:16:44.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:16:44.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:16:44.425" endtime="20210805 22:16:44.425"/>
</kw>
<status status="PASS" starttime="20210805 22:15:49.205" endtime="20210805 22:16:44.426"/>
</kw>
<msg timestamp="20210805 22:16:44.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:15:49.205" endtime="20210805 22:16:44.426"/>
</kw>
<msg timestamp="20210805 22:16:44.427" level="INFO">${output} = 2021-08-05 22:15:52 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-08-05 22:15:52 INFO  AHSProxy:43 - Connecting to Application History server a...</msg>
<status status="PASS" starttime="20210805 22:15:49.205" endtime="20210805 22:16:44.427"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:16:44.427" endtime="20210805 22:16:44.427"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:16:44.427" endtime="20210805 22:16:44.428"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 22:15:49.174" endtime="20210805 22:16:44.428"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210805 22:14:42.120" endtime="20210805 22:16:44.432"/>
</suite>
<suite id="s1-s5" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s5-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 22:16:50.065" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 22:16:50.065" endtime="20210805 22:16:50.065"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 22:16:50.066" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 22:16:50.065" endtime="20210805 22:16:50.066"/>
</kw>
<status status="PASS" starttime="20210805 22:16:50.064" endtime="20210805 22:16:50.066"/>
</kw>
<msg timestamp="20210805 22:16:50.066" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 22:16:50.064" endtime="20210805 22:16:50.066"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 22:16:50.067" endtime="20210805 22:16:50.067"/>
</kw>
<msg timestamp="20210805 22:16:50.067" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 22:16:50.066" endtime="20210805 22:16:50.067"/>
</kw>
<status status="PASS" starttime="20210805 22:16:50.063" endtime="20210805 22:16:50.067"/>
</kw>
<msg timestamp="20210805 22:16:50.067" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 22:16:50.063" endtime="20210805 22:16:50.067"/>
</kw>
<msg timestamp="20210805 22:16:50.068" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 22:16:50.062" endtime="20210805 22:16:50.068"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 22:16:50.068" level="INFO">${random} = 19279</msg>
<status status="PASS" starttime="20210805 22:16:50.068" endtime="20210805 22:16:50.068"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:16:50.076" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-19279 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:16:55.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:16:55.791" level="INFO">${output} = 2021-08-05 22:16:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:16:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 22:16:50.071" endtime="20210805 22:16:55.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:16:55.792" level="INFO">2021-08-05 22:16:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:16:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 22:16:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 22:16:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210805 22:16:55.791" endtime="20210805 22:16:55.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:16:55.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:16:55.792" endtime="20210805 22:16:55.793"/>
</kw>
<status status="PASS" starttime="20210805 22:16:50.071" endtime="20210805 22:16:55.793"/>
</kw>
<msg timestamp="20210805 22:16:55.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:16:50.070" endtime="20210805 22:16:55.793"/>
</kw>
<msg timestamp="20210805 22:16:55.793" level="INFO">${result} = 2021-08-05 22:16:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:16:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 22:16:50.068" endtime="20210805 22:16:55.793"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:16:55.797" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:16:58.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:16:58.377" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 22:13 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-05 22:16 ofs://om/volume1/bucket1/ozone-19279
-rw-...</msg>
<status status="PASS" starttime="20210805 22:16:55.795" endtime="20210805 22:16:58.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:16:58.378" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 22:13 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-05 22:16 ofs://om/volume1/bucket1/ozone-19279
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-05 22:14 ofs://om/volume1/bucket1/ozone-70339
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 22:13 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 22:16 ofs://om/volume1/bucket1/wordcount-dSIGaW5j.txt</msg>
<status status="PASS" starttime="20210805 22:16:58.377" endtime="20210805 22:16:58.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:16:58.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:16:58.378" endtime="20210805 22:16:58.379"/>
</kw>
<status status="PASS" starttime="20210805 22:16:55.794" endtime="20210805 22:16:58.379"/>
</kw>
<msg timestamp="20210805 22:16:58.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:16:55.794" endtime="20210805 22:16:58.379"/>
</kw>
<msg timestamp="20210805 22:16:58.380" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-05 22:13 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-05 22:16 ofs://om/volume1/bucket1/ozone-19279
-rw-...</msg>
<status status="PASS" starttime="20210805 22:16:55.794" endtime="20210805 22:16:58.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:16:58.380" endtime="20210805 22:16:58.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:16:58.384" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-19279 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:17:03.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:17:03.136" level="INFO">${output} = 2021-08-05 22:17:01 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:17:01 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 22:16:58.382" endtime="20210805 22:17:03.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:17:03.137" level="INFO">2021-08-05 22:17:01 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:17:01 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 22:17:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20210805 22:17:03.136" endtime="20210805 22:17:03.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:17:03.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:17:03.137" endtime="20210805 22:17:03.137"/>
</kw>
<status status="PASS" starttime="20210805 22:16:58.381" endtime="20210805 22:17:03.138"/>
</kw>
<msg timestamp="20210805 22:17:03.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:16:58.381" endtime="20210805 22:17:03.138"/>
</kw>
<msg timestamp="20210805 22:17:03.138" level="INFO">${result} = 2021-08-05 22:17:01 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:17:01 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210805 22:16:58.380" endtime="20210805 22:17:03.138"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:17:03.138" endtime="20210805 22:17:03.139"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:16:50.061" endtime="20210805 22:17:03.139"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210805 22:16:50.009" endtime="20210805 22:17:03.141"/>
</suite>
<suite id="s1-s6" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:17:08.535" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:17:08.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:17:08.542" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:17:08.531" endtime="20210805 22:17:08.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:17:08.543" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:17:08.542" endtime="20210805 22:17:08.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:17:08.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:17:08.543" endtime="20210805 22:17:08.544"/>
</kw>
<status status="PASS" starttime="20210805 22:17:08.531" endtime="20210805 22:17:08.544"/>
</kw>
<msg timestamp="20210805 22:17:08.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:17:08.530" endtime="20210805 22:17:08.544"/>
</kw>
<msg timestamp="20210805 22:17:08.544" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:17:08.530" endtime="20210805 22:17:08.545"/>
</kw>
<msg timestamp="20210805 22:17:08.545" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:17:08.529" endtime="20210805 22:17:08.545"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 22:17:08.549" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 22:17:08.548" endtime="20210805 22:17:08.549"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 22:17:08.549" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 22:17:08.549" endtime="20210805 22:17:08.549"/>
</kw>
<status status="PASS" starttime="20210805 22:17:08.548" endtime="20210805 22:17:08.549"/>
</kw>
<msg timestamp="20210805 22:17:08.549" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 22:17:08.547" endtime="20210805 22:17:08.549"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 22:17:08.550" endtime="20210805 22:17:08.550"/>
</kw>
<msg timestamp="20210805 22:17:08.550" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 22:17:08.550" endtime="20210805 22:17:08.550"/>
</kw>
<status status="PASS" starttime="20210805 22:17:08.547" endtime="20210805 22:17:08.551"/>
</kw>
<msg timestamp="20210805 22:17:08.551" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 22:17:08.546" endtime="20210805 22:17:08.551"/>
</kw>
<msg timestamp="20210805 22:17:08.551" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 22:17:08.545" endtime="20210805 22:17:08.551"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:17:08.554" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:18:00.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:18:00.299" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 22:17:11 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:17:11 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210805 22:17:08.553" endtime="20210805 22:18:00.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:18:00.300" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-05 22:17:11 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:17:11 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 22:17:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 22:17:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-05 22:17:13 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-08-05 22:17:14 INFO  AHSProxy:43 - Connecting to Application History server at jhs/172.27.0.8:10200
2021-08-05 22:17:14 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1628201834306, maxDate=1628806634306, sequenceNumber=3, masterKeyId=2))
2021-08-05 22:17:14 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d2 ad 91 c3 b1 2f 38 d2 b5 c3 e3 b3 2f 40 03 48 01 5a 0d 35 34 32 31 35 38 30 35 33 34 35 30 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-08-05 22:17:14 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1628201834306, maxDate=1628806634306, sequenceNumber=3, masterKeyId=2)
2021-08-05 22:17:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 22:17:14 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-05 22:17:15 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 22:17:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628201482066_0003
2021-08-05 22:17:15 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d2 ad 91 c3 b1 2f 38 d2 b5 c3 e3 b3 2f 40 03 48 01 5a 0d 35 34 32 31 35 38 30 35 33 34 35 30 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1628201834306, maxDate=1628806634306, sequenceNumber=3, masterKeyId=2)]
2021-08-05 22:17:15 INFO  Configuration:2824 - resource-types.xml not found
2021-08-05 22:17:15 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-05 22:17:15 INFO  TimelineClientImpl:130 - Timeline service address: jhs:8188
2021-08-05 22:17:16 INFO  YarnClientImpl:338 - Submitted application application_1628201482066_0003
2021-08-05 22:17:16 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1628201482066_0003/
2021-08-05 22:17:16 INFO  Job:1620 - Running job: job_1628201482066_0003
2021-08-05 22:17:27 INFO  Job:1641 - Job job_1628201482066_0003 running in uber mode : false
2021-08-05 22:17:27 INFO  Job:1648 -  map 0% reduce 0%
2021-08-05 22:17:49 INFO  Job:1648 -  map 33% reduce 0%
2021-08-05 22:17:50 INFO  Job:1648 -  map 67% reduce 0%
2021-08-05 22:17:51 INFO  Job:1648 -  map 100% reduce 0%
2021-08-05 22:17:58 INFO  Job:1648 -  map 100% reduce 100%
2021-08-05 22:17:59 INFO  Job:1659 - Job job_1628201482066_0003 completed successfully
2021-08-05 22:17:59 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1277705
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=109802
		Total time spent by all reduces in occupied slots (ms)=12644
		Total time spent by all map tasks (ms)=54901
		Total time spent by all reduce tasks (ms)=6322
		Total vcore-milliseconds taken by all map tasks=54901
		Total vcore-milliseconds taken by all reduce tasks=6322
		Total megabyte-milliseconds taken by all map tasks=112437248
		Total megabyte-milliseconds taken by all reduce tasks=12947456
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=2383
		CPU time spent (ms)=9680
		Physical memory (bytes) snapshot=1721167872
		Virtual memory (bytes) snapshot=14176460800
		Total committed heap usage (bytes)=1482686464
		Peak Map Physical memory (bytes)=569864192
		Peak Map Virtual memory (bytes)=3542646784
		Peak Reduce Physical memory (bytes)=383492096
		Peak Reduce Virtual memory (bytes)=3557761024
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 45.766 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210805 22:18:00.300" endtime="20210805 22:18:00.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:18:00.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:18:00.301" endtime="20210805 22:18:00.301"/>
</kw>
<status status="PASS" starttime="20210805 22:17:08.552" endtime="20210805 22:18:00.301"/>
</kw>
<msg timestamp="20210805 22:18:00.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:17:08.552" endtime="20210805 22:18:00.301"/>
</kw>
<msg timestamp="20210805 22:18:00.302" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-05 22:17:11 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:17:11 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210805 22:17:08.551" endtime="20210805 22:18:00.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:18:00.302" endtime="20210805 22:18:00.302"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 22:17:08.529" endtime="20210805 22:18:00.303"/>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:18:00.308" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:18:00.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:18:00.316" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:18:00.306" endtime="20210805 22:18:00.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:18:00.317" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:18:00.316" endtime="20210805 22:18:00.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:18:00.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:18:00.317" endtime="20210805 22:18:00.317"/>
</kw>
<status status="PASS" starttime="20210805 22:18:00.305" endtime="20210805 22:18:00.318"/>
</kw>
<msg timestamp="20210805 22:18:00.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:18:00.305" endtime="20210805 22:18:00.318"/>
</kw>
<msg timestamp="20210805 22:18:00.318" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:18:00.305" endtime="20210805 22:18:00.318"/>
</kw>
<msg timestamp="20210805 22:18:00.318" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210805 22:18:00.304" endtime="20210805 22:18:00.318"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 22:18:00.319" level="INFO">${random} = 7SKRmgyp</msg>
<status status="PASS" starttime="20210805 22:18:00.318" endtime="20210805 22:18:00.319"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 22:18:00.322" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 22:18:00.322" endtime="20210805 22:18:00.322"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 22:18:00.323" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 22:18:00.323" endtime="20210805 22:18:00.323"/>
</kw>
<status status="PASS" starttime="20210805 22:18:00.322" endtime="20210805 22:18:00.323"/>
</kw>
<msg timestamp="20210805 22:18:00.323" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 22:18:00.321" endtime="20210805 22:18:00.323"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210805 22:18:00.324" endtime="20210805 22:18:00.324"/>
</kw>
<msg timestamp="20210805 22:18:00.324" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210805 22:18:00.323" endtime="20210805 22:18:00.324"/>
</kw>
<status status="PASS" starttime="20210805 22:18:00.321" endtime="20210805 22:18:00.325"/>
</kw>
<msg timestamp="20210805 22:18:00.325" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 22:18:00.320" endtime="20210805 22:18:00.325"/>
</kw>
<msg timestamp="20210805 22:18:00.325" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210805 22:18:00.319" endtime="20210805 22:18:00.325"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 22:18:00.328" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 22:18:00.328" endtime="20210805 22:18:00.328"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 22:18:00.329" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 22:18:00.328" endtime="20210805 22:18:00.329"/>
</kw>
<status status="PASS" starttime="20210805 22:18:00.327" endtime="20210805 22:18:00.329"/>
</kw>
<msg timestamp="20210805 22:18:00.329" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 22:18:00.327" endtime="20210805 22:18:00.329"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 22:18:00.331" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210805 22:18:00.330" endtime="20210805 22:18:00.331"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 22:18:00.331" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210805 22:18:00.331" endtime="20210805 22:18:00.331"/>
</kw>
<status status="PASS" starttime="20210805 22:18:00.330" endtime="20210805 22:18:00.331"/>
</kw>
<msg timestamp="20210805 22:18:00.331" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210805 22:18:00.329" endtime="20210805 22:18:00.331"/>
</kw>
<status status="PASS" starttime="20210805 22:18:00.326" endtime="20210805 22:18:00.332"/>
</kw>
<msg timestamp="20210805 22:18:00.332" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210805 22:18:00.326" endtime="20210805 22:18:00.332"/>
</kw>
<msg timestamp="20210805 22:18:00.332" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210805 22:18:00.325" endtime="20210805 22:18:00.332"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 22:18:00.335" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210805 22:18:00.335" endtime="20210805 22:18:00.335"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 22:18:00.336" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210805 22:18:00.335" endtime="20210805 22:18:00.336"/>
</kw>
<status status="PASS" starttime="20210805 22:18:00.334" endtime="20210805 22:18:00.336"/>
</kw>
<msg timestamp="20210805 22:18:00.336" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210805 22:18:00.334" endtime="20210805 22:18:00.336"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210805 22:18:00.337" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210805 22:18:00.337" endtime="20210805 22:18:00.337"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210805 22:18:00.338" level="INFO">${result} = /wordcount-7SKRmgyp.txt</msg>
<status status="PASS" starttime="20210805 22:18:00.338" endtime="20210805 22:18:00.338"/>
</kw>
<status status="PASS" starttime="20210805 22:18:00.336" endtime="20210805 22:18:00.338"/>
</kw>
<msg timestamp="20210805 22:18:00.338" level="INFO">${path_with_leading} = /wordcount-7SKRmgyp.txt</msg>
<status status="PASS" starttime="20210805 22:18:00.336" endtime="20210805 22:18:00.338"/>
</kw>
<status status="PASS" starttime="20210805 22:18:00.333" endtime="20210805 22:18:00.339"/>
</kw>
<msg timestamp="20210805 22:18:00.339" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-7SKRmgyp.txt</msg>
<status status="PASS" starttime="20210805 22:18:00.333" endtime="20210805 22:18:00.339"/>
</kw>
<msg timestamp="20210805 22:18:00.339" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-7SKRmgyp.txt</msg>
<status status="PASS" starttime="20210805 22:18:00.332" endtime="20210805 22:18:00.339"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:18:00.342" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-7SKRmgyp.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:18:56.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:18:56.355" level="INFO">${output} = 2021-08-05 22:18:03 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-08-05 22:18:03 INFO  AHSProxy:43 - Connecting to Application History server a...</msg>
<status status="PASS" starttime="20210805 22:18:00.340" endtime="20210805 22:18:56.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:18:56.356" level="INFO">2021-08-05 22:18:03 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-08-05 22:18:03 INFO  AHSProxy:43 - Connecting to Application History server at jhs/172.27.0.8:10200
2021-08-05 22:18:03 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1628201883687, maxDate=1628806683687, sequenceNumber=4, masterKeyId=2))
2021-08-05 22:18:03 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ef ae 94 c3 b1 2f 38 ef b6 c6 e3 b3 2f 40 04 48 01 5a 0d 35 34 32 31 35 38 30 35 33 34 35 30 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-08-05 22:18:03 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1628201883687, maxDate=1628806683687, sequenceNumber=4, masterKeyId=2)
2021-08-05 22:18:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-05 22:18:04 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-05 22:18:04 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-05 22:18:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-05 22:18:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-05 22:18:06 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-05 22:18:06 INFO  JobSubmitter:202 - number of splits:3
2021-08-05 22:18:07 INFO  JobSubmitter:298 - Submitting tokens for job: job_1628201482066_0004
2021-08-05 22:18:07 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ef ae 94 c3 b1 2f 38 ef b6 c6 e3 b3 2f 40 04 48 01 5a 0d 35 34 32 31 35 38 30 35 33 34 35 30 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1628201883687, maxDate=1628806683687, sequenceNumber=4, masterKeyId=2)]
2021-08-05 22:18:07 INFO  Configuration:2824 - resource-types.xml not found
2021-08-05 22:18:07 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-05 22:18:07 INFO  TimelineClientImpl:130 - Timeline service address: jhs:8188
2021-08-05 22:18:08 INFO  YarnClientImpl:338 - Submitted application application_1628201482066_0004
2021-08-05 22:18:08 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1628201482066_0004/
2021-08-05 22:18:08 INFO  Job:1620 - Running job: job_1628201482066_0004
2021-08-05 22:18:20 INFO  Job:1641 - Job job_1628201482066_0004 running in uber mode : false
2021-08-05 22:18:20 INFO  Job:1648 -  map 0% reduce 0%
2021-08-05 22:18:39 INFO  Job:1648 -  map 33% reduce 0%
2021-08-05 22:18:41 INFO  Job:1648 -  map 67% reduce 0%
2021-08-05 22:18:42 INFO  Job:1648 -  map 100% reduce 0%
2021-08-05 22:18:49 INFO  Job:1648 -  map 100% reduce 100%
2021-08-05 22:18:55 INFO  Job:1659 - Job job_1628201482066_0004 completed successfully
2021-08-05 22:18:55 INFO  Job:1666 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1340599
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=103062
		Total time spent by all reduces in occupied slots (ms)=13940
		Total time spent by all map tasks (ms)=51531
		Total time spent by all reduce tasks (ms)=6970
		Total vcore-milliseconds taken by all map tasks=51531
		Total vcore-milliseconds taken by all reduce tasks=6970
		Total megabyte-milliseconds taken by all map tasks=105535488
		Total megabyte-milliseconds taken by all reduce tasks=14274560
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1612
		CPU time spent (ms)=9700
		Physical memory (bytes) snapshot=1468669952
		Virtual memory (bytes) snapshot=14167465984
		Total committed heap usage (bytes)=1232601088
		Peak Map Physical memory (bytes)=426016768
		Peak Map Virtual memory (bytes)=3542073344
		Peak Reduce Physical memory (bytes)=350449664
		Peak Reduce Virtual memory (bytes)=3563552768
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210805 22:18:56.356" endtime="20210805 22:18:56.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:18:56.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:18:56.357" endtime="20210805 22:18:56.357"/>
</kw>
<status status="PASS" starttime="20210805 22:18:00.340" endtime="20210805 22:18:56.357"/>
</kw>
<msg timestamp="20210805 22:18:56.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:18:00.340" endtime="20210805 22:18:56.357"/>
</kw>
<msg timestamp="20210805 22:18:56.358" level="INFO">${output} = 2021-08-05 22:18:03 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-08-05 22:18:03 INFO  AHSProxy:43 - Connecting to Application History server a...</msg>
<status status="PASS" starttime="20210805 22:18:00.339" endtime="20210805 22:18:56.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:18:56.358" endtime="20210805 22:18:56.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:18:56.358" endtime="20210805 22:18:56.359"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210805 22:18:00.304" endtime="20210805 22:18:56.359"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210805 22:17:08.478" endtime="20210805 22:18:56.361"/>
</suite>
<suite id="s1-s7" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s7-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:12:25.666" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:12:25.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:12:25.670" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210805 22:12:25.663" endtime="20210805 22:12:25.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:12:25.671" level="INFO">om</msg>
<status status="PASS" starttime="20210805 22:12:25.670" endtime="20210805 22:12:25.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:12:25.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:12:25.671" endtime="20210805 22:12:25.672"/>
</kw>
<status status="PASS" starttime="20210805 22:12:25.662" endtime="20210805 22:12:25.672"/>
</kw>
<msg timestamp="20210805 22:12:25.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:12:25.662" endtime="20210805 22:12:25.672"/>
</kw>
<msg timestamp="20210805 22:12:25.672" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20210805 22:12:25.661" endtime="20210805 22:12:25.672"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210805 22:12:25.673" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210805 22:12:25.672" endtime="20210805 22:12:25.673"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:12:25.677" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:12:25.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:12:25.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:12:25.675" endtime="20210805 22:12:25.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:12:25.685" level="INFO"/>
<status status="PASS" starttime="20210805 22:12:25.684" endtime="20210805 22:12:25.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:12:25.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:12:25.685" endtime="20210805 22:12:25.685"/>
</kw>
<status status="PASS" starttime="20210805 22:12:25.674" endtime="20210805 22:12:25.685"/>
</kw>
<msg timestamp="20210805 22:12:25.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:12:25.674" endtime="20210805 22:12:25.686"/>
</kw>
<status status="PASS" starttime="20210805 22:12:25.673" endtime="20210805 22:12:25.686"/>
</kw>
<status status="PASS" starttime="20210805 22:12:25.673" endtime="20210805 22:12:25.686"/>
</kw>
<status status="PASS" starttime="20210805 22:12:25.661" endtime="20210805 22:12:25.686"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210805 22:12:25.660" endtime="20210805 22:12:25.686"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210805 22:12:25.610" endtime="20210805 22:12:25.688"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="338642"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit-Hadoop">ozonesecure-mr.Kinit-Hadoop</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="hadoopfs-o3fs">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="mapreduce-o3fs">ozonesecure-mr.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="hadoopfs-ofs">ozonesecure-mr.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="mapreduce-ofs">ozonesecure-mr.mapreduce-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Kinit">ozonesecure-mr.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
