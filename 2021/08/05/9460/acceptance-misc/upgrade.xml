<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210805 22:30:32.225" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 22:23:05.531" level="INFO">${random} = 37470</msg>
<status status="PASS" starttime="20210805 22:23:05.531" endtime="20210805 22:23:05.531"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:23:05.534" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-37470 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:23:08.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:23:08.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:23:05.533" endtime="20210805 22:23:08.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:23:08.784" level="INFO"/>
<status status="PASS" starttime="20210805 22:23:08.784" endtime="20210805 22:23:08.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:23:08.785" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:23:08.784" endtime="20210805 22:23:08.785"/>
</kw>
<status status="PASS" starttime="20210805 22:23:05.532" endtime="20210805 22:23:08.785"/>
</kw>
<msg timestamp="20210805 22:23:08.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:23:05.532" endtime="20210805 22:23:08.785"/>
</kw>
<msg timestamp="20210805 22:23:08.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:23:05.531" endtime="20210805 22:23:08.785"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:23:08.785" endtime="20210805 22:23:08.786"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:23:05.530" endtime="20210805 22:23:08.786"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210805 22:23:05.494" endtime="20210805 22:23:08.787"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:22:54.448" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:22:56.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:22:56.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:22:54.447" endtime="20210805 22:22:56.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:22:56.490" level="INFO"/>
<status status="PASS" starttime="20210805 22:22:56.490" endtime="20210805 22:22:56.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:22:56.491" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:22:56.490" endtime="20210805 22:22:56.491"/>
</kw>
<status status="PASS" starttime="20210805 22:22:54.447" endtime="20210805 22:22:56.491"/>
</kw>
<msg timestamp="20210805 22:22:56.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:22:54.447" endtime="20210805 22:22:56.491"/>
</kw>
<msg timestamp="20210805 22:22:56.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:22:54.446" endtime="20210805 22:22:56.492"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:22:56.492" endtime="20210805 22:22:56.492"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:22:56.495" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:22:58.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:22:58.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:22:56.493" endtime="20210805 22:22:58.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:22:58.280" level="INFO"/>
<status status="PASS" starttime="20210805 22:22:58.280" endtime="20210805 22:22:58.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:22:58.281" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:22:58.280" endtime="20210805 22:22:58.281"/>
</kw>
<status status="PASS" starttime="20210805 22:22:56.493" endtime="20210805 22:22:58.281"/>
</kw>
<msg timestamp="20210805 22:22:58.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:22:56.493" endtime="20210805 22:22:58.281"/>
</kw>
<msg timestamp="20210805 22:22:58.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:22:56.492" endtime="20210805 22:22:58.281"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:22:58.281" endtime="20210805 22:22:58.282"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:22:58.286" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:23:02.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:23:02.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:22:58.285" endtime="20210805 22:23:02.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:23:02.459" level="INFO"/>
<status status="PASS" starttime="20210805 22:23:02.459" endtime="20210805 22:23:02.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:23:02.460" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:23:02.460" endtime="20210805 22:23:02.460"/>
</kw>
<status status="PASS" starttime="20210805 22:22:58.283" endtime="20210805 22:23:02.460"/>
</kw>
<msg timestamp="20210805 22:23:02.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:22:58.283" endtime="20210805 22:23:02.461"/>
</kw>
<msg timestamp="20210805 22:23:02.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:22:58.282" endtime="20210805 22:23:02.461"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:23:02.461" endtime="20210805 22:23:02.461"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:22:54.445" endtime="20210805 22:23:02.461"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210805 22:22:54.408" endtime="20210805 22:23:02.462"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:24:11.482" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:24:13.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:24:13.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:24:11.479" endtime="20210805 22:24:13.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:24:13.503" level="INFO"/>
<status status="PASS" starttime="20210805 22:24:13.502" endtime="20210805 22:24:13.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:24:13.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:24:13.503" endtime="20210805 22:24:13.504"/>
</kw>
<status status="PASS" starttime="20210805 22:24:11.478" endtime="20210805 22:24:13.504"/>
</kw>
<msg timestamp="20210805 22:24:13.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:24:11.478" endtime="20210805 22:24:13.504"/>
</kw>
<msg timestamp="20210805 22:24:13.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:24:11.477" endtime="20210805 22:24:13.505"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:24:13.505" endtime="20210805 22:24:13.505"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:24:13.514" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:24:15.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:24:15.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:24:13.507" endtime="20210805 22:24:15.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:24:15.588" level="INFO"/>
<status status="PASS" starttime="20210805 22:24:15.588" endtime="20210805 22:24:15.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:24:15.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:24:15.589" endtime="20210805 22:24:15.589"/>
</kw>
<status status="PASS" starttime="20210805 22:24:13.506" endtime="20210805 22:24:15.589"/>
</kw>
<msg timestamp="20210805 22:24:15.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:24:13.506" endtime="20210805 22:24:15.590"/>
</kw>
<msg timestamp="20210805 22:24:15.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:24:13.505" endtime="20210805 22:24:15.590"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:24:15.590" endtime="20210805 22:24:15.590"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:24:15.594" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:24:20.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:24:20.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:24:15.592" endtime="20210805 22:24:20.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:24:20.045" level="INFO"/>
<status status="PASS" starttime="20210805 22:24:20.044" endtime="20210805 22:24:20.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:24:20.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:24:20.045" endtime="20210805 22:24:20.046"/>
</kw>
<status status="PASS" starttime="20210805 22:24:15.591" endtime="20210805 22:24:20.046"/>
</kw>
<msg timestamp="20210805 22:24:20.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:24:15.591" endtime="20210805 22:24:20.046"/>
</kw>
<msg timestamp="20210805 22:24:20.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:24:15.591" endtime="20210805 22:24:20.047"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:24:20.047" endtime="20210805 22:24:20.047"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:24:11.476" endtime="20210805 22:24:20.047"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210805 22:24:11.430" endtime="20210805 22:24:20.048"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 22:24:23.227" level="INFO">${random} = 95551</msg>
<status status="PASS" starttime="20210805 22:24:23.226" endtime="20210805 22:24:23.227"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:24:23.232" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-95551 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:24:26.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:24:26.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:24:23.228" endtime="20210805 22:24:26.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:24:26.693" level="INFO"/>
<status status="PASS" starttime="20210805 22:24:26.693" endtime="20210805 22:24:26.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:24:26.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:24:26.694" endtime="20210805 22:24:26.694"/>
</kw>
<status status="PASS" starttime="20210805 22:24:23.228" endtime="20210805 22:24:26.694"/>
</kw>
<msg timestamp="20210805 22:24:26.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:24:23.228" endtime="20210805 22:24:26.695"/>
</kw>
<msg timestamp="20210805 22:24:26.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:24:23.227" endtime="20210805 22:24:26.695"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:24:26.695" endtime="20210805 22:24:26.695"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:24:23.225" endtime="20210805 22:24:26.696"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210805 22:24:23.180" endtime="20210805 22:24:26.697"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 22:24:04.302" level="INFO">${random} = 71809</msg>
<status status="PASS" starttime="20210805 22:24:04.302" endtime="20210805 22:24:04.302"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:24:04.307" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-71809 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:24:08.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:24:08.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:24:04.304" endtime="20210805 22:24:08.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:24:08.307" level="INFO"/>
<status status="PASS" starttime="20210805 22:24:08.306" endtime="20210805 22:24:08.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:24:08.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:24:08.307" endtime="20210805 22:24:08.308"/>
</kw>
<status status="PASS" starttime="20210805 22:24:04.304" endtime="20210805 22:24:08.308"/>
</kw>
<msg timestamp="20210805 22:24:08.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:24:04.303" endtime="20210805 22:24:08.308"/>
</kw>
<msg timestamp="20210805 22:24:08.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:24:04.303" endtime="20210805 22:24:08.308"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:24:08.309" endtime="20210805 22:24:08.309"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:24:04.301" endtime="20210805 22:24:08.309"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210805 22:24:04.255" endtime="20210805 22:24:08.311"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="27538"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 22:25:50.648" level="INFO">${random} = 79398</msg>
<status status="PASS" starttime="20210805 22:25:50.648" endtime="20210805 22:25:50.648"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:25:50.651" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-79398 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:25:53.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:25:53.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:25:50.650" endtime="20210805 22:25:53.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:25:53.793" level="INFO"/>
<status status="PASS" starttime="20210805 22:25:53.792" endtime="20210805 22:25:53.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:25:53.794" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:25:53.793" endtime="20210805 22:25:53.794"/>
</kw>
<status status="PASS" starttime="20210805 22:25:50.649" endtime="20210805 22:25:53.794"/>
</kw>
<msg timestamp="20210805 22:25:53.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:25:50.649" endtime="20210805 22:25:53.794"/>
</kw>
<msg timestamp="20210805 22:25:53.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:25:50.648" endtime="20210805 22:25:53.794"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:25:53.795" endtime="20210805 22:25:53.795"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:25:50.647" endtime="20210805 22:25:53.795"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210805 22:25:50.612" endtime="20210805 22:25:53.796"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:25:39.318" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:25:41.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:25:41.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:25:39.317" endtime="20210805 22:25:41.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:25:41.210" level="INFO"/>
<status status="PASS" starttime="20210805 22:25:41.209" endtime="20210805 22:25:41.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:25:41.210" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:25:41.210" endtime="20210805 22:25:41.210"/>
</kw>
<status status="PASS" starttime="20210805 22:25:39.316" endtime="20210805 22:25:41.210"/>
</kw>
<msg timestamp="20210805 22:25:41.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:25:39.316" endtime="20210805 22:25:41.211"/>
</kw>
<msg timestamp="20210805 22:25:41.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:25:39.316" endtime="20210805 22:25:41.211"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:25:41.211" endtime="20210805 22:25:41.211"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:25:41.214" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:25:43.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:25:43.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:25:41.213" endtime="20210805 22:25:43.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:25:43.173" level="INFO"/>
<status status="PASS" starttime="20210805 22:25:43.172" endtime="20210805 22:25:43.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:25:43.173" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:25:43.173" endtime="20210805 22:25:43.173"/>
</kw>
<status status="PASS" starttime="20210805 22:25:41.212" endtime="20210805 22:25:43.174"/>
</kw>
<msg timestamp="20210805 22:25:43.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:25:41.212" endtime="20210805 22:25:43.174"/>
</kw>
<msg timestamp="20210805 22:25:43.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:25:41.211" endtime="20210805 22:25:43.174"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:25:43.174" endtime="20210805 22:25:43.174"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:25:43.181" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:25:47.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:25:47.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:25:43.180" endtime="20210805 22:25:47.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:25:47.454" level="INFO"/>
<status status="PASS" starttime="20210805 22:25:47.453" endtime="20210805 22:25:47.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:25:47.455" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:25:47.454" endtime="20210805 22:25:47.455"/>
</kw>
<status status="PASS" starttime="20210805 22:25:43.177" endtime="20210805 22:25:47.455"/>
</kw>
<msg timestamp="20210805 22:25:47.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:25:43.177" endtime="20210805 22:25:47.455"/>
</kw>
<msg timestamp="20210805 22:25:47.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210805 22:25:43.177" endtime="20210805 22:25:47.455"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:25:47.455" endtime="20210805 22:25:47.456"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:25:39.315" endtime="20210805 22:25:47.456"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210805 22:25:39.277" endtime="20210805 22:25:47.457"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:27:09.662" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210805 22:27:09.661" endtime="20210805 22:27:09.662"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:27:09.663" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210805 22:27:09.662" endtime="20210805 22:27:09.663"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210805 22:27:09.663" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210805 22:27:09.663" endtime="20210805 22:27:09.663"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210805 22:27:09.664" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210805 22:27:09.663" endtime="20210805 22:27:09.664"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210805 22:27:09.665" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210805 22:27:09.665" level="INFO">${version_file_contents} = #Thu Aug 05 22:26:36 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628202374719
clusterID=949fe0c0-bfae-45ae-8aad-ec521e840199
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210805 22:27:09.665" endtime="20210805 22:27:09.665"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210805 22:27:09.666" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210805 22:27:09.665" endtime="20210805 22:27:09.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:27:09.666" endtime="20210805 22:27:09.666"/>
</kw>
<status status="PASS" starttime="20210805 22:27:09.664" endtime="20210805 22:27:09.666"/>
</kw>
<status status="PASS" starttime="20210805 22:27:09.664" endtime="20210805 22:27:09.667"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:27:09.661" endtime="20210805 22:27:09.667"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210805 22:27:09.613" endtime="20210805 22:27:09.667"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210805 22:27:56.368" endtime="20210805 22:27:56.369"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:27:56.373" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:29:23.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:29:23.972" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210805 22:27:56.370" endtime="20210805 22:29:23.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:29:23.973" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210805 22:29:23.973" endtime="20210805 22:29:23.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:29:23.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:29:23.973" endtime="20210805 22:29:23.974"/>
</kw>
<status status="PASS" starttime="20210805 22:27:56.370" endtime="20210805 22:29:23.974"/>
</kw>
<msg timestamp="20210805 22:29:23.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:27:56.369" endtime="20210805 22:29:23.975"/>
</kw>
<msg timestamp="20210805 22:29:23.975" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210805 22:27:56.369" endtime="20210805 22:29:23.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:29:23.975" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210805 22:29:23.975" endtime="20210805 22:29:23.975"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:27:56.368" endtime="20210805 22:29:23.976"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210805 22:29:23.977" endtime="20210805 22:29:23.977"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:29:23.981" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:29:26.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:29:26.238" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210805 22:29:23.979" endtime="20210805 22:29:26.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:29:26.239" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:421)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:407)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:240)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210805 22:29:26.238" endtime="20210805 22:29:26.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:29:26.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:29:26.239" endtime="20210805 22:29:26.240"/>
</kw>
<status status="PASS" starttime="20210805 22:29:23.978" endtime="20210805 22:29:26.240"/>
</kw>
<msg timestamp="20210805 22:29:26.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:29:23.978" endtime="20210805 22:29:26.240"/>
</kw>
<msg timestamp="20210805 22:29:26.240" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210805 22:29:23.978" endtime="20210805 22:29:26.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:29:26.241" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:421)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:407)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:240)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210805 22:29:26.241" endtime="20210805 22:29:26.241"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:29:23.976" endtime="20210805 22:29:26.241"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210805 22:27:56.323" endtime="20210805 22:29:26.242"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:29:29.615" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210805 22:29:29.614" endtime="20210805 22:29:29.615"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:29:29.615" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210805 22:29:29.615" endtime="20210805 22:29:29.615"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210805 22:29:29.616" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210805 22:29:29.615" endtime="20210805 22:29:29.616"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210805 22:29:29.616" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210805 22:29:29.616" endtime="20210805 22:29:29.616"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210805 22:29:29.617" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210805 22:29:29.618" level="INFO">${version_file_contents} = #Thu Aug 05 22:28:03 UTC 2021
cTime=1628202295821
clusterID=CID-10c3f608-451e-47e5-a486-8539ab86849d
nodeType=SCM
scmUuid=7a770431-dcdd-42f5-bc1c-660239598cb5
layoutVersion=2
</msg>
<status status="PASS" starttime="20210805 22:29:29.617" endtime="20210805 22:29:29.618"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210805 22:29:29.618" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210805 22:29:29.618" endtime="20210805 22:29:29.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:29:29.618" endtime="20210805 22:29:29.619"/>
</kw>
<status status="PASS" starttime="20210805 22:29:29.617" endtime="20210805 22:29:29.619"/>
</kw>
<status status="PASS" starttime="20210805 22:29:29.616" endtime="20210805 22:29:29.619"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:29:29.613" endtime="20210805 22:29:29.619"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210805 22:29:29.567" endtime="20210805 22:29:29.620"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:29:32.949" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210805 22:29:32.948" endtime="20210805 22:29:32.949"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:29:32.950" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210805 22:29:32.949" endtime="20210805 22:29:32.950"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210805 22:29:32.950" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210805 22:29:32.950" endtime="20210805 22:29:32.950"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210805 22:29:32.951" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210805 22:29:32.950" endtime="20210805 22:29:32.951"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210805 22:29:32.952" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210805 22:29:32.952" level="INFO">${version_file_contents} = #Thu Aug 05 22:28:16 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628202374719
clusterID=949fe0c0-bfae-45ae-8aad-ec521e840199
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210805 22:29:32.951" endtime="20210805 22:29:32.952"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210805 22:29:32.953" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210805 22:29:32.952" endtime="20210805 22:29:32.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:29:32.953" endtime="20210805 22:29:32.953"/>
</kw>
<status status="PASS" starttime="20210805 22:29:32.951" endtime="20210805 22:29:32.953"/>
</kw>
<status status="PASS" starttime="20210805 22:29:32.951" endtime="20210805 22:29:32.953"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:29:32.948" endtime="20210805 22:29:32.954"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210805 22:29:32.901" endtime="20210805 22:29:32.954"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:29:36.277" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210805 22:29:36.276" endtime="20210805 22:29:36.277"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:29:36.277" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210805 22:29:36.277" endtime="20210805 22:29:36.278"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210805 22:29:36.278" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210805 22:29:36.278" endtime="20210805 22:29:36.278"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210805 22:29:36.278" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210805 22:29:36.278" endtime="20210805 22:29:36.279"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210805 22:29:36.280" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210805 22:29:36.280" level="INFO">${version_file_contents} = #Thu Aug 05 22:28:16 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628202376834
clusterID=1dfac018-6918-4441-8ecf-2612d4926467
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210805 22:29:36.279" endtime="20210805 22:29:36.280"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210805 22:29:36.281" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210805 22:29:36.280" endtime="20210805 22:29:36.281"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:29:36.281" endtime="20210805 22:29:36.281"/>
</kw>
<status status="PASS" starttime="20210805 22:29:36.279" endtime="20210805 22:29:36.281"/>
</kw>
<status status="PASS" starttime="20210805 22:29:36.279" endtime="20210805 22:29:36.281"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:29:36.276" endtime="20210805 22:29:36.281"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210805 22:29:36.230" endtime="20210805 22:29:36.282"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:29:39.582" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210805 22:29:39.581" endtime="20210805 22:29:39.582"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:29:39.583" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210805 22:29:39.582" endtime="20210805 22:29:39.583"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210805 22:29:39.583" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210805 22:29:39.583" endtime="20210805 22:29:39.583"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210805 22:29:39.584" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210805 22:29:39.583" endtime="20210805 22:29:39.584"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210805 22:29:39.585" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210805 22:29:39.585" level="INFO">${version_file_contents} = #Thu Aug 05 22:28:16 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628202376000
clusterID=d4d5cfd5-32ae-440d-9fc3-9f47858dcd9b
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210805 22:29:39.584" endtime="20210805 22:29:39.585"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210805 22:29:39.586" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210805 22:29:39.585" endtime="20210805 22:29:39.586"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:29:39.586" endtime="20210805 22:29:39.586"/>
</kw>
<status status="PASS" starttime="20210805 22:29:39.584" endtime="20210805 22:29:39.586"/>
</kw>
<status status="PASS" starttime="20210805 22:29:39.584" endtime="20210805 22:29:39.586"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:29:39.581" endtime="20210805 22:29:39.587"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210805 22:29:39.536" endtime="20210805 22:29:39.587"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:29:42.900" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210805 22:29:42.900" endtime="20210805 22:29:42.900"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:29:42.901" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210805 22:29:42.900" endtime="20210805 22:29:42.901"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210805 22:29:42.901" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210805 22:29:42.901" endtime="20210805 22:29:42.901"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210805 22:29:42.902" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210805 22:29:42.902" endtime="20210805 22:29:42.902"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210805 22:29:42.903" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210805 22:29:42.903" level="INFO">${version_file_contents} = #Thu Aug 05 22:25:17 UTC 2021
cTime=1628202301051
clusterID=CID-10c3f608-451e-47e5-a486-8539ab86849d
omUuid=49a519e1-93cf-43bc-bb4c-38432ab1b44b
nodeType=OM
scmUuid=7a770431-dcdd-42f5-bc1c-660239598cb...</msg>
<status status="PASS" starttime="20210805 22:29:42.903" endtime="20210805 22:29:42.903"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210805 22:29:42.904" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210805 22:29:42.903" endtime="20210805 22:29:42.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:29:42.904" endtime="20210805 22:29:42.904"/>
</kw>
<status status="PASS" starttime="20210805 22:29:42.902" endtime="20210805 22:29:42.904"/>
</kw>
<status status="PASS" starttime="20210805 22:29:42.902" endtime="20210805 22:29:42.904"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:29:42.899" endtime="20210805 22:29:42.905"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210805 22:29:42.853" endtime="20210805 22:29:42.905"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:29:46.251" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210805 22:29:46.251" endtime="20210805 22:29:46.252"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:29:46.252" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210805 22:29:46.252" endtime="20210805 22:29:46.252"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210805 22:29:46.253" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210805 22:29:46.252" endtime="20210805 22:29:46.253"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210805 22:29:46.253" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210805 22:29:46.253" endtime="20210805 22:29:46.253"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210805 22:29:46.254" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210805 22:29:46.255" level="INFO">${version_file_contents} = #Thu Aug 05 22:25:18 UTC 2021
cTime=1628202302051
clusterID=CID-10c3f608-451e-47e5-a486-8539ab86849d
omUuid=6034ff7c-a316-4b68-8e67-95af4d218cd6
nodeType=OM
scmUuid=7a770431-dcdd-42f5-bc1c-660239598cb...</msg>
<status status="PASS" starttime="20210805 22:29:46.254" endtime="20210805 22:29:46.255"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210805 22:29:46.255" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210805 22:29:46.255" endtime="20210805 22:29:46.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:29:46.255" endtime="20210805 22:29:46.256"/>
</kw>
<status status="PASS" starttime="20210805 22:29:46.254" endtime="20210805 22:29:46.256"/>
</kw>
<status status="PASS" starttime="20210805 22:29:46.253" endtime="20210805 22:29:46.256"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:29:46.250" endtime="20210805 22:29:46.256"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210805 22:29:46.204" endtime="20210805 22:29:46.257"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:29:49.591" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210805 22:29:49.591" endtime="20210805 22:29:49.591"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:29:49.592" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210805 22:29:49.591" endtime="20210805 22:29:49.592"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210805 22:29:49.592" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210805 22:29:49.592" endtime="20210805 22:29:49.592"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210805 22:29:49.593" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210805 22:29:49.592" endtime="20210805 22:29:49.593"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210805 22:29:49.594" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210805 22:29:49.594" level="INFO">${version_file_contents} = #Thu Aug 05 22:25:18 UTC 2021
cTime=1628202302407
clusterID=CID-10c3f608-451e-47e5-a486-8539ab86849d
omUuid=f6e35b2d-8a90-4f78-8388-23184802cff2
nodeType=OM
scmUuid=7a770431-dcdd-42f5-bc1c-660239598cb...</msg>
<status status="PASS" starttime="20210805 22:29:49.594" endtime="20210805 22:29:49.594"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210805 22:29:49.595" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210805 22:29:49.594" endtime="20210805 22:29:49.595"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:29:49.595" endtime="20210805 22:29:49.595"/>
</kw>
<status status="PASS" starttime="20210805 22:29:49.593" endtime="20210805 22:29:49.595"/>
</kw>
<status status="PASS" starttime="20210805 22:29:49.593" endtime="20210805 22:29:49.595"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:29:49.590" endtime="20210805 22:29:49.596"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210805 22:29:49.544" endtime="20210805 22:29:49.596"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 22:29:52.892" level="INFO">${random} = 28837</msg>
<status status="PASS" starttime="20210805 22:29:52.892" endtime="20210805 22:29:52.893"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:29:52.897" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-28837 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:29:56.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:29:56.383" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:29:52.894" endtime="20210805 22:29:56.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:29:56.384" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:29:56.383" endtime="20210805 22:29:56.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:29:56.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:29:56.384" endtime="20210805 22:29:56.384"/>
</kw>
<status status="PASS" starttime="20210805 22:29:52.894" endtime="20210805 22:29:56.385"/>
</kw>
<msg timestamp="20210805 22:29:56.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:29:52.893" endtime="20210805 22:29:56.385"/>
</kw>
<msg timestamp="20210805 22:29:56.385" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:29:52.893" endtime="20210805 22:29:56.385"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:29:56.385" endtime="20210805 22:29:56.386"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:29:52.891" endtime="20210805 22:29:56.386"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210805 22:29:52.844" endtime="20210805 22:29:56.387"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 22:29:59.640" level="INFO">${random} = 78851</msg>
<status status="PASS" starttime="20210805 22:29:59.640" endtime="20210805 22:29:59.640"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:29:59.645" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-78851 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:30:03.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:30:03.356" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:29:59.642" endtime="20210805 22:30:03.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:30:03.357" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:30:03.357" endtime="20210805 22:30:03.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:30:03.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:30:03.358" endtime="20210805 22:30:03.358"/>
</kw>
<status status="PASS" starttime="20210805 22:29:59.642" endtime="20210805 22:30:03.358"/>
</kw>
<msg timestamp="20210805 22:30:03.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:29:59.641" endtime="20210805 22:30:03.359"/>
</kw>
<msg timestamp="20210805 22:30:03.359" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:29:59.640" endtime="20210805 22:30:03.359"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:30:03.359" endtime="20210805 22:30:03.359"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:29:59.639" endtime="20210805 22:30:03.360"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210805 22:29:59.593" endtime="20210805 22:30:03.361"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:27:13.044" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210805 22:27:13.044" endtime="20210805 22:27:13.044"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:27:13.045" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210805 22:27:13.044" endtime="20210805 22:27:13.045"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210805 22:27:13.045" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210805 22:27:13.045" endtime="20210805 22:27:13.045"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210805 22:27:13.046" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210805 22:27:13.045" endtime="20210805 22:27:13.046"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210805 22:27:13.047" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210805 22:27:13.047" level="INFO">${version_file_contents} = #Thu Aug 05 22:26:37 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628202376834
clusterID=1dfac018-6918-4441-8ecf-2612d4926467
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210805 22:27:13.047" endtime="20210805 22:27:13.047"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210805 22:27:13.048" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210805 22:27:13.047" endtime="20210805 22:27:13.048"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:27:13.048" endtime="20210805 22:27:13.048"/>
</kw>
<status status="PASS" starttime="20210805 22:27:13.046" endtime="20210805 22:27:13.049"/>
</kw>
<status status="PASS" starttime="20210805 22:27:13.046" endtime="20210805 22:27:13.049"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:27:13.043" endtime="20210805 22:27:13.049"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210805 22:27:12.987" endtime="20210805 22:27:13.049"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:30:06.649" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:30:08.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:30:08.657" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:30:06.646" endtime="20210805 22:30:08.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:30:08.658" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:30:08.657" endtime="20210805 22:30:08.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:30:08.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:30:08.658" endtime="20210805 22:30:08.659"/>
</kw>
<status status="PASS" starttime="20210805 22:30:06.646" endtime="20210805 22:30:08.659"/>
</kw>
<msg timestamp="20210805 22:30:08.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:30:06.645" endtime="20210805 22:30:08.659"/>
</kw>
<msg timestamp="20210805 22:30:08.660" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:30:06.645" endtime="20210805 22:30:08.660"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:30:08.660" endtime="20210805 22:30:08.660"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:30:08.664" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:30:10.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:30:10.787" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:30:08.662" endtime="20210805 22:30:10.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:30:10.788" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:30:10.787" endtime="20210805 22:30:10.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:30:10.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:30:10.788" endtime="20210805 22:30:10.789"/>
</kw>
<status status="PASS" starttime="20210805 22:30:08.661" endtime="20210805 22:30:10.789"/>
</kw>
<msg timestamp="20210805 22:30:10.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:30:08.661" endtime="20210805 22:30:10.789"/>
</kw>
<msg timestamp="20210805 22:30:10.790" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:30:08.660" endtime="20210805 22:30:10.790"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:30:10.790" endtime="20210805 22:30:10.790"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:30:10.793" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:30:14.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:30:14.847" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:30:10.792" endtime="20210805 22:30:14.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:30:14.848" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:30:14.847" endtime="20210805 22:30:14.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:30:14.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:30:14.848" endtime="20210805 22:30:14.849"/>
</kw>
<status status="PASS" starttime="20210805 22:30:10.791" endtime="20210805 22:30:14.849"/>
</kw>
<msg timestamp="20210805 22:30:14.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:30:10.791" endtime="20210805 22:30:14.849"/>
</kw>
<msg timestamp="20210805 22:30:14.849" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:30:10.790" endtime="20210805 22:30:14.849"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:30:14.850" endtime="20210805 22:30:14.850"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:30:06.644" endtime="20210805 22:30:14.850"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210805 22:30:06.597" endtime="20210805 22:30:14.852"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 22:30:18.141" level="INFO">${random} = 86468</msg>
<status status="PASS" starttime="20210805 22:30:18.141" endtime="20210805 22:30:18.141"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:30:18.146" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-86468 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:30:21.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:30:21.706" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:30:18.143" endtime="20210805 22:30:21.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:30:21.707" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:30:21.706" endtime="20210805 22:30:21.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:30:21.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:30:21.707" endtime="20210805 22:30:21.707"/>
</kw>
<status status="PASS" starttime="20210805 22:30:18.142" endtime="20210805 22:30:21.708"/>
</kw>
<msg timestamp="20210805 22:30:21.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:30:18.142" endtime="20210805 22:30:21.708"/>
</kw>
<msg timestamp="20210805 22:30:21.708" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:30:18.141" endtime="20210805 22:30:21.708"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:30:21.708" endtime="20210805 22:30:21.709"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:30:18.140" endtime="20210805 22:30:21.709"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210805 22:30:18.094" endtime="20210805 22:30:21.710"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:27:16.437" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210805 22:27:16.436" endtime="20210805 22:27:16.437"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:27:16.438" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210805 22:27:16.437" endtime="20210805 22:27:16.438"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210805 22:27:16.438" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210805 22:27:16.438" endtime="20210805 22:27:16.438"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210805 22:27:16.439" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210805 22:27:16.438" endtime="20210805 22:27:16.439"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210805 22:27:16.440" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210805 22:27:16.440" level="INFO">${version_file_contents} = #Thu Aug 05 22:26:37 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1628202376000
clusterID=d4d5cfd5-32ae-440d-9fc3-9f47858dcd9b
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210805 22:27:16.439" endtime="20210805 22:27:16.440"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210805 22:27:16.441" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210805 22:27:16.440" endtime="20210805 22:27:16.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:27:16.441" endtime="20210805 22:27:16.441"/>
</kw>
<status status="PASS" starttime="20210805 22:27:16.439" endtime="20210805 22:27:16.441"/>
</kw>
<status status="PASS" starttime="20210805 22:27:16.439" endtime="20210805 22:27:16.441"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:27:16.436" endtime="20210805 22:27:16.441"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210805 22:27:16.390" endtime="20210805 22:27:16.442"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:27:19.775" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210805 22:27:19.774" endtime="20210805 22:27:19.775"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:27:19.775" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210805 22:27:19.775" endtime="20210805 22:27:19.775"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210805 22:27:19.776" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210805 22:27:19.775" endtime="20210805 22:27:19.776"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210805 22:27:19.776" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210805 22:27:19.776" endtime="20210805 22:27:19.776"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210805 22:27:19.777" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210805 22:27:19.778" level="INFO">${version_file_contents} = #Thu Aug 05 22:25:17 UTC 2021
cTime=1628202301051
clusterID=CID-10c3f608-451e-47e5-a486-8539ab86849d
omUuid=49a519e1-93cf-43bc-bb4c-38432ab1b44b
nodeType=OM
scmUuid=7a770431-dcdd-42f5-bc1c-660239598cb...</msg>
<status status="PASS" starttime="20210805 22:27:19.777" endtime="20210805 22:27:19.778"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210805 22:27:19.778" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210805 22:27:19.778" endtime="20210805 22:27:19.778"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:27:19.778" endtime="20210805 22:27:19.779"/>
</kw>
<status status="PASS" starttime="20210805 22:27:19.777" endtime="20210805 22:27:19.779"/>
</kw>
<status status="PASS" starttime="20210805 22:27:19.777" endtime="20210805 22:27:19.779"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:27:19.773" endtime="20210805 22:27:19.779"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210805 22:27:19.728" endtime="20210805 22:27:19.780"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:27:23.159" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210805 22:27:23.158" endtime="20210805 22:27:23.159"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:27:23.160" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210805 22:27:23.159" endtime="20210805 22:27:23.160"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210805 22:27:23.160" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210805 22:27:23.160" endtime="20210805 22:27:23.160"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210805 22:27:23.161" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210805 22:27:23.160" endtime="20210805 22:27:23.161"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210805 22:27:23.162" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210805 22:27:23.162" level="INFO">${version_file_contents} = #Thu Aug 05 22:25:18 UTC 2021
cTime=1628202302051
clusterID=CID-10c3f608-451e-47e5-a486-8539ab86849d
omUuid=6034ff7c-a316-4b68-8e67-95af4d218cd6
nodeType=OM
scmUuid=7a770431-dcdd-42f5-bc1c-660239598cb...</msg>
<status status="PASS" starttime="20210805 22:27:23.162" endtime="20210805 22:27:23.162"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210805 22:27:23.163" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210805 22:27:23.162" endtime="20210805 22:27:23.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:27:23.163" endtime="20210805 22:27:23.163"/>
</kw>
<status status="PASS" starttime="20210805 22:27:23.161" endtime="20210805 22:27:23.163"/>
</kw>
<status status="PASS" starttime="20210805 22:27:23.161" endtime="20210805 22:27:23.163"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:27:23.158" endtime="20210805 22:27:23.164"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210805 22:27:23.111" endtime="20210805 22:27:23.164"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:27:26.516" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210805 22:27:26.516" endtime="20210805 22:27:26.516"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:27:26.517" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210805 22:27:26.516" endtime="20210805 22:27:26.517"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210805 22:27:26.517" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210805 22:27:26.517" endtime="20210805 22:27:26.517"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210805 22:27:26.518" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210805 22:27:26.517" endtime="20210805 22:27:26.518"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210805 22:27:26.519" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210805 22:27:26.519" level="INFO">${version_file_contents} = #Thu Aug 05 22:25:18 UTC 2021
cTime=1628202302407
clusterID=CID-10c3f608-451e-47e5-a486-8539ab86849d
omUuid=f6e35b2d-8a90-4f78-8388-23184802cff2
nodeType=OM
scmUuid=7a770431-dcdd-42f5-bc1c-660239598cb...</msg>
<status status="PASS" starttime="20210805 22:27:26.519" endtime="20210805 22:27:26.519"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210805 22:27:26.520" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210805 22:27:26.519" endtime="20210805 22:27:26.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:27:26.520" endtime="20210805 22:27:26.520"/>
</kw>
<status status="PASS" starttime="20210805 22:27:26.518" endtime="20210805 22:27:26.520"/>
</kw>
<status status="PASS" starttime="20210805 22:27:26.518" endtime="20210805 22:27:26.520"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:27:26.515" endtime="20210805 22:27:26.521"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210805 22:27:26.469" endtime="20210805 22:27:26.522"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 22:27:29.804" level="INFO">${random} = 34819</msg>
<status status="PASS" starttime="20210805 22:27:29.803" endtime="20210805 22:27:29.804"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:27:29.810" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-34819 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:27:33.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:27:33.645" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:29.805" endtime="20210805 22:27:33.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:27:33.646" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:33.646" endtime="20210805 22:27:33.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:27:33.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:27:33.647" endtime="20210805 22:27:33.647"/>
</kw>
<status status="PASS" starttime="20210805 22:27:29.805" endtime="20210805 22:27:33.647"/>
</kw>
<msg timestamp="20210805 22:27:33.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:27:29.805" endtime="20210805 22:27:33.648"/>
</kw>
<msg timestamp="20210805 22:27:33.648" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:29.804" endtime="20210805 22:27:33.648"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:27:33.648" endtime="20210805 22:27:33.648"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:27:29.802" endtime="20210805 22:27:33.649"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210805 22:27:29.756" endtime="20210805 22:27:33.650"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:27:36.930" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:27:39.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:27:39.062" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:36.927" endtime="20210805 22:27:39.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:27:39.064" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:39.062" endtime="20210805 22:27:39.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:27:39.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:27:39.064" endtime="20210805 22:27:39.064"/>
</kw>
<status status="PASS" starttime="20210805 22:27:36.927" endtime="20210805 22:27:39.065"/>
</kw>
<msg timestamp="20210805 22:27:39.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:27:36.926" endtime="20210805 22:27:39.065"/>
</kw>
<msg timestamp="20210805 22:27:39.065" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:36.926" endtime="20210805 22:27:39.065"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:27:39.065" endtime="20210805 22:27:39.069"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:27:39.082" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:27:41.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:27:41.433" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:39.075" endtime="20210805 22:27:41.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:27:41.434" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:41.434" endtime="20210805 22:27:41.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:27:41.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:27:41.435" endtime="20210805 22:27:41.435"/>
</kw>
<status status="PASS" starttime="20210805 22:27:39.070" endtime="20210805 22:27:41.435"/>
</kw>
<msg timestamp="20210805 22:27:41.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:27:39.070" endtime="20210805 22:27:41.436"/>
</kw>
<msg timestamp="20210805 22:27:41.436" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:39.069" endtime="20210805 22:27:41.436"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:27:41.436" endtime="20210805 22:27:41.436"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:27:41.447" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:27:45.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:27:45.857" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:41.438" endtime="20210805 22:27:45.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:27:45.858" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:45.857" endtime="20210805 22:27:45.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:27:45.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:27:45.858" endtime="20210805 22:27:45.858"/>
</kw>
<status status="PASS" starttime="20210805 22:27:41.437" endtime="20210805 22:27:45.859"/>
</kw>
<msg timestamp="20210805 22:27:45.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:27:41.437" endtime="20210805 22:27:45.859"/>
</kw>
<msg timestamp="20210805 22:27:45.859" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:41.436" endtime="20210805 22:27:45.859"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:27:45.859" endtime="20210805 22:27:45.860"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:27:36.925" endtime="20210805 22:27:45.860"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210805 22:27:36.880" endtime="20210805 22:27:45.861"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210805 22:27:49.277" level="INFO">${random} = 00795</msg>
<status status="PASS" starttime="20210805 22:27:49.276" endtime="20210805 22:27:49.277"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210805 22:27:49.282" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-00795 2&gt;&amp;1'.</msg>
<msg timestamp="20210805 22:27:53.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210805 22:27:53.084" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:49.278" endtime="20210805 22:27:53.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210805 22:27:53.085" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:53.084" endtime="20210805 22:27:53.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210805 22:27:53.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210805 22:27:53.085" endtime="20210805 22:27:53.086"/>
</kw>
<status status="PASS" starttime="20210805 22:27:49.278" endtime="20210805 22:27:53.086"/>
</kw>
<msg timestamp="20210805 22:27:53.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210805 22:27:49.278" endtime="20210805 22:27:53.087"/>
</kw>
<msg timestamp="20210805 22:27:53.087" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210805 22:27:49.277" endtime="20210805 22:27:53.087"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:27:53.087" endtime="20210805 22:27:53.087"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:27:49.276" endtime="20210805 22:27:53.087"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210805 22:27:49.230" endtime="20210805 22:27:53.089"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:27:06.280" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210805 22:27:06.280" endtime="20210805 22:27:06.280"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210805 22:27:06.281" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210805 22:27:06.280" endtime="20210805 22:27:06.281"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210805 22:27:06.281" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210805 22:27:06.281" endtime="20210805 22:27:06.281"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210805 22:27:06.282" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210805 22:27:06.281" endtime="20210805 22:27:06.282"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210805 22:27:06.283" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210805 22:27:06.283" level="INFO">${version_file_contents} = #Thu Aug 05 22:24:55 UTC 2021
cTime=1628202295821
clusterID=CID-10c3f608-451e-47e5-a486-8539ab86849d
nodeType=SCM
scmUuid=7a770431-dcdd-42f5-bc1c-660239598cb5
layoutVersion=0
</msg>
<status status="PASS" starttime="20210805 22:27:06.283" endtime="20210805 22:27:06.283"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210805 22:27:06.284" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210805 22:27:06.283" endtime="20210805 22:27:06.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210805 22:27:06.284" endtime="20210805 22:27:06.284"/>
</kw>
<status status="PASS" starttime="20210805 22:27:06.282" endtime="20210805 22:27:06.284"/>
</kw>
<status status="PASS" starttime="20210805 22:27:06.282" endtime="20210805 22:27:06.285"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210805 22:27:06.279" endtime="20210805 22:27:06.285"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210805 22:27:06.233" endtime="20210805 22:27:06.286"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="137944"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="165482"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
