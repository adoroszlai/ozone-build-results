<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210803 06:49:16.632" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210803 06:41:00.500" level="INFO">${random} = 09250</msg>
<status status="PASS" starttime="20210803 06:41:00.499" endtime="20210803 06:41:00.500"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:41:00.503" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-09250 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:41:04.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:41:04.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:41:00.501" endtime="20210803 06:41:04.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:41:04.283" level="INFO"/>
<status status="PASS" starttime="20210803 06:41:04.283" endtime="20210803 06:41:04.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:41:04.284" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:41:04.284" endtime="20210803 06:41:04.284"/>
</kw>
<status status="PASS" starttime="20210803 06:41:00.501" endtime="20210803 06:41:04.284"/>
</kw>
<msg timestamp="20210803 06:41:04.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:41:00.501" endtime="20210803 06:41:04.285"/>
</kw>
<msg timestamp="20210803 06:41:04.285" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:41:00.500" endtime="20210803 06:41:04.285"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:41:04.285" endtime="20210803 06:41:04.285"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:41:00.498" endtime="20210803 06:41:04.285"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210803 06:41:00.449" endtime="20210803 06:41:04.286"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:40:47.719" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:40:50.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:40:50.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:40:47.717" endtime="20210803 06:40:50.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:40:50.052" level="INFO"/>
<status status="PASS" starttime="20210803 06:40:50.051" endtime="20210803 06:40:50.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:40:50.052" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:40:50.052" endtime="20210803 06:40:50.052"/>
</kw>
<status status="PASS" starttime="20210803 06:40:47.717" endtime="20210803 06:40:50.053"/>
</kw>
<msg timestamp="20210803 06:40:50.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:40:47.717" endtime="20210803 06:40:50.053"/>
</kw>
<msg timestamp="20210803 06:40:50.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:40:47.716" endtime="20210803 06:40:50.053"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:40:50.053" endtime="20210803 06:40:50.055"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:40:50.058" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:40:52.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:40:52.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:40:50.056" endtime="20210803 06:40:52.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:40:52.153" level="INFO"/>
<status status="PASS" starttime="20210803 06:40:52.152" endtime="20210803 06:40:52.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:40:52.154" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:40:52.153" endtime="20210803 06:40:52.154"/>
</kw>
<status status="PASS" starttime="20210803 06:40:50.056" endtime="20210803 06:40:52.154"/>
</kw>
<msg timestamp="20210803 06:40:52.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:40:50.056" endtime="20210803 06:40:52.154"/>
</kw>
<msg timestamp="20210803 06:40:52.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:40:50.055" endtime="20210803 06:40:52.155"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:40:52.155" endtime="20210803 06:40:52.155"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:40:52.159" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:40:57.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:40:57.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:40:52.158" endtime="20210803 06:40:57.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:40:57.104" level="INFO"/>
<status status="PASS" starttime="20210803 06:40:57.103" endtime="20210803 06:40:57.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:40:57.104" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:40:57.104" endtime="20210803 06:40:57.105"/>
</kw>
<status status="PASS" starttime="20210803 06:40:52.156" endtime="20210803 06:40:57.105"/>
</kw>
<msg timestamp="20210803 06:40:57.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:40:52.156" endtime="20210803 06:40:57.105"/>
</kw>
<msg timestamp="20210803 06:40:57.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:40:52.155" endtime="20210803 06:40:57.106"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:40:57.106" endtime="20210803 06:40:57.106"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:40:47.715" endtime="20210803 06:40:57.106"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210803 06:40:47.667" endtime="20210803 06:40:57.108"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:42:15.135" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:42:17.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:42:17.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:42:15.131" endtime="20210803 06:42:17.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:42:17.611" level="INFO"/>
<status status="PASS" starttime="20210803 06:42:17.610" endtime="20210803 06:42:17.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:42:17.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:42:17.612" endtime="20210803 06:42:17.612"/>
</kw>
<status status="PASS" starttime="20210803 06:42:15.131" endtime="20210803 06:42:17.613"/>
</kw>
<msg timestamp="20210803 06:42:17.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:42:15.130" endtime="20210803 06:42:17.613"/>
</kw>
<msg timestamp="20210803 06:42:17.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:42:15.129" endtime="20210803 06:42:17.613"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:42:17.613" endtime="20210803 06:42:17.614"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:42:17.619" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:42:19.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:42:19.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:42:17.616" endtime="20210803 06:42:19.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:42:19.995" level="INFO"/>
<status status="PASS" starttime="20210803 06:42:19.994" endtime="20210803 06:42:19.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:42:19.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:42:19.995" endtime="20210803 06:42:19.996"/>
</kw>
<status status="PASS" starttime="20210803 06:42:17.616" endtime="20210803 06:42:19.996"/>
</kw>
<msg timestamp="20210803 06:42:19.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:42:17.615" endtime="20210803 06:42:19.996"/>
</kw>
<msg timestamp="20210803 06:42:19.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:42:17.614" endtime="20210803 06:42:19.996"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:42:19.997" endtime="20210803 06:42:19.997"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:42:20.002" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:42:24.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:42:24.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:42:19.999" endtime="20210803 06:42:24.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:42:24.830" level="INFO"/>
<status status="PASS" starttime="20210803 06:42:24.829" endtime="20210803 06:42:24.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:42:24.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:42:24.830" endtime="20210803 06:42:24.831"/>
</kw>
<status status="PASS" starttime="20210803 06:42:19.998" endtime="20210803 06:42:24.831"/>
</kw>
<msg timestamp="20210803 06:42:24.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:42:19.998" endtime="20210803 06:42:24.832"/>
</kw>
<msg timestamp="20210803 06:42:24.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:42:19.997" endtime="20210803 06:42:24.832"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:42:24.832" endtime="20210803 06:42:24.833"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:42:15.129" endtime="20210803 06:42:24.833"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210803 06:42:15.064" endtime="20210803 06:42:24.834"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210803 06:42:28.389" level="INFO">${random} = 13002</msg>
<status status="PASS" starttime="20210803 06:42:28.389" endtime="20210803 06:42:28.389"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:42:28.395" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-13002 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:42:32.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:42:32.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:42:28.391" endtime="20210803 06:42:32.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:42:32.655" level="INFO"/>
<status status="PASS" starttime="20210803 06:42:32.654" endtime="20210803 06:42:32.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:42:32.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:42:32.656" endtime="20210803 06:42:32.656"/>
</kw>
<status status="PASS" starttime="20210803 06:42:28.391" endtime="20210803 06:42:32.657"/>
</kw>
<msg timestamp="20210803 06:42:32.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:42:28.390" endtime="20210803 06:42:32.657"/>
</kw>
<msg timestamp="20210803 06:42:32.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:42:28.389" endtime="20210803 06:42:32.657"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:42:32.657" endtime="20210803 06:42:32.658"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:42:28.388" endtime="20210803 06:42:32.658"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210803 06:42:28.322" endtime="20210803 06:42:32.659"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210803 06:42:07.016" level="INFO">${random} = 59140</msg>
<status status="PASS" starttime="20210803 06:42:07.016" endtime="20210803 06:42:07.016"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:42:07.022" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-59140 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:42:11.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:42:11.556" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:42:07.019" endtime="20210803 06:42:11.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:42:11.557" level="INFO"/>
<status status="PASS" starttime="20210803 06:42:11.557" endtime="20210803 06:42:11.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:42:11.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:42:11.558" endtime="20210803 06:42:11.558"/>
</kw>
<status status="PASS" starttime="20210803 06:42:07.018" endtime="20210803 06:42:11.559"/>
</kw>
<msg timestamp="20210803 06:42:11.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:42:07.017" endtime="20210803 06:42:11.559"/>
</kw>
<msg timestamp="20210803 06:42:11.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:42:07.016" endtime="20210803 06:42:11.559"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:42:11.559" endtime="20210803 06:42:11.560"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:42:07.015" endtime="20210803 06:42:11.560"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210803 06:42:06.952" endtime="20210803 06:42:11.562"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="31995"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210803 06:44:08.115" level="INFO">${random} = 13581</msg>
<status status="PASS" starttime="20210803 06:44:08.115" endtime="20210803 06:44:08.115"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:44:08.118" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-13581 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:44:12.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:44:12.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:44:08.117" endtime="20210803 06:44:12.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:44:12.046" level="INFO"/>
<status status="PASS" starttime="20210803 06:44:12.046" endtime="20210803 06:44:12.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:44:12.047" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:44:12.047" endtime="20210803 06:44:12.047"/>
</kw>
<status status="PASS" starttime="20210803 06:44:08.116" endtime="20210803 06:44:12.048"/>
</kw>
<msg timestamp="20210803 06:44:12.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:44:08.116" endtime="20210803 06:44:12.048"/>
</kw>
<msg timestamp="20210803 06:44:12.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:44:08.115" endtime="20210803 06:44:12.048"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:44:12.048" endtime="20210803 06:44:12.049"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:44:08.114" endtime="20210803 06:44:12.049"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210803 06:44:08.068" endtime="20210803 06:44:12.051"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:43:54.693" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:43:57.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:43:57.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:43:54.692" endtime="20210803 06:43:57.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:43:57.034" level="INFO"/>
<status status="PASS" starttime="20210803 06:43:57.034" endtime="20210803 06:43:57.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:43:57.035" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:43:57.035" endtime="20210803 06:43:57.035"/>
</kw>
<status status="PASS" starttime="20210803 06:43:54.692" endtime="20210803 06:43:57.037"/>
</kw>
<msg timestamp="20210803 06:43:57.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:43:54.691" endtime="20210803 06:43:57.037"/>
</kw>
<msg timestamp="20210803 06:43:57.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:43:54.691" endtime="20210803 06:43:57.037"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:43:57.037" endtime="20210803 06:43:57.040"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:43:57.043" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:43:59.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:43:59.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:43:57.042" endtime="20210803 06:43:59.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:43:59.326" level="INFO"/>
<status status="PASS" starttime="20210803 06:43:59.326" endtime="20210803 06:43:59.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:43:59.327" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:43:59.326" endtime="20210803 06:43:59.327"/>
</kw>
<status status="PASS" starttime="20210803 06:43:57.041" endtime="20210803 06:43:59.327"/>
</kw>
<msg timestamp="20210803 06:43:59.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:43:57.041" endtime="20210803 06:43:59.328"/>
</kw>
<msg timestamp="20210803 06:43:59.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:43:57.040" endtime="20210803 06:43:59.328"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:43:59.328" endtime="20210803 06:43:59.328"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:43:59.336" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:44:04.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:44:04.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:43:59.335" endtime="20210803 06:44:04.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:44:04.419" level="INFO"/>
<status status="PASS" starttime="20210803 06:44:04.419" endtime="20210803 06:44:04.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:44:04.420" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:44:04.419" endtime="20210803 06:44:04.420"/>
</kw>
<status status="PASS" starttime="20210803 06:43:59.329" endtime="20210803 06:44:04.420"/>
</kw>
<msg timestamp="20210803 06:44:04.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:43:59.329" endtime="20210803 06:44:04.420"/>
</kw>
<msg timestamp="20210803 06:44:04.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:43:59.329" endtime="20210803 06:44:04.421"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:44:04.421" endtime="20210803 06:44:04.421"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:43:54.690" endtime="20210803 06:44:04.422"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210803 06:43:54.635" endtime="20210803 06:44:04.422"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:45:38.879" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210803 06:45:38.878" endtime="20210803 06:45:38.879"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:45:38.879" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210803 06:45:38.879" endtime="20210803 06:45:38.880"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210803 06:45:38.880" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210803 06:45:38.880" endtime="20210803 06:45:38.880"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210803 06:45:38.881" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210803 06:45:38.880" endtime="20210803 06:45:38.881"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210803 06:45:38.882" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210803 06:45:38.883" level="INFO">${version_file_contents} = #Tue Aug 03 06:45:00 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1627973077916
clusterID=65f5ede7-86a1-42b7-ab91-39d03595086c
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210803 06:45:38.882" endtime="20210803 06:45:38.883"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210803 06:45:38.883" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210803 06:45:38.883" endtime="20210803 06:45:38.883"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:45:38.883" endtime="20210803 06:45:38.884"/>
</kw>
<status status="PASS" starttime="20210803 06:45:38.881" endtime="20210803 06:45:38.884"/>
</kw>
<status status="PASS" starttime="20210803 06:45:38.881" endtime="20210803 06:45:38.884"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:45:38.877" endtime="20210803 06:45:38.884"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210803 06:45:38.812" endtime="20210803 06:45:38.885"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210803 06:46:31.631" endtime="20210803 06:46:31.632"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:46:31.637" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:47:59.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:47:59.671" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210803 06:46:31.633" endtime="20210803 06:47:59.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:47:59.672" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210803 06:47:59.671" endtime="20210803 06:47:59.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:47:59.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:47:59.672" endtime="20210803 06:47:59.673"/>
</kw>
<status status="PASS" starttime="20210803 06:46:31.633" endtime="20210803 06:47:59.673"/>
</kw>
<msg timestamp="20210803 06:47:59.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:46:31.632" endtime="20210803 06:47:59.673"/>
</kw>
<msg timestamp="20210803 06:47:59.674" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210803 06:46:31.632" endtime="20210803 06:47:59.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:47:59.674" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: DATANODE_SCHEMA_V2.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210803 06:47:59.674" endtime="20210803 06:47:59.674"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:46:31.630" endtime="20210803 06:47:59.675"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210803 06:47:59.677" endtime="20210803 06:47:59.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:47:59.681" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:48:02.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:48:02.334" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210803 06:47:59.679" endtime="20210803 06:48:02.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:48:02.335" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:421)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:407)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:240)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210803 06:48:02.334" endtime="20210803 06:48:02.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:48:02.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:48:02.335" endtime="20210803 06:48:02.336"/>
</kw>
<status status="PASS" starttime="20210803 06:47:59.678" endtime="20210803 06:48:02.337"/>
</kw>
<msg timestamp="20210803 06:48:02.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:47:59.678" endtime="20210803 06:48:02.337"/>
</kw>
<msg timestamp="20210803 06:48:02.337" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210803 06:47:59.677" endtime="20210803 06:48:02.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:48:02.338" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:421)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:407)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:240)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210803 06:48:02.338" endtime="20210803 06:48:02.338"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:47:59.676" endtime="20210803 06:48:02.338"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210803 06:46:31.574" endtime="20210803 06:48:02.340"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:48:06.087" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210803 06:48:06.086" endtime="20210803 06:48:06.088"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:48:06.088" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210803 06:48:06.088" endtime="20210803 06:48:06.088"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210803 06:48:06.089" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210803 06:48:06.088" endtime="20210803 06:48:06.089"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210803 06:48:06.089" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210803 06:48:06.089" endtime="20210803 06:48:06.090"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210803 06:48:06.091" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210803 06:48:06.091" level="INFO">${version_file_contents} = #Tue Aug 03 06:46:39 UTC 2021
cTime=1627972985876
clusterID=CID-56db988a-6697-48f7-b789-d16ffb000a81
nodeType=SCM
scmUuid=afe2756d-4fbe-43b6-af9f-6fb0c67cb123
layoutVersion=2
</msg>
<status status="PASS" starttime="20210803 06:48:06.091" endtime="20210803 06:48:06.091"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210803 06:48:06.092" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210803 06:48:06.091" endtime="20210803 06:48:06.092"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:48:06.092" endtime="20210803 06:48:06.093"/>
</kw>
<status status="PASS" starttime="20210803 06:48:06.090" endtime="20210803 06:48:06.093"/>
</kw>
<status status="PASS" starttime="20210803 06:48:06.090" endtime="20210803 06:48:06.093"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:48:06.086" endtime="20210803 06:48:06.093"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210803 06:48:06.021" endtime="20210803 06:48:06.094"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:48:09.791" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210803 06:48:09.790" endtime="20210803 06:48:09.791"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:48:09.791" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210803 06:48:09.791" endtime="20210803 06:48:09.791"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210803 06:48:09.792" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210803 06:48:09.791" endtime="20210803 06:48:09.792"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210803 06:48:09.792" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210803 06:48:09.792" endtime="20210803 06:48:09.793"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210803 06:48:09.794" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210803 06:48:09.794" level="INFO">${version_file_contents} = #Tue Aug 03 06:46:50 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1627973077916
clusterID=65f5ede7-86a1-42b7-ab91-39d03595086c
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210803 06:48:09.793" endtime="20210803 06:48:09.794"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210803 06:48:09.795" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210803 06:48:09.794" endtime="20210803 06:48:09.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:48:09.795" endtime="20210803 06:48:09.795"/>
</kw>
<status status="PASS" starttime="20210803 06:48:09.793" endtime="20210803 06:48:09.796"/>
</kw>
<status status="PASS" starttime="20210803 06:48:09.793" endtime="20210803 06:48:09.796"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:48:09.789" endtime="20210803 06:48:09.796"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210803 06:48:09.729" endtime="20210803 06:48:09.798"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:48:13.489" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210803 06:48:13.489" endtime="20210803 06:48:13.490"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:48:13.490" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210803 06:48:13.490" endtime="20210803 06:48:13.490"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210803 06:48:13.491" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210803 06:48:13.490" endtime="20210803 06:48:13.491"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210803 06:48:13.491" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210803 06:48:13.491" endtime="20210803 06:48:13.491"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210803 06:48:13.493" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210803 06:48:13.493" level="INFO">${version_file_contents} = #Tue Aug 03 06:46:50 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1627973077413
clusterID=3ffc7d45-8981-4afe-b1c2-9d809d17c268
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210803 06:48:13.492" endtime="20210803 06:48:13.493"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210803 06:48:13.493" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210803 06:48:13.493" endtime="20210803 06:48:13.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:48:13.494" endtime="20210803 06:48:13.494"/>
</kw>
<status status="PASS" starttime="20210803 06:48:13.492" endtime="20210803 06:48:13.494"/>
</kw>
<status status="PASS" starttime="20210803 06:48:13.492" endtime="20210803 06:48:13.494"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:48:13.488" endtime="20210803 06:48:13.495"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210803 06:48:13.428" endtime="20210803 06:48:13.495"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:48:17.192" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210803 06:48:17.191" endtime="20210803 06:48:17.192"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:48:17.193" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210803 06:48:17.192" endtime="20210803 06:48:17.193"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210803 06:48:17.193" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210803 06:48:17.193" endtime="20210803 06:48:17.193"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210803 06:48:17.194" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210803 06:48:17.194" endtime="20210803 06:48:17.194"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210803 06:48:17.195" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210803 06:48:17.196" level="INFO">${version_file_contents} = #Tue Aug 03 06:46:50 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1627973077238
clusterID=157be1ef-a28e-4236-b163-4c8191e504cb
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210803 06:48:17.195" endtime="20210803 06:48:17.196"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210803 06:48:17.196" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210803 06:48:17.196" endtime="20210803 06:48:17.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:48:17.197" endtime="20210803 06:48:17.197"/>
</kw>
<status status="PASS" starttime="20210803 06:48:17.195" endtime="20210803 06:48:17.197"/>
</kw>
<status status="PASS" starttime="20210803 06:48:17.194" endtime="20210803 06:48:17.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:48:17.191" endtime="20210803 06:48:17.198"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210803 06:48:17.122" endtime="20210803 06:48:17.198"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:48:20.890" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210803 06:48:20.889" endtime="20210803 06:48:20.890"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:48:20.891" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210803 06:48:20.890" endtime="20210803 06:48:20.891"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210803 06:48:20.891" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210803 06:48:20.891" endtime="20210803 06:48:20.892"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210803 06:48:20.892" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210803 06:48:20.892" endtime="20210803 06:48:20.892"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210803 06:48:20.894" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210803 06:48:20.894" level="INFO">${version_file_contents} = #Tue Aug 03 06:43:26 UTC 2021
cTime=1627972987391
clusterID=CID-56db988a-6697-48f7-b789-d16ffb000a81
omUuid=697e638d-42a7-419a-80ae-2d745700a69b
nodeType=OM
scmUuid=afe2756d-4fbe-43b6-af9f-6fb0c67cb12...</msg>
<status status="PASS" starttime="20210803 06:48:20.893" endtime="20210803 06:48:20.894"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210803 06:48:20.895" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210803 06:48:20.894" endtime="20210803 06:48:20.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:48:20.895" endtime="20210803 06:48:20.895"/>
</kw>
<status status="PASS" starttime="20210803 06:48:20.893" endtime="20210803 06:48:20.896"/>
</kw>
<status status="PASS" starttime="20210803 06:48:20.893" endtime="20210803 06:48:20.896"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:48:20.889" endtime="20210803 06:48:20.896"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210803 06:48:20.831" endtime="20210803 06:48:20.897"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:48:24.565" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210803 06:48:24.564" endtime="20210803 06:48:24.565"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:48:24.566" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210803 06:48:24.565" endtime="20210803 06:48:24.566"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210803 06:48:24.567" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210803 06:48:24.566" endtime="20210803 06:48:24.567"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210803 06:48:24.568" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210803 06:48:24.567" endtime="20210803 06:48:24.568"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210803 06:48:24.569" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210803 06:48:24.569" level="INFO">${version_file_contents} = #Tue Aug 03 06:43:26 UTC 2021
cTime=1627972990003
clusterID=CID-56db988a-6697-48f7-b789-d16ffb000a81
omUuid=e13a5c3a-33ab-42a4-82e1-9fdca591e4ca
nodeType=OM
scmUuid=afe2756d-4fbe-43b6-af9f-6fb0c67cb12...</msg>
<status status="PASS" starttime="20210803 06:48:24.569" endtime="20210803 06:48:24.569"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210803 06:48:24.570" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210803 06:48:24.569" endtime="20210803 06:48:24.570"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:48:24.570" endtime="20210803 06:48:24.571"/>
</kw>
<status status="PASS" starttime="20210803 06:48:24.568" endtime="20210803 06:48:24.571"/>
</kw>
<status status="PASS" starttime="20210803 06:48:24.568" endtime="20210803 06:48:24.571"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:48:24.564" endtime="20210803 06:48:24.571"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210803 06:48:24.502" endtime="20210803 06:48:24.572"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:48:28.347" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210803 06:48:28.346" endtime="20210803 06:48:28.347"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:48:28.349" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210803 06:48:28.347" endtime="20210803 06:48:28.349"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210803 06:48:28.350" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210803 06:48:28.349" endtime="20210803 06:48:28.350"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210803 06:48:28.350" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210803 06:48:28.350" endtime="20210803 06:48:28.350"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210803 06:48:28.352" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210803 06:48:28.352" level="INFO">${version_file_contents} = #Tue Aug 03 06:43:28 UTC 2021
cTime=1627972992235
clusterID=CID-56db988a-6697-48f7-b789-d16ffb000a81
omUuid=4b3ac07e-c32c-4497-afcd-6091ba90ba23
nodeType=OM
scmUuid=afe2756d-4fbe-43b6-af9f-6fb0c67cb12...</msg>
<status status="PASS" starttime="20210803 06:48:28.351" endtime="20210803 06:48:28.352"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210803 06:48:28.353" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210803 06:48:28.352" endtime="20210803 06:48:28.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:48:28.353" endtime="20210803 06:48:28.354"/>
</kw>
<status status="PASS" starttime="20210803 06:48:28.351" endtime="20210803 06:48:28.354"/>
</kw>
<status status="PASS" starttime="20210803 06:48:28.351" endtime="20210803 06:48:28.354"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:48:28.345" endtime="20210803 06:48:28.354"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210803 06:48:28.284" endtime="20210803 06:48:28.355"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210803 06:48:31.941" level="INFO">${random} = 13842</msg>
<status status="PASS" starttime="20210803 06:48:31.940" endtime="20210803 06:48:31.941"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:48:31.946" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-13842 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:48:36.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:48:36.142" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:31.943" endtime="20210803 06:48:36.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:48:36.144" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:36.143" endtime="20210803 06:48:36.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:48:36.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:48:36.144" endtime="20210803 06:48:36.145"/>
</kw>
<status status="PASS" starttime="20210803 06:48:31.942" endtime="20210803 06:48:36.145"/>
</kw>
<msg timestamp="20210803 06:48:36.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:48:31.942" endtime="20210803 06:48:36.145"/>
</kw>
<msg timestamp="20210803 06:48:36.145" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:31.941" endtime="20210803 06:48:36.145"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:48:36.146" endtime="20210803 06:48:36.146"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:48:31.939" endtime="20210803 06:48:36.147"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210803 06:48:31.872" endtime="20210803 06:48:36.148"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210803 06:48:39.754" level="INFO">${random} = 16614</msg>
<status status="PASS" starttime="20210803 06:48:39.754" endtime="20210803 06:48:39.754"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:48:39.759" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-16614 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:48:44.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:48:44.067" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:39.756" endtime="20210803 06:48:44.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:48:44.069" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:44.068" endtime="20210803 06:48:44.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:48:44.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:48:44.069" endtime="20210803 06:48:44.070"/>
</kw>
<status status="PASS" starttime="20210803 06:48:39.756" endtime="20210803 06:48:44.070"/>
</kw>
<msg timestamp="20210803 06:48:44.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:48:39.755" endtime="20210803 06:48:44.070"/>
</kw>
<msg timestamp="20210803 06:48:44.071" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:39.754" endtime="20210803 06:48:44.071"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:48:44.071" endtime="20210803 06:48:44.071"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:48:39.753" endtime="20210803 06:48:44.072"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210803 06:48:39.691" endtime="20210803 06:48:44.073"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:45:42.562" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210803 06:45:42.561" endtime="20210803 06:45:42.562"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:45:42.563" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210803 06:45:42.562" endtime="20210803 06:45:42.563"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210803 06:45:42.563" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210803 06:45:42.563" endtime="20210803 06:45:42.564"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210803 06:45:42.564" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210803 06:45:42.564" endtime="20210803 06:45:42.564"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210803 06:45:42.566" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210803 06:45:42.566" level="INFO">${version_file_contents} = #Tue Aug 03 06:44:58 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1627973077413
clusterID=3ffc7d45-8981-4afe-b1c2-9d809d17c268
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210803 06:45:42.565" endtime="20210803 06:45:42.566"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210803 06:45:42.568" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210803 06:45:42.567" endtime="20210803 06:45:42.568"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:45:42.568" endtime="20210803 06:45:42.568"/>
</kw>
<status status="PASS" starttime="20210803 06:45:42.565" endtime="20210803 06:45:42.568"/>
</kw>
<status status="PASS" starttime="20210803 06:45:42.564" endtime="20210803 06:45:42.568"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:45:42.560" endtime="20210803 06:45:42.569"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210803 06:45:42.498" endtime="20210803 06:45:42.569"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:48:47.763" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:48:50.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:48:50.205" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:47.760" endtime="20210803 06:48:50.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:48:50.206" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:50.205" endtime="20210803 06:48:50.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:48:50.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:48:50.206" endtime="20210803 06:48:50.207"/>
</kw>
<status status="PASS" starttime="20210803 06:48:47.759" endtime="20210803 06:48:50.208"/>
</kw>
<msg timestamp="20210803 06:48:50.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:48:47.759" endtime="20210803 06:48:50.208"/>
</kw>
<msg timestamp="20210803 06:48:50.208" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:47.758" endtime="20210803 06:48:50.208"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:48:50.208" endtime="20210803 06:48:50.209"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:48:50.214" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:48:52.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:48:52.666" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:50.212" endtime="20210803 06:48:52.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:48:52.668" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:52.667" endtime="20210803 06:48:52.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:48:52.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:48:52.668" endtime="20210803 06:48:52.668"/>
</kw>
<status status="PASS" starttime="20210803 06:48:50.210" endtime="20210803 06:48:52.669"/>
</kw>
<msg timestamp="20210803 06:48:52.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:48:50.210" endtime="20210803 06:48:52.669"/>
</kw>
<msg timestamp="20210803 06:48:52.669" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:50.209" endtime="20210803 06:48:52.669"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:48:52.670" endtime="20210803 06:48:52.670"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:48:52.674" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:48:57.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:48:57.344" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:52.672" endtime="20210803 06:48:57.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:48:57.345" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:57.344" endtime="20210803 06:48:57.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:48:57.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:48:57.345" endtime="20210803 06:48:57.346"/>
</kw>
<status status="PASS" starttime="20210803 06:48:52.671" endtime="20210803 06:48:57.346"/>
</kw>
<msg timestamp="20210803 06:48:57.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:48:52.671" endtime="20210803 06:48:57.347"/>
</kw>
<msg timestamp="20210803 06:48:57.347" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:48:52.670" endtime="20210803 06:48:57.347"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:48:57.348" endtime="20210803 06:48:57.348"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:48:47.757" endtime="20210803 06:48:57.348"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210803 06:48:47.695" endtime="20210803 06:48:57.350"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210803 06:49:01.044" level="INFO">${random} = 77427</msg>
<status status="PASS" starttime="20210803 06:49:01.043" endtime="20210803 06:49:01.044"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:49:01.050" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-77427 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:49:05.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:49:05.341" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:49:01.046" endtime="20210803 06:49:05.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:49:05.343" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:49:05.342" endtime="20210803 06:49:05.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:49:05.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:49:05.343" endtime="20210803 06:49:05.343"/>
</kw>
<status status="PASS" starttime="20210803 06:49:01.046" endtime="20210803 06:49:05.344"/>
</kw>
<msg timestamp="20210803 06:49:05.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:49:01.045" endtime="20210803 06:49:05.344"/>
</kw>
<msg timestamp="20210803 06:49:05.344" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:49:01.044" endtime="20210803 06:49:05.344"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:49:05.344" endtime="20210803 06:49:05.345"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:49:01.043" endtime="20210803 06:49:05.345"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210803 06:49:00.984" endtime="20210803 06:49:05.346"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:45:46.329" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210803 06:45:46.329" endtime="20210803 06:45:46.329"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:45:46.330" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210803 06:45:46.330" endtime="20210803 06:45:46.330"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210803 06:45:46.331" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210803 06:45:46.330" endtime="20210803 06:45:46.331"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210803 06:45:46.332" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210803 06:45:46.331" endtime="20210803 06:45:46.332"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210803 06:45:46.333" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210803 06:45:46.333" level="INFO">${version_file_contents} = #Tue Aug 03 06:44:59 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1627973077238
clusterID=157be1ef-a28e-4236-b163-4c8191e504cb
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210803 06:45:46.333" endtime="20210803 06:45:46.333"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210803 06:45:46.334" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210803 06:45:46.334" endtime="20210803 06:45:46.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:45:46.334" endtime="20210803 06:45:46.335"/>
</kw>
<status status="PASS" starttime="20210803 06:45:46.332" endtime="20210803 06:45:46.335"/>
</kw>
<status status="PASS" starttime="20210803 06:45:46.332" endtime="20210803 06:45:46.335"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:45:46.327" endtime="20210803 06:45:46.335"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210803 06:45:46.262" endtime="20210803 06:45:46.336"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:45:50.070" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210803 06:45:50.069" endtime="20210803 06:45:50.071"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:45:50.071" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210803 06:45:50.071" endtime="20210803 06:45:50.072"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210803 06:45:50.072" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210803 06:45:50.072" endtime="20210803 06:45:50.072"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210803 06:45:50.073" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210803 06:45:50.072" endtime="20210803 06:45:50.073"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210803 06:45:50.074" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210803 06:45:50.075" level="INFO">${version_file_contents} = #Tue Aug 03 06:43:26 UTC 2021
cTime=1627972987391
clusterID=CID-56db988a-6697-48f7-b789-d16ffb000a81
omUuid=697e638d-42a7-419a-80ae-2d745700a69b
nodeType=OM
scmUuid=afe2756d-4fbe-43b6-af9f-6fb0c67cb12...</msg>
<status status="PASS" starttime="20210803 06:45:50.074" endtime="20210803 06:45:50.075"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210803 06:45:50.076" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210803 06:45:50.075" endtime="20210803 06:45:50.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:45:50.076" endtime="20210803 06:45:50.077"/>
</kw>
<status status="PASS" starttime="20210803 06:45:50.074" endtime="20210803 06:45:50.077"/>
</kw>
<status status="PASS" starttime="20210803 06:45:50.073" endtime="20210803 06:45:50.077"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:45:50.069" endtime="20210803 06:45:50.077"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210803 06:45:50.007" endtime="20210803 06:45:50.078"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:45:53.841" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210803 06:45:53.841" endtime="20210803 06:45:53.842"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:45:53.842" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210803 06:45:53.842" endtime="20210803 06:45:53.842"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210803 06:45:53.843" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210803 06:45:53.842" endtime="20210803 06:45:53.843"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210803 06:45:53.844" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210803 06:45:53.843" endtime="20210803 06:45:53.844"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210803 06:45:53.845" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210803 06:45:53.845" level="INFO">${version_file_contents} = #Tue Aug 03 06:43:26 UTC 2021
cTime=1627972990003
clusterID=CID-56db988a-6697-48f7-b789-d16ffb000a81
omUuid=e13a5c3a-33ab-42a4-82e1-9fdca591e4ca
nodeType=OM
scmUuid=afe2756d-4fbe-43b6-af9f-6fb0c67cb12...</msg>
<status status="PASS" starttime="20210803 06:45:53.845" endtime="20210803 06:45:53.845"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210803 06:45:53.846" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210803 06:45:53.846" endtime="20210803 06:45:53.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:45:53.846" endtime="20210803 06:45:53.847"/>
</kw>
<status status="PASS" starttime="20210803 06:45:53.844" endtime="20210803 06:45:53.847"/>
</kw>
<status status="PASS" starttime="20210803 06:45:53.844" endtime="20210803 06:45:53.847"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:45:53.840" endtime="20210803 06:45:53.848"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210803 06:45:53.771" endtime="20210803 06:45:53.849"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:45:57.589" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210803 06:45:57.588" endtime="20210803 06:45:57.589"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:45:57.590" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210803 06:45:57.590" endtime="20210803 06:45:57.590"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210803 06:45:57.591" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210803 06:45:57.590" endtime="20210803 06:45:57.591"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210803 06:45:57.592" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210803 06:45:57.591" endtime="20210803 06:45:57.592"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210803 06:45:57.593" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210803 06:45:57.593" level="INFO">${version_file_contents} = #Tue Aug 03 06:43:28 UTC 2021
cTime=1627972992235
clusterID=CID-56db988a-6697-48f7-b789-d16ffb000a81
omUuid=4b3ac07e-c32c-4497-afcd-6091ba90ba23
nodeType=OM
scmUuid=afe2756d-4fbe-43b6-af9f-6fb0c67cb12...</msg>
<status status="PASS" starttime="20210803 06:45:57.593" endtime="20210803 06:45:57.593"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210803 06:45:57.594" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210803 06:45:57.593" endtime="20210803 06:45:57.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:45:57.594" endtime="20210803 06:45:57.594"/>
</kw>
<status status="PASS" starttime="20210803 06:45:57.592" endtime="20210803 06:45:57.595"/>
</kw>
<status status="PASS" starttime="20210803 06:45:57.592" endtime="20210803 06:45:57.595"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:45:57.587" endtime="20210803 06:45:57.595"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210803 06:45:57.526" endtime="20210803 06:45:57.596"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210803 06:46:01.164" level="INFO">${random} = 49703</msg>
<status status="PASS" starttime="20210803 06:46:01.164" endtime="20210803 06:46:01.164"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:46:01.170" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-49703 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:46:06.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:46:06.152" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:01.166" endtime="20210803 06:46:06.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:46:06.153" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:06.152" endtime="20210803 06:46:06.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:46:06.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:46:06.153" endtime="20210803 06:46:06.154"/>
</kw>
<status status="PASS" starttime="20210803 06:46:01.165" endtime="20210803 06:46:06.154"/>
</kw>
<msg timestamp="20210803 06:46:06.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:46:01.165" endtime="20210803 06:46:06.154"/>
</kw>
<msg timestamp="20210803 06:46:06.155" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:01.164" endtime="20210803 06:46:06.155"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:46:06.155" endtime="20210803 06:46:06.155"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:46:01.163" endtime="20210803 06:46:06.155"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210803 06:46:01.101" endtime="20210803 06:46:06.157"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:46:09.733" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:46:12.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:46:12.447" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:09.729" endtime="20210803 06:46:12.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:46:12.452" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:12.448" endtime="20210803 06:46:12.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:46:12.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:46:12.453" endtime="20210803 06:46:12.453"/>
</kw>
<status status="PASS" starttime="20210803 06:46:09.729" endtime="20210803 06:46:12.453"/>
</kw>
<msg timestamp="20210803 06:46:12.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:46:09.729" endtime="20210803 06:46:12.454"/>
</kw>
<msg timestamp="20210803 06:46:12.454" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:09.728" endtime="20210803 06:46:12.454"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:46:12.454" endtime="20210803 06:46:12.458"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:46:12.472" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:46:15.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:46:15.116" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:12.462" endtime="20210803 06:46:15.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:46:15.117" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:15.116" endtime="20210803 06:46:15.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:46:15.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:46:15.118" endtime="20210803 06:46:15.118"/>
</kw>
<status status="PASS" starttime="20210803 06:46:12.459" endtime="20210803 06:46:15.118"/>
</kw>
<msg timestamp="20210803 06:46:15.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:46:12.459" endtime="20210803 06:46:15.119"/>
</kw>
<msg timestamp="20210803 06:46:15.119" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:12.458" endtime="20210803 06:46:15.119"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:46:15.119" endtime="20210803 06:46:15.120"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:46:15.123" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:46:20.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:46:20.213" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:15.122" endtime="20210803 06:46:20.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:46:20.214" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:20.213" endtime="20210803 06:46:20.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:46:20.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:46:20.215" endtime="20210803 06:46:20.215"/>
</kw>
<status status="PASS" starttime="20210803 06:46:15.121" endtime="20210803 06:46:20.216"/>
</kw>
<msg timestamp="20210803 06:46:20.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:46:15.121" endtime="20210803 06:46:20.216"/>
</kw>
<msg timestamp="20210803 06:46:20.216" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:15.120" endtime="20210803 06:46:20.216"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:46:20.217" endtime="20210803 06:46:20.217"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:46:09.727" endtime="20210803 06:46:20.217"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210803 06:46:09.662" endtime="20210803 06:46:20.219"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210803 06:46:23.880" level="INFO">${random} = 44010</msg>
<status status="PASS" starttime="20210803 06:46:23.879" endtime="20210803 06:46:23.880"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:46:23.885" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-44010 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:46:28.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:46:28.153" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:23.882" endtime="20210803 06:46:28.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:46:28.154" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:28.154" endtime="20210803 06:46:28.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:46:28.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:46:28.155" endtime="20210803 06:46:28.156"/>
</kw>
<status status="PASS" starttime="20210803 06:46:23.881" endtime="20210803 06:46:28.156"/>
</kw>
<msg timestamp="20210803 06:46:28.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:46:23.881" endtime="20210803 06:46:28.157"/>
</kw>
<msg timestamp="20210803 06:46:28.157" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210803 06:46:23.880" endtime="20210803 06:46:28.157"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:46:28.157" endtime="20210803 06:46:28.158"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:46:23.878" endtime="20210803 06:46:28.158"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210803 06:46:23.814" endtime="20210803 06:46:28.159"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:45:35.261" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210803 06:45:35.261" endtime="20210803 06:45:35.262"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210803 06:45:35.262" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210803 06:45:35.262" endtime="20210803 06:45:35.262"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210803 06:45:35.263" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210803 06:45:35.262" endtime="20210803 06:45:35.263"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210803 06:45:35.263" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210803 06:45:35.263" endtime="20210803 06:45:35.263"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210803 06:45:35.265" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210803 06:45:35.265" level="INFO">${version_file_contents} = #Tue Aug 03 06:43:05 UTC 2021
cTime=1627972985876
clusterID=CID-56db988a-6697-48f7-b789-d16ffb000a81
nodeType=SCM
scmUuid=afe2756d-4fbe-43b6-af9f-6fb0c67cb123
layoutVersion=0
</msg>
<status status="PASS" starttime="20210803 06:45:35.265" endtime="20210803 06:45:35.265"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210803 06:45:35.266" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210803 06:45:35.265" endtime="20210803 06:45:35.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:45:35.266" endtime="20210803 06:45:35.267"/>
</kw>
<status status="PASS" starttime="20210803 06:45:35.264" endtime="20210803 06:45:35.267"/>
</kw>
<status status="PASS" starttime="20210803 06:45:35.264" endtime="20210803 06:45:35.267"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:45:35.260" endtime="20210803 06:45:35.267"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210803 06:45:35.195" endtime="20210803 06:45:35.268"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="148171"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="180166"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
