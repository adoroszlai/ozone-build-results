<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210803 06:36:41.626" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:25:11.898" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:25:22.844" level="INFO">${rc} = 255</msg>
<msg timestamp="20210803 06:25:22.844" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210803 06:25:11.892" endtime="20210803 06:25:22.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:25:22.846" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210803 06:25:22.845" endtime="20210803 06:25:22.846"/>
</kw>
<msg timestamp="20210803 06:25:22.846" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210803 06:25:11.891" endtime="20210803 06:25:22.846"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:25:22.861" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:25:31.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:25:31.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:25:22.858" endtime="20210803 06:25:31.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:25:31.412" level="INFO"/>
<status status="PASS" starttime="20210803 06:25:31.412" endtime="20210803 06:25:31.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:25:31.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:25:31.413" endtime="20210803 06:25:31.413"/>
</kw>
<status status="PASS" starttime="20210803 06:25:22.852" endtime="20210803 06:25:31.414"/>
</kw>
<msg timestamp="20210803 06:25:31.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:25:22.852" endtime="20210803 06:25:31.414"/>
</kw>
<msg timestamp="20210803 06:25:31.414" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210803 06:25:22.851" endtime="20210803 06:25:31.414"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:25:31.414" endtime="20210803 06:25:31.415"/>
</kw>
<status status="PASS" starttime="20210803 06:25:22.851" endtime="20210803 06:25:31.415"/>
</kw>
<status status="PASS" starttime="20210803 06:25:22.846" endtime="20210803 06:25:31.415"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:25:31.421" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:25:39.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:25:39.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:25:31.418" endtime="20210803 06:25:39.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:25:39.355" level="INFO"/>
<status status="PASS" starttime="20210803 06:25:39.355" endtime="20210803 06:25:39.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:25:39.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:25:39.356" endtime="20210803 06:25:39.356"/>
</kw>
<status status="PASS" starttime="20210803 06:25:31.418" endtime="20210803 06:25:39.357"/>
</kw>
<msg timestamp="20210803 06:25:39.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:25:31.417" endtime="20210803 06:25:39.357"/>
</kw>
<status status="PASS" starttime="20210803 06:25:31.417" endtime="20210803 06:25:39.357"/>
</kw>
<status status="PASS" starttime="20210803 06:25:31.416" endtime="20210803 06:25:39.357"/>
</kw>
<status status="PASS" starttime="20210803 06:25:31.416" endtime="20210803 06:25:39.357"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210803 06:25:39.358" endtime="20210803 06:25:39.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:25:39.363" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:25:47.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:25:47.555" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-03T06:25...</msg>
<status status="PASS" starttime="20210803 06:25:39.360" endtime="20210803 06:25:47.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:25:47.557" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-03T06:25:39.001Z",
  "modificationTime" : "2021-08-03T06:25:39.001Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210803 06:25:47.556" endtime="20210803 06:25:47.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:25:47.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:25:47.557" endtime="20210803 06:25:47.558"/>
</kw>
<status status="PASS" starttime="20210803 06:25:39.360" endtime="20210803 06:25:47.559"/>
</kw>
<msg timestamp="20210803 06:25:47.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:25:39.359" endtime="20210803 06:25:47.559"/>
</kw>
<msg timestamp="20210803 06:25:47.559" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-08-03T06:25...</msg>
<status status="PASS" starttime="20210803 06:25:39.358" endtime="20210803 06:25:47.559"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:25:47.559" endtime="20210803 06:25:47.560"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210803 06:25:47.565" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210803 06:25:47.564" endtime="20210803 06:25:47.565"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210803 06:25:47.565" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210803 06:25:47.565" endtime="20210803 06:25:47.565"/>
</kw>
<status status="PASS" starttime="20210803 06:25:47.563" endtime="20210803 06:25:47.566"/>
</kw>
<msg timestamp="20210803 06:25:47.566" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210803 06:25:47.562" endtime="20210803 06:25:47.566"/>
</kw>
<status status="PASS" starttime="20210803 06:25:47.562" endtime="20210803 06:25:47.567"/>
</kw>
<msg timestamp="20210803 06:25:47.567" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210803 06:25:47.561" endtime="20210803 06:25:47.567"/>
</kw>
<msg timestamp="20210803 06:25:47.568" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210803 06:25:47.560" endtime="20210803 06:25:47.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:25:47.572" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:25:55.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:25:55.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:25:47.569" endtime="20210803 06:25:55.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:25:55.324" level="INFO"/>
<status status="PASS" starttime="20210803 06:25:55.323" endtime="20210803 06:25:55.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:25:55.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:25:55.325" endtime="20210803 06:25:55.325"/>
</kw>
<status status="PASS" starttime="20210803 06:25:47.569" endtime="20210803 06:25:55.325"/>
</kw>
<msg timestamp="20210803 06:25:55.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:25:47.569" endtime="20210803 06:25:55.326"/>
</kw>
<status status="PASS" starttime="20210803 06:25:47.568" endtime="20210803 06:25:55.326"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:25:55.330" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:26:10.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:26:10.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:25:55.328" endtime="20210803 06:26:10.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:26:10.793" level="INFO"/>
<status status="PASS" starttime="20210803 06:26:10.792" endtime="20210803 06:26:10.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:26:10.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:26:10.793" endtime="20210803 06:26:10.794"/>
</kw>
<status status="PASS" starttime="20210803 06:25:55.327" endtime="20210803 06:26:10.794"/>
</kw>
<msg timestamp="20210803 06:26:10.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:25:55.327" endtime="20210803 06:26:10.794"/>
</kw>
<status status="PASS" starttime="20210803 06:25:55.326" endtime="20210803 06:26:10.795"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:26:10.799" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:26:23.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:26:23.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:26:10.796" endtime="20210803 06:26:23.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:26:23.188" level="INFO"/>
<status status="PASS" starttime="20210803 06:26:23.187" endtime="20210803 06:26:23.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:26:23.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:26:23.188" endtime="20210803 06:26:23.189"/>
</kw>
<status status="PASS" starttime="20210803 06:26:10.796" endtime="20210803 06:26:23.190"/>
</kw>
<msg timestamp="20210803 06:26:23.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:26:10.796" endtime="20210803 06:26:23.190"/>
</kw>
<status status="PASS" starttime="20210803 06:26:10.795" endtime="20210803 06:26:23.190"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:26:23.195" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:26:38.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:26:38.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:26:23.192" endtime="20210803 06:26:38.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:26:38.186" level="INFO"/>
<status status="PASS" starttime="20210803 06:26:38.185" endtime="20210803 06:26:38.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:26:38.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:26:38.186" endtime="20210803 06:26:38.187"/>
</kw>
<status status="PASS" starttime="20210803 06:26:23.192" endtime="20210803 06:26:38.187"/>
</kw>
<msg timestamp="20210803 06:26:38.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:26:23.192" endtime="20210803 06:26:38.187"/>
</kw>
<status status="PASS" starttime="20210803 06:26:23.191" endtime="20210803 06:26:38.187"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210803 06:25:11.889" endtime="20210803 06:26:38.188"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210803 06:26:38.196" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210803 06:26:38.195" endtime="20210803 06:26:38.196"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210803 06:26:38.197" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210803 06:26:38.196" endtime="20210803 06:26:38.197"/>
</kw>
<status status="PASS" starttime="20210803 06:26:38.194" endtime="20210803 06:26:38.197"/>
</kw>
<msg timestamp="20210803 06:26:38.197" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210803 06:26:38.193" endtime="20210803 06:26:38.197"/>
</kw>
<status status="PASS" starttime="20210803 06:26:38.192" endtime="20210803 06:26:38.198"/>
</kw>
<msg timestamp="20210803 06:26:38.198" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210803 06:26:38.191" endtime="20210803 06:26:38.198"/>
</kw>
<msg timestamp="20210803 06:26:38.198" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210803 06:26:38.190" endtime="20210803 06:26:38.198"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:26:38.203" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:26:45.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:26:45.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:26:38.201" endtime="20210803 06:26:45.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:26:45.392" level="INFO"/>
<status status="PASS" starttime="20210803 06:26:45.391" endtime="20210803 06:26:45.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:26:45.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:26:45.392" endtime="20210803 06:26:45.393"/>
</kw>
<status status="PASS" starttime="20210803 06:26:38.200" endtime="20210803 06:26:45.393"/>
</kw>
<msg timestamp="20210803 06:26:45.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:26:38.199" endtime="20210803 06:26:45.393"/>
</kw>
<status status="PASS" starttime="20210803 06:26:38.198" endtime="20210803 06:26:45.394"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:26:45.398" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:26:52.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:26:52.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:26:45.396" endtime="20210803 06:26:52.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:26:52.885" level="INFO"/>
<status status="PASS" starttime="20210803 06:26:52.885" endtime="20210803 06:26:52.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:26:52.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:26:52.886" endtime="20210803 06:26:52.886"/>
</kw>
<status status="PASS" starttime="20210803 06:26:45.395" endtime="20210803 06:26:52.887"/>
</kw>
<msg timestamp="20210803 06:26:52.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:26:45.395" endtime="20210803 06:26:52.887"/>
</kw>
<status status="PASS" starttime="20210803 06:26:45.394" endtime="20210803 06:26:52.887"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210803 06:26:38.189" endtime="20210803 06:26:52.887"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210803 06:25:11.747" endtime="20210803 06:26:52.893"/>
</suite>
<suite id="s1-s2" name="Kinit-Hadoop" source="/opt/ozone/smoketest/kinit-hadoop.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:27:22.639" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:27:22.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:27:22.646" level="INFO">${output} = rm</msg>
<status status="PASS" starttime="20210803 06:27:22.630" endtime="20210803 06:27:22.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:27:22.647" level="INFO">rm</msg>
<status status="PASS" starttime="20210803 06:27:22.646" endtime="20210803 06:27:22.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:27:22.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:27:22.647" endtime="20210803 06:27:22.647"/>
</kw>
<status status="PASS" starttime="20210803 06:27:22.630" endtime="20210803 06:27:22.648"/>
</kw>
<msg timestamp="20210803 06:27:22.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:27:22.629" endtime="20210803 06:27:22.648"/>
</kw>
<msg timestamp="20210803 06:27:22.648" level="INFO">${instance} = rm</msg>
<status status="PASS" starttime="20210803 06:27:22.628" endtime="20210803 06:27:22.648"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210803 06:27:22.650" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210803 06:27:22.649" endtime="20210803 06:27:22.650"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:27:22.657" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:27:22.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:27:22.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:27:22.653" endtime="20210803 06:27:22.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:27:22.809" level="INFO"/>
<status status="PASS" starttime="20210803 06:27:22.809" endtime="20210803 06:27:22.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:27:22.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:27:22.810" endtime="20210803 06:27:22.810"/>
</kw>
<status status="PASS" starttime="20210803 06:27:22.652" endtime="20210803 06:27:22.811"/>
</kw>
<msg timestamp="20210803 06:27:22.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:27:22.651" endtime="20210803 06:27:22.811"/>
</kw>
<status status="PASS" starttime="20210803 06:27:22.651" endtime="20210803 06:27:22.811"/>
</kw>
<status status="PASS" starttime="20210803 06:27:22.650" endtime="20210803 06:27:22.811"/>
</kw>
<status status="PASS" starttime="20210803 06:27:22.628" endtime="20210803 06:27:22.812"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210803 06:27:22.627" endtime="20210803 06:27:22.812"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210803 06:27:22.556" endtime="20210803 06:27:22.814"/>
</suite>
<suite id="s1-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210803 06:27:29.106" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210803 06:27:29.106" endtime="20210803 06:27:29.106"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210803 06:27:29.107" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210803 06:27:29.107" endtime="20210803 06:27:29.107"/>
</kw>
<status status="PASS" starttime="20210803 06:27:29.105" endtime="20210803 06:27:29.108"/>
</kw>
<msg timestamp="20210803 06:27:29.108" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210803 06:27:29.104" endtime="20210803 06:27:29.108"/>
</kw>
<status status="PASS" starttime="20210803 06:27:29.103" endtime="20210803 06:27:29.108"/>
</kw>
<msg timestamp="20210803 06:27:29.108" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210803 06:27:29.103" endtime="20210803 06:27:29.108"/>
</kw>
<msg timestamp="20210803 06:27:29.109" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210803 06:27:29.102" endtime="20210803 06:27:29.109"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210803 06:27:29.109" level="INFO">${random} = 33088</msg>
<status status="PASS" starttime="20210803 06:27:29.109" endtime="20210803 06:27:29.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:27:29.119" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-33088 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:27:39.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:27:39.173" level="INFO">${output} = 2021-08-03 06:27:33 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:27:33 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210803 06:27:29.111" endtime="20210803 06:27:39.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:27:39.176" level="INFO">2021-08-03 06:27:33 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:27:33 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-03 06:27:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-03 06:27:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210803 06:27:39.174" endtime="20210803 06:27:39.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:27:39.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:27:39.176" endtime="20210803 06:27:39.177"/>
</kw>
<status status="PASS" starttime="20210803 06:27:29.110" endtime="20210803 06:27:39.177"/>
</kw>
<msg timestamp="20210803 06:27:39.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:27:29.110" endtime="20210803 06:27:39.178"/>
</kw>
<msg timestamp="20210803 06:27:39.178" level="INFO">${result} = 2021-08-03 06:27:33 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:27:33 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210803 06:27:29.109" endtime="20210803 06:27:39.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:27:39.182" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:27:42.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:27:42.412" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-03 06:25 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-03 06:27 o3fs://bucket1.volume1.om/ozone-33088
dr...</msg>
<status status="PASS" starttime="20210803 06:27:39.180" endtime="20210803 06:27:42.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:27:42.414" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-03 06:25 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-03 06:27 o3fs://bucket1.volume1.om/ozone-33088
drwxrwxrwx   - hadoop hadoop          0 2021-08-03 06:26 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210803 06:27:42.412" endtime="20210803 06:27:42.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:27:42.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:27:42.414" endtime="20210803 06:27:42.415"/>
</kw>
<status status="PASS" starttime="20210803 06:27:39.179" endtime="20210803 06:27:42.415"/>
</kw>
<msg timestamp="20210803 06:27:42.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:27:39.179" endtime="20210803 06:27:42.415"/>
</kw>
<msg timestamp="20210803 06:27:42.416" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-03 06:25 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-03 06:27 o3fs://bucket1.volume1.om/ozone-33088
dr...</msg>
<status status="PASS" starttime="20210803 06:27:39.178" endtime="20210803 06:27:42.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:27:42.416" endtime="20210803 06:27:42.416"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:27:42.420" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-33088 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:27:48.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:27:48.121" level="INFO">${output} = 2021-08-03 06:27:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:27:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210803 06:27:42.418" endtime="20210803 06:27:48.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:27:48.122" level="INFO">2021-08-03 06:27:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:27:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-03 06:27:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20210803 06:27:48.122" endtime="20210803 06:27:48.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:27:48.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:27:48.123" endtime="20210803 06:27:48.123"/>
</kw>
<status status="PASS" starttime="20210803 06:27:42.417" endtime="20210803 06:27:48.124"/>
</kw>
<msg timestamp="20210803 06:27:48.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:27:42.417" endtime="20210803 06:27:48.124"/>
</kw>
<msg timestamp="20210803 06:27:48.124" level="INFO">${result} = 2021-08-03 06:27:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:27:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210803 06:27:42.416" endtime="20210803 06:27:48.124"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:27:48.124" endtime="20210803 06:27:48.125"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:27:29.100" endtime="20210803 06:27:48.125"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210803 06:27:29.029" endtime="20210803 06:27:48.127"/>
</suite>
<suite id="s1-s4" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:27:54.512" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:27:54.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:27:54.527" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:27:54.508" endtime="20210803 06:27:54.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:27:54.528" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:27:54.527" endtime="20210803 06:27:54.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:27:54.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:27:54.528" endtime="20210803 06:27:54.529"/>
</kw>
<status status="PASS" starttime="20210803 06:27:54.507" endtime="20210803 06:27:54.529"/>
</kw>
<msg timestamp="20210803 06:27:54.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:27:54.506" endtime="20210803 06:27:54.530"/>
</kw>
<msg timestamp="20210803 06:27:54.530" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:27:54.506" endtime="20210803 06:27:54.531"/>
</kw>
<msg timestamp="20210803 06:27:54.531" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:27:54.505" endtime="20210803 06:27:54.531"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210803 06:27:54.536" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210803 06:27:54.536" endtime="20210803 06:27:54.536"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210803 06:27:54.537" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210803 06:27:54.536" endtime="20210803 06:27:54.537"/>
</kw>
<status status="PASS" starttime="20210803 06:27:54.535" endtime="20210803 06:27:54.537"/>
</kw>
<msg timestamp="20210803 06:27:54.537" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210803 06:27:54.534" endtime="20210803 06:27:54.537"/>
</kw>
<status status="PASS" starttime="20210803 06:27:54.533" endtime="20210803 06:27:54.538"/>
</kw>
<msg timestamp="20210803 06:27:54.538" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210803 06:27:54.532" endtime="20210803 06:27:54.538"/>
</kw>
<msg timestamp="20210803 06:27:54.538" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210803 06:27:54.532" endtime="20210803 06:27:54.538"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:27:54.542" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:29:25.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:29:25.091" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-03 06:27:58 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:27:58 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210803 06:27:54.541" endtime="20210803 06:29:25.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:29:25.092" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-03 06:27:58 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:27:58 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-03 06:27:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-03 06:27:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-03 06:28:06 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.27.0.6:8032
2021-08-03 06:28:06 INFO  AHSProxy:43 - Connecting to Application History server at jhs/172.27.0.8:10200
2021-08-03 06:28:07 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1627972087224, maxDate=1628576887224, sequenceNumber=1, masterKeyId=2))
2021-08-03 06:28:07 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d6 d7 ca d5 b0 2f 38 d6 df fc f5 b2 2f 40 01 48 01 5a 0d 34 35 33 35 31 34 34 31 33 34 37 39 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-08-03 06:28:07 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1627972087224, maxDate=1628576887224, sequenceNumber=1, masterKeyId=2)
2021-08-03 06:28:07 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-03 06:28:10 INFO  JobSubmitter:202 - number of splits:3
2021-08-03 06:28:13 INFO  JobSubmitter:298 - Submitting tokens for job: job_1627971815026_0001
2021-08-03 06:28:13 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d6 d7 ca d5 b0 2f 38 d6 df fc f5 b2 2f 40 01 48 01 5a 0d 34 35 33 35 31 34 34 31 33 34 37 39 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1627972087224, maxDate=1628576887224, sequenceNumber=1, masterKeyId=2)]
2021-08-03 06:28:13 INFO  Configuration:2824 - resource-types.xml not found
2021-08-03 06:28:13 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-03 06:28:14 INFO  TimelineClientImpl:130 - Timeline service address: jhs:8188
2021-08-03 06:28:15 INFO  YarnClientImpl:338 - Submitted application application_1627971815026_0001
2021-08-03 06:28:15 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1627971815026_0001/
2021-08-03 06:28:15 INFO  Job:1620 - Running job: job_1627971815026_0001
2021-08-03 06:28:37 INFO  Job:1641 - Job job_1627971815026_0001 running in uber mode : false
2021-08-03 06:28:37 INFO  Job:1648 -  map 0% reduce 0%
2021-08-03 06:28:58 INFO  Job:1648 -  map 33% reduce 0%
2021-08-03 06:29:00 INFO  Job:1648 -  map 67% reduce 0%
2021-08-03 06:29:01 INFO  Job:1648 -  map 100% reduce 0%
2021-08-03 06:29:12 INFO  Job:1648 -  map 100% reduce 100%
2021-08-03 06:29:23 INFO  Job:1659 - Job job_1627971815026_0001 completed successfully
2021-08-03 06:29:24 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1277233
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=118528
		Total time spent by all reduces in occupied slots (ms)=21358
		Total time spent by all map tasks (ms)=59264
		Total time spent by all reduce tasks (ms)=10679
		Total vcore-milliseconds taken by all map tasks=59264
		Total vcore-milliseconds taken by all reduce tasks=10679
		Total megabyte-milliseconds taken by all map tasks=121372672
		Total megabyte-milliseconds taken by all reduce tasks=21870592
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1906
		CPU time spent (ms)=11010
		Physical memory (bytes) snapshot=1300828160
		Virtual memory (bytes) snapshot=14184042496
		Total committed heap usage (bytes)=1006108672
		Peak Map Physical memory (bytes)=381595648
		Peak Map Virtual memory (bytes)=3540918272
		Peak Reduce Physical memory (bytes)=348098560
		Peak Reduce Virtual memory (bytes)=3564433408
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 78.004 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210803 06:29:25.091" endtime="20210803 06:29:25.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:29:25.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:29:25.092" endtime="20210803 06:29:25.093"/>
</kw>
<status status="PASS" starttime="20210803 06:27:54.540" endtime="20210803 06:29:25.093"/>
</kw>
<msg timestamp="20210803 06:29:25.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:27:54.539" endtime="20210803 06:29:25.093"/>
</kw>
<msg timestamp="20210803 06:29:25.094" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-03 06:27:58 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:27:58 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210803 06:27:54.538" endtime="20210803 06:29:25.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:29:25.094" endtime="20210803 06:29:25.095"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210803 06:27:54.504" endtime="20210803 06:29:25.095"/>
</test>
<test id="s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:29:25.101" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:29:25.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:29:25.111" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:29:25.098" endtime="20210803 06:29:25.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:29:25.112" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:29:25.111" endtime="20210803 06:29:25.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:29:25.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:29:25.112" endtime="20210803 06:29:25.113"/>
</kw>
<status status="PASS" starttime="20210803 06:29:25.098" endtime="20210803 06:29:25.113"/>
</kw>
<msg timestamp="20210803 06:29:25.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:29:25.097" endtime="20210803 06:29:25.113"/>
</kw>
<msg timestamp="20210803 06:29:25.113" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:29:25.097" endtime="20210803 06:29:25.113"/>
</kw>
<msg timestamp="20210803 06:29:25.114" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:29:25.096" endtime="20210803 06:29:25.114"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210803 06:29:25.114" level="INFO">${random} = 1jvTnfAO</msg>
<status status="PASS" starttime="20210803 06:29:25.114" endtime="20210803 06:29:25.114"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210803 06:29:25.118" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210803 06:29:25.118" endtime="20210803 06:29:25.118"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210803 06:29:25.119" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210803 06:29:25.118" endtime="20210803 06:29:25.119"/>
</kw>
<status status="PASS" starttime="20210803 06:29:25.117" endtime="20210803 06:29:25.119"/>
</kw>
<msg timestamp="20210803 06:29:25.119" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210803 06:29:25.117" endtime="20210803 06:29:25.119"/>
</kw>
<status status="PASS" starttime="20210803 06:29:25.116" endtime="20210803 06:29:25.119"/>
</kw>
<msg timestamp="20210803 06:29:25.119" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210803 06:29:25.115" endtime="20210803 06:29:25.120"/>
</kw>
<msg timestamp="20210803 06:29:25.120" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210803 06:29:25.115" endtime="20210803 06:29:25.120"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210803 06:29:25.123" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210803 06:29:25.123" endtime="20210803 06:29:25.124"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210803 06:29:25.124" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210803 06:29:25.124" endtime="20210803 06:29:25.124"/>
</kw>
<status status="PASS" starttime="20210803 06:29:25.123" endtime="20210803 06:29:25.124"/>
</kw>
<msg timestamp="20210803 06:29:25.124" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210803 06:29:25.122" endtime="20210803 06:29:25.124"/>
</kw>
<status status="PASS" starttime="20210803 06:29:25.121" endtime="20210803 06:29:25.125"/>
</kw>
<msg timestamp="20210803 06:29:25.125" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210803 06:29:25.121" endtime="20210803 06:29:25.125"/>
</kw>
<msg timestamp="20210803 06:29:25.125" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210803 06:29:25.120" endtime="20210803 06:29:25.125"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210803 06:29:25.130" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210803 06:29:25.130" endtime="20210803 06:29:25.130"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210803 06:29:25.132" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210803 06:29:25.131" endtime="20210803 06:29:25.132"/>
</kw>
<status status="PASS" starttime="20210803 06:29:25.129" endtime="20210803 06:29:25.132"/>
</kw>
<msg timestamp="20210803 06:29:25.132" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210803 06:29:25.129" endtime="20210803 06:29:25.132"/>
</kw>
<status status="PASS" starttime="20210803 06:29:25.128" endtime="20210803 06:29:25.132"/>
</kw>
<msg timestamp="20210803 06:29:25.133" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-1jvTnfAO.txt</msg>
<status status="PASS" starttime="20210803 06:29:25.128" endtime="20210803 06:29:25.133"/>
</kw>
<msg timestamp="20210803 06:29:25.133" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-1jvTnfAO.txt</msg>
<status status="PASS" starttime="20210803 06:29:25.125" endtime="20210803 06:29:25.133"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:29:25.136" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-1jvTnfAO.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:30:36.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:30:36.470" level="INFO">${output} = 2021-08-03 06:29:28 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.27.0.6:8032
2021-08-03 06:29:28 INFO  AHSProxy:43 - Connecting to Application History server a...</msg>
<status status="PASS" starttime="20210803 06:29:25.135" endtime="20210803 06:30:36.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:30:36.471" level="INFO">2021-08-03 06:29:28 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.27.0.6:8032
2021-08-03 06:29:28 INFO  AHSProxy:43 - Connecting to Application History server at jhs/172.27.0.8:10200
2021-08-03 06:29:29 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1627972169348, maxDate=1628576969348, sequenceNumber=2, masterKeyId=2))
2021-08-03 06:29:29 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b3 d9 cf d5 b0 2f 38 b3 e1 81 f6 b2 2f 40 02 48 01 5a 0d 34 35 33 35 31 34 34 31 33 34 37 39 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-08-03 06:29:29 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1627972169348, maxDate=1628576969348, sequenceNumber=2, masterKeyId=2)
2021-08-03 06:29:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-03 06:29:29 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:29:30 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-03 06:29:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-03 06:29:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-08-03 06:29:34 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-03 06:29:40 INFO  JobSubmitter:202 - number of splits:3
2021-08-03 06:29:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1627971815026_0002
2021-08-03 06:29:40 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b3 d9 cf d5 b0 2f 38 b3 e1 81 f6 b2 2f 40 02 48 01 5a 0d 34 35 33 35 31 34 34 31 33 34 37 39 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1627972169348, maxDate=1628576969348, sequenceNumber=2, masterKeyId=2)]
2021-08-03 06:29:40 INFO  Configuration:2824 - resource-types.xml not found
2021-08-03 06:29:40 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-03 06:29:40 INFO  TimelineClientImpl:130 - Timeline service address: jhs:8188
2021-08-03 06:29:41 INFO  YarnClientImpl:338 - Submitted application application_1627971815026_0002
2021-08-03 06:29:42 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1627971815026_0002/
2021-08-03 06:29:42 INFO  Job:1620 - Running job: job_1627971815026_0002
2021-08-03 06:29:55 INFO  Job:1641 - Job job_1627971815026_0002 running in uber mode : false
2021-08-03 06:29:55 INFO  Job:1648 -  map 0% reduce 0%
2021-08-03 06:30:16 INFO  Job:1648 -  map 33% reduce 0%
2021-08-03 06:30:18 INFO  Job:1648 -  map 100% reduce 0%
2021-08-03 06:30:26 INFO  Job:1648 -  map 100% reduce 100%
2021-08-03 06:30:35 INFO  Job:1659 - Job job_1627971815026_0002 completed successfully
2021-08-03 06:30:36 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1339995
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=113346
		Total time spent by all reduces in occupied slots (ms)=14976
		Total time spent by all map tasks (ms)=56673
		Total time spent by all reduce tasks (ms)=7488
		Total vcore-milliseconds taken by all map tasks=56673
		Total vcore-milliseconds taken by all reduce tasks=7488
		Total megabyte-milliseconds taken by all map tasks=116066304
		Total megabyte-milliseconds taken by all reduce tasks=15335424
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1821
		CPU time spent (ms)=10120
		Physical memory (bytes) snapshot=1465028608
		Virtual memory (bytes) snapshot=14166224896
		Total committed heap usage (bytes)=1238368256
		Peak Map Physical memory (bytes)=431951872
		Peak Map Virtual memory (bytes)=3543216128
		Peak Reduce Physical memory (bytes)=345190400
		Peak Reduce Virtual memory (bytes)=3561742336
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20210803 06:30:36.470" endtime="20210803 06:30:36.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:30:36.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:30:36.471" endtime="20210803 06:30:36.472"/>
</kw>
<status status="PASS" starttime="20210803 06:29:25.134" endtime="20210803 06:30:36.472"/>
</kw>
<msg timestamp="20210803 06:30:36.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:29:25.134" endtime="20210803 06:30:36.473"/>
</kw>
<msg timestamp="20210803 06:30:36.473" level="INFO">${output} = 2021-08-03 06:29:28 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.27.0.6:8032
2021-08-03 06:29:28 INFO  AHSProxy:43 - Connecting to Application History server a...</msg>
<status status="PASS" starttime="20210803 06:29:25.133" endtime="20210803 06:30:36.473"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:30:36.473" endtime="20210803 06:30:36.474"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:30:36.474" endtime="20210803 06:30:36.474"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210803 06:29:25.096" endtime="20210803 06:30:36.475"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210803 06:27:54.426" endtime="20210803 06:30:36.478"/>
</suite>
<suite id="s1-s5" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s5-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210803 06:30:43.132" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210803 06:30:43.131" endtime="20210803 06:30:43.132"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210803 06:30:43.132" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210803 06:30:43.132" endtime="20210803 06:30:43.132"/>
</kw>
<status status="PASS" starttime="20210803 06:30:43.130" endtime="20210803 06:30:43.132"/>
</kw>
<msg timestamp="20210803 06:30:43.133" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210803 06:30:43.130" endtime="20210803 06:30:43.133"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210803 06:30:43.133" endtime="20210803 06:30:43.134"/>
</kw>
<msg timestamp="20210803 06:30:43.134" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210803 06:30:43.133" endtime="20210803 06:30:43.134"/>
</kw>
<status status="PASS" starttime="20210803 06:30:43.129" endtime="20210803 06:30:43.135"/>
</kw>
<msg timestamp="20210803 06:30:43.135" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210803 06:30:43.128" endtime="20210803 06:30:43.135"/>
</kw>
<msg timestamp="20210803 06:30:43.135" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210803 06:30:43.127" endtime="20210803 06:30:43.135"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210803 06:30:43.136" level="INFO">${random} = 90224</msg>
<status status="PASS" starttime="20210803 06:30:43.135" endtime="20210803 06:30:43.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:30:43.142" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-90224 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:30:51.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:30:51.560" level="INFO">${output} = 2021-08-03 06:30:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:30:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210803 06:30:43.137" endtime="20210803 06:30:51.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:30:51.562" level="INFO">2021-08-03 06:30:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:30:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-03 06:30:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-03 06:30:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20210803 06:30:51.561" endtime="20210803 06:30:51.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:30:51.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:30:51.562" endtime="20210803 06:30:51.562"/>
</kw>
<status status="PASS" starttime="20210803 06:30:43.137" endtime="20210803 06:30:51.563"/>
</kw>
<msg timestamp="20210803 06:30:51.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:30:43.136" endtime="20210803 06:30:51.563"/>
</kw>
<msg timestamp="20210803 06:30:51.563" level="INFO">${result} = 2021-08-03 06:30:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:30:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210803 06:30:43.136" endtime="20210803 06:30:51.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:30:51.567" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:30:54.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:30:54.720" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-03 06:25 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-03 06:27 ofs://om/volume1/bucket1/ozone-33088
-rw-...</msg>
<status status="PASS" starttime="20210803 06:30:51.565" endtime="20210803 06:30:54.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:30:54.721" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-03 06:25 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-03 06:27 ofs://om/volume1/bucket1/ozone-33088
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-03 06:30 ofs://om/volume1/bucket1/ozone-90224
drwxrwxrwx   - hadoop hadoop          0 2021-08-03 06:26 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-08-03 06:29 ofs://om/volume1/bucket1/wordcount-1jvTnfAO.txt</msg>
<status status="PASS" starttime="20210803 06:30:54.721" endtime="20210803 06:30:54.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:30:54.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:30:54.722" endtime="20210803 06:30:54.723"/>
</kw>
<status status="PASS" starttime="20210803 06:30:51.564" endtime="20210803 06:30:54.723"/>
</kw>
<msg timestamp="20210803 06:30:54.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:30:51.564" endtime="20210803 06:30:54.723"/>
</kw>
<msg timestamp="20210803 06:30:54.723" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-08-03 06:25 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2021-08-03 06:27 ofs://om/volume1/bucket1/ozone-33088
-rw-...</msg>
<status status="PASS" starttime="20210803 06:30:51.563" endtime="20210803 06:30:54.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:30:54.724" endtime="20210803 06:30:54.724"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:30:54.728" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-90224 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:30:59.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:30:59.971" level="INFO">${output} = 2021-08-03 06:30:57 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:30:58 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210803 06:30:54.726" endtime="20210803 06:30:59.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:30:59.972" level="INFO">2021-08-03 06:30:57 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:30:58 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-03 06:30:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20210803 06:30:59.972" endtime="20210803 06:30:59.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:30:59.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:30:59.973" endtime="20210803 06:30:59.973"/>
</kw>
<status status="PASS" starttime="20210803 06:30:54.725" endtime="20210803 06:30:59.973"/>
</kw>
<msg timestamp="20210803 06:30:59.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:30:54.725" endtime="20210803 06:30:59.974"/>
</kw>
<msg timestamp="20210803 06:30:59.974" level="INFO">${result} = 2021-08-03 06:30:57 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:30:58 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210803 06:30:54.724" endtime="20210803 06:30:59.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:30:59.974" endtime="20210803 06:30:59.975"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210803 06:30:43.126" endtime="20210803 06:30:59.975"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210803 06:30:43.061" endtime="20210803 06:30:59.977"/>
</suite>
<suite id="s1-s6" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:31:05.883" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:31:05.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:31:05.893" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:31:05.875" endtime="20210803 06:31:05.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:31:05.894" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:31:05.893" endtime="20210803 06:31:05.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:31:05.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:31:05.894" endtime="20210803 06:31:05.895"/>
</kw>
<status status="PASS" starttime="20210803 06:31:05.875" endtime="20210803 06:31:05.895"/>
</kw>
<msg timestamp="20210803 06:31:05.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:31:05.874" endtime="20210803 06:31:05.895"/>
</kw>
<msg timestamp="20210803 06:31:05.895" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:31:05.874" endtime="20210803 06:31:05.896"/>
</kw>
<msg timestamp="20210803 06:31:05.897" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:31:05.873" endtime="20210803 06:31:05.897"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210803 06:31:05.901" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210803 06:31:05.901" endtime="20210803 06:31:05.901"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210803 06:31:05.902" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210803 06:31:05.902" endtime="20210803 06:31:05.902"/>
</kw>
<status status="PASS" starttime="20210803 06:31:05.900" endtime="20210803 06:31:05.902"/>
</kw>
<msg timestamp="20210803 06:31:05.903" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210803 06:31:05.900" endtime="20210803 06:31:05.903"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210803 06:31:05.903" endtime="20210803 06:31:05.904"/>
</kw>
<msg timestamp="20210803 06:31:05.904" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210803 06:31:05.903" endtime="20210803 06:31:05.904"/>
</kw>
<status status="PASS" starttime="20210803 06:31:05.899" endtime="20210803 06:31:05.904"/>
</kw>
<msg timestamp="20210803 06:31:05.904" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210803 06:31:05.898" endtime="20210803 06:31:05.904"/>
</kw>
<msg timestamp="20210803 06:31:05.905" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210803 06:31:05.897" endtime="20210803 06:31:05.905"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:31:05.908" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:32:24.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:32:24.919" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-03 06:31:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:31:09 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210803 06:31:05.906" endtime="20210803 06:32:24.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:32:24.921" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-08-03 06:31:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:31:09 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-08-03 06:31:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-08-03 06:31:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-08-03 06:31:16 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.27.0.6:8032
2021-08-03 06:31:16 INFO  AHSProxy:43 - Connecting to Application History server at jhs/172.27.0.8:10200
2021-08-03 06:31:17 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1627972277126, maxDate=1628577077126, sequenceNumber=3, masterKeyId=2))
2021-08-03 06:31:17 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8d a6 d6 d5 b0 2f 38 8d ae 88 f6 b2 2f 40 03 48 01 5a 0d 34 35 33 35 31 34 34 31 33 34 37 39 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-08-03 06:31:17 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1627972277126, maxDate=1628577077126, sequenceNumber=3, masterKeyId=2)
2021-08-03 06:31:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-08-03 06:31:20 INFO  FileInputFormat:300 - Total input files to process : 3
2021-08-03 06:31:25 INFO  JobSubmitter:202 - number of splits:3
2021-08-03 06:31:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1627971815026_0003
2021-08-03 06:31:25 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8d a6 d6 d5 b0 2f 38 8d ae 88 f6 b2 2f 40 03 48 01 5a 0d 34 35 33 35 31 34 34 31 33 34 37 39 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1627972277126, maxDate=1628577077126, sequenceNumber=3, masterKeyId=2)]
2021-08-03 06:31:26 INFO  Configuration:2824 - resource-types.xml not found
2021-08-03 06:31:26 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2021-08-03 06:31:26 INFO  TimelineClientImpl:130 - Timeline service address: jhs:8188
2021-08-03 06:31:27 INFO  YarnClientImpl:338 - Submitted application application_1627971815026_0003
2021-08-03 06:31:27 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1627971815026_0003/
2021-08-03 06:31:27 INFO  Job:1620 - Running job: job_1627971815026_0003
2021-08-03 06:31:40 INFO  Job:1641 - Job job_1627971815026_0003 running in uber mode : false
2021-08-03 06:31:40 INFO  Job:1648 -  map 0% reduce 0%
2021-08-03 06:32:02 INFO  Job:1648 -  map 33% reduce 0%
2021-08-03 06:32:04 INFO  Job:1648 -  map 100% reduce 0%
2021-08-03 06:32:17 INFO  Job:1648 -  map 100% reduce 100%
2021-08-03 06:32:23 INFO  Job:1659 - Job job_1627971815026_0003 completed successfully
2021-08-03 06:32:23 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1277013
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=116608
		Total time spent by all reduces in occupied slots (ms)=25682
		Total time spent by all map tasks (ms)=58304
		Total time spent by all reduce tasks (ms)=12841
		Total vcore-milliseconds taken by all map tasks=58304
		Total vcore-milliseconds taken by all reduce tasks=12841
		Total megabyte-milliseconds taken by all map tasks=119406592
		Total megabyte-milliseconds taken by all reduce tasks=26298368
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1690
		CPU time spent (ms)=10770
		Physical memory (bytes) snapshot=1443819520
		Virtual memory (bytes) snapshot=14162042880
		Total committed heap usage (bytes)=1201143808
		Peak Map Physical memory (bytes)=374898688
		Peak Map Virtual memory (bytes)=3541286912
		Peak Reduce Physical memory (bytes)=341458944
		Peak Reduce Virtual memory (bytes)=3559317504
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 67.512 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210803 06:32:24.920" endtime="20210803 06:32:24.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:32:24.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:32:24.921" endtime="20210803 06:32:24.921"/>
</kw>
<status status="PASS" starttime="20210803 06:31:05.906" endtime="20210803 06:32:24.922"/>
</kw>
<msg timestamp="20210803 06:32:24.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:31:05.905" endtime="20210803 06:32:24.922"/>
</kw>
<msg timestamp="20210803 06:32:24.922" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-08-03 06:31:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-08-03 06:31:09 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210803 06:31:05.905" endtime="20210803 06:32:24.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210803 06:32:24.923" endtime="20210803 06:32:24.923"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210803 06:31:05.871" endtime="20210803 06:32:24.923"/>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:32:24.930" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:32:24.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:32:24.940" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:32:24.927" endtime="20210803 06:32:24.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:32:24.940" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:32:24.940" endtime="20210803 06:32:24.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:32:24.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:32:24.941" endtime="20210803 06:32:24.941"/>
</kw>
<status status="PASS" starttime="20210803 06:32:24.927" endtime="20210803 06:32:24.941"/>
</kw>
<msg timestamp="20210803 06:32:24.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:32:24.926" endtime="20210803 06:32:24.941"/>
</kw>
<msg timestamp="20210803 06:32:24.942" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:32:24.926" endtime="20210803 06:32:24.942"/>
</kw>
<msg timestamp="20210803 06:32:24.942" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20210803 06:32:24.925" endtime="20210803 06:32:24.942"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210803 06:32:24.943" level="INFO">${random} = 57mqyANR</msg>
<status status="PASS" starttime="20210803 06:32:24.942" endtime="20210803 06:32:24.943"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210803 06:32:24.946" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210803 06:32:24.946" endtime="20210803 06:32:24.946"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210803 06:32:24.947" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210803 06:32:24.947" endtime="20210803 06:32:24.947"/>
</kw>
<status status="PASS" starttime="20210803 06:32:24.945" endtime="20210803 06:32:24.947"/>
</kw>
<msg timestamp="20210803 06:32:24.948" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210803 06:32:24.945" endtime="20210803 06:32:24.948"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210803 06:32:24.948" endtime="20210803 06:32:24.949"/>
</kw>
<msg timestamp="20210803 06:32:24.949" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210803 06:32:24.948" endtime="20210803 06:32:24.949"/>
</kw>
<status status="PASS" starttime="20210803 06:32:24.944" endtime="20210803 06:32:24.950"/>
</kw>
<msg timestamp="20210803 06:32:24.950" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210803 06:32:24.944" endtime="20210803 06:32:24.950"/>
</kw>
<msg timestamp="20210803 06:32:24.950" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210803 06:32:24.943" endtime="20210803 06:32:24.950"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210803 06:32:24.957" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210803 06:32:24.957" endtime="20210803 06:32:24.957"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210803 06:32:24.959" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210803 06:32:24.958" endtime="20210803 06:32:24.959"/>
</kw>
<status status="PASS" starttime="20210803 06:32:24.953" endtime="20210803 06:32:24.960"/>
</kw>
<msg timestamp="20210803 06:32:24.960" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210803 06:32:24.952" endtime="20210803 06:32:24.960"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210803 06:32:24.962" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210803 06:32:24.961" endtime="20210803 06:32:24.962"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210803 06:32:24.962" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210803 06:32:24.962" endtime="20210803 06:32:24.962"/>
</kw>
<status status="PASS" starttime="20210803 06:32:24.961" endtime="20210803 06:32:24.962"/>
</kw>
<msg timestamp="20210803 06:32:24.963" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210803 06:32:24.960" endtime="20210803 06:32:24.963"/>
</kw>
<status status="PASS" starttime="20210803 06:32:24.952" endtime="20210803 06:32:24.963"/>
</kw>
<msg timestamp="20210803 06:32:24.963" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210803 06:32:24.951" endtime="20210803 06:32:24.963"/>
</kw>
<msg timestamp="20210803 06:32:24.963" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210803 06:32:24.950" endtime="20210803 06:32:24.963"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210803 06:32:24.967" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210803 06:32:24.966" endtime="20210803 06:32:24.967"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210803 06:32:24.967" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210803 06:32:24.967" endtime="20210803 06:32:24.967"/>
</kw>
<status status="PASS" starttime="20210803 06:32:24.966" endtime="20210803 06:32:24.968"/>
</kw>
<msg timestamp="20210803 06:32:24.968" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210803 06:32:24.965" endtime="20210803 06:32:24.968"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210803 06:32:24.970" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210803 06:32:24.969" endtime="20210803 06:32:24.970"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210803 06:32:24.971" level="INFO">${result} = /wordcount-57mqyANR.txt</msg>
<status status="PASS" starttime="20210803 06:32:24.970" endtime="20210803 06:32:24.971"/>
</kw>
<status status="PASS" starttime="20210803 06:32:24.969" endtime="20210803 06:32:24.971"/>
</kw>
<msg timestamp="20210803 06:32:24.971" level="INFO">${path_with_leading} = /wordcount-57mqyANR.txt</msg>
<status status="PASS" starttime="20210803 06:32:24.968" endtime="20210803 06:32:24.971"/>
</kw>
<status status="PASS" starttime="20210803 06:32:24.964" endtime="20210803 06:32:24.971"/>
</kw>
<msg timestamp="20210803 06:32:24.972" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-57mqyANR.txt</msg>
<status status="PASS" starttime="20210803 06:32:24.964" endtime="20210803 06:32:24.972"/>
</kw>
<msg timestamp="20210803 06:32:24.972" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-57mqyANR.txt</msg>
<status status="PASS" starttime="20210803 06:32:24.963" endtime="20210803 06:32:24.972"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:32:24.978" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-57mqyANR.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:36:24.934" level="FAIL">Test timeout 4 minutes exceeded.</msg>
<status status="FAIL" starttime="20210803 06:32:24.974" endtime="20210803 06:36:24.934"/>
</kw>
<status status="FAIL" starttime="20210803 06:32:24.973" endtime="20210803 06:36:24.934"/>
</kw>
<msg timestamp="20210803 06:36:24.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210803 06:32:24.973" endtime="20210803 06:36:24.935"/>
</kw>
<status status="FAIL" starttime="20210803 06:32:24.972" endtime="20210803 06:36:24.935"/>
</kw>
<timeout value="4 minutes"/>
<status status="FAIL" starttime="20210803 06:32:24.925" endtime="20210803 06:36:24.935">Test timeout 4 minutes exceeded.</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" starttime="20210803 06:31:05.808" endtime="20210803 06:36:24.940"/>
</suite>
<suite id="s1-s7" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s7-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:25:04.900" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:25:04.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:25:04.905" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210803 06:25:04.895" endtime="20210803 06:25:04.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:25:04.906" level="INFO">om</msg>
<status status="PASS" starttime="20210803 06:25:04.905" endtime="20210803 06:25:04.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:25:04.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:25:04.906" endtime="20210803 06:25:04.907"/>
</kw>
<status status="PASS" starttime="20210803 06:25:04.894" endtime="20210803 06:25:04.907"/>
</kw>
<msg timestamp="20210803 06:25:04.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:25:04.894" endtime="20210803 06:25:04.908"/>
</kw>
<msg timestamp="20210803 06:25:04.908" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20210803 06:25:04.894" endtime="20210803 06:25:04.908"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210803 06:25:04.909" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210803 06:25:04.909" endtime="20210803 06:25:04.909"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210803 06:25:04.914" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210803 06:25:04.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210803 06:25:04.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210803 06:25:04.912" endtime="20210803 06:25:04.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210803 06:25:04.926" level="INFO"/>
<status status="PASS" starttime="20210803 06:25:04.925" endtime="20210803 06:25:04.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210803 06:25:04.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210803 06:25:04.926" endtime="20210803 06:25:04.927"/>
</kw>
<status status="PASS" starttime="20210803 06:25:04.912" endtime="20210803 06:25:04.927"/>
</kw>
<msg timestamp="20210803 06:25:04.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210803 06:25:04.911" endtime="20210803 06:25:04.928"/>
</kw>
<status status="PASS" starttime="20210803 06:25:04.910" endtime="20210803 06:25:04.928"/>
</kw>
<status status="PASS" starttime="20210803 06:25:04.910" endtime="20210803 06:25:04.928"/>
</kw>
<status status="PASS" starttime="20210803 06:25:04.893" endtime="20210803 06:25:04.928"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210803 06:25:04.892" endtime="20210803 06:25:04.929"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210803 06:25:04.805" endtime="20210803 06:25:04.930"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="618727"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="9" fail="1" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit-Hadoop">ozonesecure-mr.Kinit-Hadoop</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="hadoopfs-o3fs">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="mapreduce-o3fs">ozonesecure-mr.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="hadoopfs-ofs">ozonesecure-mr.hadoopfs-ofs</stat>
<stat pass="1" fail="1" skip="0" id="s1-s6" name="mapreduce-ofs">ozonesecure-mr.mapreduce-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Kinit">ozonesecure-mr.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
