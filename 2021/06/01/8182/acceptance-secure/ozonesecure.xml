<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210601 12:14:48.182" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:26:50.636" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:26:50.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:26:50.639" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:26:50.633" endtime="20210601 11:26:50.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:26:50.640" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:26:50.640" endtime="20210601 11:26:50.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:26:50.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:26:50.641" endtime="20210601 11:26:50.641"/>
</kw>
<status status="PASS" starttime="20210601 11:26:50.632" endtime="20210601 11:26:50.641"/>
</kw>
<msg timestamp="20210601 11:26:50.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:26:50.632" endtime="20210601 11:26:50.641"/>
</kw>
<msg timestamp="20210601 11:26:50.642" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210601 11:26:50.632" endtime="20210601 11:26:50.642"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:26:50.645" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:26:50.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:26:50.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:26:50.643" endtime="20210601 11:26:50.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:26:50.652" level="INFO"/>
<status status="PASS" starttime="20210601 11:26:50.652" endtime="20210601 11:26:50.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:26:50.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:26:50.653" endtime="20210601 11:26:50.653"/>
</kw>
<status status="PASS" starttime="20210601 11:26:50.643" endtime="20210601 11:26:50.653"/>
</kw>
<msg timestamp="20210601 11:26:50.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:26:50.643" endtime="20210601 11:26:50.654"/>
</kw>
<status status="PASS" starttime="20210601 11:26:50.642" endtime="20210601 11:26:50.654"/>
</kw>
<status status="PASS" starttime="20210601 11:26:50.642" endtime="20210601 11:26:50.654"/>
</kw>
<status status="PASS" starttime="20210601 11:26:50.631" endtime="20210601 11:26:50.654"/>
</kw>
<status status="PASS" starttime="20210601 11:26:50.631" endtime="20210601 11:26:50.654"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:26:50.657" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:26:50.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:26:50.781" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210601 11:26:50.655" endtime="20210601 11:26:50.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:26:50.782" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Tue, 01 Jun 2021 11:26:50 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCyssx8j70CCmvA2sIKijPziKMFous0r7jMawN39Eed+xcMGfGWBQGYVT4riGTdMzCMcEuQl8RW5fgv3wek4ez8vir
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1622582810768&amp;s=y0S2bOB/Uvq+Lf8fQ2bWmCn7PfEdA9D9+Aatec6zuPM="; Path=/; HttpOnly
Last-Modified: Tue, 01 Jun 2021 10:52:38 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210601 11:26:50.781" endtime="20210601 11:26:50.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:26:50.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:26:50.782" endtime="20210601 11:26:50.783"/>
</kw>
<status status="PASS" starttime="20210601 11:26:50.655" endtime="20210601 11:26:50.783"/>
</kw>
<msg timestamp="20210601 11:26:50.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:26:50.655" endtime="20210601 11:26:50.784"/>
</kw>
<msg timestamp="20210601 11:26:50.785" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210601 11:26:50.654" endtime="20210601 11:26:50.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:26:50.785" endtime="20210601 11:26:50.785"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210601 11:26:50.630" endtime="20210601 11:26:50.786"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:26:50.792" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:26:50.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:26:50.798" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:26:50.790" endtime="20210601 11:26:50.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:26:50.799" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:26:50.798" endtime="20210601 11:26:50.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:26:50.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:26:50.799" endtime="20210601 11:26:50.800"/>
</kw>
<status status="PASS" starttime="20210601 11:26:50.789" endtime="20210601 11:26:50.800"/>
</kw>
<msg timestamp="20210601 11:26:50.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:26:50.789" endtime="20210601 11:26:50.800"/>
</kw>
<msg timestamp="20210601 11:26:50.800" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:26:50.789" endtime="20210601 11:26:50.800"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:26:50.802" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:26:50.801" endtime="20210601 11:26:50.802"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:26:50.806" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:26:50.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:26:50.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:26:50.804" endtime="20210601 11:26:50.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:26:50.813" level="INFO"/>
<status status="PASS" starttime="20210601 11:26:50.813" endtime="20210601 11:26:50.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:26:50.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:26:50.814" endtime="20210601 11:26:50.814"/>
</kw>
<status status="PASS" starttime="20210601 11:26:50.804" endtime="20210601 11:26:50.814"/>
</kw>
<msg timestamp="20210601 11:26:50.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:26:50.803" endtime="20210601 11:26:50.815"/>
</kw>
<status status="PASS" starttime="20210601 11:26:50.803" endtime="20210601 11:26:50.815"/>
</kw>
<status status="PASS" starttime="20210601 11:26:50.802" endtime="20210601 11:26:50.815"/>
</kw>
<status status="PASS" starttime="20210601 11:26:50.788" endtime="20210601 11:26:50.815"/>
</kw>
<status status="PASS" starttime="20210601 11:26:50.788" endtime="20210601 11:26:50.815"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:26:50.819" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:31:50.787" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210601 11:26:50.817" endtime="20210601 11:31:50.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210601 11:31:50.788" endtime="20210601 11:31:50.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210601 11:31:50.788" endtime="20210601 11:31:50.788"/>
</kw>
<status status="FAIL" starttime="20210601 11:26:50.816" endtime="20210601 11:31:50.788"/>
</kw>
<msg timestamp="20210601 11:31:50.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210601 11:26:50.816" endtime="20210601 11:31:50.789"/>
</kw>
<status status="FAIL" starttime="20210601 11:26:50.815" endtime="20210601 11:31:50.789"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210601 11:31:50.789" endtime="20210601 11:31:50.789"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 11:31:50.789" endtime="20210601 11:31:50.789"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210601 11:26:50.786" endtime="20210601 11:31:50.790">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210601 11:26:50.606" endtime="20210601 11:31:50.792"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:31:50.804" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:31:52.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:31:52.923" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210601 11:31:50.801" endtime="20210601 11:31:52.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:31:52.925" level="INFO">om</msg>
<status status="PASS" starttime="20210601 11:31:52.924" endtime="20210601 11:31:52.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:31:52.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:31:52.925" endtime="20210601 11:31:52.926"/>
</kw>
<status status="PASS" starttime="20210601 11:31:50.801" endtime="20210601 11:31:52.926"/>
</kw>
<msg timestamp="20210601 11:31:52.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:31:50.800" endtime="20210601 11:31:52.926"/>
</kw>
<msg timestamp="20210601 11:31:52.927" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210601 11:31:50.800" endtime="20210601 11:31:52.927"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:31:52.927" endtime="20210601 11:31:52.927"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:31:52.930" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:31:54.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:31:54.216" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210601 11:31:52.928" endtime="20210601 11:31:54.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:31:54.217" level="INFO">om</msg>
<status status="PASS" starttime="20210601 11:31:54.216" endtime="20210601 11:31:54.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:31:54.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:31:54.217" endtime="20210601 11:31:54.218"/>
</kw>
<status status="PASS" starttime="20210601 11:31:52.928" endtime="20210601 11:31:54.218"/>
</kw>
<msg timestamp="20210601 11:31:54.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:31:52.928" endtime="20210601 11:31:54.218"/>
</kw>
<msg timestamp="20210601 11:31:54.219" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210601 11:31:52.927" endtime="20210601 11:31:54.219"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:31:54.219" endtime="20210601 11:31:54.219"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210601 11:31:50.799" endtime="20210601 11:31:54.220"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:31:54.225" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:31:55.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:31:55.718" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:31:54.223" endtime="20210601 11:31:55.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:31:55.719" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:31:55.718" endtime="20210601 11:31:55.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:31:55.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:31:55.719" endtime="20210601 11:31:55.720"/>
</kw>
<status status="PASS" starttime="20210601 11:31:54.222" endtime="20210601 11:31:55.720"/>
</kw>
<msg timestamp="20210601 11:31:55.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:31:54.222" endtime="20210601 11:31:55.720"/>
</kw>
<msg timestamp="20210601 11:31:55.720" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210601 11:31:54.222" endtime="20210601 11:31:55.720"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:31:55.721" endtime="20210601 11:31:55.721"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:31:55.725" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:31:58.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:31:58.171" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:31:55.723" endtime="20210601 11:31:58.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:31:58.173" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:31:58.172" endtime="20210601 11:31:58.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:31:58.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:31:58.173" endtime="20210601 11:31:58.174"/>
</kw>
<status status="PASS" starttime="20210601 11:31:55.722" endtime="20210601 11:31:58.174"/>
</kw>
<msg timestamp="20210601 11:31:58.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:31:55.722" endtime="20210601 11:31:58.175"/>
</kw>
<msg timestamp="20210601 11:31:58.175" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210601 11:31:55.721" endtime="20210601 11:31:58.175"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:31:58.175" endtime="20210601 11:31:58.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210601 11:31:54.221" endtime="20210601 11:31:58.176"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:31:58.184" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:32:00.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:32:00.507" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210601 11:31:58.182" endtime="20210601 11:32:00.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:32:00.509" level="INFO">om</msg>
<status status="PASS" starttime="20210601 11:32:00.508" endtime="20210601 11:32:00.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:32:00.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:32:00.509" endtime="20210601 11:32:00.509"/>
</kw>
<status status="PASS" starttime="20210601 11:31:58.180" endtime="20210601 11:32:00.510"/>
</kw>
<msg timestamp="20210601 11:32:00.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:31:58.180" endtime="20210601 11:32:00.510"/>
</kw>
<msg timestamp="20210601 11:32:00.510" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210601 11:31:58.178" endtime="20210601 11:32:00.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:32:00.510" endtime="20210601 11:32:00.511"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:32:00.511" endtime="20210601 11:32:00.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:32:00.515" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:32:02.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:32:02.691" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210601 11:32:00.512" endtime="20210601 11:32:02.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:32:02.693" level="INFO">om</msg>
<status status="PASS" starttime="20210601 11:32:02.692" endtime="20210601 11:32:02.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:32:02.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:32:02.693" endtime="20210601 11:32:02.694"/>
</kw>
<status status="PASS" starttime="20210601 11:32:00.512" endtime="20210601 11:32:02.694"/>
</kw>
<msg timestamp="20210601 11:32:02.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:32:00.512" endtime="20210601 11:32:02.694"/>
</kw>
<msg timestamp="20210601 11:32:02.694" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210601 11:32:00.511" endtime="20210601 11:32:02.694"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:32:02.694" endtime="20210601 11:32:02.695"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:32:02.695" endtime="20210601 11:32:02.695"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210601 11:31:58.177" endtime="20210601 11:32:02.696"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:32:02.702" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:32:05.048" level="INFO">${rc} = 255</msg>
<msg timestamp="20210601 11:32:05.048" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210601 11:32:02.699" endtime="20210601 11:32:05.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:32:05.049" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210601 11:32:05.048" endtime="20210601 11:32:05.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:32:05.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:32:05.049" endtime="20210601 11:32:05.050"/>
</kw>
<msg timestamp="20210601 11:32:05.050" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210601 11:32:02.698" endtime="20210601 11:32:05.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:32:05.050" endtime="20210601 11:32:05.051"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:32:05.054" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:32:07.069" level="INFO">${rc} = 255</msg>
<msg timestamp="20210601 11:32:07.070" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210601 11:32:05.052" endtime="20210601 11:32:07.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:32:07.071" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210601 11:32:07.070" endtime="20210601 11:32:07.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:32:07.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:32:07.071" endtime="20210601 11:32:07.072"/>
</kw>
<msg timestamp="20210601 11:32:07.072" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210601 11:32:05.051" endtime="20210601 11:32:07.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:32:07.073" endtime="20210601 11:32:07.073"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210601 11:32:02.697" endtime="20210601 11:32:07.073"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210601 11:31:50.795" endtime="20210601 11:32:07.076"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210601 11:32:07.101" level="INFO">${random} = 42823</msg>
<status status="PASS" starttime="20210601 11:32:07.101" endtime="20210601 11:32:07.101"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:32:07.104" level="INFO">${source} = 42823-source</msg>
<status status="PASS" starttime="20210601 11:32:07.102" endtime="20210601 11:32:07.105"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:32:07.107" level="INFO">${target} = 42823-target</msg>
<status status="PASS" starttime="20210601 11:32:07.105" endtime="20210601 11:32:07.107"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:32:07.111" level="INFO">Running command 'ozone sh volume create 42823-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:32:13.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:32:13.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:32:07.109" endtime="20210601 11:32:13.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:32:13.239" level="INFO"/>
<status status="PASS" starttime="20210601 11:32:13.238" endtime="20210601 11:32:13.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:32:13.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:32:13.239" endtime="20210601 11:32:13.239"/>
</kw>
<status status="PASS" starttime="20210601 11:32:07.108" endtime="20210601 11:32:13.240"/>
</kw>
<msg timestamp="20210601 11:32:13.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:32:07.108" endtime="20210601 11:32:13.240"/>
</kw>
<status status="PASS" starttime="20210601 11:32:07.107" endtime="20210601 11:32:13.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:32:13.245" level="INFO">Running command 'ozone sh volume create 42823-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:32:19.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:32:19.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:32:13.242" endtime="20210601 11:32:19.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:32:19.787" level="INFO"/>
<status status="PASS" starttime="20210601 11:32:19.786" endtime="20210601 11:32:19.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:32:19.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:32:19.788" endtime="20210601 11:32:19.789"/>
</kw>
<status status="PASS" starttime="20210601 11:32:13.241" endtime="20210601 11:32:19.790"/>
</kw>
<msg timestamp="20210601 11:32:19.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:32:13.241" endtime="20210601 11:32:19.790"/>
</kw>
<status status="PASS" starttime="20210601 11:32:13.240" endtime="20210601 11:32:19.791"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:32:19.800" level="INFO">Running command 'ozone sh bucket create 42823-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:32:25.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:32:25.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:32:19.798" endtime="20210601 11:32:25.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:32:25.848" level="INFO"/>
<status status="PASS" starttime="20210601 11:32:25.848" endtime="20210601 11:32:25.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:32:25.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:32:25.849" endtime="20210601 11:32:25.849"/>
</kw>
<status status="PASS" starttime="20210601 11:32:19.797" endtime="20210601 11:32:25.849"/>
</kw>
<msg timestamp="20210601 11:32:25.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:32:19.794" endtime="20210601 11:32:25.850"/>
</kw>
<status status="PASS" starttime="20210601 11:32:19.793" endtime="20210601 11:32:25.850"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:32:25.854" level="INFO">Running command 'ozone sh key put 42823-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:35:35.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:35:35.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:32:25.851" endtime="20210601 11:35:35.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:35:35.588" level="INFO"/>
<status status="PASS" starttime="20210601 11:35:35.587" endtime="20210601 11:35:35.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:35:35.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:35:35.588" endtime="20210601 11:35:35.589"/>
</kw>
<status status="PASS" starttime="20210601 11:32:25.851" endtime="20210601 11:35:35.589"/>
</kw>
<msg timestamp="20210601 11:35:35.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:32:25.850" endtime="20210601 11:35:35.589"/>
</kw>
<status status="PASS" starttime="20210601 11:32:25.850" endtime="20210601 11:35:35.589"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:35:35.593" level="INFO">Running command 'ozone sh bucket create 42823-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:35:41.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:35:41.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:35:35.591" endtime="20210601 11:35:41.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:35:41.105" level="INFO"/>
<status status="PASS" starttime="20210601 11:35:41.104" endtime="20210601 11:35:41.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:35:41.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:35:41.105" endtime="20210601 11:35:41.106"/>
</kw>
<status status="PASS" starttime="20210601 11:35:35.590" endtime="20210601 11:35:41.106"/>
</kw>
<msg timestamp="20210601 11:35:41.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:35:35.590" endtime="20210601 11:35:41.106"/>
</kw>
<status status="PASS" starttime="20210601 11:35:35.589" endtime="20210601 11:35:41.106"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:35:41.110" level="INFO">Running command 'ozone sh bucket link 42823-source/readable-bucket 42823-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:35:46.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:35:46.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:35:41.108" endtime="20210601 11:35:46.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:35:46.596" level="INFO"/>
<status status="PASS" starttime="20210601 11:35:46.595" endtime="20210601 11:35:46.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:35:46.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:35:46.597" endtime="20210601 11:35:46.598"/>
</kw>
<status status="PASS" starttime="20210601 11:35:41.107" endtime="20210601 11:35:46.599"/>
</kw>
<msg timestamp="20210601 11:35:46.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:35:41.107" endtime="20210601 11:35:46.599"/>
</kw>
<status status="PASS" starttime="20210601 11:35:41.106" endtime="20210601 11:35:46.600"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:35:46.608" level="INFO">Running command 'ozone sh bucket link 42823-source/readable-bucket 42823-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:35:52.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:35:52.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:35:46.605" endtime="20210601 11:35:52.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:35:52.685" level="INFO"/>
<status status="PASS" starttime="20210601 11:35:52.685" endtime="20210601 11:35:52.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:35:52.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:35:52.686" endtime="20210601 11:35:52.686"/>
</kw>
<status status="PASS" starttime="20210601 11:35:46.604" endtime="20210601 11:35:52.686"/>
</kw>
<msg timestamp="20210601 11:35:52.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:35:46.604" endtime="20210601 11:35:52.687"/>
</kw>
<status status="PASS" starttime="20210601 11:35:46.600" endtime="20210601 11:35:52.687"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:35:52.693" level="INFO">Running command 'ozone sh bucket link 42823-source/unreadable-bucket 42823-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:35:56.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:35:56.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:35:52.689" endtime="20210601 11:35:56.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:35:56.482" level="INFO"/>
<status status="PASS" starttime="20210601 11:35:56.481" endtime="20210601 11:35:56.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:35:56.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:35:56.482" endtime="20210601 11:35:56.483"/>
</kw>
<status status="PASS" starttime="20210601 11:35:52.689" endtime="20210601 11:35:56.483"/>
</kw>
<msg timestamp="20210601 11:35:56.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:35:52.688" endtime="20210601 11:35:56.483"/>
</kw>
<status status="PASS" starttime="20210601 11:35:52.687" endtime="20210601 11:35:56.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:35:56.487" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 42823-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:36:02.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:36:02.254" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 11:35:56.485" endtime="20210601 11:36:02.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:36:02.256" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 11:36:02.255" endtime="20210601 11:36:02.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:36:02.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:36:02.256" endtime="20210601 11:36:02.257"/>
</kw>
<status status="PASS" starttime="20210601 11:35:56.485" endtime="20210601 11:36:02.258"/>
</kw>
<msg timestamp="20210601 11:36:02.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:35:56.484" endtime="20210601 11:36:02.258"/>
</kw>
<status status="PASS" starttime="20210601 11:35:56.484" endtime="20210601 11:36:02.259"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:36:02.264" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 42823-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:36:07.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:36:07.834" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 11:36:02.261" endtime="20210601 11:36:07.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:36:07.835" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 11:36:07.834" endtime="20210601 11:36:07.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:36:07.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:36:07.836" endtime="20210601 11:36:07.838"/>
</kw>
<status status="PASS" starttime="20210601 11:36:02.261" endtime="20210601 11:36:07.839"/>
</kw>
<msg timestamp="20210601 11:36:07.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:36:02.260" endtime="20210601 11:36:07.840"/>
</kw>
<status status="PASS" starttime="20210601 11:36:02.259" endtime="20210601 11:36:07.840"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:36:07.847" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 42823-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:36:14.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:36:14.426" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 11:36:07.844" endtime="20210601 11:36:14.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:36:14.427" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 11:36:14.426" endtime="20210601 11:36:14.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:36:14.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:36:14.427" endtime="20210601 11:36:14.427"/>
</kw>
<status status="PASS" starttime="20210601 11:36:07.843" endtime="20210601 11:36:14.428"/>
</kw>
<msg timestamp="20210601 11:36:14.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:36:07.842" endtime="20210601 11:36:14.428"/>
</kw>
<status status="PASS" starttime="20210601 11:36:07.841" endtime="20210601 11:36:14.428"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:36:14.432" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 42823-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:36:19.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:36:19.851" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 11:36:14.430" endtime="20210601 11:36:19.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:36:19.854" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 11:36:19.852" endtime="20210601 11:36:19.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:36:19.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:36:19.854" endtime="20210601 11:36:19.856"/>
</kw>
<status status="PASS" starttime="20210601 11:36:14.429" endtime="20210601 11:36:19.857"/>
</kw>
<msg timestamp="20210601 11:36:19.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:36:14.429" endtime="20210601 11:36:19.857"/>
</kw>
<status status="PASS" starttime="20210601 11:36:14.428" endtime="20210601 11:36:19.858"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:36:19.864" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 42823-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:36:25.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:36:25.472" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 11:36:19.861" endtime="20210601 11:36:25.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:36:25.474" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 11:36:25.473" endtime="20210601 11:36:25.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:36:25.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:36:25.474" endtime="20210601 11:36:25.474"/>
</kw>
<status status="PASS" starttime="20210601 11:36:19.860" endtime="20210601 11:36:25.475"/>
</kw>
<msg timestamp="20210601 11:36:25.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:36:19.860" endtime="20210601 11:36:25.475"/>
</kw>
<status status="PASS" starttime="20210601 11:36:19.858" endtime="20210601 11:36:25.475"/>
</kw>
<status status="PASS" starttime="20210601 11:32:19.792" endtime="20210601 11:36:25.475"/>
</kw>
<status status="PASS" starttime="20210601 11:32:19.791" endtime="20210601 11:36:25.475"/>
</kw>
<status status="PASS" starttime="20210601 11:32:07.100" endtime="20210601 11:36:25.476"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:36:25.485" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:36:25.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:36:25.489" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:36:25.481" endtime="20210601 11:36:25.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:36:25.493" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:36:25.490" endtime="20210601 11:36:25.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:36:25.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:36:25.493" endtime="20210601 11:36:25.494"/>
</kw>
<status status="PASS" starttime="20210601 11:36:25.479" endtime="20210601 11:36:25.494"/>
</kw>
<msg timestamp="20210601 11:36:25.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:36:25.479" endtime="20210601 11:36:25.495"/>
</kw>
<msg timestamp="20210601 11:36:25.495" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:36:25.478" endtime="20210601 11:36:25.495"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:36:25.498" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:36:25.496" endtime="20210601 11:36:25.498"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:36:25.504" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:36:25.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:36:25.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:36:25.501" endtime="20210601 11:36:25.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:36:25.538" level="INFO"/>
<status status="PASS" starttime="20210601 11:36:25.537" endtime="20210601 11:36:25.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:36:25.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:36:25.538" endtime="20210601 11:36:25.539"/>
</kw>
<status status="PASS" starttime="20210601 11:36:25.500" endtime="20210601 11:36:25.539"/>
</kw>
<msg timestamp="20210601 11:36:25.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:36:25.500" endtime="20210601 11:36:25.540"/>
</kw>
<status status="PASS" starttime="20210601 11:36:25.499" endtime="20210601 11:36:25.540"/>
</kw>
<status status="PASS" starttime="20210601 11:36:25.499" endtime="20210601 11:36:25.540"/>
</kw>
<status status="PASS" starttime="20210601 11:36:25.478" endtime="20210601 11:36:25.540"/>
</kw>
<status status="PASS" starttime="20210601 11:36:25.477" endtime="20210601 11:36:25.540"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:36:25.545" level="INFO">Running command 'ozone sh bucket link 42823-source/no-such-bucket 42823-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:36:31.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:36:31.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:36:25.542" endtime="20210601 11:36:31.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:36:31.769" level="INFO"/>
<status status="PASS" starttime="20210601 11:36:31.768" endtime="20210601 11:36:31.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:36:31.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:36:31.769" endtime="20210601 11:36:31.769"/>
</kw>
<status status="PASS" starttime="20210601 11:36:25.541" endtime="20210601 11:36:31.770"/>
</kw>
<msg timestamp="20210601 11:36:31.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:36:25.541" endtime="20210601 11:36:31.770"/>
</kw>
<status status="PASS" starttime="20210601 11:36:25.540" endtime="20210601 11:36:31.770"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:36:31.775" level="INFO">Running command 'ozone sh key list 42823-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:36:35.532" level="INFO">${rc} = 255</msg>
<msg timestamp="20210601 11:36:35.533" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210601 11:36:31.771" endtime="20210601 11:36:35.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:36:35.534" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210601 11:36:35.533" endtime="20210601 11:36:35.534"/>
</kw>
<msg timestamp="20210601 11:36:35.534" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210601 11:36:31.770" endtime="20210601 11:36:35.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:36:35.534" endtime="20210601 11:36:35.535"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210601 11:36:25.476" endtime="20210601 11:36:35.535"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:36:35.541" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:36:35.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:36:35.544" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:36:35.538" endtime="20210601 11:36:35.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:36:35.545" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:36:35.545" endtime="20210601 11:36:35.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:36:35.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:36:35.545" endtime="20210601 11:36:35.546"/>
</kw>
<status status="PASS" starttime="20210601 11:36:35.538" endtime="20210601 11:36:35.546"/>
</kw>
<msg timestamp="20210601 11:36:35.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:36:35.538" endtime="20210601 11:36:35.546"/>
</kw>
<msg timestamp="20210601 11:36:35.547" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:36:35.537" endtime="20210601 11:36:35.547"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:36:35.547" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:36:35.547" endtime="20210601 11:36:35.547"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:36:35.551" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:36:35.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:36:35.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:36:35.549" endtime="20210601 11:36:35.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:36:35.558" level="INFO"/>
<status status="PASS" starttime="20210601 11:36:35.557" endtime="20210601 11:36:35.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:36:35.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:36:35.558" endtime="20210601 11:36:35.559"/>
</kw>
<status status="PASS" starttime="20210601 11:36:35.549" endtime="20210601 11:36:35.559"/>
</kw>
<msg timestamp="20210601 11:36:35.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:36:35.549" endtime="20210601 11:36:35.559"/>
</kw>
<status status="PASS" starttime="20210601 11:36:35.548" endtime="20210601 11:36:35.559"/>
</kw>
<status status="PASS" starttime="20210601 11:36:35.548" endtime="20210601 11:36:35.559"/>
</kw>
<status status="PASS" starttime="20210601 11:36:35.537" endtime="20210601 11:36:35.559"/>
</kw>
<status status="PASS" starttime="20210601 11:36:35.536" endtime="20210601 11:36:35.559"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:36:35.562" level="INFO">Running command 'ozone sh bucket link 42823-source/bucket1 42823-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:36:41.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:36:41.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:36:35.561" endtime="20210601 11:36:41.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:36:41.362" level="INFO"/>
<status status="PASS" starttime="20210601 11:36:41.361" endtime="20210601 11:36:41.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:36:41.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:36:41.362" endtime="20210601 11:36:41.363"/>
</kw>
<status status="PASS" starttime="20210601 11:36:35.560" endtime="20210601 11:36:41.363"/>
</kw>
<msg timestamp="20210601 11:36:41.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:36:35.560" endtime="20210601 11:36:41.363"/>
</kw>
<status status="PASS" starttime="20210601 11:36:35.560" endtime="20210601 11:36:41.363"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:36:41.367" level="INFO">Running command 'ozone sh bucket create 42823-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:36:47.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:36:47.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:36:41.365" endtime="20210601 11:36:47.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:36:47.465" level="INFO"/>
<status status="PASS" starttime="20210601 11:36:47.464" endtime="20210601 11:36:47.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:36:47.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:36:47.465" endtime="20210601 11:36:47.466"/>
</kw>
<status status="PASS" starttime="20210601 11:36:41.364" endtime="20210601 11:36:47.466"/>
</kw>
<msg timestamp="20210601 11:36:47.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:36:41.364" endtime="20210601 11:36:47.466"/>
</kw>
<status status="PASS" starttime="20210601 11:36:41.364" endtime="20210601 11:36:47.466"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:36:47.471" level="INFO">Running command 'ozone sh key put 42823-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:38:35.536" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210601 11:36:47.468" endtime="20210601 11:38:35.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210601 11:38:35.537" endtime="20210601 11:38:35.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210601 11:38:35.537" endtime="20210601 11:38:35.537"/>
</kw>
<status status="FAIL" starttime="20210601 11:36:47.467" endtime="20210601 11:38:35.538"/>
</kw>
<msg timestamp="20210601 11:38:35.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210601 11:36:47.467" endtime="20210601 11:38:35.538"/>
</kw>
<status status="FAIL" starttime="20210601 11:36:47.467" endtime="20210601 11:38:35.538"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210601 11:38:35.538" endtime="20210601 11:38:35.538"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210601 11:36:35.535" endtime="20210601 11:38:35.539">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:38:35.547" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:38:35.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:38:35.551" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:38:35.545" endtime="20210601 11:38:35.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:38:35.552" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:38:35.551" endtime="20210601 11:38:35.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:38:35.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:38:35.552" endtime="20210601 11:38:35.553"/>
</kw>
<status status="PASS" starttime="20210601 11:38:35.544" endtime="20210601 11:38:35.553"/>
</kw>
<msg timestamp="20210601 11:38:35.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:38:35.544" endtime="20210601 11:38:35.553"/>
</kw>
<msg timestamp="20210601 11:38:35.554" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:38:35.543" endtime="20210601 11:38:35.554"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:38:35.554" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:38:35.554" endtime="20210601 11:38:35.554"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:38:35.558" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:38:35.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:38:35.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:38:35.556" endtime="20210601 11:38:35.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:38:35.566" level="INFO"/>
<status status="PASS" starttime="20210601 11:38:35.565" endtime="20210601 11:38:35.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:38:35.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:38:35.566" endtime="20210601 11:38:35.567"/>
</kw>
<status status="PASS" starttime="20210601 11:38:35.555" endtime="20210601 11:38:35.567"/>
</kw>
<msg timestamp="20210601 11:38:35.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:38:35.555" endtime="20210601 11:38:35.568"/>
</kw>
<status status="PASS" starttime="20210601 11:38:35.555" endtime="20210601 11:38:35.568"/>
</kw>
<status status="PASS" starttime="20210601 11:38:35.554" endtime="20210601 11:38:35.568"/>
</kw>
<status status="PASS" starttime="20210601 11:38:35.541" endtime="20210601 11:38:35.568"/>
</kw>
<status status="PASS" starttime="20210601 11:38:35.541" endtime="20210601 11:38:35.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:38:35.572" level="INFO">Running command 'ozone sh key put 42823-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:40:35.541" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210601 11:38:35.570" endtime="20210601 11:40:35.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210601 11:40:35.542" endtime="20210601 11:40:35.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210601 11:40:35.542" endtime="20210601 11:40:35.542"/>
</kw>
<status status="FAIL" starttime="20210601 11:38:35.569" endtime="20210601 11:40:35.543"/>
</kw>
<msg timestamp="20210601 11:40:35.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210601 11:38:35.569" endtime="20210601 11:40:35.543"/>
</kw>
<status status="FAIL" starttime="20210601 11:38:35.568" endtime="20210601 11:40:35.543"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210601 11:40:35.543" endtime="20210601 11:40:35.543"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210601 11:38:35.539" endtime="20210601 11:40:35.543">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:40:35.550" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:40:35.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:40:35.554" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:40:35.549" endtime="20210601 11:40:35.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:40:35.555" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:40:35.555" endtime="20210601 11:40:35.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:40:35.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:40:35.556" endtime="20210601 11:40:35.556"/>
</kw>
<status status="PASS" starttime="20210601 11:40:35.548" endtime="20210601 11:40:35.557"/>
</kw>
<msg timestamp="20210601 11:40:35.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:40:35.548" endtime="20210601 11:40:35.557"/>
</kw>
<msg timestamp="20210601 11:40:35.558" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:40:35.547" endtime="20210601 11:40:35.558"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:40:35.558" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:40:35.558" endtime="20210601 11:40:35.559"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:40:35.562" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:40:35.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:40:35.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:40:35.561" endtime="20210601 11:40:35.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:40:35.572" level="INFO"/>
<status status="PASS" starttime="20210601 11:40:35.571" endtime="20210601 11:40:35.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:40:35.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:40:35.572" endtime="20210601 11:40:35.572"/>
</kw>
<status status="PASS" starttime="20210601 11:40:35.560" endtime="20210601 11:40:35.573"/>
</kw>
<msg timestamp="20210601 11:40:35.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:40:35.560" endtime="20210601 11:40:35.573"/>
</kw>
<status status="PASS" starttime="20210601 11:40:35.559" endtime="20210601 11:40:35.573"/>
</kw>
<status status="PASS" starttime="20210601 11:40:35.559" endtime="20210601 11:40:35.573"/>
</kw>
<status status="PASS" starttime="20210601 11:40:35.547" endtime="20210601 11:40:35.573"/>
</kw>
<status status="PASS" starttime="20210601 11:40:35.546" endtime="20210601 11:40:35.573"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:40:35.577" level="INFO">Running command 'ozone sh key list 42823-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:40:42.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:40:42.139" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210601 11:40:35.574" endtime="20210601 11:40:42.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:40:42.141" level="INFO">key1</msg>
<status status="PASS" starttime="20210601 11:40:42.140" endtime="20210601 11:40:42.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:40:42.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:40:42.141" endtime="20210601 11:40:42.143"/>
</kw>
<status status="PASS" starttime="20210601 11:40:35.574" endtime="20210601 11:40:42.143"/>
</kw>
<msg timestamp="20210601 11:40:42.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:40:35.574" endtime="20210601 11:40:42.144"/>
</kw>
<msg timestamp="20210601 11:40:42.144" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210601 11:40:35.573" endtime="20210601 11:40:42.144"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:40:42.149" level="INFO">Running command 'ozone sh key list 42823-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:40:49.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:40:49.309" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210601 11:40:42.146" endtime="20210601 11:40:49.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:40:49.313" level="INFO">key1</msg>
<status status="PASS" starttime="20210601 11:40:49.311" endtime="20210601 11:40:49.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:40:49.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:40:49.314" endtime="20210601 11:40:49.315"/>
</kw>
<status status="PASS" starttime="20210601 11:40:42.145" endtime="20210601 11:40:49.316"/>
</kw>
<msg timestamp="20210601 11:40:49.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:40:42.145" endtime="20210601 11:40:49.317"/>
</kw>
<msg timestamp="20210601 11:40:49.318" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210601 11:40:42.144" endtime="20210601 11:40:49.318"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:40:49.318" endtime="20210601 11:40:49.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:40:49.320" endtime="20210601 11:40:49.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210601 11:40:49.323" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210601 11:40:49.321" endtime="20210601 11:40:49.323"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210601 11:40:35.546" endtime="20210601 11:40:49.324">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:40:49.334" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:40:49.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:40:49.340" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:40:49.331" endtime="20210601 11:40:49.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:40:49.343" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:40:49.341" endtime="20210601 11:40:49.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:40:49.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:40:49.343" endtime="20210601 11:40:49.345"/>
</kw>
<status status="PASS" starttime="20210601 11:40:49.330" endtime="20210601 11:40:49.345"/>
</kw>
<msg timestamp="20210601 11:40:49.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:40:49.329" endtime="20210601 11:40:49.346"/>
</kw>
<msg timestamp="20210601 11:40:49.346" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:40:49.328" endtime="20210601 11:40:49.346"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:40:49.348" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:40:49.347" endtime="20210601 11:40:49.348"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:40:49.354" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:40:49.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:40:49.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:40:49.351" endtime="20210601 11:40:49.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:40:49.363" level="INFO"/>
<status status="PASS" starttime="20210601 11:40:49.362" endtime="20210601 11:40:49.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:40:49.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:40:49.364" endtime="20210601 11:40:49.365"/>
</kw>
<status status="PASS" starttime="20210601 11:40:49.350" endtime="20210601 11:40:49.365"/>
</kw>
<msg timestamp="20210601 11:40:49.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:40:49.349" endtime="20210601 11:40:49.365"/>
</kw>
<status status="PASS" starttime="20210601 11:40:49.348" endtime="20210601 11:40:49.365"/>
</kw>
<status status="PASS" starttime="20210601 11:40:49.348" endtime="20210601 11:40:49.366"/>
</kw>
<status status="PASS" starttime="20210601 11:40:49.327" endtime="20210601 11:40:49.366"/>
</kw>
<status status="PASS" starttime="20210601 11:40:49.326" endtime="20210601 11:40:49.366"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:40:49.370" level="INFO">Running command 'ozone sh key delete 42823-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:40:56.104" level="INFO">${rc} = 255</msg>
<msg timestamp="20210601 11:40:56.104" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210601 11:40:49.368" endtime="20210601 11:40:56.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:40:56.105" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210601 11:40:56.105" endtime="20210601 11:40:56.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:40:56.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210601 11:40:56.107" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210601 11:40:56.106" endtime="20210601 11:40:56.107"/>
</kw>
<status status="FAIL" starttime="20210601 11:40:49.368" endtime="20210601 11:40:56.107"/>
</kw>
<msg timestamp="20210601 11:40:56.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210601 11:40:49.367" endtime="20210601 11:40:56.107"/>
</kw>
<status status="FAIL" starttime="20210601 11:40:49.366" endtime="20210601 11:40:56.107"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210601 11:40:56.108" endtime="20210601 11:40:56.108"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 11:40:56.108" endtime="20210601 11:40:56.108"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210601 11:40:49.324" endtime="20210601 11:40:56.108">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:40:56.119" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:40:56.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:40:56.124" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:40:56.116" endtime="20210601 11:40:56.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:40:56.125" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:40:56.124" endtime="20210601 11:40:56.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:40:56.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:40:56.125" endtime="20210601 11:40:56.126"/>
</kw>
<status status="PASS" starttime="20210601 11:40:56.115" endtime="20210601 11:40:56.127"/>
</kw>
<msg timestamp="20210601 11:40:56.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:40:56.114" endtime="20210601 11:40:56.127"/>
</kw>
<msg timestamp="20210601 11:40:56.128" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:40:56.113" endtime="20210601 11:40:56.128"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:40:56.129" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:40:56.128" endtime="20210601 11:40:56.129"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:40:56.133" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:40:56.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:40:56.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:40:56.131" endtime="20210601 11:40:56.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:40:56.142" level="INFO"/>
<status status="PASS" starttime="20210601 11:40:56.141" endtime="20210601 11:40:56.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:40:56.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:40:56.142" endtime="20210601 11:40:56.143"/>
</kw>
<status status="PASS" starttime="20210601 11:40:56.131" endtime="20210601 11:40:56.143"/>
</kw>
<msg timestamp="20210601 11:40:56.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:40:56.130" endtime="20210601 11:40:56.144"/>
</kw>
<status status="PASS" starttime="20210601 11:40:56.129" endtime="20210601 11:40:56.144"/>
</kw>
<status status="PASS" starttime="20210601 11:40:56.129" endtime="20210601 11:40:56.144"/>
</kw>
<status status="PASS" starttime="20210601 11:40:56.112" endtime="20210601 11:40:56.144"/>
</kw>
<status status="PASS" starttime="20210601 11:40:56.111" endtime="20210601 11:40:56.144"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:40:56.148" level="INFO">Running command 'ozone sh bucket list 42823-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:02.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:02.270" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210601 11:40:56.146" endtime="20210601 11:41:02.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:02.272" level="INFO">{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:36:31.699Z",
  "modificationTime" : "2021-06-01T11:36:31.699Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:35:56.375Z",
  "modificationTime" : "2021-06-01T11:36:25.391Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:36:41.302Z",
  "modificationTime" : "2021-06-01T11:36:41.302Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:35:46.528Z",
  "modificationTime" : "2021-06-01T11:36:19.777Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:35:52.572Z",
  "modificationTime" : "2021-06-01T11:35:52.572Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210601 11:41:02.270" endtime="20210601 11:41:02.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:02.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:02.272" endtime="20210601 11:41:02.274"/>
</kw>
<status status="PASS" starttime="20210601 11:40:56.146" endtime="20210601 11:41:02.275"/>
</kw>
<msg timestamp="20210601 11:41:02.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:40:56.145" endtime="20210601 11:41:02.275"/>
</kw>
<msg timestamp="20210601 11:41:02.276" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210601 11:40:56.145" endtime="20210601 11:41:02.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:41:02.276" endtime="20210601 11:41:02.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:41:02.278" endtime="20210601 11:41:02.279"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210601 11:40:56.110" endtime="20210601 11:41:02.279"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:02.289" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:02.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:02.294" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:41:02.287" endtime="20210601 11:41:02.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:02.296" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:41:02.295" endtime="20210601 11:41:02.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:02.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:02.296" endtime="20210601 11:41:02.297"/>
</kw>
<status status="PASS" starttime="20210601 11:41:02.286" endtime="20210601 11:41:02.298"/>
</kw>
<msg timestamp="20210601 11:41:02.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:02.285" endtime="20210601 11:41:02.298"/>
</kw>
<msg timestamp="20210601 11:41:02.299" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:41:02.284" endtime="20210601 11:41:02.299"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:41:02.300" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:41:02.299" endtime="20210601 11:41:02.300"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:02.307" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:02.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:02.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:41:02.305" endtime="20210601 11:41:02.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:02.320" level="INFO"/>
<status status="PASS" starttime="20210601 11:41:02.318" endtime="20210601 11:41:02.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:02.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:02.320" endtime="20210601 11:41:02.320"/>
</kw>
<status status="PASS" starttime="20210601 11:41:02.303" endtime="20210601 11:41:02.321"/>
</kw>
<msg timestamp="20210601 11:41:02.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:02.303" endtime="20210601 11:41:02.321"/>
</kw>
<status status="PASS" starttime="20210601 11:41:02.301" endtime="20210601 11:41:02.321"/>
</kw>
<status status="PASS" starttime="20210601 11:41:02.300" endtime="20210601 11:41:02.321"/>
</kw>
<status status="PASS" starttime="20210601 11:41:02.283" endtime="20210601 11:41:02.321"/>
</kw>
<status status="PASS" starttime="20210601 11:41:02.282" endtime="20210601 11:41:02.321"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:02.325" level="INFO">Running command 'ozone sh bucket info 42823-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:08.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:08.957" level="INFO">${output} = 42823-source bucket1</msg>
<status status="PASS" starttime="20210601 11:41:02.323" endtime="20210601 11:41:08.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:08.959" level="INFO">42823-source bucket1</msg>
<status status="PASS" starttime="20210601 11:41:08.958" endtime="20210601 11:41:08.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:08.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:08.959" endtime="20210601 11:41:08.960"/>
</kw>
<status status="PASS" starttime="20210601 11:41:02.322" endtime="20210601 11:41:08.961"/>
</kw>
<msg timestamp="20210601 11:41:08.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:02.322" endtime="20210601 11:41:08.961"/>
</kw>
<msg timestamp="20210601 11:41:08.962" level="INFO">${result} = 42823-source bucket1</msg>
<status status="PASS" starttime="20210601 11:41:02.321" endtime="20210601 11:41:08.962"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:41:08.962" endtime="20210601 11:41:08.963"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210601 11:41:02.280" endtime="20210601 11:41:08.963"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:08.972" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:08.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:08.976" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:41:08.969" endtime="20210601 11:41:08.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:08.978" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:41:08.977" endtime="20210601 11:41:08.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:08.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:08.978" endtime="20210601 11:41:08.979"/>
</kw>
<status status="PASS" starttime="20210601 11:41:08.969" endtime="20210601 11:41:08.980"/>
</kw>
<msg timestamp="20210601 11:41:08.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:08.968" endtime="20210601 11:41:08.980"/>
</kw>
<msg timestamp="20210601 11:41:08.981" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:41:08.967" endtime="20210601 11:41:08.981"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:41:08.982" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:41:08.981" endtime="20210601 11:41:08.982"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:08.990" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:08.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:08.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:41:08.986" endtime="20210601 11:41:08.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:08.999" level="INFO"/>
<status status="PASS" starttime="20210601 11:41:08.998" endtime="20210601 11:41:08.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:08.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:08.999" endtime="20210601 11:41:09.000"/>
</kw>
<status status="PASS" starttime="20210601 11:41:08.985" endtime="20210601 11:41:09.000"/>
</kw>
<msg timestamp="20210601 11:41:09.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:08.985" endtime="20210601 11:41:09.000"/>
</kw>
<status status="PASS" starttime="20210601 11:41:08.983" endtime="20210601 11:41:09.000"/>
</kw>
<status status="PASS" starttime="20210601 11:41:08.983" endtime="20210601 11:41:09.000"/>
</kw>
<status status="PASS" starttime="20210601 11:41:08.966" endtime="20210601 11:41:09.000"/>
</kw>
<status status="PASS" starttime="20210601 11:41:08.965" endtime="20210601 11:41:09.000"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:09.006" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 42823-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:14.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:14.590" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 11:41:09.004" endtime="20210601 11:41:14.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:14.592" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 11:41:14.591" endtime="20210601 11:41:14.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:14.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:14.593" endtime="20210601 11:41:14.594"/>
</kw>
<status status="PASS" starttime="20210601 11:41:09.003" endtime="20210601 11:41:14.595"/>
</kw>
<msg timestamp="20210601 11:41:14.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:09.002" endtime="20210601 11:41:14.596"/>
</kw>
<status status="PASS" starttime="20210601 11:41:09.001" endtime="20210601 11:41:14.596"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:14.604" level="INFO">Running command 'ozone sh bucket getacl 42823-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:21.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:21.148" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210601 11:41:14.601" endtime="20210601 11:41:21.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:21.149" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210601 11:41:21.149" endtime="20210601 11:41:21.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:21.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:21.150" endtime="20210601 11:41:21.150"/>
</kw>
<status status="PASS" starttime="20210601 11:41:14.600" endtime="20210601 11:41:21.150"/>
</kw>
<msg timestamp="20210601 11:41:21.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:14.599" endtime="20210601 11:41:21.151"/>
</kw>
<msg timestamp="20210601 11:41:21.151" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210601 11:41:14.598" endtime="20210601 11:41:21.151"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:41:21.151" endtime="20210601 11:41:21.152"/>
</kw>
<status status="PASS" starttime="20210601 11:41:14.596" endtime="20210601 11:41:21.152"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:21.158" level="INFO">Running command 'ozone sh bucket getacl 42823-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:28.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:28.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:41:21.156" endtime="20210601 11:41:28.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:28.011" level="INFO"/>
<status status="PASS" starttime="20210601 11:41:28.011" endtime="20210601 11:41:28.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:28.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:28.012" endtime="20210601 11:41:28.012"/>
</kw>
<status status="PASS" starttime="20210601 11:41:21.155" endtime="20210601 11:41:28.012"/>
</kw>
<msg timestamp="20210601 11:41:28.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:21.155" endtime="20210601 11:41:28.013"/>
</kw>
<msg timestamp="20210601 11:41:28.013" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210601 11:41:21.154" endtime="20210601 11:41:28.013"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:41:28.013" endtime="20210601 11:41:28.014"/>
</kw>
<status status="PASS" starttime="20210601 11:41:21.152" endtime="20210601 11:41:28.014"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:28.019" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 42823-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:33.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:33.746" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 11:41:28.017" endtime="20210601 11:41:33.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:33.748" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 11:41:33.747" endtime="20210601 11:41:33.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:33.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:33.748" endtime="20210601 11:41:33.748"/>
</kw>
<status status="PASS" starttime="20210601 11:41:28.015" endtime="20210601 11:41:33.749"/>
</kw>
<msg timestamp="20210601 11:41:33.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:28.015" endtime="20210601 11:41:33.749"/>
</kw>
<status status="PASS" starttime="20210601 11:41:28.014" endtime="20210601 11:41:33.749"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:33.755" level="INFO">Running command 'ozone sh bucket getacl 42823-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:41.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:41.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:41:33.753" endtime="20210601 11:41:41.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:41.026" level="INFO"/>
<status status="PASS" starttime="20210601 11:41:41.025" endtime="20210601 11:41:41.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:41.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:41.026" endtime="20210601 11:41:41.026"/>
</kw>
<status status="PASS" starttime="20210601 11:41:33.752" endtime="20210601 11:41:41.027"/>
</kw>
<msg timestamp="20210601 11:41:41.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:33.752" endtime="20210601 11:41:41.027"/>
</kw>
<msg timestamp="20210601 11:41:41.027" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210601 11:41:33.751" endtime="20210601 11:41:41.027"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:41:41.028" endtime="20210601 11:41:41.028"/>
</kw>
<status status="PASS" starttime="20210601 11:41:33.749" endtime="20210601 11:41:41.028"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:41.035" level="INFO">Running command 'ozone sh bucket getacl 42823-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:47.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:47.874" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210601 11:41:41.031" endtime="20210601 11:41:47.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:47.876" level="INFO">READ</msg>
<status status="PASS" starttime="20210601 11:41:47.875" endtime="20210601 11:41:47.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:47.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:47.877" endtime="20210601 11:41:47.879"/>
</kw>
<status status="PASS" starttime="20210601 11:41:41.031" endtime="20210601 11:41:47.879"/>
</kw>
<msg timestamp="20210601 11:41:47.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:41.031" endtime="20210601 11:41:47.880"/>
</kw>
<msg timestamp="20210601 11:41:47.880" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210601 11:41:41.030" endtime="20210601 11:41:47.881"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:41:47.881" endtime="20210601 11:41:47.882"/>
</kw>
<status status="PASS" starttime="20210601 11:41:41.029" endtime="20210601 11:41:47.883"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210601 11:41:08.964" endtime="20210601 11:41:47.883"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:47.895" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:47.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:47.900" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:41:47.892" endtime="20210601 11:41:47.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:47.901" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:41:47.900" endtime="20210601 11:41:47.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:47.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:47.902" endtime="20210601 11:41:47.903"/>
</kw>
<status status="PASS" starttime="20210601 11:41:47.891" endtime="20210601 11:41:47.903"/>
</kw>
<msg timestamp="20210601 11:41:47.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:47.891" endtime="20210601 11:41:47.904"/>
</kw>
<msg timestamp="20210601 11:41:47.904" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:41:47.890" endtime="20210601 11:41:47.904"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:41:47.905" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:41:47.904" endtime="20210601 11:41:47.905"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:47.909" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:47.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:47.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:41:47.907" endtime="20210601 11:41:47.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:47.950" level="INFO"/>
<status status="PASS" starttime="20210601 11:41:47.949" endtime="20210601 11:41:47.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:47.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:47.950" endtime="20210601 11:41:47.950"/>
</kw>
<status status="PASS" starttime="20210601 11:41:47.906" endtime="20210601 11:41:47.951"/>
</kw>
<msg timestamp="20210601 11:41:47.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:47.906" endtime="20210601 11:41:47.951"/>
</kw>
<status status="PASS" starttime="20210601 11:41:47.905" endtime="20210601 11:41:47.951"/>
</kw>
<status status="PASS" starttime="20210601 11:41:47.905" endtime="20210601 11:41:47.951"/>
</kw>
<status status="PASS" starttime="20210601 11:41:47.888" endtime="20210601 11:41:47.951"/>
</kw>
<status status="PASS" starttime="20210601 11:41:47.886" endtime="20210601 11:41:47.951"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:47.954" level="INFO">Running command 'ozone sh bucket link 42823-source/bucket2 42823-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:54.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:41:54.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:41:47.953" endtime="20210601 11:41:54.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:54.063" level="INFO"/>
<status status="PASS" starttime="20210601 11:41:54.061" endtime="20210601 11:41:54.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:41:54.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:41:54.063" endtime="20210601 11:41:54.064"/>
</kw>
<status status="PASS" starttime="20210601 11:41:47.952" endtime="20210601 11:41:54.065"/>
</kw>
<msg timestamp="20210601 11:41:54.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:47.952" endtime="20210601 11:41:54.065"/>
</kw>
<status status="PASS" starttime="20210601 11:41:47.951" endtime="20210601 11:41:54.066"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:54.071" level="INFO">Running command 'ozone sh bucket create 42823-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:41:59.674" level="INFO">${rc} = 255</msg>
<msg timestamp="20210601 11:41:59.674" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210601 11:41:54.068" endtime="20210601 11:41:59.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:41:59.676" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210601 11:41:59.675" endtime="20210601 11:41:59.677"/>
</kw>
<msg timestamp="20210601 11:41:59.677" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210601 11:41:54.066" endtime="20210601 11:41:59.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:41:59.677" endtime="20210601 11:41:59.678"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:41:59.684" level="INFO">Running command 'ozone sh bucket create 42823-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:05.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:05.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:41:59.681" endtime="20210601 11:42:05.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:05.680" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:05.679" endtime="20210601 11:42:05.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:05.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:05.681" endtime="20210601 11:42:05.682"/>
</kw>
<status status="PASS" starttime="20210601 11:41:59.680" endtime="20210601 11:42:05.682"/>
</kw>
<msg timestamp="20210601 11:42:05.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:41:59.679" endtime="20210601 11:42:05.683"/>
</kw>
<status status="PASS" starttime="20210601 11:41:59.678" endtime="20210601 11:42:05.683"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:05.687" level="INFO">Running command 'ozone sh bucket link 42823-source/bucket1 42823-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:11.277" level="INFO">${rc} = 255</msg>
<msg timestamp="20210601 11:42:11.277" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210601 11:42:05.685" endtime="20210601 11:42:11.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:11.279" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210601 11:42:11.278" endtime="20210601 11:42:11.279"/>
</kw>
<msg timestamp="20210601 11:42:11.280" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210601 11:42:05.684" endtime="20210601 11:42:11.280"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:42:11.280" endtime="20210601 11:42:11.280"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210601 11:41:47.885" endtime="20210601 11:42:11.281"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:11.290" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:11.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:11.296" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:42:11.287" endtime="20210601 11:42:11.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:11.297" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:42:11.296" endtime="20210601 11:42:11.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:11.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:11.298" endtime="20210601 11:42:11.299"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.286" endtime="20210601 11:42:11.299"/>
</kw>
<msg timestamp="20210601 11:42:11.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:11.286" endtime="20210601 11:42:11.300"/>
</kw>
<msg timestamp="20210601 11:42:11.300" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:42:11.285" endtime="20210601 11:42:11.300"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:42:11.302" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:42:11.301" endtime="20210601 11:42:11.302"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:11.307" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:11.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:11.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:11.305" endtime="20210601 11:42:11.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:11.317" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:11.316" endtime="20210601 11:42:11.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:11.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:11.317" endtime="20210601 11:42:11.318"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.304" endtime="20210601 11:42:11.318"/>
</kw>
<msg timestamp="20210601 11:42:11.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:11.304" endtime="20210601 11:42:11.318"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.303" endtime="20210601 11:42:11.319"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.302" endtime="20210601 11:42:11.319"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.284" endtime="20210601 11:42:11.319"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.283" endtime="20210601 11:42:11.319"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:11.325" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:11.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:11.329" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:11.323" endtime="20210601 11:42:11.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:11.330" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:11.330" endtime="20210601 11:42:11.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:11.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:11.331" endtime="20210601 11:42:11.332"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.322" endtime="20210601 11:42:11.332"/>
</kw>
<msg timestamp="20210601 11:42:11.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:11.321" endtime="20210601 11:42:11.332"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.320" endtime="20210601 11:42:11.332"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:11.337" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:11.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:11.343" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:42:11.335" endtime="20210601 11:42:11.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:11.345" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:42:11.344" endtime="20210601 11:42:11.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:11.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:11.347" endtime="20210601 11:42:11.348"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.334" endtime="20210601 11:42:11.348"/>
</kw>
<msg timestamp="20210601 11:42:11.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:11.334" endtime="20210601 11:42:11.348"/>
</kw>
<msg timestamp="20210601 11:42:11.349" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:42:11.333" endtime="20210601 11:42:11.349"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:42:11.350" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:42:11.350" endtime="20210601 11:42:11.350"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:11.355" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:11.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:11.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:11.353" endtime="20210601 11:42:11.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:11.365" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:11.364" endtime="20210601 11:42:11.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:11.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:11.365" endtime="20210601 11:42:11.366"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.352" endtime="20210601 11:42:11.366"/>
</kw>
<msg timestamp="20210601 11:42:11.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:11.352" endtime="20210601 11:42:11.366"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.351" endtime="20210601 11:42:11.366"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.351" endtime="20210601 11:42:11.366"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.333" endtime="20210601 11:42:11.366"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.332" endtime="20210601 11:42:11.367"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:11.370" level="INFO">Running command 'ozone sh key list 42823-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:17.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:17.350" level="INFO">${output} = {
  "volumeName" : "42823-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-06-01T11:32:31.690Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210601 11:42:11.367" endtime="20210601 11:42:17.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:17.352" level="INFO">{
  "volumeName" : "42823-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-06-01T11:32:31.690Z",
  "modificationTime" : "2021-06-01T11:35:34.884Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20210601 11:42:17.351" endtime="20210601 11:42:17.352"/>
</kw>
<msg timestamp="20210601 11:42:17.353" level="INFO">${result} = {
  "volumeName" : "42823-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-06-01T11:32:31.690Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210601 11:42:11.367" endtime="20210601 11:42:17.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:42:17.353" endtime="20210601 11:42:17.354"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.320" endtime="20210601 11:42:17.354"/>
</kw>
<status status="PASS" starttime="20210601 11:42:11.319" endtime="20210601 11:42:17.355"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210601 11:42:11.282" endtime="20210601 11:42:17.355"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:17.364" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:17.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:17.369" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:42:17.361" endtime="20210601 11:42:17.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:17.371" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:42:17.370" endtime="20210601 11:42:17.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:17.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:17.371" endtime="20210601 11:42:17.371"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.361" endtime="20210601 11:42:17.372"/>
</kw>
<msg timestamp="20210601 11:42:17.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:17.360" endtime="20210601 11:42:17.372"/>
</kw>
<msg timestamp="20210601 11:42:17.372" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:42:17.360" endtime="20210601 11:42:17.372"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:42:17.373" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:42:17.372" endtime="20210601 11:42:17.373"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:17.379" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:17.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:17.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:17.375" endtime="20210601 11:42:17.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:17.386" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:17.385" endtime="20210601 11:42:17.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:17.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:17.386" endtime="20210601 11:42:17.387"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.375" endtime="20210601 11:42:17.387"/>
</kw>
<msg timestamp="20210601 11:42:17.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:17.374" endtime="20210601 11:42:17.387"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.374" endtime="20210601 11:42:17.388"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.373" endtime="20210601 11:42:17.388"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.358" endtime="20210601 11:42:17.388"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.357" endtime="20210601 11:42:17.388"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:17.395" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:17.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:17.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:17.392" endtime="20210601 11:42:17.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:17.402" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:17.401" endtime="20210601 11:42:17.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:17.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:17.402" endtime="20210601 11:42:17.403"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.391" endtime="20210601 11:42:17.403"/>
</kw>
<msg timestamp="20210601 11:42:17.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:17.390" endtime="20210601 11:42:17.404"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.390" endtime="20210601 11:42:17.404"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:17.410" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:17.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:17.415" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:42:17.407" endtime="20210601 11:42:17.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:17.416" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:42:17.416" endtime="20210601 11:42:17.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:17.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:17.417" endtime="20210601 11:42:17.417"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.406" endtime="20210601 11:42:17.418"/>
</kw>
<msg timestamp="20210601 11:42:17.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:17.406" endtime="20210601 11:42:17.418"/>
</kw>
<msg timestamp="20210601 11:42:17.418" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:42:17.405" endtime="20210601 11:42:17.418"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:42:17.419" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:42:17.419" endtime="20210601 11:42:17.419"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:17.426" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:17.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:17.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:17.422" endtime="20210601 11:42:17.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:17.436" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:17.435" endtime="20210601 11:42:17.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:17.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:17.437" endtime="20210601 11:42:17.438"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.421" endtime="20210601 11:42:17.438"/>
</kw>
<msg timestamp="20210601 11:42:17.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:17.421" endtime="20210601 11:42:17.439"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.420" endtime="20210601 11:42:17.439"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.420" endtime="20210601 11:42:17.439"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.405" endtime="20210601 11:42:17.440"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.404" endtime="20210601 11:42:17.440"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:17.443" level="INFO">Running command 'ozone sh key list 42823-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:23.541" level="INFO">${rc} = 255</msg>
<msg timestamp="20210601 11:42:23.541" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 42823-target unreadable-link null</msg>
<status status="PASS" starttime="20210601 11:42:17.441" endtime="20210601 11:42:23.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:23.544" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 42823-target unreadable-link null</msg>
<status status="PASS" starttime="20210601 11:42:23.542" endtime="20210601 11:42:23.544"/>
</kw>
<msg timestamp="20210601 11:42:23.544" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 42823-target unreadable-link null</msg>
<status status="PASS" starttime="20210601 11:42:17.440" endtime="20210601 11:42:23.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:42:23.545" endtime="20210601 11:42:23.546"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.389" endtime="20210601 11:42:23.546"/>
</kw>
<status status="PASS" starttime="20210601 11:42:17.388" endtime="20210601 11:42:23.547"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210601 11:42:17.356" endtime="20210601 11:42:23.547"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:23.556" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:23.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:23.560" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:42:23.554" endtime="20210601 11:42:23.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:23.563" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:42:23.563" endtime="20210601 11:42:23.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:23.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:23.564" endtime="20210601 11:42:23.564"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.553" endtime="20210601 11:42:23.564"/>
</kw>
<msg timestamp="20210601 11:42:23.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:23.553" endtime="20210601 11:42:23.564"/>
</kw>
<msg timestamp="20210601 11:42:23.565" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:42:23.553" endtime="20210601 11:42:23.565"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:42:23.565" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:42:23.565" endtime="20210601 11:42:23.565"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:23.569" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:23.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:23.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:23.567" endtime="20210601 11:42:23.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:23.578" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:23.578" endtime="20210601 11:42:23.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:23.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:23.579" endtime="20210601 11:42:23.580"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.567" endtime="20210601 11:42:23.580"/>
</kw>
<msg timestamp="20210601 11:42:23.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:23.566" endtime="20210601 11:42:23.580"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.566" endtime="20210601 11:42:23.581"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.565" endtime="20210601 11:42:23.581"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.552" endtime="20210601 11:42:23.581"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.552" endtime="20210601 11:42:23.581"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:23.586" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:23.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:23.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:23.584" endtime="20210601 11:42:23.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:23.592" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:23.591" endtime="20210601 11:42:23.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:23.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:23.592" endtime="20210601 11:42:23.593"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.583" endtime="20210601 11:42:23.593"/>
</kw>
<msg timestamp="20210601 11:42:23.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:23.583" endtime="20210601 11:42:23.593"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.582" endtime="20210601 11:42:23.594"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:23.598" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:23.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:23.608" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:42:23.596" endtime="20210601 11:42:23.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:23.609" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:42:23.608" endtime="20210601 11:42:23.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:23.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:23.610" endtime="20210601 11:42:23.610"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.596" endtime="20210601 11:42:23.611"/>
</kw>
<msg timestamp="20210601 11:42:23.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:23.595" endtime="20210601 11:42:23.611"/>
</kw>
<msg timestamp="20210601 11:42:23.611" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:42:23.595" endtime="20210601 11:42:23.612"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:42:23.612" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:42:23.612" endtime="20210601 11:42:23.612"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:23.618" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:23.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:23.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:23.615" endtime="20210601 11:42:23.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:23.631" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:23.630" endtime="20210601 11:42:23.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:23.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:23.631" endtime="20210601 11:42:23.632"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.614" endtime="20210601 11:42:23.633"/>
</kw>
<msg timestamp="20210601 11:42:23.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:23.614" endtime="20210601 11:42:23.633"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.613" endtime="20210601 11:42:23.634"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.613" endtime="20210601 11:42:23.634"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.594" endtime="20210601 11:42:23.635"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.594" endtime="20210601 11:42:23.635"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:23.643" level="INFO">Running command 'ozone sh bucket info 42823-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:29.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:29.813" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" starttime="20210601 11:42:23.639" endtime="20210601 11:42:29.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:29.815" level="INFO">{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:35:56.375Z",
  "modificationTime" : "2021-06-01T11:36:25.391Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210601 11:42:29.814" endtime="20210601 11:42:29.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:29.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:29.815" endtime="20210601 11:42:29.816"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.637" endtime="20210601 11:42:29.817"/>
</kw>
<msg timestamp="20210601 11:42:29.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:23.637" endtime="20210601 11:42:29.817"/>
</kw>
<msg timestamp="20210601 11:42:29.817" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" starttime="20210601 11:42:23.635" endtime="20210601 11:42:29.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:42:29.817" endtime="20210601 11:42:29.818"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:42:29.818" endtime="20210601 11:42:29.819"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:29.822" level="INFO">Running command 'ozone sh key list 42823-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:36.149" level="INFO">${rc} = 255</msg>
<msg timestamp="20210601 11:42:36.149" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 42823-source unreadable-bucket </msg>
<status status="PASS" starttime="20210601 11:42:29.820" endtime="20210601 11:42:36.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:36.150" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 42823-source unreadable-bucket </msg>
<status status="PASS" starttime="20210601 11:42:36.149" endtime="20210601 11:42:36.150"/>
</kw>
<msg timestamp="20210601 11:42:36.150" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 42823-source unreadable-bucket </msg>
<status status="PASS" starttime="20210601 11:42:29.819" endtime="20210601 11:42:36.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:42:36.151" endtime="20210601 11:42:36.151"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.582" endtime="20210601 11:42:36.151"/>
</kw>
<status status="PASS" starttime="20210601 11:42:23.581" endtime="20210601 11:42:36.151"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210601 11:42:23.550" endtime="20210601 11:42:36.152"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:36.158" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:36.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:36.165" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:42:36.156" endtime="20210601 11:42:36.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:36.166" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:42:36.166" endtime="20210601 11:42:36.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:36.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:36.166" endtime="20210601 11:42:36.167"/>
</kw>
<status status="PASS" starttime="20210601 11:42:36.156" endtime="20210601 11:42:36.167"/>
</kw>
<msg timestamp="20210601 11:42:36.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:36.155" endtime="20210601 11:42:36.168"/>
</kw>
<msg timestamp="20210601 11:42:36.168" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:42:36.155" endtime="20210601 11:42:36.168"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:42:36.169" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:42:36.168" endtime="20210601 11:42:36.169"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:36.173" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:36.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:36.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:36.171" endtime="20210601 11:42:36.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:36.181" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:36.181" endtime="20210601 11:42:36.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:36.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:36.182" endtime="20210601 11:42:36.182"/>
</kw>
<status status="PASS" starttime="20210601 11:42:36.171" endtime="20210601 11:42:36.182"/>
</kw>
<msg timestamp="20210601 11:42:36.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:36.170" endtime="20210601 11:42:36.183"/>
</kw>
<status status="PASS" starttime="20210601 11:42:36.169" endtime="20210601 11:42:36.183"/>
</kw>
<status status="PASS" starttime="20210601 11:42:36.169" endtime="20210601 11:42:36.183"/>
</kw>
<status status="PASS" starttime="20210601 11:42:36.154" endtime="20210601 11:42:36.183"/>
</kw>
<status status="PASS" starttime="20210601 11:42:36.154" endtime="20210601 11:42:36.183"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:36.187" level="INFO">Running command 'ozone sh bucket link 42823-target/loop1 42823-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:41.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:41.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:36.185" endtime="20210601 11:42:41.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:41.893" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:41.892" endtime="20210601 11:42:41.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:41.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:41.893" endtime="20210601 11:42:41.894"/>
</kw>
<status status="PASS" starttime="20210601 11:42:36.184" endtime="20210601 11:42:41.895"/>
</kw>
<msg timestamp="20210601 11:42:41.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:36.184" endtime="20210601 11:42:41.895"/>
</kw>
<status status="PASS" starttime="20210601 11:42:36.183" endtime="20210601 11:42:41.896"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:41.902" level="INFO">Running command 'ozone sh bucket link 42823-target/loop2 42823-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:47.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:47.681" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:41.899" endtime="20210601 11:42:47.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:47.682" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:47.681" endtime="20210601 11:42:47.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:47.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:47.682" endtime="20210601 11:42:47.683"/>
</kw>
<status status="PASS" starttime="20210601 11:42:41.898" endtime="20210601 11:42:47.683"/>
</kw>
<msg timestamp="20210601 11:42:47.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:41.897" endtime="20210601 11:42:47.684"/>
</kw>
<status status="PASS" starttime="20210601 11:42:41.896" endtime="20210601 11:42:47.684"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:47.692" level="INFO">Running command 'ozone sh bucket link 42823-target/loop3 42823-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:53.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:53.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:47.688" endtime="20210601 11:42:53.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:53.651" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:53.650" endtime="20210601 11:42:53.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:53.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:53.651" endtime="20210601 11:42:53.652"/>
</kw>
<status status="PASS" starttime="20210601 11:42:47.687" endtime="20210601 11:42:53.652"/>
</kw>
<msg timestamp="20210601 11:42:53.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:47.687" endtime="20210601 11:42:53.652"/>
</kw>
<status status="PASS" starttime="20210601 11:42:47.685" endtime="20210601 11:42:53.653"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:53.657" level="INFO">Running command 'ozone sh key list 42823-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:59.250" level="INFO">${rc} = 255</msg>
<msg timestamp="20210601 11:42:59.250" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210601 11:42:53.654" endtime="20210601 11:42:59.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:59.252" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210601 11:42:59.251" endtime="20210601 11:42:59.252"/>
</kw>
<msg timestamp="20210601 11:42:59.253" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210601 11:42:53.653" endtime="20210601 11:42:59.253"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:42:59.253" endtime="20210601 11:42:59.254"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210601 11:42:36.153" endtime="20210601 11:42:59.255"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:59.265" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:59.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:59.270" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:42:59.262" endtime="20210601 11:42:59.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:59.272" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:42:59.270" endtime="20210601 11:42:59.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:59.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:59.272" endtime="20210601 11:42:59.273"/>
</kw>
<status status="PASS" starttime="20210601 11:42:59.260" endtime="20210601 11:42:59.273"/>
</kw>
<msg timestamp="20210601 11:42:59.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:59.260" endtime="20210601 11:42:59.274"/>
</kw>
<msg timestamp="20210601 11:42:59.274" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:42:59.259" endtime="20210601 11:42:59.274"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:42:59.276" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:42:59.275" endtime="20210601 11:42:59.276"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:59.281" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:42:59.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:42:59.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:59.279" endtime="20210601 11:42:59.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:42:59.291" level="INFO"/>
<status status="PASS" starttime="20210601 11:42:59.290" endtime="20210601 11:42:59.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:42:59.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:42:59.292" endtime="20210601 11:42:59.293"/>
</kw>
<status status="PASS" starttime="20210601 11:42:59.278" endtime="20210601 11:42:59.293"/>
</kw>
<msg timestamp="20210601 11:42:59.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:59.278" endtime="20210601 11:42:59.293"/>
</kw>
<status status="PASS" starttime="20210601 11:42:59.277" endtime="20210601 11:42:59.294"/>
</kw>
<status status="PASS" starttime="20210601 11:42:59.276" endtime="20210601 11:42:59.294"/>
</kw>
<status status="PASS" starttime="20210601 11:42:59.257" endtime="20210601 11:42:59.294"/>
</kw>
<status status="PASS" starttime="20210601 11:42:59.257" endtime="20210601 11:42:59.294"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:42:59.299" level="INFO">Running command 'ozone sh bucket link 42823-source/bucket1 42823-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:43:05.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:43:05.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:42:59.296" endtime="20210601 11:43:05.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:43:05.377" level="INFO"/>
<status status="PASS" starttime="20210601 11:43:05.376" endtime="20210601 11:43:05.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:43:05.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:43:05.377" endtime="20210601 11:43:05.378"/>
</kw>
<status status="PASS" starttime="20210601 11:42:59.296" endtime="20210601 11:43:05.378"/>
</kw>
<msg timestamp="20210601 11:43:05.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:42:59.295" endtime="20210601 11:43:05.378"/>
</kw>
<status status="PASS" starttime="20210601 11:42:59.294" endtime="20210601 11:43:05.379"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:43:05.382" level="INFO">Running command 'ozone sh key put 42823-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:44:59.256" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210601 11:43:05.380" endtime="20210601 11:44:59.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210601 11:44:59.257" endtime="20210601 11:44:59.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210601 11:44:59.257" endtime="20210601 11:44:59.258"/>
</kw>
<status status="FAIL" starttime="20210601 11:43:05.380" endtime="20210601 11:44:59.258"/>
</kw>
<msg timestamp="20210601 11:44:59.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210601 11:43:05.379" endtime="20210601 11:44:59.258"/>
</kw>
<status status="FAIL" starttime="20210601 11:43:05.379" endtime="20210601 11:44:59.258"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210601 11:44:59.259" endtime="20210601 11:44:59.259"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210601 11:42:59.255" endtime="20210601 11:44:59.259">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:44:59.267" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:44:59.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:44:59.272" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:44:59.264" endtime="20210601 11:44:59.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:44:59.274" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:44:59.273" endtime="20210601 11:44:59.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:44:59.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:44:59.274" endtime="20210601 11:44:59.275"/>
</kw>
<status status="PASS" starttime="20210601 11:44:59.264" endtime="20210601 11:44:59.276"/>
</kw>
<msg timestamp="20210601 11:44:59.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:44:59.263" endtime="20210601 11:44:59.276"/>
</kw>
<msg timestamp="20210601 11:44:59.276" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:44:59.263" endtime="20210601 11:44:59.276"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:44:59.277" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:44:59.276" endtime="20210601 11:44:59.277"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:44:59.283" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:44:59.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:44:59.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:44:59.280" endtime="20210601 11:44:59.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:44:59.293" level="INFO"/>
<status status="PASS" starttime="20210601 11:44:59.292" endtime="20210601 11:44:59.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:44:59.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:44:59.293" endtime="20210601 11:44:59.294"/>
</kw>
<status status="PASS" starttime="20210601 11:44:59.280" endtime="20210601 11:44:59.295"/>
</kw>
<msg timestamp="20210601 11:44:59.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:44:59.279" endtime="20210601 11:44:59.295"/>
</kw>
<status status="PASS" starttime="20210601 11:44:59.278" endtime="20210601 11:44:59.296"/>
</kw>
<status status="PASS" starttime="20210601 11:44:59.278" endtime="20210601 11:44:59.296"/>
</kw>
<status status="PASS" starttime="20210601 11:44:59.262" endtime="20210601 11:44:59.296"/>
</kw>
<status status="PASS" starttime="20210601 11:44:59.261" endtime="20210601 11:44:59.296"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:44:59.300" level="INFO">Running command 'ozone sh bucket delete 42823-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:45:05.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:45:05.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:44:59.298" endtime="20210601 11:45:05.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:45:05.312" level="INFO"/>
<status status="PASS" starttime="20210601 11:45:05.309" endtime="20210601 11:45:05.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:45:05.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:45:05.312" endtime="20210601 11:45:05.313"/>
</kw>
<status status="PASS" starttime="20210601 11:44:59.297" endtime="20210601 11:45:05.314"/>
</kw>
<msg timestamp="20210601 11:45:05.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:44:59.297" endtime="20210601 11:45:05.314"/>
</kw>
<status status="PASS" starttime="20210601 11:44:59.296" endtime="20210601 11:45:05.315"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:45:05.321" level="INFO">Running command 'ozone sh bucket list 42823-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:45:11.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:45:11.156" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T...</msg>
<status status="PASS" starttime="20210601 11:45:05.317" endtime="20210601 11:45:11.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:45:11.158" level="INFO">{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:42:05.544Z",
  "modificationTime" : "2021-06-01T11:42:05.544Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:36:31.699Z",
  "modificationTime" : "2021-06-01T11:36:31.699Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:35:56.375Z",
  "modificationTime" : "2021-06-01T11:36:25.391Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:41:53.941Z",
  "modificationTime" : "2021-06-01T11:41:53.941Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:43:05.178Z",
  "modificationTime" : "2021-06-01T11:43:05.178Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:42:53.538Z",
  "modificationTime" : "2021-06-01T11:42:53.538Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:42:41.819Z",
  "modificationTime" : "2021-06-01T11:42:41.819Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:42:47.613Z",
  "modificationTime" : "2021-06-01T11:42:47.613Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:35:46.528Z",
  "modificationTime" : "2021-06-01T11:36:19.777Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T11:35:52.572Z",
  "modificationTime" : "2021-06-01T11:35:52.572Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "42823-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210601 11:45:11.157" endtime="20210601 11:45:11.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:45:11.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:45:11.159" endtime="20210601 11:45:11.160"/>
</kw>
<status status="PASS" starttime="20210601 11:45:05.316" endtime="20210601 11:45:11.160"/>
</kw>
<msg timestamp="20210601 11:45:11.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:45:05.316" endtime="20210601 11:45:11.161"/>
</kw>
<msg timestamp="20210601 11:45:11.162" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "42823-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-01T...</msg>
<status status="PASS" starttime="20210601 11:45:05.315" endtime="20210601 11:45:11.162"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:45:11.162" endtime="20210601 11:45:11.163"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:45:11.169" level="INFO">Running command 'ozone sh key list 42823-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:45:17.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:45:17.421" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210601 11:45:11.166" endtime="20210601 11:45:17.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:45:17.423" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210601 11:45:17.422" endtime="20210601 11:45:17.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:45:17.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:45:17.423" endtime="20210601 11:45:17.424"/>
</kw>
<status status="PASS" starttime="20210601 11:45:11.165" endtime="20210601 11:45:17.424"/>
</kw>
<msg timestamp="20210601 11:45:17.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:45:11.164" endtime="20210601 11:45:17.424"/>
</kw>
<msg timestamp="20210601 11:45:17.424" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210601 11:45:11.163" endtime="20210601 11:45:17.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:45:17.425" endtime="20210601 11:45:17.426"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210601 11:44:59.260" endtime="20210601 11:45:17.427"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210601 11:32:07.080" endtime="20210601 11:45:17.428"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210601 11:45:17.469" level="INFO">${random} = 61085</msg>
<status status="PASS" starttime="20210601 11:45:17.468" endtime="20210601 11:45:17.469"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:45:17.469" level="INFO">${prefix} = 61085</msg>
<status status="PASS" starttime="20210601 11:45:17.469" endtime="20210601 11:45:17.469"/>
</kw>
<status status="PASS" starttime="20210601 11:45:17.468" endtime="20210601 11:45:17.470"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:45:17.480" level="INFO">Running command 'ozone sh volume info /61085-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:45:24.257" level="INFO">${rc} = 255</msg>
<msg timestamp="20210601 11:45:24.257" level="INFO">${output} = VOLUME_NOT_FOUND Volume 61085-rpcbasic is not found</msg>
<status status="PASS" starttime="20210601 11:45:17.475" endtime="20210601 11:45:24.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:45:24.259" level="INFO">VOLUME_NOT_FOUND Volume 61085-rpcbasic is not found</msg>
<status status="PASS" starttime="20210601 11:45:24.258" endtime="20210601 11:45:24.259"/>
</kw>
<msg timestamp="20210601 11:45:24.259" level="INFO">${result} = VOLUME_NOT_FOUND Volume 61085-rpcbasic is not found</msg>
<status status="PASS" starttime="20210601 11:45:17.474" endtime="20210601 11:45:24.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:45:24.260" endtime="20210601 11:45:24.262"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:45:24.267" level="INFO">Running command 'ozone sh volume create /61085-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:45:29.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:45:29.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:45:24.264" endtime="20210601 11:45:29.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:45:29.952" level="INFO"/>
<status status="PASS" starttime="20210601 11:45:29.949" endtime="20210601 11:45:29.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:45:29.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:45:29.953" endtime="20210601 11:45:29.953"/>
</kw>
<status status="PASS" starttime="20210601 11:45:24.264" endtime="20210601 11:45:29.953"/>
</kw>
<msg timestamp="20210601 11:45:29.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:45:24.263" endtime="20210601 11:45:29.954"/>
</kw>
<msg timestamp="20210601 11:45:29.954" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210601 11:45:24.262" endtime="20210601 11:45:29.954"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:45:29.954" endtime="20210601 11:45:29.960"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:45:29.965" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="61085-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:45:35.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:45:35.902" level="INFO">${output} = {
  "metadata": {},
  "name": "61085-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210601 11:45:29.961" endtime="20210601 11:45:35.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:45:35.905" level="INFO">{
  "metadata": {},
  "name": "61085-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-01T11:45:29.862Z",
  "modificationTime": "2021-06-01T11:45:29.862Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210601 11:45:35.903" endtime="20210601 11:45:35.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:45:35.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:45:35.906" endtime="20210601 11:45:35.906"/>
</kw>
<status status="PASS" starttime="20210601 11:45:29.961" endtime="20210601 11:45:35.907"/>
</kw>
<msg timestamp="20210601 11:45:35.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:45:29.961" endtime="20210601 11:45:35.907"/>
</kw>
<msg timestamp="20210601 11:45:35.908" level="INFO">${result} = {
  "metadata": {},
  "name": "61085-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210601 11:45:29.960" endtime="20210601 11:45:35.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:45:35.908" endtime="20210601 11:45:35.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:45:35.913" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="61085-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:45:41.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:45:41.890" level="INFO">${output} = {
  "metadata": {},
  "name": "61085-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210601 11:45:35.911" endtime="20210601 11:45:41.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:45:41.891" level="INFO">{
  "metadata": {},
  "name": "61085-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-01T11:45:29.862Z",
  "modificationTime": "2021-06-01T11:45:29.862Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210601 11:45:41.890" endtime="20210601 11:45:41.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:45:41.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:45:41.891" endtime="20210601 11:45:41.892"/>
</kw>
<status status="PASS" starttime="20210601 11:45:35.910" endtime="20210601 11:45:41.892"/>
</kw>
<msg timestamp="20210601 11:45:41.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:45:35.910" endtime="20210601 11:45:41.892"/>
</kw>
<msg timestamp="20210601 11:45:41.892" level="INFO">${result} = {
  "metadata": {},
  "name": "61085-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210601 11:45:35.909" endtime="20210601 11:45:41.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:45:41.893" endtime="20210601 11:45:41.893"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:45:41.897" level="INFO">Running command 'ozone sh volume setquota /61085-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:45:47.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:45:47.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:45:41.894" endtime="20210601 11:45:47.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:45:47.992" level="INFO"/>
<status status="PASS" starttime="20210601 11:45:47.991" endtime="20210601 11:45:47.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:45:47.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:45:47.993" endtime="20210601 11:45:47.994"/>
</kw>
<status status="PASS" starttime="20210601 11:45:41.894" endtime="20210601 11:45:47.994"/>
</kw>
<msg timestamp="20210601 11:45:47.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:45:41.894" endtime="20210601 11:45:47.994"/>
</kw>
<status status="PASS" starttime="20210601 11:45:41.893" endtime="20210601 11:45:47.994"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:45:48.001" level="INFO">Running command 'ozone sh volume info /61085-rpcbasic | jq -r '. | select(.name=="61085-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:45:54.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:45:54.529" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210601 11:45:47.998" endtime="20210601 11:45:54.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:45:54.530" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210601 11:45:54.530" endtime="20210601 11:45:54.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:45:54.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:45:54.531" endtime="20210601 11:45:54.532"/>
</kw>
<status status="PASS" starttime="20210601 11:45:47.997" endtime="20210601 11:45:54.532"/>
</kw>
<msg timestamp="20210601 11:45:54.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:45:47.996" endtime="20210601 11:45:54.532"/>
</kw>
<msg timestamp="20210601 11:45:54.533" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210601 11:45:47.995" endtime="20210601 11:45:54.533"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:45:54.533" endtime="20210601 11:45:54.533"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:45:54.539" level="INFO">Running command 'ozone sh bucket create /61085-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:46:00.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:46:00.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:45:54.535" endtime="20210601 11:46:00.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:46:00.805" level="INFO"/>
<status status="PASS" starttime="20210601 11:46:00.804" endtime="20210601 11:46:00.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:46:00.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:46:00.805" endtime="20210601 11:46:00.806"/>
</kw>
<status status="PASS" starttime="20210601 11:45:54.535" endtime="20210601 11:46:00.806"/>
</kw>
<msg timestamp="20210601 11:46:00.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:45:54.534" endtime="20210601 11:46:00.806"/>
</kw>
<status status="PASS" starttime="20210601 11:45:54.534" endtime="20210601 11:46:00.806"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:46:00.818" level="INFO">Running command 'ozone sh bucket info /61085-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:46:07.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:46:07.039" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210601 11:46:00.816" endtime="20210601 11:46:07.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:46:07.041" level="INFO">DISK</msg>
<status status="PASS" starttime="20210601 11:46:07.040" endtime="20210601 11:46:07.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:46:07.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:46:07.041" endtime="20210601 11:46:07.041"/>
</kw>
<status status="PASS" starttime="20210601 11:46:00.812" endtime="20210601 11:46:07.042"/>
</kw>
<msg timestamp="20210601 11:46:07.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:46:00.811" endtime="20210601 11:46:07.042"/>
</kw>
<msg timestamp="20210601 11:46:07.042" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210601 11:46:00.807" endtime="20210601 11:46:07.042"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:46:07.042" endtime="20210601 11:46:07.043"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:46:07.047" level="INFO">Running command 'ozone sh bucket info /61085-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:46:13.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:46:13.323" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210601 11:46:07.045" endtime="20210601 11:46:13.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:46:13.326" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210601 11:46:13.324" endtime="20210601 11:46:13.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:46:13.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:46:13.327" endtime="20210601 11:46:13.329"/>
</kw>
<status status="PASS" starttime="20210601 11:46:07.044" endtime="20210601 11:46:13.330"/>
</kw>
<msg timestamp="20210601 11:46:13.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:46:07.044" endtime="20210601 11:46:13.331"/>
</kw>
<msg timestamp="20210601 11:46:13.331" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210601 11:46:07.043" endtime="20210601 11:46:13.331"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:46:13.333" endtime="20210601 11:46:13.334"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:46:13.341" level="INFO">Running command 'ozone sh bucket info /61085-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:46:19.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:46:19.161" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210601 11:46:13.337" endtime="20210601 11:46:19.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:46:19.162" level="INFO">100</msg>
<status status="PASS" starttime="20210601 11:46:19.161" endtime="20210601 11:46:19.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:46:19.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:46:19.162" endtime="20210601 11:46:19.163"/>
</kw>
<status status="PASS" starttime="20210601 11:46:13.336" endtime="20210601 11:46:19.163"/>
</kw>
<msg timestamp="20210601 11:46:19.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:46:13.335" endtime="20210601 11:46:19.163"/>
</kw>
<msg timestamp="20210601 11:46:19.164" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210601 11:46:13.334" endtime="20210601 11:46:19.164"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:46:19.164" endtime="20210601 11:46:19.165"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:46:19.172" level="INFO">Running command 'ozone sh bucket setquota /61085-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:46:24.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:46:24.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:46:19.169" endtime="20210601 11:46:24.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:46:24.669" level="INFO"/>
<status status="PASS" starttime="20210601 11:46:24.668" endtime="20210601 11:46:24.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:46:24.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:46:24.669" endtime="20210601 11:46:24.670"/>
</kw>
<status status="PASS" starttime="20210601 11:46:19.167" endtime="20210601 11:46:24.670"/>
</kw>
<msg timestamp="20210601 11:46:24.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:46:19.167" endtime="20210601 11:46:24.670"/>
</kw>
<status status="PASS" starttime="20210601 11:46:19.165" endtime="20210601 11:46:24.670"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:46:24.677" level="INFO">Running command 'ozone sh bucket info /61085-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:46:31.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:46:31.602" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210601 11:46:24.674" endtime="20210601 11:46:31.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:46:31.604" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210601 11:46:31.603" endtime="20210601 11:46:31.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:46:31.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:46:31.604" endtime="20210601 11:46:31.604"/>
</kw>
<status status="PASS" starttime="20210601 11:46:24.672" endtime="20210601 11:46:31.604"/>
</kw>
<msg timestamp="20210601 11:46:31.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:46:24.672" endtime="20210601 11:46:31.605"/>
</kw>
<msg timestamp="20210601 11:46:31.605" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210601 11:46:24.670" endtime="20210601 11:46:31.605"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:46:31.605" endtime="20210601 11:46:31.605"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:46:31.610" level="INFO">Running command 'ozone sh bucket info /61085-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:46:37.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:46:37.712" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210601 11:46:31.607" endtime="20210601 11:46:37.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:46:37.715" level="INFO">1000</msg>
<status status="PASS" starttime="20210601 11:46:37.714" endtime="20210601 11:46:37.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:46:37.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:46:37.716" endtime="20210601 11:46:37.717"/>
</kw>
<status status="PASS" starttime="20210601 11:46:31.607" endtime="20210601 11:46:37.718"/>
</kw>
<msg timestamp="20210601 11:46:37.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:46:31.606" endtime="20210601 11:46:37.719"/>
</kw>
<msg timestamp="20210601 11:46:37.719" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210601 11:46:31.605" endtime="20210601 11:46:37.719"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:46:37.720" endtime="20210601 11:46:37.721"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:46:37.727" level="INFO">Running command 'ozone sh bucket list /61085-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:46:43.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:46:43.939" level="INFO">${output} = 61085-rpcbasic</msg>
<status status="PASS" starttime="20210601 11:46:37.724" endtime="20210601 11:46:43.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:46:43.940" level="INFO">61085-rpcbasic</msg>
<status status="PASS" starttime="20210601 11:46:43.940" endtime="20210601 11:46:43.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:46:43.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:46:43.941" endtime="20210601 11:46:43.941"/>
</kw>
<status status="PASS" starttime="20210601 11:46:37.724" endtime="20210601 11:46:43.942"/>
</kw>
<msg timestamp="20210601 11:46:43.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:46:37.723" endtime="20210601 11:46:43.942"/>
</kw>
<msg timestamp="20210601 11:46:43.942" level="INFO">${result} = 61085-rpcbasic</msg>
<status status="PASS" starttime="20210601 11:46:37.721" endtime="20210601 11:46:43.942"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:46:43.942" endtime="20210601 11:46:43.943"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:46:43.948" level="INFO">Running command 'ozone sh key put /61085-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:49:54.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:49:54.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:46:43.946" endtime="20210601 11:49:54.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:49:54.198" level="INFO"/>
<status status="PASS" starttime="20210601 11:49:54.197" endtime="20210601 11:49:54.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:49:54.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:49:54.198" endtime="20210601 11:49:54.199"/>
</kw>
<status status="PASS" starttime="20210601 11:46:43.945" endtime="20210601 11:49:54.199"/>
</kw>
<msg timestamp="20210601 11:49:54.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:46:43.945" endtime="20210601 11:49:54.200"/>
</kw>
<status status="PASS" starttime="20210601 11:46:43.944" endtime="20210601 11:49:54.200"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:49:54.204" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:49:54.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:49:54.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:49:54.201" endtime="20210601 11:49:54.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:49:54.208" level="INFO"/>
<status status="PASS" starttime="20210601 11:49:54.207" endtime="20210601 11:49:54.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:49:54.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:49:54.209" endtime="20210601 11:49:54.210"/>
</kw>
<status status="PASS" starttime="20210601 11:49:54.201" endtime="20210601 11:49:54.211"/>
</kw>
<msg timestamp="20210601 11:49:54.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:49:54.201" endtime="20210601 11:49:54.211"/>
</kw>
<status status="PASS" starttime="20210601 11:49:54.200" endtime="20210601 11:49:54.211"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:49:54.218" level="INFO">Running command 'ozone sh key get /61085-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:50:03.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:50:03.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:49:54.215" endtime="20210601 11:50:03.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:50:03.972" level="INFO"/>
<status status="PASS" starttime="20210601 11:50:03.971" endtime="20210601 11:50:03.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:50:03.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:50:03.972" endtime="20210601 11:50:03.973"/>
</kw>
<status status="PASS" starttime="20210601 11:49:54.214" endtime="20210601 11:50:03.973"/>
</kw>
<msg timestamp="20210601 11:50:03.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:49:54.213" endtime="20210601 11:50:03.974"/>
</kw>
<status status="PASS" starttime="20210601 11:49:54.212" endtime="20210601 11:50:03.974"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:50:03.978" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:50:03.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:50:03.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:50:03.975" endtime="20210601 11:50:03.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:50:03.984" level="INFO"/>
<status status="PASS" starttime="20210601 11:50:03.983" endtime="20210601 11:50:03.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:50:03.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:50:03.984" endtime="20210601 11:50:03.985"/>
</kw>
<status status="PASS" starttime="20210601 11:50:03.975" endtime="20210601 11:50:03.985"/>
</kw>
<msg timestamp="20210601 11:50:03.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:50:03.974" endtime="20210601 11:50:03.985"/>
</kw>
<status status="PASS" starttime="20210601 11:50:03.974" endtime="20210601 11:50:03.986"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:50:03.990" level="INFO">Running command 'ozone sh key put -t RATIS /61085-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:50:17.471" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210601 11:50:03.988" endtime="20210601 11:50:17.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.472" endtime="20210601 11:50:17.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.472" endtime="20210601 11:50:17.472"/>
</kw>
<status status="FAIL" starttime="20210601 11:50:03.987" endtime="20210601 11:50:17.473"/>
</kw>
<msg timestamp="20210601 11:50:17.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210601 11:50:03.987" endtime="20210601 11:50:17.473"/>
</kw>
<status status="FAIL" starttime="20210601 11:50:03.986" endtime="20210601 11:50:17.473"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.473" endtime="20210601 11:50:17.473"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.474" endtime="20210601 11:50:17.474"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.474" endtime="20210601 11:50:17.474"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.474" endtime="20210601 11:50:17.474"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.474" endtime="20210601 11:50:17.474"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.474" endtime="20210601 11:50:17.474"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.474" endtime="20210601 11:50:17.474"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.475" endtime="20210601 11:50:17.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.475" endtime="20210601 11:50:17.475"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.475" endtime="20210601 11:50:17.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.475" endtime="20210601 11:50:17.475"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.475" endtime="20210601 11:50:17.475"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.475" endtime="20210601 11:50:17.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.476" endtime="20210601 11:50:17.476"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.476" endtime="20210601 11:50:17.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.476" endtime="20210601 11:50:17.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.476" endtime="20210601 11:50:17.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.476" endtime="20210601 11:50:17.476"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.477" endtime="20210601 11:50:17.477"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.477" endtime="20210601 11:50:17.477"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.477" endtime="20210601 11:50:17.477"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.477" endtime="20210601 11:50:17.477"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.477" endtime="20210601 11:50:17.477"/>
</kw>
<status status="FAIL" starttime="20210601 11:46:43.943" endtime="20210601 11:50:17.478"/>
</kw>
<status status="FAIL" starttime="20210601 11:46:43.943" endtime="20210601 11:50:17.478"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.478" endtime="20210601 11:50:17.478"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.478" endtime="20210601 11:50:17.478"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.478" endtime="20210601 11:50:17.478"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.478" endtime="20210601 11:50:17.478"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.478" endtime="20210601 11:50:17.478"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.479" endtime="20210601 11:50:17.479"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.479" endtime="20210601 11:50:17.479"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.479" endtime="20210601 11:50:17.479"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.479" endtime="20210601 11:50:17.479"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.480" endtime="20210601 11:50:17.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.480" endtime="20210601 11:50:17.480"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.480" endtime="20210601 11:50:17.480"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.480" endtime="20210601 11:50:17.480"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.480" endtime="20210601 11:50:17.480"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.480" endtime="20210601 11:50:17.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.481" endtime="20210601 11:50:17.481"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.481" endtime="20210601 11:50:17.481"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.481" endtime="20210601 11:50:17.481"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.481" endtime="20210601 11:50:17.481"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.481" endtime="20210601 11:50:17.481"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.481" endtime="20210601 11:50:17.481"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.481" endtime="20210601 11:50:17.482"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.482" endtime="20210601 11:50:17.482"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:50:17.482" endtime="20210601 11:50:17.482"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.482" endtime="20210601 11:50:17.482"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 11:50:17.482" endtime="20210601 11:50:17.482"/>
</kw>
<status status="FAIL" starttime="20210601 11:45:17.473" endtime="20210601 11:50:17.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210601 11:45:17.470" endtime="20210601 11:50:17.483">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210601 11:45:17.434" endtime="20210601 11:50:17.484"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210601 11:50:17.496" level="INFO">${random} = 73296</msg>
<status status="PASS" starttime="20210601 11:50:17.495" endtime="20210601 11:50:17.496"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:50:17.496" level="INFO">${prefix} = 73296</msg>
<status status="PASS" starttime="20210601 11:50:17.496" endtime="20210601 11:50:17.497"/>
</kw>
<status status="PASS" starttime="20210601 11:50:17.495" endtime="20210601 11:50:17.497"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:50:17.503" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:50:17.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:50:17.507" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:50:17.500" endtime="20210601 11:50:17.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:50:17.509" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:50:17.508" endtime="20210601 11:50:17.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:50:17.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:50:17.509" endtime="20210601 11:50:17.510"/>
</kw>
<status status="PASS" starttime="20210601 11:50:17.500" endtime="20210601 11:50:17.510"/>
</kw>
<msg timestamp="20210601 11:50:17.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:50:17.499" endtime="20210601 11:50:17.510"/>
</kw>
<msg timestamp="20210601 11:50:17.511" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:50:17.499" endtime="20210601 11:50:17.511"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:50:17.513" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:50:17.511" endtime="20210601 11:50:17.513"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:50:17.518" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:50:17.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:50:17.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:50:17.515" endtime="20210601 11:50:17.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:50:17.549" level="INFO"/>
<status status="PASS" starttime="20210601 11:50:17.548" endtime="20210601 11:50:17.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:50:17.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:50:17.549" endtime="20210601 11:50:17.550"/>
</kw>
<status status="PASS" starttime="20210601 11:50:17.515" endtime="20210601 11:50:17.550"/>
</kw>
<msg timestamp="20210601 11:50:17.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:50:17.514" endtime="20210601 11:50:17.550"/>
</kw>
<status status="PASS" starttime="20210601 11:50:17.514" endtime="20210601 11:50:17.551"/>
</kw>
<status status="PASS" starttime="20210601 11:50:17.513" endtime="20210601 11:50:17.551"/>
</kw>
<status status="PASS" starttime="20210601 11:50:17.498" endtime="20210601 11:50:17.551"/>
</kw>
<status status="PASS" starttime="20210601 11:50:17.498" endtime="20210601 11:50:17.551"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:50:17.554" level="INFO">Running command 'ozone sh volume info o3://om:9862/73296-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:50:23.286" level="INFO">${rc} = 255</msg>
<msg timestamp="20210601 11:50:23.286" level="INFO">${output} = VOLUME_NOT_FOUND Volume 73296-rpcwoport is not found</msg>
<status status="PASS" starttime="20210601 11:50:17.552" endtime="20210601 11:50:23.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:50:23.288" level="INFO">VOLUME_NOT_FOUND Volume 73296-rpcwoport is not found</msg>
<status status="PASS" starttime="20210601 11:50:23.287" endtime="20210601 11:50:23.288"/>
</kw>
<msg timestamp="20210601 11:50:23.288" level="INFO">${result} = VOLUME_NOT_FOUND Volume 73296-rpcwoport is not found</msg>
<status status="PASS" starttime="20210601 11:50:17.552" endtime="20210601 11:50:23.288"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:50:23.288" endtime="20210601 11:50:23.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:50:23.296" level="INFO">Running command 'ozone sh volume create o3://om:9862/73296-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:50:29.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:50:29.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:50:23.292" endtime="20210601 11:50:29.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:50:29.472" level="INFO"/>
<status status="PASS" starttime="20210601 11:50:29.470" endtime="20210601 11:50:29.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:50:29.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:50:29.472" endtime="20210601 11:50:29.473"/>
</kw>
<status status="PASS" starttime="20210601 11:50:23.291" endtime="20210601 11:50:29.474"/>
</kw>
<msg timestamp="20210601 11:50:29.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:50:23.290" endtime="20210601 11:50:29.474"/>
</kw>
<msg timestamp="20210601 11:50:29.474" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210601 11:50:23.289" endtime="20210601 11:50:29.474"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:50:29.475" endtime="20210601 11:50:29.475"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:50:29.483" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="73296-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:50:35.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:50:35.842" level="INFO">${output} = {
  "metadata": {},
  "name": "73296-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210601 11:50:29.480" endtime="20210601 11:50:35.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:50:35.843" level="INFO">{
  "metadata": {},
  "name": "73296-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-01T11:50:29.403Z",
  "modificationTime": "2021-06-01T11:50:29.403Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210601 11:50:35.842" endtime="20210601 11:50:35.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:50:35.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:50:35.843" endtime="20210601 11:50:35.843"/>
</kw>
<status status="PASS" starttime="20210601 11:50:29.477" endtime="20210601 11:50:35.844"/>
</kw>
<msg timestamp="20210601 11:50:35.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:50:29.476" endtime="20210601 11:50:35.844"/>
</kw>
<msg timestamp="20210601 11:50:35.844" level="INFO">${result} = {
  "metadata": {},
  "name": "73296-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210601 11:50:29.475" endtime="20210601 11:50:35.844"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:50:35.844" endtime="20210601 11:50:35.845"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:50:35.848" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="73296-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:50:39.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:50:39.697" level="INFO">${output} = {
  "metadata": {},
  "name": "73296-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210601 11:50:35.846" endtime="20210601 11:50:39.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:50:39.699" level="INFO">{
  "metadata": {},
  "name": "73296-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-01T11:50:29.403Z",
  "modificationTime": "2021-06-01T11:50:29.403Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210601 11:50:39.698" endtime="20210601 11:50:39.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:50:39.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:50:39.699" endtime="20210601 11:50:39.700"/>
</kw>
<status status="PASS" starttime="20210601 11:50:35.846" endtime="20210601 11:50:39.700"/>
</kw>
<msg timestamp="20210601 11:50:39.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:50:35.846" endtime="20210601 11:50:39.700"/>
</kw>
<msg timestamp="20210601 11:50:39.701" level="INFO">${result} = {
  "metadata": {},
  "name": "73296-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210601 11:50:35.845" endtime="20210601 11:50:39.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 11:50:39.701" endtime="20210601 11:50:39.701"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:50:39.706" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/73296-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:50:44.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:50:44.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:50:39.703" endtime="20210601 11:50:44.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:50:44.958" level="INFO"/>
<status status="PASS" starttime="20210601 11:50:44.957" endtime="20210601 11:50:44.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:50:44.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:50:44.958" endtime="20210601 11:50:44.959"/>
</kw>
<status status="PASS" starttime="20210601 11:50:39.702" endtime="20210601 11:50:44.960"/>
</kw>
<msg timestamp="20210601 11:50:44.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:50:39.702" endtime="20210601 11:50:44.960"/>
</kw>
<status status="PASS" starttime="20210601 11:50:39.701" endtime="20210601 11:50:44.961"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:50:44.968" level="INFO">Running command 'ozone sh volume info o3://om:9862/73296-rpcwoport | jq -r '. | select(.name=="73296-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:50:51.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:50:51.416" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210601 11:50:44.965" endtime="20210601 11:50:51.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:50:51.417" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210601 11:50:51.416" endtime="20210601 11:50:51.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:50:51.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:50:51.417" endtime="20210601 11:50:51.418"/>
</kw>
<status status="PASS" starttime="20210601 11:50:44.964" endtime="20210601 11:50:51.418"/>
</kw>
<msg timestamp="20210601 11:50:51.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:50:44.963" endtime="20210601 11:50:51.418"/>
</kw>
<msg timestamp="20210601 11:50:51.418" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210601 11:50:44.961" endtime="20210601 11:50:51.418"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:50:51.419" endtime="20210601 11:50:51.419"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:50:51.423" level="INFO">Running command 'ozone sh bucket create o3://om:9862/73296-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:50:57.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:50:57.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:50:51.421" endtime="20210601 11:50:57.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:50:57.788" level="INFO"/>
<status status="PASS" starttime="20210601 11:50:57.787" endtime="20210601 11:50:57.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:50:57.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:50:57.788" endtime="20210601 11:50:57.789"/>
</kw>
<status status="PASS" starttime="20210601 11:50:51.420" endtime="20210601 11:50:57.789"/>
</kw>
<msg timestamp="20210601 11:50:57.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:50:51.420" endtime="20210601 11:50:57.789"/>
</kw>
<status status="PASS" starttime="20210601 11:50:51.419" endtime="20210601 11:50:57.790"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:50:57.793" level="INFO">Running command 'ozone sh bucket info o3://om:9862/73296-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:51:02.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:51:02.323" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210601 11:50:57.791" endtime="20210601 11:51:02.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:51:02.324" level="INFO">DISK</msg>
<status status="PASS" starttime="20210601 11:51:02.323" endtime="20210601 11:51:02.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:51:02.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:51:02.325" endtime="20210601 11:51:02.325"/>
</kw>
<status status="PASS" starttime="20210601 11:50:57.791" endtime="20210601 11:51:02.326"/>
</kw>
<msg timestamp="20210601 11:51:02.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:50:57.791" endtime="20210601 11:51:02.326"/>
</kw>
<msg timestamp="20210601 11:51:02.326" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210601 11:50:57.790" endtime="20210601 11:51:02.326"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:51:02.326" endtime="20210601 11:51:02.326"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:51:02.330" level="INFO">Running command 'ozone sh bucket info o3://om:9862/73296-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:51:08.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:51:08.541" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210601 11:51:02.328" endtime="20210601 11:51:08.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:51:08.543" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210601 11:51:08.542" endtime="20210601 11:51:08.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:51:08.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:51:08.544" endtime="20210601 11:51:08.545"/>
</kw>
<status status="PASS" starttime="20210601 11:51:02.328" endtime="20210601 11:51:08.545"/>
</kw>
<msg timestamp="20210601 11:51:08.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:51:02.328" endtime="20210601 11:51:08.546"/>
</kw>
<msg timestamp="20210601 11:51:08.546" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210601 11:51:02.327" endtime="20210601 11:51:08.546"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:51:08.546" endtime="20210601 11:51:08.547"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:51:08.552" level="INFO">Running command 'ozone sh bucket info o3://om:9862/73296-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:51:14.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:51:14.607" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210601 11:51:08.549" endtime="20210601 11:51:14.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:51:14.610" level="INFO">100</msg>
<status status="PASS" starttime="20210601 11:51:14.608" endtime="20210601 11:51:14.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:51:14.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:51:14.610" endtime="20210601 11:51:14.611"/>
</kw>
<status status="PASS" starttime="20210601 11:51:08.548" endtime="20210601 11:51:14.612"/>
</kw>
<msg timestamp="20210601 11:51:14.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:51:08.548" endtime="20210601 11:51:14.612"/>
</kw>
<msg timestamp="20210601 11:51:14.613" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210601 11:51:08.547" endtime="20210601 11:51:14.613"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:51:14.613" endtime="20210601 11:51:14.614"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:51:14.620" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/73296-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:51:20.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:51:20.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:51:14.618" endtime="20210601 11:51:20.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:51:20.601" level="INFO"/>
<status status="PASS" starttime="20210601 11:51:20.600" endtime="20210601 11:51:20.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:51:20.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:51:20.601" endtime="20210601 11:51:20.602"/>
</kw>
<status status="PASS" starttime="20210601 11:51:14.617" endtime="20210601 11:51:20.602"/>
</kw>
<msg timestamp="20210601 11:51:20.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:51:14.617" endtime="20210601 11:51:20.602"/>
</kw>
<status status="PASS" starttime="20210601 11:51:14.614" endtime="20210601 11:51:20.602"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:51:20.608" level="INFO">Running command 'ozone sh bucket info o3://om:9862/73296-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:51:26.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:51:26.962" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210601 11:51:20.606" endtime="20210601 11:51:26.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:51:26.966" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210601 11:51:26.963" endtime="20210601 11:51:26.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:51:26.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:51:26.967" endtime="20210601 11:51:26.969"/>
</kw>
<status status="PASS" starttime="20210601 11:51:20.604" endtime="20210601 11:51:26.969"/>
</kw>
<msg timestamp="20210601 11:51:26.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:51:20.604" endtime="20210601 11:51:26.970"/>
</kw>
<msg timestamp="20210601 11:51:26.970" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210601 11:51:20.602" endtime="20210601 11:51:26.970"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:51:26.970" endtime="20210601 11:51:26.971"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:51:26.977" level="INFO">Running command 'ozone sh bucket info o3://om:9862/73296-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:51:33.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:51:33.397" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210601 11:51:26.975" endtime="20210601 11:51:33.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:51:33.400" level="INFO">1000</msg>
<status status="PASS" starttime="20210601 11:51:33.398" endtime="20210601 11:51:33.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:51:33.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:51:33.400" endtime="20210601 11:51:33.401"/>
</kw>
<status status="PASS" starttime="20210601 11:51:26.974" endtime="20210601 11:51:33.402"/>
</kw>
<msg timestamp="20210601 11:51:33.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:51:26.973" endtime="20210601 11:51:33.402"/>
</kw>
<msg timestamp="20210601 11:51:33.403" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210601 11:51:26.972" endtime="20210601 11:51:33.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:51:33.403" endtime="20210601 11:51:33.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:51:33.410" level="INFO">Running command 'ozone sh bucket list o3://om:9862/73296-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:51:39.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:51:39.744" level="INFO">${output} = 73296-rpcwoport</msg>
<status status="PASS" starttime="20210601 11:51:33.408" endtime="20210601 11:51:39.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:51:39.745" level="INFO">73296-rpcwoport</msg>
<status status="PASS" starttime="20210601 11:51:39.745" endtime="20210601 11:51:39.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:51:39.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:51:39.746" endtime="20210601 11:51:39.747"/>
</kw>
<status status="PASS" starttime="20210601 11:51:33.407" endtime="20210601 11:51:39.747"/>
</kw>
<msg timestamp="20210601 11:51:39.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:51:33.407" endtime="20210601 11:51:39.747"/>
</kw>
<msg timestamp="20210601 11:51:39.748" level="INFO">${result} = 73296-rpcwoport</msg>
<status status="PASS" starttime="20210601 11:51:33.405" endtime="20210601 11:51:39.748"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 11:51:39.748" endtime="20210601 11:51:39.749"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:51:39.774" level="INFO">Running command 'ozone sh key put o3://om:9862/73296-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:54:49.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:54:49.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:51:39.771" endtime="20210601 11:54:49.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:54:49.339" level="INFO"/>
<status status="PASS" starttime="20210601 11:54:49.335" endtime="20210601 11:54:49.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:54:49.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:54:49.339" endtime="20210601 11:54:49.340"/>
</kw>
<status status="PASS" starttime="20210601 11:51:39.751" endtime="20210601 11:54:49.341"/>
</kw>
<msg timestamp="20210601 11:54:49.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:51:39.751" endtime="20210601 11:54:49.341"/>
</kw>
<status status="PASS" starttime="20210601 11:51:39.750" endtime="20210601 11:54:49.341"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:54:49.346" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:54:49.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:54:49.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:54:49.344" endtime="20210601 11:54:49.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:54:49.350" level="INFO"/>
<status status="PASS" starttime="20210601 11:54:49.349" endtime="20210601 11:54:49.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:54:49.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:54:49.350" endtime="20210601 11:54:49.351"/>
</kw>
<status status="PASS" starttime="20210601 11:54:49.344" endtime="20210601 11:54:49.351"/>
</kw>
<msg timestamp="20210601 11:54:49.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:54:49.343" endtime="20210601 11:54:49.352"/>
</kw>
<status status="PASS" starttime="20210601 11:54:49.341" endtime="20210601 11:54:49.352"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:54:49.356" level="INFO">Running command 'ozone sh key get o3://om:9862/73296-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:54:59.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:54:59.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:54:49.353" endtime="20210601 11:54:59.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:54:59.473" level="INFO"/>
<status status="PASS" starttime="20210601 11:54:59.472" endtime="20210601 11:54:59.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:54:59.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:54:59.473" endtime="20210601 11:54:59.474"/>
</kw>
<status status="PASS" starttime="20210601 11:54:49.353" endtime="20210601 11:54:59.474"/>
</kw>
<msg timestamp="20210601 11:54:59.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:54:49.352" endtime="20210601 11:54:59.475"/>
</kw>
<status status="PASS" starttime="20210601 11:54:49.352" endtime="20210601 11:54:59.475"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:54:59.482" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:54:59.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:54:59.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:54:59.476" endtime="20210601 11:54:59.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:54:59.486" level="INFO"/>
<status status="PASS" starttime="20210601 11:54:59.485" endtime="20210601 11:54:59.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:54:59.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:54:59.486" endtime="20210601 11:54:59.487"/>
</kw>
<status status="PASS" starttime="20210601 11:54:59.476" endtime="20210601 11:54:59.487"/>
</kw>
<msg timestamp="20210601 11:54:59.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:54:59.476" endtime="20210601 11:54:59.488"/>
</kw>
<status status="PASS" starttime="20210601 11:54:59.475" endtime="20210601 11:54:59.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:54:59.492" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/73296-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:55:17.498" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210601 11:54:59.490" endtime="20210601 11:55:17.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.499" endtime="20210601 11:55:17.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.499" endtime="20210601 11:55:17.499"/>
</kw>
<status status="FAIL" starttime="20210601 11:54:59.489" endtime="20210601 11:55:17.499"/>
</kw>
<msg timestamp="20210601 11:55:17.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210601 11:54:59.489" endtime="20210601 11:55:17.500"/>
</kw>
<status status="FAIL" starttime="20210601 11:54:59.488" endtime="20210601 11:55:17.500"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.500" endtime="20210601 11:55:17.500"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.500" endtime="20210601 11:55:17.500"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.500" endtime="20210601 11:55:17.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.500" endtime="20210601 11:55:17.501"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.501" endtime="20210601 11:55:17.501"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.501" endtime="20210601 11:55:17.501"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.501" endtime="20210601 11:55:17.501"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.501" endtime="20210601 11:55:17.501"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.501" endtime="20210601 11:55:17.501"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.501" endtime="20210601 11:55:17.501"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.502" endtime="20210601 11:55:17.502"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.502" endtime="20210601 11:55:17.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.502" endtime="20210601 11:55:17.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.502" endtime="20210601 11:55:17.502"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.502" endtime="20210601 11:55:17.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.502" endtime="20210601 11:55:17.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.503" endtime="20210601 11:55:17.503"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.503" endtime="20210601 11:55:17.503"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.503" endtime="20210601 11:55:17.503"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.503" endtime="20210601 11:55:17.503"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.503" endtime="20210601 11:55:17.503"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.503" endtime="20210601 11:55:17.504"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.505" endtime="20210601 11:55:17.505"/>
</kw>
<status status="FAIL" starttime="20210601 11:51:39.749" endtime="20210601 11:55:17.505"/>
</kw>
<status status="FAIL" starttime="20210601 11:51:39.749" endtime="20210601 11:55:17.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.505" endtime="20210601 11:55:17.505"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.506" endtime="20210601 11:55:17.506"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.506" endtime="20210601 11:55:17.506"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.506" endtime="20210601 11:55:17.506"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.506" endtime="20210601 11:55:17.506"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.506" endtime="20210601 11:55:17.506"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.506" endtime="20210601 11:55:17.506"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.507" endtime="20210601 11:55:17.507"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.507" endtime="20210601 11:55:17.507"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.507" endtime="20210601 11:55:17.507"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.507" endtime="20210601 11:55:17.507"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.507" endtime="20210601 11:55:17.507"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.507" endtime="20210601 11:55:17.508"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.508" endtime="20210601 11:55:17.508"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.508" endtime="20210601 11:55:17.508"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.508" endtime="20210601 11:55:17.508"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.508" endtime="20210601 11:55:17.508"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.508" endtime="20210601 11:55:17.508"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.508" endtime="20210601 11:55:17.509"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.509" endtime="20210601 11:55:17.509"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.509" endtime="20210601 11:55:17.509"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.509" endtime="20210601 11:55:17.509"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.509" endtime="20210601 11:55:17.509"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 11:55:17.510" endtime="20210601 11:55:17.510"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.510" endtime="20210601 11:55:17.510"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 11:55:17.510" endtime="20210601 11:55:17.510"/>
</kw>
<status status="FAIL" starttime="20210601 11:50:17.551" endtime="20210601 11:55:17.510"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210601 11:50:17.497" endtime="20210601 11:55:17.511">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:55:17.517" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:55:17.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:55:17.522" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:55:17.515" endtime="20210601 11:55:17.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:55:17.524" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:55:17.522" endtime="20210601 11:55:17.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:55:17.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:55:17.524" endtime="20210601 11:55:17.525"/>
</kw>
<status status="PASS" starttime="20210601 11:55:17.514" endtime="20210601 11:55:17.525"/>
</kw>
<msg timestamp="20210601 11:55:17.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:55:17.514" endtime="20210601 11:55:17.526"/>
</kw>
<msg timestamp="20210601 11:55:17.526" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:55:17.513" endtime="20210601 11:55:17.526"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:55:17.528" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:55:17.527" endtime="20210601 11:55:17.528"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:55:17.533" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:55:17.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:55:17.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:55:17.531" endtime="20210601 11:55:17.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:55:17.568" level="INFO"/>
<status status="PASS" starttime="20210601 11:55:17.568" endtime="20210601 11:55:17.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:55:17.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:55:17.568" endtime="20210601 11:55:17.569"/>
</kw>
<status status="PASS" starttime="20210601 11:55:17.530" endtime="20210601 11:55:17.569"/>
</kw>
<msg timestamp="20210601 11:55:17.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:55:17.530" endtime="20210601 11:55:17.570"/>
</kw>
<status status="PASS" starttime="20210601 11:55:17.529" endtime="20210601 11:55:17.570"/>
</kw>
<status status="PASS" starttime="20210601 11:55:17.528" endtime="20210601 11:55:17.570"/>
</kw>
<status status="PASS" starttime="20210601 11:55:17.513" endtime="20210601 11:55:17.570"/>
</kw>
<status status="PASS" starttime="20210601 11:55:17.512" endtime="20210601 11:55:17.570"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:55:17.575" level="INFO">Running command 'ozone sh volume create o3://om:9862/73296-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:55:23.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:55:23.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:55:17.573" endtime="20210601 11:55:23.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:55:23.669" level="INFO"/>
<status status="PASS" starttime="20210601 11:55:23.668" endtime="20210601 11:55:23.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:55:23.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:55:23.669" endtime="20210601 11:55:23.670"/>
</kw>
<status status="PASS" starttime="20210601 11:55:17.572" endtime="20210601 11:55:23.670"/>
</kw>
<msg timestamp="20210601 11:55:23.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:55:17.572" endtime="20210601 11:55:23.670"/>
</kw>
<status status="PASS" starttime="20210601 11:55:17.571" endtime="20210601 11:55:23.671"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:55:23.675" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/73296-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:55:30.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:55:30.138" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 11:55:23.673" endtime="20210601 11:55:30.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:55:30.140" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210601 11:55:30.139" endtime="20210601 11:55:30.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:55:30.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:55:30.141" endtime="20210601 11:55:30.141"/>
</kw>
<status status="PASS" starttime="20210601 11:55:23.672" endtime="20210601 11:55:30.142"/>
</kw>
<msg timestamp="20210601 11:55:30.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:55:23.671" endtime="20210601 11:55:30.142"/>
</kw>
<msg timestamp="20210601 11:55:30.143" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 11:55:23.671" endtime="20210601 11:55:30.143"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 11:55:30.143" endtime="20210601 11:55:30.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:55:30.152" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/73296-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:55:36.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:55:36.044" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210601 11:55:30.149" endtime="20210601 11:55:36.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:55:36.045" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210601 11:55:36.044" endtime="20210601 11:55:36.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:55:36.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:55:36.045" endtime="20210601 11:55:36.046"/>
</kw>
<status status="PASS" starttime="20210601 11:55:30.148" endtime="20210601 11:55:36.047"/>
</kw>
<msg timestamp="20210601 11:55:36.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:55:30.147" endtime="20210601 11:55:36.047"/>
</kw>
<msg timestamp="20210601 11:55:36.047" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210601 11:55:30.146" endtime="20210601 11:55:36.047"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:55:36.052" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/73296-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:55:42.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:55:42.658" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 11:55:36.049" endtime="20210601 11:55:42.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:55:42.660" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210601 11:55:42.659" endtime="20210601 11:55:42.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:55:42.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:55:42.660" endtime="20210601 11:55:42.661"/>
</kw>
<status status="PASS" starttime="20210601 11:55:36.049" endtime="20210601 11:55:42.661"/>
</kw>
<msg timestamp="20210601 11:55:42.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:55:36.048" endtime="20210601 11:55:42.661"/>
</kw>
<msg timestamp="20210601 11:55:42.662" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 11:55:36.048" endtime="20210601 11:55:42.662"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 11:55:42.662" endtime="20210601 11:55:42.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:55:42.669" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/73296-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:55:47.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:55:47.931" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210601 11:55:42.666" endtime="20210601 11:55:47.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:55:47.933" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210601 11:55:47.932" endtime="20210601 11:55:47.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:55:47.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:55:47.934" endtime="20210601 11:55:47.936"/>
</kw>
<status status="PASS" starttime="20210601 11:55:42.665" endtime="20210601 11:55:47.937"/>
</kw>
<msg timestamp="20210601 11:55:47.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:55:42.664" endtime="20210601 11:55:47.937"/>
</kw>
<msg timestamp="20210601 11:55:47.938" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210601 11:55:42.663" endtime="20210601 11:55:47.938"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:55:47.948" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/73296-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:55:54.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:55:54.108" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 11:55:47.942" endtime="20210601 11:55:54.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:55:54.110" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210601 11:55:54.109" endtime="20210601 11:55:54.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:55:54.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:55:54.110" endtime="20210601 11:55:54.110"/>
</kw>
<status status="PASS" starttime="20210601 11:55:47.941" endtime="20210601 11:55:54.111"/>
</kw>
<msg timestamp="20210601 11:55:54.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:55:47.940" endtime="20210601 11:55:54.111"/>
</kw>
<msg timestamp="20210601 11:55:54.111" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 11:55:47.938" endtime="20210601 11:55:54.111"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 11:55:54.111" endtime="20210601 11:55:54.112"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:55:54.124" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/73296-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:55:59.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:55:59.752" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210601 11:55:54.114" endtime="20210601 11:55:59.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:55:59.753" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210601 11:55:59.753" endtime="20210601 11:55:59.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:55:59.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:55:59.754" endtime="20210601 11:55:59.754"/>
</kw>
<status status="PASS" starttime="20210601 11:55:54.113" endtime="20210601 11:55:59.755"/>
</kw>
<msg timestamp="20210601 11:55:59.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:55:54.113" endtime="20210601 11:55:59.755"/>
</kw>
<msg timestamp="20210601 11:55:59.755" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210601 11:55:54.112" endtime="20210601 11:55:59.755"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:55:59.760" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/73296-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:56:05.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:56:05.850" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210601 11:55:59.757" endtime="20210601 11:56:05.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:56:05.853" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210601 11:56:05.851" endtime="20210601 11:56:05.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:56:05.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:56:05.854" endtime="20210601 11:56:05.855"/>
</kw>
<status status="PASS" starttime="20210601 11:55:59.757" endtime="20210601 11:56:05.855"/>
</kw>
<msg timestamp="20210601 11:56:05.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:55:59.756" endtime="20210601 11:56:05.856"/>
</kw>
<msg timestamp="20210601 11:56:05.857" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210601 11:55:59.756" endtime="20210601 11:56:05.857"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 11:56:05.857" endtime="20210601 11:56:05.858"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 11:56:05.858" endtime="20210601 11:56:05.860"/>
</kw>
<status status="PASS" starttime="20210601 11:55:17.570" endtime="20210601 11:56:05.860"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210601 11:55:17.512" endtime="20210601 11:56:05.860"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:56:05.869" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:56:05.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:56:05.872" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:56:05.865" endtime="20210601 11:56:05.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:56:05.873" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:56:05.873" endtime="20210601 11:56:05.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:56:05.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:56:05.874" endtime="20210601 11:56:05.874"/>
</kw>
<status status="PASS" starttime="20210601 11:56:05.865" endtime="20210601 11:56:05.875"/>
</kw>
<msg timestamp="20210601 11:56:05.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:56:05.864" endtime="20210601 11:56:05.875"/>
</kw>
<msg timestamp="20210601 11:56:05.876" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:56:05.864" endtime="20210601 11:56:05.876"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:56:05.877" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:56:05.876" endtime="20210601 11:56:05.877"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:56:05.881" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:56:05.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:56:05.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:56:05.879" endtime="20210601 11:56:05.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:56:05.893" level="INFO"/>
<status status="PASS" starttime="20210601 11:56:05.891" endtime="20210601 11:56:05.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:56:05.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:56:05.893" endtime="20210601 11:56:05.894"/>
</kw>
<status status="PASS" starttime="20210601 11:56:05.878" endtime="20210601 11:56:05.894"/>
</kw>
<msg timestamp="20210601 11:56:05.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:56:05.878" endtime="20210601 11:56:05.894"/>
</kw>
<status status="PASS" starttime="20210601 11:56:05.877" endtime="20210601 11:56:05.895"/>
</kw>
<status status="PASS" starttime="20210601 11:56:05.877" endtime="20210601 11:56:05.895"/>
</kw>
<status status="PASS" starttime="20210601 11:56:05.863" endtime="20210601 11:56:05.895"/>
</kw>
<status status="PASS" starttime="20210601 11:56:05.863" endtime="20210601 11:56:05.895"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:56:05.902" level="INFO">Running command 'ozone sh bucket create o3://om:9862/73296-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:56:11.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:56:11.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:56:05.899" endtime="20210601 11:56:11.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:56:11.793" level="INFO"/>
<status status="PASS" starttime="20210601 11:56:11.790" endtime="20210601 11:56:11.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:56:11.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:56:11.793" endtime="20210601 11:56:11.794"/>
</kw>
<status status="PASS" starttime="20210601 11:56:05.899" endtime="20210601 11:56:11.795"/>
</kw>
<msg timestamp="20210601 11:56:11.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:56:05.898" endtime="20210601 11:56:11.796"/>
</kw>
<status status="PASS" starttime="20210601 11:56:05.898" endtime="20210601 11:56:11.796"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:56:11.803" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/73296-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:56:17.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:56:17.792" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 11:56:11.800" endtime="20210601 11:56:17.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:56:17.793" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210601 11:56:17.792" endtime="20210601 11:56:17.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:56:17.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:56:17.793" endtime="20210601 11:56:17.793"/>
</kw>
<status status="PASS" starttime="20210601 11:56:11.799" endtime="20210601 11:56:17.794"/>
</kw>
<msg timestamp="20210601 11:56:17.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:56:11.798" endtime="20210601 11:56:17.794"/>
</kw>
<msg timestamp="20210601 11:56:17.794" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 11:56:11.796" endtime="20210601 11:56:17.794"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 11:56:17.795" endtime="20210601 11:56:17.795"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:56:17.800" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/73296-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:56:24.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:56:24.131" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210601 11:56:17.797" endtime="20210601 11:56:24.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:56:24.133" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210601 11:56:24.132" endtime="20210601 11:56:24.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:56:24.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:56:24.134" endtime="20210601 11:56:24.135"/>
</kw>
<status status="PASS" starttime="20210601 11:56:17.796" endtime="20210601 11:56:24.135"/>
</kw>
<msg timestamp="20210601 11:56:24.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:56:17.796" endtime="20210601 11:56:24.135"/>
</kw>
<msg timestamp="20210601 11:56:24.136" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210601 11:56:17.795" endtime="20210601 11:56:24.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:56:24.141" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/73296-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:56:29.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:56:29.267" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 11:56:24.138" endtime="20210601 11:56:29.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:56:29.269" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210601 11:56:29.268" endtime="20210601 11:56:29.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:56:29.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:56:29.269" endtime="20210601 11:56:29.269"/>
</kw>
<status status="PASS" starttime="20210601 11:56:24.137" endtime="20210601 11:56:29.270"/>
</kw>
<msg timestamp="20210601 11:56:29.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:56:24.137" endtime="20210601 11:56:29.270"/>
</kw>
<msg timestamp="20210601 11:56:29.270" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 11:56:24.136" endtime="20210601 11:56:29.270"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 11:56:29.270" endtime="20210601 11:56:29.271"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:56:29.275" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/73296-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:56:34.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:56:34.812" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210601 11:56:29.273" endtime="20210601 11:56:34.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:56:34.813" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210601 11:56:34.812" endtime="20210601 11:56:34.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:56:34.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:56:34.813" endtime="20210601 11:56:34.814"/>
</kw>
<status status="PASS" starttime="20210601 11:56:29.272" endtime="20210601 11:56:34.814"/>
</kw>
<msg timestamp="20210601 11:56:34.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:56:29.272" endtime="20210601 11:56:34.814"/>
</kw>
<msg timestamp="20210601 11:56:34.815" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210601 11:56:29.271" endtime="20210601 11:56:34.815"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:56:34.821" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/73296-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:56:41.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:56:41.949" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 11:56:34.818" endtime="20210601 11:56:41.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:56:41.950" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210601 11:56:41.949" endtime="20210601 11:56:41.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:56:41.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:56:41.951" endtime="20210601 11:56:41.952"/>
</kw>
<status status="PASS" starttime="20210601 11:56:34.817" endtime="20210601 11:56:41.952"/>
</kw>
<msg timestamp="20210601 11:56:41.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:56:34.817" endtime="20210601 11:56:41.952"/>
</kw>
<msg timestamp="20210601 11:56:41.953" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 11:56:34.815" endtime="20210601 11:56:41.953"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 11:56:41.953" endtime="20210601 11:56:41.954"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:56:41.959" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/73296-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:56:47.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:56:47.984" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210601 11:56:41.956" endtime="20210601 11:56:47.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:56:47.986" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210601 11:56:47.985" endtime="20210601 11:56:47.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:56:47.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:56:47.987" endtime="20210601 11:56:47.988"/>
</kw>
<status status="PASS" starttime="20210601 11:56:41.955" endtime="20210601 11:56:47.988"/>
</kw>
<msg timestamp="20210601 11:56:47.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:56:41.955" endtime="20210601 11:56:47.989"/>
</kw>
<msg timestamp="20210601 11:56:47.989" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210601 11:56:41.954" endtime="20210601 11:56:47.989"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:56:47.995" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/73296-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:56:53.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:56:53.960" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210601 11:56:47.992" endtime="20210601 11:56:53.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:56:53.961" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210601 11:56:53.960" endtime="20210601 11:56:53.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:56:53.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:56:53.962" endtime="20210601 11:56:53.962"/>
</kw>
<status status="PASS" starttime="20210601 11:56:47.991" endtime="20210601 11:56:53.963"/>
</kw>
<msg timestamp="20210601 11:56:53.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:56:47.991" endtime="20210601 11:56:53.963"/>
</kw>
<msg timestamp="20210601 11:56:53.963" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210601 11:56:47.990" endtime="20210601 11:56:53.964"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 11:56:53.964" endtime="20210601 11:56:53.964"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 11:56:53.964" endtime="20210601 11:56:53.965"/>
</kw>
<status status="PASS" starttime="20210601 11:56:05.897" endtime="20210601 11:56:53.965"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210601 11:56:05.862" endtime="20210601 11:56:53.965"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:56:53.974" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:56:53.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:56:53.978" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:56:53.972" endtime="20210601 11:56:53.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:56:53.980" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:56:53.979" endtime="20210601 11:56:53.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:56:53.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:56:53.980" endtime="20210601 11:56:53.982"/>
</kw>
<status status="PASS" starttime="20210601 11:56:53.971" endtime="20210601 11:56:53.982"/>
</kw>
<msg timestamp="20210601 11:56:53.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:56:53.971" endtime="20210601 11:56:53.983"/>
</kw>
<msg timestamp="20210601 11:56:53.983" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:56:53.970" endtime="20210601 11:56:53.984"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:56:53.985" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:56:53.984" endtime="20210601 11:56:53.985"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:56:53.991" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:56:53.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:56:53.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:56:53.989" endtime="20210601 11:56:53.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:56:54.000" level="INFO"/>
<status status="PASS" starttime="20210601 11:56:53.999" endtime="20210601 11:56:54.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:56:54.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:56:54.000" endtime="20210601 11:56:54.002"/>
</kw>
<status status="PASS" starttime="20210601 11:56:53.988" endtime="20210601 11:56:54.002"/>
</kw>
<msg timestamp="20210601 11:56:54.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:56:53.987" endtime="20210601 11:56:54.003"/>
</kw>
<status status="PASS" starttime="20210601 11:56:53.986" endtime="20210601 11:56:54.003"/>
</kw>
<status status="PASS" starttime="20210601 11:56:53.985" endtime="20210601 11:56:54.003"/>
</kw>
<status status="PASS" starttime="20210601 11:56:53.969" endtime="20210601 11:56:54.003"/>
</kw>
<status status="PASS" starttime="20210601 11:56:53.969" endtime="20210601 11:56:54.003"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:56:54.008" level="INFO">Running command 'ozone sh key put o3://om:9862/73296-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:00:04.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:00:04.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:56:54.006" endtime="20210601 12:00:04.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:00:04.191" level="INFO"/>
<status status="PASS" starttime="20210601 12:00:04.191" endtime="20210601 12:00:04.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:00:04.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:00:04.192" endtime="20210601 12:00:04.192"/>
</kw>
<status status="PASS" starttime="20210601 11:56:54.005" endtime="20210601 12:00:04.193"/>
</kw>
<msg timestamp="20210601 12:00:04.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:56:54.005" endtime="20210601 12:00:04.193"/>
</kw>
<status status="PASS" starttime="20210601 11:56:54.004" endtime="20210601 12:00:04.193"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:00:04.197" level="INFO">Running command 'ozone sh key getacl o3://om:9862/73296-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:00:10.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:00:10.318" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 12:00:04.195" endtime="20210601 12:00:10.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:00:10.319" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210601 12:00:10.318" endtime="20210601 12:00:10.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:00:10.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:00:10.319" endtime="20210601 12:00:10.320"/>
</kw>
<status status="PASS" starttime="20210601 12:00:04.194" endtime="20210601 12:00:10.321"/>
</kw>
<msg timestamp="20210601 12:00:10.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:00:04.194" endtime="20210601 12:00:10.321"/>
</kw>
<msg timestamp="20210601 12:00:10.321" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 12:00:04.193" endtime="20210601 12:00:10.322"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 12:00:10.322" endtime="20210601 12:00:10.323"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:00:10.329" level="INFO">Running command 'ozone sh key addacl o3://om:9862/73296-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:00:15.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:00:15.937" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 12:00:10.326" endtime="20210601 12:00:15.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:00:15.938" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 12:00:15.937" endtime="20210601 12:00:15.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:00:15.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:00:15.938" endtime="20210601 12:00:15.938"/>
</kw>
<status status="PASS" starttime="20210601 12:00:10.325" endtime="20210601 12:00:15.939"/>
</kw>
<msg timestamp="20210601 12:00:15.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:00:10.324" endtime="20210601 12:00:15.939"/>
</kw>
<msg timestamp="20210601 12:00:15.939" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210601 12:00:10.323" endtime="20210601 12:00:15.939"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:00:15.943" level="INFO">Running command 'ozone sh key getacl o3://om:9862/73296-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:00:21.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:00:21.823" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 12:00:15.940" endtime="20210601 12:00:21.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:00:21.826" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210601 12:00:21.824" endtime="20210601 12:00:21.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:00:21.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:00:21.827" endtime="20210601 12:00:21.828"/>
</kw>
<status status="PASS" starttime="20210601 12:00:15.940" endtime="20210601 12:00:21.829"/>
</kw>
<msg timestamp="20210601 12:00:21.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:00:15.940" endtime="20210601 12:00:21.830"/>
</kw>
<msg timestamp="20210601 12:00:21.830" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 12:00:15.939" endtime="20210601 12:00:21.830"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 12:00:21.831" endtime="20210601 12:00:21.833"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:00:21.840" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/73296-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:00:27.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:00:27.275" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210601 12:00:21.837" endtime="20210601 12:00:27.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:00:27.277" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210601 12:00:27.276" endtime="20210601 12:00:27.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:00:27.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:00:27.278" endtime="20210601 12:00:27.279"/>
</kw>
<status status="PASS" starttime="20210601 12:00:21.836" endtime="20210601 12:00:27.279"/>
</kw>
<msg timestamp="20210601 12:00:27.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:00:21.835" endtime="20210601 12:00:27.280"/>
</kw>
<msg timestamp="20210601 12:00:27.281" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210601 12:00:21.833" endtime="20210601 12:00:27.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:00:27.288" level="INFO">Running command 'ozone sh key getacl o3://om:9862/73296-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:00:33.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:00:33.621" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 12:00:27.284" endtime="20210601 12:00:33.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:00:33.623" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210601 12:00:33.622" endtime="20210601 12:00:33.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:00:33.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:00:33.624" endtime="20210601 12:00:33.625"/>
</kw>
<status status="PASS" starttime="20210601 12:00:27.283" endtime="20210601 12:00:33.625"/>
</kw>
<msg timestamp="20210601 12:00:33.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:00:27.282" endtime="20210601 12:00:33.625"/>
</kw>
<msg timestamp="20210601 12:00:33.626" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 12:00:27.281" endtime="20210601 12:00:33.626"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 12:00:33.626" endtime="20210601 12:00:33.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:00:33.632" level="INFO">Running command 'ozone sh key setacl o3://om:9862/73296-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:00:39.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:00:39.304" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210601 12:00:33.630" endtime="20210601 12:00:39.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:00:39.306" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210601 12:00:39.305" endtime="20210601 12:00:39.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:00:39.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:00:39.306" endtime="20210601 12:00:39.307"/>
</kw>
<status status="PASS" starttime="20210601 12:00:33.629" endtime="20210601 12:00:39.308"/>
</kw>
<msg timestamp="20210601 12:00:39.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:00:33.628" endtime="20210601 12:00:39.309"/>
</kw>
<msg timestamp="20210601 12:00:39.309" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210601 12:00:33.627" endtime="20210601 12:00:39.310"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:00:39.319" level="INFO">Running command 'ozone sh key getacl o3://om:9862/73296-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:00:46.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:00:46.044" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210601 12:00:39.314" endtime="20210601 12:00:46.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:00:46.051" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210601 12:00:46.047" endtime="20210601 12:00:46.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:00:46.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:00:46.052" endtime="20210601 12:00:46.054"/>
</kw>
<status status="PASS" starttime="20210601 12:00:39.313" endtime="20210601 12:00:46.056"/>
</kw>
<msg timestamp="20210601 12:00:46.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:00:39.312" endtime="20210601 12:00:46.056"/>
</kw>
<msg timestamp="20210601 12:00:46.057" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210601 12:00:39.310" endtime="20210601 12:00:46.057"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 12:00:46.057" endtime="20210601 12:00:46.058"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 12:00:46.058" endtime="20210601 12:00:46.060"/>
</kw>
<status status="PASS" starttime="20210601 11:56:54.004" endtime="20210601 12:00:46.060"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210601 11:56:53.967" endtime="20210601 12:00:46.061"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:00:46.070" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:00:46.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:00:46.075" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 12:00:46.067" endtime="20210601 12:00:46.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:00:46.076" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 12:00:46.075" endtime="20210601 12:00:46.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:00:46.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:00:46.076" endtime="20210601 12:00:46.077"/>
</kw>
<status status="PASS" starttime="20210601 12:00:46.066" endtime="20210601 12:00:46.077"/>
</kw>
<msg timestamp="20210601 12:00:46.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:00:46.065" endtime="20210601 12:00:46.078"/>
</kw>
<msg timestamp="20210601 12:00:46.078" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 12:00:46.064" endtime="20210601 12:00:46.078"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 12:00:46.079" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 12:00:46.078" endtime="20210601 12:00:46.079"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:00:46.085" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:00:46.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:00:46.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:00:46.082" endtime="20210601 12:00:46.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:00:46.118" level="INFO"/>
<status status="PASS" starttime="20210601 12:00:46.118" endtime="20210601 12:00:46.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:00:46.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:00:46.119" endtime="20210601 12:00:46.119"/>
</kw>
<status status="PASS" starttime="20210601 12:00:46.081" endtime="20210601 12:00:46.119"/>
</kw>
<msg timestamp="20210601 12:00:46.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:00:46.081" endtime="20210601 12:00:46.120"/>
</kw>
<status status="PASS" starttime="20210601 12:00:46.080" endtime="20210601 12:00:46.120"/>
</kw>
<status status="PASS" starttime="20210601 12:00:46.079" endtime="20210601 12:00:46.120"/>
</kw>
<status status="PASS" starttime="20210601 12:00:46.063" endtime="20210601 12:00:46.120"/>
</kw>
<status status="PASS" starttime="20210601 12:00:46.063" endtime="20210601 12:00:46.120"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:00:46.125" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/73296-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:00:52.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:00:52.414" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210601 12:00:46.122" endtime="20210601 12:00:52.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:00:52.415" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210601 12:00:52.414" endtime="20210601 12:00:52.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:00:52.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:00:52.416" endtime="20210601 12:00:52.416"/>
</kw>
<status status="PASS" starttime="20210601 12:00:46.122" endtime="20210601 12:00:52.417"/>
</kw>
<msg timestamp="20210601 12:00:52.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:00:46.121" endtime="20210601 12:00:52.417"/>
</kw>
<status status="PASS" starttime="20210601 12:00:46.121" endtime="20210601 12:00:52.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:00:52.427" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/73296-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:00:58.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:00:58.422" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210601 12:00:52.423" endtime="20210601 12:00:58.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:00:58.424" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210601 12:00:58.423" endtime="20210601 12:00:58.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:00:58.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:00:58.425" endtime="20210601 12:00:58.426"/>
</kw>
<status status="PASS" starttime="20210601 12:00:52.421" endtime="20210601 12:00:58.426"/>
</kw>
<msg timestamp="20210601 12:00:58.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:00:52.420" endtime="20210601 12:00:58.427"/>
</kw>
<msg timestamp="20210601 12:00:58.428" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210601 12:00:52.418" endtime="20210601 12:00:58.428"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 12:00:58.428" endtime="20210601 12:00:58.429"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:00:58.436" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/73296-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:01:03.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:01:03.919" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210601 12:00:58.433" endtime="20210601 12:01:03.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:01:03.921" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210601 12:01:03.920" endtime="20210601 12:01:03.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:01:03.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:01:03.922" endtime="20210601 12:01:03.923"/>
</kw>
<status status="PASS" starttime="20210601 12:00:58.432" endtime="20210601 12:01:03.924"/>
</kw>
<msg timestamp="20210601 12:01:03.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:00:58.431" endtime="20210601 12:01:03.924"/>
</kw>
<msg timestamp="20210601 12:01:03.925" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210601 12:00:58.430" endtime="20210601 12:01:03.925"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:01:03.931" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/73296-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:01:09.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:01:09.925" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210601 12:01:03.929" endtime="20210601 12:01:09.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:01:09.928" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210601 12:01:09.927" endtime="20210601 12:01:09.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:01:09.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:01:09.928" endtime="20210601 12:01:09.929"/>
</kw>
<status status="PASS" starttime="20210601 12:01:03.928" endtime="20210601 12:01:09.930"/>
</kw>
<msg timestamp="20210601 12:01:09.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:01:03.927" endtime="20210601 12:01:09.930"/>
</kw>
<msg timestamp="20210601 12:01:09.930" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210601 12:01:03.926" endtime="20210601 12:01:09.930"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 12:01:09.930" endtime="20210601 12:01:09.931"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:01:09.937" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/73296-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:01:15.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:01:15.196" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210601 12:01:09.934" endtime="20210601 12:01:15.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:01:15.200" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210601 12:01:15.197" endtime="20210601 12:01:15.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:01:15.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:01:15.200" endtime="20210601 12:01:15.201"/>
</kw>
<status status="PASS" starttime="20210601 12:01:09.933" endtime="20210601 12:01:15.201"/>
</kw>
<msg timestamp="20210601 12:01:15.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:01:09.933" endtime="20210601 12:01:15.201"/>
</kw>
<msg timestamp="20210601 12:01:15.202" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210601 12:01:09.931" endtime="20210601 12:01:15.202"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:01:15.208" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/73296-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:01:20.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:01:20.736" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210601 12:01:15.203" endtime="20210601 12:01:20.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:01:20.739" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210601 12:01:20.737" endtime="20210601 12:01:20.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:01:20.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:01:20.740" endtime="20210601 12:01:20.741"/>
</kw>
<status status="PASS" starttime="20210601 12:01:15.203" endtime="20210601 12:01:20.741"/>
</kw>
<msg timestamp="20210601 12:01:20.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:01:15.203" endtime="20210601 12:01:20.742"/>
</kw>
<msg timestamp="20210601 12:01:20.745" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210601 12:01:15.202" endtime="20210601 12:01:20.745"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 12:01:20.745" endtime="20210601 12:01:20.746"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 12:01:20.746" endtime="20210601 12:01:20.748"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:01:20.754" level="INFO">Running command 'ozone sh key put o3://om:9862/73296-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:04:31.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:04:31.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:01:20.749" endtime="20210601 12:04:31.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:04:31.216" level="INFO"/>
<status status="PASS" starttime="20210601 12:04:31.215" endtime="20210601 12:04:31.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:04:31.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:04:31.216" endtime="20210601 12:04:31.217"/>
</kw>
<status status="PASS" starttime="20210601 12:01:20.749" endtime="20210601 12:04:31.217"/>
</kw>
<msg timestamp="20210601 12:04:31.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:01:20.748" endtime="20210601 12:04:31.218"/>
</kw>
<status status="PASS" starttime="20210601 12:01:20.748" endtime="20210601 12:04:31.218"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:04:31.222" level="INFO">Running command 'ozone sh key getacl o3://om:9862/73296-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:04:38.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:04:38.272" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 12:04:31.220" endtime="20210601 12:04:38.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:04:38.275" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210601 12:04:38.274" endtime="20210601 12:04:38.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:04:38.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:04:38.276" endtime="20210601 12:04:38.277"/>
</kw>
<status status="PASS" starttime="20210601 12:04:31.219" endtime="20210601 12:04:38.277"/>
</kw>
<msg timestamp="20210601 12:04:38.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:04:31.219" endtime="20210601 12:04:38.277"/>
</kw>
<msg timestamp="20210601 12:04:38.277" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210601 12:04:31.218" endtime="20210601 12:04:38.278"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 12:04:38.278" endtime="20210601 12:04:38.278"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210601 12:04:38.278" endtime="20210601 12:04:38.279"/>
</kw>
<status status="PASS" starttime="20210601 12:00:46.120" endtime="20210601 12:04:38.279"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210601 12:00:46.062" endtime="20210601 12:04:38.279"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:04:38.290" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:04:38.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:04:38.295" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 12:04:38.287" endtime="20210601 12:04:38.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:04:38.297" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 12:04:38.296" endtime="20210601 12:04:38.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:04:38.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:04:38.298" endtime="20210601 12:04:38.299"/>
</kw>
<status status="PASS" starttime="20210601 12:04:38.285" endtime="20210601 12:04:38.300"/>
</kw>
<msg timestamp="20210601 12:04:38.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:04:38.285" endtime="20210601 12:04:38.301"/>
</kw>
<msg timestamp="20210601 12:04:38.302" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 12:04:38.284" endtime="20210601 12:04:38.302"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 12:04:38.304" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 12:04:38.302" endtime="20210601 12:04:38.304"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:04:38.310" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:04:38.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:04:38.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:04:38.308" endtime="20210601 12:04:38.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:04:38.320" level="INFO"/>
<status status="PASS" starttime="20210601 12:04:38.320" endtime="20210601 12:04:38.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:04:38.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:04:38.321" endtime="20210601 12:04:38.321"/>
</kw>
<status status="PASS" starttime="20210601 12:04:38.308" endtime="20210601 12:04:38.321"/>
</kw>
<msg timestamp="20210601 12:04:38.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:04:38.307" endtime="20210601 12:04:38.322"/>
</kw>
<status status="PASS" starttime="20210601 12:04:38.305" endtime="20210601 12:04:38.322"/>
</kw>
<status status="PASS" starttime="20210601 12:04:38.304" endtime="20210601 12:04:38.322"/>
</kw>
<status status="PASS" starttime="20210601 12:04:38.284" endtime="20210601 12:04:38.322"/>
</kw>
<status status="PASS" starttime="20210601 12:04:38.283" endtime="20210601 12:04:38.322"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:04:38.327" level="INFO">Running command 'ozone sh volume info o3:///73296-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:04:44.190" level="INFO">${rc} = 255</msg>
<msg timestamp="20210601 12:04:44.191" level="INFO">${output} = VOLUME_NOT_FOUND Volume 73296-rpcwport is not found</msg>
<status status="PASS" starttime="20210601 12:04:38.324" endtime="20210601 12:04:44.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:04:44.193" level="INFO">VOLUME_NOT_FOUND Volume 73296-rpcwport is not found</msg>
<status status="PASS" starttime="20210601 12:04:44.192" endtime="20210601 12:04:44.193"/>
</kw>
<msg timestamp="20210601 12:04:44.193" level="INFO">${result} = VOLUME_NOT_FOUND Volume 73296-rpcwport is not found</msg>
<status status="PASS" starttime="20210601 12:04:38.324" endtime="20210601 12:04:44.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 12:04:44.193" endtime="20210601 12:04:44.194"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:04:44.201" level="INFO">Running command 'ozone sh volume create o3:///73296-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:04:50.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:04:50.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:04:44.198" endtime="20210601 12:04:50.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:04:50.224" level="INFO"/>
<status status="PASS" starttime="20210601 12:04:50.224" endtime="20210601 12:04:50.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:04:50.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:04:50.225" endtime="20210601 12:04:50.225"/>
</kw>
<status status="PASS" starttime="20210601 12:04:44.197" endtime="20210601 12:04:50.225"/>
</kw>
<msg timestamp="20210601 12:04:50.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:04:44.196" endtime="20210601 12:04:50.226"/>
</kw>
<msg timestamp="20210601 12:04:50.226" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210601 12:04:44.194" endtime="20210601 12:04:50.226"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 12:04:50.226" endtime="20210601 12:04:50.226"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:04:50.234" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="73296-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:04:56.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:04:56.398" level="INFO">${output} = {
  "metadata": {},
  "name": "73296-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210601 12:04:50.230" endtime="20210601 12:04:56.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:04:56.400" level="INFO">{
  "metadata": {},
  "name": "73296-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-01T12:04:50.133Z",
  "modificationTime": "2021-06-01T12:04:50.133Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210601 12:04:56.398" endtime="20210601 12:04:56.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:04:56.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:04:56.400" endtime="20210601 12:04:56.401"/>
</kw>
<status status="PASS" starttime="20210601 12:04:50.228" endtime="20210601 12:04:56.401"/>
</kw>
<msg timestamp="20210601 12:04:56.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:04:50.228" endtime="20210601 12:04:56.401"/>
</kw>
<msg timestamp="20210601 12:04:56.401" level="INFO">${result} = {
  "metadata": {},
  "name": "73296-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210601 12:04:50.227" endtime="20210601 12:04:56.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 12:04:56.402" endtime="20210601 12:04:56.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:04:56.405" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="73296-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:05:02.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:05:02.679" level="INFO">${output} = {
  "metadata": {},
  "name": "73296-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210601 12:04:56.403" endtime="20210601 12:05:02.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:05:02.682" level="INFO">{
  "metadata": {},
  "name": "73296-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-01T12:04:50.133Z",
  "modificationTime": "2021-06-01T12:04:50.133Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210601 12:05:02.680" endtime="20210601 12:05:02.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:05:02.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:05:02.682" endtime="20210601 12:05:02.683"/>
</kw>
<status status="PASS" starttime="20210601 12:04:56.403" endtime="20210601 12:05:02.684"/>
</kw>
<msg timestamp="20210601 12:05:02.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:04:56.402" endtime="20210601 12:05:02.684"/>
</kw>
<msg timestamp="20210601 12:05:02.685" level="INFO">${result} = {
  "metadata": {},
  "name": "73296-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210601 12:04:56.402" endtime="20210601 12:05:02.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 12:05:02.685" endtime="20210601 12:05:02.686"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:05:02.692" level="INFO">Running command 'ozone sh volume setquota o3:///73296-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:05:08.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:05:08.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:05:02.689" endtime="20210601 12:05:08.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:05:08.835" level="INFO"/>
<status status="PASS" starttime="20210601 12:05:08.835" endtime="20210601 12:05:08.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:05:08.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:05:08.836" endtime="20210601 12:05:08.836"/>
</kw>
<status status="PASS" starttime="20210601 12:05:02.688" endtime="20210601 12:05:08.837"/>
</kw>
<msg timestamp="20210601 12:05:08.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:05:02.688" endtime="20210601 12:05:08.837"/>
</kw>
<status status="PASS" starttime="20210601 12:05:02.686" endtime="20210601 12:05:08.837"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:05:08.841" level="INFO">Running command 'ozone sh volume info o3:///73296-rpcwport | jq -r '. | select(.name=="73296-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:05:15.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:05:15.292" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210601 12:05:08.839" endtime="20210601 12:05:15.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:05:15.293" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210601 12:05:15.292" endtime="20210601 12:05:15.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:05:15.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:05:15.293" endtime="20210601 12:05:15.294"/>
</kw>
<status status="PASS" starttime="20210601 12:05:08.839" endtime="20210601 12:05:15.294"/>
</kw>
<msg timestamp="20210601 12:05:15.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:05:08.838" endtime="20210601 12:05:15.294"/>
</kw>
<msg timestamp="20210601 12:05:15.294" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210601 12:05:08.837" endtime="20210601 12:05:15.295"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 12:05:15.295" endtime="20210601 12:05:15.295"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:05:15.300" level="INFO">Running command 'ozone sh bucket create o3:///73296-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:05:20.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:05:20.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:05:15.297" endtime="20210601 12:05:20.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:05:20.946" level="INFO"/>
<status status="PASS" starttime="20210601 12:05:20.944" endtime="20210601 12:05:20.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:05:20.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:05:20.947" endtime="20210601 12:05:20.949"/>
</kw>
<status status="PASS" starttime="20210601 12:05:15.296" endtime="20210601 12:05:20.949"/>
</kw>
<msg timestamp="20210601 12:05:20.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:05:15.296" endtime="20210601 12:05:20.950"/>
</kw>
<status status="PASS" starttime="20210601 12:05:15.295" endtime="20210601 12:05:20.951"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:05:20.959" level="INFO">Running command 'ozone sh bucket info o3:///73296-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:05:27.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:05:27.831" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210601 12:05:20.956" endtime="20210601 12:05:27.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:05:27.833" level="INFO">DISK</msg>
<status status="PASS" starttime="20210601 12:05:27.831" endtime="20210601 12:05:27.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:05:27.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:05:27.833" endtime="20210601 12:05:27.834"/>
</kw>
<status status="PASS" starttime="20210601 12:05:20.955" endtime="20210601 12:05:27.834"/>
</kw>
<msg timestamp="20210601 12:05:27.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:05:20.953" endtime="20210601 12:05:27.834"/>
</kw>
<msg timestamp="20210601 12:05:27.835" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210601 12:05:20.951" endtime="20210601 12:05:27.835"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 12:05:27.835" endtime="20210601 12:05:27.836"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:05:27.841" level="INFO">Running command 'ozone sh bucket info o3:///73296-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:05:34.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:05:34.249" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210601 12:05:27.838" endtime="20210601 12:05:34.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:05:34.251" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210601 12:05:34.250" endtime="20210601 12:05:34.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:05:34.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:05:34.254" endtime="20210601 12:05:34.255"/>
</kw>
<status status="PASS" starttime="20210601 12:05:27.837" endtime="20210601 12:05:34.255"/>
</kw>
<msg timestamp="20210601 12:05:34.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:05:27.837" endtime="20210601 12:05:34.255"/>
</kw>
<msg timestamp="20210601 12:05:34.255" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210601 12:05:27.836" endtime="20210601 12:05:34.255"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 12:05:34.256" endtime="20210601 12:05:34.256"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:05:34.261" level="INFO">Running command 'ozone sh bucket info o3:///73296-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:05:40.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:05:40.187" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210601 12:05:34.258" endtime="20210601 12:05:40.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:05:40.190" level="INFO">100</msg>
<status status="PASS" starttime="20210601 12:05:40.189" endtime="20210601 12:05:40.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:05:40.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:05:40.191" endtime="20210601 12:05:40.192"/>
</kw>
<status status="PASS" starttime="20210601 12:05:34.257" endtime="20210601 12:05:40.192"/>
</kw>
<msg timestamp="20210601 12:05:40.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:05:34.257" endtime="20210601 12:05:40.193"/>
</kw>
<msg timestamp="20210601 12:05:40.193" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210601 12:05:34.256" endtime="20210601 12:05:40.193"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 12:05:40.193" endtime="20210601 12:05:40.194"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:05:40.200" level="INFO">Running command 'ozone sh bucket setquota o3:///73296-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:05:46.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:05:46.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:05:40.197" endtime="20210601 12:05:46.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:05:46.030" level="INFO"/>
<status status="PASS" starttime="20210601 12:05:46.029" endtime="20210601 12:05:46.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:05:46.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:05:46.030" endtime="20210601 12:05:46.031"/>
</kw>
<status status="PASS" starttime="20210601 12:05:40.196" endtime="20210601 12:05:46.031"/>
</kw>
<msg timestamp="20210601 12:05:46.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:05:40.196" endtime="20210601 12:05:46.031"/>
</kw>
<status status="PASS" starttime="20210601 12:05:40.195" endtime="20210601 12:05:46.031"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:05:46.039" level="INFO">Running command 'ozone sh bucket info o3:///73296-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:05:52.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:05:52.940" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210601 12:05:46.036" endtime="20210601 12:05:52.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:05:52.942" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210601 12:05:52.940" endtime="20210601 12:05:52.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:05:52.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:05:52.943" endtime="20210601 12:05:52.944"/>
</kw>
<status status="PASS" starttime="20210601 12:05:46.034" endtime="20210601 12:05:52.944"/>
</kw>
<msg timestamp="20210601 12:05:52.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:05:46.033" endtime="20210601 12:05:52.945"/>
</kw>
<msg timestamp="20210601 12:05:52.945" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210601 12:05:46.032" endtime="20210601 12:05:52.945"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 12:05:52.946" endtime="20210601 12:05:52.946"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:05:52.953" level="INFO">Running command 'ozone sh bucket info o3:///73296-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:05:59.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:05:59.152" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210601 12:05:52.950" endtime="20210601 12:05:59.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:05:59.153" level="INFO">1000</msg>
<status status="PASS" starttime="20210601 12:05:59.153" endtime="20210601 12:05:59.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:05:59.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:05:59.154" endtime="20210601 12:05:59.154"/>
</kw>
<status status="PASS" starttime="20210601 12:05:52.949" endtime="20210601 12:05:59.155"/>
</kw>
<msg timestamp="20210601 12:05:59.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:05:52.948" endtime="20210601 12:05:59.155"/>
</kw>
<msg timestamp="20210601 12:05:59.155" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210601 12:05:52.947" endtime="20210601 12:05:59.155"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 12:05:59.155" endtime="20210601 12:05:59.156"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:05:59.162" level="INFO">Running command 'ozone sh bucket list o3:///73296-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:06:05.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:06:05.448" level="INFO">${output} = 73296-rpcwport</msg>
<status status="PASS" starttime="20210601 12:05:59.158" endtime="20210601 12:06:05.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:06:05.449" level="INFO">73296-rpcwport</msg>
<status status="PASS" starttime="20210601 12:06:05.448" endtime="20210601 12:06:05.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:06:05.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:06:05.449" endtime="20210601 12:06:05.450"/>
</kw>
<status status="PASS" starttime="20210601 12:05:59.157" endtime="20210601 12:06:05.450"/>
</kw>
<msg timestamp="20210601 12:06:05.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:05:59.157" endtime="20210601 12:06:05.450"/>
</kw>
<msg timestamp="20210601 12:06:05.451" level="INFO">${result} = 73296-rpcwport</msg>
<status status="PASS" starttime="20210601 12:05:59.156" endtime="20210601 12:06:05.451"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 12:06:05.451" endtime="20210601 12:06:05.451"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:06:05.457" level="INFO">Running command 'ozone sh key put o3:///73296-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:09:15.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:09:15.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:06:05.454" endtime="20210601 12:09:15.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:09:15.199" level="INFO"/>
<status status="PASS" starttime="20210601 12:09:15.199" endtime="20210601 12:09:15.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:09:15.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:09:15.200" endtime="20210601 12:09:15.200"/>
</kw>
<status status="PASS" starttime="20210601 12:06:05.454" endtime="20210601 12:09:15.200"/>
</kw>
<msg timestamp="20210601 12:09:15.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:06:05.453" endtime="20210601 12:09:15.201"/>
</kw>
<status status="PASS" starttime="20210601 12:06:05.453" endtime="20210601 12:09:15.201"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:09:15.205" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:09:15.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:09:15.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:09:15.202" endtime="20210601 12:09:15.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:09:15.210" level="INFO"/>
<status status="PASS" starttime="20210601 12:09:15.209" endtime="20210601 12:09:15.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:09:15.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:09:15.210" endtime="20210601 12:09:15.211"/>
</kw>
<status status="PASS" starttime="20210601 12:09:15.202" endtime="20210601 12:09:15.211"/>
</kw>
<msg timestamp="20210601 12:09:15.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:09:15.201" endtime="20210601 12:09:15.212"/>
</kw>
<status status="PASS" starttime="20210601 12:09:15.201" endtime="20210601 12:09:15.212"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:09:15.217" level="INFO">Running command 'ozone sh key get o3:///73296-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:09:24.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:09:24.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:09:15.214" endtime="20210601 12:09:24.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:09:24.762" level="INFO"/>
<status status="PASS" starttime="20210601 12:09:24.762" endtime="20210601 12:09:24.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:09:24.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:09:24.763" endtime="20210601 12:09:24.763"/>
</kw>
<status status="PASS" starttime="20210601 12:09:15.213" endtime="20210601 12:09:24.764"/>
</kw>
<msg timestamp="20210601 12:09:24.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:09:15.213" endtime="20210601 12:09:24.764"/>
</kw>
<status status="PASS" starttime="20210601 12:09:15.212" endtime="20210601 12:09:24.764"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:09:24.769" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:09:24.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:09:24.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:09:24.766" endtime="20210601 12:09:24.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:09:24.774" level="INFO"/>
<status status="PASS" starttime="20210601 12:09:24.773" endtime="20210601 12:09:24.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:09:24.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:09:24.775" endtime="20210601 12:09:24.776"/>
</kw>
<status status="PASS" starttime="20210601 12:09:24.765" endtime="20210601 12:09:24.776"/>
</kw>
<msg timestamp="20210601 12:09:24.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:09:24.765" endtime="20210601 12:09:24.776"/>
</kw>
<status status="PASS" starttime="20210601 12:09:24.764" endtime="20210601 12:09:24.777"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:09:24.781" level="INFO">Running command 'ozone sh key put -t RATIS o3:///73296-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:09:38.283" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210601 12:09:24.779" endtime="20210601 12:09:38.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.284" endtime="20210601 12:09:38.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.284" endtime="20210601 12:09:38.284"/>
</kw>
<status status="FAIL" starttime="20210601 12:09:24.778" endtime="20210601 12:09:38.284"/>
</kw>
<msg timestamp="20210601 12:09:38.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210601 12:09:24.778" endtime="20210601 12:09:38.285"/>
</kw>
<status status="FAIL" starttime="20210601 12:09:24.777" endtime="20210601 12:09:38.285"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.285" endtime="20210601 12:09:38.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.285" endtime="20210601 12:09:38.285"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.285" endtime="20210601 12:09:38.285"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.286" endtime="20210601 12:09:38.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.286" endtime="20210601 12:09:38.286"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.286" endtime="20210601 12:09:38.286"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.286" endtime="20210601 12:09:38.286"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.286" endtime="20210601 12:09:38.286"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.287" endtime="20210601 12:09:38.287"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.287" endtime="20210601 12:09:38.287"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.287" endtime="20210601 12:09:38.287"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.287" endtime="20210601 12:09:38.287"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.287" endtime="20210601 12:09:38.287"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.287" endtime="20210601 12:09:38.288"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.288" endtime="20210601 12:09:38.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.288" endtime="20210601 12:09:38.288"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.288" endtime="20210601 12:09:38.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.288" endtime="20210601 12:09:38.288"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.288" endtime="20210601 12:09:38.288"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.288" endtime="20210601 12:09:38.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.288" endtime="20210601 12:09:38.289"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.289" endtime="20210601 12:09:38.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.289" endtime="20210601 12:09:38.289"/>
</kw>
<status status="FAIL" starttime="20210601 12:06:05.452" endtime="20210601 12:09:38.289"/>
</kw>
<status status="FAIL" starttime="20210601 12:06:05.452" endtime="20210601 12:09:38.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.289" endtime="20210601 12:09:38.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.289" endtime="20210601 12:09:38.289"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.289" endtime="20210601 12:09:38.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.290" endtime="20210601 12:09:38.290"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.290" endtime="20210601 12:09:38.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.290" endtime="20210601 12:09:38.290"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.290" endtime="20210601 12:09:38.290"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.291" endtime="20210601 12:09:38.291"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.291" endtime="20210601 12:09:38.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.291" endtime="20210601 12:09:38.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.291" endtime="20210601 12:09:38.291"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.291" endtime="20210601 12:09:38.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.292" endtime="20210601 12:09:38.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.292" endtime="20210601 12:09:38.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.292" endtime="20210601 12:09:38.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.292" endtime="20210601 12:09:38.292"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.292" endtime="20210601 12:09:38.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.292" endtime="20210601 12:09:38.292"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.292" endtime="20210601 12:09:38.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.293" endtime="20210601 12:09:38.293"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.293" endtime="20210601 12:09:38.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.293" endtime="20210601 12:09:38.293"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.293" endtime="20210601 12:09:38.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:09:38.293" endtime="20210601 12:09:38.293"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.293" endtime="20210601 12:09:38.293"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 12:09:38.293" endtime="20210601 12:09:38.294"/>
</kw>
<status status="FAIL" starttime="20210601 12:04:38.322" endtime="20210601 12:09:38.294"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210601 12:04:38.282" endtime="20210601 12:09:38.294">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:09:38.301" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:09:38.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:09:38.306" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 12:09:38.298" endtime="20210601 12:09:38.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:09:38.307" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 12:09:38.307" endtime="20210601 12:09:38.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:09:38.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:09:38.308" endtime="20210601 12:09:38.308"/>
</kw>
<status status="PASS" starttime="20210601 12:09:38.298" endtime="20210601 12:09:38.308"/>
</kw>
<msg timestamp="20210601 12:09:38.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:09:38.297" endtime="20210601 12:09:38.308"/>
</kw>
<msg timestamp="20210601 12:09:38.309" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 12:09:38.297" endtime="20210601 12:09:38.309"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 12:09:38.309" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 12:09:38.309" endtime="20210601 12:09:38.309"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:09:38.314" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:09:38.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:09:38.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:09:38.312" endtime="20210601 12:09:38.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:09:38.346" level="INFO"/>
<status status="PASS" starttime="20210601 12:09:38.346" endtime="20210601 12:09:38.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:09:38.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:09:38.347" endtime="20210601 12:09:38.347"/>
</kw>
<status status="PASS" starttime="20210601 12:09:38.311" endtime="20210601 12:09:38.347"/>
</kw>
<msg timestamp="20210601 12:09:38.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:09:38.311" endtime="20210601 12:09:38.348"/>
</kw>
<status status="PASS" starttime="20210601 12:09:38.310" endtime="20210601 12:09:38.348"/>
</kw>
<status status="PASS" starttime="20210601 12:09:38.310" endtime="20210601 12:09:38.348"/>
</kw>
<status status="PASS" starttime="20210601 12:09:38.296" endtime="20210601 12:09:38.348"/>
</kw>
<status status="PASS" starttime="20210601 12:09:38.296" endtime="20210601 12:09:38.348"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:09:38.353" level="INFO">Running command 'ozone sh volume info /73296-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:09:43.473" level="INFO">${rc} = 255</msg>
<msg timestamp="20210601 12:09:43.473" level="INFO">${output} = VOLUME_NOT_FOUND Volume 73296-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210601 12:09:38.351" endtime="20210601 12:09:43.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:09:43.474" level="INFO">VOLUME_NOT_FOUND Volume 73296-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210601 12:09:43.473" endtime="20210601 12:09:43.474"/>
</kw>
<msg timestamp="20210601 12:09:43.475" level="INFO">${result} = VOLUME_NOT_FOUND Volume 73296-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210601 12:09:38.350" endtime="20210601 12:09:43.475"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 12:09:43.475" endtime="20210601 12:09:43.475"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:09:43.479" level="INFO">Running command 'ozone sh volume create /73296-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:09:47.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:09:47.465" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:09:43.477" endtime="20210601 12:09:47.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:09:47.467" level="INFO"/>
<status status="PASS" starttime="20210601 12:09:47.466" endtime="20210601 12:09:47.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:09:47.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:09:47.467" endtime="20210601 12:09:47.468"/>
</kw>
<status status="PASS" starttime="20210601 12:09:43.476" endtime="20210601 12:09:47.468"/>
</kw>
<msg timestamp="20210601 12:09:47.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:09:43.476" endtime="20210601 12:09:47.468"/>
</kw>
<msg timestamp="20210601 12:09:47.468" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210601 12:09:43.475" endtime="20210601 12:09:47.468"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 12:09:47.469" endtime="20210601 12:09:47.469"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:09:47.473" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="73296-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:09:53.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:09:53.723" level="INFO">${output} = {
  "metadata": {},
  "name": "73296-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210601 12:09:47.471" endtime="20210601 12:09:53.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:09:53.724" level="INFO">{
  "metadata": {},
  "name": "73296-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-01T12:09:47.284Z",
  "modificationTime": "2021-06-01T12:09:47.284Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210601 12:09:53.723" endtime="20210601 12:09:53.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:09:53.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:09:53.724" endtime="20210601 12:09:53.725"/>
</kw>
<status status="PASS" starttime="20210601 12:09:47.471" endtime="20210601 12:09:53.725"/>
</kw>
<msg timestamp="20210601 12:09:53.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:09:47.470" endtime="20210601 12:09:53.726"/>
</kw>
<msg timestamp="20210601 12:09:53.726" level="INFO">${result} = {
  "metadata": {},
  "name": "73296-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210601 12:09:47.469" endtime="20210601 12:09:53.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 12:09:53.726" endtime="20210601 12:09:53.726"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:09:53.730" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="73296-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:09:58.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:09:58.658" level="INFO">${output} = {
  "metadata": {},
  "name": "73296-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210601 12:09:53.728" endtime="20210601 12:09:58.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:09:58.659" level="INFO">{
  "metadata": {},
  "name": "73296-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-01T12:09:47.284Z",
  "modificationTime": "2021-06-01T12:09:47.284Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210601 12:09:58.658" endtime="20210601 12:09:58.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:09:58.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:09:58.660" endtime="20210601 12:09:58.661"/>
</kw>
<status status="PASS" starttime="20210601 12:09:53.728" endtime="20210601 12:09:58.661"/>
</kw>
<msg timestamp="20210601 12:09:58.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:09:53.727" endtime="20210601 12:09:58.662"/>
</kw>
<msg timestamp="20210601 12:09:58.662" level="INFO">${result} = {
  "metadata": {},
  "name": "73296-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210601 12:09:53.727" endtime="20210601 12:09:58.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210601 12:09:58.663" endtime="20210601 12:09:58.663"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:09:58.667" level="INFO">Running command 'ozone sh volume setquota /73296-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:10:04.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:10:04.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:09:58.665" endtime="20210601 12:10:04.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:10:04.090" level="INFO"/>
<status status="PASS" starttime="20210601 12:10:04.088" endtime="20210601 12:10:04.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:10:04.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:10:04.090" endtime="20210601 12:10:04.092"/>
</kw>
<status status="PASS" starttime="20210601 12:09:58.664" endtime="20210601 12:10:04.092"/>
</kw>
<msg timestamp="20210601 12:10:04.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:09:58.664" endtime="20210601 12:10:04.092"/>
</kw>
<status status="PASS" starttime="20210601 12:09:58.663" endtime="20210601 12:10:04.093"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:10:04.099" level="INFO">Running command 'ozone sh volume info /73296-rpcwoscheme | jq -r '. | select(.name=="73296-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:10:10.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:10:10.272" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210601 12:10:04.096" endtime="20210601 12:10:10.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:10:10.275" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210601 12:10:10.273" endtime="20210601 12:10:10.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:10:10.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:10:10.275" endtime="20210601 12:10:10.277"/>
</kw>
<status status="PASS" starttime="20210601 12:10:04.095" endtime="20210601 12:10:10.277"/>
</kw>
<msg timestamp="20210601 12:10:10.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:10:04.094" endtime="20210601 12:10:10.278"/>
</kw>
<msg timestamp="20210601 12:10:10.278" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210601 12:10:04.093" endtime="20210601 12:10:10.278"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 12:10:10.279" endtime="20210601 12:10:10.280"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:10:10.285" level="INFO">Running command 'ozone sh bucket create /73296-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:10:16.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:10:16.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:10:10.282" endtime="20210601 12:10:16.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:10:16.082" level="INFO"/>
<status status="PASS" starttime="20210601 12:10:16.081" endtime="20210601 12:10:16.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:10:16.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:10:16.083" endtime="20210601 12:10:16.085"/>
</kw>
<status status="PASS" starttime="20210601 12:10:10.281" endtime="20210601 12:10:16.087"/>
</kw>
<msg timestamp="20210601 12:10:16.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:10:10.281" endtime="20210601 12:10:16.088"/>
</kw>
<status status="PASS" starttime="20210601 12:10:10.280" endtime="20210601 12:10:16.088"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:10:16.094" level="INFO">Running command 'ozone sh bucket info /73296-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:10:22.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:10:22.561" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210601 12:10:16.091" endtime="20210601 12:10:22.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:10:22.563" level="INFO">DISK</msg>
<status status="PASS" starttime="20210601 12:10:22.562" endtime="20210601 12:10:22.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:10:22.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:10:22.563" endtime="20210601 12:10:22.564"/>
</kw>
<status status="PASS" starttime="20210601 12:10:16.090" endtime="20210601 12:10:22.564"/>
</kw>
<msg timestamp="20210601 12:10:22.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:10:16.090" endtime="20210601 12:10:22.564"/>
</kw>
<msg timestamp="20210601 12:10:22.565" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210601 12:10:16.088" endtime="20210601 12:10:22.565"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 12:10:22.565" endtime="20210601 12:10:22.565"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:10:22.569" level="INFO">Running command 'ozone sh bucket info /73296-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:10:28.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:10:28.785" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210601 12:10:22.567" endtime="20210601 12:10:28.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:10:28.786" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210601 12:10:28.785" endtime="20210601 12:10:28.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:10:28.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:10:28.786" endtime="20210601 12:10:28.788"/>
</kw>
<status status="PASS" starttime="20210601 12:10:22.566" endtime="20210601 12:10:28.788"/>
</kw>
<msg timestamp="20210601 12:10:28.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:10:22.566" endtime="20210601 12:10:28.788"/>
</kw>
<msg timestamp="20210601 12:10:28.789" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210601 12:10:22.565" endtime="20210601 12:10:28.789"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 12:10:28.789" endtime="20210601 12:10:28.790"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:10:28.798" level="INFO">Running command 'ozone sh bucket info /73296-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:10:35.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:10:35.706" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210601 12:10:28.796" endtime="20210601 12:10:35.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:10:35.709" level="INFO">100</msg>
<status status="PASS" starttime="20210601 12:10:35.708" endtime="20210601 12:10:35.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:10:35.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:10:35.709" endtime="20210601 12:10:35.711"/>
</kw>
<status status="PASS" starttime="20210601 12:10:28.795" endtime="20210601 12:10:35.711"/>
</kw>
<msg timestamp="20210601 12:10:35.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:10:28.795" endtime="20210601 12:10:35.712"/>
</kw>
<msg timestamp="20210601 12:10:35.712" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210601 12:10:28.790" endtime="20210601 12:10:35.712"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 12:10:35.712" endtime="20210601 12:10:35.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:10:35.720" level="INFO">Running command 'ozone sh bucket setquota /73296-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:10:41.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:10:41.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:10:35.717" endtime="20210601 12:10:41.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:10:41.523" level="INFO"/>
<status status="PASS" starttime="20210601 12:10:41.522" endtime="20210601 12:10:41.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:10:41.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:10:41.524" endtime="20210601 12:10:41.524"/>
</kw>
<status status="PASS" starttime="20210601 12:10:35.716" endtime="20210601 12:10:41.525"/>
</kw>
<msg timestamp="20210601 12:10:41.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:10:35.715" endtime="20210601 12:10:41.525"/>
</kw>
<status status="PASS" starttime="20210601 12:10:35.713" endtime="20210601 12:10:41.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:10:41.530" level="INFO">Running command 'ozone sh bucket info /73296-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:10:48.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:10:48.228" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210601 12:10:41.528" endtime="20210601 12:10:48.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:10:48.230" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210601 12:10:48.229" endtime="20210601 12:10:48.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:10:48.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:10:48.231" endtime="20210601 12:10:48.232"/>
</kw>
<status status="PASS" starttime="20210601 12:10:41.527" endtime="20210601 12:10:48.233"/>
</kw>
<msg timestamp="20210601 12:10:48.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:10:41.527" endtime="20210601 12:10:48.233"/>
</kw>
<msg timestamp="20210601 12:10:48.234" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210601 12:10:41.525" endtime="20210601 12:10:48.234"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 12:10:48.234" endtime="20210601 12:10:48.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:10:48.242" level="INFO">Running command 'ozone sh bucket info /73296-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:10:55.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:10:55.293" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210601 12:10:48.239" endtime="20210601 12:10:55.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:10:55.294" level="INFO">1000</msg>
<status status="PASS" starttime="20210601 12:10:55.293" endtime="20210601 12:10:55.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:10:55.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:10:55.294" endtime="20210601 12:10:55.295"/>
</kw>
<status status="PASS" starttime="20210601 12:10:48.238" endtime="20210601 12:10:55.295"/>
</kw>
<msg timestamp="20210601 12:10:55.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:10:48.238" endtime="20210601 12:10:55.295"/>
</kw>
<msg timestamp="20210601 12:10:55.296" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210601 12:10:48.236" endtime="20210601 12:10:55.296"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 12:10:55.296" endtime="20210601 12:10:55.296"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:10:55.303" level="INFO">Running command 'ozone sh bucket list /73296-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:11:01.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:11:01.438" level="INFO">${output} = 73296-rpcwoscheme</msg>
<status status="PASS" starttime="20210601 12:10:55.300" endtime="20210601 12:11:01.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:11:01.440" level="INFO">73296-rpcwoscheme</msg>
<status status="PASS" starttime="20210601 12:11:01.439" endtime="20210601 12:11:01.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:11:01.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:11:01.441" endtime="20210601 12:11:01.442"/>
</kw>
<status status="PASS" starttime="20210601 12:10:55.299" endtime="20210601 12:11:01.443"/>
</kw>
<msg timestamp="20210601 12:11:01.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:10:55.298" endtime="20210601 12:11:01.443"/>
</kw>
<msg timestamp="20210601 12:11:01.443" level="INFO">${result} = 73296-rpcwoscheme</msg>
<status status="PASS" starttime="20210601 12:10:55.297" endtime="20210601 12:11:01.443"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210601 12:11:01.444" endtime="20210601 12:11:01.444"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:11:01.450" level="INFO">Running command 'ozone sh key put /73296-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:14:11.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:14:11.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:11:01.447" endtime="20210601 12:14:11.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:14:11.275" level="INFO"/>
<status status="PASS" starttime="20210601 12:14:11.274" endtime="20210601 12:14:11.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:14:11.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:14:11.275" endtime="20210601 12:14:11.276"/>
</kw>
<status status="PASS" starttime="20210601 12:11:01.447" endtime="20210601 12:14:11.276"/>
</kw>
<msg timestamp="20210601 12:14:11.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:11:01.446" endtime="20210601 12:14:11.276"/>
</kw>
<status status="PASS" starttime="20210601 12:11:01.446" endtime="20210601 12:14:11.277"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:14:11.280" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:14:11.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:14:11.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:14:11.278" endtime="20210601 12:14:11.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:14:11.283" level="INFO"/>
<status status="PASS" starttime="20210601 12:14:11.283" endtime="20210601 12:14:11.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:14:11.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:14:11.284" endtime="20210601 12:14:11.284"/>
</kw>
<status status="PASS" starttime="20210601 12:14:11.278" endtime="20210601 12:14:11.284"/>
</kw>
<msg timestamp="20210601 12:14:11.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:14:11.277" endtime="20210601 12:14:11.285"/>
</kw>
<status status="PASS" starttime="20210601 12:14:11.277" endtime="20210601 12:14:11.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:14:11.288" level="INFO">Running command 'ozone sh key get /73296-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:14:18.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:14:18.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:14:11.286" endtime="20210601 12:14:18.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:14:18.686" level="INFO"/>
<status status="PASS" starttime="20210601 12:14:18.685" endtime="20210601 12:14:18.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:14:18.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:14:18.686" endtime="20210601 12:14:18.687"/>
</kw>
<status status="PASS" starttime="20210601 12:14:11.286" endtime="20210601 12:14:18.687"/>
</kw>
<msg timestamp="20210601 12:14:18.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:14:11.286" endtime="20210601 12:14:18.687"/>
</kw>
<status status="PASS" starttime="20210601 12:14:11.285" endtime="20210601 12:14:18.688"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:14:18.693" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:14:18.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 12:14:18.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 12:14:18.690" endtime="20210601 12:14:18.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 12:14:18.699" level="INFO"/>
<status status="PASS" starttime="20210601 12:14:18.698" endtime="20210601 12:14:18.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 12:14:18.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 12:14:18.699" endtime="20210601 12:14:18.700"/>
</kw>
<status status="PASS" starttime="20210601 12:14:18.689" endtime="20210601 12:14:18.700"/>
</kw>
<msg timestamp="20210601 12:14:18.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 12:14:18.688" endtime="20210601 12:14:18.701"/>
</kw>
<status status="PASS" starttime="20210601 12:14:18.688" endtime="20210601 12:14:18.701"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 12:14:18.705" level="INFO">Running command 'ozone sh key put -t RATIS /73296-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 12:14:38.295" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210601 12:14:18.703" endtime="20210601 12:14:38.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.296" endtime="20210601 12:14:38.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.296" endtime="20210601 12:14:38.296"/>
</kw>
<status status="FAIL" starttime="20210601 12:14:18.702" endtime="20210601 12:14:38.297"/>
</kw>
<msg timestamp="20210601 12:14:38.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210601 12:14:18.702" endtime="20210601 12:14:38.297"/>
</kw>
<status status="FAIL" starttime="20210601 12:14:18.701" endtime="20210601 12:14:38.297"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.298" endtime="20210601 12:14:38.298"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.298" endtime="20210601 12:14:38.298"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.298" endtime="20210601 12:14:38.298"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.298" endtime="20210601 12:14:38.298"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.298" endtime="20210601 12:14:38.298"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.298" endtime="20210601 12:14:38.298"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.298" endtime="20210601 12:14:38.298"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.299" endtime="20210601 12:14:38.299"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.299" endtime="20210601 12:14:38.299"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.299" endtime="20210601 12:14:38.299"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.299" endtime="20210601 12:14:38.299"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.299" endtime="20210601 12:14:38.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.299" endtime="20210601 12:14:38.299"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.299" endtime="20210601 12:14:38.300"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.300" endtime="20210601 12:14:38.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.300" endtime="20210601 12:14:38.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.300" endtime="20210601 12:14:38.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.300" endtime="20210601 12:14:38.300"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.300" endtime="20210601 12:14:38.300"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.300" endtime="20210601 12:14:38.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.300" endtime="20210601 12:14:38.301"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.301" endtime="20210601 12:14:38.301"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.301" endtime="20210601 12:14:38.301"/>
</kw>
<status status="FAIL" starttime="20210601 12:11:01.445" endtime="20210601 12:14:38.301"/>
</kw>
<status status="FAIL" starttime="20210601 12:11:01.444" endtime="20210601 12:14:38.301"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.301" endtime="20210601 12:14:38.301"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.302" endtime="20210601 12:14:38.302"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.302" endtime="20210601 12:14:38.302"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.302" endtime="20210601 12:14:38.302"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.302" endtime="20210601 12:14:38.302"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.302" endtime="20210601 12:14:38.302"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.303" endtime="20210601 12:14:38.303"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.303" endtime="20210601 12:14:38.303"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.303" endtime="20210601 12:14:38.303"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.303" endtime="20210601 12:14:38.303"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.303" endtime="20210601 12:14:38.303"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.303" endtime="20210601 12:14:38.303"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.304" endtime="20210601 12:14:38.304"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.304" endtime="20210601 12:14:38.304"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.304" endtime="20210601 12:14:38.304"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.304" endtime="20210601 12:14:38.304"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.304" endtime="20210601 12:14:38.304"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.304" endtime="20210601 12:14:38.304"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.304" endtime="20210601 12:14:38.304"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.305" endtime="20210601 12:14:38.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.305" endtime="20210601 12:14:38.305"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.305" endtime="20210601 12:14:38.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.305" endtime="20210601 12:14:38.305"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210601 12:14:38.305" endtime="20210601 12:14:38.305"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.305" endtime="20210601 12:14:38.305"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210601 12:14:38.305" endtime="20210601 12:14:38.306"/>
</kw>
<status status="FAIL" starttime="20210601 12:09:38.348" endtime="20210601 12:14:38.306"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210601 12:09:38.295" endtime="20210601 12:14:38.306">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210601 11:50:17.486" endtime="20210601 12:14:38.310"/>
</suite>
<status status="FAIL" starttime="20210601 11:26:50.580" endtime="20210601 12:14:38.317"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:26:45.657" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:26:45.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:26:45.661" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210601 11:26:45.654" endtime="20210601 11:26:45.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:26:45.662" level="INFO">scm</msg>
<status status="PASS" starttime="20210601 11:26:45.662" endtime="20210601 11:26:45.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:26:45.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:26:45.663" endtime="20210601 11:26:45.663"/>
</kw>
<status status="PASS" starttime="20210601 11:26:45.653" endtime="20210601 11:26:45.663"/>
</kw>
<msg timestamp="20210601 11:26:45.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:26:45.653" endtime="20210601 11:26:45.664"/>
</kw>
<msg timestamp="20210601 11:26:45.664" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210601 11:26:45.653" endtime="20210601 11:26:45.664"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210601 11:26:45.665" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210601 11:26:45.664" endtime="20210601 11:26:45.665"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210601 11:26:45.668" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210601 11:26:45.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20210601 11:26:45.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210601 11:26:45.666" endtime="20210601 11:26:45.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210601 11:26:45.676" level="INFO"/>
<status status="PASS" starttime="20210601 11:26:45.675" endtime="20210601 11:26:45.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210601 11:26:45.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210601 11:26:45.676" endtime="20210601 11:26:45.676"/>
</kw>
<status status="PASS" starttime="20210601 11:26:45.666" endtime="20210601 11:26:45.677"/>
</kw>
<msg timestamp="20210601 11:26:45.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210601 11:26:45.666" endtime="20210601 11:26:45.677"/>
</kw>
<status status="PASS" starttime="20210601 11:26:45.665" endtime="20210601 11:26:45.677"/>
</kw>
<status status="PASS" starttime="20210601 11:26:45.665" endtime="20210601 11:26:45.677"/>
</kw>
<status status="PASS" starttime="20210601 11:26:45.652" endtime="20210601 11:26:45.677"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210601 11:26:45.651" endtime="20210601 11:26:45.677"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210601 11:26:45.605" endtime="20210601 11:26:45.678"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2867810"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
