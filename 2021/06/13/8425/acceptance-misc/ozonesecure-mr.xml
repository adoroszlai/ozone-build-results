<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210613 02:09:10.205" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:04:37.529" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:04:42.131" level="INFO">${rc} = 255</msg>
<msg timestamp="20210613 02:04:42.131" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210613 02:04:37.525" endtime="20210613 02:04:42.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:04:42.133" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210613 02:04:42.132" endtime="20210613 02:04:42.133"/>
</kw>
<msg timestamp="20210613 02:04:42.133" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210613 02:04:37.524" endtime="20210613 02:04:42.133"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:04:42.138" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:04:45.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:04:45.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210613 02:04:42.136" endtime="20210613 02:04:45.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:04:45.868" level="INFO"/>
<status status="PASS" starttime="20210613 02:04:45.868" endtime="20210613 02:04:45.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:04:45.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:04:45.869" endtime="20210613 02:04:45.869"/>
</kw>
<status status="PASS" starttime="20210613 02:04:42.135" endtime="20210613 02:04:45.870"/>
</kw>
<msg timestamp="20210613 02:04:45.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:04:42.135" endtime="20210613 02:04:45.870"/>
</kw>
<msg timestamp="20210613 02:04:45.870" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210613 02:04:42.134" endtime="20210613 02:04:45.870"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210613 02:04:45.870" endtime="20210613 02:04:45.871"/>
</kw>
<status status="PASS" starttime="20210613 02:04:42.134" endtime="20210613 02:04:45.871"/>
</kw>
<status status="PASS" starttime="20210613 02:04:42.134" endtime="20210613 02:04:45.871"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:04:45.876" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:04:49.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:04:49.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210613 02:04:45.874" endtime="20210613 02:04:49.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:04:49.614" level="INFO"/>
<status status="PASS" starttime="20210613 02:04:49.613" endtime="20210613 02:04:49.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:04:49.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:04:49.614" endtime="20210613 02:04:49.615"/>
</kw>
<status status="PASS" starttime="20210613 02:04:45.873" endtime="20210613 02:04:49.615"/>
</kw>
<msg timestamp="20210613 02:04:49.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:04:45.873" endtime="20210613 02:04:49.615"/>
</kw>
<status status="PASS" starttime="20210613 02:04:45.872" endtime="20210613 02:04:49.616"/>
</kw>
<status status="PASS" starttime="20210613 02:04:45.872" endtime="20210613 02:04:49.616"/>
</kw>
<status status="PASS" starttime="20210613 02:04:45.871" endtime="20210613 02:04:49.616"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210613 02:04:49.616" endtime="20210613 02:04:49.616"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:04:49.620" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:04:53.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:04:53.560" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210613 02:04:49.618" endtime="20210613 02:04:53.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:04:53.562" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-13T02:04:49.409Z",
  "modificationTime" : "2021-06-13T02:04:49.409Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210613 02:04:53.561" endtime="20210613 02:04:53.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:04:53.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:04:53.562" endtime="20210613 02:04:53.563"/>
</kw>
<status status="PASS" starttime="20210613 02:04:49.617" endtime="20210613 02:04:53.564"/>
</kw>
<msg timestamp="20210613 02:04:53.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:04:49.617" endtime="20210613 02:04:53.564"/>
</kw>
<msg timestamp="20210613 02:04:53.564" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210613 02:04:49.617" endtime="20210613 02:04:53.564"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210613 02:04:53.564" endtime="20210613 02:04:53.565"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210613 02:04:53.571" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210613 02:04:53.570" endtime="20210613 02:04:53.571"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210613 02:04:53.572" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210613 02:04:53.571" endtime="20210613 02:04:53.572"/>
</kw>
<status status="PASS" starttime="20210613 02:04:53.569" endtime="20210613 02:04:53.572"/>
</kw>
<msg timestamp="20210613 02:04:53.572" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210613 02:04:53.568" endtime="20210613 02:04:53.572"/>
</kw>
<status status="PASS" starttime="20210613 02:04:53.567" endtime="20210613 02:04:53.573"/>
</kw>
<msg timestamp="20210613 02:04:53.573" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210613 02:04:53.566" endtime="20210613 02:04:53.573"/>
</kw>
<msg timestamp="20210613 02:04:53.573" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210613 02:04:53.565" endtime="20210613 02:04:53.573"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:04:53.577" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:04:57.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:04:57.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210613 02:04:53.575" endtime="20210613 02:04:57.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:04:57.356" level="INFO"/>
<status status="PASS" starttime="20210613 02:04:57.355" endtime="20210613 02:04:57.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:04:57.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:04:57.356" endtime="20210613 02:04:57.357"/>
</kw>
<status status="PASS" starttime="20210613 02:04:53.574" endtime="20210613 02:04:57.357"/>
</kw>
<msg timestamp="20210613 02:04:57.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:04:53.574" endtime="20210613 02:04:57.357"/>
</kw>
<status status="PASS" starttime="20210613 02:04:53.573" endtime="20210613 02:04:57.358"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:04:57.361" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:05:05.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:05:05.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210613 02:04:57.359" endtime="20210613 02:05:05.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:05:05.189" level="INFO"/>
<status status="PASS" starttime="20210613 02:05:05.188" endtime="20210613 02:05:05.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:05:05.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:05:05.189" endtime="20210613 02:05:05.190"/>
</kw>
<status status="PASS" starttime="20210613 02:04:57.359" endtime="20210613 02:05:05.190"/>
</kw>
<msg timestamp="20210613 02:05:05.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:04:57.359" endtime="20210613 02:05:05.190"/>
</kw>
<status status="PASS" starttime="20210613 02:04:57.358" endtime="20210613 02:05:05.191"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:05:05.194" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:05:11.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:05:11.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210613 02:05:05.192" endtime="20210613 02:05:11.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:05:11.461" level="INFO"/>
<status status="PASS" starttime="20210613 02:05:11.460" endtime="20210613 02:05:11.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:05:11.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:05:11.461" endtime="20210613 02:05:11.462"/>
</kw>
<status status="PASS" starttime="20210613 02:05:05.192" endtime="20210613 02:05:11.462"/>
</kw>
<msg timestamp="20210613 02:05:11.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:05:05.191" endtime="20210613 02:05:11.463"/>
</kw>
<status status="PASS" starttime="20210613 02:05:05.191" endtime="20210613 02:05:11.463"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:05:11.467" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:05:17.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:05:17.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210613 02:05:11.464" endtime="20210613 02:05:17.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:05:17.088" level="INFO"/>
<status status="PASS" starttime="20210613 02:05:17.088" endtime="20210613 02:05:17.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:05:17.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:05:17.089" endtime="20210613 02:05:17.089"/>
</kw>
<status status="PASS" starttime="20210613 02:05:11.464" endtime="20210613 02:05:17.090"/>
</kw>
<msg timestamp="20210613 02:05:17.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:05:11.464" endtime="20210613 02:05:17.090"/>
</kw>
<status status="PASS" starttime="20210613 02:05:11.463" endtime="20210613 02:05:17.090"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210613 02:04:37.523" endtime="20210613 02:05:17.090"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210613 02:05:17.096" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210613 02:05:17.096" endtime="20210613 02:05:17.096"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210613 02:05:17.097" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210613 02:05:17.096" endtime="20210613 02:05:17.097"/>
</kw>
<status status="PASS" starttime="20210613 02:05:17.095" endtime="20210613 02:05:17.097"/>
</kw>
<msg timestamp="20210613 02:05:17.097" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210613 02:05:17.094" endtime="20210613 02:05:17.097"/>
</kw>
<status status="PASS" starttime="20210613 02:05:17.093" endtime="20210613 02:05:17.098"/>
</kw>
<msg timestamp="20210613 02:05:17.098" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210613 02:05:17.093" endtime="20210613 02:05:17.098"/>
</kw>
<msg timestamp="20210613 02:05:17.098" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210613 02:05:17.092" endtime="20210613 02:05:17.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:05:17.102" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:05:20.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:05:20.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210613 02:05:17.100" endtime="20210613 02:05:20.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:05:20.756" level="INFO"/>
<status status="PASS" starttime="20210613 02:05:20.755" endtime="20210613 02:05:20.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:05:20.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:05:20.756" endtime="20210613 02:05:20.757"/>
</kw>
<status status="PASS" starttime="20210613 02:05:17.099" endtime="20210613 02:05:20.757"/>
</kw>
<msg timestamp="20210613 02:05:20.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:05:17.099" endtime="20210613 02:05:20.757"/>
</kw>
<status status="PASS" starttime="20210613 02:05:17.098" endtime="20210613 02:05:20.757"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:05:20.761" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:05:24.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:05:24.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210613 02:05:20.759" endtime="20210613 02:05:24.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:05:24.595" level="INFO"/>
<status status="PASS" starttime="20210613 02:05:24.594" endtime="20210613 02:05:24.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:05:24.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:05:24.595" endtime="20210613 02:05:24.596"/>
</kw>
<status status="PASS" starttime="20210613 02:05:20.758" endtime="20210613 02:05:24.596"/>
</kw>
<msg timestamp="20210613 02:05:24.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:05:20.758" endtime="20210613 02:05:24.596"/>
</kw>
<status status="PASS" starttime="20210613 02:05:20.758" endtime="20210613 02:05:24.596"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210613 02:05:17.091" endtime="20210613 02:05:24.597"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210613 02:04:37.462" endtime="20210613 02:05:24.598"/>
</suite>
<suite id="s1-s2" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210613 02:07:29.273" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210613 02:07:29.273" endtime="20210613 02:07:29.273"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210613 02:07:29.274" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210613 02:07:29.274" endtime="20210613 02:07:29.274"/>
</kw>
<status status="PASS" starttime="20210613 02:07:29.272" endtime="20210613 02:07:29.274"/>
</kw>
<msg timestamp="20210613 02:07:29.274" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210613 02:07:29.271" endtime="20210613 02:07:29.274"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210613 02:07:29.275" endtime="20210613 02:07:29.275"/>
</kw>
<msg timestamp="20210613 02:07:29.275" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210613 02:07:29.275" endtime="20210613 02:07:29.276"/>
</kw>
<status status="PASS" starttime="20210613 02:07:29.271" endtime="20210613 02:07:29.282"/>
</kw>
<msg timestamp="20210613 02:07:29.283" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210613 02:07:29.270" endtime="20210613 02:07:29.283"/>
</kw>
<msg timestamp="20210613 02:07:29.283" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210613 02:07:29.269" endtime="20210613 02:07:29.283"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210613 02:07:29.283" level="INFO">${random} = 81393</msg>
<status status="PASS" starttime="20210613 02:07:29.283" endtime="20210613 02:07:29.283"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:07:29.295" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-81393 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:07:33.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:07:33.488" level="INFO">${output} = 2021-06-13 02:07:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-13 02:07:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210613 02:07:29.287" endtime="20210613 02:07:33.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:07:33.490" level="INFO">2021-06-13 02:07:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-13 02:07:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-13 02:07:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-13 02:07:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-13 02:07:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-25EFBA9E3D45-&gt;631be940-629c-4885-842a-bf9e025a7797
2021-06-13 02:07:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210613 02:07:33.489" endtime="20210613 02:07:33.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:07:33.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:07:33.490" endtime="20210613 02:07:33.491"/>
</kw>
<status status="PASS" starttime="20210613 02:07:29.287" endtime="20210613 02:07:33.491"/>
</kw>
<msg timestamp="20210613 02:07:33.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:07:29.284" endtime="20210613 02:07:33.491"/>
</kw>
<msg timestamp="20210613 02:07:33.491" level="INFO">${result} = 2021-06-13 02:07:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-13 02:07:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210613 02:07:29.284" endtime="20210613 02:07:33.491"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:07:33.495" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:07:35.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:07:35.733" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-13 02:04 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-13 02:05 ofs://om/volume1/bucket1/ozone-15462
-rw-...</msg>
<status status="PASS" starttime="20210613 02:07:33.493" endtime="20210613 02:07:35.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:07:35.734" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-13 02:04 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-13 02:05 ofs://om/volume1/bucket1/ozone-15462
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-13 02:07 ofs://om/volume1/bucket1/ozone-81393
drwxrwxrwx   - hadoop hadoop          0 2021-06-13 02:05 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-06-13 02:07 ofs://om/volume1/bucket1/wordcount-P5GDmJyM.txt</msg>
<status status="PASS" starttime="20210613 02:07:35.734" endtime="20210613 02:07:35.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:07:35.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:07:35.735" endtime="20210613 02:07:35.735"/>
</kw>
<status status="PASS" starttime="20210613 02:07:33.492" endtime="20210613 02:07:35.736"/>
</kw>
<msg timestamp="20210613 02:07:35.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:07:33.492" endtime="20210613 02:07:35.736"/>
</kw>
<msg timestamp="20210613 02:07:35.736" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-13 02:04 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-13 02:05 ofs://om/volume1/bucket1/ozone-15462
-rw-...</msg>
<status status="PASS" starttime="20210613 02:07:33.491" endtime="20210613 02:07:35.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210613 02:07:35.736" endtime="20210613 02:07:35.737"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210613 02:07:29.268" endtime="20210613 02:07:35.737"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210613 02:07:29.184" endtime="20210613 02:07:35.738"/>
</suite>
<suite id="s1-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210613 02:05:55.327" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210613 02:05:55.326" endtime="20210613 02:05:55.327"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210613 02:05:55.327" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210613 02:05:55.327" endtime="20210613 02:05:55.327"/>
</kw>
<status status="PASS" starttime="20210613 02:05:55.326" endtime="20210613 02:05:55.327"/>
</kw>
<msg timestamp="20210613 02:05:55.328" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210613 02:05:55.325" endtime="20210613 02:05:55.328"/>
</kw>
<status status="PASS" starttime="20210613 02:05:55.325" endtime="20210613 02:05:55.328"/>
</kw>
<msg timestamp="20210613 02:05:55.328" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210613 02:05:55.324" endtime="20210613 02:05:55.328"/>
</kw>
<msg timestamp="20210613 02:05:55.328" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210613 02:05:55.323" endtime="20210613 02:05:55.328"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210613 02:05:55.329" level="INFO">${random} = 15462</msg>
<status status="PASS" starttime="20210613 02:05:55.328" endtime="20210613 02:05:55.329"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:05:55.335" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-15462 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:05:59.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:05:59.656" level="INFO">${output} = 2021-06-13 02:05:57 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-13 02:05:57 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210613 02:05:55.330" endtime="20210613 02:05:59.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:05:59.657" level="INFO">2021-06-13 02:05:57 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-13 02:05:57 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-13 02:05:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-13 02:05:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-13 02:05:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-367E56F50296-&gt;631be940-629c-4885-842a-bf9e025a7797
2021-06-13 02:05:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210613 02:05:59.656" endtime="20210613 02:05:59.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:05:59.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:05:59.657" endtime="20210613 02:05:59.658"/>
</kw>
<status status="PASS" starttime="20210613 02:05:55.330" endtime="20210613 02:05:59.658"/>
</kw>
<msg timestamp="20210613 02:05:59.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:05:55.329" endtime="20210613 02:05:59.658"/>
</kw>
<msg timestamp="20210613 02:05:59.658" level="INFO">${result} = 2021-06-13 02:05:57 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-13 02:05:57 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210613 02:05:55.329" endtime="20210613 02:05:59.659"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:05:59.662" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:06:01.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:06:01.813" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-13 02:04 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-13 02:05 o3fs://bucket1.volume1.om/ozone-15462
dr...</msg>
<status status="PASS" starttime="20210613 02:05:59.660" endtime="20210613 02:06:01.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:06:01.814" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-13 02:04 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-13 02:05 o3fs://bucket1.volume1.om/ozone-15462
drwxrwxrwx   - hadoop hadoop          0 2021-06-13 02:05 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210613 02:06:01.813" endtime="20210613 02:06:01.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:06:01.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:06:01.814" endtime="20210613 02:06:01.815"/>
</kw>
<status status="PASS" starttime="20210613 02:05:59.659" endtime="20210613 02:06:01.815"/>
</kw>
<msg timestamp="20210613 02:06:01.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:05:59.659" endtime="20210613 02:06:01.815"/>
</kw>
<msg timestamp="20210613 02:06:01.815" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-13 02:04 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-13 02:05 o3fs://bucket1.volume1.om/ozone-15462
dr...</msg>
<status status="PASS" starttime="20210613 02:05:59.659" endtime="20210613 02:06:01.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210613 02:06:01.816" endtime="20210613 02:06:01.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210613 02:05:55.322" endtime="20210613 02:06:01.816"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210613 02:05:55.269" endtime="20210613 02:06:01.818"/>
</suite>
<suite id="s1-s4" name="Kinit-Hadoop" source="/opt/ozone/smoketest/kinit-hadoop.robot">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:05:49.438" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:05:49.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:05:49.444" level="INFO">${output} = rm</msg>
<status status="PASS" starttime="20210613 02:05:49.434" endtime="20210613 02:05:49.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:05:49.445" level="INFO">rm</msg>
<status status="PASS" starttime="20210613 02:05:49.444" endtime="20210613 02:05:49.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:05:49.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:05:49.445" endtime="20210613 02:05:49.446"/>
</kw>
<status status="PASS" starttime="20210613 02:05:49.433" endtime="20210613 02:05:49.446"/>
</kw>
<msg timestamp="20210613 02:05:49.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:05:49.433" endtime="20210613 02:05:49.446"/>
</kw>
<msg timestamp="20210613 02:05:49.446" level="INFO">${instance} = rm</msg>
<status status="PASS" starttime="20210613 02:05:49.432" endtime="20210613 02:05:49.446"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210613 02:05:49.447" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210613 02:05:49.446" endtime="20210613 02:05:49.448"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:05:49.453" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:05:49.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:05:49.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210613 02:05:49.449" endtime="20210613 02:05:49.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:05:49.461" level="INFO"/>
<status status="PASS" starttime="20210613 02:05:49.460" endtime="20210613 02:05:49.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:05:49.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:05:49.461" endtime="20210613 02:05:49.462"/>
</kw>
<status status="PASS" starttime="20210613 02:05:49.449" endtime="20210613 02:05:49.462"/>
</kw>
<msg timestamp="20210613 02:05:49.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:05:49.449" endtime="20210613 02:05:49.462"/>
</kw>
<status status="PASS" starttime="20210613 02:05:49.448" endtime="20210613 02:05:49.463"/>
</kw>
<status status="PASS" starttime="20210613 02:05:49.448" endtime="20210613 02:05:49.463"/>
</kw>
<status status="PASS" starttime="20210613 02:05:49.432" endtime="20210613 02:05:49.463"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210613 02:05:49.431" endtime="20210613 02:05:49.463"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210613 02:05:49.379" endtime="20210613 02:05:49.464"/>
</suite>
<suite id="s1-s5" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:04:31.782" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:04:31.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:04:31.786" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210613 02:04:31.779" endtime="20210613 02:04:31.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:04:31.787" level="INFO">om</msg>
<status status="PASS" starttime="20210613 02:04:31.786" endtime="20210613 02:04:31.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:04:31.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:04:31.788" endtime="20210613 02:04:31.789"/>
</kw>
<status status="PASS" starttime="20210613 02:04:31.778" endtime="20210613 02:04:31.790"/>
</kw>
<msg timestamp="20210613 02:04:31.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:04:31.778" endtime="20210613 02:04:31.790"/>
</kw>
<msg timestamp="20210613 02:04:31.790" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20210613 02:04:31.778" endtime="20210613 02:04:31.790"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210613 02:04:31.791" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210613 02:04:31.790" endtime="20210613 02:04:31.791"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:04:31.796" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:04:31.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:04:31.803" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210613 02:04:31.794" endtime="20210613 02:04:31.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:04:31.804" level="INFO"/>
<status status="PASS" starttime="20210613 02:04:31.803" endtime="20210613 02:04:31.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:04:31.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:04:31.804" endtime="20210613 02:04:31.805"/>
</kw>
<status status="PASS" starttime="20210613 02:04:31.793" endtime="20210613 02:04:31.805"/>
</kw>
<msg timestamp="20210613 02:04:31.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:04:31.793" endtime="20210613 02:04:31.805"/>
</kw>
<status status="PASS" starttime="20210613 02:04:31.792" endtime="20210613 02:04:31.805"/>
</kw>
<status status="PASS" starttime="20210613 02:04:31.791" endtime="20210613 02:04:31.806"/>
</kw>
<status status="PASS" starttime="20210613 02:04:31.777" endtime="20210613 02:04:31.806"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210613 02:04:31.776" endtime="20210613 02:04:31.806"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210613 02:04:31.724" endtime="20210613 02:04:31.807"/>
</suite>
<suite id="s1-s6" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:07:41.833" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:07:41.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:07:41.841" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:07:41.829" endtime="20210613 02:07:41.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:07:41.842" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:07:41.841" endtime="20210613 02:07:41.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:07:41.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:07:41.842" endtime="20210613 02:07:41.843"/>
</kw>
<status status="PASS" starttime="20210613 02:07:41.828" endtime="20210613 02:07:41.843"/>
</kw>
<msg timestamp="20210613 02:07:41.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:07:41.828" endtime="20210613 02:07:41.843"/>
</kw>
<msg timestamp="20210613 02:07:41.843" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:07:41.827" endtime="20210613 02:07:41.845"/>
</kw>
<msg timestamp="20210613 02:07:41.845" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:07:41.827" endtime="20210613 02:07:41.845"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210613 02:07:41.849" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210613 02:07:41.848" endtime="20210613 02:07:41.849"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210613 02:07:41.849" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210613 02:07:41.849" endtime="20210613 02:07:41.849"/>
</kw>
<status status="PASS" starttime="20210613 02:07:41.848" endtime="20210613 02:07:41.850"/>
</kw>
<msg timestamp="20210613 02:07:41.850" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210613 02:07:41.847" endtime="20210613 02:07:41.850"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210613 02:07:41.851" endtime="20210613 02:07:41.851"/>
</kw>
<msg timestamp="20210613 02:07:41.851" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210613 02:07:41.850" endtime="20210613 02:07:41.851"/>
</kw>
<status status="PASS" starttime="20210613 02:07:41.847" endtime="20210613 02:07:41.851"/>
</kw>
<msg timestamp="20210613 02:07:41.851" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210613 02:07:41.846" endtime="20210613 02:07:41.851"/>
</kw>
<msg timestamp="20210613 02:07:41.852" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210613 02:07:41.845" endtime="20210613 02:07:41.852"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:07:41.855" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:08:21.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:08:21.851" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-13 02:07:44 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-13 02:07:44 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210613 02:07:41.853" endtime="20210613 02:08:21.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:08:21.853" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-13 02:07:44 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-13 02:07:44 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-13 02:07:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-13 02:07:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-13 02:07:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8AC9AAAAF2D1-&gt;631be940-629c-4885-842a-bf9e025a7797
2021-06-13 02:07:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-06-13 02:07:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5D10F7AF524B-&gt;3586f4b3-e03f-488e-b524-712143a530fd
2021-06-13 02:07:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-06-13 02:07:48 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-13 02:07:48 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-06-13 02:07:48 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623550068854, maxDate=1624154868854, sequenceNumber=3, masterKeyId=2))
2021-06-13 02:07:48 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 92 90 80 99 a0 2f 38 92 98 b2 b9 a2 2f 40 03 48 01 5a 0d 34 30 34 35 33 31 30 38 31 33 33 36 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-13 02:07:48 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623550068854, maxDate=1624154868854, sequenceNumber=3, masterKeyId=2)
2021-06-13 02:07:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-13 02:07:49 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-13 02:07:49 INFO  JobSubmitter:202 - number of splits:3
2021-06-13 02:07:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1623549816790_0003
2021-06-13 02:07:49 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 92 90 80 99 a0 2f 38 92 98 b2 b9 a2 2f 40 03 48 01 5a 0d 34 30 34 35 33 31 30 38 31 33 33 36 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623550068854, maxDate=1624154868854, sequenceNumber=3, masterKeyId=2)]
2021-06-13 02:07:50 INFO  Configuration:2795 - resource-types.xml not found
2021-06-13 02:07:50 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-13 02:07:50 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-13 02:07:50 INFO  YarnClientImpl:329 - Submitted application application_1623549816790_0003
2021-06-13 02:07:50 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1623549816790_0003/
2021-06-13 02:07:50 INFO  Job:1614 - Running job: job_1623549816790_0003
2021-06-13 02:07:58 INFO  Job:1635 - Job job_1623549816790_0003 running in uber mode : false
2021-06-13 02:07:58 INFO  Job:1642 -  map 0% reduce 0%
2021-06-13 02:08:11 INFO  Job:1642 -  map 33% reduce 0%
2021-06-13 02:08:13 INFO  Job:1642 -  map 100% reduce 0%
2021-06-13 02:08:18 INFO  Job:1642 -  map 100% reduce 100%
2021-06-13 02:08:21 INFO  Job:1653 - Job job_1623549816790_0003 completed successfully
2021-06-13 02:08:21 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1129821
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=53440
		Total time spent by all reduces in occupied slots (ms)=8944
		Total time spent by all map tasks (ms)=26720
		Total time spent by all reduce tasks (ms)=4472
		Total vcore-milliseconds taken by all map tasks=26720
		Total vcore-milliseconds taken by all reduce tasks=4472
		Total megabyte-milliseconds taken by all map tasks=54722560
		Total megabyte-milliseconds taken by all reduce tasks=9158656
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1383
		CPU time spent (ms)=8090
		Physical memory (bytes) snapshot=1445122048
		Virtual memory (bytes) snapshot=14033141760
		Total committed heap usage (bytes)=1272446976
		Peak Map Physical memory (bytes)=390995968
		Peak Map Virtual memory (bytes)=3511230464
		Peak Reduce Physical memory (bytes)=299634688
		Peak Reduce Virtual memory (bytes)=3506524160
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.933 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210613 02:08:21.852" endtime="20210613 02:08:21.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:08:21.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:08:21.853" endtime="20210613 02:08:21.853"/>
</kw>
<status status="PASS" starttime="20210613 02:07:41.853" endtime="20210613 02:08:21.854"/>
</kw>
<msg timestamp="20210613 02:08:21.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:07:41.853" endtime="20210613 02:08:21.854"/>
</kw>
<msg timestamp="20210613 02:08:21.854" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-13 02:07:44 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-13 02:07:44 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210613 02:07:41.852" endtime="20210613 02:08:21.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210613 02:08:21.855" endtime="20210613 02:08:21.855"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210613 02:07:41.826" endtime="20210613 02:08:21.855"/>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:08:21.862" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:08:21.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:08:21.868" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:08:21.860" endtime="20210613 02:08:21.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:08:21.869" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:08:21.868" endtime="20210613 02:08:21.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:08:21.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:08:21.870" endtime="20210613 02:08:21.870"/>
</kw>
<status status="PASS" starttime="20210613 02:08:21.859" endtime="20210613 02:08:21.870"/>
</kw>
<msg timestamp="20210613 02:08:21.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:08:21.858" endtime="20210613 02:08:21.871"/>
</kw>
<msg timestamp="20210613 02:08:21.871" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:08:21.858" endtime="20210613 02:08:21.871"/>
</kw>
<msg timestamp="20210613 02:08:21.871" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:08:21.857" endtime="20210613 02:08:21.871"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210613 02:08:21.872" level="INFO">${random} = L5I05L8O</msg>
<status status="PASS" starttime="20210613 02:08:21.871" endtime="20210613 02:08:21.872"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210613 02:08:21.875" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210613 02:08:21.875" endtime="20210613 02:08:21.875"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210613 02:08:21.876" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210613 02:08:21.876" endtime="20210613 02:08:21.876"/>
</kw>
<status status="PASS" starttime="20210613 02:08:21.874" endtime="20210613 02:08:21.876"/>
</kw>
<msg timestamp="20210613 02:08:21.876" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210613 02:08:21.874" endtime="20210613 02:08:21.877"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210613 02:08:21.877" endtime="20210613 02:08:21.877"/>
</kw>
<msg timestamp="20210613 02:08:21.878" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210613 02:08:21.877" endtime="20210613 02:08:21.878"/>
</kw>
<status status="PASS" starttime="20210613 02:08:21.873" endtime="20210613 02:08:21.878"/>
</kw>
<msg timestamp="20210613 02:08:21.878" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210613 02:08:21.873" endtime="20210613 02:08:21.878"/>
</kw>
<msg timestamp="20210613 02:08:21.878" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210613 02:08:21.872" endtime="20210613 02:08:21.878"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210613 02:08:21.884" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210613 02:08:21.884" endtime="20210613 02:08:21.884"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210613 02:08:21.885" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210613 02:08:21.884" endtime="20210613 02:08:21.885"/>
</kw>
<status status="PASS" starttime="20210613 02:08:21.883" endtime="20210613 02:08:21.885"/>
</kw>
<msg timestamp="20210613 02:08:21.885" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210613 02:08:21.883" endtime="20210613 02:08:21.885"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210613 02:08:21.887" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210613 02:08:21.886" endtime="20210613 02:08:21.887"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210613 02:08:21.887" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210613 02:08:21.887" endtime="20210613 02:08:21.888"/>
</kw>
<status status="PASS" starttime="20210613 02:08:21.886" endtime="20210613 02:08:21.888"/>
</kw>
<msg timestamp="20210613 02:08:21.888" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210613 02:08:21.886" endtime="20210613 02:08:21.888"/>
</kw>
<status status="PASS" starttime="20210613 02:08:21.882" endtime="20210613 02:08:21.888"/>
</kw>
<msg timestamp="20210613 02:08:21.888" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210613 02:08:21.879" endtime="20210613 02:08:21.888"/>
</kw>
<msg timestamp="20210613 02:08:21.889" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210613 02:08:21.878" endtime="20210613 02:08:21.889"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210613 02:08:21.892" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210613 02:08:21.891" endtime="20210613 02:08:21.892"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210613 02:08:21.893" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210613 02:08:21.892" endtime="20210613 02:08:21.893"/>
</kw>
<status status="PASS" starttime="20210613 02:08:21.891" endtime="20210613 02:08:21.893"/>
</kw>
<msg timestamp="20210613 02:08:21.893" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210613 02:08:21.891" endtime="20210613 02:08:21.893"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210613 02:08:21.895" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210613 02:08:21.894" endtime="20210613 02:08:21.895"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210613 02:08:21.895" level="INFO">${result} = /wordcount-L5I05L8O.txt</msg>
<status status="PASS" starttime="20210613 02:08:21.895" endtime="20210613 02:08:21.895"/>
</kw>
<status status="PASS" starttime="20210613 02:08:21.894" endtime="20210613 02:08:21.896"/>
</kw>
<msg timestamp="20210613 02:08:21.896" level="INFO">${path_with_leading} = /wordcount-L5I05L8O.txt</msg>
<status status="PASS" starttime="20210613 02:08:21.893" endtime="20210613 02:08:21.896"/>
</kw>
<status status="PASS" starttime="20210613 02:08:21.890" endtime="20210613 02:08:21.896"/>
</kw>
<msg timestamp="20210613 02:08:21.896" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-L5I05L8O.txt</msg>
<status status="PASS" starttime="20210613 02:08:21.889" endtime="20210613 02:08:21.896"/>
</kw>
<msg timestamp="20210613 02:08:21.896" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-L5I05L8O.txt</msg>
<status status="PASS" starttime="20210613 02:08:21.889" endtime="20210613 02:08:21.896"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:08:21.901" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-L5I05L8O.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:09:01.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:09:01.448" level="INFO">${output} = 2021-06-13 02:08:24 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-13 02:08:24 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
202...</msg>
<status status="PASS" starttime="20210613 02:08:21.898" endtime="20210613 02:09:01.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:09:01.449" level="INFO">2021-06-13 02:08:24 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-13 02:08:24 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-06-13 02:08:24 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623550104560, maxDate=1624154904560, sequenceNumber=4, masterKeyId=2))
2021-06-13 02:08:24 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fc a6 82 99 a0 2f 38 fc ae b4 b9 a2 2f 40 04 48 01 5a 0d 34 30 34 35 33 31 30 38 31 33 33 36 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-13 02:08:24 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623550104560, maxDate=1624154904560, sequenceNumber=4, masterKeyId=2)
2021-06-13 02:08:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-13 02:08:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-13 02:08:25 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-13 02:08:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-13 02:08:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-13 02:08:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4624134B2133-&gt;3586f4b3-e03f-488e-b524-712143a530fd
2021-06-13 02:08:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-13 02:08:29 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-13 02:08:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C3F940E60085-&gt;631be940-629c-4885-842a-bf9e025a7797
2021-06-13 02:08:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-13 02:08:29 INFO  JobSubmitter:202 - number of splits:3
2021-06-13 02:08:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1623549816790_0004
2021-06-13 02:08:29 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fc a6 82 99 a0 2f 38 fc ae b4 b9 a2 2f 40 04 48 01 5a 0d 34 30 34 35 33 31 30 38 31 33 33 36 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623550104560, maxDate=1624154904560, sequenceNumber=4, masterKeyId=2)]
2021-06-13 02:08:29 INFO  Configuration:2795 - resource-types.xml not found
2021-06-13 02:08:29 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-13 02:08:29 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-13 02:08:30 INFO  YarnClientImpl:329 - Submitted application application_1623549816790_0004
2021-06-13 02:08:30 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1623549816790_0004/
2021-06-13 02:08:30 INFO  Job:1614 - Running job: job_1623549816790_0004
2021-06-13 02:08:39 INFO  Job:1635 - Job job_1623549816790_0004 running in uber mode : false
2021-06-13 02:08:39 INFO  Job:1642 -  map 0% reduce 0%
2021-06-13 02:08:50 INFO  Job:1642 -  map 33% reduce 0%
2021-06-13 02:08:51 INFO  Job:1642 -  map 67% reduce 0%
2021-06-13 02:08:52 INFO  Job:1642 -  map 100% reduce 0%
2021-06-13 02:08:57 INFO  Job:1642 -  map 100% reduce 100%
2021-06-13 02:09:00 INFO  Job:1653 - Job job_1623549816790_0004 completed successfully
2021-06-13 02:09:01 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1192487
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39729
		OFS: Number of bytes written=22209
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50964
		Total time spent by all reduces in occupied slots (ms)=8458
		Total time spent by all map tasks (ms)=25482
		Total time spent by all reduce tasks (ms)=4229
		Total vcore-milliseconds taken by all map tasks=25482
		Total vcore-milliseconds taken by all reduce tasks=4229
		Total megabyte-milliseconds taken by all map tasks=52187136
		Total megabyte-milliseconds taken by all reduce tasks=8660992
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1133
		CPU time spent (ms)=8620
		Physical memory (bytes) snapshot=1498091520
		Virtual memory (bytes) snapshot=14044753920
		Total committed heap usage (bytes)=1314390016
		Peak Map Physical memory (bytes)=393379840
		Peak Map Virtual memory (bytes)=3511410688
		Peak Reduce Physical memory (bytes)=330633216
		Peak Reduce Virtual memory (bytes)=3523665920
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209</msg>
<status status="PASS" starttime="20210613 02:09:01.449" endtime="20210613 02:09:01.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:09:01.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:09:01.450" endtime="20210613 02:09:01.450"/>
</kw>
<status status="PASS" starttime="20210613 02:08:21.898" endtime="20210613 02:09:01.451"/>
</kw>
<msg timestamp="20210613 02:09:01.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:08:21.897" endtime="20210613 02:09:01.451"/>
</kw>
<msg timestamp="20210613 02:09:01.451" level="INFO">${output} = 2021-06-13 02:08:24 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-13 02:08:24 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
202...</msg>
<status status="PASS" starttime="20210613 02:08:21.897" endtime="20210613 02:09:01.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210613 02:09:01.452" endtime="20210613 02:09:01.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210613 02:09:01.452" endtime="20210613 02:09:01.452"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210613 02:08:21.856" endtime="20210613 02:09:01.453"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210613 02:07:41.772" endtime="20210613 02:09:01.454"/>
</suite>
<suite id="s1-s7" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:06:07.654" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:06:07.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:06:07.660" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:06:07.650" endtime="20210613 02:06:07.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:06:07.661" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:06:07.661" endtime="20210613 02:06:07.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:06:07.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:06:07.662" endtime="20210613 02:06:07.662"/>
</kw>
<status status="PASS" starttime="20210613 02:06:07.650" endtime="20210613 02:06:07.662"/>
</kw>
<msg timestamp="20210613 02:06:07.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:06:07.649" endtime="20210613 02:06:07.663"/>
</kw>
<msg timestamp="20210613 02:06:07.663" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:06:07.649" endtime="20210613 02:06:07.664"/>
</kw>
<msg timestamp="20210613 02:06:07.664" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:06:07.648" endtime="20210613 02:06:07.664"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210613 02:06:07.668" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210613 02:06:07.667" endtime="20210613 02:06:07.668"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210613 02:06:07.669" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210613 02:06:07.668" endtime="20210613 02:06:07.669"/>
</kw>
<status status="PASS" starttime="20210613 02:06:07.667" endtime="20210613 02:06:07.669"/>
</kw>
<msg timestamp="20210613 02:06:07.669" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210613 02:06:07.666" endtime="20210613 02:06:07.669"/>
</kw>
<status status="PASS" starttime="20210613 02:06:07.666" endtime="20210613 02:06:07.669"/>
</kw>
<msg timestamp="20210613 02:06:07.669" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210613 02:06:07.665" endtime="20210613 02:06:07.669"/>
</kw>
<msg timestamp="20210613 02:06:07.670" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210613 02:06:07.664" endtime="20210613 02:06:07.670"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:06:07.673" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:06:48.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:06:48.441" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-13 02:06:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-13 02:06:09 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210613 02:06:07.671" endtime="20210613 02:06:48.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:06:48.442" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-13 02:06:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-13 02:06:09 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-13 02:06:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-13 02:06:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-13 02:06:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3B17072ED965-&gt;631be940-629c-4885-842a-bf9e025a7797
2021-06-13 02:06:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-06-13 02:06:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-51E1FE920120-&gt;3586f4b3-e03f-488e-b524-712143a530fd
2021-06-13 02:06:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-13 02:06:11 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-13 02:06:11 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-06-13 02:06:12 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623549972254, maxDate=1624154772254, sequenceNumber=1, masterKeyId=2))
2021-06-13 02:06:12 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 eb 9b fa 98 a0 2f 38 eb a3 ac b9 a2 2f 40 01 48 01 5a 0d 34 30 34 35 33 31 30 38 31 33 33 36 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-13 02:06:12 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623549972254, maxDate=1624154772254, sequenceNumber=1, masterKeyId=2)
2021-06-13 02:06:12 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-13 02:06:12 INFO  JobSubmitter:202 - number of splits:3
2021-06-13 02:06:13 INFO  JobSubmitter:298 - Submitting tokens for job: job_1623549816790_0001
2021-06-13 02:06:13 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 eb 9b fa 98 a0 2f 38 eb a3 ac b9 a2 2f 40 01 48 01 5a 0d 34 30 34 35 33 31 30 38 31 33 33 36 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623549972254, maxDate=1624154772254, sequenceNumber=1, masterKeyId=2)]
2021-06-13 02:06:13 INFO  Configuration:2795 - resource-types.xml not found
2021-06-13 02:06:13 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-13 02:06:13 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-13 02:06:15 INFO  YarnClientImpl:329 - Submitted application application_1623549816790_0001
2021-06-13 02:06:15 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1623549816790_0001/
2021-06-13 02:06:15 INFO  Job:1614 - Running job: job_1623549816790_0001
2021-06-13 02:06:26 INFO  Job:1635 - Job job_1623549816790_0001 running in uber mode : false
2021-06-13 02:06:26 INFO  Job:1642 -  map 0% reduce 0%
2021-06-13 02:06:36 INFO  Job:1642 -  map 33% reduce 0%
2021-06-13 02:06:38 INFO  Job:1642 -  map 67% reduce 0%
2021-06-13 02:06:39 INFO  Job:1642 -  map 100% reduce 0%
2021-06-13 02:06:46 INFO  Job:1642 -  map 100% reduce 100%
2021-06-13 02:06:47 INFO  Job:1653 - Job job_1623549816790_0001 completed successfully
2021-06-13 02:06:47 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1130033
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50230
		Total time spent by all reduces in occupied slots (ms)=14240
		Total time spent by all map tasks (ms)=25115
		Total time spent by all reduce tasks (ms)=7120
		Total vcore-milliseconds taken by all map tasks=25115
		Total vcore-milliseconds taken by all reduce tasks=7120
		Total megabyte-milliseconds taken by all map tasks=51435520
		Total megabyte-milliseconds taken by all reduce tasks=14581760
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1114
		CPU time spent (ms)=8170
		Physical memory (bytes) snapshot=1502007296
		Virtual memory (bytes) snapshot=14064463872
		Total committed heap usage (bytes)=1280835584
		Peak Map Physical memory (bytes)=393691136
		Peak Map Virtual memory (bytes)=3513053184
		Peak Reduce Physical memory (bytes)=331735040
		Peak Reduce Virtual memory (bytes)=3530334208
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.281 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210613 02:06:48.441" endtime="20210613 02:06:48.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:06:48.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:06:48.442" endtime="20210613 02:06:48.443"/>
</kw>
<status status="PASS" starttime="20210613 02:06:07.671" endtime="20210613 02:06:48.443"/>
</kw>
<msg timestamp="20210613 02:06:48.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:06:07.670" endtime="20210613 02:06:48.443"/>
</kw>
<msg timestamp="20210613 02:06:48.444" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-13 02:06:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-13 02:06:09 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210613 02:06:07.670" endtime="20210613 02:06:48.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210613 02:06:48.444" endtime="20210613 02:06:48.445"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210613 02:06:07.648" endtime="20210613 02:06:48.445"/>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:06:48.450" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:06:48.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:06:48.457" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:06:48.448" endtime="20210613 02:06:48.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:06:48.459" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:06:48.458" endtime="20210613 02:06:48.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:06:48.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:06:48.460" endtime="20210613 02:06:48.460"/>
</kw>
<status status="PASS" starttime="20210613 02:06:48.447" endtime="20210613 02:06:48.461"/>
</kw>
<msg timestamp="20210613 02:06:48.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:06:48.447" endtime="20210613 02:06:48.461"/>
</kw>
<msg timestamp="20210613 02:06:48.461" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:06:48.447" endtime="20210613 02:06:48.461"/>
</kw>
<msg timestamp="20210613 02:06:48.461" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210613 02:06:48.446" endtime="20210613 02:06:48.461"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210613 02:06:48.462" level="INFO">${random} = P5GDmJyM</msg>
<status status="PASS" starttime="20210613 02:06:48.461" endtime="20210613 02:06:48.462"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210613 02:06:48.466" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210613 02:06:48.465" endtime="20210613 02:06:48.466"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210613 02:06:48.466" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210613 02:06:48.466" endtime="20210613 02:06:48.466"/>
</kw>
<status status="PASS" starttime="20210613 02:06:48.465" endtime="20210613 02:06:48.466"/>
</kw>
<msg timestamp="20210613 02:06:48.467" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210613 02:06:48.464" endtime="20210613 02:06:48.467"/>
</kw>
<status status="PASS" starttime="20210613 02:06:48.463" endtime="20210613 02:06:48.467"/>
</kw>
<msg timestamp="20210613 02:06:48.467" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210613 02:06:48.463" endtime="20210613 02:06:48.467"/>
</kw>
<msg timestamp="20210613 02:06:48.467" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210613 02:06:48.462" endtime="20210613 02:06:48.467"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210613 02:06:48.471" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210613 02:06:48.470" endtime="20210613 02:06:48.471"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210613 02:06:48.471" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210613 02:06:48.471" endtime="20210613 02:06:48.471"/>
</kw>
<status status="PASS" starttime="20210613 02:06:48.470" endtime="20210613 02:06:48.471"/>
</kw>
<msg timestamp="20210613 02:06:48.471" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210613 02:06:48.469" endtime="20210613 02:06:48.472"/>
</kw>
<status status="PASS" starttime="20210613 02:06:48.469" endtime="20210613 02:06:48.472"/>
</kw>
<msg timestamp="20210613 02:06:48.472" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210613 02:06:48.468" endtime="20210613 02:06:48.472"/>
</kw>
<msg timestamp="20210613 02:06:48.472" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210613 02:06:48.467" endtime="20210613 02:06:48.472"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210613 02:06:48.476" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210613 02:06:48.475" endtime="20210613 02:06:48.476"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210613 02:06:48.477" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210613 02:06:48.476" endtime="20210613 02:06:48.477"/>
</kw>
<status status="PASS" starttime="20210613 02:06:48.475" endtime="20210613 02:06:48.477"/>
</kw>
<msg timestamp="20210613 02:06:48.477" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210613 02:06:48.474" endtime="20210613 02:06:48.477"/>
</kw>
<status status="PASS" starttime="20210613 02:06:48.473" endtime="20210613 02:06:48.477"/>
</kw>
<msg timestamp="20210613 02:06:48.477" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-P5GDmJyM.txt</msg>
<status status="PASS" starttime="20210613 02:06:48.473" endtime="20210613 02:06:48.477"/>
</kw>
<msg timestamp="20210613 02:06:48.478" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-P5GDmJyM.txt</msg>
<status status="PASS" starttime="20210613 02:06:48.472" endtime="20210613 02:06:48.478"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210613 02:06:48.481" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-P5GDmJyM.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210613 02:07:23.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210613 02:07:23.219" level="INFO">${output} = 2021-06-13 02:06:50 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-13 02:06:51 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
202...</msg>
<status status="PASS" starttime="20210613 02:06:48.479" endtime="20210613 02:07:23.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210613 02:07:23.220" level="INFO">2021-06-13 02:06:50 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-13 02:06:51 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-06-13 02:06:51 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623550011399, maxDate=1624154811399, sequenceNumber=2, masterKeyId=2))
2021-06-13 02:06:51 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e5 ce fc 98 a0 2f 38 e5 d6 ae b9 a2 2f 40 02 48 01 5a 0d 34 30 34 35 33 31 30 38 31 33 33 36 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-13 02:06:51 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623550011399, maxDate=1624154811399, sequenceNumber=2, masterKeyId=2)
2021-06-13 02:06:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-13 02:06:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-13 02:06:51 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-13 02:06:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-13 02:06:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-13 02:06:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E738E3D9CB73-&gt;631be940-629c-4885-842a-bf9e025a7797
2021-06-13 02:06:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-13 02:06:53 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-13 02:06:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4CF824140FBC-&gt;3586f4b3-e03f-488e-b524-712143a530fd
2021-06-13 02:06:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-13 02:06:53 INFO  JobSubmitter:202 - number of splits:3
2021-06-13 02:06:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1623549816790_0002
2021-06-13 02:06:54 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e5 ce fc 98 a0 2f 38 e5 d6 ae b9 a2 2f 40 02 48 01 5a 0d 34 30 34 35 33 31 30 38 31 33 33 36 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623550011399, maxDate=1624154811399, sequenceNumber=2, masterKeyId=2)]
2021-06-13 02:06:54 INFO  Configuration:2795 - resource-types.xml not found
2021-06-13 02:06:54 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-13 02:06:54 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-13 02:06:55 INFO  YarnClientImpl:329 - Submitted application application_1623549816790_0002
2021-06-13 02:06:55 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1623549816790_0002/
2021-06-13 02:06:55 INFO  Job:1614 - Running job: job_1623549816790_0002
2021-06-13 02:07:03 INFO  Job:1635 - Job job_1623549816790_0002 running in uber mode : false
2021-06-13 02:07:03 INFO  Job:1642 -  map 0% reduce 0%
2021-06-13 02:07:14 INFO  Job:1642 -  map 33% reduce 0%
2021-06-13 02:07:16 INFO  Job:1642 -  map 67% reduce 0%
2021-06-13 02:07:17 INFO  Job:1642 -  map 100% reduce 0%
2021-06-13 02:07:21 INFO  Job:1642 -  map 100% reduce 100%
2021-06-13 02:07:22 INFO  Job:1653 - Job job_1623549816790_0002 completed successfully
2021-06-13 02:07:22 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1192571
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39732
		O3FS: Number of bytes written=22209
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=53304
		Total time spent by all reduces in occupied slots (ms)=8618
		Total time spent by all map tasks (ms)=26652
		Total time spent by all reduce tasks (ms)=4309
		Total vcore-milliseconds taken by all map tasks=26652
		Total vcore-milliseconds taken by all reduce tasks=4309
		Total megabyte-milliseconds taken by all map tasks=54583296
		Total megabyte-milliseconds taken by all reduce tasks=8824832
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1221
		CPU time spent (ms)=8870
		Physical memory (bytes) snapshot=1507389440
		Virtual memory (bytes) snapshot=14060474368
		Total committed heap usage (bytes)=1280835584
		Peak Map Physical memory (bytes)=399978496
		Peak Map Virtual memory (bytes)=3513040896
		Peak Reduce Physical memory (bytes)=335060992
		Peak Reduce Virtual memory (bytes)=3531034624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209</msg>
<status status="PASS" starttime="20210613 02:07:23.219" endtime="20210613 02:07:23.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210613 02:07:23.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210613 02:07:23.220" endtime="20210613 02:07:23.221"/>
</kw>
<status status="PASS" starttime="20210613 02:06:48.479" endtime="20210613 02:07:23.221"/>
</kw>
<msg timestamp="20210613 02:07:23.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210613 02:06:48.478" endtime="20210613 02:07:23.222"/>
</kw>
<msg timestamp="20210613 02:07:23.222" level="INFO">${output} = 2021-06-13 02:06:50 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-13 02:06:51 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
202...</msg>
<status status="PASS" starttime="20210613 02:06:48.478" endtime="20210613 02:07:23.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210613 02:07:23.222" endtime="20210613 02:07:23.223"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210613 02:07:23.223" endtime="20210613 02:07:23.224"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210613 02:06:48.445" endtime="20210613 02:07:23.224"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210613 02:06:07.595" endtime="20210613 02:07:23.225"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="215719"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="hadoopfs-ofs">ozonesecure-mr.hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="hadoopfs-o3fs">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Kinit-Hadoop">ozonesecure-mr.Kinit-Hadoop</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Kinit">ozonesecure-mr.Kinit</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="mapreduce-ofs">ozonesecure-mr.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="mapreduce-o3fs">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
