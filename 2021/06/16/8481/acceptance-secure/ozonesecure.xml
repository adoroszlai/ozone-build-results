<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210616 03:23:39.811" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:40:59.632" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:40:59.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:40:59.637" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:40:59.629" endtime="20210616 02:40:59.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:40:59.638" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:40:59.638" endtime="20210616 02:40:59.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:40:59.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:40:59.638" endtime="20210616 02:40:59.639"/>
</kw>
<status status="PASS" starttime="20210616 02:40:59.628" endtime="20210616 02:40:59.639"/>
</kw>
<msg timestamp="20210616 02:40:59.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:40:59.628" endtime="20210616 02:40:59.640"/>
</kw>
<msg timestamp="20210616 02:40:59.640" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210616 02:40:59.627" endtime="20210616 02:40:59.640"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:40:59.644" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:40:59.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:40:59.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:40:59.642" endtime="20210616 02:40:59.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:40:59.653" level="INFO"/>
<status status="PASS" starttime="20210616 02:40:59.652" endtime="20210616 02:40:59.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:40:59.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:40:59.654" endtime="20210616 02:40:59.654"/>
</kw>
<status status="PASS" starttime="20210616 02:40:59.642" endtime="20210616 02:40:59.655"/>
</kw>
<msg timestamp="20210616 02:40:59.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:40:59.641" endtime="20210616 02:40:59.655"/>
</kw>
<status status="PASS" starttime="20210616 02:40:59.641" endtime="20210616 02:40:59.656"/>
</kw>
<status status="PASS" starttime="20210616 02:40:59.640" endtime="20210616 02:40:59.656"/>
</kw>
<status status="PASS" starttime="20210616 02:40:59.627" endtime="20210616 02:40:59.656"/>
</kw>
<status status="PASS" starttime="20210616 02:40:59.626" endtime="20210616 02:40:59.656"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:40:59.660" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:40:59.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:40:59.872" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210616 02:40:59.658" endtime="20210616 02:40:59.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:40:59.873" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Wed, 16 Jun 2021 02:40:59 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCHmNkPjWaxrPDg7nRLEAAmC1ON01xtSAWel4zQRz6xGll4e+gzaQoAwY+m/JGcu22o7bz6Rxf2TLrCQaK9kaR9W8G
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1623847259847&amp;s=u0II7Ur8IvuH80iUimOI4LtAhvF3LbaiUoMwEb1unpk="; Path=/; HttpOnly
Last-Modified: Wed, 16 Jun 2021 02:29:34 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210616 02:40:59.872" endtime="20210616 02:40:59.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:40:59.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:40:59.874" endtime="20210616 02:40:59.874"/>
</kw>
<status status="PASS" starttime="20210616 02:40:59.657" endtime="20210616 02:40:59.875"/>
</kw>
<msg timestamp="20210616 02:40:59.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:40:59.657" endtime="20210616 02:40:59.875"/>
</kw>
<msg timestamp="20210616 02:40:59.875" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210616 02:40:59.656" endtime="20210616 02:40:59.875"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:40:59.875" endtime="20210616 02:40:59.876"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 02:40:59.625" endtime="20210616 02:40:59.876"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:40:59.890" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:40:59.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:40:59.895" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:40:59.887" endtime="20210616 02:40:59.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:40:59.896" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:40:59.895" endtime="20210616 02:40:59.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:40:59.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:40:59.896" endtime="20210616 02:40:59.897"/>
</kw>
<status status="PASS" starttime="20210616 02:40:59.887" endtime="20210616 02:40:59.897"/>
</kw>
<msg timestamp="20210616 02:40:59.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:40:59.886" endtime="20210616 02:40:59.898"/>
</kw>
<msg timestamp="20210616 02:40:59.898" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:40:59.885" endtime="20210616 02:40:59.898"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:40:59.900" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:40:59.898" endtime="20210616 02:40:59.900"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:40:59.904" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:40:59.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:40:59.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:40:59.902" endtime="20210616 02:40:59.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:40:59.914" level="INFO"/>
<status status="PASS" starttime="20210616 02:40:59.913" endtime="20210616 02:40:59.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:40:59.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:40:59.914" endtime="20210616 02:40:59.915"/>
</kw>
<status status="PASS" starttime="20210616 02:40:59.902" endtime="20210616 02:40:59.915"/>
</kw>
<msg timestamp="20210616 02:40:59.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:40:59.901" endtime="20210616 02:40:59.915"/>
</kw>
<status status="PASS" starttime="20210616 02:40:59.901" endtime="20210616 02:40:59.916"/>
</kw>
<status status="PASS" starttime="20210616 02:40:59.900" endtime="20210616 02:40:59.916"/>
</kw>
<status status="PASS" starttime="20210616 02:40:59.885" endtime="20210616 02:40:59.916"/>
</kw>
<status status="PASS" starttime="20210616 02:40:59.884" endtime="20210616 02:40:59.916"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:40:59.921" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:01.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:01.832" level="INFO">${output} = 2021-06-16 02:41:01,957 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 02:41:02,102 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 02:40:59.919" endtime="20210616 02:42:01.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:01.834" level="INFO">2021-06-16 02:41:01,957 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 02:41:02,102 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 02:41:02,102 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-16 02:41:03,766 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2021-06-16 02:41:03,768 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2021-06-16 02:41:03,768 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2021-06-16 02:41:03,768 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2021-06-16 02:41:03,768 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2021-06-16 02:41:03,768 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2021-06-16 02:41:03,768 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2021-06-16 02:41:03,768 [main] INFO freon.RandomKeyGenerator: cleanObjects : false
2021-06-16 02:41:03,780 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2021-06-16 02:41:03,781 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2021-06-16 02:41:03,793 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-06-16 02:41:03,820 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-58978, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-06-16 02:41:04,090 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-88023, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-06-16 02:41:04,106 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-33168, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-06-16 02:41:04,117 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-85489, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-06-16 02:41:04,127 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-67887, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-06-16 02:41:04,147 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-58978/bucket-0-91565, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,224 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-88023/bucket-0-92563, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,238 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-33168/bucket-0-83353, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,258 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85489/bucket-0-00662, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,274 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-67887/bucket-0-25235, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,285 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-58978/bucket-1-14082, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,296 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-88023/bucket-1-86155, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,307 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-33168/bucket-1-67003, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,323 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85489/bucket-1-85486, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,334 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-67887/bucket-1-76177, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,347 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-58978/bucket-2-63277, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,357 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-88023/bucket-2-95663, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,374 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-33168/bucket-2-17326, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,391 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85489/bucket-2-13790, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,402 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-67887/bucket-2-14134, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,414 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-58978/bucket-3-09371, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,425 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-88023/bucket-3-80518, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,433 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-33168/bucket-3-33475, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,441 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85489/bucket-3-46689, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,456 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-67887/bucket-3-54656, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,464 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-58978/bucket-4-49121, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,474 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-88023/bucket-4-70366, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,481 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-33168/bucket-4-99880, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,490 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-85489/bucket-4-25818, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,506 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-67887/bucket-4-80604, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-16 02:41:04,797 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-06-16 02:41:05,587 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-06-16 02:41:05,798 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-06-16 02:41:05,841 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 02:41:05,841 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-68EC6E15B2EC-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 02:41:05,842 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-16 02:41:06,798 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-06-16 02:41:07,799 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-06-16 02:41:08,802 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-06-16 02:41:09,806 [Thread-8] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2021-06-16 02:41:10,813 [Thread-8] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2021-06-16 02:41:11,814 [Thread-8] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2021-06-16 02:41:12,814 [Thread-8] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2021-06-16 02:41:13,815 [Thread-8] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2021-06-16 02:41:14,815 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2021-06-16 02:41:15,816 [Thread-8] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2021-06-16 02:41:16,821 [Thread-8] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2021-06-16 02:41:17,821 [Thread-8] INFO freon.ProgressBar: Progress: 21.60 % (27 out of 125)
2021-06-16 02:41:18,822 [Thread-8] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2021-06-16 02:41:19,822 [Thread-8] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2021-06-16 02:41:20,823 [Thread-8] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2021-06-16 02:41:21,823 [Thread-8] INFO freon.ProgressBar: Progress: 28.00 % (35 out of 125)
2021-06-16 02:41:22,823 [Thread-8] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2021-06-16 02:41:23,824 [Thread-8] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2021-06-16 02:41:24,824 [Thread-8] INFO freon.ProgressBar: Progress: 31.20 % (39 out of 125)
2021-06-16 02:41:25,830 [Thread-8] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2021-06-16 02:41:26,831 [Thread-8] INFO freon.ProgressBar: Progress: 44.80 % (56 out of 125)
2021-06-16 02:41:27,836 [Thread-8] INFO freon.ProgressBar: Progress: 51.20 % (64 out of 125)
2021-06-16 02:41:28,836 [Thread-8] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2021-06-16 02:41:29,837 [Thread-8] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2021-06-16 02:41:30,837 [Thread-8] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2021-06-16 02:41:31,838 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2021-06-16 02:41:32,838 [Thread-8] INFO freon.ProgressBar: Progress: 58.40 % (73 out of 125)
2021-06-16 02:41:33,841 [Thread-8] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2021-06-16 02:41:34,841 [Thread-8] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2021-06-16 02:41:35,842 [Thread-8] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2021-06-16 02:41:36,842 [Thread-8] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2021-06-16 02:41:37,846 [Thread-8] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2021-06-16 02:41:38,846 [Thread-8] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2021-06-16 02:41:39,847 [Thread-8] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2021-06-16 02:41:40,847 [Thread-8] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2021-06-16 02:41:41,848 [Thread-8] INFO freon.ProgressBar: Progress: 81.60 % (102 out of 125)
2021-06-16 02:41:42,848 [Thread-8] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2021-06-16 02:41:43,849 [Thread-8] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2021-06-16 02:41:44,849 [Thread-8] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2021-06-16 02:41:45,850 [Thread-8] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2021-06-16 02:41:46,850 [Thread-8] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2021-06-16 02:41:47,852 [Thread-8] INFO freon.ProgressBar: Progress: 90.40 % (113 out of 125)
2021-06-16 02:41:48,853 [Thread-8] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2021-06-16 02:41:49,853 [Thread-8] INFO freon.ProgressBar: Progress: 94.40 % (118 out of 125)
2021-06-16 02:41:50,854 [Thread-8] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2021-06-16 02:41:51,855 [Thread-8] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2021-06-16 02:41:52,855 [Thread-8] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2021-06-16 02:41:53,855 [Thread-8] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2021-06-16 02:41:54,856 [Thread-8] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2021-06-16 02:41:55,856 [Thread-8] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2021-06-16 02:41:56,857 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: 7a3bc90b05f257c8ace2f76d74264906f0f7a932
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,299
Average Time spent in bucket creation: 00:00:00,277
Average Time spent in key creation: 00:00:04,390
Average Time spent in key write: 00:00:00,951
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:59,235
***************************************************</msg>
<status status="PASS" starttime="20210616 02:42:01.833" endtime="20210616 02:42:01.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:01.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:01.834" endtime="20210616 02:42:01.835"/>
</kw>
<status status="PASS" starttime="20210616 02:40:59.918" endtime="20210616 02:42:01.835"/>
</kw>
<msg timestamp="20210616 02:42:01.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:40:59.918" endtime="20210616 02:42:01.836"/>
</kw>
<msg timestamp="20210616 02:42:01.836" level="INFO">${result} = 2021-06-16 02:41:01,957 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 02:41:02,102 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 02:40:59.916" endtime="20210616 02:42:01.836"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:42:01.837" endtime="20210616 02:42:01.837"/>
</kw>
<status status="PASS" starttime="20210616 02:42:01.836" endtime="20210616 02:42:01.838"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:42:01.838" endtime="20210616 02:42:01.838"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 02:40:59.882" endtime="20210616 02:42:01.838"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210616 02:40:59.594" endtime="20210616 02:42:01.840"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:01.852" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:03.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:03.460" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210616 02:42:01.850" endtime="20210616 02:42:03.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:03.461" level="INFO">om</msg>
<status status="PASS" starttime="20210616 02:42:03.460" endtime="20210616 02:42:03.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:03.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:03.462" endtime="20210616 02:42:03.462"/>
</kw>
<status status="PASS" starttime="20210616 02:42:01.850" endtime="20210616 02:42:03.463"/>
</kw>
<msg timestamp="20210616 02:42:03.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:01.849" endtime="20210616 02:42:03.463"/>
</kw>
<msg timestamp="20210616 02:42:03.463" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210616 02:42:01.849" endtime="20210616 02:42:03.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:42:03.464" endtime="20210616 02:42:03.464"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:03.471" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:05.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:05.018" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210616 02:42:03.466" endtime="20210616 02:42:05.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:05.020" level="INFO">om</msg>
<status status="PASS" starttime="20210616 02:42:05.019" endtime="20210616 02:42:05.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:05.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:05.020" endtime="20210616 02:42:05.021"/>
</kw>
<status status="PASS" starttime="20210616 02:42:03.465" endtime="20210616 02:42:05.021"/>
</kw>
<msg timestamp="20210616 02:42:05.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:03.465" endtime="20210616 02:42:05.022"/>
</kw>
<msg timestamp="20210616 02:42:05.022" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210616 02:42:03.464" endtime="20210616 02:42:05.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:42:05.022" endtime="20210616 02:42:05.023"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 02:42:01.848" endtime="20210616 02:42:05.023"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:05.028" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:06.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:06.515" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:42:05.026" endtime="20210616 02:42:06.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:06.516" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:42:06.515" endtime="20210616 02:42:06.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:06.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:06.517" endtime="20210616 02:42:06.518"/>
</kw>
<status status="PASS" starttime="20210616 02:42:05.025" endtime="20210616 02:42:06.518"/>
</kw>
<msg timestamp="20210616 02:42:06.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:05.025" endtime="20210616 02:42:06.518"/>
</kw>
<msg timestamp="20210616 02:42:06.519" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210616 02:42:05.025" endtime="20210616 02:42:06.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:42:06.519" endtime="20210616 02:42:06.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:06.524" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:08.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:08.391" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:42:06.522" endtime="20210616 02:42:08.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:08.392" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:42:08.391" endtime="20210616 02:42:08.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:08.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:08.393" endtime="20210616 02:42:08.393"/>
</kw>
<status status="PASS" starttime="20210616 02:42:06.521" endtime="20210616 02:42:08.394"/>
</kw>
<msg timestamp="20210616 02:42:08.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:06.521" endtime="20210616 02:42:08.394"/>
</kw>
<msg timestamp="20210616 02:42:08.394" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210616 02:42:06.520" endtime="20210616 02:42:08.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:42:08.394" endtime="20210616 02:42:08.395"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 02:42:05.024" endtime="20210616 02:42:08.395"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:08.400" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:09.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:09.823" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210616 02:42:08.398" endtime="20210616 02:42:09.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:09.824" level="INFO">om</msg>
<status status="PASS" starttime="20210616 02:42:09.823" endtime="20210616 02:42:09.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:09.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:09.825" endtime="20210616 02:42:09.825"/>
</kw>
<status status="PASS" starttime="20210616 02:42:08.398" endtime="20210616 02:42:09.826"/>
</kw>
<msg timestamp="20210616 02:42:09.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:08.397" endtime="20210616 02:42:09.826"/>
</kw>
<msg timestamp="20210616 02:42:09.826" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210616 02:42:08.397" endtime="20210616 02:42:09.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:42:09.826" endtime="20210616 02:42:09.827"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:42:09.827" endtime="20210616 02:42:09.827"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:09.831" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:11.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:11.204" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210616 02:42:09.829" endtime="20210616 02:42:11.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:11.205" level="INFO">om</msg>
<status status="PASS" starttime="20210616 02:42:11.204" endtime="20210616 02:42:11.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:11.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:11.205" endtime="20210616 02:42:11.206"/>
</kw>
<status status="PASS" starttime="20210616 02:42:09.828" endtime="20210616 02:42:11.206"/>
</kw>
<msg timestamp="20210616 02:42:11.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:09.828" endtime="20210616 02:42:11.207"/>
</kw>
<msg timestamp="20210616 02:42:11.207" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210616 02:42:09.827" endtime="20210616 02:42:11.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:42:11.207" endtime="20210616 02:42:11.208"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:42:11.208" endtime="20210616 02:42:11.208"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 02:42:08.396" endtime="20210616 02:42:11.209"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:11.214" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:12.609" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:42:12.609" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210616 02:42:11.211" endtime="20210616 02:42:12.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:12.611" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210616 02:42:12.610" endtime="20210616 02:42:12.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:12.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:12.611" endtime="20210616 02:42:12.612"/>
</kw>
<msg timestamp="20210616 02:42:12.612" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210616 02:42:11.211" endtime="20210616 02:42:12.612"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:42:12.612" endtime="20210616 02:42:12.613"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:12.616" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:14.033" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:42:14.033" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210616 02:42:12.614" endtime="20210616 02:42:14.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:14.035" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210616 02:42:14.034" endtime="20210616 02:42:14.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:14.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:14.035" endtime="20210616 02:42:14.036"/>
</kw>
<msg timestamp="20210616 02:42:14.036" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210616 02:42:12.613" endtime="20210616 02:42:14.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:42:14.036" endtime="20210616 02:42:14.037"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 02:42:11.210" endtime="20210616 02:42:14.037"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210616 02:42:01.843" endtime="20210616 02:42:14.038"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 02:42:14.054" level="INFO">${random} = 94856</msg>
<status status="PASS" starttime="20210616 02:42:14.054" endtime="20210616 02:42:14.054"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:42:14.056" level="INFO">${source} = 94856-source</msg>
<status status="PASS" starttime="20210616 02:42:14.055" endtime="20210616 02:42:14.056"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:42:14.058" level="INFO">${target} = 94856-target</msg>
<status status="PASS" starttime="20210616 02:42:14.056" endtime="20210616 02:42:14.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:14.062" level="INFO">Running command 'ozone sh volume create 94856-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:18.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:18.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:42:14.060" endtime="20210616 02:42:18.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:18.142" level="INFO"/>
<status status="PASS" starttime="20210616 02:42:18.142" endtime="20210616 02:42:18.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:18.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:18.142" endtime="20210616 02:42:18.143"/>
</kw>
<status status="PASS" starttime="20210616 02:42:14.059" endtime="20210616 02:42:18.143"/>
</kw>
<msg timestamp="20210616 02:42:18.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:14.059" endtime="20210616 02:42:18.144"/>
</kw>
<status status="PASS" starttime="20210616 02:42:14.058" endtime="20210616 02:42:18.144"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:18.148" level="INFO">Running command 'ozone sh volume create 94856-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:22.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:22.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:42:18.146" endtime="20210616 02:42:22.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:22.192" level="INFO"/>
<status status="PASS" starttime="20210616 02:42:22.191" endtime="20210616 02:42:22.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:22.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:22.192" endtime="20210616 02:42:22.193"/>
</kw>
<status status="PASS" starttime="20210616 02:42:18.145" endtime="20210616 02:42:22.193"/>
</kw>
<msg timestamp="20210616 02:42:22.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:18.145" endtime="20210616 02:42:22.193"/>
</kw>
<status status="PASS" starttime="20210616 02:42:18.144" endtime="20210616 02:42:22.194"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:22.198" level="INFO">Running command 'ozone sh bucket create 94856-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:26.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:26.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:42:22.196" endtime="20210616 02:42:26.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:26.022" level="INFO"/>
<status status="PASS" starttime="20210616 02:42:26.021" endtime="20210616 02:42:26.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:26.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:26.022" endtime="20210616 02:42:26.023"/>
</kw>
<status status="PASS" starttime="20210616 02:42:22.196" endtime="20210616 02:42:26.023"/>
</kw>
<msg timestamp="20210616 02:42:26.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:22.195" endtime="20210616 02:42:26.023"/>
</kw>
<status status="PASS" starttime="20210616 02:42:22.195" endtime="20210616 02:42:26.024"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:26.027" level="INFO">Running command 'ozone sh key put 94856-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:32.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:32.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:42:26.025" endtime="20210616 02:42:32.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:32.279" level="INFO"/>
<status status="PASS" starttime="20210616 02:42:32.278" endtime="20210616 02:42:32.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:32.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:32.279" endtime="20210616 02:42:32.281"/>
</kw>
<status status="PASS" starttime="20210616 02:42:26.025" endtime="20210616 02:42:32.282"/>
</kw>
<msg timestamp="20210616 02:42:32.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:26.024" endtime="20210616 02:42:32.282"/>
</kw>
<status status="PASS" starttime="20210616 02:42:26.024" endtime="20210616 02:42:32.282"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:32.285" level="INFO">Running command 'ozone sh bucket create 94856-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:35.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:35.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:42:32.284" endtime="20210616 02:42:35.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:35.986" level="INFO"/>
<status status="PASS" starttime="20210616 02:42:35.986" endtime="20210616 02:42:35.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:35.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:35.987" endtime="20210616 02:42:35.987"/>
</kw>
<status status="PASS" starttime="20210616 02:42:32.283" endtime="20210616 02:42:35.988"/>
</kw>
<msg timestamp="20210616 02:42:35.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:32.283" endtime="20210616 02:42:35.988"/>
</kw>
<status status="PASS" starttime="20210616 02:42:32.282" endtime="20210616 02:42:35.988"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:35.992" level="INFO">Running command 'ozone sh bucket link 94856-source/readable-bucket 94856-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:40.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:40.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:42:35.990" endtime="20210616 02:42:40.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:40.176" level="INFO"/>
<status status="PASS" starttime="20210616 02:42:40.176" endtime="20210616 02:42:40.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:40.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:40.177" endtime="20210616 02:42:40.177"/>
</kw>
<status status="PASS" starttime="20210616 02:42:35.989" endtime="20210616 02:42:40.178"/>
</kw>
<msg timestamp="20210616 02:42:40.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:35.989" endtime="20210616 02:42:40.179"/>
</kw>
<status status="PASS" starttime="20210616 02:42:35.988" endtime="20210616 02:42:40.179"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:40.184" level="INFO">Running command 'ozone sh bucket link 94856-source/readable-bucket 94856-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:43.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:43.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:42:40.180" endtime="20210616 02:42:43.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:43.902" level="INFO"/>
<status status="PASS" starttime="20210616 02:42:43.902" endtime="20210616 02:42:43.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:43.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:43.902" endtime="20210616 02:42:43.903"/>
</kw>
<status status="PASS" starttime="20210616 02:42:40.180" endtime="20210616 02:42:43.903"/>
</kw>
<msg timestamp="20210616 02:42:43.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:40.180" endtime="20210616 02:42:43.904"/>
</kw>
<status status="PASS" starttime="20210616 02:42:40.179" endtime="20210616 02:42:43.904"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:43.915" level="INFO">Running command 'ozone sh bucket link 94856-source/unreadable-bucket 94856-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:47.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:47.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:42:43.906" endtime="20210616 02:42:47.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:47.840" level="INFO"/>
<status status="PASS" starttime="20210616 02:42:47.839" endtime="20210616 02:42:47.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:47.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:47.840" endtime="20210616 02:42:47.841"/>
</kw>
<status status="PASS" starttime="20210616 02:42:43.905" endtime="20210616 02:42:47.841"/>
</kw>
<msg timestamp="20210616 02:42:47.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:43.905" endtime="20210616 02:42:47.841"/>
</kw>
<status status="PASS" starttime="20210616 02:42:43.904" endtime="20210616 02:42:47.842"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:47.846" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94856-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:52.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:52.122" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:42:47.844" endtime="20210616 02:42:52.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:52.124" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:42:52.123" endtime="20210616 02:42:52.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:52.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:52.124" endtime="20210616 02:42:52.125"/>
</kw>
<status status="PASS" starttime="20210616 02:42:47.843" endtime="20210616 02:42:52.125"/>
</kw>
<msg timestamp="20210616 02:42:52.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:47.843" endtime="20210616 02:42:52.125"/>
</kw>
<status status="PASS" starttime="20210616 02:42:47.842" endtime="20210616 02:42:52.126"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:52.130" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 94856-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:55.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:55.818" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:42:52.128" endtime="20210616 02:42:55.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:55.819" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:42:55.819" endtime="20210616 02:42:55.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:55.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:55.820" endtime="20210616 02:42:55.821"/>
</kw>
<status status="PASS" starttime="20210616 02:42:52.127" endtime="20210616 02:42:55.821"/>
</kw>
<msg timestamp="20210616 02:42:55.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:52.127" endtime="20210616 02:42:55.821"/>
</kw>
<status status="PASS" starttime="20210616 02:42:52.126" endtime="20210616 02:42:55.822"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:55.827" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 94856-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:42:59.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:42:59.487" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:42:55.823" endtime="20210616 02:42:59.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:42:59.489" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:42:59.488" endtime="20210616 02:42:59.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:42:59.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:42:59.489" endtime="20210616 02:42:59.489"/>
</kw>
<status status="PASS" starttime="20210616 02:42:55.823" endtime="20210616 02:42:59.490"/>
</kw>
<msg timestamp="20210616 02:42:59.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:55.822" endtime="20210616 02:42:59.490"/>
</kw>
<status status="PASS" starttime="20210616 02:42:55.822" endtime="20210616 02:42:59.490"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:42:59.494" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94856-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:03.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:03.302" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:42:59.492" endtime="20210616 02:43:03.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:03.303" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:43:03.303" endtime="20210616 02:43:03.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:03.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:03.304" endtime="20210616 02:43:03.304"/>
</kw>
<status status="PASS" starttime="20210616 02:42:59.491" endtime="20210616 02:43:03.305"/>
</kw>
<msg timestamp="20210616 02:43:03.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:42:59.491" endtime="20210616 02:43:03.305"/>
</kw>
<status status="PASS" starttime="20210616 02:42:59.490" endtime="20210616 02:43:03.305"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:03.309" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94856-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:07.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:07.151" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:43:03.307" endtime="20210616 02:43:07.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:07.152" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:43:07.151" endtime="20210616 02:43:07.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:07.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:07.153" endtime="20210616 02:43:07.153"/>
</kw>
<status status="PASS" starttime="20210616 02:43:03.306" endtime="20210616 02:43:07.154"/>
</kw>
<msg timestamp="20210616 02:43:07.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:03.306" endtime="20210616 02:43:07.154"/>
</kw>
<status status="PASS" starttime="20210616 02:43:03.305" endtime="20210616 02:43:07.154"/>
</kw>
<status status="PASS" starttime="20210616 02:42:22.194" endtime="20210616 02:43:07.154"/>
</kw>
<status status="PASS" starttime="20210616 02:42:22.194" endtime="20210616 02:43:07.154"/>
</kw>
<status status="PASS" starttime="20210616 02:42:14.053" endtime="20210616 02:43:07.155"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:07.161" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:07.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:07.165" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:43:07.159" endtime="20210616 02:43:07.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:07.166" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:43:07.166" endtime="20210616 02:43:07.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:07.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:07.167" endtime="20210616 02:43:07.168"/>
</kw>
<status status="PASS" starttime="20210616 02:43:07.158" endtime="20210616 02:43:07.168"/>
</kw>
<msg timestamp="20210616 02:43:07.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:07.158" endtime="20210616 02:43:07.168"/>
</kw>
<msg timestamp="20210616 02:43:07.169" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:43:07.158" endtime="20210616 02:43:07.169"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:43:07.171" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:43:07.169" endtime="20210616 02:43:07.171"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:07.179" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:07.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:07.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:07.176" endtime="20210616 02:43:07.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:07.187" level="INFO"/>
<status status="PASS" starttime="20210616 02:43:07.186" endtime="20210616 02:43:07.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:07.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:07.187" endtime="20210616 02:43:07.188"/>
</kw>
<status status="PASS" starttime="20210616 02:43:07.175" endtime="20210616 02:43:07.188"/>
</kw>
<msg timestamp="20210616 02:43:07.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:07.172" endtime="20210616 02:43:07.188"/>
</kw>
<status status="PASS" starttime="20210616 02:43:07.171" endtime="20210616 02:43:07.189"/>
</kw>
<status status="PASS" starttime="20210616 02:43:07.171" endtime="20210616 02:43:07.189"/>
</kw>
<status status="PASS" starttime="20210616 02:43:07.157" endtime="20210616 02:43:07.189"/>
</kw>
<status status="PASS" starttime="20210616 02:43:07.156" endtime="20210616 02:43:07.189"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:07.193" level="INFO">Running command 'ozone sh bucket link 94856-source/no-such-bucket 94856-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:11.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:11.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:07.191" endtime="20210616 02:43:11.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:11.423" level="INFO"/>
<status status="PASS" starttime="20210616 02:43:11.422" endtime="20210616 02:43:11.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:11.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:11.423" endtime="20210616 02:43:11.424"/>
</kw>
<status status="PASS" starttime="20210616 02:43:07.190" endtime="20210616 02:43:11.425"/>
</kw>
<msg timestamp="20210616 02:43:11.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:07.190" endtime="20210616 02:43:11.425"/>
</kw>
<status status="PASS" starttime="20210616 02:43:07.189" endtime="20210616 02:43:11.425"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:11.428" level="INFO">Running command 'ozone sh key list 94856-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:15.289" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:43:15.289" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210616 02:43:11.426" endtime="20210616 02:43:15.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:15.291" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210616 02:43:15.290" endtime="20210616 02:43:15.291"/>
</kw>
<msg timestamp="20210616 02:43:15.291" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210616 02:43:11.425" endtime="20210616 02:43:15.291"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:43:15.291" endtime="20210616 02:43:15.292"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:43:07.155" endtime="20210616 02:43:15.292"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:15.300" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:15.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:15.307" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:43:15.297" endtime="20210616 02:43:15.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:15.308" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:43:15.307" endtime="20210616 02:43:15.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:15.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:15.308" endtime="20210616 02:43:15.309"/>
</kw>
<status status="PASS" starttime="20210616 02:43:15.296" endtime="20210616 02:43:15.309"/>
</kw>
<msg timestamp="20210616 02:43:15.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:15.296" endtime="20210616 02:43:15.310"/>
</kw>
<msg timestamp="20210616 02:43:15.310" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:43:15.295" endtime="20210616 02:43:15.310"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:43:15.311" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:43:15.310" endtime="20210616 02:43:15.311"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:15.323" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:15.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:15.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:15.313" endtime="20210616 02:43:15.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:15.331" level="INFO"/>
<status status="PASS" starttime="20210616 02:43:15.330" endtime="20210616 02:43:15.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:15.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:15.332" endtime="20210616 02:43:15.332"/>
</kw>
<status status="PASS" starttime="20210616 02:43:15.313" endtime="20210616 02:43:15.333"/>
</kw>
<msg timestamp="20210616 02:43:15.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:15.312" endtime="20210616 02:43:15.333"/>
</kw>
<status status="PASS" starttime="20210616 02:43:15.312" endtime="20210616 02:43:15.333"/>
</kw>
<status status="PASS" starttime="20210616 02:43:15.311" endtime="20210616 02:43:15.333"/>
</kw>
<status status="PASS" starttime="20210616 02:43:15.294" endtime="20210616 02:43:15.333"/>
</kw>
<status status="PASS" starttime="20210616 02:43:15.294" endtime="20210616 02:43:15.333"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:15.337" level="INFO">Running command 'ozone sh bucket link 94856-source/bucket1 94856-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:19.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:19.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:15.336" endtime="20210616 02:43:19.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:19.148" level="INFO"/>
<status status="PASS" starttime="20210616 02:43:19.147" endtime="20210616 02:43:19.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:19.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:19.148" endtime="20210616 02:43:19.149"/>
</kw>
<status status="PASS" starttime="20210616 02:43:15.335" endtime="20210616 02:43:19.149"/>
</kw>
<msg timestamp="20210616 02:43:19.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:15.334" endtime="20210616 02:43:19.150"/>
</kw>
<status status="PASS" starttime="20210616 02:43:15.334" endtime="20210616 02:43:19.150"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:19.154" level="INFO">Running command 'ozone sh bucket create 94856-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:23.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:23.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:19.152" endtime="20210616 02:43:23.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:23.061" level="INFO"/>
<status status="PASS" starttime="20210616 02:43:23.060" endtime="20210616 02:43:23.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:23.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:23.061" endtime="20210616 02:43:23.062"/>
</kw>
<status status="PASS" starttime="20210616 02:43:19.151" endtime="20210616 02:43:23.062"/>
</kw>
<msg timestamp="20210616 02:43:23.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:19.151" endtime="20210616 02:43:23.062"/>
</kw>
<status status="PASS" starttime="20210616 02:43:19.150" endtime="20210616 02:43:23.063"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:23.068" level="INFO">Running command 'ozone sh key put 94856-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:29.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:29.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:23.066" endtime="20210616 02:43:29.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:29.276" level="INFO"/>
<status status="PASS" starttime="20210616 02:43:29.275" endtime="20210616 02:43:29.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:29.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:29.276" endtime="20210616 02:43:29.277"/>
</kw>
<status status="PASS" starttime="20210616 02:43:23.065" endtime="20210616 02:43:29.277"/>
</kw>
<msg timestamp="20210616 02:43:29.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:23.064" endtime="20210616 02:43:29.277"/>
</kw>
<status status="PASS" starttime="20210616 02:43:23.063" endtime="20210616 02:43:29.277"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 02:43:29.280" level="INFO">${postfix} = 33416</msg>
<status status="PASS" starttime="20210616 02:43:29.279" endtime="20210616 02:43:29.280"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210616 02:43:29.280" level="INFO">${tmpfile} = /tmp/tempkey-33416</msg>
<status status="PASS" starttime="20210616 02:43:29.280" endtime="20210616 02:43:29.280"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:29.284" level="INFO">Running command 'ozone sh key get 94856-target/link1/key1 /tmp/tempkey-33416 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:35.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:35.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:29.282" endtime="20210616 02:43:35.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:35.312" level="INFO"/>
<status status="PASS" starttime="20210616 02:43:35.312" endtime="20210616 02:43:35.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:35.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:35.313" endtime="20210616 02:43:35.313"/>
</kw>
<status status="PASS" starttime="20210616 02:43:29.282" endtime="20210616 02:43:35.314"/>
</kw>
<msg timestamp="20210616 02:43:35.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:29.281" endtime="20210616 02:43:35.314"/>
</kw>
<status status="PASS" starttime="20210616 02:43:29.281" endtime="20210616 02:43:35.314"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210616 02:43:35.317" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-33416 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:35.321" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210616 02:43:35.315" endtime="20210616 02:43:35.321"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:35.327" level="INFO">Running command 'rm -f /tmp/tempkey-33416 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:35.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:35.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:35.325" endtime="20210616 02:43:35.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:35.331" level="INFO"/>
<status status="PASS" starttime="20210616 02:43:35.331" endtime="20210616 02:43:35.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:35.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:35.331" endtime="20210616 02:43:35.332"/>
</kw>
<status status="PASS" starttime="20210616 02:43:35.324" endtime="20210616 02:43:35.333"/>
</kw>
<msg timestamp="20210616 02:43:35.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:35.324" endtime="20210616 02:43:35.333"/>
</kw>
<status status="PASS" starttime="20210616 02:43:35.321" endtime="20210616 02:43:35.333"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 02:43:35.334" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210616 02:43:35.333" endtime="20210616 02:43:35.334"/>
</kw>
<msg timestamp="20210616 02:43:35.334" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210616 02:43:29.278" endtime="20210616 02:43:35.334"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210616 02:43:35.334" endtime="20210616 02:43:35.335"/>
</kw>
<status status="PASS" starttime="20210616 02:43:29.278" endtime="20210616 02:43:35.335"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:43:15.293" endtime="20210616 02:43:35.335"/>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:35.342" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:35.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:35.346" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:43:35.340" endtime="20210616 02:43:35.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:35.347" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:43:35.346" endtime="20210616 02:43:35.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:35.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:35.347" endtime="20210616 02:43:35.348"/>
</kw>
<status status="PASS" starttime="20210616 02:43:35.339" endtime="20210616 02:43:35.348"/>
</kw>
<msg timestamp="20210616 02:43:35.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:35.339" endtime="20210616 02:43:35.348"/>
</kw>
<msg timestamp="20210616 02:43:35.349" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:43:35.338" endtime="20210616 02:43:35.349"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:43:35.350" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:43:35.349" endtime="20210616 02:43:35.350"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:35.354" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:35.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:35.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:35.352" endtime="20210616 02:43:35.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:35.363" level="INFO"/>
<status status="PASS" starttime="20210616 02:43:35.362" endtime="20210616 02:43:35.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:35.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:35.363" endtime="20210616 02:43:35.364"/>
</kw>
<status status="PASS" starttime="20210616 02:43:35.352" endtime="20210616 02:43:35.364"/>
</kw>
<msg timestamp="20210616 02:43:35.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:35.351" endtime="20210616 02:43:35.365"/>
</kw>
<status status="PASS" starttime="20210616 02:43:35.351" endtime="20210616 02:43:35.365"/>
</kw>
<status status="PASS" starttime="20210616 02:43:35.350" endtime="20210616 02:43:35.365"/>
</kw>
<status status="PASS" starttime="20210616 02:43:35.338" endtime="20210616 02:43:35.365"/>
</kw>
<status status="PASS" starttime="20210616 02:43:35.337" endtime="20210616 02:43:35.365"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:35.369" level="INFO">Running command 'ozone sh key put 94856-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:42.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:42.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:35.367" endtime="20210616 02:43:42.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:42.230" level="INFO"/>
<status status="PASS" starttime="20210616 02:43:42.229" endtime="20210616 02:43:42.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:42.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:42.230" endtime="20210616 02:43:42.231"/>
</kw>
<status status="PASS" starttime="20210616 02:43:35.366" endtime="20210616 02:43:42.231"/>
</kw>
<msg timestamp="20210616 02:43:42.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:35.366" endtime="20210616 02:43:42.231"/>
</kw>
<status status="PASS" starttime="20210616 02:43:35.365" endtime="20210616 02:43:42.231"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 02:43:42.234" level="INFO">${postfix} = 27318</msg>
<status status="PASS" starttime="20210616 02:43:42.233" endtime="20210616 02:43:42.234"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210616 02:43:42.235" level="INFO">${tmpfile} = /tmp/tempkey-27318</msg>
<status status="PASS" starttime="20210616 02:43:42.234" endtime="20210616 02:43:42.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:42.238" level="INFO">Running command 'ozone sh key get 94856-source/bucket1/key2 /tmp/tempkey-27318 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:48.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:48.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:42.236" endtime="20210616 02:43:48.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:48.410" level="INFO"/>
<status status="PASS" starttime="20210616 02:43:48.409" endtime="20210616 02:43:48.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:48.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:48.410" endtime="20210616 02:43:48.411"/>
</kw>
<status status="PASS" starttime="20210616 02:43:42.236" endtime="20210616 02:43:48.412"/>
</kw>
<msg timestamp="20210616 02:43:48.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:42.235" endtime="20210616 02:43:48.412"/>
</kw>
<status status="PASS" starttime="20210616 02:43:42.235" endtime="20210616 02:43:48.412"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210616 02:43:48.415" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-27318 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:48.418" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210616 02:43:48.412" endtime="20210616 02:43:48.418"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:48.424" level="INFO">Running command 'rm -f /tmp/tempkey-27318 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:48.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:48.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:48.420" endtime="20210616 02:43:48.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:48.428" level="INFO"/>
<status status="PASS" starttime="20210616 02:43:48.427" endtime="20210616 02:43:48.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:48.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:48.428" endtime="20210616 02:43:48.429"/>
</kw>
<status status="PASS" starttime="20210616 02:43:48.420" endtime="20210616 02:43:48.429"/>
</kw>
<msg timestamp="20210616 02:43:48.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:48.419" endtime="20210616 02:43:48.430"/>
</kw>
<status status="PASS" starttime="20210616 02:43:48.418" endtime="20210616 02:43:48.430"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 02:43:48.431" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210616 02:43:48.430" endtime="20210616 02:43:48.431"/>
</kw>
<msg timestamp="20210616 02:43:48.431" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210616 02:43:42.232" endtime="20210616 02:43:48.431"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210616 02:43:48.431" endtime="20210616 02:43:48.432"/>
</kw>
<status status="PASS" starttime="20210616 02:43:42.232" endtime="20210616 02:43:48.432"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:43:35.336" endtime="20210616 02:43:48.432"/>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:48.439" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:48.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:48.443" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:43:48.437" endtime="20210616 02:43:48.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:48.445" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:43:48.444" endtime="20210616 02:43:48.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:48.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:48.445" endtime="20210616 02:43:48.446"/>
</kw>
<status status="PASS" starttime="20210616 02:43:48.436" endtime="20210616 02:43:48.446"/>
</kw>
<msg timestamp="20210616 02:43:48.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:48.436" endtime="20210616 02:43:48.447"/>
</kw>
<msg timestamp="20210616 02:43:48.447" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:43:48.435" endtime="20210616 02:43:48.447"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:43:48.448" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:43:48.447" endtime="20210616 02:43:48.448"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:48.453" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:48.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:48.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:48.451" endtime="20210616 02:43:48.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:48.462" level="INFO"/>
<status status="PASS" starttime="20210616 02:43:48.461" endtime="20210616 02:43:48.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:48.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:48.462" endtime="20210616 02:43:48.463"/>
</kw>
<status status="PASS" starttime="20210616 02:43:48.450" endtime="20210616 02:43:48.463"/>
</kw>
<msg timestamp="20210616 02:43:48.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:48.449" endtime="20210616 02:43:48.463"/>
</kw>
<status status="PASS" starttime="20210616 02:43:48.449" endtime="20210616 02:43:48.463"/>
</kw>
<status status="PASS" starttime="20210616 02:43:48.448" endtime="20210616 02:43:48.464"/>
</kw>
<status status="PASS" starttime="20210616 02:43:48.435" endtime="20210616 02:43:48.464"/>
</kw>
<status status="PASS" starttime="20210616 02:43:48.434" endtime="20210616 02:43:48.464"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:48.468" level="INFO">Running command 'ozone sh key list 94856-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:52.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:52.819" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210616 02:43:48.466" endtime="20210616 02:43:52.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:52.821" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210616 02:43:52.820" endtime="20210616 02:43:52.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:52.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:52.822" endtime="20210616 02:43:52.823"/>
</kw>
<status status="PASS" starttime="20210616 02:43:48.465" endtime="20210616 02:43:52.823"/>
</kw>
<msg timestamp="20210616 02:43:52.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:48.465" endtime="20210616 02:43:52.823"/>
</kw>
<msg timestamp="20210616 02:43:52.824" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20210616 02:43:48.464" endtime="20210616 02:43:52.824"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:52.828" level="INFO">Running command 'ozone sh key list 94856-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:57.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:57.128" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210616 02:43:52.826" endtime="20210616 02:43:57.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:57.129" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210616 02:43:57.128" endtime="20210616 02:43:57.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:57.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:57.129" endtime="20210616 02:43:57.130"/>
</kw>
<status status="PASS" starttime="20210616 02:43:52.825" endtime="20210616 02:43:57.131"/>
</kw>
<msg timestamp="20210616 02:43:57.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:52.825" endtime="20210616 02:43:57.131"/>
</kw>
<msg timestamp="20210616 02:43:57.131" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210616 02:43:52.824" endtime="20210616 02:43:57.131"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:43:57.131" endtime="20210616 02:43:57.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:43:57.132" endtime="20210616 02:43:57.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:43:57.133" endtime="20210616 02:43:57.133"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:43:48.433" endtime="20210616 02:43:57.134"/>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:57.141" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:57.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:57.144" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:43:57.139" endtime="20210616 02:43:57.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:57.146" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:43:57.145" endtime="20210616 02:43:57.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:57.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:57.146" endtime="20210616 02:43:57.147"/>
</kw>
<status status="PASS" starttime="20210616 02:43:57.138" endtime="20210616 02:43:57.147"/>
</kw>
<msg timestamp="20210616 02:43:57.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:57.138" endtime="20210616 02:43:57.147"/>
</kw>
<msg timestamp="20210616 02:43:57.147" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:43:57.137" endtime="20210616 02:43:57.148"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:43:57.148" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:43:57.148" endtime="20210616 02:43:57.148"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:57.153" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:43:57.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:43:57.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:57.151" endtime="20210616 02:43:57.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:43:57.164" level="INFO"/>
<status status="PASS" starttime="20210616 02:43:57.163" endtime="20210616 02:43:57.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:43:57.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:43:57.164" endtime="20210616 02:43:57.165"/>
</kw>
<status status="PASS" starttime="20210616 02:43:57.150" endtime="20210616 02:43:57.166"/>
</kw>
<msg timestamp="20210616 02:43:57.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:57.150" endtime="20210616 02:43:57.166"/>
</kw>
<status status="PASS" starttime="20210616 02:43:57.149" endtime="20210616 02:43:57.166"/>
</kw>
<status status="PASS" starttime="20210616 02:43:57.149" endtime="20210616 02:43:57.166"/>
</kw>
<status status="PASS" starttime="20210616 02:43:57.137" endtime="20210616 02:43:57.167"/>
</kw>
<status status="PASS" starttime="20210616 02:43:57.136" endtime="20210616 02:43:57.167"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:43:57.171" level="INFO">Running command 'ozone sh key delete 94856-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:00.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:00.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:43:57.168" endtime="20210616 02:44:00.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:00.966" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:00.965" endtime="20210616 02:44:00.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:00.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:00.966" endtime="20210616 02:44:00.967"/>
</kw>
<status status="PASS" starttime="20210616 02:43:57.168" endtime="20210616 02:44:00.967"/>
</kw>
<msg timestamp="20210616 02:44:00.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:43:57.168" endtime="20210616 02:44:00.968"/>
</kw>
<status status="PASS" starttime="20210616 02:43:57.167" endtime="20210616 02:44:00.968"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:00.972" level="INFO">Running command 'ozone sh key list 94856-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:05.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:05.039" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210616 02:44:00.970" endtime="20210616 02:44:05.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:05.041" level="INFO">key1</msg>
<status status="PASS" starttime="20210616 02:44:05.040" endtime="20210616 02:44:05.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:05.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:05.041" endtime="20210616 02:44:05.042"/>
</kw>
<status status="PASS" starttime="20210616 02:44:00.970" endtime="20210616 02:44:05.042"/>
</kw>
<msg timestamp="20210616 02:44:05.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:00.969" endtime="20210616 02:44:05.042"/>
</kw>
<msg timestamp="20210616 02:44:05.043" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210616 02:44:00.968" endtime="20210616 02:44:05.043"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:44:05.043" endtime="20210616 02:44:05.043"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:43:57.135" endtime="20210616 02:44:05.044"/>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:05.050" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:05.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:05.053" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:44:05.048" endtime="20210616 02:44:05.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:05.056" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:44:05.054" endtime="20210616 02:44:05.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:05.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:05.057" endtime="20210616 02:44:05.058"/>
</kw>
<status status="PASS" starttime="20210616 02:44:05.047" endtime="20210616 02:44:05.058"/>
</kw>
<msg timestamp="20210616 02:44:05.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:05.047" endtime="20210616 02:44:05.058"/>
</kw>
<msg timestamp="20210616 02:44:05.058" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:44:05.047" endtime="20210616 02:44:05.058"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:44:05.059" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:44:05.059" endtime="20210616 02:44:05.059"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:05.064" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:05.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:05.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:44:05.062" endtime="20210616 02:44:05.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:05.074" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:05.073" endtime="20210616 02:44:05.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:05.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:05.074" endtime="20210616 02:44:05.075"/>
</kw>
<status status="PASS" starttime="20210616 02:44:05.062" endtime="20210616 02:44:05.075"/>
</kw>
<msg timestamp="20210616 02:44:05.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:05.061" endtime="20210616 02:44:05.075"/>
</kw>
<status status="PASS" starttime="20210616 02:44:05.060" endtime="20210616 02:44:05.076"/>
</kw>
<status status="PASS" starttime="20210616 02:44:05.060" endtime="20210616 02:44:05.076"/>
</kw>
<status status="PASS" starttime="20210616 02:44:05.046" endtime="20210616 02:44:05.076"/>
</kw>
<status status="PASS" starttime="20210616 02:44:05.045" endtime="20210616 02:44:05.076"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:05.080" level="INFO">Running command 'ozone sh bucket list 94856-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:09.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:09.554" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "dangling-link",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210616 02:44:05.078" endtime="20210616 02:44:09.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:09.555" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:43:11.209Z",
  "modificationTime" : "2021-06-16T02:43:11.209Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:42:47.597Z",
  "modificationTime" : "2021-06-16T02:43:06.936Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:43:18.990Z",
  "modificationTime" : "2021-06-16T02:43:18.990Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:42:40.113Z",
  "modificationTime" : "2021-06-16T02:43:03.231Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:42:43.841Z",
  "modificationTime" : "2021-06-16T02:42:43.841Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210616 02:44:09.554" endtime="20210616 02:44:09.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:09.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:09.555" endtime="20210616 02:44:09.556"/>
</kw>
<status status="PASS" starttime="20210616 02:44:05.077" endtime="20210616 02:44:09.557"/>
</kw>
<msg timestamp="20210616 02:44:09.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:05.077" endtime="20210616 02:44:09.557"/>
</kw>
<msg timestamp="20210616 02:44:09.557" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "dangling-link",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210616 02:44:05.076" endtime="20210616 02:44:09.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:44:09.557" endtime="20210616 02:44:09.558"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:44:09.558" endtime="20210616 02:44:09.559"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:44:05.044" endtime="20210616 02:44:09.559"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:09.565" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:09.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:09.569" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:44:09.563" endtime="20210616 02:44:09.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:09.570" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:44:09.569" endtime="20210616 02:44:09.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:09.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:09.571" endtime="20210616 02:44:09.571"/>
</kw>
<status status="PASS" starttime="20210616 02:44:09.562" endtime="20210616 02:44:09.572"/>
</kw>
<msg timestamp="20210616 02:44:09.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:09.562" endtime="20210616 02:44:09.572"/>
</kw>
<msg timestamp="20210616 02:44:09.572" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:44:09.561" endtime="20210616 02:44:09.572"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:44:09.573" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:44:09.572" endtime="20210616 02:44:09.573"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:09.577" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:09.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:09.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:44:09.576" endtime="20210616 02:44:09.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:09.587" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:09.586" endtime="20210616 02:44:09.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:09.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:09.587" endtime="20210616 02:44:09.588"/>
</kw>
<status status="PASS" starttime="20210616 02:44:09.575" endtime="20210616 02:44:09.588"/>
</kw>
<msg timestamp="20210616 02:44:09.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:09.574" endtime="20210616 02:44:09.588"/>
</kw>
<status status="PASS" starttime="20210616 02:44:09.574" endtime="20210616 02:44:09.588"/>
</kw>
<status status="PASS" starttime="20210616 02:44:09.573" endtime="20210616 02:44:09.588"/>
</kw>
<status status="PASS" starttime="20210616 02:44:09.561" endtime="20210616 02:44:09.589"/>
</kw>
<status status="PASS" starttime="20210616 02:44:09.560" endtime="20210616 02:44:09.589"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:09.592" level="INFO">Running command 'ozone sh bucket info 94856-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:13.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:13.749" level="INFO">${output} = 94856-source bucket1</msg>
<status status="PASS" starttime="20210616 02:44:09.591" endtime="20210616 02:44:13.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:13.751" level="INFO">94856-source bucket1</msg>
<status status="PASS" starttime="20210616 02:44:13.750" endtime="20210616 02:44:13.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:13.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:13.751" endtime="20210616 02:44:13.752"/>
</kw>
<status status="PASS" starttime="20210616 02:44:09.590" endtime="20210616 02:44:13.752"/>
</kw>
<msg timestamp="20210616 02:44:13.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:09.590" endtime="20210616 02:44:13.753"/>
</kw>
<msg timestamp="20210616 02:44:13.753" level="INFO">${result} = 94856-source bucket1</msg>
<status status="PASS" starttime="20210616 02:44:09.589" endtime="20210616 02:44:13.753"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:44:13.753" endtime="20210616 02:44:13.754"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:44:09.559" endtime="20210616 02:44:13.755"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:13.761" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:13.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:13.764" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:44:13.759" endtime="20210616 02:44:13.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:13.765" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:44:13.765" endtime="20210616 02:44:13.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:13.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:13.766" endtime="20210616 02:44:13.766"/>
</kw>
<status status="PASS" starttime="20210616 02:44:13.758" endtime="20210616 02:44:13.767"/>
</kw>
<msg timestamp="20210616 02:44:13.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:13.758" endtime="20210616 02:44:13.767"/>
</kw>
<msg timestamp="20210616 02:44:13.767" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:44:13.757" endtime="20210616 02:44:13.767"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:44:13.768" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:44:13.767" endtime="20210616 02:44:13.768"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:13.777" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:13.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:13.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:44:13.771" endtime="20210616 02:44:13.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:13.786" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:13.786" endtime="20210616 02:44:13.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:13.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:13.787" endtime="20210616 02:44:13.787"/>
</kw>
<status status="PASS" starttime="20210616 02:44:13.770" endtime="20210616 02:44:13.788"/>
</kw>
<msg timestamp="20210616 02:44:13.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:13.770" endtime="20210616 02:44:13.788"/>
</kw>
<status status="PASS" starttime="20210616 02:44:13.769" endtime="20210616 02:44:13.788"/>
</kw>
<status status="PASS" starttime="20210616 02:44:13.768" endtime="20210616 02:44:13.788"/>
</kw>
<status status="PASS" starttime="20210616 02:44:13.756" endtime="20210616 02:44:13.789"/>
</kw>
<status status="PASS" starttime="20210616 02:44:13.756" endtime="20210616 02:44:13.789"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:13.793" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 94856-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:17.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:17.782" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:44:13.791" endtime="20210616 02:44:17.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:17.783" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:44:17.782" endtime="20210616 02:44:17.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:17.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:17.783" endtime="20210616 02:44:17.784"/>
</kw>
<status status="PASS" starttime="20210616 02:44:13.790" endtime="20210616 02:44:17.784"/>
</kw>
<msg timestamp="20210616 02:44:17.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:13.790" endtime="20210616 02:44:17.785"/>
</kw>
<status status="PASS" starttime="20210616 02:44:13.789" endtime="20210616 02:44:17.785"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:17.790" level="INFO">Running command 'ozone sh bucket getacl 94856-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:21.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:21.841" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210616 02:44:17.788" endtime="20210616 02:44:21.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:21.842" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210616 02:44:21.841" endtime="20210616 02:44:21.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:21.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:21.842" endtime="20210616 02:44:21.843"/>
</kw>
<status status="PASS" starttime="20210616 02:44:17.788" endtime="20210616 02:44:21.843"/>
</kw>
<msg timestamp="20210616 02:44:21.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:17.787" endtime="20210616 02:44:21.844"/>
</kw>
<msg timestamp="20210616 02:44:21.844" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210616 02:44:17.786" endtime="20210616 02:44:21.844"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:44:21.844" endtime="20210616 02:44:21.845"/>
</kw>
<status status="PASS" starttime="20210616 02:44:17.785" endtime="20210616 02:44:21.845"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:21.851" level="INFO">Running command 'ozone sh bucket getacl 94856-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:25.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:25.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:44:21.849" endtime="20210616 02:44:25.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:25.926" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:25.925" endtime="20210616 02:44:25.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:25.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:25.926" endtime="20210616 02:44:25.927"/>
</kw>
<status status="PASS" starttime="20210616 02:44:21.848" endtime="20210616 02:44:25.927"/>
</kw>
<msg timestamp="20210616 02:44:25.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:21.848" endtime="20210616 02:44:25.928"/>
</kw>
<msg timestamp="20210616 02:44:25.928" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210616 02:44:21.847" endtime="20210616 02:44:25.928"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:44:25.928" endtime="20210616 02:44:25.929"/>
</kw>
<status status="PASS" starttime="20210616 02:44:21.845" endtime="20210616 02:44:25.929"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:25.934" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 94856-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:29.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:29.743" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:44:25.932" endtime="20210616 02:44:29.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:29.744" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:44:29.744" endtime="20210616 02:44:29.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:29.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:29.745" endtime="20210616 02:44:29.745"/>
</kw>
<status status="PASS" starttime="20210616 02:44:25.930" endtime="20210616 02:44:29.746"/>
</kw>
<msg timestamp="20210616 02:44:29.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:25.930" endtime="20210616 02:44:29.746"/>
</kw>
<status status="PASS" starttime="20210616 02:44:25.929" endtime="20210616 02:44:29.746"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:29.754" level="INFO">Running command 'ozone sh bucket getacl 94856-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:34.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:34.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:44:29.750" endtime="20210616 02:44:34.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:34.154" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:34.153" endtime="20210616 02:44:34.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:34.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:34.154" endtime="20210616 02:44:34.155"/>
</kw>
<status status="PASS" starttime="20210616 02:44:29.749" endtime="20210616 02:44:34.155"/>
</kw>
<msg timestamp="20210616 02:44:34.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:29.749" endtime="20210616 02:44:34.155"/>
</kw>
<msg timestamp="20210616 02:44:34.155" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210616 02:44:29.748" endtime="20210616 02:44:34.156"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:44:34.156" endtime="20210616 02:44:34.156"/>
</kw>
<status status="PASS" starttime="20210616 02:44:29.746" endtime="20210616 02:44:34.156"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:34.161" level="INFO">Running command 'ozone sh bucket getacl 94856-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:38.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:38.716" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210616 02:44:34.159" endtime="20210616 02:44:38.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:38.717" level="INFO">READ</msg>
<status status="PASS" starttime="20210616 02:44:38.716" endtime="20210616 02:44:38.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:38.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:38.717" endtime="20210616 02:44:38.718"/>
</kw>
<status status="PASS" starttime="20210616 02:44:34.159" endtime="20210616 02:44:38.718"/>
</kw>
<msg timestamp="20210616 02:44:38.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:34.158" endtime="20210616 02:44:38.719"/>
</kw>
<msg timestamp="20210616 02:44:38.719" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210616 02:44:34.157" endtime="20210616 02:44:38.719"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:44:38.719" endtime="20210616 02:44:38.721"/>
</kw>
<status status="PASS" starttime="20210616 02:44:34.157" endtime="20210616 02:44:38.721"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:44:13.755" endtime="20210616 02:44:38.722"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:38.729" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:38.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:38.734" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:44:38.727" endtime="20210616 02:44:38.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:38.735" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:44:38.734" endtime="20210616 02:44:38.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:38.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:38.735" endtime="20210616 02:44:38.736"/>
</kw>
<status status="PASS" starttime="20210616 02:44:38.726" endtime="20210616 02:44:38.736"/>
</kw>
<msg timestamp="20210616 02:44:38.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:38.726" endtime="20210616 02:44:38.736"/>
</kw>
<msg timestamp="20210616 02:44:38.737" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:44:38.725" endtime="20210616 02:44:38.737"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:44:38.738" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:44:38.737" endtime="20210616 02:44:38.738"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:38.743" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:38.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:38.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:44:38.741" endtime="20210616 02:44:38.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:38.786" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:38.785" endtime="20210616 02:44:38.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:38.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:38.786" endtime="20210616 02:44:38.787"/>
</kw>
<status status="PASS" starttime="20210616 02:44:38.740" endtime="20210616 02:44:38.787"/>
</kw>
<msg timestamp="20210616 02:44:38.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:38.739" endtime="20210616 02:44:38.788"/>
</kw>
<status status="PASS" starttime="20210616 02:44:38.738" endtime="20210616 02:44:38.788"/>
</kw>
<status status="PASS" starttime="20210616 02:44:38.738" endtime="20210616 02:44:38.788"/>
</kw>
<status status="PASS" starttime="20210616 02:44:38.725" endtime="20210616 02:44:38.788"/>
</kw>
<status status="PASS" starttime="20210616 02:44:38.724" endtime="20210616 02:44:38.788"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:38.792" level="INFO">Running command 'ozone sh bucket link 94856-source/bucket2 94856-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:42.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:42.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:44:38.790" endtime="20210616 02:44:42.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:42.847" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:42.846" endtime="20210616 02:44:42.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:42.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:42.847" endtime="20210616 02:44:42.848"/>
</kw>
<status status="PASS" starttime="20210616 02:44:38.790" endtime="20210616 02:44:42.848"/>
</kw>
<msg timestamp="20210616 02:44:42.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:38.789" endtime="20210616 02:44:42.849"/>
</kw>
<status status="PASS" starttime="20210616 02:44:38.789" endtime="20210616 02:44:42.849"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:42.852" level="INFO">Running command 'ozone sh bucket create 94856-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:46.533" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:44:46.533" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210616 02:44:42.850" endtime="20210616 02:44:46.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:46.535" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210616 02:44:46.534" endtime="20210616 02:44:46.535"/>
</kw>
<msg timestamp="20210616 02:44:46.536" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210616 02:44:42.849" endtime="20210616 02:44:46.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:44:46.536" endtime="20210616 02:44:46.537"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:46.541" level="INFO">Running command 'ozone sh bucket create 94856-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:50.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:50.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:44:46.539" endtime="20210616 02:44:50.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:50.766" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:50.765" endtime="20210616 02:44:50.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:50.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:50.766" endtime="20210616 02:44:50.767"/>
</kw>
<status status="PASS" starttime="20210616 02:44:46.538" endtime="20210616 02:44:50.767"/>
</kw>
<msg timestamp="20210616 02:44:50.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:46.538" endtime="20210616 02:44:50.768"/>
</kw>
<status status="PASS" starttime="20210616 02:44:46.537" endtime="20210616 02:44:50.768"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:50.772" level="INFO">Running command 'ozone sh bucket link 94856-source/bucket1 94856-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:54.586" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:44:54.586" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210616 02:44:50.769" endtime="20210616 02:44:54.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:54.588" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210616 02:44:54.587" endtime="20210616 02:44:54.588"/>
</kw>
<msg timestamp="20210616 02:44:54.588" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210616 02:44:50.768" endtime="20210616 02:44:54.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:44:54.588" endtime="20210616 02:44:54.589"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:44:38.723" endtime="20210616 02:44:54.589"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:54.596" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:54.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:54.600" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:44:54.594" endtime="20210616 02:44:54.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:54.601" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:44:54.600" endtime="20210616 02:44:54.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:54.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:54.601" endtime="20210616 02:44:54.602"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.593" endtime="20210616 02:44:54.602"/>
</kw>
<msg timestamp="20210616 02:44:54.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:54.593" endtime="20210616 02:44:54.603"/>
</kw>
<msg timestamp="20210616 02:44:54.603" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:44:54.592" endtime="20210616 02:44:54.603"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:44:54.604" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:44:54.603" endtime="20210616 02:44:54.604"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:54.608" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:54.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:54.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:44:54.606" endtime="20210616 02:44:54.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:54.618" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:54.617" endtime="20210616 02:44:54.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:54.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:54.618" endtime="20210616 02:44:54.619"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.605" endtime="20210616 02:44:54.619"/>
</kw>
<msg timestamp="20210616 02:44:54.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:54.605" endtime="20210616 02:44:54.619"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.604" endtime="20210616 02:44:54.619"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.604" endtime="20210616 02:44:54.619"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.591" endtime="20210616 02:44:54.620"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.591" endtime="20210616 02:44:54.620"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:54.625" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:54.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:54.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:44:54.623" endtime="20210616 02:44:54.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:54.631" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:54.630" endtime="20210616 02:44:54.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:54.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:54.631" endtime="20210616 02:44:54.633"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.623" endtime="20210616 02:44:54.633"/>
</kw>
<msg timestamp="20210616 02:44:54.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:54.622" endtime="20210616 02:44:54.634"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.621" endtime="20210616 02:44:54.634"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:54.639" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:54.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:54.643" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:44:54.637" endtime="20210616 02:44:54.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:54.644" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:44:54.643" endtime="20210616 02:44:54.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:54.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:54.644" endtime="20210616 02:44:54.645"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.636" endtime="20210616 02:44:54.645"/>
</kw>
<msg timestamp="20210616 02:44:54.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:54.636" endtime="20210616 02:44:54.645"/>
</kw>
<msg timestamp="20210616 02:44:54.646" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:44:54.635" endtime="20210616 02:44:54.646"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:44:54.647" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:44:54.646" endtime="20210616 02:44:54.647"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:54.651" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:54.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:54.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:44:54.649" endtime="20210616 02:44:54.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:54.660" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:54.659" endtime="20210616 02:44:54.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:54.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:54.660" endtime="20210616 02:44:54.661"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.648" endtime="20210616 02:44:54.661"/>
</kw>
<msg timestamp="20210616 02:44:54.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:54.648" endtime="20210616 02:44:54.662"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.647" endtime="20210616 02:44:54.662"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.647" endtime="20210616 02:44:54.662"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.635" endtime="20210616 02:44:54.662"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.634" endtime="20210616 02:44:54.662"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:54.665" level="INFO">Running command 'ozone sh key list 94856-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:59.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:59.124" level="INFO">${output} = {
  "volumeName" : "94856-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-06-16T02:42:29.768Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210616 02:44:54.663" endtime="20210616 02:44:59.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:59.126" level="INFO">{
  "volumeName" : "94856-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-06-16T02:42:29.768Z",
  "modificationTime" : "2021-06-16T02:42:31.890Z",
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210616 02:44:59.125" endtime="20210616 02:44:59.126"/>
</kw>
<msg timestamp="20210616 02:44:59.126" level="INFO">${result} = {
  "volumeName" : "94856-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-06-16T02:42:29.768Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210616 02:44:54.663" endtime="20210616 02:44:59.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:44:59.126" endtime="20210616 02:44:59.127"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.621" endtime="20210616 02:44:59.127"/>
</kw>
<status status="PASS" starttime="20210616 02:44:54.620" endtime="20210616 02:44:59.127"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:44:54.590" endtime="20210616 02:44:59.128"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:59.135" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:59.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:59.140" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:44:59.133" endtime="20210616 02:44:59.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:59.142" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:44:59.141" endtime="20210616 02:44:59.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:59.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:59.142" endtime="20210616 02:44:59.142"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.132" endtime="20210616 02:44:59.143"/>
</kw>
<msg timestamp="20210616 02:44:59.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:59.132" endtime="20210616 02:44:59.143"/>
</kw>
<msg timestamp="20210616 02:44:59.143" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:44:59.131" endtime="20210616 02:44:59.143"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:44:59.144" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:44:59.144" endtime="20210616 02:44:59.144"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:59.149" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:59.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:59.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:44:59.147" endtime="20210616 02:44:59.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:59.158" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:59.158" endtime="20210616 02:44:59.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:59.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:59.159" endtime="20210616 02:44:59.159"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.146" endtime="20210616 02:44:59.160"/>
</kw>
<msg timestamp="20210616 02:44:59.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:59.146" endtime="20210616 02:44:59.160"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.145" endtime="20210616 02:44:59.160"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.144" endtime="20210616 02:44:59.160"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.131" endtime="20210616 02:44:59.161"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.130" endtime="20210616 02:44:59.161"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:59.165" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:59.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:59.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:44:59.163" endtime="20210616 02:44:59.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:59.177" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:59.177" endtime="20210616 02:44:59.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:59.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:59.178" endtime="20210616 02:44:59.178"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.163" endtime="20210616 02:44:59.179"/>
</kw>
<msg timestamp="20210616 02:44:59.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:59.162" endtime="20210616 02:44:59.179"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.162" endtime="20210616 02:44:59.179"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:59.184" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:59.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:59.187" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:44:59.182" endtime="20210616 02:44:59.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:59.189" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:44:59.188" endtime="20210616 02:44:59.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:59.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:59.189" endtime="20210616 02:44:59.189"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.181" endtime="20210616 02:44:59.190"/>
</kw>
<msg timestamp="20210616 02:44:59.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:59.181" endtime="20210616 02:44:59.190"/>
</kw>
<msg timestamp="20210616 02:44:59.190" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:44:59.180" endtime="20210616 02:44:59.191"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:44:59.191" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:44:59.191" endtime="20210616 02:44:59.191"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:59.196" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:44:59.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:44:59.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:44:59.194" endtime="20210616 02:44:59.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:44:59.205" level="INFO"/>
<status status="PASS" starttime="20210616 02:44:59.204" endtime="20210616 02:44:59.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:44:59.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:44:59.205" endtime="20210616 02:44:59.206"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.193" endtime="20210616 02:44:59.206"/>
</kw>
<msg timestamp="20210616 02:44:59.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:44:59.193" endtime="20210616 02:44:59.206"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.192" endtime="20210616 02:44:59.206"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.192" endtime="20210616 02:44:59.206"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.180" endtime="20210616 02:44:59.207"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.179" endtime="20210616 02:44:59.207"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:44:59.209" level="INFO">Running command 'ozone sh key list 94856-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:03.187" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:45:03.187" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 94856-target unreadable-link null</msg>
<status status="PASS" starttime="20210616 02:44:59.208" endtime="20210616 02:45:03.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:03.188" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 94856-target unreadable-link null</msg>
<status status="PASS" starttime="20210616 02:45:03.187" endtime="20210616 02:45:03.188"/>
</kw>
<msg timestamp="20210616 02:45:03.189" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 94856-target unreadable-link null</msg>
<status status="PASS" starttime="20210616 02:44:59.207" endtime="20210616 02:45:03.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:45:03.189" endtime="20210616 02:45:03.190"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.162" endtime="20210616 02:45:03.190"/>
</kw>
<status status="PASS" starttime="20210616 02:44:59.161" endtime="20210616 02:45:03.190"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:44:59.129" endtime="20210616 02:45:03.190"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:03.197" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:03.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:03.201" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:45:03.194" endtime="20210616 02:45:03.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:03.202" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:45:03.201" endtime="20210616 02:45:03.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:03.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:03.202" endtime="20210616 02:45:03.203"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.194" endtime="20210616 02:45:03.203"/>
</kw>
<msg timestamp="20210616 02:45:03.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:03.194" endtime="20210616 02:45:03.204"/>
</kw>
<msg timestamp="20210616 02:45:03.204" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:45:03.193" endtime="20210616 02:45:03.204"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:45:03.205" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:45:03.204" endtime="20210616 02:45:03.205"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:03.210" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:03.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:03.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:45:03.208" endtime="20210616 02:45:03.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:03.220" level="INFO"/>
<status status="PASS" starttime="20210616 02:45:03.219" endtime="20210616 02:45:03.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:03.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:03.220" endtime="20210616 02:45:03.221"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.207" endtime="20210616 02:45:03.222"/>
</kw>
<msg timestamp="20210616 02:45:03.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:03.206" endtime="20210616 02:45:03.222"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.206" endtime="20210616 02:45:03.222"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.205" endtime="20210616 02:45:03.222"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.192" endtime="20210616 02:45:03.222"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.192" endtime="20210616 02:45:03.222"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:03.228" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:03.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:03.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:45:03.226" endtime="20210616 02:45:03.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:03.233" level="INFO"/>
<status status="PASS" starttime="20210616 02:45:03.233" endtime="20210616 02:45:03.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:03.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:03.234" endtime="20210616 02:45:03.234"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.225" endtime="20210616 02:45:03.235"/>
</kw>
<msg timestamp="20210616 02:45:03.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:03.224" endtime="20210616 02:45:03.235"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.224" endtime="20210616 02:45:03.235"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:03.240" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:03.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:03.243" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:45:03.238" endtime="20210616 02:45:03.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:03.245" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:45:03.244" endtime="20210616 02:45:03.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:03.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:03.245" endtime="20210616 02:45:03.246"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.237" endtime="20210616 02:45:03.247"/>
</kw>
<msg timestamp="20210616 02:45:03.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:03.237" endtime="20210616 02:45:03.247"/>
</kw>
<msg timestamp="20210616 02:45:03.247" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:45:03.236" endtime="20210616 02:45:03.247"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:45:03.249" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:45:03.248" endtime="20210616 02:45:03.249"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:03.254" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:03.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:03.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:45:03.251" endtime="20210616 02:45:03.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:03.263" level="INFO"/>
<status status="PASS" starttime="20210616 02:45:03.262" endtime="20210616 02:45:03.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:03.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:03.263" endtime="20210616 02:45:03.264"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.251" endtime="20210616 02:45:03.264"/>
</kw>
<msg timestamp="20210616 02:45:03.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:03.250" endtime="20210616 02:45:03.264"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.249" endtime="20210616 02:45:03.265"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.249" endtime="20210616 02:45:03.265"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.236" endtime="20210616 02:45:03.265"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.235" endtime="20210616 02:45:03.265"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:03.269" level="INFO">Running command 'ozone sh bucket info 94856-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:07.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:07.522" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "link-to-unreadable-bucket",
  "storageT...</msg>
<status status="PASS" starttime="20210616 02:45:03.267" endtime="20210616 02:45:07.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:07.523" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:42:47.597Z",
  "modificationTime" : "2021-06-16T02:43:06.936Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210616 02:45:07.522" endtime="20210616 02:45:07.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:07.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:07.523" endtime="20210616 02:45:07.524"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.266" endtime="20210616 02:45:07.524"/>
</kw>
<msg timestamp="20210616 02:45:07.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:03.266" endtime="20210616 02:45:07.524"/>
</kw>
<msg timestamp="20210616 02:45:07.525" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "link-to-unreadable-bucket",
  "storageT...</msg>
<status status="PASS" starttime="20210616 02:45:03.265" endtime="20210616 02:45:07.525"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:45:07.525" endtime="20210616 02:45:07.526"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:45:07.526" endtime="20210616 02:45:07.526"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:07.532" level="INFO">Running command 'ozone sh key list 94856-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:11.492" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:45:11.492" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 94856-source unreadable-bucket </msg>
<status status="PASS" starttime="20210616 02:45:07.528" endtime="20210616 02:45:11.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:11.494" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 94856-source unreadable-bucket </msg>
<status status="PASS" starttime="20210616 02:45:11.493" endtime="20210616 02:45:11.494"/>
</kw>
<msg timestamp="20210616 02:45:11.495" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 94856-source unreadable-bucket </msg>
<status status="PASS" starttime="20210616 02:45:07.526" endtime="20210616 02:45:11.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:45:11.495" endtime="20210616 02:45:11.495"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.223" endtime="20210616 02:45:11.495"/>
</kw>
<status status="PASS" starttime="20210616 02:45:03.223" endtime="20210616 02:45:11.496"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:45:03.191" endtime="20210616 02:45:11.496"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:11.503" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:11.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:11.506" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:45:11.500" endtime="20210616 02:45:11.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:11.508" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:45:11.507" endtime="20210616 02:45:11.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:11.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:11.508" endtime="20210616 02:45:11.509"/>
</kw>
<status status="PASS" starttime="20210616 02:45:11.499" endtime="20210616 02:45:11.509"/>
</kw>
<msg timestamp="20210616 02:45:11.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:11.499" endtime="20210616 02:45:11.509"/>
</kw>
<msg timestamp="20210616 02:45:11.510" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:45:11.499" endtime="20210616 02:45:11.510"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:45:11.511" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:45:11.510" endtime="20210616 02:45:11.511"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:11.515" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:11.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:11.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:45:11.513" endtime="20210616 02:45:11.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:11.526" level="INFO"/>
<status status="PASS" starttime="20210616 02:45:11.525" endtime="20210616 02:45:11.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:11.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:11.526" endtime="20210616 02:45:11.527"/>
</kw>
<status status="PASS" starttime="20210616 02:45:11.513" endtime="20210616 02:45:11.527"/>
</kw>
<msg timestamp="20210616 02:45:11.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:11.512" endtime="20210616 02:45:11.527"/>
</kw>
<status status="PASS" starttime="20210616 02:45:11.511" endtime="20210616 02:45:11.527"/>
</kw>
<status status="PASS" starttime="20210616 02:45:11.511" endtime="20210616 02:45:11.528"/>
</kw>
<status status="PASS" starttime="20210616 02:45:11.498" endtime="20210616 02:45:11.528"/>
</kw>
<status status="PASS" starttime="20210616 02:45:11.497" endtime="20210616 02:45:11.528"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:11.532" level="INFO">Running command 'ozone sh bucket link 94856-target/loop1 94856-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:15.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:15.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:45:11.530" endtime="20210616 02:45:15.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:15.681" level="INFO"/>
<status status="PASS" starttime="20210616 02:45:15.680" endtime="20210616 02:45:15.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:15.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:15.681" endtime="20210616 02:45:15.682"/>
</kw>
<status status="PASS" starttime="20210616 02:45:11.529" endtime="20210616 02:45:15.683"/>
</kw>
<msg timestamp="20210616 02:45:15.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:11.529" endtime="20210616 02:45:15.683"/>
</kw>
<status status="PASS" starttime="20210616 02:45:11.528" endtime="20210616 02:45:15.683"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:15.688" level="INFO">Running command 'ozone sh bucket link 94856-target/loop2 94856-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:19.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:19.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:45:15.686" endtime="20210616 02:45:19.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:19.650" level="INFO"/>
<status status="PASS" starttime="20210616 02:45:19.649" endtime="20210616 02:45:19.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:19.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:19.650" endtime="20210616 02:45:19.651"/>
</kw>
<status status="PASS" starttime="20210616 02:45:15.684" endtime="20210616 02:45:19.652"/>
</kw>
<msg timestamp="20210616 02:45:19.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:15.684" endtime="20210616 02:45:19.652"/>
</kw>
<status status="PASS" starttime="20210616 02:45:15.683" endtime="20210616 02:45:19.652"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:19.656" level="INFO">Running command 'ozone sh bucket link 94856-target/loop3 94856-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:23.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:23.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:45:19.654" endtime="20210616 02:45:23.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:23.695" level="INFO"/>
<status status="PASS" starttime="20210616 02:45:23.694" endtime="20210616 02:45:23.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:23.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:23.695" endtime="20210616 02:45:23.696"/>
</kw>
<status status="PASS" starttime="20210616 02:45:19.653" endtime="20210616 02:45:23.696"/>
</kw>
<msg timestamp="20210616 02:45:23.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:19.653" endtime="20210616 02:45:23.696"/>
</kw>
<status status="PASS" starttime="20210616 02:45:19.652" endtime="20210616 02:45:23.697"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:23.699" level="INFO">Running command 'ozone sh key list 94856-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:27.507" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:45:27.507" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210616 02:45:23.698" endtime="20210616 02:45:27.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:27.508" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210616 02:45:27.508" endtime="20210616 02:45:27.509"/>
</kw>
<msg timestamp="20210616 02:45:27.509" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210616 02:45:23.697" endtime="20210616 02:45:27.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:45:27.509" endtime="20210616 02:45:27.510"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:45:11.496" endtime="20210616 02:45:27.510"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:27.519" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:27.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:27.523" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:45:27.517" endtime="20210616 02:45:27.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:27.524" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:45:27.523" endtime="20210616 02:45:27.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:27.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:27.525" endtime="20210616 02:45:27.526"/>
</kw>
<status status="PASS" starttime="20210616 02:45:27.516" endtime="20210616 02:45:27.526"/>
</kw>
<msg timestamp="20210616 02:45:27.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:27.514" endtime="20210616 02:45:27.526"/>
</kw>
<msg timestamp="20210616 02:45:27.527" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:45:27.513" endtime="20210616 02:45:27.527"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:45:27.527" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:45:27.527" endtime="20210616 02:45:27.528"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:27.532" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:27.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:27.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:45:27.530" endtime="20210616 02:45:27.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:27.541" level="INFO"/>
<status status="PASS" starttime="20210616 02:45:27.541" endtime="20210616 02:45:27.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:27.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:27.541" endtime="20210616 02:45:27.542"/>
</kw>
<status status="PASS" starttime="20210616 02:45:27.529" endtime="20210616 02:45:27.543"/>
</kw>
<msg timestamp="20210616 02:45:27.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:27.529" endtime="20210616 02:45:27.543"/>
</kw>
<status status="PASS" starttime="20210616 02:45:27.528" endtime="20210616 02:45:27.544"/>
</kw>
<status status="PASS" starttime="20210616 02:45:27.528" endtime="20210616 02:45:27.544"/>
</kw>
<status status="PASS" starttime="20210616 02:45:27.513" endtime="20210616 02:45:27.544"/>
</kw>
<status status="PASS" starttime="20210616 02:45:27.512" endtime="20210616 02:45:27.544"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:27.548" level="INFO">Running command 'ozone sh bucket link 94856-source/bucket1 94856-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:31.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:31.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:45:27.546" endtime="20210616 02:45:31.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:31.374" level="INFO"/>
<status status="PASS" starttime="20210616 02:45:31.373" endtime="20210616 02:45:31.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:31.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:31.374" endtime="20210616 02:45:31.376"/>
</kw>
<status status="PASS" starttime="20210616 02:45:27.545" endtime="20210616 02:45:31.376"/>
</kw>
<msg timestamp="20210616 02:45:31.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:27.545" endtime="20210616 02:45:31.377"/>
</kw>
<status status="PASS" starttime="20210616 02:45:27.544" endtime="20210616 02:45:31.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:31.381" level="INFO">Running command 'ozone sh key put 94856-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:37.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:37.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:45:31.379" endtime="20210616 02:45:37.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:37.892" level="INFO"/>
<status status="PASS" starttime="20210616 02:45:37.891" endtime="20210616 02:45:37.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:37.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:37.893" endtime="20210616 02:45:37.893"/>
</kw>
<status status="PASS" starttime="20210616 02:45:31.378" endtime="20210616 02:45:37.894"/>
</kw>
<msg timestamp="20210616 02:45:37.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:31.378" endtime="20210616 02:45:37.894"/>
</kw>
<status status="PASS" starttime="20210616 02:45:31.377" endtime="20210616 02:45:37.894"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 02:45:37.896" level="INFO">${postfix} = 33823</msg>
<status status="PASS" starttime="20210616 02:45:37.896" endtime="20210616 02:45:37.896"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210616 02:45:37.897" level="INFO">${tmpfile} = /tmp/tempkey-33823</msg>
<status status="PASS" starttime="20210616 02:45:37.897" endtime="20210616 02:45:37.897"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:37.901" level="INFO">Running command 'ozone sh key get 94856-target/link1/key3 /tmp/tempkey-33823 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:44.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:44.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:45:37.899" endtime="20210616 02:45:44.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:44.094" level="INFO"/>
<status status="PASS" starttime="20210616 02:45:44.093" endtime="20210616 02:45:44.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:44.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:44.094" endtime="20210616 02:45:44.095"/>
</kw>
<status status="PASS" starttime="20210616 02:45:37.898" endtime="20210616 02:45:44.095"/>
</kw>
<msg timestamp="20210616 02:45:44.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:37.898" endtime="20210616 02:45:44.096"/>
</kw>
<status status="PASS" starttime="20210616 02:45:37.897" endtime="20210616 02:45:44.096"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210616 02:45:44.098" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-33823 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:44.103" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210616 02:45:44.096" endtime="20210616 02:45:44.103"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:44.110" level="INFO">Running command 'rm -f /tmp/tempkey-33823 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:44.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:44.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:45:44.107" endtime="20210616 02:45:44.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:44.113" level="INFO"/>
<status status="PASS" starttime="20210616 02:45:44.113" endtime="20210616 02:45:44.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:44.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:44.114" endtime="20210616 02:45:44.114"/>
</kw>
<status status="PASS" starttime="20210616 02:45:44.106" endtime="20210616 02:45:44.115"/>
</kw>
<msg timestamp="20210616 02:45:44.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:44.105" endtime="20210616 02:45:44.115"/>
</kw>
<status status="PASS" starttime="20210616 02:45:44.104" endtime="20210616 02:45:44.115"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 02:45:44.116" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210616 02:45:44.115" endtime="20210616 02:45:44.116"/>
</kw>
<msg timestamp="20210616 02:45:44.116" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210616 02:45:37.895" endtime="20210616 02:45:44.116"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210616 02:45:44.117" endtime="20210616 02:45:44.117"/>
</kw>
<status status="PASS" starttime="20210616 02:45:37.894" endtime="20210616 02:45:44.117"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:45:27.511" endtime="20210616 02:45:44.118"/>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:44.125" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:44.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:44.129" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:45:44.123" endtime="20210616 02:45:44.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:44.130" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:45:44.129" endtime="20210616 02:45:44.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:44.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:44.130" endtime="20210616 02:45:44.131"/>
</kw>
<status status="PASS" starttime="20210616 02:45:44.122" endtime="20210616 02:45:44.131"/>
</kw>
<msg timestamp="20210616 02:45:44.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:44.122" endtime="20210616 02:45:44.132"/>
</kw>
<msg timestamp="20210616 02:45:44.132" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:45:44.121" endtime="20210616 02:45:44.132"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:45:44.133" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:45:44.132" endtime="20210616 02:45:44.133"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:44.137" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:44.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:44.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:45:44.135" endtime="20210616 02:45:44.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:44.146" level="INFO"/>
<status status="PASS" starttime="20210616 02:45:44.145" endtime="20210616 02:45:44.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:44.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:44.146" endtime="20210616 02:45:44.147"/>
</kw>
<status status="PASS" starttime="20210616 02:45:44.135" endtime="20210616 02:45:44.147"/>
</kw>
<msg timestamp="20210616 02:45:44.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:44.134" endtime="20210616 02:45:44.147"/>
</kw>
<status status="PASS" starttime="20210616 02:45:44.134" endtime="20210616 02:45:44.148"/>
</kw>
<status status="PASS" starttime="20210616 02:45:44.133" endtime="20210616 02:45:44.148"/>
</kw>
<status status="PASS" starttime="20210616 02:45:44.121" endtime="20210616 02:45:44.148"/>
</kw>
<status status="PASS" starttime="20210616 02:45:44.120" endtime="20210616 02:45:44.148"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:44.152" level="INFO">Running command 'ozone sh bucket delete 94856-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:48.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:48.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:45:44.150" endtime="20210616 02:45:48.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:48.038" level="INFO"/>
<status status="PASS" starttime="20210616 02:45:48.035" endtime="20210616 02:45:48.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:48.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:48.038" endtime="20210616 02:45:48.039"/>
</kw>
<status status="PASS" starttime="20210616 02:45:44.149" endtime="20210616 02:45:48.040"/>
</kw>
<msg timestamp="20210616 02:45:48.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:44.149" endtime="20210616 02:45:48.040"/>
</kw>
<status status="PASS" starttime="20210616 02:45:44.148" endtime="20210616 02:45:48.040"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:48.044" level="INFO">Running command 'ozone sh bucket list 94856-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:52.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:52.325" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "...</msg>
<status status="PASS" starttime="20210616 02:45:48.042" endtime="20210616 02:45:52.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:52.326" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:44:50.659Z",
  "modificationTime" : "2021-06-16T02:44:50.659Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:43:11.209Z",
  "modificationTime" : "2021-06-16T02:43:11.209Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:42:47.597Z",
  "modificationTime" : "2021-06-16T02:43:06.936Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:44:42.781Z",
  "modificationTime" : "2021-06-16T02:44:42.781Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:45:31.279Z",
  "modificationTime" : "2021-06-16T02:45:31.279Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:45:23.455Z",
  "modificationTime" : "2021-06-16T02:45:23.455Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:45:15.443Z",
  "modificationTime" : "2021-06-16T02:45:15.443Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:45:19.517Z",
  "modificationTime" : "2021-06-16T02:45:19.517Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:42:40.113Z",
  "modificationTime" : "2021-06-16T02:43:03.231Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T02:42:43.841Z",
  "modificationTime" : "2021-06-16T02:42:43.841Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94856-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210616 02:45:52.325" endtime="20210616 02:45:52.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:52.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:52.327" endtime="20210616 02:45:52.327"/>
</kw>
<status status="PASS" starttime="20210616 02:45:48.041" endtime="20210616 02:45:52.328"/>
</kw>
<msg timestamp="20210616 02:45:52.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:48.041" endtime="20210616 02:45:52.328"/>
</kw>
<msg timestamp="20210616 02:45:52.328" level="INFO">${bucket_list} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "94856-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "...</msg>
<status status="PASS" starttime="20210616 02:45:48.040" endtime="20210616 02:45:52.328"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:45:52.328" endtime="20210616 02:45:52.329"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:52.334" level="INFO">Running command 'ozone sh key list 94856-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:45:56.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:45:56.267" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20210616 02:45:52.332" endtime="20210616 02:45:56.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:45:56.269" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20210616 02:45:56.268" endtime="20210616 02:45:56.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:45:56.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:45:56.269" endtime="20210616 02:45:56.270"/>
</kw>
<status status="PASS" starttime="20210616 02:45:52.330" endtime="20210616 02:45:56.270"/>
</kw>
<msg timestamp="20210616 02:45:56.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:45:52.330" endtime="20210616 02:45:56.271"/>
</kw>
<msg timestamp="20210616 02:45:56.271" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20210616 02:45:52.329" endtime="20210616 02:45:56.271"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:45:56.271" endtime="20210616 02:45:56.272"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:45:44.118" endtime="20210616 02:45:56.272"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20210616 02:42:14.041" endtime="20210616 02:45:56.274"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 02:45:56.303" level="INFO">${random} = 51600</msg>
<status status="PASS" starttime="20210616 02:45:56.303" endtime="20210616 02:45:56.303"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:45:56.304" level="INFO">${prefix} = 51600</msg>
<status status="PASS" starttime="20210616 02:45:56.303" endtime="20210616 02:45:56.304"/>
</kw>
<status status="PASS" starttime="20210616 02:45:56.302" endtime="20210616 02:45:56.304"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:45:56.310" level="INFO">Running command 'ozone sh volume info /51600-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:00.015" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:46:00.015" level="INFO">${output} = VOLUME_NOT_FOUND Volume 51600-rpcbasic is not found</msg>
<status status="PASS" starttime="20210616 02:45:56.308" endtime="20210616 02:46:00.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:00.016" level="INFO">VOLUME_NOT_FOUND Volume 51600-rpcbasic is not found</msg>
<status status="PASS" starttime="20210616 02:46:00.015" endtime="20210616 02:46:00.016"/>
</kw>
<msg timestamp="20210616 02:46:00.017" level="INFO">${result} = VOLUME_NOT_FOUND Volume 51600-rpcbasic is not found</msg>
<status status="PASS" starttime="20210616 02:45:56.307" endtime="20210616 02:46:00.017"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:46:00.017" endtime="20210616 02:46:00.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:00.022" level="INFO">Running command 'ozone sh volume create /51600-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:03.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:03.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:46:00.019" endtime="20210616 02:46:03.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:03.874" level="INFO"/>
<status status="PASS" starttime="20210616 02:46:03.873" endtime="20210616 02:46:03.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:03.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:03.874" endtime="20210616 02:46:03.875"/>
</kw>
<status status="PASS" starttime="20210616 02:46:00.019" endtime="20210616 02:46:03.876"/>
</kw>
<msg timestamp="20210616 02:46:03.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:00.018" endtime="20210616 02:46:03.876"/>
</kw>
<msg timestamp="20210616 02:46:03.876" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 02:46:00.017" endtime="20210616 02:46:03.876"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:46:03.876" endtime="20210616 02:46:03.877"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:03.883" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="51600-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:08.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:08.230" level="INFO">${output} = {
  "metadata": {},
  "name": "51600-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210616 02:46:03.880" endtime="20210616 02:46:08.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:08.232" level="INFO">{
  "metadata": {},
  "name": "51600-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-16T02:46:03.663Z",
  "modificationTime": "2021-06-16T02:46:03.663Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210616 02:46:08.231" endtime="20210616 02:46:08.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:08.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:08.232" endtime="20210616 02:46:08.233"/>
</kw>
<status status="PASS" starttime="20210616 02:46:03.879" endtime="20210616 02:46:08.233"/>
</kw>
<msg timestamp="20210616 02:46:08.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:03.878" endtime="20210616 02:46:08.234"/>
</kw>
<msg timestamp="20210616 02:46:08.234" level="INFO">${result} = {
  "metadata": {},
  "name": "51600-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210616 02:46:03.877" endtime="20210616 02:46:08.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:46:08.234" endtime="20210616 02:46:08.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:08.241" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="51600-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:12.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:12.533" level="INFO">${output} = {
  "metadata": {},
  "name": "51600-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210616 02:46:08.238" endtime="20210616 02:46:12.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:12.534" level="INFO">{
  "metadata": {},
  "name": "51600-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-16T02:46:03.663Z",
  "modificationTime": "2021-06-16T02:46:03.663Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210616 02:46:12.533" endtime="20210616 02:46:12.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:12.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:12.534" endtime="20210616 02:46:12.535"/>
</kw>
<status status="PASS" starttime="20210616 02:46:08.236" endtime="20210616 02:46:12.535"/>
</kw>
<msg timestamp="20210616 02:46:12.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:08.236" endtime="20210616 02:46:12.536"/>
</kw>
<msg timestamp="20210616 02:46:12.536" level="INFO">${result} = {
  "metadata": {},
  "name": "51600-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210616 02:46:08.235" endtime="20210616 02:46:12.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:46:12.536" endtime="20210616 02:46:12.537"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:12.541" level="INFO">Running command 'ozone sh volume setquota /51600-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:16.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:16.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:46:12.539" endtime="20210616 02:46:16.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:16.577" level="INFO"/>
<status status="PASS" starttime="20210616 02:46:16.576" endtime="20210616 02:46:16.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:16.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:16.577" endtime="20210616 02:46:16.578"/>
</kw>
<status status="PASS" starttime="20210616 02:46:12.538" endtime="20210616 02:46:16.578"/>
</kw>
<msg timestamp="20210616 02:46:16.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:12.538" endtime="20210616 02:46:16.578"/>
</kw>
<status status="PASS" starttime="20210616 02:46:12.537" endtime="20210616 02:46:16.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:16.583" level="INFO">Running command 'ozone sh volume info /51600-rpcbasic | jq -r '. | select(.name=="51600-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:20.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:20.736" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:46:16.581" endtime="20210616 02:46:20.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:20.737" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210616 02:46:20.736" endtime="20210616 02:46:20.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:20.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:20.737" endtime="20210616 02:46:20.738"/>
</kw>
<status status="PASS" starttime="20210616 02:46:16.580" endtime="20210616 02:46:20.738"/>
</kw>
<msg timestamp="20210616 02:46:20.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:16.580" endtime="20210616 02:46:20.739"/>
</kw>
<msg timestamp="20210616 02:46:20.739" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:46:16.579" endtime="20210616 02:46:20.739"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:46:20.739" endtime="20210616 02:46:20.740"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:20.744" level="INFO">Running command 'ozone sh bucket create /51600-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:24.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:24.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:46:20.742" endtime="20210616 02:46:24.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:24.684" level="INFO"/>
<status status="PASS" starttime="20210616 02:46:24.683" endtime="20210616 02:46:24.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:24.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:24.684" endtime="20210616 02:46:24.685"/>
</kw>
<status status="PASS" starttime="20210616 02:46:20.741" endtime="20210616 02:46:24.685"/>
</kw>
<msg timestamp="20210616 02:46:24.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:20.741" endtime="20210616 02:46:24.686"/>
</kw>
<status status="PASS" starttime="20210616 02:46:20.740" endtime="20210616 02:46:24.686"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:24.690" level="INFO">Running command 'ozone sh bucket info /51600-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:28.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:28.622" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210616 02:46:24.688" endtime="20210616 02:46:28.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:28.624" level="INFO">DISK</msg>
<status status="PASS" starttime="20210616 02:46:28.623" endtime="20210616 02:46:28.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:28.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:28.624" endtime="20210616 02:46:28.625"/>
</kw>
<status status="PASS" starttime="20210616 02:46:24.688" endtime="20210616 02:46:28.626"/>
</kw>
<msg timestamp="20210616 02:46:28.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:24.687" endtime="20210616 02:46:28.626"/>
</kw>
<msg timestamp="20210616 02:46:28.626" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210616 02:46:24.686" endtime="20210616 02:46:28.626"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:46:28.626" endtime="20210616 02:46:28.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:28.633" level="INFO">Running command 'ozone sh bucket info /51600-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:32.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:32.606" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:46:28.631" endtime="20210616 02:46:32.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:32.608" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210616 02:46:32.607" endtime="20210616 02:46:32.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:32.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:32.608" endtime="20210616 02:46:32.609"/>
</kw>
<status status="PASS" starttime="20210616 02:46:28.630" endtime="20210616 02:46:32.609"/>
</kw>
<msg timestamp="20210616 02:46:32.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:28.630" endtime="20210616 02:46:32.609"/>
</kw>
<msg timestamp="20210616 02:46:32.610" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:46:28.627" endtime="20210616 02:46:32.610"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:46:32.610" endtime="20210616 02:46:32.610"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:32.615" level="INFO">Running command 'ozone sh bucket info /51600-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:36.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:36.826" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210616 02:46:32.613" endtime="20210616 02:46:36.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:36.827" level="INFO">100</msg>
<status status="PASS" starttime="20210616 02:46:36.827" endtime="20210616 02:46:36.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:36.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:36.828" endtime="20210616 02:46:36.828"/>
</kw>
<status status="PASS" starttime="20210616 02:46:32.612" endtime="20210616 02:46:36.829"/>
</kw>
<msg timestamp="20210616 02:46:36.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:32.612" endtime="20210616 02:46:36.829"/>
</kw>
<msg timestamp="20210616 02:46:36.829" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210616 02:46:32.611" endtime="20210616 02:46:36.830"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:46:36.830" endtime="20210616 02:46:36.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:36.834" level="INFO">Running command 'ozone sh bucket setquota /51600-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:40.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:40.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:46:36.832" endtime="20210616 02:46:40.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:40.993" level="INFO"/>
<status status="PASS" starttime="20210616 02:46:40.992" endtime="20210616 02:46:40.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:40.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:40.994" endtime="20210616 02:46:40.994"/>
</kw>
<status status="PASS" starttime="20210616 02:46:36.832" endtime="20210616 02:46:40.995"/>
</kw>
<msg timestamp="20210616 02:46:40.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:36.831" endtime="20210616 02:46:40.995"/>
</kw>
<status status="PASS" starttime="20210616 02:46:36.830" endtime="20210616 02:46:40.995"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:41.000" level="INFO">Running command 'ozone sh bucket info /51600-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:45.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:45.091" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210616 02:46:40.998" endtime="20210616 02:46:45.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:45.092" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210616 02:46:45.091" endtime="20210616 02:46:45.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:45.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:45.092" endtime="20210616 02:46:45.093"/>
</kw>
<status status="PASS" starttime="20210616 02:46:40.997" endtime="20210616 02:46:45.094"/>
</kw>
<msg timestamp="20210616 02:46:45.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:40.996" endtime="20210616 02:46:45.094"/>
</kw>
<msg timestamp="20210616 02:46:45.094" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210616 02:46:40.995" endtime="20210616 02:46:45.094"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:46:45.094" endtime="20210616 02:46:45.095"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:45.099" level="INFO">Running command 'ozone sh bucket info /51600-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:49.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:49.169" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210616 02:46:45.097" endtime="20210616 02:46:49.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:49.170" level="INFO">1000</msg>
<status status="PASS" starttime="20210616 02:46:49.169" endtime="20210616 02:46:49.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:49.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:49.170" endtime="20210616 02:46:49.171"/>
</kw>
<status status="PASS" starttime="20210616 02:46:45.097" endtime="20210616 02:46:49.172"/>
</kw>
<msg timestamp="20210616 02:46:49.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:45.096" endtime="20210616 02:46:49.172"/>
</kw>
<msg timestamp="20210616 02:46:49.173" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210616 02:46:45.095" endtime="20210616 02:46:49.173"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:46:49.173" endtime="20210616 02:46:49.173"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:49.178" level="INFO">Running command 'ozone sh bucket list /51600-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:53.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:53.380" level="INFO">${output} = 51600-rpcbasic</msg>
<status status="PASS" starttime="20210616 02:46:49.176" endtime="20210616 02:46:53.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:53.382" level="INFO">51600-rpcbasic</msg>
<status status="PASS" starttime="20210616 02:46:53.381" endtime="20210616 02:46:53.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:53.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:53.382" endtime="20210616 02:46:53.383"/>
</kw>
<status status="PASS" starttime="20210616 02:46:49.175" endtime="20210616 02:46:53.383"/>
</kw>
<msg timestamp="20210616 02:46:53.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:49.175" endtime="20210616 02:46:53.384"/>
</kw>
<msg timestamp="20210616 02:46:53.384" level="INFO">${result} = 51600-rpcbasic</msg>
<status status="PASS" starttime="20210616 02:46:49.174" endtime="20210616 02:46:53.384"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:46:53.384" endtime="20210616 02:46:53.385"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:53.390" level="INFO">Running command 'ozone sh key put /51600-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:59.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:59.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:46:53.388" endtime="20210616 02:46:59.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:59.848" level="INFO"/>
<status status="PASS" starttime="20210616 02:46:59.848" endtime="20210616 02:46:59.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:59.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:59.849" endtime="20210616 02:46:59.850"/>
</kw>
<status status="PASS" starttime="20210616 02:46:53.387" endtime="20210616 02:46:59.850"/>
</kw>
<msg timestamp="20210616 02:46:59.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:53.387" endtime="20210616 02:46:59.850"/>
</kw>
<status status="PASS" starttime="20210616 02:46:53.386" endtime="20210616 02:46:59.850"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:59.855" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:46:59.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:46:59.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:46:59.853" endtime="20210616 02:46:59.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:46:59.858" level="INFO"/>
<status status="PASS" starttime="20210616 02:46:59.858" endtime="20210616 02:46:59.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:46:59.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:46:59.859" endtime="20210616 02:46:59.860"/>
</kw>
<status status="PASS" starttime="20210616 02:46:59.852" endtime="20210616 02:46:59.860"/>
</kw>
<msg timestamp="20210616 02:46:59.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:59.851" endtime="20210616 02:46:59.860"/>
</kw>
<status status="PASS" starttime="20210616 02:46:59.851" endtime="20210616 02:46:59.860"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:46:59.864" level="INFO">Running command 'ozone sh key get /51600-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:05.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:05.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:46:59.862" endtime="20210616 02:47:05.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:05.804" level="INFO"/>
<status status="PASS" starttime="20210616 02:47:05.803" endtime="20210616 02:47:05.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:05.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:05.804" endtime="20210616 02:47:05.805"/>
</kw>
<status status="PASS" starttime="20210616 02:46:59.862" endtime="20210616 02:47:05.805"/>
</kw>
<msg timestamp="20210616 02:47:05.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:46:59.861" endtime="20210616 02:47:05.806"/>
</kw>
<status status="PASS" starttime="20210616 02:46:59.861" endtime="20210616 02:47:05.806"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:05.810" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:05.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:05.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:47:05.808" endtime="20210616 02:47:05.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:05.814" level="INFO"/>
<status status="PASS" starttime="20210616 02:47:05.813" endtime="20210616 02:47:05.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:05.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:05.814" endtime="20210616 02:47:05.814"/>
</kw>
<status status="PASS" starttime="20210616 02:47:05.807" endtime="20210616 02:47:05.815"/>
</kw>
<msg timestamp="20210616 02:47:05.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:05.807" endtime="20210616 02:47:05.815"/>
</kw>
<status status="PASS" starttime="20210616 02:47:05.806" endtime="20210616 02:47:05.815"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:05.819" level="INFO">Running command 'ozone sh key put -t RATIS /51600-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:12.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:12.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:47:05.817" endtime="20210616 02:47:12.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:12.233" level="INFO"/>
<status status="PASS" starttime="20210616 02:47:12.233" endtime="20210616 02:47:12.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:12.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:12.234" endtime="20210616 02:47:12.235"/>
</kw>
<status status="PASS" starttime="20210616 02:47:05.817" endtime="20210616 02:47:12.235"/>
</kw>
<msg timestamp="20210616 02:47:12.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:05.816" endtime="20210616 02:47:12.235"/>
</kw>
<status status="PASS" starttime="20210616 02:47:05.816" endtime="20210616 02:47:12.235"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:12.239" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:12.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:12.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:47:12.237" endtime="20210616 02:47:12.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:12.243" level="INFO"/>
<status status="PASS" starttime="20210616 02:47:12.243" endtime="20210616 02:47:12.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:12.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:12.244" endtime="20210616 02:47:12.244"/>
</kw>
<status status="PASS" starttime="20210616 02:47:12.237" endtime="20210616 02:47:12.245"/>
</kw>
<msg timestamp="20210616 02:47:12.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:12.236" endtime="20210616 02:47:12.245"/>
</kw>
<status status="PASS" starttime="20210616 02:47:12.236" endtime="20210616 02:47:12.245"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:12.250" level="INFO">Running command 'ozone sh key get /51600-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:18.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:18.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:47:12.248" endtime="20210616 02:47:18.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:18.473" level="INFO"/>
<status status="PASS" starttime="20210616 02:47:18.472" endtime="20210616 02:47:18.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:18.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:18.474" endtime="20210616 02:47:18.475"/>
</kw>
<status status="PASS" starttime="20210616 02:47:12.247" endtime="20210616 02:47:18.475"/>
</kw>
<msg timestamp="20210616 02:47:18.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:12.246" endtime="20210616 02:47:18.475"/>
</kw>
<status status="PASS" starttime="20210616 02:47:12.245" endtime="20210616 02:47:18.475"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:18.479" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:18.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:18.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:47:18.477" endtime="20210616 02:47:18.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:18.483" level="INFO"/>
<status status="PASS" starttime="20210616 02:47:18.483" endtime="20210616 02:47:18.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:18.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:18.484" endtime="20210616 02:47:18.484"/>
</kw>
<status status="PASS" starttime="20210616 02:47:18.476" endtime="20210616 02:47:18.485"/>
</kw>
<msg timestamp="20210616 02:47:18.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:18.476" endtime="20210616 02:47:18.485"/>
</kw>
<status status="PASS" starttime="20210616 02:47:18.476" endtime="20210616 02:47:18.485"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:18.489" level="INFO">Running command 'ozone sh key info /51600-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:22.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:22.636" level="INFO">${output} = {
  "volumeName": "51600-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:47:09.702Z",
  "modificationTime": "2021-06-16T02:47:11.703Z",
...</msg>
<status status="PASS" starttime="20210616 02:47:18.487" endtime="20210616 02:47:22.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:22.637" level="INFO">{
  "volumeName": "51600-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:47:09.702Z",
  "modificationTime": "2021-06-16T02:47:11.703Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210616 02:47:22.636" endtime="20210616 02:47:22.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:22.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:22.638" endtime="20210616 02:47:22.638"/>
</kw>
<status status="PASS" starttime="20210616 02:47:18.487" endtime="20210616 02:47:22.639"/>
</kw>
<msg timestamp="20210616 02:47:22.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:18.486" endtime="20210616 02:47:22.639"/>
</kw>
<msg timestamp="20210616 02:47:22.639" level="INFO">${result} = {
  "volumeName": "51600-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:47:09.702Z",
  "modificationTime": "2021-06-16T02:47:11.703Z",
...</msg>
<status status="PASS" starttime="20210616 02:47:18.485" endtime="20210616 02:47:22.640"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:47:22.640" endtime="20210616 02:47:22.640"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:22.644" level="INFO">Running command 'ozone sh key delete /51600-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:26.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:26.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:47:22.642" endtime="20210616 02:47:26.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:26.518" level="INFO"/>
<status status="PASS" starttime="20210616 02:47:26.517" endtime="20210616 02:47:26.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:26.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:26.519" endtime="20210616 02:47:26.519"/>
</kw>
<status status="PASS" starttime="20210616 02:47:22.641" endtime="20210616 02:47:26.520"/>
</kw>
<msg timestamp="20210616 02:47:26.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:22.641" endtime="20210616 02:47:26.520"/>
</kw>
<status status="PASS" starttime="20210616 02:47:22.640" endtime="20210616 02:47:26.520"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:26.525" level="INFO">Running command 'ozone sh key cp /51600-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:32.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:32.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:47:26.522" endtime="20210616 02:47:32.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:32.896" level="INFO"/>
<status status="PASS" starttime="20210616 02:47:32.895" endtime="20210616 02:47:32.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:32.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:32.896" endtime="20210616 02:47:32.897"/>
</kw>
<status status="PASS" starttime="20210616 02:47:26.522" endtime="20210616 02:47:32.897"/>
</kw>
<msg timestamp="20210616 02:47:32.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:26.521" endtime="20210616 02:47:32.898"/>
</kw>
<status status="PASS" starttime="20210616 02:47:26.520" endtime="20210616 02:47:32.898"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:32.902" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:32.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:32.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:47:32.900" endtime="20210616 02:47:32.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:32.906" level="INFO"/>
<status status="PASS" starttime="20210616 02:47:32.905" endtime="20210616 02:47:32.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:32.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:32.906" endtime="20210616 02:47:32.907"/>
</kw>
<status status="PASS" starttime="20210616 02:47:32.899" endtime="20210616 02:47:32.907"/>
</kw>
<msg timestamp="20210616 02:47:32.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:32.899" endtime="20210616 02:47:32.908"/>
</kw>
<status status="PASS" starttime="20210616 02:47:32.898" endtime="20210616 02:47:32.908"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:32.912" level="INFO">Running command 'ozone sh key get /51600-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:39.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:39.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:47:32.910" endtime="20210616 02:47:39.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:39.540" level="INFO"/>
<status status="PASS" starttime="20210616 02:47:39.539" endtime="20210616 02:47:39.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:39.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:39.540" endtime="20210616 02:47:39.541"/>
</kw>
<status status="PASS" starttime="20210616 02:47:32.909" endtime="20210616 02:47:39.541"/>
</kw>
<msg timestamp="20210616 02:47:39.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:32.909" endtime="20210616 02:47:39.542"/>
</kw>
<status status="PASS" starttime="20210616 02:47:32.908" endtime="20210616 02:47:39.542"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:39.546" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:39.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:39.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:47:39.544" endtime="20210616 02:47:39.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:39.550" level="INFO"/>
<status status="PASS" starttime="20210616 02:47:39.549" endtime="20210616 02:47:39.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:39.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:39.550" endtime="20210616 02:47:39.550"/>
</kw>
<status status="PASS" starttime="20210616 02:47:39.543" endtime="20210616 02:47:39.551"/>
</kw>
<msg timestamp="20210616 02:47:39.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:39.543" endtime="20210616 02:47:39.551"/>
</kw>
<status status="PASS" starttime="20210616 02:47:39.542" endtime="20210616 02:47:39.551"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:39.555" level="INFO">Running command 'ozone sh key delete /51600-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:43.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:43.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:47:39.553" endtime="20210616 02:47:43.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:43.385" level="INFO"/>
<status status="PASS" starttime="20210616 02:47:43.384" endtime="20210616 02:47:43.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:43.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:43.385" endtime="20210616 02:47:43.386"/>
</kw>
<status status="PASS" starttime="20210616 02:47:39.553" endtime="20210616 02:47:43.386"/>
</kw>
<msg timestamp="20210616 02:47:43.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:39.552" endtime="20210616 02:47:43.387"/>
</kw>
<status status="PASS" starttime="20210616 02:47:39.551" endtime="20210616 02:47:43.387"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:43.390" level="INFO">Running command 'ozone sh key get /51600-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:47.110" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:47:47.110" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210616 02:47:43.388" endtime="20210616 02:47:47.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:47.112" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210616 02:47:47.110" endtime="20210616 02:47:47.112"/>
</kw>
<msg timestamp="20210616 02:47:47.112" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210616 02:47:43.387" endtime="20210616 02:47:47.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:47:47.112" endtime="20210616 02:47:47.113"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:47.117" level="INFO">Running command 'ozone sh key get --force /51600-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:53.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:53.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:47:47.115" endtime="20210616 02:47:53.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:53.275" level="INFO"/>
<status status="PASS" starttime="20210616 02:47:53.274" endtime="20210616 02:47:53.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:53.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:53.275" endtime="20210616 02:47:53.276"/>
</kw>
<status status="PASS" starttime="20210616 02:47:47.114" endtime="20210616 02:47:53.276"/>
</kw>
<msg timestamp="20210616 02:47:53.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:47.114" endtime="20210616 02:47:53.276"/>
</kw>
<msg timestamp="20210616 02:47:53.277" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 02:47:47.113" endtime="20210616 02:47:53.277"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:47:53.277" endtime="20210616 02:47:53.277"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:53.282" level="INFO">Running command 'ozone sh key info /51600-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:47:57.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:47:57.528" level="INFO">${output} = {
  "volumeName": "51600-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:46:57.313Z",
  "modificationTime": "2021-06-16T02:46:59.342Z",
  "ozo...</msg>
<status status="PASS" starttime="20210616 02:47:53.280" endtime="20210616 02:47:57.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:47:57.530" level="INFO">{
  "volumeName": "51600-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:46:57.313Z",
  "modificationTime": "2021-06-16T02:46:59.342Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210616 02:47:57.529" endtime="20210616 02:47:57.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:47:57.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:47:57.530" endtime="20210616 02:47:57.531"/>
</kw>
<status status="PASS" starttime="20210616 02:47:53.279" endtime="20210616 02:47:57.531"/>
</kw>
<msg timestamp="20210616 02:47:57.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:53.279" endtime="20210616 02:47:57.531"/>
</kw>
<msg timestamp="20210616 02:47:57.532" level="INFO">${result} = {
  "volumeName": "51600-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:46:57.313Z",
  "modificationTime": "2021-06-16T02:46:59.342Z",
  "ozo...</msg>
<status status="PASS" starttime="20210616 02:47:53.277" endtime="20210616 02:47:57.532"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:47:57.532" endtime="20210616 02:47:57.532"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:47:57.539" level="INFO">Running command 'ozone sh key list /51600-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:01.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:01.635" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210616 02:47:57.535" endtime="20210616 02:48:01.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:01.637" level="INFO">key1</msg>
<status status="PASS" starttime="20210616 02:48:01.636" endtime="20210616 02:48:01.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:01.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:01.637" endtime="20210616 02:48:01.638"/>
</kw>
<status status="PASS" starttime="20210616 02:47:57.534" endtime="20210616 02:48:01.638"/>
</kw>
<msg timestamp="20210616 02:48:01.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:47:57.534" endtime="20210616 02:48:01.638"/>
</kw>
<msg timestamp="20210616 02:48:01.639" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20210616 02:47:57.533" endtime="20210616 02:48:01.639"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:48:01.639" endtime="20210616 02:48:01.640"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:01.643" level="INFO">Running command 'ozone sh key rename /51600-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:05.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:05.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:48:01.641" endtime="20210616 02:48:05.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:05.649" level="INFO"/>
<status status="PASS" starttime="20210616 02:48:05.648" endtime="20210616 02:48:05.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:05.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:05.649" endtime="20210616 02:48:05.650"/>
</kw>
<status status="PASS" starttime="20210616 02:48:01.641" endtime="20210616 02:48:05.651"/>
</kw>
<msg timestamp="20210616 02:48:05.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:01.640" endtime="20210616 02:48:05.651"/>
</kw>
<status status="PASS" starttime="20210616 02:48:01.640" endtime="20210616 02:48:05.651"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:05.655" level="INFO">Running command 'ozone sh key list /51600-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:10.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:10.079" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20210616 02:48:05.653" endtime="20210616 02:48:10.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:10.080" level="INFO">key2</msg>
<status status="PASS" starttime="20210616 02:48:10.080" endtime="20210616 02:48:10.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:10.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:10.081" endtime="20210616 02:48:10.081"/>
</kw>
<status status="PASS" starttime="20210616 02:48:05.652" endtime="20210616 02:48:10.082"/>
</kw>
<msg timestamp="20210616 02:48:10.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:05.652" endtime="20210616 02:48:10.082"/>
</kw>
<msg timestamp="20210616 02:48:10.082" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20210616 02:48:05.651" endtime="20210616 02:48:10.082"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:48:10.083" endtime="20210616 02:48:10.083"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:10.087" level="INFO">Running command 'ozone sh key delete /51600-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:13.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:13.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:48:10.085" endtime="20210616 02:48:13.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:13.971" level="INFO"/>
<status status="PASS" starttime="20210616 02:48:13.970" endtime="20210616 02:48:13.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:13.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:13.971" endtime="20210616 02:48:13.972"/>
</kw>
<status status="PASS" starttime="20210616 02:48:10.084" endtime="20210616 02:48:13.972"/>
</kw>
<msg timestamp="20210616 02:48:13.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:10.084" endtime="20210616 02:48:13.973"/>
</kw>
<status status="PASS" starttime="20210616 02:48:10.083" endtime="20210616 02:48:13.973"/>
</kw>
<status status="PASS" starttime="20210616 02:46:53.385" endtime="20210616 02:48:13.973"/>
</kw>
<status status="PASS" starttime="20210616 02:46:53.385" endtime="20210616 02:48:13.973"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:13.978" level="INFO">Running command 'ozone sh volume clrquota --space-quota /51600-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:17.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:17.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:48:13.975" endtime="20210616 02:48:17.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:17.939" level="INFO"/>
<status status="PASS" starttime="20210616 02:48:17.938" endtime="20210616 02:48:17.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:17.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:17.940" endtime="20210616 02:48:17.940"/>
</kw>
<status status="PASS" starttime="20210616 02:48:13.975" endtime="20210616 02:48:17.941"/>
</kw>
<msg timestamp="20210616 02:48:17.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:13.974" endtime="20210616 02:48:17.941"/>
</kw>
<status status="PASS" starttime="20210616 02:48:13.974" endtime="20210616 02:48:17.941"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:17.949" level="INFO">Running command 'ozone sh volume info /51600-rpcbasic | jq -r '. | select(.name=="51600-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:22.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:22.148" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:48:17.945" endtime="20210616 02:48:22.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:22.149" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:48:22.148" endtime="20210616 02:48:22.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:22.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:22.149" endtime="20210616 02:48:22.150"/>
</kw>
<status status="PASS" starttime="20210616 02:48:17.943" endtime="20210616 02:48:22.151"/>
</kw>
<msg timestamp="20210616 02:48:22.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:17.943" endtime="20210616 02:48:22.151"/>
</kw>
<msg timestamp="20210616 02:48:22.151" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:48:17.941" endtime="20210616 02:48:22.151"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:48:22.152" endtime="20210616 02:48:22.152"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:22.157" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /51600-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:26.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:26.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:48:22.154" endtime="20210616 02:48:26.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:26.084" level="INFO"/>
<status status="PASS" starttime="20210616 02:48:26.083" endtime="20210616 02:48:26.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:26.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:26.084" endtime="20210616 02:48:26.085"/>
</kw>
<status status="PASS" starttime="20210616 02:48:22.153" endtime="20210616 02:48:26.085"/>
</kw>
<msg timestamp="20210616 02:48:26.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:22.153" endtime="20210616 02:48:26.086"/>
</kw>
<status status="PASS" starttime="20210616 02:48:22.152" endtime="20210616 02:48:26.086"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:26.090" level="INFO">Running command 'ozone sh volume info /51600-rpcbasic | jq -r '. | select(.name=="51600-rpcbasic") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:30.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:30.562" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:48:26.088" endtime="20210616 02:48:30.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:30.564" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:48:30.563" endtime="20210616 02:48:30.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:30.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:30.564" endtime="20210616 02:48:30.565"/>
</kw>
<status status="PASS" starttime="20210616 02:48:26.087" endtime="20210616 02:48:30.565"/>
</kw>
<msg timestamp="20210616 02:48:30.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:26.087" endtime="20210616 02:48:30.565"/>
</kw>
<msg timestamp="20210616 02:48:30.566" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:48:26.086" endtime="20210616 02:48:30.566"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:48:30.566" endtime="20210616 02:48:30.567"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:30.571" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /51600-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:34.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:34.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:48:30.569" endtime="20210616 02:48:34.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:34.660" level="INFO"/>
<status status="PASS" starttime="20210616 02:48:34.659" endtime="20210616 02:48:34.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:34.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:34.660" endtime="20210616 02:48:34.661"/>
</kw>
<status status="PASS" starttime="20210616 02:48:30.568" endtime="20210616 02:48:34.661"/>
</kw>
<msg timestamp="20210616 02:48:34.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:30.567" endtime="20210616 02:48:34.662"/>
</kw>
<status status="PASS" starttime="20210616 02:48:30.567" endtime="20210616 02:48:34.662"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:34.666" level="INFO">Running command 'ozone sh bucket info /51600-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:39.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:39.048" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:48:34.664" endtime="20210616 02:48:39.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:39.050" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:48:39.049" endtime="20210616 02:48:39.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:39.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:39.050" endtime="20210616 02:48:39.051"/>
</kw>
<status status="PASS" starttime="20210616 02:48:34.664" endtime="20210616 02:48:39.051"/>
</kw>
<msg timestamp="20210616 02:48:39.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:34.663" endtime="20210616 02:48:39.051"/>
</kw>
<msg timestamp="20210616 02:48:39.051" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:48:34.662" endtime="20210616 02:48:39.052"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:48:39.052" endtime="20210616 02:48:39.052"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:39.057" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /51600-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:42.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:42.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:48:39.054" endtime="20210616 02:48:42.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:42.992" level="INFO"/>
<status status="PASS" starttime="20210616 02:48:42.991" endtime="20210616 02:48:42.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:42.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:42.992" endtime="20210616 02:48:42.993"/>
</kw>
<status status="PASS" starttime="20210616 02:48:39.054" endtime="20210616 02:48:42.993"/>
</kw>
<msg timestamp="20210616 02:48:42.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:39.053" endtime="20210616 02:48:42.993"/>
</kw>
<status status="PASS" starttime="20210616 02:48:39.052" endtime="20210616 02:48:42.994"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:42.998" level="INFO">Running command 'ozone sh bucket info /51600-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:47.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:47.195" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:48:42.996" endtime="20210616 02:48:47.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:47.197" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:48:47.196" endtime="20210616 02:48:47.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:47.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:47.197" endtime="20210616 02:48:47.198"/>
</kw>
<status status="PASS" starttime="20210616 02:48:42.996" endtime="20210616 02:48:47.198"/>
</kw>
<msg timestamp="20210616 02:48:47.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:42.995" endtime="20210616 02:48:47.198"/>
</kw>
<msg timestamp="20210616 02:48:47.199" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:48:42.994" endtime="20210616 02:48:47.199"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:48:47.199" endtime="20210616 02:48:47.199"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:47.203" level="INFO">Running command 'ozone sh bucket delete /51600-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:51.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:51.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:48:47.201" endtime="20210616 02:48:51.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:51.195" level="INFO"/>
<status status="PASS" starttime="20210616 02:48:51.194" endtime="20210616 02:48:51.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:51.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:51.195" endtime="20210616 02:48:51.196"/>
</kw>
<status status="PASS" starttime="20210616 02:48:47.201" endtime="20210616 02:48:51.196"/>
</kw>
<msg timestamp="20210616 02:48:51.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:47.200" endtime="20210616 02:48:51.197"/>
</kw>
<status status="PASS" starttime="20210616 02:48:47.200" endtime="20210616 02:48:51.197"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:51.201" level="INFO">Running command 'ozone sh volume delete /51600-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:54.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:54.900" level="INFO">${output} = Volume 51600-rpcbasic is deleted</msg>
<status status="PASS" starttime="20210616 02:48:51.199" endtime="20210616 02:48:54.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:54.901" level="INFO">Volume 51600-rpcbasic is deleted</msg>
<status status="PASS" starttime="20210616 02:48:54.900" endtime="20210616 02:48:54.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:54.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:54.901" endtime="20210616 02:48:54.902"/>
</kw>
<status status="PASS" starttime="20210616 02:48:51.198" endtime="20210616 02:48:54.902"/>
</kw>
<msg timestamp="20210616 02:48:54.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:51.198" endtime="20210616 02:48:54.903"/>
</kw>
<status status="PASS" starttime="20210616 02:48:51.197" endtime="20210616 02:48:54.903"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:54.908" level="INFO">Running command 'ozone sh volume create /51600-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:48:58.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:48:58.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:48:54.906" endtime="20210616 02:48:58.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:48:58.737" level="INFO"/>
<status status="PASS" starttime="20210616 02:48:58.736" endtime="20210616 02:48:58.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:48:58.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:48:58.737" endtime="20210616 02:48:58.738"/>
</kw>
<status status="PASS" starttime="20210616 02:48:54.904" endtime="20210616 02:48:58.738"/>
</kw>
<msg timestamp="20210616 02:48:58.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:54.904" endtime="20210616 02:48:58.738"/>
</kw>
<status status="PASS" starttime="20210616 02:48:54.903" endtime="20210616 02:48:58.738"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:48:58.752" level="INFO">Running command 'ozone sh volume info /51600-rpcbasic | jq -r '. | select(.name=="51600-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:02.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:02.965" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:48:58.750" endtime="20210616 02:49:02.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:02.967" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:49:02.966" endtime="20210616 02:49:02.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:02.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:02.967" endtime="20210616 02:49:02.968"/>
</kw>
<status status="PASS" starttime="20210616 02:48:58.740" endtime="20210616 02:49:02.968"/>
</kw>
<msg timestamp="20210616 02:49:02.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:48:58.740" endtime="20210616 02:49:02.968"/>
</kw>
<msg timestamp="20210616 02:49:02.969" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:48:58.739" endtime="20210616 02:49:02.969"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:49:02.969" endtime="20210616 02:49:02.970"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:02.974" level="INFO">Running command 'ozone sh volume info /51600-rpcbasic | jq -r '. | select(.name=="51600-rpcbasic") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:07.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:07.226" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:49:02.972" endtime="20210616 02:49:07.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:07.227" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:49:07.226" endtime="20210616 02:49:07.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:07.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:07.227" endtime="20210616 02:49:07.228"/>
</kw>
<status status="PASS" starttime="20210616 02:49:02.971" endtime="20210616 02:49:07.229"/>
</kw>
<msg timestamp="20210616 02:49:07.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:02.971" endtime="20210616 02:49:07.229"/>
</kw>
<msg timestamp="20210616 02:49:07.229" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:49:02.970" endtime="20210616 02:49:07.229"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:49:07.230" endtime="20210616 02:49:07.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:07.234" level="INFO">Running command 'ozone sh bucket create /51600-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:11.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:11.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:49:07.232" endtime="20210616 02:49:11.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:11.441" level="INFO"/>
<status status="PASS" starttime="20210616 02:49:11.440" endtime="20210616 02:49:11.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:11.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:11.441" endtime="20210616 02:49:11.442"/>
</kw>
<status status="PASS" starttime="20210616 02:49:07.231" endtime="20210616 02:49:11.442"/>
</kw>
<msg timestamp="20210616 02:49:11.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:07.231" endtime="20210616 02:49:11.443"/>
</kw>
<status status="PASS" starttime="20210616 02:49:07.230" endtime="20210616 02:49:11.443"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:11.448" level="INFO">Running command 'ozone sh bucket info /51600-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:15.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:15.622" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:49:11.446" endtime="20210616 02:49:15.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:15.624" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:49:15.623" endtime="20210616 02:49:15.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:15.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:15.625" endtime="20210616 02:49:15.625"/>
</kw>
<status status="PASS" starttime="20210616 02:49:11.445" endtime="20210616 02:49:15.626"/>
</kw>
<msg timestamp="20210616 02:49:15.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:11.444" endtime="20210616 02:49:15.626"/>
</kw>
<msg timestamp="20210616 02:49:15.626" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:49:11.443" endtime="20210616 02:49:15.626"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:49:15.627" endtime="20210616 02:49:15.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:15.632" level="INFO">Running command 'ozone sh bucket info /51600-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:19.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:19.852" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:49:15.629" endtime="20210616 02:49:19.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:19.853" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:49:19.852" endtime="20210616 02:49:19.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:19.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:19.854" endtime="20210616 02:49:19.854"/>
</kw>
<status status="PASS" starttime="20210616 02:49:15.629" endtime="20210616 02:49:19.855"/>
</kw>
<msg timestamp="20210616 02:49:19.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:15.628" endtime="20210616 02:49:19.855"/>
</kw>
<msg timestamp="20210616 02:49:19.855" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:49:15.627" endtime="20210616 02:49:19.855"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:49:19.855" endtime="20210616 02:49:19.856"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:19.860" level="INFO">Running command 'ozone sh bucket delete /51600-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:23.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:23.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:49:19.858" endtime="20210616 02:49:23.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:23.788" level="INFO"/>
<status status="PASS" starttime="20210616 02:49:23.787" endtime="20210616 02:49:23.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:23.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:23.788" endtime="20210616 02:49:23.789"/>
</kw>
<status status="PASS" starttime="20210616 02:49:19.857" endtime="20210616 02:49:23.789"/>
</kw>
<msg timestamp="20210616 02:49:23.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:19.857" endtime="20210616 02:49:23.789"/>
</kw>
<status status="PASS" starttime="20210616 02:49:19.856" endtime="20210616 02:49:23.790"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:23.794" level="INFO">Running command 'ozone sh volume delete /51600-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:27.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:27.586" level="INFO">${output} = Volume 51600-rpcbasic is deleted</msg>
<status status="PASS" starttime="20210616 02:49:23.792" endtime="20210616 02:49:27.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:27.588" level="INFO">Volume 51600-rpcbasic is deleted</msg>
<status status="PASS" starttime="20210616 02:49:27.587" endtime="20210616 02:49:27.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:27.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:27.588" endtime="20210616 02:49:27.589"/>
</kw>
<status status="PASS" starttime="20210616 02:49:23.791" endtime="20210616 02:49:27.589"/>
</kw>
<msg timestamp="20210616 02:49:27.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:23.791" endtime="20210616 02:49:27.589"/>
</kw>
<status status="PASS" starttime="20210616 02:49:23.790" endtime="20210616 02:49:27.590"/>
</kw>
<status status="PASS" starttime="20210616 02:45:56.305" endtime="20210616 02:49:27.590"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 02:45:56.304" endtime="20210616 02:49:27.590"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20210616 02:45:56.280" endtime="20210616 02:49:27.591"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 02:49:27.604" level="INFO">${random} = 48892</msg>
<status status="PASS" starttime="20210616 02:49:27.603" endtime="20210616 02:49:27.604"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:49:27.605" level="INFO">${prefix} = 48892</msg>
<status status="PASS" starttime="20210616 02:49:27.604" endtime="20210616 02:49:27.605"/>
</kw>
<status status="PASS" starttime="20210616 02:49:27.603" endtime="20210616 02:49:27.605"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:27.610" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:27.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:27.614" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:49:27.608" endtime="20210616 02:49:27.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:27.615" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:49:27.614" endtime="20210616 02:49:27.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:27.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:27.615" endtime="20210616 02:49:27.616"/>
</kw>
<status status="PASS" starttime="20210616 02:49:27.608" endtime="20210616 02:49:27.616"/>
</kw>
<msg timestamp="20210616 02:49:27.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:27.607" endtime="20210616 02:49:27.617"/>
</kw>
<msg timestamp="20210616 02:49:27.617" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:49:27.607" endtime="20210616 02:49:27.617"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:49:27.619" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:49:27.618" endtime="20210616 02:49:27.620"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:27.624" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:27.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:27.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:49:27.622" endtime="20210616 02:49:27.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:27.651" level="INFO"/>
<status status="PASS" starttime="20210616 02:49:27.650" endtime="20210616 02:49:27.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:27.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:27.651" endtime="20210616 02:49:27.652"/>
</kw>
<status status="PASS" starttime="20210616 02:49:27.621" endtime="20210616 02:49:27.653"/>
</kw>
<msg timestamp="20210616 02:49:27.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:27.621" endtime="20210616 02:49:27.653"/>
</kw>
<status status="PASS" starttime="20210616 02:49:27.620" endtime="20210616 02:49:27.653"/>
</kw>
<status status="PASS" starttime="20210616 02:49:27.620" endtime="20210616 02:49:27.653"/>
</kw>
<status status="PASS" starttime="20210616 02:49:27.606" endtime="20210616 02:49:27.654"/>
</kw>
<status status="PASS" starttime="20210616 02:49:27.606" endtime="20210616 02:49:27.654"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:27.659" level="INFO">Running command 'ozone sh volume info o3://om:9862/48892-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:31.649" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:49:31.649" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48892-rpcwoport is not found</msg>
<status status="PASS" starttime="20210616 02:49:27.655" endtime="20210616 02:49:31.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:31.651" level="INFO">VOLUME_NOT_FOUND Volume 48892-rpcwoport is not found</msg>
<status status="PASS" starttime="20210616 02:49:31.650" endtime="20210616 02:49:31.651"/>
</kw>
<msg timestamp="20210616 02:49:31.651" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48892-rpcwoport is not found</msg>
<status status="PASS" starttime="20210616 02:49:27.655" endtime="20210616 02:49:31.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:49:31.651" endtime="20210616 02:49:31.652"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:31.656" level="INFO">Running command 'ozone sh volume create o3://om:9862/48892-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:35.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:35.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:49:31.654" endtime="20210616 02:49:35.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:35.428" level="INFO"/>
<status status="PASS" starttime="20210616 02:49:35.426" endtime="20210616 02:49:35.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:35.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:35.428" endtime="20210616 02:49:35.429"/>
</kw>
<status status="PASS" starttime="20210616 02:49:31.653" endtime="20210616 02:49:35.429"/>
</kw>
<msg timestamp="20210616 02:49:35.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:31.653" endtime="20210616 02:49:35.429"/>
</kw>
<msg timestamp="20210616 02:49:35.430" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 02:49:31.652" endtime="20210616 02:49:35.430"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:49:35.430" endtime="20210616 02:49:35.430"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:35.435" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="48892-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:39.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:39.600" level="INFO">${output} = {
  "metadata": {},
  "name": "48892-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210616 02:49:35.433" endtime="20210616 02:49:39.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:39.602" level="INFO">{
  "metadata": {},
  "name": "48892-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-16T02:49:35.363Z",
  "modificationTime": "2021-06-16T02:49:35.363Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210616 02:49:39.601" endtime="20210616 02:49:39.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:39.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:39.602" endtime="20210616 02:49:39.603"/>
</kw>
<status status="PASS" starttime="20210616 02:49:35.432" endtime="20210616 02:49:39.603"/>
</kw>
<msg timestamp="20210616 02:49:39.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:35.432" endtime="20210616 02:49:39.603"/>
</kw>
<msg timestamp="20210616 02:49:39.604" level="INFO">${result} = {
  "metadata": {},
  "name": "48892-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210616 02:49:35.431" endtime="20210616 02:49:39.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:49:39.604" endtime="20210616 02:49:39.604"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:39.609" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48892-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:43.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:43.844" level="INFO">${output} = {
  "metadata": {},
  "name": "48892-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210616 02:49:39.606" endtime="20210616 02:49:43.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:43.845" level="INFO">{
  "metadata": {},
  "name": "48892-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-16T02:49:35.363Z",
  "modificationTime": "2021-06-16T02:49:35.363Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210616 02:49:43.844" endtime="20210616 02:49:43.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:43.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:43.845" endtime="20210616 02:49:43.846"/>
</kw>
<status status="PASS" starttime="20210616 02:49:39.606" endtime="20210616 02:49:43.846"/>
</kw>
<msg timestamp="20210616 02:49:43.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:39.606" endtime="20210616 02:49:43.847"/>
</kw>
<msg timestamp="20210616 02:49:43.847" level="INFO">${result} = {
  "metadata": {},
  "name": "48892-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210616 02:49:39.605" endtime="20210616 02:49:43.847"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:49:43.847" endtime="20210616 02:49:43.847"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:43.852" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/48892-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:47.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:47.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:49:43.849" endtime="20210616 02:49:47.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:47.549" level="INFO"/>
<status status="PASS" starttime="20210616 02:49:47.548" endtime="20210616 02:49:47.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:47.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:47.549" endtime="20210616 02:49:47.550"/>
</kw>
<status status="PASS" starttime="20210616 02:49:43.849" endtime="20210616 02:49:47.550"/>
</kw>
<msg timestamp="20210616 02:49:47.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:43.848" endtime="20210616 02:49:47.551"/>
</kw>
<status status="PASS" starttime="20210616 02:49:43.848" endtime="20210616 02:49:47.551"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:47.555" level="INFO">Running command 'ozone sh volume info o3://om:9862/48892-rpcwoport | jq -r '. | select(.name=="48892-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:51.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:51.897" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:49:47.553" endtime="20210616 02:49:51.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:51.898" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210616 02:49:51.897" endtime="20210616 02:49:51.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:51.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:51.899" endtime="20210616 02:49:51.899"/>
</kw>
<status status="PASS" starttime="20210616 02:49:47.553" endtime="20210616 02:49:51.900"/>
</kw>
<msg timestamp="20210616 02:49:51.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:47.552" endtime="20210616 02:49:51.900"/>
</kw>
<msg timestamp="20210616 02:49:51.900" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:49:47.551" endtime="20210616 02:49:51.900"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:49:51.900" endtime="20210616 02:49:51.901"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:51.905" level="INFO">Running command 'ozone sh bucket create o3://om:9862/48892-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:49:55.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:49:55.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:49:51.903" endtime="20210616 02:49:55.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:49:55.833" level="INFO"/>
<status status="PASS" starttime="20210616 02:49:55.832" endtime="20210616 02:49:55.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:49:55.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:49:55.833" endtime="20210616 02:49:55.834"/>
</kw>
<status status="PASS" starttime="20210616 02:49:51.902" endtime="20210616 02:49:55.834"/>
</kw>
<msg timestamp="20210616 02:49:55.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:51.902" endtime="20210616 02:49:55.834"/>
</kw>
<status status="PASS" starttime="20210616 02:49:51.901" endtime="20210616 02:49:55.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:49:55.839" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48892-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:00.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:00.056" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210616 02:49:55.837" endtime="20210616 02:50:00.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:00.057" level="INFO">DISK</msg>
<status status="PASS" starttime="20210616 02:50:00.057" endtime="20210616 02:50:00.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:00.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:00.058" endtime="20210616 02:50:00.058"/>
</kw>
<status status="PASS" starttime="20210616 02:49:55.836" endtime="20210616 02:50:00.059"/>
</kw>
<msg timestamp="20210616 02:50:00.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:49:55.836" endtime="20210616 02:50:00.059"/>
</kw>
<msg timestamp="20210616 02:50:00.059" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210616 02:49:55.835" endtime="20210616 02:50:00.059"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:50:00.059" endtime="20210616 02:50:00.060"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:00.067" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48892-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:04.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:04.209" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:50:00.062" endtime="20210616 02:50:04.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:04.210" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210616 02:50:04.210" endtime="20210616 02:50:04.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:04.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:04.211" endtime="20210616 02:50:04.211"/>
</kw>
<status status="PASS" starttime="20210616 02:50:00.062" endtime="20210616 02:50:04.212"/>
</kw>
<msg timestamp="20210616 02:50:04.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:00.061" endtime="20210616 02:50:04.212"/>
</kw>
<msg timestamp="20210616 02:50:04.212" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:50:00.060" endtime="20210616 02:50:04.212"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:50:04.213" endtime="20210616 02:50:04.213"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:04.217" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48892-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:08.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:08.364" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210616 02:50:04.215" endtime="20210616 02:50:08.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:08.365" level="INFO">100</msg>
<status status="PASS" starttime="20210616 02:50:08.364" endtime="20210616 02:50:08.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:08.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:08.365" endtime="20210616 02:50:08.367"/>
</kw>
<status status="PASS" starttime="20210616 02:50:04.215" endtime="20210616 02:50:08.367"/>
</kw>
<msg timestamp="20210616 02:50:08.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:04.214" endtime="20210616 02:50:08.367"/>
</kw>
<msg timestamp="20210616 02:50:08.368" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210616 02:50:04.213" endtime="20210616 02:50:08.368"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:50:08.368" endtime="20210616 02:50:08.368"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:08.372" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/48892-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:11.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:11.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:50:08.370" endtime="20210616 02:50:11.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:11.879" level="INFO"/>
<status status="PASS" starttime="20210616 02:50:11.878" endtime="20210616 02:50:11.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:11.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:11.880" endtime="20210616 02:50:11.880"/>
</kw>
<status status="PASS" starttime="20210616 02:50:08.370" endtime="20210616 02:50:11.881"/>
</kw>
<msg timestamp="20210616 02:50:11.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:08.369" endtime="20210616 02:50:11.881"/>
</kw>
<status status="PASS" starttime="20210616 02:50:08.368" endtime="20210616 02:50:11.881"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:11.885" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48892-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:15.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:15.874" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210616 02:50:11.883" endtime="20210616 02:50:15.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:15.875" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210616 02:50:15.874" endtime="20210616 02:50:15.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:15.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:15.875" endtime="20210616 02:50:15.876"/>
</kw>
<status status="PASS" starttime="20210616 02:50:11.883" endtime="20210616 02:50:15.876"/>
</kw>
<msg timestamp="20210616 02:50:15.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:11.882" endtime="20210616 02:50:15.877"/>
</kw>
<msg timestamp="20210616 02:50:15.877" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210616 02:50:11.881" endtime="20210616 02:50:15.877"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:50:15.877" endtime="20210616 02:50:15.878"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:15.882" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48892-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:19.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:19.882" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210616 02:50:15.880" endtime="20210616 02:50:19.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:19.883" level="INFO">1000</msg>
<status status="PASS" starttime="20210616 02:50:19.882" endtime="20210616 02:50:19.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:19.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:19.884" endtime="20210616 02:50:19.884"/>
</kw>
<status status="PASS" starttime="20210616 02:50:15.879" endtime="20210616 02:50:19.885"/>
</kw>
<msg timestamp="20210616 02:50:19.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:15.879" endtime="20210616 02:50:19.885"/>
</kw>
<msg timestamp="20210616 02:50:19.885" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210616 02:50:15.878" endtime="20210616 02:50:19.885"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:50:19.885" endtime="20210616 02:50:19.886"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:19.890" level="INFO">Running command 'ozone sh bucket list o3://om:9862/48892-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:24.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:24.017" level="INFO">${output} = 48892-rpcwoport</msg>
<status status="PASS" starttime="20210616 02:50:19.888" endtime="20210616 02:50:24.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:24.018" level="INFO">48892-rpcwoport</msg>
<status status="PASS" starttime="20210616 02:50:24.017" endtime="20210616 02:50:24.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:24.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:24.018" endtime="20210616 02:50:24.019"/>
</kw>
<status status="PASS" starttime="20210616 02:50:19.887" endtime="20210616 02:50:24.019"/>
</kw>
<msg timestamp="20210616 02:50:24.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:19.887" endtime="20210616 02:50:24.020"/>
</kw>
<msg timestamp="20210616 02:50:24.020" level="INFO">${result} = 48892-rpcwoport</msg>
<status status="PASS" starttime="20210616 02:50:19.886" endtime="20210616 02:50:24.020"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:50:24.020" endtime="20210616 02:50:24.021"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:24.026" level="INFO">Running command 'ozone sh key put o3://om:9862/48892-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:30.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:30.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:50:24.024" endtime="20210616 02:50:30.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:30.653" level="INFO"/>
<status status="PASS" starttime="20210616 02:50:30.652" endtime="20210616 02:50:30.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:30.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:30.653" endtime="20210616 02:50:30.654"/>
</kw>
<status status="PASS" starttime="20210616 02:50:24.023" endtime="20210616 02:50:30.654"/>
</kw>
<msg timestamp="20210616 02:50:30.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:24.023" endtime="20210616 02:50:30.654"/>
</kw>
<status status="PASS" starttime="20210616 02:50:24.022" endtime="20210616 02:50:30.655"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:30.659" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:30.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:30.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:50:30.657" endtime="20210616 02:50:30.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:30.662" level="INFO"/>
<status status="PASS" starttime="20210616 02:50:30.662" endtime="20210616 02:50:30.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:30.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:30.663" endtime="20210616 02:50:30.663"/>
</kw>
<status status="PASS" starttime="20210616 02:50:30.656" endtime="20210616 02:50:30.664"/>
</kw>
<msg timestamp="20210616 02:50:30.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:30.656" endtime="20210616 02:50:30.664"/>
</kw>
<status status="PASS" starttime="20210616 02:50:30.655" endtime="20210616 02:50:30.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:30.668" level="INFO">Running command 'ozone sh key get o3://om:9862/48892-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:36.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:36.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:50:30.666" endtime="20210616 02:50:36.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:36.807" level="INFO"/>
<status status="PASS" starttime="20210616 02:50:36.807" endtime="20210616 02:50:36.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:36.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:36.808" endtime="20210616 02:50:36.808"/>
</kw>
<status status="PASS" starttime="20210616 02:50:30.665" endtime="20210616 02:50:36.809"/>
</kw>
<msg timestamp="20210616 02:50:36.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:30.665" endtime="20210616 02:50:36.809"/>
</kw>
<status status="PASS" starttime="20210616 02:50:30.664" endtime="20210616 02:50:36.809"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:36.813" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:36.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:36.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:50:36.811" endtime="20210616 02:50:36.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:36.817" level="INFO"/>
<status status="PASS" starttime="20210616 02:50:36.816" endtime="20210616 02:50:36.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:36.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:36.817" endtime="20210616 02:50:36.818"/>
</kw>
<status status="PASS" starttime="20210616 02:50:36.810" endtime="20210616 02:50:36.818"/>
</kw>
<msg timestamp="20210616 02:50:36.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:36.810" endtime="20210616 02:50:36.819"/>
</kw>
<status status="PASS" starttime="20210616 02:50:36.810" endtime="20210616 02:50:36.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:36.822" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/48892-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:43.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:43.321" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:50:36.821" endtime="20210616 02:50:43.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:43.323" level="INFO"/>
<status status="PASS" starttime="20210616 02:50:43.322" endtime="20210616 02:50:43.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:43.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:43.324" endtime="20210616 02:50:43.324"/>
</kw>
<status status="PASS" starttime="20210616 02:50:36.820" endtime="20210616 02:50:43.325"/>
</kw>
<msg timestamp="20210616 02:50:43.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:36.820" endtime="20210616 02:50:43.325"/>
</kw>
<status status="PASS" starttime="20210616 02:50:36.819" endtime="20210616 02:50:43.325"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:43.329" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:43.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:43.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:50:43.327" endtime="20210616 02:50:43.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:43.334" level="INFO"/>
<status status="PASS" starttime="20210616 02:50:43.333" endtime="20210616 02:50:43.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:43.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:43.334" endtime="20210616 02:50:43.335"/>
</kw>
<status status="PASS" starttime="20210616 02:50:43.326" endtime="20210616 02:50:43.335"/>
</kw>
<msg timestamp="20210616 02:50:43.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:43.326" endtime="20210616 02:50:43.335"/>
</kw>
<status status="PASS" starttime="20210616 02:50:43.325" endtime="20210616 02:50:43.335"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:43.339" level="INFO">Running command 'ozone sh key get o3://om:9862/48892-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:49.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:49.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:50:43.337" endtime="20210616 02:50:49.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:49.208" level="INFO"/>
<status status="PASS" starttime="20210616 02:50:49.207" endtime="20210616 02:50:49.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:49.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:49.209" endtime="20210616 02:50:49.209"/>
</kw>
<status status="PASS" starttime="20210616 02:50:43.337" endtime="20210616 02:50:49.210"/>
</kw>
<msg timestamp="20210616 02:50:49.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:43.336" endtime="20210616 02:50:49.210"/>
</kw>
<status status="PASS" starttime="20210616 02:50:43.336" endtime="20210616 02:50:49.210"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:49.214" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:49.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:49.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:50:49.212" endtime="20210616 02:50:49.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:49.218" level="INFO"/>
<status status="PASS" starttime="20210616 02:50:49.217" endtime="20210616 02:50:49.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:49.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:49.218" endtime="20210616 02:50:49.219"/>
</kw>
<status status="PASS" starttime="20210616 02:50:49.211" endtime="20210616 02:50:49.219"/>
</kw>
<msg timestamp="20210616 02:50:49.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:49.211" endtime="20210616 02:50:49.219"/>
</kw>
<status status="PASS" starttime="20210616 02:50:49.210" endtime="20210616 02:50:49.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:49.224" level="INFO">Running command 'ozone sh key info o3://om:9862/48892-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:53.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:53.562" level="INFO">${output} = {
  "volumeName": "48892-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:50:40.798Z",
  "modificationTime": "2021-06-16T02:50:42.820Z",...</msg>
<status status="PASS" starttime="20210616 02:50:49.222" endtime="20210616 02:50:53.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:53.565" level="INFO">{
  "volumeName": "48892-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:50:40.798Z",
  "modificationTime": "2021-06-16T02:50:42.820Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210616 02:50:53.563" endtime="20210616 02:50:53.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:53.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:53.565" endtime="20210616 02:50:53.566"/>
</kw>
<status status="PASS" starttime="20210616 02:50:49.222" endtime="20210616 02:50:53.566"/>
</kw>
<msg timestamp="20210616 02:50:53.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:49.221" endtime="20210616 02:50:53.566"/>
</kw>
<msg timestamp="20210616 02:50:53.567" level="INFO">${result} = {
  "volumeName": "48892-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:50:40.798Z",
  "modificationTime": "2021-06-16T02:50:42.820Z",...</msg>
<status status="PASS" starttime="20210616 02:50:49.220" endtime="20210616 02:50:53.567"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:50:53.567" endtime="20210616 02:50:53.567"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:53.573" level="INFO">Running command 'ozone sh key delete o3://om:9862/48892-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:50:57.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:50:57.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:50:53.570" endtime="20210616 02:50:57.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:50:57.376" level="INFO"/>
<status status="PASS" starttime="20210616 02:50:57.376" endtime="20210616 02:50:57.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:50:57.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:50:57.377" endtime="20210616 02:50:57.377"/>
</kw>
<status status="PASS" starttime="20210616 02:50:53.569" endtime="20210616 02:50:57.378"/>
</kw>
<msg timestamp="20210616 02:50:57.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:53.568" endtime="20210616 02:50:57.378"/>
</kw>
<status status="PASS" starttime="20210616 02:50:53.568" endtime="20210616 02:50:57.378"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:50:57.383" level="INFO">Running command 'ozone sh key cp o3://om:9862/48892-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:04.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:51:04.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:50:57.380" endtime="20210616 02:51:04.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:04.260" level="INFO"/>
<status status="PASS" starttime="20210616 02:51:04.260" endtime="20210616 02:51:04.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:51:04.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:51:04.261" endtime="20210616 02:51:04.261"/>
</kw>
<status status="PASS" starttime="20210616 02:50:57.379" endtime="20210616 02:51:04.262"/>
</kw>
<msg timestamp="20210616 02:51:04.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:50:57.379" endtime="20210616 02:51:04.262"/>
</kw>
<status status="PASS" starttime="20210616 02:50:57.378" endtime="20210616 02:51:04.262"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:04.266" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:04.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:51:04.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:51:04.264" endtime="20210616 02:51:04.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:04.270" level="INFO"/>
<status status="PASS" starttime="20210616 02:51:04.269" endtime="20210616 02:51:04.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:51:04.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:51:04.270" endtime="20210616 02:51:04.271"/>
</kw>
<status status="PASS" starttime="20210616 02:51:04.263" endtime="20210616 02:51:04.271"/>
</kw>
<msg timestamp="20210616 02:51:04.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:51:04.263" endtime="20210616 02:51:04.272"/>
</kw>
<status status="PASS" starttime="20210616 02:51:04.262" endtime="20210616 02:51:04.272"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:04.276" level="INFO">Running command 'ozone sh key get o3://om:9862/48892-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:10.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:51:10.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:51:04.274" endtime="20210616 02:51:10.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:10.425" level="INFO"/>
<status status="PASS" starttime="20210616 02:51:10.425" endtime="20210616 02:51:10.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:51:10.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:51:10.426" endtime="20210616 02:51:10.426"/>
</kw>
<status status="PASS" starttime="20210616 02:51:04.273" endtime="20210616 02:51:10.427"/>
</kw>
<msg timestamp="20210616 02:51:10.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:51:04.273" endtime="20210616 02:51:10.427"/>
</kw>
<status status="PASS" starttime="20210616 02:51:04.272" endtime="20210616 02:51:10.427"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:10.433" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:10.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:51:10.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:51:10.429" endtime="20210616 02:51:10.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:10.437" level="INFO"/>
<status status="PASS" starttime="20210616 02:51:10.436" endtime="20210616 02:51:10.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:51:10.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:51:10.437" endtime="20210616 02:51:10.438"/>
</kw>
<status status="PASS" starttime="20210616 02:51:10.428" endtime="20210616 02:51:10.438"/>
</kw>
<msg timestamp="20210616 02:51:10.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:51:10.428" endtime="20210616 02:51:10.438"/>
</kw>
<status status="PASS" starttime="20210616 02:51:10.427" endtime="20210616 02:51:10.439"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:10.442" level="INFO">Running command 'ozone sh key delete o3://om:9862/48892-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:14.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:51:14.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:51:10.441" endtime="20210616 02:51:14.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:14.583" level="INFO"/>
<status status="PASS" starttime="20210616 02:51:14.578" endtime="20210616 02:51:14.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:51:14.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:51:14.583" endtime="20210616 02:51:14.584"/>
</kw>
<status status="PASS" starttime="20210616 02:51:10.440" endtime="20210616 02:51:14.585"/>
</kw>
<msg timestamp="20210616 02:51:14.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:51:10.440" endtime="20210616 02:51:14.585"/>
</kw>
<status status="PASS" starttime="20210616 02:51:10.439" endtime="20210616 02:51:14.585"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:14.588" level="INFO">Running command 'ozone sh key get o3://om:9862/48892-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:18.273" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:51:18.274" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210616 02:51:14.586" endtime="20210616 02:51:18.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:18.275" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210616 02:51:18.274" endtime="20210616 02:51:18.275"/>
</kw>
<msg timestamp="20210616 02:51:18.276" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210616 02:51:14.585" endtime="20210616 02:51:18.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:51:18.276" endtime="20210616 02:51:18.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:18.281" level="INFO">Running command 'ozone sh key get --force o3://om:9862/48892-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:24.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:51:24.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:51:18.279" endtime="20210616 02:51:24.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:24.504" level="INFO"/>
<status status="PASS" starttime="20210616 02:51:24.504" endtime="20210616 02:51:24.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:51:24.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:51:24.505" endtime="20210616 02:51:24.505"/>
</kw>
<status status="PASS" starttime="20210616 02:51:18.278" endtime="20210616 02:51:24.506"/>
</kw>
<msg timestamp="20210616 02:51:24.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:51:18.278" endtime="20210616 02:51:24.506"/>
</kw>
<msg timestamp="20210616 02:51:24.506" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 02:51:18.276" endtime="20210616 02:51:24.506"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:51:24.507" endtime="20210616 02:51:24.507"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:24.511" level="INFO">Running command 'ozone sh key info o3://om:9862/48892-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:28.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:51:28.607" level="INFO">${output} = {
  "volumeName": "48892-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:50:27.831Z",
  "modificationTime": "2021-06-16T02:50:30.021Z",
  "oz...</msg>
<status status="PASS" starttime="20210616 02:51:24.509" endtime="20210616 02:51:28.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:28.609" level="INFO">{
  "volumeName": "48892-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:50:27.831Z",
  "modificationTime": "2021-06-16T02:50:30.021Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210616 02:51:28.608" endtime="20210616 02:51:28.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:51:28.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:51:28.610" endtime="20210616 02:51:28.610"/>
</kw>
<status status="PASS" starttime="20210616 02:51:24.509" endtime="20210616 02:51:28.611"/>
</kw>
<msg timestamp="20210616 02:51:28.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:51:24.508" endtime="20210616 02:51:28.611"/>
</kw>
<msg timestamp="20210616 02:51:28.612" level="INFO">${result} = {
  "volumeName": "48892-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:50:27.831Z",
  "modificationTime": "2021-06-16T02:50:30.021Z",
  "oz...</msg>
<status status="PASS" starttime="20210616 02:51:24.507" endtime="20210616 02:51:28.612"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:51:28.612" endtime="20210616 02:51:28.612"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:28.618" level="INFO">Running command 'ozone sh key list o3://om:9862/48892-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:32.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:51:32.857" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210616 02:51:28.616" endtime="20210616 02:51:32.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:32.859" level="INFO">key1</msg>
<status status="PASS" starttime="20210616 02:51:32.858" endtime="20210616 02:51:32.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:51:32.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:51:32.859" endtime="20210616 02:51:32.860"/>
</kw>
<status status="PASS" starttime="20210616 02:51:28.615" endtime="20210616 02:51:32.860"/>
</kw>
<msg timestamp="20210616 02:51:32.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:51:28.614" endtime="20210616 02:51:32.860"/>
</kw>
<msg timestamp="20210616 02:51:32.860" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20210616 02:51:28.613" endtime="20210616 02:51:32.860"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:51:32.861" endtime="20210616 02:51:32.861"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:32.866" level="INFO">Running command 'ozone sh key rename o3://om:9862/48892-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:36.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:51:36.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:51:32.864" endtime="20210616 02:51:36.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:36.598" level="INFO"/>
<status status="PASS" starttime="20210616 02:51:36.598" endtime="20210616 02:51:36.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:51:36.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:51:36.599" endtime="20210616 02:51:36.599"/>
</kw>
<status status="PASS" starttime="20210616 02:51:32.863" endtime="20210616 02:51:36.600"/>
</kw>
<msg timestamp="20210616 02:51:36.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:51:32.862" endtime="20210616 02:51:36.600"/>
</kw>
<status status="PASS" starttime="20210616 02:51:32.861" endtime="20210616 02:51:36.600"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:36.606" level="INFO">Running command 'ozone sh key list o3://om:9862/48892-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:40.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:51:40.858" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20210616 02:51:36.602" endtime="20210616 02:51:40.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:40.860" level="INFO">key2</msg>
<status status="PASS" starttime="20210616 02:51:40.859" endtime="20210616 02:51:40.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:51:40.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:51:40.860" endtime="20210616 02:51:40.861"/>
</kw>
<status status="PASS" starttime="20210616 02:51:36.602" endtime="20210616 02:51:40.861"/>
</kw>
<msg timestamp="20210616 02:51:40.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:51:36.601" endtime="20210616 02:51:40.861"/>
</kw>
<msg timestamp="20210616 02:51:40.862" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20210616 02:51:36.600" endtime="20210616 02:51:40.862"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:51:40.862" endtime="20210616 02:51:40.863"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:40.867" level="INFO">Running command 'ozone sh key delete o3://om:9862/48892-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:44.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:51:44.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:51:40.865" endtime="20210616 02:51:44.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:44.570" level="INFO"/>
<status status="PASS" starttime="20210616 02:51:44.569" endtime="20210616 02:51:44.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:51:44.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:51:44.570" endtime="20210616 02:51:44.571"/>
</kw>
<status status="PASS" starttime="20210616 02:51:40.864" endtime="20210616 02:51:44.571"/>
</kw>
<msg timestamp="20210616 02:51:44.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:51:40.864" endtime="20210616 02:51:44.572"/>
</kw>
<status status="PASS" starttime="20210616 02:51:40.863" endtime="20210616 02:51:44.572"/>
</kw>
<status status="PASS" starttime="20210616 02:50:24.021" endtime="20210616 02:51:44.572"/>
</kw>
<status status="PASS" starttime="20210616 02:50:24.021" endtime="20210616 02:51:44.572"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:44.576" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/48892-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:48.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:51:48.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:51:44.574" endtime="20210616 02:51:48.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:48.288" level="INFO"/>
<status status="PASS" starttime="20210616 02:51:48.287" endtime="20210616 02:51:48.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:51:48.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:51:48.288" endtime="20210616 02:51:48.290"/>
</kw>
<status status="PASS" starttime="20210616 02:51:44.574" endtime="20210616 02:51:48.290"/>
</kw>
<msg timestamp="20210616 02:51:48.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:51:44.573" endtime="20210616 02:51:48.291"/>
</kw>
<status status="PASS" starttime="20210616 02:51:44.572" endtime="20210616 02:51:48.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:48.296" level="INFO">Running command 'ozone sh volume info o3://om:9862/48892-rpcwoport | jq -r '. | select(.name=="48892-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:52.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:51:52.674" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:51:48.294" endtime="20210616 02:51:52.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:52.675" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:51:52.674" endtime="20210616 02:51:52.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:51:52.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:51:52.675" endtime="20210616 02:51:52.676"/>
</kw>
<status status="PASS" starttime="20210616 02:51:48.293" endtime="20210616 02:51:52.676"/>
</kw>
<msg timestamp="20210616 02:51:52.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:51:48.293" endtime="20210616 02:51:52.677"/>
</kw>
<msg timestamp="20210616 02:51:52.677" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:51:48.291" endtime="20210616 02:51:52.677"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:51:52.677" endtime="20210616 02:51:52.678"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:52.682" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/48892-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:51:56.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:51:56.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:51:52.680" endtime="20210616 02:51:56.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:51:56.477" level="INFO"/>
<status status="PASS" starttime="20210616 02:51:56.476" endtime="20210616 02:51:56.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:51:56.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:51:56.477" endtime="20210616 02:51:56.478"/>
</kw>
<status status="PASS" starttime="20210616 02:51:52.679" endtime="20210616 02:51:56.478"/>
</kw>
<msg timestamp="20210616 02:51:56.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:51:52.679" endtime="20210616 02:51:56.479"/>
</kw>
<status status="PASS" starttime="20210616 02:51:52.678" endtime="20210616 02:51:56.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:51:56.485" level="INFO">Running command 'ozone sh volume info o3://om:9862/48892-rpcwoport | jq -r '. | select(.name=="48892-rpcwoport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:00.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:00.628" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:51:56.483" endtime="20210616 02:52:00.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:00.629" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:52:00.628" endtime="20210616 02:52:00.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:00.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:00.629" endtime="20210616 02:52:00.630"/>
</kw>
<status status="PASS" starttime="20210616 02:51:56.482" endtime="20210616 02:52:00.630"/>
</kw>
<msg timestamp="20210616 02:52:00.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:51:56.482" endtime="20210616 02:52:00.631"/>
</kw>
<msg timestamp="20210616 02:52:00.631" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:51:56.480" endtime="20210616 02:52:00.631"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:52:00.631" endtime="20210616 02:52:00.632"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:00.636" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/48892-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:04.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:04.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:52:00.634" endtime="20210616 02:52:04.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:04.263" level="INFO"/>
<status status="PASS" starttime="20210616 02:52:04.262" endtime="20210616 02:52:04.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:04.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:04.263" endtime="20210616 02:52:04.264"/>
</kw>
<status status="PASS" starttime="20210616 02:52:00.633" endtime="20210616 02:52:04.264"/>
</kw>
<msg timestamp="20210616 02:52:04.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:00.633" endtime="20210616 02:52:04.265"/>
</kw>
<status status="PASS" starttime="20210616 02:52:00.632" endtime="20210616 02:52:04.265"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:04.270" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48892-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:08.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:08.358" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:52:04.268" endtime="20210616 02:52:08.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:08.359" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:52:08.358" endtime="20210616 02:52:08.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:08.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:08.359" endtime="20210616 02:52:08.360"/>
</kw>
<status status="PASS" starttime="20210616 02:52:04.267" endtime="20210616 02:52:08.360"/>
</kw>
<msg timestamp="20210616 02:52:08.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:04.266" endtime="20210616 02:52:08.361"/>
</kw>
<msg timestamp="20210616 02:52:08.361" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:52:04.265" endtime="20210616 02:52:08.361"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:52:08.362" endtime="20210616 02:52:08.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:08.367" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/48892-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:12.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:12.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:52:08.365" endtime="20210616 02:52:12.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:12.238" level="INFO"/>
<status status="PASS" starttime="20210616 02:52:12.238" endtime="20210616 02:52:12.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:12.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:12.239" endtime="20210616 02:52:12.240"/>
</kw>
<status status="PASS" starttime="20210616 02:52:08.364" endtime="20210616 02:52:12.240"/>
</kw>
<msg timestamp="20210616 02:52:12.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:08.364" endtime="20210616 02:52:12.240"/>
</kw>
<status status="PASS" starttime="20210616 02:52:08.362" endtime="20210616 02:52:12.240"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:12.245" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48892-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:16.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:16.471" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:52:12.243" endtime="20210616 02:52:16.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:16.472" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:52:16.472" endtime="20210616 02:52:16.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:16.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:16.473" endtime="20210616 02:52:16.473"/>
</kw>
<status status="PASS" starttime="20210616 02:52:12.242" endtime="20210616 02:52:16.474"/>
</kw>
<msg timestamp="20210616 02:52:16.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:12.242" endtime="20210616 02:52:16.474"/>
</kw>
<msg timestamp="20210616 02:52:16.474" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:52:12.241" endtime="20210616 02:52:16.474"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:52:16.475" endtime="20210616 02:52:16.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:16.479" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/48892-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:20.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:20.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:52:16.477" endtime="20210616 02:52:20.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:20.378" level="INFO"/>
<status status="PASS" starttime="20210616 02:52:20.377" endtime="20210616 02:52:20.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:20.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:20.378" endtime="20210616 02:52:20.379"/>
</kw>
<status status="PASS" starttime="20210616 02:52:16.476" endtime="20210616 02:52:20.379"/>
</kw>
<msg timestamp="20210616 02:52:20.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:16.476" endtime="20210616 02:52:20.379"/>
</kw>
<status status="PASS" starttime="20210616 02:52:16.475" endtime="20210616 02:52:20.379"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:20.384" level="INFO">Running command 'ozone sh volume delete o3://om:9862/48892-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:24.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:24.138" level="INFO">${output} = Volume 48892-rpcwoport is deleted</msg>
<status status="PASS" starttime="20210616 02:52:20.381" endtime="20210616 02:52:24.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:24.140" level="INFO">Volume 48892-rpcwoport is deleted</msg>
<status status="PASS" starttime="20210616 02:52:24.139" endtime="20210616 02:52:24.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:24.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:24.140" endtime="20210616 02:52:24.141"/>
</kw>
<status status="PASS" starttime="20210616 02:52:20.381" endtime="20210616 02:52:24.141"/>
</kw>
<msg timestamp="20210616 02:52:24.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:20.380" endtime="20210616 02:52:24.141"/>
</kw>
<status status="PASS" starttime="20210616 02:52:20.380" endtime="20210616 02:52:24.142"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:24.146" level="INFO">Running command 'ozone sh volume create o3://om:9862/48892-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:27.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:27.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:52:24.143" endtime="20210616 02:52:27.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:27.956" level="INFO"/>
<status status="PASS" starttime="20210616 02:52:27.956" endtime="20210616 02:52:27.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:27.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:27.957" endtime="20210616 02:52:27.957"/>
</kw>
<status status="PASS" starttime="20210616 02:52:24.143" endtime="20210616 02:52:27.958"/>
</kw>
<msg timestamp="20210616 02:52:27.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:24.143" endtime="20210616 02:52:27.958"/>
</kw>
<status status="PASS" starttime="20210616 02:52:24.142" endtime="20210616 02:52:27.958"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:27.963" level="INFO">Running command 'ozone sh volume info o3://om:9862/48892-rpcwoport | jq -r '. | select(.name=="48892-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:31.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:31.966" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:52:27.960" endtime="20210616 02:52:31.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:31.968" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:52:31.967" endtime="20210616 02:52:31.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:31.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:31.969" endtime="20210616 02:52:31.969"/>
</kw>
<status status="PASS" starttime="20210616 02:52:27.960" endtime="20210616 02:52:31.970"/>
</kw>
<msg timestamp="20210616 02:52:31.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:27.960" endtime="20210616 02:52:31.970"/>
</kw>
<msg timestamp="20210616 02:52:31.970" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:52:27.958" endtime="20210616 02:52:31.970"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:52:31.971" endtime="20210616 02:52:31.971"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:31.975" level="INFO">Running command 'ozone sh volume info o3://om:9862/48892-rpcwoport | jq -r '. | select(.name=="48892-rpcwoport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:35.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:35.877" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:52:31.973" endtime="20210616 02:52:35.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:35.878" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:52:35.877" endtime="20210616 02:52:35.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:35.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:35.879" endtime="20210616 02:52:35.880"/>
</kw>
<status status="PASS" starttime="20210616 02:52:31.973" endtime="20210616 02:52:35.880"/>
</kw>
<msg timestamp="20210616 02:52:35.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:31.972" endtime="20210616 02:52:35.881"/>
</kw>
<msg timestamp="20210616 02:52:35.881" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:52:31.971" endtime="20210616 02:52:35.881"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:52:35.881" endtime="20210616 02:52:35.882"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:35.886" level="INFO">Running command 'ozone sh bucket create o3://om:9862/48892-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:39.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:39.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:52:35.884" endtime="20210616 02:52:39.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:39.946" level="INFO"/>
<status status="PASS" starttime="20210616 02:52:39.945" endtime="20210616 02:52:39.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:39.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:39.946" endtime="20210616 02:52:39.947"/>
</kw>
<status status="PASS" starttime="20210616 02:52:35.883" endtime="20210616 02:52:39.947"/>
</kw>
<msg timestamp="20210616 02:52:39.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:35.883" endtime="20210616 02:52:39.947"/>
</kw>
<status status="PASS" starttime="20210616 02:52:35.882" endtime="20210616 02:52:39.948"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:39.953" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48892-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:44.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:44.092" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:52:39.950" endtime="20210616 02:52:44.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:44.093" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:52:44.093" endtime="20210616 02:52:44.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:44.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:44.094" endtime="20210616 02:52:44.094"/>
</kw>
<status status="PASS" starttime="20210616 02:52:39.950" endtime="20210616 02:52:44.095"/>
</kw>
<msg timestamp="20210616 02:52:44.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:39.949" endtime="20210616 02:52:44.095"/>
</kw>
<msg timestamp="20210616 02:52:44.095" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:52:39.948" endtime="20210616 02:52:44.095"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:52:44.095" endtime="20210616 02:52:44.096"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:44.100" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48892-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:48.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:48.096" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:52:44.098" endtime="20210616 02:52:48.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:48.097" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:52:48.096" endtime="20210616 02:52:48.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:48.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:48.097" endtime="20210616 02:52:48.098"/>
</kw>
<status status="PASS" starttime="20210616 02:52:44.098" endtime="20210616 02:52:48.098"/>
</kw>
<msg timestamp="20210616 02:52:48.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:44.097" endtime="20210616 02:52:48.099"/>
</kw>
<msg timestamp="20210616 02:52:48.099" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:52:44.096" endtime="20210616 02:52:48.099"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:52:48.099" endtime="20210616 02:52:48.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:48.104" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/48892-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:51.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:51.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:52:48.102" endtime="20210616 02:52:51.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:51.822" level="INFO"/>
<status status="PASS" starttime="20210616 02:52:51.822" endtime="20210616 02:52:51.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:51.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:51.823" endtime="20210616 02:52:51.823"/>
</kw>
<status status="PASS" starttime="20210616 02:52:48.101" endtime="20210616 02:52:51.824"/>
</kw>
<msg timestamp="20210616 02:52:51.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:48.101" endtime="20210616 02:52:51.824"/>
</kw>
<status status="PASS" starttime="20210616 02:52:48.100" endtime="20210616 02:52:51.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:51.828" level="INFO">Running command 'ozone sh volume delete o3://om:9862/48892-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:55.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:55.518" level="INFO">${output} = Volume 48892-rpcwoport is deleted</msg>
<status status="PASS" starttime="20210616 02:52:51.826" endtime="20210616 02:52:55.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:55.519" level="INFO">Volume 48892-rpcwoport is deleted</msg>
<status status="PASS" starttime="20210616 02:52:55.519" endtime="20210616 02:52:55.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:55.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:55.520" endtime="20210616 02:52:55.520"/>
</kw>
<status status="PASS" starttime="20210616 02:52:51.826" endtime="20210616 02:52:55.521"/>
</kw>
<msg timestamp="20210616 02:52:55.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:51.825" endtime="20210616 02:52:55.521"/>
</kw>
<status status="PASS" starttime="20210616 02:52:51.824" endtime="20210616 02:52:55.521"/>
</kw>
<status status="PASS" starttime="20210616 02:49:27.654" endtime="20210616 02:52:55.521"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 02:49:27.605" endtime="20210616 02:52:55.522"/>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:55.529" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:55.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:55.532" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:52:55.527" endtime="20210616 02:52:55.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:55.534" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:52:55.533" endtime="20210616 02:52:55.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:55.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:55.534" endtime="20210616 02:52:55.535"/>
</kw>
<status status="PASS" starttime="20210616 02:52:55.526" endtime="20210616 02:52:55.535"/>
</kw>
<msg timestamp="20210616 02:52:55.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:55.526" endtime="20210616 02:52:55.535"/>
</kw>
<msg timestamp="20210616 02:52:55.536" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:52:55.525" endtime="20210616 02:52:55.536"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:52:55.536" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:52:55.536" endtime="20210616 02:52:55.537"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:55.541" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:55.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:55.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:52:55.539" endtime="20210616 02:52:55.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:55.587" level="INFO"/>
<status status="PASS" starttime="20210616 02:52:55.587" endtime="20210616 02:52:55.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:55.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:55.588" endtime="20210616 02:52:55.588"/>
</kw>
<status status="PASS" starttime="20210616 02:52:55.538" endtime="20210616 02:52:55.589"/>
</kw>
<msg timestamp="20210616 02:52:55.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:55.538" endtime="20210616 02:52:55.589"/>
</kw>
<status status="PASS" starttime="20210616 02:52:55.537" endtime="20210616 02:52:55.589"/>
</kw>
<status status="PASS" starttime="20210616 02:52:55.537" endtime="20210616 02:52:55.589"/>
</kw>
<status status="PASS" starttime="20210616 02:52:55.524" endtime="20210616 02:52:55.590"/>
</kw>
<status status="PASS" starttime="20210616 02:52:55.524" endtime="20210616 02:52:55.590"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:55.594" level="INFO">Running command 'ozone sh volume create o3://om:9862/48892-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:52:59.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:52:59.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:52:55.593" endtime="20210616 02:52:59.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:52:59.407" level="INFO"/>
<status status="PASS" starttime="20210616 02:52:59.407" endtime="20210616 02:52:59.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:52:59.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:52:59.408" endtime="20210616 02:52:59.408"/>
</kw>
<status status="PASS" starttime="20210616 02:52:55.592" endtime="20210616 02:52:59.409"/>
</kw>
<msg timestamp="20210616 02:52:59.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:55.592" endtime="20210616 02:52:59.410"/>
</kw>
<status status="PASS" starttime="20210616 02:52:55.591" endtime="20210616 02:52:59.410"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:52:59.414" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48892-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:03.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:03.446" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:52:59.412" endtime="20210616 02:53:03.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:03.447" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:53:03.447" endtime="20210616 02:53:03.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:03.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:03.448" endtime="20210616 02:53:03.448"/>
</kw>
<status status="PASS" starttime="20210616 02:52:59.411" endtime="20210616 02:53:03.449"/>
</kw>
<msg timestamp="20210616 02:53:03.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:52:59.411" endtime="20210616 02:53:03.449"/>
</kw>
<msg timestamp="20210616 02:53:03.449" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:52:59.410" endtime="20210616 02:53:03.449"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:53:03.450" endtime="20210616 02:53:03.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:03.455" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/48892-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:07.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:07.255" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210616 02:53:03.453" endtime="20210616 02:53:07.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:07.256" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210616 02:53:07.255" endtime="20210616 02:53:07.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:07.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:07.256" endtime="20210616 02:53:07.257"/>
</kw>
<status status="PASS" starttime="20210616 02:53:03.452" endtime="20210616 02:53:07.257"/>
</kw>
<msg timestamp="20210616 02:53:07.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:03.452" endtime="20210616 02:53:07.258"/>
</kw>
<msg timestamp="20210616 02:53:07.258" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210616 02:53:03.451" endtime="20210616 02:53:07.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:07.262" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48892-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:11.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:11.568" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:53:07.260" endtime="20210616 02:53:11.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:11.569" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:53:11.569" endtime="20210616 02:53:11.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:11.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:11.570" endtime="20210616 02:53:11.570"/>
</kw>
<status status="PASS" starttime="20210616 02:53:07.260" endtime="20210616 02:53:11.571"/>
</kw>
<msg timestamp="20210616 02:53:11.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:07.259" endtime="20210616 02:53:11.571"/>
</kw>
<msg timestamp="20210616 02:53:11.571" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:53:07.258" endtime="20210616 02:53:11.571"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:53:11.571" endtime="20210616 02:53:11.573"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:11.577" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/48892-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:15.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:15.337" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 02:53:11.575" endtime="20210616 02:53:15.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:15.339" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 02:53:15.338" endtime="20210616 02:53:15.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:15.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:15.339" endtime="20210616 02:53:15.340"/>
</kw>
<status status="PASS" starttime="20210616 02:53:11.574" endtime="20210616 02:53:15.340"/>
</kw>
<msg timestamp="20210616 02:53:15.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:11.574" endtime="20210616 02:53:15.341"/>
</kw>
<msg timestamp="20210616 02:53:15.341" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 02:53:11.573" endtime="20210616 02:53:15.341"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:15.345" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48892-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:19.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:19.440" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:53:15.343" endtime="20210616 02:53:19.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:19.442" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:53:19.441" endtime="20210616 02:53:19.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:19.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:19.442" endtime="20210616 02:53:19.443"/>
</kw>
<status status="PASS" starttime="20210616 02:53:15.343" endtime="20210616 02:53:19.443"/>
</kw>
<msg timestamp="20210616 02:53:19.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:15.342" endtime="20210616 02:53:19.443"/>
</kw>
<msg timestamp="20210616 02:53:19.444" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:53:15.341" endtime="20210616 02:53:19.444"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:53:19.444" endtime="20210616 02:53:19.445"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:19.449" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/48892-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:23.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:23.216" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 02:53:19.447" endtime="20210616 02:53:23.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:23.218" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 02:53:23.217" endtime="20210616 02:53:23.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:23.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:23.219" endtime="20210616 02:53:23.220"/>
</kw>
<status status="PASS" starttime="20210616 02:53:19.446" endtime="20210616 02:53:23.220"/>
</kw>
<msg timestamp="20210616 02:53:23.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:19.446" endtime="20210616 02:53:23.221"/>
</kw>
<msg timestamp="20210616 02:53:23.222" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 02:53:19.445" endtime="20210616 02:53:23.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:23.227" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48892-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:27.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:27.223" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210616 02:53:23.225" endtime="20210616 02:53:27.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:27.224" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:53:27.223" endtime="20210616 02:53:27.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:27.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:27.224" endtime="20210616 02:53:27.225"/>
</kw>
<status status="PASS" starttime="20210616 02:53:23.224" endtime="20210616 02:53:27.226"/>
</kw>
<msg timestamp="20210616 02:53:27.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:23.224" endtime="20210616 02:53:27.226"/>
</kw>
<msg timestamp="20210616 02:53:27.226" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210616 02:53:23.222" endtime="20210616 02:53:27.226"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:53:27.226" endtime="20210616 02:53:27.227"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:53:27.227" endtime="20210616 02:53:27.228"/>
</kw>
<status status="PASS" starttime="20210616 02:52:55.590" endtime="20210616 02:53:27.228"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 02:52:55.523" endtime="20210616 02:53:27.228"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:27.238" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:27.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:27.241" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:53:27.235" endtime="20210616 02:53:27.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:27.242" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:53:27.242" endtime="20210616 02:53:27.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:27.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:27.243" endtime="20210616 02:53:27.243"/>
</kw>
<status status="PASS" starttime="20210616 02:53:27.235" endtime="20210616 02:53:27.244"/>
</kw>
<msg timestamp="20210616 02:53:27.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:27.234" endtime="20210616 02:53:27.244"/>
</kw>
<msg timestamp="20210616 02:53:27.244" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:53:27.234" endtime="20210616 02:53:27.244"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:53:27.245" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:53:27.245" endtime="20210616 02:53:27.245"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:27.250" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:27.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:27.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:53:27.248" endtime="20210616 02:53:27.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:27.259" level="INFO"/>
<status status="PASS" starttime="20210616 02:53:27.258" endtime="20210616 02:53:27.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:27.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:27.259" endtime="20210616 02:53:27.260"/>
</kw>
<status status="PASS" starttime="20210616 02:53:27.247" endtime="20210616 02:53:27.260"/>
</kw>
<msg timestamp="20210616 02:53:27.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:27.247" endtime="20210616 02:53:27.260"/>
</kw>
<status status="PASS" starttime="20210616 02:53:27.246" endtime="20210616 02:53:27.260"/>
</kw>
<status status="PASS" starttime="20210616 02:53:27.245" endtime="20210616 02:53:27.261"/>
</kw>
<status status="PASS" starttime="20210616 02:53:27.233" endtime="20210616 02:53:27.261"/>
</kw>
<status status="PASS" starttime="20210616 02:53:27.232" endtime="20210616 02:53:27.261"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:27.266" level="INFO">Running command 'ozone sh bucket create o3://om:9862/48892-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:31.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:31.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:53:27.264" endtime="20210616 02:53:31.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:31.041" level="INFO"/>
<status status="PASS" starttime="20210616 02:53:31.041" endtime="20210616 02:53:31.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:31.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:31.042" endtime="20210616 02:53:31.043"/>
</kw>
<status status="PASS" starttime="20210616 02:53:27.263" endtime="20210616 02:53:31.043"/>
</kw>
<msg timestamp="20210616 02:53:31.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:27.263" endtime="20210616 02:53:31.043"/>
</kw>
<status status="PASS" starttime="20210616 02:53:27.262" endtime="20210616 02:53:31.044"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:31.049" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48892-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:34.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:34.923" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:53:31.046" endtime="20210616 02:53:34.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:34.925" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:53:34.924" endtime="20210616 02:53:34.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:34.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:34.925" endtime="20210616 02:53:34.926"/>
</kw>
<status status="PASS" starttime="20210616 02:53:31.046" endtime="20210616 02:53:34.926"/>
</kw>
<msg timestamp="20210616 02:53:34.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:31.045" endtime="20210616 02:53:34.926"/>
</kw>
<msg timestamp="20210616 02:53:34.927" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:53:31.045" endtime="20210616 02:53:34.927"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:53:34.927" endtime="20210616 02:53:34.927"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:34.931" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/48892-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:39.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:39.001" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210616 02:53:34.930" endtime="20210616 02:53:39.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:39.002" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210616 02:53:39.002" endtime="20210616 02:53:39.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:39.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:39.003" endtime="20210616 02:53:39.003"/>
</kw>
<status status="PASS" starttime="20210616 02:53:34.929" endtime="20210616 02:53:39.004"/>
</kw>
<msg timestamp="20210616 02:53:39.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:34.928" endtime="20210616 02:53:39.004"/>
</kw>
<msg timestamp="20210616 02:53:39.004" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210616 02:53:34.928" endtime="20210616 02:53:39.004"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:39.009" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48892-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:43.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:43.134" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:53:39.007" endtime="20210616 02:53:43.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:43.137" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:53:43.135" endtime="20210616 02:53:43.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:43.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:43.137" endtime="20210616 02:53:43.138"/>
</kw>
<status status="PASS" starttime="20210616 02:53:39.006" endtime="20210616 02:53:43.139"/>
</kw>
<msg timestamp="20210616 02:53:43.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:39.005" endtime="20210616 02:53:43.139"/>
</kw>
<msg timestamp="20210616 02:53:43.139" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:53:39.005" endtime="20210616 02:53:43.139"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:53:43.140" endtime="20210616 02:53:43.141"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:43.145" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/48892-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:47.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:47.000" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 02:53:43.143" endtime="20210616 02:53:47.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:47.002" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 02:53:47.001" endtime="20210616 02:53:47.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:47.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:47.002" endtime="20210616 02:53:47.003"/>
</kw>
<status status="PASS" starttime="20210616 02:53:43.142" endtime="20210616 02:53:47.003"/>
</kw>
<msg timestamp="20210616 02:53:47.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:43.142" endtime="20210616 02:53:47.003"/>
</kw>
<msg timestamp="20210616 02:53:47.004" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 02:53:43.141" endtime="20210616 02:53:47.004"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:47.008" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48892-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:51.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:51.161" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:53:47.006" endtime="20210616 02:53:51.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:51.163" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:53:51.163" endtime="20210616 02:53:51.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:51.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:51.164" endtime="20210616 02:53:51.164"/>
</kw>
<status status="PASS" starttime="20210616 02:53:47.005" endtime="20210616 02:53:51.165"/>
</kw>
<msg timestamp="20210616 02:53:51.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:47.005" endtime="20210616 02:53:51.165"/>
</kw>
<msg timestamp="20210616 02:53:51.165" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:53:47.004" endtime="20210616 02:53:51.165"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:53:51.166" endtime="20210616 02:53:51.166"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:51.171" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/48892-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:55.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:55.051" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 02:53:51.169" endtime="20210616 02:53:55.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:55.053" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 02:53:55.052" endtime="20210616 02:53:55.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:55.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:55.053" endtime="20210616 02:53:55.054"/>
</kw>
<status status="PASS" starttime="20210616 02:53:51.168" endtime="20210616 02:53:55.054"/>
</kw>
<msg timestamp="20210616 02:53:55.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:51.167" endtime="20210616 02:53:55.054"/>
</kw>
<msg timestamp="20210616 02:53:55.055" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 02:53:51.167" endtime="20210616 02:53:55.055"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:55.059" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48892-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:59.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:59.051" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210616 02:53:55.057" endtime="20210616 02:53:59.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:59.053" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:53:59.052" endtime="20210616 02:53:59.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:59.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:59.054" endtime="20210616 02:53:59.054"/>
</kw>
<status status="PASS" starttime="20210616 02:53:55.056" endtime="20210616 02:53:59.054"/>
</kw>
<msg timestamp="20210616 02:53:59.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:55.056" endtime="20210616 02:53:59.055"/>
</kw>
<msg timestamp="20210616 02:53:59.055" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210616 02:53:55.055" endtime="20210616 02:53:59.055"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:53:59.055" endtime="20210616 02:53:59.056"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:53:59.056" endtime="20210616 02:53:59.056"/>
</kw>
<status status="PASS" starttime="20210616 02:53:27.261" endtime="20210616 02:53:59.057"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 02:53:27.231" endtime="20210616 02:53:59.057"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:59.064" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:59.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:59.068" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:53:59.062" endtime="20210616 02:53:59.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:59.069" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:53:59.068" endtime="20210616 02:53:59.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:59.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:59.070" endtime="20210616 02:53:59.070"/>
</kw>
<status status="PASS" starttime="20210616 02:53:59.061" endtime="20210616 02:53:59.071"/>
</kw>
<msg timestamp="20210616 02:53:59.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:59.061" endtime="20210616 02:53:59.071"/>
</kw>
<msg timestamp="20210616 02:53:59.071" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:53:59.060" endtime="20210616 02:53:59.071"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:53:59.072" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:53:59.072" endtime="20210616 02:53:59.072"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:59.077" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:53:59.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:53:59.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:53:59.075" endtime="20210616 02:53:59.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:53:59.086" level="INFO"/>
<status status="PASS" starttime="20210616 02:53:59.085" endtime="20210616 02:53:59.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:53:59.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:53:59.086" endtime="20210616 02:53:59.087"/>
</kw>
<status status="PASS" starttime="20210616 02:53:59.074" endtime="20210616 02:53:59.087"/>
</kw>
<msg timestamp="20210616 02:53:59.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:59.074" endtime="20210616 02:53:59.087"/>
</kw>
<status status="PASS" starttime="20210616 02:53:59.073" endtime="20210616 02:53:59.087"/>
</kw>
<status status="PASS" starttime="20210616 02:53:59.072" endtime="20210616 02:53:59.087"/>
</kw>
<status status="PASS" starttime="20210616 02:53:59.060" endtime="20210616 02:53:59.088"/>
</kw>
<status status="PASS" starttime="20210616 02:53:59.059" endtime="20210616 02:53:59.088"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:53:59.092" level="INFO">Running command 'ozone sh key put o3://om:9862/48892-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:05.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:05.131" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:53:59.090" endtime="20210616 02:54:05.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:05.133" level="INFO"/>
<status status="PASS" starttime="20210616 02:54:05.132" endtime="20210616 02:54:05.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:05.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:05.133" endtime="20210616 02:54:05.134"/>
</kw>
<status status="PASS" starttime="20210616 02:53:59.090" endtime="20210616 02:54:05.135"/>
</kw>
<msg timestamp="20210616 02:54:05.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:53:59.089" endtime="20210616 02:54:05.135"/>
</kw>
<status status="PASS" starttime="20210616 02:53:59.089" endtime="20210616 02:54:05.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:05.139" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48892-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:09.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:09.266" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:54:05.137" endtime="20210616 02:54:09.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:09.268" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:54:09.267" endtime="20210616 02:54:09.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:09.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:09.268" endtime="20210616 02:54:09.269"/>
</kw>
<status status="PASS" starttime="20210616 02:54:05.136" endtime="20210616 02:54:09.269"/>
</kw>
<msg timestamp="20210616 02:54:09.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:05.136" endtime="20210616 02:54:09.269"/>
</kw>
<msg timestamp="20210616 02:54:09.270" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:54:05.135" endtime="20210616 02:54:09.270"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:54:09.270" endtime="20210616 02:54:09.270"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:09.274" level="INFO">Running command 'ozone sh key addacl o3://om:9862/48892-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:13.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:13.054" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:54:09.272" endtime="20210616 02:54:13.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:13.055" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:54:13.055" endtime="20210616 02:54:13.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:13.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:13.056" endtime="20210616 02:54:13.056"/>
</kw>
<status status="PASS" starttime="20210616 02:54:09.272" endtime="20210616 02:54:13.057"/>
</kw>
<msg timestamp="20210616 02:54:13.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:09.271" endtime="20210616 02:54:13.057"/>
</kw>
<msg timestamp="20210616 02:54:13.057" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 02:54:09.271" endtime="20210616 02:54:13.058"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:13.062" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48892-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:17.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:17.070" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:54:13.060" endtime="20210616 02:54:17.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:17.072" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:54:17.071" endtime="20210616 02:54:17.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:17.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:17.072" endtime="20210616 02:54:17.073"/>
</kw>
<status status="PASS" starttime="20210616 02:54:13.059" endtime="20210616 02:54:17.073"/>
</kw>
<msg timestamp="20210616 02:54:17.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:13.059" endtime="20210616 02:54:17.074"/>
</kw>
<msg timestamp="20210616 02:54:17.074" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:54:13.058" endtime="20210616 02:54:17.074"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:54:17.074" endtime="20210616 02:54:17.075"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:17.079" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/48892-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:20.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:20.986" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 02:54:17.077" endtime="20210616 02:54:20.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:20.987" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 02:54:20.986" endtime="20210616 02:54:20.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:20.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:20.988" endtime="20210616 02:54:20.988"/>
</kw>
<status status="PASS" starttime="20210616 02:54:17.077" endtime="20210616 02:54:20.989"/>
</kw>
<msg timestamp="20210616 02:54:20.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:17.076" endtime="20210616 02:54:20.989"/>
</kw>
<msg timestamp="20210616 02:54:20.989" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 02:54:17.076" endtime="20210616 02:54:20.989"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:20.993" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48892-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:24.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:24.963" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:54:20.991" endtime="20210616 02:54:24.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:24.964" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:54:24.964" endtime="20210616 02:54:24.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:24.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:24.965" endtime="20210616 02:54:24.965"/>
</kw>
<status status="PASS" starttime="20210616 02:54:20.991" endtime="20210616 02:54:24.966"/>
</kw>
<msg timestamp="20210616 02:54:24.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:20.990" endtime="20210616 02:54:24.966"/>
</kw>
<msg timestamp="20210616 02:54:24.966" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:54:20.990" endtime="20210616 02:54:24.966"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:54:24.967" endtime="20210616 02:54:24.967"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:24.972" level="INFO">Running command 'ozone sh key setacl o3://om:9862/48892-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:28.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:28.812" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 02:54:24.970" endtime="20210616 02:54:28.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:28.814" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 02:54:28.813" endtime="20210616 02:54:28.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:28.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:28.815" endtime="20210616 02:54:28.815"/>
</kw>
<status status="PASS" starttime="20210616 02:54:24.970" endtime="20210616 02:54:28.816"/>
</kw>
<msg timestamp="20210616 02:54:28.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:24.969" endtime="20210616 02:54:28.816"/>
</kw>
<msg timestamp="20210616 02:54:28.816" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 02:54:24.967" endtime="20210616 02:54:28.816"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:28.820" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48892-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:33.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:33.024" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210616 02:54:28.818" endtime="20210616 02:54:33.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:33.026" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:54:33.025" endtime="20210616 02:54:33.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:33.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:33.026" endtime="20210616 02:54:33.027"/>
</kw>
<status status="PASS" starttime="20210616 02:54:28.818" endtime="20210616 02:54:33.027"/>
</kw>
<msg timestamp="20210616 02:54:33.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:28.817" endtime="20210616 02:54:33.027"/>
</kw>
<msg timestamp="20210616 02:54:33.028" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210616 02:54:28.817" endtime="20210616 02:54:33.028"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:54:33.028" endtime="20210616 02:54:33.028"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:54:33.031" endtime="20210616 02:54:33.032"/>
</kw>
<status status="PASS" starttime="20210616 02:53:59.088" endtime="20210616 02:54:33.032"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 02:53:59.058" endtime="20210616 02:54:33.033"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:33.040" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:33.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:33.044" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:54:33.038" endtime="20210616 02:54:33.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:33.045" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:54:33.044" endtime="20210616 02:54:33.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:33.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:33.045" endtime="20210616 02:54:33.046"/>
</kw>
<status status="PASS" starttime="20210616 02:54:33.036" endtime="20210616 02:54:33.046"/>
</kw>
<msg timestamp="20210616 02:54:33.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:33.036" endtime="20210616 02:54:33.047"/>
</kw>
<msg timestamp="20210616 02:54:33.047" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:54:33.035" endtime="20210616 02:54:33.047"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:54:33.048" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:54:33.047" endtime="20210616 02:54:33.048"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:33.053" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:33.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:33.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:54:33.051" endtime="20210616 02:54:33.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:33.071" level="INFO"/>
<status status="PASS" starttime="20210616 02:54:33.070" endtime="20210616 02:54:33.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:33.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:33.071" endtime="20210616 02:54:33.072"/>
</kw>
<status status="PASS" starttime="20210616 02:54:33.050" endtime="20210616 02:54:33.072"/>
</kw>
<msg timestamp="20210616 02:54:33.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:33.050" endtime="20210616 02:54:33.073"/>
</kw>
<status status="PASS" starttime="20210616 02:54:33.049" endtime="20210616 02:54:33.073"/>
</kw>
<status status="PASS" starttime="20210616 02:54:33.048" endtime="20210616 02:54:33.073"/>
</kw>
<status status="PASS" starttime="20210616 02:54:33.035" endtime="20210616 02:54:33.073"/>
</kw>
<status status="PASS" starttime="20210616 02:54:33.034" endtime="20210616 02:54:33.073"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:33.078" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/48892-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:36.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:36.938" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210616 02:54:33.076" endtime="20210616 02:54:36.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:36.940" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210616 02:54:36.939" endtime="20210616 02:54:36.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:36.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:36.940" endtime="20210616 02:54:36.941"/>
</kw>
<status status="PASS" starttime="20210616 02:54:33.075" endtime="20210616 02:54:36.941"/>
</kw>
<msg timestamp="20210616 02:54:36.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:33.075" endtime="20210616 02:54:36.941"/>
</kw>
<status status="PASS" starttime="20210616 02:54:33.074" endtime="20210616 02:54:36.945"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:36.954" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/48892-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:42.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:42.045" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210616 02:54:36.947" endtime="20210616 02:54:42.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:42.046" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:54:42.046" endtime="20210616 02:54:42.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:42.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:42.047" endtime="20210616 02:54:42.047"/>
</kw>
<status status="PASS" starttime="20210616 02:54:36.947" endtime="20210616 02:54:42.048"/>
</kw>
<msg timestamp="20210616 02:54:42.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:36.946" endtime="20210616 02:54:42.048"/>
</kw>
<msg timestamp="20210616 02:54:42.048" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210616 02:54:36.945" endtime="20210616 02:54:42.048"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:54:42.049" endtime="20210616 02:54:42.050"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:42.054" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/48892-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:45.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:45.969" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210616 02:54:42.052" endtime="20210616 02:54:45.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:45.970" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210616 02:54:45.970" endtime="20210616 02:54:45.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:45.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:45.971" endtime="20210616 02:54:45.971"/>
</kw>
<status status="PASS" starttime="20210616 02:54:42.051" endtime="20210616 02:54:45.972"/>
</kw>
<msg timestamp="20210616 02:54:45.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:42.051" endtime="20210616 02:54:45.972"/>
</kw>
<msg timestamp="20210616 02:54:45.972" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210616 02:54:42.050" endtime="20210616 02:54:45.972"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:45.976" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/48892-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:50.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:50.239" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210616 02:54:45.974" endtime="20210616 02:54:50.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:50.241" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:54:50.240" endtime="20210616 02:54:50.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:50.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:50.241" endtime="20210616 02:54:50.242"/>
</kw>
<status status="PASS" starttime="20210616 02:54:45.974" endtime="20210616 02:54:50.242"/>
</kw>
<msg timestamp="20210616 02:54:50.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:45.973" endtime="20210616 02:54:50.242"/>
</kw>
<msg timestamp="20210616 02:54:50.243" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210616 02:54:45.973" endtime="20210616 02:54:50.243"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:54:50.243" endtime="20210616 02:54:50.244"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:50.248" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/48892-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:54.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:54.106" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 02:54:50.246" endtime="20210616 02:54:54.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:54.108" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 02:54:54.107" endtime="20210616 02:54:54.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:54.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:54.108" endtime="20210616 02:54:54.109"/>
</kw>
<status status="PASS" starttime="20210616 02:54:50.245" endtime="20210616 02:54:54.109"/>
</kw>
<msg timestamp="20210616 02:54:54.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:50.245" endtime="20210616 02:54:54.109"/>
</kw>
<msg timestamp="20210616 02:54:54.110" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 02:54:50.244" endtime="20210616 02:54:54.110"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:54.116" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/48892-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:54:58.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:54:58.172" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210616 02:54:54.113" endtime="20210616 02:54:58.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:54:58.174" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:54:58.173" endtime="20210616 02:54:58.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:54:58.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:54:58.174" endtime="20210616 02:54:58.175"/>
</kw>
<status status="PASS" starttime="20210616 02:54:54.112" endtime="20210616 02:54:58.175"/>
</kw>
<msg timestamp="20210616 02:54:58.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:54.111" endtime="20210616 02:54:58.175"/>
</kw>
<msg timestamp="20210616 02:54:58.176" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210616 02:54:54.110" endtime="20210616 02:54:58.176"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:54:58.176" endtime="20210616 02:54:58.176"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:54:58.177" endtime="20210616 02:54:58.177"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:54:58.181" level="INFO">Running command 'ozone sh key put o3://om:9862/48892-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:04.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:04.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:54:58.179" endtime="20210616 02:55:04.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:04.755" level="INFO"/>
<status status="PASS" starttime="20210616 02:55:04.754" endtime="20210616 02:55:04.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:04.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:04.755" endtime="20210616 02:55:04.756"/>
</kw>
<status status="PASS" starttime="20210616 02:54:58.178" endtime="20210616 02:55:04.756"/>
</kw>
<msg timestamp="20210616 02:55:04.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:54:58.178" endtime="20210616 02:55:04.757"/>
</kw>
<status status="PASS" starttime="20210616 02:54:58.177" endtime="20210616 02:55:04.757"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:04.761" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48892-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:08.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:08.807" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:55:04.759" endtime="20210616 02:55:08.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:08.809" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 02:55:08.808" endtime="20210616 02:55:08.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:08.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:08.809" endtime="20210616 02:55:08.810"/>
</kw>
<status status="PASS" starttime="20210616 02:55:04.758" endtime="20210616 02:55:08.810"/>
</kw>
<msg timestamp="20210616 02:55:08.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:04.758" endtime="20210616 02:55:08.810"/>
</kw>
<msg timestamp="20210616 02:55:08.811" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 02:55:04.757" endtime="20210616 02:55:08.811"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:55:08.811" endtime="20210616 02:55:08.812"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 02:55:08.812" endtime="20210616 02:55:08.813"/>
</kw>
<status status="PASS" starttime="20210616 02:54:33.073" endtime="20210616 02:55:08.813"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 02:54:33.033" endtime="20210616 02:55:08.813"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:08.820" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:08.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:08.824" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:55:08.817" endtime="20210616 02:55:08.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:08.825" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:55:08.824" endtime="20210616 02:55:08.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:08.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:08.825" endtime="20210616 02:55:08.826"/>
</kw>
<status status="PASS" starttime="20210616 02:55:08.817" endtime="20210616 02:55:08.826"/>
</kw>
<msg timestamp="20210616 02:55:08.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:08.816" endtime="20210616 02:55:08.827"/>
</kw>
<msg timestamp="20210616 02:55:08.827" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:55:08.816" endtime="20210616 02:55:08.827"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:55:08.828" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:55:08.827" endtime="20210616 02:55:08.828"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:08.832" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:08.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:08.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:55:08.830" endtime="20210616 02:55:08.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:08.842" level="INFO"/>
<status status="PASS" starttime="20210616 02:55:08.841" endtime="20210616 02:55:08.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:08.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:08.842" endtime="20210616 02:55:08.843"/>
</kw>
<status status="PASS" starttime="20210616 02:55:08.830" endtime="20210616 02:55:08.843"/>
</kw>
<msg timestamp="20210616 02:55:08.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:08.829" endtime="20210616 02:55:08.843"/>
</kw>
<status status="PASS" starttime="20210616 02:55:08.829" endtime="20210616 02:55:08.844"/>
</kw>
<status status="PASS" starttime="20210616 02:55:08.828" endtime="20210616 02:55:08.844"/>
</kw>
<status status="PASS" starttime="20210616 02:55:08.815" endtime="20210616 02:55:08.844"/>
</kw>
<status status="PASS" starttime="20210616 02:55:08.815" endtime="20210616 02:55:08.844"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:08.849" level="INFO">Running command 'ozone sh volume info o3:///48892-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:12.774" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:55:12.774" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48892-rpcwport is not found</msg>
<status status="PASS" starttime="20210616 02:55:08.847" endtime="20210616 02:55:12.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:12.776" level="INFO">VOLUME_NOT_FOUND Volume 48892-rpcwport is not found</msg>
<status status="PASS" starttime="20210616 02:55:12.775" endtime="20210616 02:55:12.776"/>
</kw>
<msg timestamp="20210616 02:55:12.777" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48892-rpcwport is not found</msg>
<status status="PASS" starttime="20210616 02:55:08.846" endtime="20210616 02:55:12.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:55:12.777" endtime="20210616 02:55:12.777"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:12.782" level="INFO">Running command 'ozone sh volume create o3:///48892-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:16.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:16.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:55:12.779" endtime="20210616 02:55:16.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:16.742" level="INFO"/>
<status status="PASS" starttime="20210616 02:55:16.741" endtime="20210616 02:55:16.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:16.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:16.742" endtime="20210616 02:55:16.743"/>
</kw>
<status status="PASS" starttime="20210616 02:55:12.779" endtime="20210616 02:55:16.743"/>
</kw>
<msg timestamp="20210616 02:55:16.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:12.778" endtime="20210616 02:55:16.743"/>
</kw>
<msg timestamp="20210616 02:55:16.744" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 02:55:12.778" endtime="20210616 02:55:16.744"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:55:16.744" endtime="20210616 02:55:16.744"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:16.749" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="48892-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:20.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:20.678" level="INFO">${output} = {
  "metadata": {},
  "name": "48892-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210616 02:55:16.747" endtime="20210616 02:55:20.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:20.680" level="INFO">{
  "metadata": {},
  "name": "48892-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-16T02:55:16.593Z",
  "modificationTime": "2021-06-16T02:55:16.593Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210616 02:55:20.679" endtime="20210616 02:55:20.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:20.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:20.680" endtime="20210616 02:55:20.681"/>
</kw>
<status status="PASS" starttime="20210616 02:55:16.746" endtime="20210616 02:55:20.681"/>
</kw>
<msg timestamp="20210616 02:55:20.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:16.746" endtime="20210616 02:55:20.681"/>
</kw>
<msg timestamp="20210616 02:55:20.682" level="INFO">${result} = {
  "metadata": {},
  "name": "48892-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210616 02:55:16.745" endtime="20210616 02:55:20.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:55:20.682" endtime="20210616 02:55:20.683"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:20.687" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48892-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:24.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:24.914" level="INFO">${output} = {
  "metadata": {},
  "name": "48892-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210616 02:55:20.685" endtime="20210616 02:55:24.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:24.916" level="INFO">{
  "metadata": {},
  "name": "48892-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-16T02:55:16.593Z",
  "modificationTime": "2021-06-16T02:55:16.593Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210616 02:55:24.915" endtime="20210616 02:55:24.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:24.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:24.916" endtime="20210616 02:55:24.917"/>
</kw>
<status status="PASS" starttime="20210616 02:55:20.684" endtime="20210616 02:55:24.917"/>
</kw>
<msg timestamp="20210616 02:55:24.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:20.684" endtime="20210616 02:55:24.918"/>
</kw>
<msg timestamp="20210616 02:55:24.918" level="INFO">${result} = {
  "metadata": {},
  "name": "48892-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210616 02:55:20.683" endtime="20210616 02:55:24.918"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:55:24.918" endtime="20210616 02:55:24.919"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:24.923" level="INFO">Running command 'ozone sh volume setquota o3:///48892-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:28.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:28.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:55:24.921" endtime="20210616 02:55:28.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:28.772" level="INFO"/>
<status status="PASS" starttime="20210616 02:55:28.770" endtime="20210616 02:55:28.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:28.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:28.773" endtime="20210616 02:55:28.774"/>
</kw>
<status status="PASS" starttime="20210616 02:55:24.920" endtime="20210616 02:55:28.774"/>
</kw>
<msg timestamp="20210616 02:55:28.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:24.920" endtime="20210616 02:55:28.774"/>
</kw>
<status status="PASS" starttime="20210616 02:55:24.919" endtime="20210616 02:55:28.775"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:28.780" level="INFO">Running command 'ozone sh volume info o3:///48892-rpcwport | jq -r '. | select(.name=="48892-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:32.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:32.932" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:55:28.777" endtime="20210616 02:55:32.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:32.933" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210616 02:55:32.932" endtime="20210616 02:55:32.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:32.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:32.933" endtime="20210616 02:55:32.934"/>
</kw>
<status status="PASS" starttime="20210616 02:55:28.776" endtime="20210616 02:55:32.934"/>
</kw>
<msg timestamp="20210616 02:55:32.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:28.776" endtime="20210616 02:55:32.935"/>
</kw>
<msg timestamp="20210616 02:55:32.935" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:55:28.775" endtime="20210616 02:55:32.935"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:55:32.935" endtime="20210616 02:55:32.936"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:32.940" level="INFO">Running command 'ozone sh bucket create o3:///48892-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:36.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:36.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:55:32.938" endtime="20210616 02:55:36.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:36.862" level="INFO"/>
<status status="PASS" starttime="20210616 02:55:36.861" endtime="20210616 02:55:36.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:36.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:36.862" endtime="20210616 02:55:36.863"/>
</kw>
<status status="PASS" starttime="20210616 02:55:32.937" endtime="20210616 02:55:36.863"/>
</kw>
<msg timestamp="20210616 02:55:36.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:32.937" endtime="20210616 02:55:36.863"/>
</kw>
<status status="PASS" starttime="20210616 02:55:32.936" endtime="20210616 02:55:36.864"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:36.868" level="INFO">Running command 'ozone sh bucket info o3:///48892-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:41.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:41.062" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210616 02:55:36.866" endtime="20210616 02:55:41.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:41.064" level="INFO">DISK</msg>
<status status="PASS" starttime="20210616 02:55:41.063" endtime="20210616 02:55:41.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:41.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:41.064" endtime="20210616 02:55:41.064"/>
</kw>
<status status="PASS" starttime="20210616 02:55:36.865" endtime="20210616 02:55:41.065"/>
</kw>
<msg timestamp="20210616 02:55:41.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:36.865" endtime="20210616 02:55:41.065"/>
</kw>
<msg timestamp="20210616 02:55:41.065" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210616 02:55:36.864" endtime="20210616 02:55:41.065"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:55:41.066" endtime="20210616 02:55:41.067"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:41.071" level="INFO">Running command 'ozone sh bucket info o3:///48892-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:45.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:45.177" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:55:41.069" endtime="20210616 02:55:45.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:45.178" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210616 02:55:45.177" endtime="20210616 02:55:45.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:45.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:45.178" endtime="20210616 02:55:45.179"/>
</kw>
<status status="PASS" starttime="20210616 02:55:41.068" endtime="20210616 02:55:45.180"/>
</kw>
<msg timestamp="20210616 02:55:45.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:41.068" endtime="20210616 02:55:45.180"/>
</kw>
<msg timestamp="20210616 02:55:45.180" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:55:41.067" endtime="20210616 02:55:45.180"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:55:45.180" endtime="20210616 02:55:45.181"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:45.186" level="INFO">Running command 'ozone sh bucket info o3:///48892-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:49.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:49.202" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210616 02:55:45.184" endtime="20210616 02:55:49.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:49.203" level="INFO">100</msg>
<status status="PASS" starttime="20210616 02:55:49.202" endtime="20210616 02:55:49.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:49.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:49.203" endtime="20210616 02:55:49.204"/>
</kw>
<status status="PASS" starttime="20210616 02:55:45.183" endtime="20210616 02:55:49.204"/>
</kw>
<msg timestamp="20210616 02:55:49.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:45.182" endtime="20210616 02:55:49.205"/>
</kw>
<msg timestamp="20210616 02:55:49.205" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210616 02:55:45.181" endtime="20210616 02:55:49.205"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:55:49.205" endtime="20210616 02:55:49.206"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:49.210" level="INFO">Running command 'ozone sh bucket setquota o3:///48892-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:53.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:53.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:55:49.208" endtime="20210616 02:55:53.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:53.295" level="INFO"/>
<status status="PASS" starttime="20210616 02:55:53.294" endtime="20210616 02:55:53.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:53.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:53.295" endtime="20210616 02:55:53.296"/>
</kw>
<status status="PASS" starttime="20210616 02:55:49.207" endtime="20210616 02:55:53.296"/>
</kw>
<msg timestamp="20210616 02:55:53.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:49.207" endtime="20210616 02:55:53.297"/>
</kw>
<status status="PASS" starttime="20210616 02:55:49.206" endtime="20210616 02:55:53.297"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:53.301" level="INFO">Running command 'ozone sh bucket info o3:///48892-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:55:57.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:55:57.399" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210616 02:55:53.299" endtime="20210616 02:55:57.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:55:57.400" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210616 02:55:57.399" endtime="20210616 02:55:57.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:55:57.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:55:57.401" endtime="20210616 02:55:57.401"/>
</kw>
<status status="PASS" starttime="20210616 02:55:53.298" endtime="20210616 02:55:57.402"/>
</kw>
<msg timestamp="20210616 02:55:57.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:53.298" endtime="20210616 02:55:57.402"/>
</kw>
<msg timestamp="20210616 02:55:57.402" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210616 02:55:53.297" endtime="20210616 02:55:57.402"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:55:57.402" endtime="20210616 02:55:57.403"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:55:57.408" level="INFO">Running command 'ozone sh bucket info o3:///48892-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:01.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:01.581" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210616 02:55:57.406" endtime="20210616 02:56:01.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:01.583" level="INFO">1000</msg>
<status status="PASS" starttime="20210616 02:56:01.582" endtime="20210616 02:56:01.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:01.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:01.583" endtime="20210616 02:56:01.584"/>
</kw>
<status status="PASS" starttime="20210616 02:55:57.404" endtime="20210616 02:56:01.584"/>
</kw>
<msg timestamp="20210616 02:56:01.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:55:57.404" endtime="20210616 02:56:01.584"/>
</kw>
<msg timestamp="20210616 02:56:01.584" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210616 02:55:57.403" endtime="20210616 02:56:01.584"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:56:01.585" endtime="20210616 02:56:01.585"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:01.590" level="INFO">Running command 'ozone sh bucket list o3:///48892-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:05.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:05.672" level="INFO">${output} = 48892-rpcwport</msg>
<status status="PASS" starttime="20210616 02:56:01.588" endtime="20210616 02:56:05.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:05.673" level="INFO">48892-rpcwport</msg>
<status status="PASS" starttime="20210616 02:56:05.672" endtime="20210616 02:56:05.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:05.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:05.674" endtime="20210616 02:56:05.674"/>
</kw>
<status status="PASS" starttime="20210616 02:56:01.587" endtime="20210616 02:56:05.675"/>
</kw>
<msg timestamp="20210616 02:56:05.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:01.586" endtime="20210616 02:56:05.675"/>
</kw>
<msg timestamp="20210616 02:56:05.675" level="INFO">${result} = 48892-rpcwport</msg>
<status status="PASS" starttime="20210616 02:56:01.585" endtime="20210616 02:56:05.675"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:56:05.676" endtime="20210616 02:56:05.676"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:05.681" level="INFO">Running command 'ozone sh key put o3:///48892-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:12.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:12.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:05.679" endtime="20210616 02:56:12.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:12.235" level="INFO"/>
<status status="PASS" starttime="20210616 02:56:12.234" endtime="20210616 02:56:12.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:12.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:12.236" endtime="20210616 02:56:12.237"/>
</kw>
<status status="PASS" starttime="20210616 02:56:05.679" endtime="20210616 02:56:12.237"/>
</kw>
<msg timestamp="20210616 02:56:12.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:05.678" endtime="20210616 02:56:12.237"/>
</kw>
<status status="PASS" starttime="20210616 02:56:05.678" endtime="20210616 02:56:12.238"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:12.241" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:12.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:12.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:12.239" endtime="20210616 02:56:12.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:12.246" level="INFO"/>
<status status="PASS" starttime="20210616 02:56:12.245" endtime="20210616 02:56:12.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:12.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:12.246" endtime="20210616 02:56:12.247"/>
</kw>
<status status="PASS" starttime="20210616 02:56:12.239" endtime="20210616 02:56:12.247"/>
</kw>
<msg timestamp="20210616 02:56:12.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:12.238" endtime="20210616 02:56:12.247"/>
</kw>
<status status="PASS" starttime="20210616 02:56:12.238" endtime="20210616 02:56:12.248"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:12.251" level="INFO">Running command 'ozone sh key get o3:///48892-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:18.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:18.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:12.250" endtime="20210616 02:56:18.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:18.246" level="INFO"/>
<status status="PASS" starttime="20210616 02:56:18.245" endtime="20210616 02:56:18.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:18.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:18.246" endtime="20210616 02:56:18.247"/>
</kw>
<status status="PASS" starttime="20210616 02:56:12.249" endtime="20210616 02:56:18.247"/>
</kw>
<msg timestamp="20210616 02:56:18.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:12.249" endtime="20210616 02:56:18.247"/>
</kw>
<status status="PASS" starttime="20210616 02:56:12.248" endtime="20210616 02:56:18.248"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:18.252" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:18.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:18.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:18.249" endtime="20210616 02:56:18.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:18.257" level="INFO"/>
<status status="PASS" starttime="20210616 02:56:18.255" endtime="20210616 02:56:18.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:18.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:18.257" endtime="20210616 02:56:18.258"/>
</kw>
<status status="PASS" starttime="20210616 02:56:18.249" endtime="20210616 02:56:18.259"/>
</kw>
<msg timestamp="20210616 02:56:18.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:18.248" endtime="20210616 02:56:18.259"/>
</kw>
<status status="PASS" starttime="20210616 02:56:18.248" endtime="20210616 02:56:18.259"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:18.265" level="INFO">Running command 'ozone sh key put -t RATIS o3:///48892-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:24.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:24.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:18.262" endtime="20210616 02:56:24.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:24.940" level="INFO"/>
<status status="PASS" starttime="20210616 02:56:24.939" endtime="20210616 02:56:24.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:24.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:24.940" endtime="20210616 02:56:24.941"/>
</kw>
<status status="PASS" starttime="20210616 02:56:18.261" endtime="20210616 02:56:24.941"/>
</kw>
<msg timestamp="20210616 02:56:24.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:18.261" endtime="20210616 02:56:24.941"/>
</kw>
<status status="PASS" starttime="20210616 02:56:18.260" endtime="20210616 02:56:24.942"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:24.946" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:24.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:24.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:24.943" endtime="20210616 02:56:24.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:24.950" level="INFO"/>
<status status="PASS" starttime="20210616 02:56:24.949" endtime="20210616 02:56:24.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:24.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:24.950" endtime="20210616 02:56:24.950"/>
</kw>
<status status="PASS" starttime="20210616 02:56:24.943" endtime="20210616 02:56:24.951"/>
</kw>
<msg timestamp="20210616 02:56:24.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:24.942" endtime="20210616 02:56:24.951"/>
</kw>
<status status="PASS" starttime="20210616 02:56:24.942" endtime="20210616 02:56:24.951"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:24.955" level="INFO">Running command 'ozone sh key get o3:///48892-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:31.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:31.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:24.953" endtime="20210616 02:56:31.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:31.046" level="INFO"/>
<status status="PASS" starttime="20210616 02:56:31.045" endtime="20210616 02:56:31.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:31.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:31.046" endtime="20210616 02:56:31.047"/>
</kw>
<status status="PASS" starttime="20210616 02:56:24.953" endtime="20210616 02:56:31.047"/>
</kw>
<msg timestamp="20210616 02:56:31.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:24.952" endtime="20210616 02:56:31.048"/>
</kw>
<status status="PASS" starttime="20210616 02:56:24.951" endtime="20210616 02:56:31.048"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:31.052" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:31.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:31.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:31.050" endtime="20210616 02:56:31.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:31.056" level="INFO"/>
<status status="PASS" starttime="20210616 02:56:31.055" endtime="20210616 02:56:31.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:31.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:31.056" endtime="20210616 02:56:31.057"/>
</kw>
<status status="PASS" starttime="20210616 02:56:31.049" endtime="20210616 02:56:31.057"/>
</kw>
<msg timestamp="20210616 02:56:31.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:31.049" endtime="20210616 02:56:31.058"/>
</kw>
<status status="PASS" starttime="20210616 02:56:31.048" endtime="20210616 02:56:31.058"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:31.062" level="INFO">Running command 'ozone sh key info o3:///48892-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:35.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:35.386" level="INFO">${output} = {
  "volumeName": "48892-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:56:22.127Z",
  "modificationTime": "2021-06-16T02:56:24.290Z",
...</msg>
<status status="PASS" starttime="20210616 02:56:31.061" endtime="20210616 02:56:35.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:35.388" level="INFO">{
  "volumeName": "48892-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:56:22.127Z",
  "modificationTime": "2021-06-16T02:56:24.290Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200140,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210616 02:56:35.387" endtime="20210616 02:56:35.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:35.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:35.388" endtime="20210616 02:56:35.389"/>
</kw>
<status status="PASS" starttime="20210616 02:56:31.060" endtime="20210616 02:56:35.389"/>
</kw>
<msg timestamp="20210616 02:56:35.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:31.059" endtime="20210616 02:56:35.390"/>
</kw>
<msg timestamp="20210616 02:56:35.390" level="INFO">${result} = {
  "volumeName": "48892-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:56:22.127Z",
  "modificationTime": "2021-06-16T02:56:24.290Z",
...</msg>
<status status="PASS" starttime="20210616 02:56:31.058" endtime="20210616 02:56:35.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:56:35.390" endtime="20210616 02:56:35.391"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:35.395" level="INFO">Running command 'ozone sh key delete o3:///48892-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:38.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:38.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:35.393" endtime="20210616 02:56:38.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:39.001" level="INFO"/>
<status status="PASS" starttime="20210616 02:56:39.000" endtime="20210616 02:56:39.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:39.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:39.001" endtime="20210616 02:56:39.002"/>
</kw>
<status status="PASS" starttime="20210616 02:56:35.392" endtime="20210616 02:56:39.002"/>
</kw>
<msg timestamp="20210616 02:56:39.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:35.392" endtime="20210616 02:56:39.002"/>
</kw>
<status status="PASS" starttime="20210616 02:56:35.391" endtime="20210616 02:56:39.002"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:39.007" level="INFO">Running command 'ozone sh key cp o3:///48892-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:45.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:45.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:39.004" endtime="20210616 02:56:45.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:45.365" level="INFO"/>
<status status="PASS" starttime="20210616 02:56:45.364" endtime="20210616 02:56:45.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:45.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:45.365" endtime="20210616 02:56:45.366"/>
</kw>
<status status="PASS" starttime="20210616 02:56:39.004" endtime="20210616 02:56:45.366"/>
</kw>
<msg timestamp="20210616 02:56:45.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:39.003" endtime="20210616 02:56:45.367"/>
</kw>
<status status="PASS" starttime="20210616 02:56:39.003" endtime="20210616 02:56:45.367"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:45.371" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:45.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:45.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:45.369" endtime="20210616 02:56:45.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:45.375" level="INFO"/>
<status status="PASS" starttime="20210616 02:56:45.375" endtime="20210616 02:56:45.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:45.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:45.376" endtime="20210616 02:56:45.376"/>
</kw>
<status status="PASS" starttime="20210616 02:56:45.368" endtime="20210616 02:56:45.377"/>
</kw>
<msg timestamp="20210616 02:56:45.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:45.368" endtime="20210616 02:56:45.377"/>
</kw>
<status status="PASS" starttime="20210616 02:56:45.367" endtime="20210616 02:56:45.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:45.381" level="INFO">Running command 'ozone sh key get o3:///48892-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:51.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:51.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:45.379" endtime="20210616 02:56:51.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:51.162" level="INFO"/>
<status status="PASS" starttime="20210616 02:56:51.162" endtime="20210616 02:56:51.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:51.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:51.163" endtime="20210616 02:56:51.164"/>
</kw>
<status status="PASS" starttime="20210616 02:56:45.379" endtime="20210616 02:56:51.164"/>
</kw>
<msg timestamp="20210616 02:56:51.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:45.378" endtime="20210616 02:56:51.164"/>
</kw>
<status status="PASS" starttime="20210616 02:56:45.377" endtime="20210616 02:56:51.165"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:51.170" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:51.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:51.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:51.166" endtime="20210616 02:56:51.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:51.174" level="INFO"/>
<status status="PASS" starttime="20210616 02:56:51.174" endtime="20210616 02:56:51.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:51.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:51.175" endtime="20210616 02:56:51.175"/>
</kw>
<status status="PASS" starttime="20210616 02:56:51.166" endtime="20210616 02:56:51.176"/>
</kw>
<msg timestamp="20210616 02:56:51.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:51.165" endtime="20210616 02:56:51.176"/>
</kw>
<status status="PASS" starttime="20210616 02:56:51.165" endtime="20210616 02:56:51.176"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:51.180" level="INFO">Running command 'ozone sh key delete o3:///48892-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:55.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:56:55.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:51.179" endtime="20210616 02:56:55.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:55.277" level="INFO"/>
<status status="PASS" starttime="20210616 02:56:55.276" endtime="20210616 02:56:55.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:56:55.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:56:55.277" endtime="20210616 02:56:55.278"/>
</kw>
<status status="PASS" starttime="20210616 02:56:51.178" endtime="20210616 02:56:55.278"/>
</kw>
<msg timestamp="20210616 02:56:55.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:51.177" endtime="20210616 02:56:55.278"/>
</kw>
<status status="PASS" starttime="20210616 02:56:51.176" endtime="20210616 02:56:55.279"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:55.282" level="INFO">Running command 'ozone sh key get o3:///48892-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:56:59.021" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:56:59.021" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210616 02:56:55.280" endtime="20210616 02:56:59.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:56:59.023" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210616 02:56:59.022" endtime="20210616 02:56:59.023"/>
</kw>
<msg timestamp="20210616 02:56:59.023" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210616 02:56:55.279" endtime="20210616 02:56:59.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:56:59.024" endtime="20210616 02:56:59.024"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:56:59.030" level="INFO">Running command 'ozone sh key get --force o3:///48892-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:57:05.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:57:05.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:56:59.028" endtime="20210616 02:57:05.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:57:05.293" level="INFO"/>
<status status="PASS" starttime="20210616 02:57:05.293" endtime="20210616 02:57:05.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:57:05.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:57:05.294" endtime="20210616 02:57:05.294"/>
</kw>
<status status="PASS" starttime="20210616 02:56:59.027" endtime="20210616 02:57:05.295"/>
</kw>
<msg timestamp="20210616 02:57:05.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:56:59.026" endtime="20210616 02:57:05.295"/>
</kw>
<msg timestamp="20210616 02:57:05.295" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 02:56:59.024" endtime="20210616 02:57:05.295"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:57:05.296" endtime="20210616 02:57:05.296"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:57:05.301" level="INFO">Running command 'ozone sh key info o3:///48892-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:57:09.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:57:09.661" level="INFO">${output} = {
  "volumeName": "48892-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:56:09.538Z",
  "modificationTime": "2021-06-16T02:56:11.597Z",
  "ozo...</msg>
<status status="PASS" starttime="20210616 02:57:05.298" endtime="20210616 02:57:09.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:57:09.662" level="INFO">{
  "volumeName": "48892-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:56:09.538Z",
  "modificationTime": "2021-06-16T02:56:11.597Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200140,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210616 02:57:09.661" endtime="20210616 02:57:09.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:57:09.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:57:09.662" endtime="20210616 02:57:09.663"/>
</kw>
<status status="PASS" starttime="20210616 02:57:05.298" endtime="20210616 02:57:09.663"/>
</kw>
<msg timestamp="20210616 02:57:09.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:57:05.297" endtime="20210616 02:57:09.664"/>
</kw>
<msg timestamp="20210616 02:57:09.664" level="INFO">${result} = {
  "volumeName": "48892-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:56:09.538Z",
  "modificationTime": "2021-06-16T02:56:11.597Z",
  "ozo...</msg>
<status status="PASS" starttime="20210616 02:57:05.296" endtime="20210616 02:57:09.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:57:09.664" endtime="20210616 02:57:09.665"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:57:09.670" level="INFO">Running command 'ozone sh key list o3:///48892-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:57:13.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:57:13.922" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210616 02:57:09.668" endtime="20210616 02:57:13.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:57:13.924" level="INFO">key1</msg>
<status status="PASS" starttime="20210616 02:57:13.923" endtime="20210616 02:57:13.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:57:13.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:57:13.924" endtime="20210616 02:57:13.925"/>
</kw>
<status status="PASS" starttime="20210616 02:57:09.667" endtime="20210616 02:57:13.925"/>
</kw>
<msg timestamp="20210616 02:57:13.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:57:09.666" endtime="20210616 02:57:13.926"/>
</kw>
<msg timestamp="20210616 02:57:13.926" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20210616 02:57:09.665" endtime="20210616 02:57:13.926"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:57:13.926" endtime="20210616 02:57:13.927"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:57:13.931" level="INFO">Running command 'ozone sh key rename o3:///48892-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:57:18.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:57:18.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:57:13.929" endtime="20210616 02:57:18.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:57:18.099" level="INFO"/>
<status status="PASS" starttime="20210616 02:57:18.098" endtime="20210616 02:57:18.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:57:18.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:57:18.100" endtime="20210616 02:57:18.100"/>
</kw>
<status status="PASS" starttime="20210616 02:57:13.928" endtime="20210616 02:57:18.101"/>
</kw>
<msg timestamp="20210616 02:57:18.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:57:13.928" endtime="20210616 02:57:18.101"/>
</kw>
<status status="PASS" starttime="20210616 02:57:13.927" endtime="20210616 02:57:18.101"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:57:18.107" level="INFO">Running command 'ozone sh key list o3:///48892-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:57:22.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:57:22.313" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20210616 02:57:18.103" endtime="20210616 02:57:22.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:57:22.315" level="INFO">key2</msg>
<status status="PASS" starttime="20210616 02:57:22.314" endtime="20210616 02:57:22.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:57:22.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:57:22.315" endtime="20210616 02:57:22.316"/>
</kw>
<status status="PASS" starttime="20210616 02:57:18.103" endtime="20210616 02:57:22.317"/>
</kw>
<msg timestamp="20210616 02:57:22.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:57:18.102" endtime="20210616 02:57:22.317"/>
</kw>
<msg timestamp="20210616 02:57:22.318" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20210616 02:57:18.101" endtime="20210616 02:57:22.318"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:57:22.318" endtime="20210616 02:57:22.319"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:57:22.323" level="INFO">Running command 'ozone sh key delete o3:///48892-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:57:26.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:57:26.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:57:22.321" endtime="20210616 02:57:26.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:57:26.242" level="INFO"/>
<status status="PASS" starttime="20210616 02:57:26.240" endtime="20210616 02:57:26.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:57:26.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:57:26.242" endtime="20210616 02:57:26.243"/>
</kw>
<status status="PASS" starttime="20210616 02:57:22.320" endtime="20210616 02:57:26.243"/>
</kw>
<msg timestamp="20210616 02:57:26.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:57:22.320" endtime="20210616 02:57:26.243"/>
</kw>
<status status="PASS" starttime="20210616 02:57:22.319" endtime="20210616 02:57:26.244"/>
</kw>
<status status="PASS" starttime="20210616 02:56:05.677" endtime="20210616 02:57:26.244"/>
</kw>
<status status="PASS" starttime="20210616 02:56:05.677" endtime="20210616 02:57:26.244"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:57:26.248" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///48892-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:57:29.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:57:29.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:57:26.246" endtime="20210616 02:57:29.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:57:29.891" level="INFO"/>
<status status="PASS" starttime="20210616 02:57:29.890" endtime="20210616 02:57:29.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:57:29.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:57:29.892" endtime="20210616 02:57:29.892"/>
</kw>
<status status="PASS" starttime="20210616 02:57:26.245" endtime="20210616 02:57:29.893"/>
</kw>
<msg timestamp="20210616 02:57:29.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:57:26.245" endtime="20210616 02:57:29.893"/>
</kw>
<status status="PASS" starttime="20210616 02:57:26.244" endtime="20210616 02:57:29.893"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:57:29.898" level="INFO">Running command 'ozone sh volume info o3:///48892-rpcwport | jq -r '. | select(.name=="48892-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:57:33.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:57:33.989" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:57:29.895" endtime="20210616 02:57:33.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:57:33.991" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:57:33.990" endtime="20210616 02:57:33.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:57:33.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:57:33.991" endtime="20210616 02:57:33.991"/>
</kw>
<status status="PASS" starttime="20210616 02:57:29.895" endtime="20210616 02:57:33.992"/>
</kw>
<msg timestamp="20210616 02:57:33.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:57:29.894" endtime="20210616 02:57:33.992"/>
</kw>
<msg timestamp="20210616 02:57:33.992" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:57:29.893" endtime="20210616 02:57:33.992"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:57:33.993" endtime="20210616 02:57:33.993"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:57:33.998" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///48892-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:57:37.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:57:37.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:57:33.996" endtime="20210616 02:57:37.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:57:37.899" level="INFO"/>
<status status="PASS" starttime="20210616 02:57:37.898" endtime="20210616 02:57:37.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:57:37.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:57:37.899" endtime="20210616 02:57:37.900"/>
</kw>
<status status="PASS" starttime="20210616 02:57:33.994" endtime="20210616 02:57:37.900"/>
</kw>
<msg timestamp="20210616 02:57:37.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:57:33.994" endtime="20210616 02:57:37.901"/>
</kw>
<status status="PASS" starttime="20210616 02:57:33.993" endtime="20210616 02:57:37.901"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:57:37.905" level="INFO">Running command 'ozone sh volume info o3:///48892-rpcwport | jq -r '. | select(.name=="48892-rpcwport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:57:42.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:57:42.209" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:57:37.903" endtime="20210616 02:57:42.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:57:42.210" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:57:42.210" endtime="20210616 02:57:42.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:57:42.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:57:42.211" endtime="20210616 02:57:42.211"/>
</kw>
<status status="PASS" starttime="20210616 02:57:37.903" endtime="20210616 02:57:42.212"/>
</kw>
<msg timestamp="20210616 02:57:42.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:57:37.902" endtime="20210616 02:57:42.212"/>
</kw>
<msg timestamp="20210616 02:57:42.212" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:57:37.901" endtime="20210616 02:57:42.212"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:57:42.212" endtime="20210616 02:57:42.213"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:57:42.219" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///48892-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:57:46.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:57:46.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:57:42.217" endtime="20210616 02:57:46.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:57:46.087" level="INFO"/>
<status status="PASS" starttime="20210616 02:57:46.086" endtime="20210616 02:57:46.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:57:46.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:57:46.088" endtime="20210616 02:57:46.088"/>
</kw>
<status status="PASS" starttime="20210616 02:57:42.216" endtime="20210616 02:57:46.089"/>
</kw>
<msg timestamp="20210616 02:57:46.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:57:42.214" endtime="20210616 02:57:46.089"/>
</kw>
<status status="PASS" starttime="20210616 02:57:42.213" endtime="20210616 02:57:46.089"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:57:46.094" level="INFO">Running command 'ozone sh bucket info o3:///48892-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:57:50.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:57:50.455" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:57:46.092" endtime="20210616 02:57:50.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:57:50.456" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:57:50.455" endtime="20210616 02:57:50.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:57:50.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:57:50.457" endtime="20210616 02:57:50.457"/>
</kw>
<status status="PASS" starttime="20210616 02:57:46.091" endtime="20210616 02:57:50.458"/>
</kw>
<msg timestamp="20210616 02:57:50.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:57:46.091" endtime="20210616 02:57:50.458"/>
</kw>
<msg timestamp="20210616 02:57:50.458" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:57:46.089" endtime="20210616 02:57:50.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:57:50.459" endtime="20210616 02:57:50.459"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:57:50.463" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///48892-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:57:54.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:57:54.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:57:50.461" endtime="20210616 02:57:54.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:57:54.390" level="INFO"/>
<status status="PASS" starttime="20210616 02:57:54.389" endtime="20210616 02:57:54.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:57:54.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:57:54.390" endtime="20210616 02:57:54.391"/>
</kw>
<status status="PASS" starttime="20210616 02:57:50.460" endtime="20210616 02:57:54.391"/>
</kw>
<msg timestamp="20210616 02:57:54.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:57:50.460" endtime="20210616 02:57:54.392"/>
</kw>
<status status="PASS" starttime="20210616 02:57:50.459" endtime="20210616 02:57:54.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:57:54.396" level="INFO">Running command 'ozone sh bucket info o3:///48892-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:57:58.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:57:58.614" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:57:54.394" endtime="20210616 02:57:58.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:57:58.616" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:57:58.615" endtime="20210616 02:57:58.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:57:58.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:57:58.616" endtime="20210616 02:57:58.617"/>
</kw>
<status status="PASS" starttime="20210616 02:57:54.393" endtime="20210616 02:57:58.617"/>
</kw>
<msg timestamp="20210616 02:57:58.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:57:54.393" endtime="20210616 02:57:58.617"/>
</kw>
<msg timestamp="20210616 02:57:58.618" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:57:54.392" endtime="20210616 02:57:58.619"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:57:58.619" endtime="20210616 02:57:58.619"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:57:58.624" level="INFO">Running command 'ozone sh bucket delete o3:///48892-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:02.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:02.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:57:58.621" endtime="20210616 02:58:02.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:02.326" level="INFO"/>
<status status="PASS" starttime="20210616 02:58:02.320" endtime="20210616 02:58:02.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:02.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:02.327" endtime="20210616 02:58:02.327"/>
</kw>
<status status="PASS" starttime="20210616 02:57:58.621" endtime="20210616 02:58:02.328"/>
</kw>
<msg timestamp="20210616 02:58:02.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:57:58.620" endtime="20210616 02:58:02.328"/>
</kw>
<status status="PASS" starttime="20210616 02:57:58.619" endtime="20210616 02:58:02.328"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:02.332" level="INFO">Running command 'ozone sh volume delete o3:///48892-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:05.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:05.900" level="INFO">${output} = Volume 48892-rpcwport is deleted</msg>
<status status="PASS" starttime="20210616 02:58:02.330" endtime="20210616 02:58:05.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:05.901" level="INFO">Volume 48892-rpcwport is deleted</msg>
<status status="PASS" starttime="20210616 02:58:05.901" endtime="20210616 02:58:05.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:05.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:05.902" endtime="20210616 02:58:05.903"/>
</kw>
<status status="PASS" starttime="20210616 02:58:02.329" endtime="20210616 02:58:05.903"/>
</kw>
<msg timestamp="20210616 02:58:05.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:02.329" endtime="20210616 02:58:05.903"/>
</kw>
<status status="PASS" starttime="20210616 02:58:02.328" endtime="20210616 02:58:05.903"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:05.908" level="INFO">Running command 'ozone sh volume create o3:///48892-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:09.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:09.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:58:05.905" endtime="20210616 02:58:09.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:09.947" level="INFO"/>
<status status="PASS" starttime="20210616 02:58:09.946" endtime="20210616 02:58:09.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:09.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:09.947" endtime="20210616 02:58:09.948"/>
</kw>
<status status="PASS" starttime="20210616 02:58:05.905" endtime="20210616 02:58:09.948"/>
</kw>
<msg timestamp="20210616 02:58:09.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:05.904" endtime="20210616 02:58:09.948"/>
</kw>
<status status="PASS" starttime="20210616 02:58:05.904" endtime="20210616 02:58:09.949"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:09.953" level="INFO">Running command 'ozone sh volume info o3:///48892-rpcwport | jq -r '. | select(.name=="48892-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:13.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:13.899" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:58:09.951" endtime="20210616 02:58:13.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:13.901" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:58:13.900" endtime="20210616 02:58:13.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:13.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:13.901" endtime="20210616 02:58:13.902"/>
</kw>
<status status="PASS" starttime="20210616 02:58:09.950" endtime="20210616 02:58:13.902"/>
</kw>
<msg timestamp="20210616 02:58:13.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:09.950" endtime="20210616 02:58:13.902"/>
</kw>
<msg timestamp="20210616 02:58:13.903" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:58:09.949" endtime="20210616 02:58:13.903"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:58:13.903" endtime="20210616 02:58:13.903"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:13.908" level="INFO">Running command 'ozone sh volume info o3:///48892-rpcwport | jq -r '. | select(.name=="48892-rpcwport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:18.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:18.236" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:58:13.906" endtime="20210616 02:58:18.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:18.237" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:58:18.236" endtime="20210616 02:58:18.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:18.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:18.237" endtime="20210616 02:58:18.238"/>
</kw>
<status status="PASS" starttime="20210616 02:58:13.905" endtime="20210616 02:58:18.238"/>
</kw>
<msg timestamp="20210616 02:58:18.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:13.905" endtime="20210616 02:58:18.239"/>
</kw>
<msg timestamp="20210616 02:58:18.239" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:58:13.903" endtime="20210616 02:58:18.239"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:58:18.239" endtime="20210616 02:58:18.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:18.245" level="INFO">Running command 'ozone sh bucket create o3:///48892-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:22.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:22.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:58:18.242" endtime="20210616 02:58:22.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:22.356" level="INFO"/>
<status status="PASS" starttime="20210616 02:58:22.355" endtime="20210616 02:58:22.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:22.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:22.356" endtime="20210616 02:58:22.357"/>
</kw>
<status status="PASS" starttime="20210616 02:58:18.242" endtime="20210616 02:58:22.357"/>
</kw>
<msg timestamp="20210616 02:58:22.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:18.241" endtime="20210616 02:58:22.358"/>
</kw>
<status status="PASS" starttime="20210616 02:58:18.240" endtime="20210616 02:58:22.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:22.362" level="INFO">Running command 'ozone sh bucket info o3:///48892-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:26.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:26.498" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:58:22.360" endtime="20210616 02:58:26.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:26.500" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:58:26.499" endtime="20210616 02:58:26.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:26.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:26.500" endtime="20210616 02:58:26.501"/>
</kw>
<status status="PASS" starttime="20210616 02:58:22.360" endtime="20210616 02:58:26.501"/>
</kw>
<msg timestamp="20210616 02:58:26.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:22.359" endtime="20210616 02:58:26.501"/>
</kw>
<msg timestamp="20210616 02:58:26.502" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:58:22.358" endtime="20210616 02:58:26.502"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:58:26.502" endtime="20210616 02:58:26.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:26.507" level="INFO">Running command 'ozone sh bucket info o3:///48892-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:30.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:30.824" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 02:58:26.505" endtime="20210616 02:58:30.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:30.826" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 02:58:30.825" endtime="20210616 02:58:30.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:30.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:30.826" endtime="20210616 02:58:30.827"/>
</kw>
<status status="PASS" starttime="20210616 02:58:26.504" endtime="20210616 02:58:30.827"/>
</kw>
<msg timestamp="20210616 02:58:30.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:26.503" endtime="20210616 02:58:30.827"/>
</kw>
<msg timestamp="20210616 02:58:30.828" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 02:58:26.502" endtime="20210616 02:58:30.828"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:58:30.828" endtime="20210616 02:58:30.828"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:30.833" level="INFO">Running command 'ozone sh bucket delete o3:///48892-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:34.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:34.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:58:30.830" endtime="20210616 02:58:34.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:34.720" level="INFO"/>
<status status="PASS" starttime="20210616 02:58:34.719" endtime="20210616 02:58:34.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:34.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:34.720" endtime="20210616 02:58:34.721"/>
</kw>
<status status="PASS" starttime="20210616 02:58:30.830" endtime="20210616 02:58:34.722"/>
</kw>
<msg timestamp="20210616 02:58:34.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:30.830" endtime="20210616 02:58:34.722"/>
</kw>
<status status="PASS" starttime="20210616 02:58:30.829" endtime="20210616 02:58:34.722"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:34.728" level="INFO">Running command 'ozone sh volume delete o3:///48892-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:38.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:38.289" level="INFO">${output} = Volume 48892-rpcwport is deleted</msg>
<status status="PASS" starttime="20210616 02:58:34.724" endtime="20210616 02:58:38.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:38.290" level="INFO">Volume 48892-rpcwport is deleted</msg>
<status status="PASS" starttime="20210616 02:58:38.290" endtime="20210616 02:58:38.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:38.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:38.291" endtime="20210616 02:58:38.291"/>
</kw>
<status status="PASS" starttime="20210616 02:58:34.723" endtime="20210616 02:58:38.292"/>
</kw>
<msg timestamp="20210616 02:58:38.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:34.723" endtime="20210616 02:58:38.292"/>
</kw>
<status status="PASS" starttime="20210616 02:58:34.722" endtime="20210616 02:58:38.292"/>
</kw>
<status status="PASS" starttime="20210616 02:55:08.844" endtime="20210616 02:58:38.292"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 02:55:08.814" endtime="20210616 02:58:38.293"/>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:38.299" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:38.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:38.303" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:58:38.297" endtime="20210616 02:58:38.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:38.304" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:58:38.304" endtime="20210616 02:58:38.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:38.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:38.305" endtime="20210616 02:58:38.305"/>
</kw>
<status status="PASS" starttime="20210616 02:58:38.296" endtime="20210616 02:58:38.306"/>
</kw>
<msg timestamp="20210616 02:58:38.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:38.296" endtime="20210616 02:58:38.306"/>
</kw>
<msg timestamp="20210616 02:58:38.306" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:58:38.296" endtime="20210616 02:58:38.306"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:58:38.307" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:58:38.307" endtime="20210616 02:58:38.307"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:38.312" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:38.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:38.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:58:38.310" endtime="20210616 02:58:38.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:38.354" level="INFO"/>
<status status="PASS" starttime="20210616 02:58:38.353" endtime="20210616 02:58:38.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:38.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:38.354" endtime="20210616 02:58:38.355"/>
</kw>
<status status="PASS" starttime="20210616 02:58:38.309" endtime="20210616 02:58:38.355"/>
</kw>
<msg timestamp="20210616 02:58:38.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:38.309" endtime="20210616 02:58:38.355"/>
</kw>
<status status="PASS" starttime="20210616 02:58:38.308" endtime="20210616 02:58:38.355"/>
</kw>
<status status="PASS" starttime="20210616 02:58:38.308" endtime="20210616 02:58:38.356"/>
</kw>
<status status="PASS" starttime="20210616 02:58:38.295" endtime="20210616 02:58:38.356"/>
</kw>
<status status="PASS" starttime="20210616 02:58:38.294" endtime="20210616 02:58:38.356"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:38.361" level="INFO">Running command 'ozone sh volume info /48892-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:42.172" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 02:58:42.172" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48892-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210616 02:58:38.359" endtime="20210616 02:58:42.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:42.173" level="INFO">VOLUME_NOT_FOUND Volume 48892-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210616 02:58:42.173" endtime="20210616 02:58:42.173"/>
</kw>
<msg timestamp="20210616 02:58:42.174" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48892-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210616 02:58:38.358" endtime="20210616 02:58:42.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:58:42.174" endtime="20210616 02:58:42.175"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:42.179" level="INFO">Running command 'ozone sh volume create /48892-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:46.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:46.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:58:42.176" endtime="20210616 02:58:46.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:46.160" level="INFO"/>
<status status="PASS" starttime="20210616 02:58:46.159" endtime="20210616 02:58:46.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:46.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:46.161" endtime="20210616 02:58:46.161"/>
</kw>
<status status="PASS" starttime="20210616 02:58:42.176" endtime="20210616 02:58:46.162"/>
</kw>
<msg timestamp="20210616 02:58:46.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:42.176" endtime="20210616 02:58:46.162"/>
</kw>
<msg timestamp="20210616 02:58:46.162" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 02:58:42.175" endtime="20210616 02:58:46.162"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:58:46.162" endtime="20210616 02:58:46.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:46.167" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="48892-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:49.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:49.934" level="INFO">${output} = {
  "metadata": {},
  "name": "48892-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210616 02:58:46.165" endtime="20210616 02:58:49.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:49.935" level="INFO">{
  "metadata": {},
  "name": "48892-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-16T02:58:45.919Z",
  "modificationTime": "2021-06-16T02:58:45.919Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210616 02:58:49.934" endtime="20210616 02:58:49.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:49.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:49.935" endtime="20210616 02:58:49.936"/>
</kw>
<status status="PASS" starttime="20210616 02:58:46.164" endtime="20210616 02:58:49.936"/>
</kw>
<msg timestamp="20210616 02:58:49.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:46.164" endtime="20210616 02:58:49.937"/>
</kw>
<msg timestamp="20210616 02:58:49.937" level="INFO">${result} = {
  "metadata": {},
  "name": "48892-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210616 02:58:46.163" endtime="20210616 02:58:49.937"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:58:49.937" endtime="20210616 02:58:49.938"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:49.942" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48892-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:53.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:53.945" level="INFO">${output} = {
  "metadata": {},
  "name": "48892-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210616 02:58:49.940" endtime="20210616 02:58:53.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:53.946" level="INFO">{
  "metadata": {},
  "name": "48892-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-16T02:58:45.919Z",
  "modificationTime": "2021-06-16T02:58:45.919Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210616 02:58:53.946" endtime="20210616 02:58:53.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:53.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:53.947" endtime="20210616 02:58:53.947"/>
</kw>
<status status="PASS" starttime="20210616 02:58:49.939" endtime="20210616 02:58:53.948"/>
</kw>
<msg timestamp="20210616 02:58:53.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:49.939" endtime="20210616 02:58:53.948"/>
</kw>
<msg timestamp="20210616 02:58:53.948" level="INFO">${result} = {
  "metadata": {},
  "name": "48892-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210616 02:58:49.938" endtime="20210616 02:58:53.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 02:58:53.949" endtime="20210616 02:58:53.949"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:53.953" level="INFO">Running command 'ozone sh volume setquota /48892-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:58:57.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:58:57.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:58:53.951" endtime="20210616 02:58:57.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:58:57.629" level="INFO"/>
<status status="PASS" starttime="20210616 02:58:57.628" endtime="20210616 02:58:57.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:58:57.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:58:57.629" endtime="20210616 02:58:57.630"/>
</kw>
<status status="PASS" starttime="20210616 02:58:53.951" endtime="20210616 02:58:57.630"/>
</kw>
<msg timestamp="20210616 02:58:57.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:53.950" endtime="20210616 02:58:57.630"/>
</kw>
<status status="PASS" starttime="20210616 02:58:53.949" endtime="20210616 02:58:57.631"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:58:57.635" level="INFO">Running command 'ozone sh volume info /48892-rpcwoscheme | jq -r '. | select(.name=="48892-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:01.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:01.586" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:58:57.633" endtime="20210616 02:59:01.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:01.587" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210616 02:59:01.586" endtime="20210616 02:59:01.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:01.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:01.588" endtime="20210616 02:59:01.589"/>
</kw>
<status status="PASS" starttime="20210616 02:58:57.632" endtime="20210616 02:59:01.589"/>
</kw>
<msg timestamp="20210616 02:59:01.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:58:57.632" endtime="20210616 02:59:01.589"/>
</kw>
<msg timestamp="20210616 02:59:01.590" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:58:57.631" endtime="20210616 02:59:01.590"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:59:01.590" endtime="20210616 02:59:01.590"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:01.594" level="INFO">Running command 'ozone sh bucket create /48892-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:05.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:05.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:59:01.592" endtime="20210616 02:59:05.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:05.487" level="INFO"/>
<status status="PASS" starttime="20210616 02:59:05.486" endtime="20210616 02:59:05.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:05.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:05.487" endtime="20210616 02:59:05.489"/>
</kw>
<status status="PASS" starttime="20210616 02:59:01.592" endtime="20210616 02:59:05.489"/>
</kw>
<msg timestamp="20210616 02:59:05.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:01.591" endtime="20210616 02:59:05.489"/>
</kw>
<status status="PASS" starttime="20210616 02:59:01.591" endtime="20210616 02:59:05.490"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:05.494" level="INFO">Running command 'ozone sh bucket info /48892-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:09.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:09.681" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210616 02:59:05.492" endtime="20210616 02:59:09.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:09.682" level="INFO">DISK</msg>
<status status="PASS" starttime="20210616 02:59:09.681" endtime="20210616 02:59:09.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:09.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:09.682" endtime="20210616 02:59:09.683"/>
</kw>
<status status="PASS" starttime="20210616 02:59:05.491" endtime="20210616 02:59:09.683"/>
</kw>
<msg timestamp="20210616 02:59:09.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:05.491" endtime="20210616 02:59:09.684"/>
</kw>
<msg timestamp="20210616 02:59:09.684" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210616 02:59:05.490" endtime="20210616 02:59:09.684"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:59:09.684" endtime="20210616 02:59:09.685"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:09.689" level="INFO">Running command 'ozone sh bucket info /48892-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:13.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:13.596" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:59:09.687" endtime="20210616 02:59:13.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:13.597" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210616 02:59:13.596" endtime="20210616 02:59:13.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:13.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:13.597" endtime="20210616 02:59:13.598"/>
</kw>
<status status="PASS" starttime="20210616 02:59:09.686" endtime="20210616 02:59:13.598"/>
</kw>
<msg timestamp="20210616 02:59:13.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:09.686" endtime="20210616 02:59:13.599"/>
</kw>
<msg timestamp="20210616 02:59:13.599" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210616 02:59:09.685" endtime="20210616 02:59:13.599"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:59:13.600" endtime="20210616 02:59:13.600"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:13.604" level="INFO">Running command 'ozone sh bucket info /48892-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:17.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:17.873" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210616 02:59:13.602" endtime="20210616 02:59:17.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:17.875" level="INFO">100</msg>
<status status="PASS" starttime="20210616 02:59:17.874" endtime="20210616 02:59:17.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:17.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:17.875" endtime="20210616 02:59:17.876"/>
</kw>
<status status="PASS" starttime="20210616 02:59:13.602" endtime="20210616 02:59:17.877"/>
</kw>
<msg timestamp="20210616 02:59:17.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:13.601" endtime="20210616 02:59:17.877"/>
</kw>
<msg timestamp="20210616 02:59:17.877" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210616 02:59:13.600" endtime="20210616 02:59:17.877"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:59:17.878" endtime="20210616 02:59:17.879"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:17.882" level="INFO">Running command 'ozone sh bucket setquota /48892-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:21.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:21.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:59:17.880" endtime="20210616 02:59:21.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:21.856" level="INFO"/>
<status status="PASS" starttime="20210616 02:59:21.855" endtime="20210616 02:59:21.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:21.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:21.856" endtime="20210616 02:59:21.857"/>
</kw>
<status status="PASS" starttime="20210616 02:59:17.880" endtime="20210616 02:59:21.857"/>
</kw>
<msg timestamp="20210616 02:59:21.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:17.879" endtime="20210616 02:59:21.858"/>
</kw>
<status status="PASS" starttime="20210616 02:59:17.879" endtime="20210616 02:59:21.858"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:21.862" level="INFO">Running command 'ozone sh bucket info /48892-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:26.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:26.027" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210616 02:59:21.860" endtime="20210616 02:59:26.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:26.029" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210616 02:59:26.028" endtime="20210616 02:59:26.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:26.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:26.029" endtime="20210616 02:59:26.030"/>
</kw>
<status status="PASS" starttime="20210616 02:59:21.859" endtime="20210616 02:59:26.030"/>
</kw>
<msg timestamp="20210616 02:59:26.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:21.859" endtime="20210616 02:59:26.030"/>
</kw>
<msg timestamp="20210616 02:59:26.031" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210616 02:59:21.858" endtime="20210616 02:59:26.031"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:59:26.031" endtime="20210616 02:59:26.031"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:26.036" level="INFO">Running command 'ozone sh bucket info /48892-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:30.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:30.097" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210616 02:59:26.034" endtime="20210616 02:59:30.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:30.099" level="INFO">1000</msg>
<status status="PASS" starttime="20210616 02:59:30.098" endtime="20210616 02:59:30.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:30.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:30.099" endtime="20210616 02:59:30.100"/>
</kw>
<status status="PASS" starttime="20210616 02:59:26.033" endtime="20210616 02:59:30.100"/>
</kw>
<msg timestamp="20210616 02:59:30.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:26.033" endtime="20210616 02:59:30.100"/>
</kw>
<msg timestamp="20210616 02:59:30.101" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210616 02:59:26.032" endtime="20210616 02:59:30.101"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:59:30.101" endtime="20210616 02:59:30.102"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:30.106" level="INFO">Running command 'ozone sh bucket list /48892-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:34.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:34.074" level="INFO">${output} = 48892-rpcwoscheme</msg>
<status status="PASS" starttime="20210616 02:59:30.104" endtime="20210616 02:59:34.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:34.076" level="INFO">48892-rpcwoscheme</msg>
<status status="PASS" starttime="20210616 02:59:34.075" endtime="20210616 02:59:34.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:34.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:34.076" endtime="20210616 02:59:34.077"/>
</kw>
<status status="PASS" starttime="20210616 02:59:30.103" endtime="20210616 02:59:34.077"/>
</kw>
<msg timestamp="20210616 02:59:34.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:30.103" endtime="20210616 02:59:34.077"/>
</kw>
<msg timestamp="20210616 02:59:34.078" level="INFO">${result} = 48892-rpcwoscheme</msg>
<status status="PASS" starttime="20210616 02:59:30.102" endtime="20210616 02:59:34.078"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 02:59:34.078" endtime="20210616 02:59:34.078"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:34.084" level="INFO">Running command 'ozone sh key put /48892-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:40.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:40.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:59:34.082" endtime="20210616 02:59:40.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:40.385" level="INFO"/>
<status status="PASS" starttime="20210616 02:59:40.384" endtime="20210616 02:59:40.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:40.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:40.385" endtime="20210616 02:59:40.386"/>
</kw>
<status status="PASS" starttime="20210616 02:59:34.081" endtime="20210616 02:59:40.386"/>
</kw>
<msg timestamp="20210616 02:59:40.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:34.081" endtime="20210616 02:59:40.386"/>
</kw>
<status status="PASS" starttime="20210616 02:59:34.080" endtime="20210616 02:59:40.387"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:40.392" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:40.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:40.395" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:59:40.388" endtime="20210616 02:59:40.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:40.396" level="INFO"/>
<status status="PASS" starttime="20210616 02:59:40.395" endtime="20210616 02:59:40.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:40.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:40.396" endtime="20210616 02:59:40.398"/>
</kw>
<status status="PASS" starttime="20210616 02:59:40.388" endtime="20210616 02:59:40.398"/>
</kw>
<msg timestamp="20210616 02:59:40.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:40.387" endtime="20210616 02:59:40.399"/>
</kw>
<status status="PASS" starttime="20210616 02:59:40.387" endtime="20210616 02:59:40.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:40.403" level="INFO">Running command 'ozone sh key get /48892-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:46.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:46.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:59:40.401" endtime="20210616 02:59:46.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:46.438" level="INFO"/>
<status status="PASS" starttime="20210616 02:59:46.437" endtime="20210616 02:59:46.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:46.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:46.438" endtime="20210616 02:59:46.439"/>
</kw>
<status status="PASS" starttime="20210616 02:59:40.400" endtime="20210616 02:59:46.439"/>
</kw>
<msg timestamp="20210616 02:59:46.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:40.400" endtime="20210616 02:59:46.439"/>
</kw>
<status status="PASS" starttime="20210616 02:59:40.399" endtime="20210616 02:59:46.440"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:46.444" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:46.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:46.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:59:46.441" endtime="20210616 02:59:46.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:46.447" level="INFO"/>
<status status="PASS" starttime="20210616 02:59:46.447" endtime="20210616 02:59:46.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:46.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:46.448" endtime="20210616 02:59:46.448"/>
</kw>
<status status="PASS" starttime="20210616 02:59:46.441" endtime="20210616 02:59:46.449"/>
</kw>
<msg timestamp="20210616 02:59:46.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:46.440" endtime="20210616 02:59:46.449"/>
</kw>
<status status="PASS" starttime="20210616 02:59:46.440" endtime="20210616 02:59:46.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:46.453" level="INFO">Running command 'ozone sh key put -t RATIS /48892-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:52.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:52.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:59:46.452" endtime="20210616 02:59:52.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:52.878" level="INFO"/>
<status status="PASS" starttime="20210616 02:59:52.877" endtime="20210616 02:59:52.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:52.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:52.878" endtime="20210616 02:59:52.879"/>
</kw>
<status status="PASS" starttime="20210616 02:59:46.451" endtime="20210616 02:59:52.879"/>
</kw>
<msg timestamp="20210616 02:59:52.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:46.450" endtime="20210616 02:59:52.879"/>
</kw>
<status status="PASS" starttime="20210616 02:59:46.449" endtime="20210616 02:59:52.880"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:52.883" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:52.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:52.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:59:52.881" endtime="20210616 02:59:52.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:52.888" level="INFO"/>
<status status="PASS" starttime="20210616 02:59:52.887" endtime="20210616 02:59:52.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:52.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:52.888" endtime="20210616 02:59:52.888"/>
</kw>
<status status="PASS" starttime="20210616 02:59:52.881" endtime="20210616 02:59:52.889"/>
</kw>
<msg timestamp="20210616 02:59:52.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:52.880" endtime="20210616 02:59:52.889"/>
</kw>
<status status="PASS" starttime="20210616 02:59:52.880" endtime="20210616 02:59:52.890"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:52.893" level="INFO">Running command 'ozone sh key get /48892-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:59.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:59.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:59:52.891" endtime="20210616 02:59:59.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:59.016" level="INFO"/>
<status status="PASS" starttime="20210616 02:59:59.016" endtime="20210616 02:59:59.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:59.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:59.017" endtime="20210616 02:59:59.017"/>
</kw>
<status status="PASS" starttime="20210616 02:59:52.891" endtime="20210616 02:59:59.018"/>
</kw>
<msg timestamp="20210616 02:59:59.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:52.890" endtime="20210616 02:59:59.018"/>
</kw>
<status status="PASS" starttime="20210616 02:59:52.890" endtime="20210616 02:59:59.018"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:59.023" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:59:59.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:59:59.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:59:59.020" endtime="20210616 02:59:59.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:59:59.027" level="INFO"/>
<status status="PASS" starttime="20210616 02:59:59.026" endtime="20210616 02:59:59.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:59:59.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:59:59.027" endtime="20210616 02:59:59.028"/>
</kw>
<status status="PASS" starttime="20210616 02:59:59.019" endtime="20210616 02:59:59.028"/>
</kw>
<msg timestamp="20210616 02:59:59.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:59.019" endtime="20210616 02:59:59.028"/>
</kw>
<status status="PASS" starttime="20210616 02:59:59.018" endtime="20210616 02:59:59.028"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:59:59.033" level="INFO">Running command 'ozone sh key info /48892-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:03.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:00:03.244" level="INFO">${output} = {
  "volumeName": "48892-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:59:50.112Z",
  "modificationTime": "2021-06-16T02:59:52.312Z...</msg>
<status status="PASS" starttime="20210616 02:59:59.031" endtime="20210616 03:00:03.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:03.245" level="INFO">{
  "volumeName": "48892-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:59:50.112Z",
  "modificationTime": "2021-06-16T02:59:52.312Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200140,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210616 03:00:03.244" endtime="20210616 03:00:03.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:00:03.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:00:03.246" endtime="20210616 03:00:03.247"/>
</kw>
<status status="PASS" starttime="20210616 02:59:59.030" endtime="20210616 03:00:03.247"/>
</kw>
<msg timestamp="20210616 03:00:03.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:59:59.030" endtime="20210616 03:00:03.247"/>
</kw>
<msg timestamp="20210616 03:00:03.248" level="INFO">${result} = {
  "volumeName": "48892-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:59:50.112Z",
  "modificationTime": "2021-06-16T02:59:52.312Z...</msg>
<status status="PASS" starttime="20210616 02:59:59.029" endtime="20210616 03:00:03.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:00:03.248" endtime="20210616 03:00:03.249"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:03.254" level="INFO">Running command 'ozone sh key delete /48892-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:07.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:00:07.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:00:03.251" endtime="20210616 03:00:07.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:07.205" level="INFO"/>
<status status="PASS" starttime="20210616 03:00:07.204" endtime="20210616 03:00:07.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:00:07.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:00:07.205" endtime="20210616 03:00:07.206"/>
</kw>
<status status="PASS" starttime="20210616 03:00:03.250" endtime="20210616 03:00:07.206"/>
</kw>
<msg timestamp="20210616 03:00:07.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:00:03.250" endtime="20210616 03:00:07.207"/>
</kw>
<status status="PASS" starttime="20210616 03:00:03.249" endtime="20210616 03:00:07.207"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:07.211" level="INFO">Running command 'ozone sh key cp /48892-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:13.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:00:13.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:00:07.209" endtime="20210616 03:00:13.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:13.950" level="INFO"/>
<status status="PASS" starttime="20210616 03:00:13.950" endtime="20210616 03:00:13.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:00:13.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:00:13.951" endtime="20210616 03:00:13.951"/>
</kw>
<status status="PASS" starttime="20210616 03:00:07.208" endtime="20210616 03:00:13.952"/>
</kw>
<msg timestamp="20210616 03:00:13.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:00:07.208" endtime="20210616 03:00:13.952"/>
</kw>
<status status="PASS" starttime="20210616 03:00:07.207" endtime="20210616 03:00:13.952"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:13.956" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:13.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:00:13.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:00:13.954" endtime="20210616 03:00:13.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:13.960" level="INFO"/>
<status status="PASS" starttime="20210616 03:00:13.959" endtime="20210616 03:00:13.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:00:13.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:00:13.960" endtime="20210616 03:00:13.961"/>
</kw>
<status status="PASS" starttime="20210616 03:00:13.954" endtime="20210616 03:00:13.961"/>
</kw>
<msg timestamp="20210616 03:00:13.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:00:13.953" endtime="20210616 03:00:13.962"/>
</kw>
<status status="PASS" starttime="20210616 03:00:13.952" endtime="20210616 03:00:13.962"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:13.966" level="INFO">Running command 'ozone sh key get /48892-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:20.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:00:20.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:00:13.964" endtime="20210616 03:00:20.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:20.367" level="INFO"/>
<status status="PASS" starttime="20210616 03:00:20.366" endtime="20210616 03:00:20.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:00:20.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:00:20.368" endtime="20210616 03:00:20.368"/>
</kw>
<status status="PASS" starttime="20210616 03:00:13.963" endtime="20210616 03:00:20.369"/>
</kw>
<msg timestamp="20210616 03:00:20.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:00:13.963" endtime="20210616 03:00:20.369"/>
</kw>
<status status="PASS" starttime="20210616 03:00:13.962" endtime="20210616 03:00:20.369"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:20.373" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:20.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:00:20.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:00:20.371" endtime="20210616 03:00:20.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:20.378" level="INFO"/>
<status status="PASS" starttime="20210616 03:00:20.377" endtime="20210616 03:00:20.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:00:20.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:00:20.378" endtime="20210616 03:00:20.379"/>
</kw>
<status status="PASS" starttime="20210616 03:00:20.370" endtime="20210616 03:00:20.379"/>
</kw>
<msg timestamp="20210616 03:00:20.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:00:20.370" endtime="20210616 03:00:20.380"/>
</kw>
<status status="PASS" starttime="20210616 03:00:20.370" endtime="20210616 03:00:20.380"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:20.383" level="INFO">Running command 'ozone sh key delete /48892-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:24.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:00:24.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:00:20.382" endtime="20210616 03:00:24.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:24.329" level="INFO"/>
<status status="PASS" starttime="20210616 03:00:24.328" endtime="20210616 03:00:24.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:00:24.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:00:24.329" endtime="20210616 03:00:24.330"/>
</kw>
<status status="PASS" starttime="20210616 03:00:20.381" endtime="20210616 03:00:24.330"/>
</kw>
<msg timestamp="20210616 03:00:24.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:00:20.381" endtime="20210616 03:00:24.330"/>
</kw>
<status status="PASS" starttime="20210616 03:00:20.380" endtime="20210616 03:00:24.331"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:24.334" level="INFO">Running command 'ozone sh key get /48892-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:28.287" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:00:28.287" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210616 03:00:24.332" endtime="20210616 03:00:28.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:28.288" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210616 03:00:28.288" endtime="20210616 03:00:28.289"/>
</kw>
<msg timestamp="20210616 03:00:28.289" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210616 03:00:24.331" endtime="20210616 03:00:28.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:00:28.289" endtime="20210616 03:00:28.290"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:28.294" level="INFO">Running command 'ozone sh key get --force /48892-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:34.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:00:34.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:00:28.292" endtime="20210616 03:00:34.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:34.268" level="INFO"/>
<status status="PASS" starttime="20210616 03:00:34.267" endtime="20210616 03:00:34.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:00:34.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:00:34.269" endtime="20210616 03:00:34.270"/>
</kw>
<status status="PASS" starttime="20210616 03:00:28.291" endtime="20210616 03:00:34.270"/>
</kw>
<msg timestamp="20210616 03:00:34.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:00:28.291" endtime="20210616 03:00:34.270"/>
</kw>
<msg timestamp="20210616 03:00:34.271" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 03:00:28.290" endtime="20210616 03:00:34.271"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:00:34.271" endtime="20210616 03:00:34.271"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:34.276" level="INFO">Running command 'ozone sh key info /48892-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:38.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:00:38.763" level="INFO">${output} = {
  "volumeName": "48892-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:59:37.694Z",
  "modificationTime": "2021-06-16T02:59:39.893Z",
  "...</msg>
<status status="PASS" starttime="20210616 03:00:34.274" endtime="20210616 03:00:38.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:38.765" level="INFO">{
  "volumeName": "48892-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:59:37.694Z",
  "modificationTime": "2021-06-16T02:59:39.893Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200140,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210616 03:00:38.764" endtime="20210616 03:00:38.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:00:38.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:00:38.765" endtime="20210616 03:00:38.766"/>
</kw>
<status status="PASS" starttime="20210616 03:00:34.273" endtime="20210616 03:00:38.766"/>
</kw>
<msg timestamp="20210616 03:00:38.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:00:34.273" endtime="20210616 03:00:38.766"/>
</kw>
<msg timestamp="20210616 03:00:38.767" level="INFO">${result} = {
  "volumeName": "48892-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-16T02:59:37.694Z",
  "modificationTime": "2021-06-16T02:59:39.893Z",
  "...</msg>
<status status="PASS" starttime="20210616 03:00:34.272" endtime="20210616 03:00:38.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:00:38.767" endtime="20210616 03:00:38.767"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:38.773" level="INFO">Running command 'ozone sh key list /48892-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:42.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:00:42.960" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210616 03:00:38.771" endtime="20210616 03:00:42.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:42.962" level="INFO">key1</msg>
<status status="PASS" starttime="20210616 03:00:42.961" endtime="20210616 03:00:42.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:00:42.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:00:42.962" endtime="20210616 03:00:42.963"/>
</kw>
<status status="PASS" starttime="20210616 03:00:38.770" endtime="20210616 03:00:42.963"/>
</kw>
<msg timestamp="20210616 03:00:42.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:00:38.769" endtime="20210616 03:00:42.963"/>
</kw>
<msg timestamp="20210616 03:00:42.964" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20210616 03:00:38.767" endtime="20210616 03:00:42.964"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 03:00:42.964" endtime="20210616 03:00:42.965"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:42.969" level="INFO">Running command 'ozone sh key rename /48892-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:46.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:00:46.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:00:42.967" endtime="20210616 03:00:46.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:46.963" level="INFO"/>
<status status="PASS" starttime="20210616 03:00:46.962" endtime="20210616 03:00:46.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:00:46.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:00:46.963" endtime="20210616 03:00:46.963"/>
</kw>
<status status="PASS" starttime="20210616 03:00:42.966" endtime="20210616 03:00:46.964"/>
</kw>
<msg timestamp="20210616 03:00:46.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:00:42.966" endtime="20210616 03:00:46.964"/>
</kw>
<status status="PASS" starttime="20210616 03:00:42.965" endtime="20210616 03:00:46.964"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:46.970" level="INFO">Running command 'ozone sh key list /48892-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:50.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:00:50.954" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20210616 03:00:46.967" endtime="20210616 03:00:50.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:50.955" level="INFO">key2</msg>
<status status="PASS" starttime="20210616 03:00:50.954" endtime="20210616 03:00:50.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:00:50.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:00:50.956" endtime="20210616 03:00:50.956"/>
</kw>
<status status="PASS" starttime="20210616 03:00:46.966" endtime="20210616 03:00:50.957"/>
</kw>
<msg timestamp="20210616 03:00:50.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:00:46.966" endtime="20210616 03:00:50.957"/>
</kw>
<msg timestamp="20210616 03:00:50.957" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20210616 03:00:46.965" endtime="20210616 03:00:50.957"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 03:00:50.957" endtime="20210616 03:00:50.958"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:50.962" level="INFO">Running command 'ozone sh key delete /48892-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:54.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:00:54.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:00:50.960" endtime="20210616 03:00:54.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:54.853" level="INFO"/>
<status status="PASS" starttime="20210616 03:00:54.852" endtime="20210616 03:00:54.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:00:54.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:00:54.853" endtime="20210616 03:00:54.854"/>
</kw>
<status status="PASS" starttime="20210616 03:00:50.959" endtime="20210616 03:00:54.854"/>
</kw>
<msg timestamp="20210616 03:00:54.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:00:50.959" endtime="20210616 03:00:54.855"/>
</kw>
<status status="PASS" starttime="20210616 03:00:50.958" endtime="20210616 03:00:54.855"/>
</kw>
<status status="PASS" starttime="20210616 02:59:34.079" endtime="20210616 03:00:54.855"/>
</kw>
<status status="PASS" starttime="20210616 02:59:34.079" endtime="20210616 03:00:54.855"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:54.860" level="INFO">Running command 'ozone sh volume clrquota --space-quota /48892-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:00:58.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:00:58.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:00:54.857" endtime="20210616 03:00:58.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:00:58.859" level="INFO"/>
<status status="PASS" starttime="20210616 03:00:58.858" endtime="20210616 03:00:58.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:00:58.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:00:58.859" endtime="20210616 03:00:58.860"/>
</kw>
<status status="PASS" starttime="20210616 03:00:54.857" endtime="20210616 03:00:58.860"/>
</kw>
<msg timestamp="20210616 03:00:58.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:00:54.856" endtime="20210616 03:00:58.860"/>
</kw>
<status status="PASS" starttime="20210616 03:00:54.856" endtime="20210616 03:00:58.860"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:00:58.865" level="INFO">Running command 'ozone sh volume info /48892-rpcwoscheme | jq -r '. | select(.name=="48892-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:03.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:03.052" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 03:00:58.863" endtime="20210616 03:01:03.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:03.054" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 03:01:03.053" endtime="20210616 03:01:03.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:03.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:03.054" endtime="20210616 03:01:03.055"/>
</kw>
<status status="PASS" starttime="20210616 03:00:58.862" endtime="20210616 03:01:03.055"/>
</kw>
<msg timestamp="20210616 03:01:03.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:00:58.862" endtime="20210616 03:01:03.055"/>
</kw>
<msg timestamp="20210616 03:01:03.056" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 03:00:58.861" endtime="20210616 03:01:03.056"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 03:01:03.056" endtime="20210616 03:01:03.056"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:03.061" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /48892-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:06.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:06.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:01:03.058" endtime="20210616 03:01:06.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:06.858" level="INFO"/>
<status status="PASS" starttime="20210616 03:01:06.857" endtime="20210616 03:01:06.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:06.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:06.858" endtime="20210616 03:01:06.859"/>
</kw>
<status status="PASS" starttime="20210616 03:01:03.058" endtime="20210616 03:01:06.859"/>
</kw>
<msg timestamp="20210616 03:01:06.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:03.058" endtime="20210616 03:01:06.859"/>
</kw>
<status status="PASS" starttime="20210616 03:01:03.057" endtime="20210616 03:01:06.859"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:06.864" level="INFO">Running command 'ozone sh volume info /48892-rpcwoscheme | jq -r '. | select(.name=="48892-rpcwoscheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:11.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:11.126" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 03:01:06.862" endtime="20210616 03:01:11.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:11.128" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 03:01:11.127" endtime="20210616 03:01:11.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:11.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:11.128" endtime="20210616 03:01:11.129"/>
</kw>
<status status="PASS" starttime="20210616 03:01:06.861" endtime="20210616 03:01:11.129"/>
</kw>
<msg timestamp="20210616 03:01:11.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:06.861" endtime="20210616 03:01:11.129"/>
</kw>
<msg timestamp="20210616 03:01:11.130" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 03:01:06.860" endtime="20210616 03:01:11.130"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 03:01:11.130" endtime="20210616 03:01:11.131"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:11.135" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /48892-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:15.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:15.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:01:11.133" endtime="20210616 03:01:15.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:15.100" level="INFO"/>
<status status="PASS" starttime="20210616 03:01:15.099" endtime="20210616 03:01:15.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:15.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:15.100" endtime="20210616 03:01:15.101"/>
</kw>
<status status="PASS" starttime="20210616 03:01:11.132" endtime="20210616 03:01:15.101"/>
</kw>
<msg timestamp="20210616 03:01:15.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:11.132" endtime="20210616 03:01:15.102"/>
</kw>
<status status="PASS" starttime="20210616 03:01:11.131" endtime="20210616 03:01:15.102"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:15.107" level="INFO">Running command 'ozone sh bucket info /48892-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:19.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:19.137" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 03:01:15.105" endtime="20210616 03:01:19.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:19.138" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 03:01:19.137" endtime="20210616 03:01:19.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:19.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:19.139" endtime="20210616 03:01:19.139"/>
</kw>
<status status="PASS" starttime="20210616 03:01:15.104" endtime="20210616 03:01:19.140"/>
</kw>
<msg timestamp="20210616 03:01:19.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:15.103" endtime="20210616 03:01:19.140"/>
</kw>
<msg timestamp="20210616 03:01:19.140" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 03:01:15.102" endtime="20210616 03:01:19.140"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 03:01:19.140" endtime="20210616 03:01:19.141"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:19.145" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /48892-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:23.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:23.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:01:19.143" endtime="20210616 03:01:23.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:23.050" level="INFO"/>
<status status="PASS" starttime="20210616 03:01:23.049" endtime="20210616 03:01:23.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:23.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:23.050" endtime="20210616 03:01:23.051"/>
</kw>
<status status="PASS" starttime="20210616 03:01:19.142" endtime="20210616 03:01:23.051"/>
</kw>
<msg timestamp="20210616 03:01:23.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:19.142" endtime="20210616 03:01:23.051"/>
</kw>
<status status="PASS" starttime="20210616 03:01:19.141" endtime="20210616 03:01:23.051"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:23.056" level="INFO">Running command 'ozone sh bucket info /48892-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:27.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:27.136" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 03:01:23.054" endtime="20210616 03:01:27.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:27.138" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 03:01:27.137" endtime="20210616 03:01:27.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:27.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:27.138" endtime="20210616 03:01:27.139"/>
</kw>
<status status="PASS" starttime="20210616 03:01:23.053" endtime="20210616 03:01:27.139"/>
</kw>
<msg timestamp="20210616 03:01:27.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:23.053" endtime="20210616 03:01:27.139"/>
</kw>
<msg timestamp="20210616 03:01:27.140" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 03:01:23.052" endtime="20210616 03:01:27.140"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 03:01:27.140" endtime="20210616 03:01:27.140"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:27.145" level="INFO">Running command 'ozone sh bucket delete /48892-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:30.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:30.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:01:27.143" endtime="20210616 03:01:30.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:30.875" level="INFO"/>
<status status="PASS" starttime="20210616 03:01:30.875" endtime="20210616 03:01:30.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:30.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:30.876" endtime="20210616 03:01:30.876"/>
</kw>
<status status="PASS" starttime="20210616 03:01:27.142" endtime="20210616 03:01:30.877"/>
</kw>
<msg timestamp="20210616 03:01:30.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:27.141" endtime="20210616 03:01:30.877"/>
</kw>
<status status="PASS" starttime="20210616 03:01:27.141" endtime="20210616 03:01:30.877"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:30.882" level="INFO">Running command 'ozone sh volume delete /48892-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:34.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:34.590" level="INFO">${output} = Volume 48892-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20210616 03:01:30.880" endtime="20210616 03:01:34.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:34.591" level="INFO">Volume 48892-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20210616 03:01:34.590" endtime="20210616 03:01:34.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:34.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:34.591" endtime="20210616 03:01:34.592"/>
</kw>
<status status="PASS" starttime="20210616 03:01:30.879" endtime="20210616 03:01:34.592"/>
</kw>
<msg timestamp="20210616 03:01:34.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:30.878" endtime="20210616 03:01:34.593"/>
</kw>
<status status="PASS" starttime="20210616 03:01:30.878" endtime="20210616 03:01:34.593"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:34.598" level="INFO">Running command 'ozone sh volume create /48892-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:38.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:38.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:01:34.595" endtime="20210616 03:01:38.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:38.482" level="INFO"/>
<status status="PASS" starttime="20210616 03:01:38.481" endtime="20210616 03:01:38.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:38.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:38.482" endtime="20210616 03:01:38.483"/>
</kw>
<status status="PASS" starttime="20210616 03:01:34.595" endtime="20210616 03:01:38.483"/>
</kw>
<msg timestamp="20210616 03:01:38.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:34.594" endtime="20210616 03:01:38.483"/>
</kw>
<status status="PASS" starttime="20210616 03:01:34.593" endtime="20210616 03:01:38.483"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:38.488" level="INFO">Running command 'ozone sh volume info /48892-rpcwoscheme | jq -r '. | select(.name=="48892-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:42.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:42.603" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 03:01:38.486" endtime="20210616 03:01:42.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:42.605" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 03:01:42.604" endtime="20210616 03:01:42.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:42.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:42.605" endtime="20210616 03:01:42.607"/>
</kw>
<status status="PASS" starttime="20210616 03:01:38.485" endtime="20210616 03:01:42.607"/>
</kw>
<msg timestamp="20210616 03:01:42.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:38.485" endtime="20210616 03:01:42.607"/>
</kw>
<msg timestamp="20210616 03:01:42.608" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 03:01:38.484" endtime="20210616 03:01:42.608"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 03:01:42.608" endtime="20210616 03:01:42.609"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:42.614" level="INFO">Running command 'ozone sh volume info /48892-rpcwoscheme | jq -r '. | select(.name=="48892-rpcwoscheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:46.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:46.634" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 03:01:42.612" endtime="20210616 03:01:46.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:46.636" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 03:01:46.635" endtime="20210616 03:01:46.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:46.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:46.636" endtime="20210616 03:01:46.637"/>
</kw>
<status status="PASS" starttime="20210616 03:01:42.611" endtime="20210616 03:01:46.637"/>
</kw>
<msg timestamp="20210616 03:01:46.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:42.611" endtime="20210616 03:01:46.638"/>
</kw>
<msg timestamp="20210616 03:01:46.638" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 03:01:42.609" endtime="20210616 03:01:46.638"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 03:01:46.638" endtime="20210616 03:01:46.639"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:46.643" level="INFO">Running command 'ozone sh bucket create /48892-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:50.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:50.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:01:46.641" endtime="20210616 03:01:50.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:50.138" level="INFO"/>
<status status="PASS" starttime="20210616 03:01:50.137" endtime="20210616 03:01:50.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:50.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:50.139" endtime="20210616 03:01:50.139"/>
</kw>
<status status="PASS" starttime="20210616 03:01:46.640" endtime="20210616 03:01:50.140"/>
</kw>
<msg timestamp="20210616 03:01:50.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:46.640" endtime="20210616 03:01:50.140"/>
</kw>
<status status="PASS" starttime="20210616 03:01:46.639" endtime="20210616 03:01:50.140"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:50.145" level="INFO">Running command 'ozone sh bucket info /48892-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:54.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:54.226" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 03:01:50.143" endtime="20210616 03:01:54.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:54.227" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 03:01:54.226" endtime="20210616 03:01:54.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:54.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:54.228" endtime="20210616 03:01:54.228"/>
</kw>
<status status="PASS" starttime="20210616 03:01:50.142" endtime="20210616 03:01:54.229"/>
</kw>
<msg timestamp="20210616 03:01:54.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:50.142" endtime="20210616 03:01:54.229"/>
</kw>
<msg timestamp="20210616 03:01:54.229" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 03:01:50.141" endtime="20210616 03:01:54.229"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 03:01:54.229" endtime="20210616 03:01:54.230"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:54.234" level="INFO">Running command 'ozone sh bucket info /48892-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:01:58.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:01:58.276" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210616 03:01:54.232" endtime="20210616 03:01:58.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:01:58.277" level="INFO">-1</msg>
<status status="PASS" starttime="20210616 03:01:58.276" endtime="20210616 03:01:58.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:01:58.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:01:58.277" endtime="20210616 03:01:58.278"/>
</kw>
<status status="PASS" starttime="20210616 03:01:54.231" endtime="20210616 03:01:58.278"/>
</kw>
<msg timestamp="20210616 03:01:58.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:54.231" endtime="20210616 03:01:58.279"/>
</kw>
<msg timestamp="20210616 03:01:58.279" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210616 03:01:54.230" endtime="20210616 03:01:58.279"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 03:01:58.279" endtime="20210616 03:01:58.280"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:01:58.285" level="INFO">Running command 'ozone sh bucket delete /48892-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:02.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:02.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:01:58.282" endtime="20210616 03:02:02.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:02.271" level="INFO"/>
<status status="PASS" starttime="20210616 03:02:02.270" endtime="20210616 03:02:02.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:02.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:02.271" endtime="20210616 03:02:02.271"/>
</kw>
<status status="PASS" starttime="20210616 03:01:58.281" endtime="20210616 03:02:02.272"/>
</kw>
<msg timestamp="20210616 03:02:02.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:01:58.281" endtime="20210616 03:02:02.272"/>
</kw>
<status status="PASS" starttime="20210616 03:01:58.280" endtime="20210616 03:02:02.273"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:02.277" level="INFO">Running command 'ozone sh volume delete /48892-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:05.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:05.955" level="INFO">${output} = Volume 48892-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20210616 03:02:02.275" endtime="20210616 03:02:05.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:05.957" level="INFO">Volume 48892-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20210616 03:02:05.956" endtime="20210616 03:02:05.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:05.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:05.957" endtime="20210616 03:02:05.958"/>
</kw>
<status status="PASS" starttime="20210616 03:02:02.274" endtime="20210616 03:02:05.958"/>
</kw>
<msg timestamp="20210616 03:02:05.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:02.274" endtime="20210616 03:02:05.958"/>
</kw>
<status status="PASS" starttime="20210616 03:02:02.273" endtime="20210616 03:02:05.958"/>
</kw>
<status status="PASS" starttime="20210616 02:58:38.356" endtime="20210616 03:02:05.959"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 02:58:38.293" endtime="20210616 03:02:05.959"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20210616 02:49:27.594" endtime="20210616 03:02:05.961"/>
</suite>
<status status="PASS" starttime="20210616 02:40:59.559" endtime="20210616 03:02:05.968"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:40:54.055" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:40:54.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:40:54.060" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 02:40:54.052" endtime="20210616 02:40:54.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:40:54.061" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 02:40:54.060" endtime="20210616 02:40:54.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:40:54.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:40:54.061" endtime="20210616 02:40:54.062"/>
</kw>
<status status="PASS" starttime="20210616 02:40:54.051" endtime="20210616 02:40:54.062"/>
</kw>
<msg timestamp="20210616 02:40:54.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:40:54.051" endtime="20210616 02:40:54.063"/>
</kw>
<msg timestamp="20210616 02:40:54.063" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 02:40:54.050" endtime="20210616 02:40:54.063"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 02:40:54.064" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 02:40:54.063" endtime="20210616 02:40:54.064"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 02:40:54.069" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 02:40:54.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 02:40:54.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 02:40:54.067" endtime="20210616 02:40:54.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 02:40:54.078" level="INFO"/>
<status status="PASS" starttime="20210616 02:40:54.077" endtime="20210616 02:40:54.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 02:40:54.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 02:40:54.078" endtime="20210616 02:40:54.079"/>
</kw>
<status status="PASS" starttime="20210616 02:40:54.066" endtime="20210616 02:40:54.079"/>
</kw>
<msg timestamp="20210616 02:40:54.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 02:40:54.066" endtime="20210616 02:40:54.080"/>
</kw>
<status status="PASS" starttime="20210616 02:40:54.065" endtime="20210616 02:40:54.080"/>
</kw>
<status status="PASS" starttime="20210616 02:40:54.064" endtime="20210616 02:40:54.080"/>
</kw>
<status status="PASS" starttime="20210616 02:40:54.049" endtime="20210616 02:40:54.081"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210616 02:40:54.048" endtime="20210616 02:40:54.082"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210616 02:40:53.983" endtime="20210616 02:40:54.083"/>
</suite>
<suite id="s1-s3" name="ozonefs-ofs-bucket" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 03:11:31.080" level="INFO">${random} = 27752</msg>
<status status="PASS" starttime="20210616 03:11:31.080" endtime="20210616 03:11:31.080"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:11:31.081" level="INFO">${BUCKET} = 27752-bucket1-ofs</msg>
<status status="PASS" starttime="20210616 03:11:31.081" endtime="20210616 03:11:31.081"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:11:31.082" level="INFO">${BUCKET2} = 27752-bucket2-ofs</msg>
<status status="PASS" starttime="20210616 03:11:31.081" endtime="20210616 03:11:31.082"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:11:31.083" level="INFO">${BUCKET_IN_VOL2} = 27752-bucket3-ofs</msg>
<status status="PASS" starttime="20210616 03:11:31.082" endtime="20210616 03:11:31.083"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:11:31.087" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210616 03:11:31.087" endtime="20210616 03:11:31.088"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:11:31.088" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210616 03:11:31.088" endtime="20210616 03:11:31.088"/>
</kw>
<status status="PASS" starttime="20210616 03:11:31.087" endtime="20210616 03:11:31.089"/>
</kw>
<msg timestamp="20210616 03:11:31.089" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210616 03:11:31.085" endtime="20210616 03:11:31.089"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:11:31.092" level="INFO">${first} = /</msg>
<status status="PASS" starttime="20210616 03:11:31.091" endtime="20210616 03:11:31.092"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:11:31.093" level="INFO">${result} = /</msg>
<status status="PASS" starttime="20210616 03:11:31.092" endtime="20210616 03:11:31.093"/>
</kw>
<status status="PASS" starttime="20210616 03:11:31.091" endtime="20210616 03:11:31.093"/>
</kw>
<msg timestamp="20210616 03:11:31.093" level="INFO">${path_with_leading} = /</msg>
<status status="PASS" starttime="20210616 03:11:31.089" endtime="20210616 03:11:31.093"/>
</kw>
<status status="PASS" starttime="20210616 03:11:31.084" endtime="20210616 03:11:31.094"/>
</kw>
<msg timestamp="20210616 03:11:31.094" level="INFO">${url} = ofs://om/fstest1/27752-bucket1-ofs/</msg>
<status status="PASS" starttime="20210616 03:11:31.084" endtime="20210616 03:11:31.094"/>
</kw>
<msg timestamp="20210616 03:11:31.094" level="INFO">${BASE_URL} = ofs://om/fstest1/27752-bucket1-ofs/</msg>
<status status="PASS" starttime="20210616 03:11:31.083" endtime="20210616 03:11:31.094"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:11:31.095" level="INFO">${BASE_URL} = ofs://om/fstest1/27752-bucket1-ofs/</msg>
<status status="PASS" starttime="20210616 03:11:31.094" endtime="20210616 03:11:31.095"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:11:31.097" level="INFO">${DEEP_URL} = ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir</msg>
<status status="PASS" starttime="20210616 03:11:31.095" endtime="20210616 03:11:31.097"/>
</kw>
<status status="PASS" starttime="20210616 03:11:31.080" endtime="20210616 03:11:31.097"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:11:31.102" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:11:34.970" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:11:34.970" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:11:31.098" endtime="20210616 03:11:34.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:34.971" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:11:34.970" endtime="20210616 03:11:34.971"/>
</kw>
<status status="PASS" starttime="20210616 03:11:31.097" endtime="20210616 03:11:34.971"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:11:34.974" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:11:38.771" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:11:38.771" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:11:34.972" endtime="20210616 03:11:38.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:38.773" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:11:38.772" endtime="20210616 03:11:38.773"/>
</kw>
<status status="PASS" starttime="20210616 03:11:34.972" endtime="20210616 03:11:38.773"/>
</kw>
<status status="PASS" starttime="20210616 03:11:31.097" endtime="20210616 03:11:38.773"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create buckets for FS test" library="setup">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:11:38.780" level="INFO">Running command 'ozone sh bucket create fstest1/27752-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:11:42.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:11:42.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:11:38.778" endtime="20210616 03:11:42.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:42.703" level="INFO"/>
<status status="PASS" starttime="20210616 03:11:42.702" endtime="20210616 03:11:42.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:11:42.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:11:42.704" endtime="20210616 03:11:42.705"/>
</kw>
<status status="PASS" starttime="20210616 03:11:38.777" endtime="20210616 03:11:42.705"/>
</kw>
<msg timestamp="20210616 03:11:42.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:11:38.776" endtime="20210616 03:11:42.705"/>
</kw>
<status status="PASS" starttime="20210616 03:11:38.776" endtime="20210616 03:11:42.706"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:11:42.710" level="INFO">Running command 'ozone sh bucket create fstest1/27752-bucket2-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:11:46.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:11:46.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:11:42.707" endtime="20210616 03:11:46.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:46.213" level="INFO"/>
<status status="PASS" starttime="20210616 03:11:46.212" endtime="20210616 03:11:46.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:11:46.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:11:46.214" endtime="20210616 03:11:46.214"/>
</kw>
<status status="PASS" starttime="20210616 03:11:42.707" endtime="20210616 03:11:46.214"/>
</kw>
<msg timestamp="20210616 03:11:46.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:11:42.707" endtime="20210616 03:11:46.215"/>
</kw>
<status status="PASS" starttime="20210616 03:11:42.706" endtime="20210616 03:11:46.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:11:46.219" level="INFO">Running command 'ozone sh bucket create fstest2/27752-bucket3-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:11:50.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:11:50.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:11:46.217" endtime="20210616 03:11:50.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:50.065" level="INFO"/>
<status status="PASS" starttime="20210616 03:11:50.064" endtime="20210616 03:11:50.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:11:50.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:11:50.065" endtime="20210616 03:11:50.066"/>
</kw>
<status status="PASS" starttime="20210616 03:11:46.216" endtime="20210616 03:11:50.066"/>
</kw>
<msg timestamp="20210616 03:11:50.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:11:46.216" endtime="20210616 03:11:50.066"/>
</kw>
<status status="PASS" starttime="20210616 03:11:46.215" endtime="20210616 03:11:50.067"/>
</kw>
<status status="PASS" starttime="20210616 03:11:38.775" endtime="20210616 03:11:50.067"/>
</kw>
<status status="PASS" starttime="20210616 03:11:38.774" endtime="20210616 03:11:50.067"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:11:50.072" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:11:54.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:11:54.250" level="INFO">${output} = {
  "metadata" : { },
  "name" : "48892-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210616 03:11:50.069" endtime="20210616 03:11:54.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:54.251" level="INFO">{
  "metadata" : { },
  "name" : "48892-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T02:52:59.291Z",
  "modificationTime" : "2021-06-16T02:53:23.131Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "94856-source",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2021-06-16T02:42:18.070Z",
  "modificationTime" : "2021-06-16T02:42:55.576Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ]
}
{
  "metadata" : { },
  "name" : "94856-target",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 10,
  "creationTime" : "2021-06-16T02:42:22.074Z",
  "modificationTime" : "2021-06-16T02:42:52Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-06-16T03:07:24.316Z",
  "modificationTime" : "2021-06-16T03:07:24.316Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-16T03:07:32.067Z",
  "modificationTime" : "2021-06-16T03:07:32.067Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-16T03:07:28.188Z",
  "modificationTime" : "2021-06-16T03:07:28.188Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:07:36.126Z",
  "modificationTime" : "2021-06-16T03:07:36.126Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest266",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:03:31.481Z",
  "modificationTime" : "2021-06-16T03:03:31.481Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest366",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:03:51.094Z",
  "modificationTime" : "2021-06-16T03:05:52.817Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest410",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:03:01.351Z",
  "modificationTime" : "2021-06-16T03:03:01.351Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest66",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-16T03:03:27.669Z",
  "modificationTime" : "2021-06-16T03:03:27.669Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "root",
  "owner" : "root",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-16T02:40:24.526Z",
  "modificationTime" : "2021-06-16T02:40:24.526Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-58978",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:03.846Z",
  "modificationTime" : "2021-06-16T02:41:03.846Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-1-88023",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.093Z",
  "modificationTime" : "2021-06-16T02:41:04.093Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-33168",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.108Z",
  "modificationTime" : "2021-06-16T02:41:04.108Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-85489",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.118Z",
  "modificationTime" : "2021-06-16T02:41:04.118Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-67887",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.131Z",
  "modificationTime" : "2021-06-16T02:41:04.131Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-kjegm",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:02:28.278Z",
  "modificationTime" : "2021-06-16T03:02:28.278Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" starttime="20210616 03:11:54.250" endtime="20210616 03:11:54.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:11:54.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:11:54.252" endtime="20210616 03:11:54.253"/>
</kw>
<status status="PASS" starttime="20210616 03:11:50.068" endtime="20210616 03:11:54.253"/>
</kw>
<msg timestamp="20210616 03:11:54.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:11:50.068" endtime="20210616 03:11:54.253"/>
</kw>
<msg timestamp="20210616 03:11:54.254" level="INFO">${result} = {
  "metadata" : { },
  "name" : "48892-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210616 03:11:50.068" endtime="20210616 03:11:54.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:11:54.254" endtime="20210616 03:11:54.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:11:54.254" endtime="20210616 03:11:54.255"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm[^@]*@EXAMPLE\.COM)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:11:54.255" endtime="20210616 03:11:54.256"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:11:54.260" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:11:58.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:11:58.331" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "07623-link1-ofs",
  "storageType" : "DISK",
...</msg>
<status status="PASS" starttime="20210616 03:11:54.257" endtime="20210616 03:11:58.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:58.332" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "07623-link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:07:51.385Z",
  "modificationTime" : "2021-06-16T03:07:51.385Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "07623-link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "07623-link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:07:55.321Z",
  "modificationTime" : "2021-06-16T03:07:55.321Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "07623-link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "27752-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:11:42.650Z",
  "modificationTime" : "2021-06-16T03:11:42.650Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "27752-bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:11:46.145Z",
  "modificationTime" : "2021-06-16T03:11:46.145Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210616 03:11:58.331" endtime="20210616 03:11:58.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:11:58.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:11:58.332" endtime="20210616 03:11:58.333"/>
</kw>
<status status="PASS" starttime="20210616 03:11:54.257" endtime="20210616 03:11:58.334"/>
</kw>
<msg timestamp="20210616 03:11:58.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:11:54.256" endtime="20210616 03:11:58.334"/>
</kw>
<msg timestamp="20210616 03:11:58.335" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "07623-link1-ofs",
  "storageType" : "DISK",
...</msg>
<status status="PASS" starttime="20210616 03:11:54.256" endtime="20210616 03:11:58.335"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:11:58.335" endtime="20210616 03:11:58.335"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:11:58.335" endtime="20210616 03:11:58.336"/>
</kw>
<status status="PASS" starttime="20210616 03:11:50.067" endtime="20210616 03:11:58.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:58.337" level="INFO">Completed setup for ofs tests with buckets in fstest1/27752-bucket1-ofs using FS base URL: ofs://om/fstest1/27752-bucket1-ofs/</msg>
<status status="PASS" starttime="20210616 03:11:58.336" endtime="20210616 03:11:58.337"/>
</kw>
<status status="PASS" starttime="20210616 03:11:31.079" endtime="20210616 03:11:58.337"/>
</kw>
<test id="s1-s3-t1" name="List root">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:11:58.344" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210616 03:11:58.344" endtime="20210616 03:11:58.344"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:11:58.345" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210616 03:11:58.345" endtime="20210616 03:11:58.345"/>
</kw>
<status status="PASS" starttime="20210616 03:11:58.343" endtime="20210616 03:11:58.346"/>
</kw>
<msg timestamp="20210616 03:11:58.346" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210616 03:11:58.342" endtime="20210616 03:11:58.346"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210616 03:11:58.347" endtime="20210616 03:11:58.348"/>
</kw>
<msg timestamp="20210616 03:11:58.348" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210616 03:11:58.346" endtime="20210616 03:11:58.348"/>
</kw>
<status status="PASS" starttime="20210616 03:11:58.341" endtime="20210616 03:11:58.349"/>
</kw>
<msg timestamp="20210616 03:11:58.349" level="INFO">${url} = ofs://om/fstest1/27752-bucket1-ofs</msg>
<status status="PASS" starttime="20210616 03:11:58.340" endtime="20210616 03:11:58.349"/>
</kw>
<msg timestamp="20210616 03:11:58.349" level="INFO">${root} = ofs://om/fstest1/27752-bucket1-ofs</msg>
<status status="PASS" starttime="20210616 03:11:58.338" endtime="20210616 03:11:58.349"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:11:58.355" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/27752-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:12:02.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:12:02.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:11:58.351" endtime="20210616 03:12:02.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:12:02.486" level="INFO"/>
<status status="PASS" starttime="20210616 03:12:02.485" endtime="20210616 03:12:02.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:12:02.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:12:02.486" endtime="20210616 03:12:02.487"/>
</kw>
<status status="PASS" starttime="20210616 03:11:58.351" endtime="20210616 03:12:02.487"/>
</kw>
<msg timestamp="20210616 03:12:02.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:11:58.350" endtime="20210616 03:12:02.487"/>
</kw>
<status status="PASS" starttime="20210616 03:11:58.350" endtime="20210616 03:12:02.488"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:11:58.337" endtime="20210616 03:12:02.488"/>
</test>
<test id="s1-s3-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:12:02.497" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210616 03:12:02.497" endtime="20210616 03:12:02.497"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:12:02.498" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210616 03:12:02.498" endtime="20210616 03:12:02.498"/>
</kw>
<status status="PASS" starttime="20210616 03:12:02.496" endtime="20210616 03:12:02.499"/>
</kw>
<msg timestamp="20210616 03:12:02.499" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210616 03:12:02.495" endtime="20210616 03:12:02.499"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210616 03:12:02.500" endtime="20210616 03:12:02.502"/>
</kw>
<msg timestamp="20210616 03:12:02.502" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210616 03:12:02.499" endtime="20210616 03:12:02.502"/>
</kw>
<status status="PASS" starttime="20210616 03:12:02.494" endtime="20210616 03:12:02.502"/>
</kw>
<msg timestamp="20210616 03:12:02.502" level="INFO">${url} = ofs://om/no-such-volume/27752-bucket1-ofs</msg>
<status status="PASS" starttime="20210616 03:12:02.493" endtime="20210616 03:12:02.502"/>
</kw>
<msg timestamp="20210616 03:12:02.503" level="INFO">${url} = ofs://om/no-such-volume/27752-bucket1-ofs</msg>
<status status="PASS" starttime="20210616 03:12:02.491" endtime="20210616 03:12:02.503"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:12:02.506" level="INFO">Running command 'ozone fs -ls ofs://om/no-such-volume/27752-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:12:06.290" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:12:06.290" level="INFO">${output} = ls: `ofs://om/no-such-volume/27752-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:12:02.504" endtime="20210616 03:12:06.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:12:06.292" level="INFO">ls: `ofs://om/no-such-volume/27752-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:12:06.291" endtime="20210616 03:12:06.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:12:06.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:12:06.292" endtime="20210616 03:12:06.293"/>
</kw>
<msg timestamp="20210616 03:12:06.293" level="INFO">${result} = ls: `ofs://om/no-such-volume/27752-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:12:02.503" endtime="20210616 03:12:06.293"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:12:06.294" endtime="20210616 03:12:06.295"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:12:02.490" endtime="20210616 03:12:06.295"/>
</test>
<test id="s1-s3-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:12:06.302" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210616 03:12:06.302" endtime="20210616 03:12:06.302"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:12:06.303" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210616 03:12:06.303" endtime="20210616 03:12:06.303"/>
</kw>
<status status="PASS" starttime="20210616 03:12:06.301" endtime="20210616 03:12:06.304"/>
</kw>
<msg timestamp="20210616 03:12:06.304" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210616 03:12:06.300" endtime="20210616 03:12:06.304"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210616 03:12:06.306" endtime="20210616 03:12:06.307"/>
</kw>
<msg timestamp="20210616 03:12:06.307" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210616 03:12:06.304" endtime="20210616 03:12:06.307"/>
</kw>
<status status="PASS" starttime="20210616 03:12:06.299" endtime="20210616 03:12:06.307"/>
</kw>
<msg timestamp="20210616 03:12:06.308" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20210616 03:12:06.298" endtime="20210616 03:12:06.308"/>
</kw>
<msg timestamp="20210616 03:12:06.308" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20210616 03:12:06.297" endtime="20210616 03:12:06.308"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:12:06.311" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:12:10.314" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:12:10.314" level="INFO">${output} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:12:06.309" endtime="20210616 03:12:10.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:12:10.315" level="INFO">ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:12:10.314" endtime="20210616 03:12:10.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:12:10.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:12:10.316" endtime="20210616 03:12:10.316"/>
</kw>
<msg timestamp="20210616 03:12:10.317" level="INFO">${result} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:12:06.308" endtime="20210616 03:12:10.317"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:12:10.317" endtime="20210616 03:12:10.318"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:12:06.296" endtime="20210616 03:12:10.318"/>
</test>
<test id="s1-s3-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:12:10.324" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:12:14.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:12:14.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:12:10.322" endtime="20210616 03:12:14.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:12:14.431" level="INFO"/>
<status status="PASS" starttime="20210616 03:12:14.430" endtime="20210616 03:12:14.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:12:14.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:12:14.431" endtime="20210616 03:12:14.432"/>
</kw>
<status status="PASS" starttime="20210616 03:12:10.321" endtime="20210616 03:12:14.432"/>
</kw>
<msg timestamp="20210616 03:12:14.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:12:10.321" endtime="20210616 03:12:14.432"/>
</kw>
<status status="PASS" starttime="20210616 03:12:10.320" endtime="20210616 03:12:14.433"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:12:14.437" level="INFO">Running command 'ozone sh key list fstest1/27752-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:12:18.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:12:18.684" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210616 03:12:14.435" endtime="20210616 03:12:18.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:12:18.685" level="INFO">test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210616 03:12:18.684" endtime="20210616 03:12:18.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:12:18.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:12:18.686" endtime="20210616 03:12:18.686"/>
</kw>
<status status="PASS" starttime="20210616 03:12:14.434" endtime="20210616 03:12:18.687"/>
</kw>
<msg timestamp="20210616 03:12:18.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:12:14.434" endtime="20210616 03:12:18.687"/>
</kw>
<msg timestamp="20210616 03:12:18.687" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210616 03:12:14.433" endtime="20210616 03:12:18.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:12:18.688" endtime="20210616 03:12:18.689"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:12:10.319" endtime="20210616 03:12:18.689"/>
</test>
<test id="s1-s3-t5" name="Copy from local">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:12:18.695" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:12:24.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:12:24.922" level="INFO">${output} = 2021-06-16 03:12:22,916 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:12:22,999 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:12:18.692" endtime="20210616 03:12:24.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:12:24.924" level="INFO">2021-06-16 03:12:22,916 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:12:22,999 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:12:22,999 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:12:23,313 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:12:23,313 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-6BB53E4C9EA1-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:12:23,314 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:12:24.923" endtime="20210616 03:12:24.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:12:24.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:12:24.924" endtime="20210616 03:12:24.925"/>
</kw>
<status status="PASS" starttime="20210616 03:12:18.692" endtime="20210616 03:12:24.925"/>
</kw>
<msg timestamp="20210616 03:12:24.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:12:18.691" endtime="20210616 03:12:24.926"/>
</kw>
<status status="PASS" starttime="20210616 03:12:18.691" endtime="20210616 03:12:24.926"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:12:24.930" level="INFO">Running command 'ozone sh key list fstest1/27752-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:12:29.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:12:29.154" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:12:24.928" endtime="20210616 03:12:29.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:12:29.155" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:12:29.154" endtime="20210616 03:12:29.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:12:29.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:12:29.156" endtime="20210616 03:12:29.156"/>
</kw>
<status status="PASS" starttime="20210616 03:12:24.927" endtime="20210616 03:12:29.157"/>
</kw>
<msg timestamp="20210616 03:12:29.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:12:24.927" endtime="20210616 03:12:29.157"/>
</kw>
<msg timestamp="20210616 03:12:29.157" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:12:24.926" endtime="20210616 03:12:29.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:12:29.158" endtime="20210616 03:12:29.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:12:29.164" level="INFO">Running command 'ozone sh key info fstest1/27752-bucket1-ofs/test/ofs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:12:33.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:12:33.113" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20210616 03:12:29.160" endtime="20210616 03:12:33.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:12:33.115" level="INFO">3</msg>
<status status="PASS" starttime="20210616 03:12:33.114" endtime="20210616 03:12:33.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:12:33.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:12:33.115" endtime="20210616 03:12:33.116"/>
</kw>
<status status="PASS" starttime="20210616 03:12:29.160" endtime="20210616 03:12:33.116"/>
</kw>
<msg timestamp="20210616 03:12:33.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:12:29.159" endtime="20210616 03:12:33.117"/>
</kw>
<msg timestamp="20210616 03:12:33.117" level="INFO">${result} = 3</msg>
<status status="PASS" starttime="20210616 03:12:29.158" endtime="20210616 03:12:33.117"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 03:12:33.118" endtime="20210616 03:12:33.118"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:12:18.690" endtime="20210616 03:12:33.118"/>
</test>
<test id="s1-s3-t6" name="Put">
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:12:33.124" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:12:38.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:12:38.832" level="INFO">${output} = 2021-06-16 03:12:36,874 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:12:36,980 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:12:33.122" endtime="20210616 03:12:38.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:12:38.833" level="INFO">2021-06-16 03:12:36,874 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:12:36,980 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:12:36,981 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:12:37,300 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:12:37,300 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-DD25DF83F98E-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:12:37,302 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:12:38.832" endtime="20210616 03:12:38.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:12:38.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:12:38.834" endtime="20210616 03:12:38.835"/>
</kw>
<status status="PASS" starttime="20210616 03:12:33.121" endtime="20210616 03:12:38.835"/>
</kw>
<msg timestamp="20210616 03:12:38.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:12:33.121" endtime="20210616 03:12:38.836"/>
</kw>
<status status="PASS" starttime="20210616 03:12:33.120" endtime="20210616 03:12:38.836"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:12:38.840" level="INFO">Running command 'ozone sh key list fstest1/27752-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:12:43.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:12:43.127" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:12:38.838" endtime="20210616 03:12:43.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:12:43.129" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:12:43.128" endtime="20210616 03:12:43.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:12:43.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:12:43.129" endtime="20210616 03:12:43.130"/>
</kw>
<status status="PASS" starttime="20210616 03:12:38.837" endtime="20210616 03:12:43.130"/>
</kw>
<msg timestamp="20210616 03:12:43.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:12:38.837" endtime="20210616 03:12:43.131"/>
</kw>
<msg timestamp="20210616 03:12:43.132" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:12:38.836" endtime="20210616 03:12:43.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:12:43.132" endtime="20210616 03:12:43.132"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:12:33.119" endtime="20210616 03:12:43.133"/>
</test>
<test id="s1-s3-t7" name="List">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:12:43.138" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:12:47.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:12:47.121" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:12 ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-16 03:12 ofs://om/fstest1/2775...</msg>
<status status="PASS" starttime="20210616 03:12:43.136" endtime="20210616 03:12:47.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:12:47.123" level="INFO">Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:12 ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-16 03:12 ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:12:47.122" endtime="20210616 03:12:47.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:12:47.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:12:47.123" endtime="20210616 03:12:47.124"/>
</kw>
<status status="PASS" starttime="20210616 03:12:43.135" endtime="20210616 03:12:47.124"/>
</kw>
<msg timestamp="20210616 03:12:47.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:12:43.135" endtime="20210616 03:12:47.124"/>
</kw>
<msg timestamp="20210616 03:12:47.125" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:12 ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-16 03:12 ofs://om/fstest1/2775...</msg>
<status status="PASS" starttime="20210616 03:12:43.134" endtime="20210616 03:12:47.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:12:47.125" endtime="20210616 03:12:47.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:12:47.126" endtime="20210616 03:12:47.126"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:12:43.133" endtime="20210616 03:12:47.126"/>
</test>
<test id="s1-s3-t8" name="Move">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:12:47.132" level="INFO">Running command 'ozone fs -mv ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/NOTICE.txt ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:12:50.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:12:50.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:12:47.130" endtime="20210616 03:12:50.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:12:50.985" level="INFO"/>
<status status="PASS" starttime="20210616 03:12:50.984" endtime="20210616 03:12:50.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:12:50.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:12:50.986" endtime="20210616 03:12:50.987"/>
</kw>
<status status="PASS" starttime="20210616 03:12:47.129" endtime="20210616 03:12:50.987"/>
</kw>
<msg timestamp="20210616 03:12:50.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:12:47.129" endtime="20210616 03:12:50.988"/>
</kw>
<status status="PASS" starttime="20210616 03:12:47.128" endtime="20210616 03:12:50.988"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:12:50.992" level="INFO">Running command 'ozone sh key list fstest1/27752-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:12:55.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:12:55.287" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:12:50.990" endtime="20210616 03:12:55.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:12:55.288" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:12:55.288" endtime="20210616 03:12:55.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:12:55.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:12:55.289" endtime="20210616 03:12:55.289"/>
</kw>
<status status="PASS" starttime="20210616 03:12:50.989" endtime="20210616 03:12:55.290"/>
</kw>
<msg timestamp="20210616 03:12:55.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:12:50.989" endtime="20210616 03:12:55.290"/>
</kw>
<msg timestamp="20210616 03:12:55.290" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:12:50.988" endtime="20210616 03:12:55.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:12:55.291" endtime="20210616 03:12:55.291"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:12:55.291" endtime="20210616 03:12:55.292"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:12:47.127" endtime="20210616 03:12:55.292"/>
</test>
<test id="s1-s3-t9" name="Copy within FS">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:12:55.298" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:12:59.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:12:59.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:12:55.296" endtime="20210616 03:12:59.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:12:59.072" level="INFO"/>
<status status="PASS" starttime="20210616 03:12:59.071" endtime="20210616 03:12:59.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:12:59.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:12:59.072" endtime="20210616 03:12:59.073"/>
</kw>
<status status="PASS" starttime="20210616 03:12:55.295" endtime="20210616 03:12:59.073"/>
</kw>
<msg timestamp="20210616 03:12:59.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:12:55.294" endtime="20210616 03:12:59.074"/>
</kw>
<status status="PASS" starttime="20210616 03:12:55.294" endtime="20210616 03:12:59.074"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:12:59.078" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/MOVED.TXT ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:13:05.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:13:05.245" level="INFO">${output} = 2021-06-16 03:13:02,999 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:13:03,147 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:12:59.076" endtime="20210616 03:13:05.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:13:05.246" level="INFO">2021-06-16 03:13:02,999 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:13:03,147 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:13:03,147 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:13:04,460 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:13:04,461 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-11DC0EA0E0A0-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:13:04,462 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:13:05.245" endtime="20210616 03:13:05.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:13:05.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:13:05.247" endtime="20210616 03:13:05.247"/>
</kw>
<status status="PASS" starttime="20210616 03:12:59.075" endtime="20210616 03:13:05.248"/>
</kw>
<msg timestamp="20210616 03:13:05.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:12:59.075" endtime="20210616 03:13:05.248"/>
</kw>
<status status="PASS" starttime="20210616 03:12:59.074" endtime="20210616 03:13:05.248"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:13:05.252" level="INFO">Running command 'ozone sh key list fstest1/27752-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:13:09.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:13:09.517" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:13:05.250" endtime="20210616 03:13:09.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:13:09.519" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:13:09.518" endtime="20210616 03:13:09.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:13:09.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:13:09.519" endtime="20210616 03:13:09.520"/>
</kw>
<status status="PASS" starttime="20210616 03:13:05.250" endtime="20210616 03:13:09.520"/>
</kw>
<msg timestamp="20210616 03:13:09.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:13:05.249" endtime="20210616 03:13:09.520"/>
</kw>
<msg timestamp="20210616 03:13:09.521" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:13:05.248" endtime="20210616 03:13:09.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:13:09.521" endtime="20210616 03:13:09.521"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:13:09.526" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:13:13.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:13:13.421" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:13:09.523" endtime="20210616 03:13:13.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:13:13.423" level="INFO">Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:13:13.422" endtime="20210616 03:13:13.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:13:13.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:13:13.423" endtime="20210616 03:13:13.424"/>
</kw>
<status status="PASS" starttime="20210616 03:13:09.523" endtime="20210616 03:13:13.424"/>
</kw>
<msg timestamp="20210616 03:13:13.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:13:09.522" endtime="20210616 03:13:13.424"/>
</kw>
<msg timestamp="20210616 03:13:13.425" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:13:09.522" endtime="20210616 03:13:13.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:13:13.425" endtime="20210616 03:13:13.426"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:13:13.426" endtime="20210616 03:13:13.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:12:55.293" endtime="20210616 03:13:13.427"/>
</test>
<test id="s1-s3-t10" name="Cat file">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:13:13.434" level="INFO">Running command 'ozone fs -cat ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:13:19.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:13:19.210" level="INFO">${output} = 2021-06-16 03:13:17,246 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:13:17,337 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:13:13.430" endtime="20210616 03:13:19.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:13:19.211" level="INFO">2021-06-16 03:13:17,246 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:13:17,337 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:13:17,337 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Ozone
Copyright 2021 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20210616 03:13:19.210" endtime="20210616 03:13:19.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:13:19.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:13:19.212" endtime="20210616 03:13:19.213"/>
</kw>
<status status="PASS" starttime="20210616 03:13:13.429" endtime="20210616 03:13:19.213"/>
</kw>
<msg timestamp="20210616 03:13:19.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:13:13.429" endtime="20210616 03:13:19.213"/>
</kw>
<status status="PASS" starttime="20210616 03:13:13.428" endtime="20210616 03:13:19.215"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:13:13.427" endtime="20210616 03:13:19.215"/>
</test>
<test id="s1-s3-t11" name="Delete file">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:13:19.221" level="INFO">Running command 'ozone fs -rm -skipTrash ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:13:23.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:13:23.351" level="INFO">${output} = Deleted ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:13:19.218" endtime="20210616 03:13:23.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:13:23.352" level="INFO">Deleted ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:13:23.351" endtime="20210616 03:13:23.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:13:23.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:13:23.352" endtime="20210616 03:13:23.353"/>
</kw>
<status status="PASS" starttime="20210616 03:13:19.218" endtime="20210616 03:13:23.353"/>
</kw>
<msg timestamp="20210616 03:13:23.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:13:19.217" endtime="20210616 03:13:23.354"/>
</kw>
<status status="PASS" starttime="20210616 03:13:19.216" endtime="20210616 03:13:23.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:13:23.358" level="INFO">Running command 'ozone sh key list fstest1/27752-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:13:27.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:13:27.450" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210616 03:13:23.356" endtime="20210616 03:13:27.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:13:27.451" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210616 03:13:27.450" endtime="20210616 03:13:27.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:13:27.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:13:27.451" endtime="20210616 03:13:27.452"/>
</kw>
<status status="PASS" starttime="20210616 03:13:23.355" endtime="20210616 03:13:27.452"/>
</kw>
<msg timestamp="20210616 03:13:27.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:13:23.355" endtime="20210616 03:13:27.453"/>
</kw>
<msg timestamp="20210616 03:13:27.453" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210616 03:13:23.354" endtime="20210616 03:13:27.453"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:13:27.453" endtime="20210616 03:13:27.454"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:13:19.215" endtime="20210616 03:13:27.454"/>
</test>
<test id="s1-s3-t12" name="Delete dir">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:13:27.460" level="INFO">Running command 'ozone fs -rmdir ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:13:31.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:13:31.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:13:27.458" endtime="20210616 03:13:31.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:13:31.378" level="INFO"/>
<status status="PASS" starttime="20210616 03:13:31.374" endtime="20210616 03:13:31.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:13:31.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:13:31.378" endtime="20210616 03:13:31.379"/>
</kw>
<status status="PASS" starttime="20210616 03:13:27.457" endtime="20210616 03:13:31.379"/>
</kw>
<msg timestamp="20210616 03:13:31.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:13:27.457" endtime="20210616 03:13:31.380"/>
</kw>
<msg timestamp="20210616 03:13:31.380" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 03:13:27.456" endtime="20210616 03:13:31.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:13:31.386" level="INFO">Running command 'ozone sh key list fstest1/27752-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:13:35.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:13:35.411" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:13:31.383" endtime="20210616 03:13:35.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:13:35.412" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:13:35.411" endtime="20210616 03:13:35.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:13:35.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:13:35.412" endtime="20210616 03:13:35.413"/>
</kw>
<status status="PASS" starttime="20210616 03:13:31.382" endtime="20210616 03:13:35.413"/>
</kw>
<msg timestamp="20210616 03:13:35.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:13:31.381" endtime="20210616 03:13:35.414"/>
</kw>
<msg timestamp="20210616 03:13:35.414" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:13:31.380" endtime="20210616 03:13:35.414"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:13:35.414" endtime="20210616 03:13:35.415"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:13:27.455" endtime="20210616 03:13:35.415"/>
</test>
<test id="s1-s3-t13" name="Touch file">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:13:35.423" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:13:39.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:13:39.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:13:35.421" endtime="20210616 03:13:39.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:13:39.664" level="INFO"/>
<status status="PASS" starttime="20210616 03:13:39.663" endtime="20210616 03:13:39.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:13:39.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:13:39.664" endtime="20210616 03:13:39.665"/>
</kw>
<status status="PASS" starttime="20210616 03:13:35.420" endtime="20210616 03:13:39.665"/>
</kw>
<msg timestamp="20210616 03:13:39.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:13:35.419" endtime="20210616 03:13:39.665"/>
</kw>
<status status="PASS" starttime="20210616 03:13:35.419" endtime="20210616 03:13:39.666"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:13:39.672" level="INFO">Running command 'ozone sh key list fstest1/27752-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:13:43.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:13:43.443" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210616 03:13:39.667" endtime="20210616 03:13:43.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:13:43.445" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210616 03:13:43.444" endtime="20210616 03:13:43.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:13:43.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:13:43.445" endtime="20210616 03:13:43.446"/>
</kw>
<status status="PASS" starttime="20210616 03:13:39.667" endtime="20210616 03:13:43.446"/>
</kw>
<msg timestamp="20210616 03:13:43.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:13:39.667" endtime="20210616 03:13:43.446"/>
</kw>
<msg timestamp="20210616 03:13:43.447" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210616 03:13:39.666" endtime="20210616 03:13:43.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:13:43.447" endtime="20210616 03:13:43.448"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:13:35.418" endtime="20210616 03:13:43.448"/>
</test>
<test id="s1-s3-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:13:43.454" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:13:47.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:13:47.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:13:43.451" endtime="20210616 03:13:47.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:13:47.368" level="INFO"/>
<status status="PASS" starttime="20210616 03:13:47.367" endtime="20210616 03:13:47.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:13:47.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:13:47.368" endtime="20210616 03:13:47.369"/>
</kw>
<status status="PASS" starttime="20210616 03:13:43.450" endtime="20210616 03:13:47.369"/>
</kw>
<msg timestamp="20210616 03:13:47.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:13:43.450" endtime="20210616 03:13:47.370"/>
</kw>
<status status="PASS" starttime="20210616 03:13:43.449" endtime="20210616 03:13:47.370"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:13:47.374" level="INFO">Running command 'ozone fs -rm ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:13:51.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:13:51.248" level="INFO">${output} = 2021-06-16 03:13:51,003 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:13:51,127 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210616 03:13:47.372" endtime="20210616 03:13:51.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:13:51.250" level="INFO">2021-06-16 03:13:51,003 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:13:51,127 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/testFile.txt' to trash at: ofs://om/fstest1/27752-bucket1-ofs/.Trash/root/Current/fstest1/27752-bucket1-ofs/test/ofs/dir/testFile.txt</msg>
<status status="PASS" starttime="20210616 03:13:51.249" endtime="20210616 03:13:51.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:13:51.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:13:51.250" endtime="20210616 03:13:51.250"/>
</kw>
<status status="PASS" starttime="20210616 03:13:47.371" endtime="20210616 03:13:51.251"/>
</kw>
<msg timestamp="20210616 03:13:51.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:13:47.371" endtime="20210616 03:13:51.251"/>
</kw>
<status status="PASS" starttime="20210616 03:13:47.370" endtime="20210616 03:13:51.251"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:13:51.256" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/27752-bucket1-ofs// 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:13:55.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:13:55.264" level="INFO">${output} = drwxrwxrwx   - root root          0 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/.Trash
drwxrwxrwx   - root root          0 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/.Trash/root
drwxr...</msg>
<status status="PASS" starttime="20210616 03:13:51.253" endtime="20210616 03:13:55.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:13:55.265" level="INFO">drwxrwxrwx   - root root          0 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/.Trash
drwxrwxrwx   - root root          0 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/.Trash/root
drwxrwxrwx   - root root          0 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/.Trash/root/Current
drwxrwxrwx   - root root          0 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/.Trash/root/Current/fstest1
drwxrwxrwx   - root root          0 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/.Trash/root/Current/fstest1/27752-bucket1-ofs
drwxrwxrwx   - root root          0 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/.Trash/root/Current/fstest1/27752-bucket1-ofs/test
drwxrwxrwx   - root root          0 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/.Trash/root/Current/fstest1/27752-bucket1-ofs/test/ofs
drwxrwxrwx   - root root          0 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/.Trash/root/Current/fstest1/27752-bucket1-ofs/test/ofs/dir
-rw-rw-rw-   3 root root          0 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/.Trash/root/Current/fstest1/27752-bucket1-ofs/test/ofs/dir/testFile.txt
drwxrwxrwx   - root root          0 2021-06-16 03:12 ofs://om/fstest1/27752-bucket1-ofs/test
drwxrwxrwx   - root root          0 2021-06-16 03:12 ofs://om/fstest1/27752-bucket1-ofs/test/ofs
drwxrwxrwx   - root root          0 2021-06-16 03:12 ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir
-rw-rw-rw-   3 root root      17526 2021-06-16 03:12 ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/MOVED.TXT
-rw-rw-rw-   3 root root      17526 2021-06-16 03:12 ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 root root          0 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210616 03:13:55.265" endtime="20210616 03:13:55.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:13:55.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:13:55.266" endtime="20210616 03:13:55.266"/>
</kw>
<status status="PASS" starttime="20210616 03:13:51.253" endtime="20210616 03:13:55.267"/>
</kw>
<msg timestamp="20210616 03:13:55.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:13:51.252" endtime="20210616 03:13:55.267"/>
</kw>
<msg timestamp="20210616 03:13:55.267" level="INFO">${result} = drwxrwxrwx   - root root          0 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/.Trash
drwxrwxrwx   - root root          0 2021-06-16 03:13 ofs://om/fstest1/27752-bucket1-ofs/.Trash/root
drwxr...</msg>
<status status="PASS" starttime="20210616 03:13:51.252" endtime="20210616 03:13:55.268"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:13:55.268" endtime="20210616 03:13:55.268"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20210616 03:13:55.268" endtime="20210616 03:13:55.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:13:55.269" endtime="20210616 03:13:55.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:13:43.448" endtime="20210616 03:13:55.270"/>
</test>
<test id="s1-s3-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:13:55.276" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:13:59.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:13:59.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:13:55.274" endtime="20210616 03:13:59.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:13:59.023" level="INFO"/>
<status status="PASS" starttime="20210616 03:13:59.022" endtime="20210616 03:13:59.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:13:59.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:13:59.023" endtime="20210616 03:13:59.024"/>
</kw>
<status status="PASS" starttime="20210616 03:13:55.273" endtime="20210616 03:13:59.024"/>
</kw>
<msg timestamp="20210616 03:13:59.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:13:55.272" endtime="20210616 03:13:59.024"/>
</kw>
<status status="PASS" starttime="20210616 03:13:55.272" endtime="20210616 03:13:59.025"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:13:59.029" level="INFO">Running command 'ozone fs -rm -skipTrash -r ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:02.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:02.922" level="INFO">${output} = Deleted ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20210616 03:13:59.027" endtime="20210616 03:14:02.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:02.924" level="INFO">Deleted ofs://om/fstest1/27752-bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20210616 03:14:02.923" endtime="20210616 03:14:02.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:02.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:02.924" endtime="20210616 03:14:02.925"/>
</kw>
<status status="PASS" starttime="20210616 03:13:59.026" endtime="20210616 03:14:02.926"/>
</kw>
<msg timestamp="20210616 03:14:02.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:13:59.026" endtime="20210616 03:14:02.926"/>
</kw>
<status status="PASS" starttime="20210616 03:13:59.025" endtime="20210616 03:14:02.926"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:02.931" level="INFO">Running command 'ozone sh key list fstest1/27752-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:06.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:06.858" level="INFO">${output} = .Trash/
.Trash/root/
.Trash/root/210616031400/
.Trash/root/210616031400/fstest1/
.Trash/root/210616031400/fstest1/27752-bucket1-ofs/
.Trash/root/210616031400/fstest1/27752-bucket1-ofs/test/
.Trash/roo...</msg>
<status status="PASS" starttime="20210616 03:14:02.928" endtime="20210616 03:14:06.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:06.860" level="INFO">.Trash/
.Trash/root/
.Trash/root/210616031400/
.Trash/root/210616031400/fstest1/
.Trash/root/210616031400/fstest1/27752-bucket1-ofs/
.Trash/root/210616031400/fstest1/27752-bucket1-ofs/test/
.Trash/root/210616031400/fstest1/27752-bucket1-ofs/test/ofs/
.Trash/root/210616031400/fstest1/27752-bucket1-ofs/test/ofs/dir/
.Trash/root/210616031400/fstest1/27752-bucket1-ofs/test/ofs/dir/testFile.txt
test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210616 03:14:06.860" endtime="20210616 03:14:06.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:06.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:06.861" endtime="20210616 03:14:06.861"/>
</kw>
<status status="PASS" starttime="20210616 03:14:02.927" endtime="20210616 03:14:06.862"/>
</kw>
<msg timestamp="20210616 03:14:06.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:02.927" endtime="20210616 03:14:06.862"/>
</kw>
<msg timestamp="20210616 03:14:06.862" level="INFO">${result} = .Trash/
.Trash/root/
.Trash/root/210616031400/
.Trash/root/210616031400/fstest1/
.Trash/root/210616031400/fstest1/27752-bucket1-ofs/
.Trash/root/210616031400/fstest1/27752-bucket1-ofs/test/
.Trash/roo...</msg>
<status status="PASS" starttime="20210616 03:14:02.926" endtime="20210616 03:14:06.863"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:14:06.863" endtime="20210616 03:14:06.863"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:13:55.271" endtime="20210616 03:14:06.864"/>
</test>
<test id="s1-s3-t16" name="List recursively">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:06.870" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:06.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:06.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:14:06.867" endtime="20210616 03:14:06.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:06.874" level="INFO"/>
<status status="PASS" starttime="20210616 03:14:06.874" endtime="20210616 03:14:06.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:06.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:06.875" endtime="20210616 03:14:06.876"/>
</kw>
<status status="PASS" starttime="20210616 03:14:06.867" endtime="20210616 03:14:06.876"/>
</kw>
<msg timestamp="20210616 03:14:06.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:06.866" endtime="20210616 03:14:06.876"/>
</kw>
<status status="PASS" starttime="20210616 03:14:06.866" endtime="20210616 03:14:06.876"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:06.881" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:06.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:06.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:14:06.879" endtime="20210616 03:14:06.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:06.885" level="INFO"/>
<status status="PASS" starttime="20210616 03:14:06.884" endtime="20210616 03:14:06.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:06.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:06.885" endtime="20210616 03:14:06.886"/>
</kw>
<status status="PASS" starttime="20210616 03:14:06.878" endtime="20210616 03:14:06.886"/>
</kw>
<msg timestamp="20210616 03:14:06.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:06.877" endtime="20210616 03:14:06.886"/>
</kw>
<status status="PASS" starttime="20210616 03:14:06.877" endtime="20210616 03:14:06.887"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:06.891" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:06.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:06.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:14:06.889" endtime="20210616 03:14:06.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:06.895" level="INFO"/>
<status status="PASS" starttime="20210616 03:14:06.895" endtime="20210616 03:14:06.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:06.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:06.896" endtime="20210616 03:14:06.896"/>
</kw>
<status status="PASS" starttime="20210616 03:14:06.888" endtime="20210616 03:14:06.897"/>
</kw>
<msg timestamp="20210616 03:14:06.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:06.887" endtime="20210616 03:14:06.897"/>
</kw>
<status status="PASS" starttime="20210616 03:14:06.887" endtime="20210616 03:14:06.897"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:06.901" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/27752-bucket1-ofs/testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:10.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:10.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:14:06.899" endtime="20210616 03:14:10.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:10.786" level="INFO"/>
<status status="PASS" starttime="20210616 03:14:10.785" endtime="20210616 03:14:10.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:10.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:10.786" endtime="20210616 03:14:10.787"/>
</kw>
<status status="PASS" starttime="20210616 03:14:06.898" endtime="20210616 03:14:10.787"/>
</kw>
<msg timestamp="20210616 03:14:10.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:06.898" endtime="20210616 03:14:10.788"/>
</kw>
<status status="PASS" starttime="20210616 03:14:06.897" endtime="20210616 03:14:10.788"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:10.794" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 ofs://om/fstest1/27752-bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:16.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:16.881" level="INFO">${output} = 2021-06-16 03:14:14,806 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:14:14,937 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:14:10.790" endtime="20210616 03:14:16.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:16.883" level="INFO">2021-06-16 03:14:14,806 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:14:14,937 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:14:14,937 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:14:15,230 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:14:15,231 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-CAF3ABDC69FB-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:14:15,232 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:14:16.882" endtime="20210616 03:14:16.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:16.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:16.883" endtime="20210616 03:14:16.884"/>
</kw>
<status status="PASS" starttime="20210616 03:14:10.790" endtime="20210616 03:14:16.884"/>
</kw>
<msg timestamp="20210616 03:14:16.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:10.789" endtime="20210616 03:14:16.885"/>
</kw>
<status status="PASS" starttime="20210616 03:14:10.789" endtime="20210616 03:14:16.885"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:16.890" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/27752-bucket1-ofs/testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:22.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:22.854" level="INFO">${output} = 2021-06-16 03:14:20,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:14:20,971 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:14:16.887" endtime="20210616 03:14:22.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:22.856" level="INFO">2021-06-16 03:14:20,852 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:14:20,971 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:14:20,971 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:14:21,286 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:14:21,288 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-CA55A3241C51-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:14:21,289 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:14:22.855" endtime="20210616 03:14:22.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:22.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:22.856" endtime="20210616 03:14:22.857"/>
</kw>
<status status="PASS" starttime="20210616 03:14:16.886" endtime="20210616 03:14:22.857"/>
</kw>
<msg timestamp="20210616 03:14:22.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:16.886" endtime="20210616 03:14:22.857"/>
</kw>
<status status="PASS" starttime="20210616 03:14:16.885" endtime="20210616 03:14:22.858"/>
</kw>
<status status="PASS" starttime="20210616 03:14:06.865" endtime="20210616 03:14:22.858"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:22.862" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/27752-bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:26.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:26.638" level="INFO">${output} = -rw-rw-rw-   3 root root      17526 2021-06-16 03:14 ofs://om/fstest1/27752-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-16 03:14 ofs://om/fstest1/27752-bucket1-ofs/test...</msg>
<status status="PASS" starttime="20210616 03:14:22.860" endtime="20210616 03:14:26.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:26.640" level="INFO">-rw-rw-rw-   3 root root      17526 2021-06-16 03:14 ofs://om/fstest1/27752-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-16 03:14 ofs://om/fstest1/27752-bucket1-ofs/testdir1/localdir1
-rw-rw-rw-   3 root root      17526 2021-06-16 03:14 ofs://om/fstest1/27752-bucket1-ofs/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20210616 03:14:26.639" endtime="20210616 03:14:26.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:26.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:26.641" endtime="20210616 03:14:26.642"/>
</kw>
<status status="PASS" starttime="20210616 03:14:22.859" endtime="20210616 03:14:26.642"/>
</kw>
<msg timestamp="20210616 03:14:26.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:22.859" endtime="20210616 03:14:26.642"/>
</kw>
<msg timestamp="20210616 03:14:26.643" level="INFO">${result} = -rw-rw-rw-   3 root root      17526 2021-06-16 03:14 ofs://om/fstest1/27752-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-16 03:14 ofs://om/fstest1/27752-bucket1-ofs/test...</msg>
<status status="PASS" starttime="20210616 03:14:22.858" endtime="20210616 03:14:26.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:14:26.643" endtime="20210616 03:14:26.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:14:26.644" endtime="20210616 03:14:26.644"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:14:06.864" endtime="20210616 03:14:26.644"/>
</test>
<test id="s1-s3-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:14:26.652" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210616 03:14:26.652" endtime="20210616 03:14:26.652"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:14:26.653" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210616 03:14:26.652" endtime="20210616 03:14:26.653"/>
</kw>
<status status="PASS" starttime="20210616 03:14:26.651" endtime="20210616 03:14:26.653"/>
</kw>
<msg timestamp="20210616 03:14:26.653" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210616 03:14:26.649" endtime="20210616 03:14:26.654"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:14:26.656" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20210616 03:14:26.656" endtime="20210616 03:14:26.656"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:14:26.657" level="INFO">${result} = /testdir2</msg>
<status status="PASS" starttime="20210616 03:14:26.656" endtime="20210616 03:14:26.657"/>
</kw>
<status status="PASS" starttime="20210616 03:14:26.655" endtime="20210616 03:14:26.657"/>
</kw>
<msg timestamp="20210616 03:14:26.657" level="INFO">${path_with_leading} = /testdir2</msg>
<status status="PASS" starttime="20210616 03:14:26.654" endtime="20210616 03:14:26.658"/>
</kw>
<status status="PASS" starttime="20210616 03:14:26.648" endtime="20210616 03:14:26.658"/>
</kw>
<msg timestamp="20210616 03:14:26.658" level="INFO">${url} = ofs://om/fstest1/27752-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20210616 03:14:26.647" endtime="20210616 03:14:26.658"/>
</kw>
<msg timestamp="20210616 03:14:26.658" level="INFO">${target} = ofs://om/fstest1/27752-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20210616 03:14:26.646" endtime="20210616 03:14:26.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:26.663" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/27752-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:30.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:30.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:14:26.661" endtime="20210616 03:14:30.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:30.320" level="INFO"/>
<status status="PASS" starttime="20210616 03:14:30.319" endtime="20210616 03:14:30.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:30.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:30.321" endtime="20210616 03:14:30.321"/>
</kw>
<status status="PASS" starttime="20210616 03:14:26.659" endtime="20210616 03:14:30.322"/>
</kw>
<msg timestamp="20210616 03:14:30.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:26.659" endtime="20210616 03:14:30.322"/>
</kw>
<status status="PASS" starttime="20210616 03:14:26.659" endtime="20210616 03:14:30.322"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:30.327" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/27752-bucket1-ofs//testdir1/localdir1 ofs://om/fstest1/27752-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:36.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:36.647" level="INFO">${output} = 2021-06-16 03:14:34,246 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:14:34,417 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:14:30.325" endtime="20210616 03:14:36.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:36.648" level="INFO">2021-06-16 03:14:34,246 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:14:34,417 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:14:34,417 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:14:35,681 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:14:35,682 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-E69042F2393A-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:14:35,683 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:14:36.647" endtime="20210616 03:14:36.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:36.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:36.649" endtime="20210616 03:14:36.650"/>
</kw>
<status status="PASS" starttime="20210616 03:14:30.324" endtime="20210616 03:14:36.651"/>
</kw>
<msg timestamp="20210616 03:14:36.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:30.323" endtime="20210616 03:14:36.651"/>
</kw>
<status status="PASS" starttime="20210616 03:14:30.323" endtime="20210616 03:14:36.651"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:36.656" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest1/27752-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:40.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:40.848" level="INFO">${output} = 2021-06-16 03:14:40,435 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:14:40,560 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210616 03:14:36.653" endtime="20210616 03:14:40.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:40.850" level="INFO">2021-06-16 03:14:40,435 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:14:40,560 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/27752-bucket2-ofs/testdir2' to trash at: ofs://om/fstest1/27752-bucket2-ofs/.Trash/root/Current/fstest1/27752-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20210616 03:14:40.849" endtime="20210616 03:14:40.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:40.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:40.850" endtime="20210616 03:14:40.851"/>
</kw>
<status status="PASS" starttime="20210616 03:14:36.653" endtime="20210616 03:14:40.851"/>
</kw>
<msg timestamp="20210616 03:14:40.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:36.652" endtime="20210616 03:14:40.852"/>
</kw>
<status status="PASS" starttime="20210616 03:14:36.652" endtime="20210616 03:14:40.852"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:14:26.645" endtime="20210616 03:14:40.852"/>
</test>
<test id="s1-s3-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:14:40.859" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210616 03:14:40.859" endtime="20210616 03:14:40.859"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:14:40.860" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210616 03:14:40.859" endtime="20210616 03:14:40.860"/>
</kw>
<status status="PASS" starttime="20210616 03:14:40.858" endtime="20210616 03:14:40.860"/>
</kw>
<msg timestamp="20210616 03:14:40.861" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210616 03:14:40.856" endtime="20210616 03:14:40.861"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:14:40.864" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20210616 03:14:40.863" endtime="20210616 03:14:40.864"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:14:40.865" level="INFO">${result} = /testdir3</msg>
<status status="PASS" starttime="20210616 03:14:40.864" endtime="20210616 03:14:40.865"/>
</kw>
<status status="PASS" starttime="20210616 03:14:40.862" endtime="20210616 03:14:40.865"/>
</kw>
<msg timestamp="20210616 03:14:40.865" level="INFO">${path_with_leading} = /testdir3</msg>
<status status="PASS" starttime="20210616 03:14:40.861" endtime="20210616 03:14:40.865"/>
</kw>
<status status="PASS" starttime="20210616 03:14:40.855" endtime="20210616 03:14:40.866"/>
</kw>
<msg timestamp="20210616 03:14:40.866" level="INFO">${url} = ofs://om/fstest2/27752-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20210616 03:14:40.855" endtime="20210616 03:14:40.866"/>
</kw>
<msg timestamp="20210616 03:14:40.866" level="INFO">${target} = ofs://om/fstest2/27752-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20210616 03:14:40.854" endtime="20210616 03:14:40.866"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:40.871" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest2/27752-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:44.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:44.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:14:40.868" endtime="20210616 03:14:44.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:44.596" level="INFO"/>
<status status="PASS" starttime="20210616 03:14:44.595" endtime="20210616 03:14:44.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:44.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:44.597" endtime="20210616 03:14:44.597"/>
</kw>
<status status="PASS" starttime="20210616 03:14:40.867" endtime="20210616 03:14:44.598"/>
</kw>
<msg timestamp="20210616 03:14:44.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:40.867" endtime="20210616 03:14:44.598"/>
</kw>
<status status="PASS" starttime="20210616 03:14:40.866" endtime="20210616 03:14:44.598"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:44.603" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/27752-bucket1-ofs//testdir1/localdir1 ofs://om/fstest2/27752-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:50.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:50.754" level="INFO">${output} = 2021-06-16 03:14:48,602 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:14:48,680 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:14:44.601" endtime="20210616 03:14:50.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:50.756" level="INFO">2021-06-16 03:14:48,602 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:14:48,680 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:14:48,680 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:14:49,933 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:14:49,934 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-1BDDF0924202-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:14:49,935 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:14:50.755" endtime="20210616 03:14:50.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:50.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:50.756" endtime="20210616 03:14:50.758"/>
</kw>
<status status="PASS" starttime="20210616 03:14:44.600" endtime="20210616 03:14:50.758"/>
</kw>
<msg timestamp="20210616 03:14:50.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:44.600" endtime="20210616 03:14:50.758"/>
</kw>
<status status="PASS" starttime="20210616 03:14:44.599" endtime="20210616 03:14:50.759"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:50.763" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest2/27752-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:14:54.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:14:54.662" level="INFO">${output} = 2021-06-16 03:14:54,316 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:14:54,503 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210616 03:14:50.761" endtime="20210616 03:14:54.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:14:54.664" level="INFO">2021-06-16 03:14:54,316 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:14:54,503 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest2/27752-bucket3-ofs/testdir3' to trash at: ofs://om/fstest2/27752-bucket3-ofs/.Trash/root/Current/fstest2/27752-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20210616 03:14:54.663" endtime="20210616 03:14:54.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:14:54.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:14:54.664" endtime="20210616 03:14:54.665"/>
</kw>
<status status="PASS" starttime="20210616 03:14:50.760" endtime="20210616 03:14:54.666"/>
</kw>
<msg timestamp="20210616 03:14:54.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:50.760" endtime="20210616 03:14:54.666"/>
</kw>
<status status="PASS" starttime="20210616 03:14:50.759" endtime="20210616 03:14:54.669"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:14:40.853" endtime="20210616 03:14:54.669"/>
</test>
<test id="s1-s3-t19" name="List file created via shell">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:14:54.680" level="INFO">Running command 'ozone sh key put fstest1/27752-bucket1-ofs/ofs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:01.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:15:01.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:14:54.674" endtime="20210616 03:15:01.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:01.052" level="INFO"/>
<status status="PASS" starttime="20210616 03:15:01.052" endtime="20210616 03:15:01.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:15:01.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:15:01.053" endtime="20210616 03:15:01.053"/>
</kw>
<status status="PASS" starttime="20210616 03:14:54.673" endtime="20210616 03:15:01.054"/>
</kw>
<msg timestamp="20210616 03:15:01.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:14:54.672" endtime="20210616 03:15:01.054"/>
</kw>
<status status="PASS" starttime="20210616 03:14:54.672" endtime="20210616 03:15:01.054"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:01.059" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/27752-bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:05.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:15:05.076" level="INFO">${output} = -rw-rw-rw-   3 root root      17526 2021-06-16 03:15 ofs://om/fstest1/27752-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210616 03:15:01.057" endtime="20210616 03:15:05.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:05.077" level="INFO">-rw-rw-rw-   3 root root      17526 2021-06-16 03:15 ofs://om/fstest1/27752-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210616 03:15:05.076" endtime="20210616 03:15:05.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:15:05.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:15:05.078" endtime="20210616 03:15:05.078"/>
</kw>
<status status="PASS" starttime="20210616 03:15:01.056" endtime="20210616 03:15:05.079"/>
</kw>
<msg timestamp="20210616 03:15:05.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:15:01.055" endtime="20210616 03:15:05.080"/>
</kw>
<msg timestamp="20210616 03:15:05.080" level="INFO">${result} = -rw-rw-rw-   3 root root      17526 2021-06-16 03:15 ofs://om/fstest1/27752-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210616 03:15:01.055" endtime="20210616 03:15:05.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:15:05.081" endtime="20210616 03:15:05.081"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:14:54.671" endtime="20210616 03:15:05.081"/>
</test>
<test id="s1-s3-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:05.086" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/27752-bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:08.831" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:15:08.831" level="INFO">${output} = copyFromLocal: `ofs://om/fstest1/27752-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210616 03:15:05.084" endtime="20210616 03:15:08.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:08.833" level="INFO">copyFromLocal: `ofs://om/fstest1/27752-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210616 03:15:08.832" endtime="20210616 03:15:08.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:15:08.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:15:08.833" endtime="20210616 03:15:08.834"/>
</kw>
<msg timestamp="20210616 03:15:08.834" level="INFO">${result} = copyFromLocal: `ofs://om/fstest1/27752-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210616 03:15:05.083" endtime="20210616 03:15:08.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:15:08.834" endtime="20210616 03:15:08.835"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:15:05.082" endtime="20210616 03:15:08.835"/>
</test>
<test id="s1-s3-t21" name="Get file">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:08.841" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:08.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:15:08.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:15:08.838" endtime="20210616 03:15:08.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:08.845" level="INFO"/>
<status status="PASS" starttime="20210616 03:15:08.845" endtime="20210616 03:15:08.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:15:08.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:15:08.846" endtime="20210616 03:15:08.846"/>
</kw>
<status status="PASS" starttime="20210616 03:15:08.838" endtime="20210616 03:15:08.847"/>
</kw>
<msg timestamp="20210616 03:15:08.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:15:08.837" endtime="20210616 03:15:08.847"/>
</kw>
<status status="PASS" starttime="20210616 03:15:08.837" endtime="20210616 03:15:08.847"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:08.851" level="INFO">Running command 'ozone fs -get ofs://om/fstest1/27752-bucket1-ofs/ofs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:14.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:15:14.609" level="INFO">${output} = 2021-06-16 03:15:12,726 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:15:12,865 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:15:08.849" endtime="20210616 03:15:14.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:14.611" level="INFO">2021-06-16 03:15:12,726 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:15:12,865 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:15:12,865 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20210616 03:15:14.610" endtime="20210616 03:15:14.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:15:14.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:15:14.611" endtime="20210616 03:15:14.612"/>
</kw>
<status status="PASS" starttime="20210616 03:15:08.849" endtime="20210616 03:15:14.612"/>
</kw>
<msg timestamp="20210616 03:15:14.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:15:08.848" endtime="20210616 03:15:14.612"/>
</kw>
<status status="PASS" starttime="20210616 03:15:08.847" endtime="20210616 03:15:14.613"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210616 03:15:14.613" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210616 03:15:14.613" endtime="20210616 03:15:14.613"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:15:08.836" endtime="20210616 03:15:14.614"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20210616 03:11:31.005" endtime="20210616 03:15:14.617"/>
</suite>
<suite id="s1-s4" name="ozonefs-o3fs-link" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 03:15:20.062" level="INFO">${random} = 05392</msg>
<status status="PASS" starttime="20210616 03:15:20.062" endtime="20210616 03:15:20.062"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:15:20.063" level="INFO">${BUCKET} = 05392-link1-o3fs</msg>
<status status="PASS" starttime="20210616 03:15:20.063" endtime="20210616 03:15:20.063"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:15:20.064" level="INFO">${BUCKET2} = 05392-link2-o3fs</msg>
<status status="PASS" starttime="20210616 03:15:20.064" endtime="20210616 03:15:20.064"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:15:20.065" level="INFO">${BUCKET_IN_VOL2} = 05392-link3-o3fs</msg>
<status status="PASS" starttime="20210616 03:15:20.064" endtime="20210616 03:15:20.065"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:15:20.070" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210616 03:15:20.069" endtime="20210616 03:15:20.070"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:15:20.070" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210616 03:15:20.070" endtime="20210616 03:15:20.070"/>
</kw>
<status status="PASS" starttime="20210616 03:15:20.069" endtime="20210616 03:15:20.071"/>
</kw>
<msg timestamp="20210616 03:15:20.071" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210616 03:15:20.067" endtime="20210616 03:15:20.071"/>
</kw>
<status status="PASS" starttime="20210616 03:15:20.066" endtime="20210616 03:15:20.071"/>
</kw>
<msg timestamp="20210616 03:15:20.071" level="INFO">${url} = o3fs://05392-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210616 03:15:20.066" endtime="20210616 03:15:20.071"/>
</kw>
<msg timestamp="20210616 03:15:20.072" level="INFO">${BASE_URL} = o3fs://05392-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210616 03:15:20.065" endtime="20210616 03:15:20.072"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:15:20.072" level="INFO">${BASE_URL} = o3fs://05392-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210616 03:15:20.072" endtime="20210616 03:15:20.073"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:15:20.075" level="INFO">${DEEP_URL} = o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir</msg>
<status status="PASS" starttime="20210616 03:15:20.073" endtime="20210616 03:15:20.075"/>
</kw>
<status status="PASS" starttime="20210616 03:15:20.062" endtime="20210616 03:15:20.075"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:20.079" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:23.951" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:15:23.951" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:15:20.076" endtime="20210616 03:15:23.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:23.952" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:15:23.952" endtime="20210616 03:15:23.952"/>
</kw>
<status status="PASS" starttime="20210616 03:15:20.075" endtime="20210616 03:15:23.953"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:23.956" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:27.869" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:15:27.869" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:15:23.954" endtime="20210616 03:15:27.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:27.870" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:15:27.870" endtime="20210616 03:15:27.870"/>
</kw>
<status status="PASS" starttime="20210616 03:15:23.953" endtime="20210616 03:15:27.871"/>
</kw>
<status status="PASS" starttime="20210616 03:15:20.075" endtime="20210616 03:15:27.871"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:27.875" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:31.617" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:15:31.618" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:15:27.873" endtime="20210616 03:15:31.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:31.619" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:15:31.618" endtime="20210616 03:15:31.619"/>
</kw>
<status status="PASS" starttime="20210616 03:15:27.872" endtime="20210616 03:15:31.619"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:31.623" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:35.377" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:15:35.378" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:15:31.620" endtime="20210616 03:15:35.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:35.379" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:15:35.378" endtime="20210616 03:15:35.379"/>
</kw>
<status status="PASS" starttime="20210616 03:15:31.619" endtime="20210616 03:15:35.379"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:35.383" level="INFO">Running command 'ozone sh bucket create fstest1-src/05392-link1-o3fs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:39.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:15:39.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:15:35.381" endtime="20210616 03:15:39.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:39.345" level="INFO"/>
<status status="PASS" starttime="20210616 03:15:39.339" endtime="20210616 03:15:39.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:15:39.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:15:39.345" endtime="20210616 03:15:39.346"/>
</kw>
<status status="PASS" starttime="20210616 03:15:35.381" endtime="20210616 03:15:39.346"/>
</kw>
<msg timestamp="20210616 03:15:39.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:15:35.380" endtime="20210616 03:15:39.346"/>
</kw>
<status status="PASS" starttime="20210616 03:15:35.379" endtime="20210616 03:15:39.347"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:39.351" level="INFO">Running command 'ozone sh bucket create fstest1-src/05392-link2-o3fs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:43.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:15:43.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:15:39.349" endtime="20210616 03:15:43.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:43.061" level="INFO"/>
<status status="PASS" starttime="20210616 03:15:43.060" endtime="20210616 03:15:43.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:15:43.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:15:43.061" endtime="20210616 03:15:43.062"/>
</kw>
<status status="PASS" starttime="20210616 03:15:39.348" endtime="20210616 03:15:43.062"/>
</kw>
<msg timestamp="20210616 03:15:43.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:15:39.348" endtime="20210616 03:15:43.062"/>
</kw>
<status status="PASS" starttime="20210616 03:15:39.347" endtime="20210616 03:15:43.063"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:43.067" level="INFO">Running command 'ozone sh bucket create fstest2-src/05392-link3-o3fs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:47.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:15:47.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:15:43.064" endtime="20210616 03:15:47.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:47.056" level="INFO"/>
<status status="PASS" starttime="20210616 03:15:47.055" endtime="20210616 03:15:47.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:15:47.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:15:47.056" endtime="20210616 03:15:47.057"/>
</kw>
<status status="PASS" starttime="20210616 03:15:43.064" endtime="20210616 03:15:47.057"/>
</kw>
<msg timestamp="20210616 03:15:47.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:15:43.063" endtime="20210616 03:15:47.057"/>
</kw>
<status status="PASS" starttime="20210616 03:15:43.063" endtime="20210616 03:15:47.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:47.062" level="INFO">Running command 'ozone sh bucket link fstest1-src/05392-link1-o3fs-src fstest1/05392-link1-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:51.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:15:51.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:15:47.060" endtime="20210616 03:15:51.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:51.049" level="INFO"/>
<status status="PASS" starttime="20210616 03:15:51.048" endtime="20210616 03:15:51.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:15:51.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:15:51.049" endtime="20210616 03:15:51.050"/>
</kw>
<status status="PASS" starttime="20210616 03:15:47.059" endtime="20210616 03:15:51.050"/>
</kw>
<msg timestamp="20210616 03:15:51.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:15:47.059" endtime="20210616 03:15:51.050"/>
</kw>
<status status="PASS" starttime="20210616 03:15:47.058" endtime="20210616 03:15:51.050"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:51.055" level="INFO">Running command 'ozone sh bucket link fstest1-src/05392-link2-o3fs-src fstest1/05392-link2-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:55.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:15:55.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:15:51.052" endtime="20210616 03:15:55.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:55.282" level="INFO"/>
<status status="PASS" starttime="20210616 03:15:55.281" endtime="20210616 03:15:55.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:15:55.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:15:55.282" endtime="20210616 03:15:55.283"/>
</kw>
<status status="PASS" starttime="20210616 03:15:51.052" endtime="20210616 03:15:55.284"/>
</kw>
<msg timestamp="20210616 03:15:55.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:15:51.051" endtime="20210616 03:15:55.284"/>
</kw>
<status status="PASS" starttime="20210616 03:15:51.051" endtime="20210616 03:15:55.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:55.289" level="INFO">Running command 'ozone sh bucket link fstest2-src/05392-link3-o3fs-src fstest2/05392-link3-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:15:59.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:15:59.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:15:55.287" endtime="20210616 03:15:59.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:15:59.260" level="INFO"/>
<status status="PASS" starttime="20210616 03:15:59.260" endtime="20210616 03:15:59.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:15:59.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:15:59.261" endtime="20210616 03:15:59.262"/>
</kw>
<status status="PASS" starttime="20210616 03:15:55.286" endtime="20210616 03:15:59.262"/>
</kw>
<msg timestamp="20210616 03:15:59.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:15:55.286" endtime="20210616 03:15:59.262"/>
</kw>
<status status="PASS" starttime="20210616 03:15:55.285" endtime="20210616 03:15:59.262"/>
</kw>
<status status="PASS" starttime="20210616 03:15:27.872" endtime="20210616 03:15:59.263"/>
</kw>
<status status="PASS" starttime="20210616 03:15:27.871" endtime="20210616 03:15:59.263"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:15:59.267" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:16:03.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:16:03.518" level="INFO">${output} = {
  "metadata" : { },
  "name" : "48892-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210616 03:15:59.265" endtime="20210616 03:16:03.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:03.519" level="INFO">{
  "metadata" : { },
  "name" : "48892-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T02:52:59.291Z",
  "modificationTime" : "2021-06-16T02:53:23.131Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "94856-source",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2021-06-16T02:42:18.070Z",
  "modificationTime" : "2021-06-16T02:42:55.576Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ]
}
{
  "metadata" : { },
  "name" : "94856-target",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 10,
  "creationTime" : "2021-06-16T02:42:22.074Z",
  "modificationTime" : "2021-06-16T02:42:52Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 6,
  "creationTime" : "2021-06-16T03:07:24.316Z",
  "modificationTime" : "2021-06-16T03:07:24.316Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-06-16T03:07:32.067Z",
  "modificationTime" : "2021-06-16T03:07:32.067Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2021-06-16T03:07:28.188Z",
  "modificationTime" : "2021-06-16T03:07:28.188Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-16T03:07:36.126Z",
  "modificationTime" : "2021-06-16T03:07:36.126Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest266",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:03:31.481Z",
  "modificationTime" : "2021-06-16T03:03:31.481Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest366",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:03:51.094Z",
  "modificationTime" : "2021-06-16T03:05:52.817Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest410",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:03:01.351Z",
  "modificationTime" : "2021-06-16T03:03:01.351Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest66",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-16T03:03:27.669Z",
  "modificationTime" : "2021-06-16T03:03:27.669Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "root",
  "owner" : "root",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-16T02:40:24.526Z",
  "modificationTime" : "2021-06-16T02:40:24.526Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-58978",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:03.846Z",
  "modificationTime" : "2021-06-16T02:41:03.846Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-1-88023",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.093Z",
  "modificationTime" : "2021-06-16T02:41:04.093Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-33168",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.108Z",
  "modificationTime" : "2021-06-16T02:41:04.108Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-85489",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.118Z",
  "modificationTime" : "2021-06-16T02:41:04.118Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-67887",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.131Z",
  "modificationTime" : "2021-06-16T02:41:04.131Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-kjegm",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:02:28.278Z",
  "modificationTime" : "2021-06-16T03:02:28.278Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" starttime="20210616 03:16:03.518" endtime="20210616 03:16:03.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:16:03.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:16:03.519" endtime="20210616 03:16:03.520"/>
</kw>
<status status="PASS" starttime="20210616 03:15:59.264" endtime="20210616 03:16:03.520"/>
</kw>
<msg timestamp="20210616 03:16:03.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:15:59.264" endtime="20210616 03:16:03.521"/>
</kw>
<msg timestamp="20210616 03:16:03.521" level="INFO">${result} = {
  "metadata" : { },
  "name" : "48892-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210616 03:15:59.263" endtime="20210616 03:16:03.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:16:03.521" endtime="20210616 03:16:03.522"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:16:03.522" endtime="20210616 03:16:03.522"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm[^@]*@EXAMPLE\.COM)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:16:03.522" endtime="20210616 03:16:03.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:16:03.527" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:16:07.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:16:07.552" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05392-link1-o3fs",
  "storageType" : "DISK",...</msg>
<status status="PASS" starttime="20210616 03:16:03.525" endtime="20210616 03:16:07.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:07.553" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05392-link1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:15:50.792Z",
  "modificationTime" : "2021-06-16T03:15:50.792Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "05392-link1-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05392-link2-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:15:55.162Z",
  "modificationTime" : "2021-06-16T03:15:55.162Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "05392-link2-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "07623-link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:07:51.385Z",
  "modificationTime" : "2021-06-16T03:07:51.385Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "07623-link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "07623-link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:07:55.321Z",
  "modificationTime" : "2021-06-16T03:07:55.321Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "07623-link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "27752-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 262890,
  "usedNamespace" : -2,
  "creationTime" : "2021-06-16T03:11:42.650Z",
  "modificationTime" : "2021-06-16T03:11:42.650Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "27752-bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : -5,
  "creationTime" : "2021-06-16T03:11:46.145Z",
  "modificationTime" : "2021-06-16T03:11:46.145Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210616 03:16:07.552" endtime="20210616 03:16:07.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:16:07.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:16:07.554" endtime="20210616 03:16:07.554"/>
</kw>
<status status="PASS" starttime="20210616 03:16:03.524" endtime="20210616 03:16:07.555"/>
</kw>
<msg timestamp="20210616 03:16:07.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:16:03.524" endtime="20210616 03:16:07.555"/>
</kw>
<msg timestamp="20210616 03:16:07.555" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05392-link1-o3fs",
  "storageType" : "DISK",...</msg>
<status status="PASS" starttime="20210616 03:16:03.523" endtime="20210616 03:16:07.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:16:07.555" endtime="20210616 03:16:07.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:16:07.556" endtime="20210616 03:16:07.557"/>
</kw>
<status status="PASS" starttime="20210616 03:15:59.263" endtime="20210616 03:16:07.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:07.558" level="INFO">Completed setup for o3fs tests with links in fstest1/05392-link1-o3fs using FS base URL: o3fs://05392-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210616 03:16:07.557" endtime="20210616 03:16:07.558"/>
</kw>
<status status="PASS" starttime="20210616 03:15:20.061" endtime="20210616 03:16:07.558"/>
</kw>
<test id="s1-s4-t1" name="List root">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:16:07.565" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210616 03:16:07.564" endtime="20210616 03:16:07.565"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:16:07.566" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210616 03:16:07.566" endtime="20210616 03:16:07.566"/>
</kw>
<status status="PASS" starttime="20210616 03:16:07.564" endtime="20210616 03:16:07.567"/>
</kw>
<msg timestamp="20210616 03:16:07.567" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210616 03:16:07.563" endtime="20210616 03:16:07.567"/>
</kw>
<status status="PASS" starttime="20210616 03:16:07.562" endtime="20210616 03:16:07.567"/>
</kw>
<msg timestamp="20210616 03:16:07.567" level="INFO">${url} = o3fs://05392-link1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20210616 03:16:07.561" endtime="20210616 03:16:07.567"/>
</kw>
<msg timestamp="20210616 03:16:07.568" level="INFO">${root} = o3fs://05392-link1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20210616 03:16:07.559" endtime="20210616 03:16:07.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:16:07.571" level="INFO">Running command 'ozone fs -ls o3fs://05392-link1-o3fs.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:16:11.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:16:11.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:16:07.569" endtime="20210616 03:16:11.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:11.462" level="INFO"/>
<status status="PASS" starttime="20210616 03:16:11.461" endtime="20210616 03:16:11.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:16:11.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:16:11.463" endtime="20210616 03:16:11.463"/>
</kw>
<status status="PASS" starttime="20210616 03:16:07.569" endtime="20210616 03:16:11.464"/>
</kw>
<msg timestamp="20210616 03:16:11.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:16:07.568" endtime="20210616 03:16:11.464"/>
</kw>
<status status="PASS" starttime="20210616 03:16:07.568" endtime="20210616 03:16:11.464"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:16:07.558" endtime="20210616 03:16:11.465"/>
</test>
<test id="s1-s4-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:16:11.473" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210616 03:16:11.473" endtime="20210616 03:16:11.473"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:16:11.474" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210616 03:16:11.473" endtime="20210616 03:16:11.474"/>
</kw>
<status status="PASS" starttime="20210616 03:16:11.472" endtime="20210616 03:16:11.474"/>
</kw>
<msg timestamp="20210616 03:16:11.475" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210616 03:16:11.470" endtime="20210616 03:16:11.475"/>
</kw>
<status status="PASS" starttime="20210616 03:16:11.469" endtime="20210616 03:16:11.475"/>
</kw>
<msg timestamp="20210616 03:16:11.475" level="INFO">${url} = o3fs://05392-link1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20210616 03:16:11.469" endtime="20210616 03:16:11.475"/>
</kw>
<msg timestamp="20210616 03:16:11.475" level="INFO">${url} = o3fs://05392-link1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20210616 03:16:11.466" endtime="20210616 03:16:11.476"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:16:11.479" level="INFO">Running command 'ozone fs -ls o3fs://05392-link1-o3fs.no-such-volume.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:16:15.001" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:16:15.001" level="INFO">${output} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210616 03:16:11.476" endtime="20210616 03:16:15.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:15.003" level="INFO">ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210616 03:16:15.002" endtime="20210616 03:16:15.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:16:15.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:16:15.003" endtime="20210616 03:16:15.004"/>
</kw>
<msg timestamp="20210616 03:16:15.004" level="INFO">${result} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210616 03:16:11.476" endtime="20210616 03:16:15.004"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:16:15.005" endtime="20210616 03:16:15.005"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:16:11.465" endtime="20210616 03:16:15.006"/>
</test>
<test id="s1-s4-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:16:15.014" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210616 03:16:15.013" endtime="20210616 03:16:15.014"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:16:15.015" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210616 03:16:15.014" endtime="20210616 03:16:15.015"/>
</kw>
<status status="PASS" starttime="20210616 03:16:15.012" endtime="20210616 03:16:15.015"/>
</kw>
<msg timestamp="20210616 03:16:15.015" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210616 03:16:15.011" endtime="20210616 03:16:15.015"/>
</kw>
<status status="PASS" starttime="20210616 03:16:15.010" endtime="20210616 03:16:15.016"/>
</kw>
<msg timestamp="20210616 03:16:15.016" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20210616 03:16:15.009" endtime="20210616 03:16:15.016"/>
</kw>
<msg timestamp="20210616 03:16:15.016" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20210616 03:16:15.008" endtime="20210616 03:16:15.016"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:16:15.019" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:16:18.864" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:16:18.864" level="INFO">${output} = ls: Bucket not found</msg>
<status status="PASS" starttime="20210616 03:16:15.017" endtime="20210616 03:16:18.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:18.866" level="INFO">ls: Bucket not found</msg>
<status status="PASS" starttime="20210616 03:16:18.865" endtime="20210616 03:16:18.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:16:18.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:16:18.866" endtime="20210616 03:16:18.867"/>
</kw>
<msg timestamp="20210616 03:16:18.867" level="INFO">${result} = ls: Bucket not found</msg>
<status status="PASS" starttime="20210616 03:16:15.016" endtime="20210616 03:16:18.867"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:16:18.867" endtime="20210616 03:16:18.868"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:16:15.007" endtime="20210616 03:16:18.869"/>
</test>
<test id="s1-s4-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:16:18.875" level="INFO">Running command 'ozone fs -mkdir -p o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:16:22.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:16:22.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:16:18.872" endtime="20210616 03:16:22.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:22.444" level="INFO"/>
<status status="PASS" starttime="20210616 03:16:22.443" endtime="20210616 03:16:22.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:16:22.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:16:22.444" endtime="20210616 03:16:22.446"/>
</kw>
<status status="PASS" starttime="20210616 03:16:18.872" endtime="20210616 03:16:22.446"/>
</kw>
<msg timestamp="20210616 03:16:22.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:16:18.871" endtime="20210616 03:16:22.447"/>
</kw>
<status status="PASS" starttime="20210616 03:16:18.870" endtime="20210616 03:16:22.447"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:16:22.452" level="INFO">Running command 'ozone sh key list fstest1/05392-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:16:26.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:16:26.548" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210616 03:16:22.449" endtime="20210616 03:16:26.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:26.549" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210616 03:16:26.549" endtime="20210616 03:16:26.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:16:26.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:16:26.550" endtime="20210616 03:16:26.550"/>
</kw>
<status status="PASS" starttime="20210616 03:16:22.449" endtime="20210616 03:16:26.551"/>
</kw>
<msg timestamp="20210616 03:16:26.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:16:22.448" endtime="20210616 03:16:26.551"/>
</kw>
<msg timestamp="20210616 03:16:26.552" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210616 03:16:22.447" endtime="20210616 03:16:26.552"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:16:26.552" endtime="20210616 03:16:26.552"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:16:18.870" endtime="20210616 03:16:26.553"/>
</test>
<test id="s1-s4-t5" name="Copy from local">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:16:26.559" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:16:32.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:16:32.450" level="INFO">${output} = 2021-06-16 03:16:30,619 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:16:30,710 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:16:26.556" endtime="20210616 03:16:32.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:32.451" level="INFO">2021-06-16 03:16:30,619 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:16:30,710 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:16:30,710 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:16:31,002 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:16:31,003 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-AAB6AF411A67-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:16:31,004 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:16:32.450" endtime="20210616 03:16:32.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:16:32.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:16:32.451" endtime="20210616 03:16:32.452"/>
</kw>
<status status="PASS" starttime="20210616 03:16:26.556" endtime="20210616 03:16:32.452"/>
</kw>
<msg timestamp="20210616 03:16:32.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:16:26.556" endtime="20210616 03:16:32.452"/>
</kw>
<status status="PASS" starttime="20210616 03:16:26.555" endtime="20210616 03:16:32.453"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:16:32.457" level="INFO">Running command 'ozone sh key list fstest1/05392-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:16:36.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:16:36.525" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:16:32.455" endtime="20210616 03:16:36.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:36.526" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:16:36.525" endtime="20210616 03:16:36.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:16:36.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:16:36.526" endtime="20210616 03:16:36.527"/>
</kw>
<status status="PASS" starttime="20210616 03:16:32.454" endtime="20210616 03:16:36.527"/>
</kw>
<msg timestamp="20210616 03:16:36.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:16:32.454" endtime="20210616 03:16:36.528"/>
</kw>
<msg timestamp="20210616 03:16:36.528" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:16:32.453" endtime="20210616 03:16:36.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:16:36.529" endtime="20210616 03:16:36.530"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:16:36.534" level="INFO">Running command 'ozone sh key info fstest1/05392-link1-o3fs/test/o3fs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:16:40.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:16:40.605" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20210616 03:16:36.532" endtime="20210616 03:16:40.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:40.607" level="INFO">3</msg>
<status status="PASS" starttime="20210616 03:16:40.606" endtime="20210616 03:16:40.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:16:40.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:16:40.607" endtime="20210616 03:16:40.608"/>
</kw>
<status status="PASS" starttime="20210616 03:16:36.531" endtime="20210616 03:16:40.608"/>
</kw>
<msg timestamp="20210616 03:16:40.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:16:36.531" endtime="20210616 03:16:40.608"/>
</kw>
<msg timestamp="20210616 03:16:40.608" level="INFO">${result} = 3</msg>
<status status="PASS" starttime="20210616 03:16:36.530" endtime="20210616 03:16:40.609"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 03:16:40.609" endtime="20210616 03:16:40.609"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:16:26.554" endtime="20210616 03:16:40.609"/>
</test>
<test id="s1-s4-t6" name="Put">
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:16:40.615" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:16:46.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:16:46.196" level="INFO">${output} = 2021-06-16 03:16:44,347 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:16:44,461 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:16:40.613" endtime="20210616 03:16:46.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:46.197" level="INFO">2021-06-16 03:16:44,347 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:16:44,461 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:16:44,461 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:16:44,735 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:16:44,736 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-00FFA745F458-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:16:44,737 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:16:46.197" endtime="20210616 03:16:46.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:16:46.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:16:46.198" endtime="20210616 03:16:46.199"/>
</kw>
<status status="PASS" starttime="20210616 03:16:40.613" endtime="20210616 03:16:46.200"/>
</kw>
<msg timestamp="20210616 03:16:46.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:16:40.612" endtime="20210616 03:16:46.200"/>
</kw>
<status status="PASS" starttime="20210616 03:16:40.611" endtime="20210616 03:16:46.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:16:46.204" level="INFO">Running command 'ozone sh key list fstest1/05392-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:16:50.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:16:50.168" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:16:46.202" endtime="20210616 03:16:50.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:50.169" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:16:50.168" endtime="20210616 03:16:50.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:16:50.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:16:50.170" endtime="20210616 03:16:50.170"/>
</kw>
<status status="PASS" starttime="20210616 03:16:46.201" endtime="20210616 03:16:50.171"/>
</kw>
<msg timestamp="20210616 03:16:50.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:16:46.201" endtime="20210616 03:16:50.171"/>
</kw>
<msg timestamp="20210616 03:16:50.171" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:16:46.200" endtime="20210616 03:16:50.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:16:50.172" endtime="20210616 03:16:50.172"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:16:40.610" endtime="20210616 03:16:50.172"/>
</test>
<test id="s1-s4-t7" name="List">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:16:50.180" level="INFO">Running command 'ozone fs -ls o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:16:54.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:16:54.108" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:16 o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-16 03:16 o3fs://05392-link1-o...</msg>
<status status="PASS" starttime="20210616 03:16:50.177" endtime="20210616 03:16:54.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:54.110" level="INFO">Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:16 o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-16 03:16 o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:16:54.109" endtime="20210616 03:16:54.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:16:54.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:16:54.110" endtime="20210616 03:16:54.111"/>
</kw>
<status status="PASS" starttime="20210616 03:16:50.175" endtime="20210616 03:16:54.111"/>
</kw>
<msg timestamp="20210616 03:16:54.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:16:50.174" endtime="20210616 03:16:54.111"/>
</kw>
<msg timestamp="20210616 03:16:54.112" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:16 o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-16 03:16 o3fs://05392-link1-o...</msg>
<status status="PASS" starttime="20210616 03:16:50.174" endtime="20210616 03:16:54.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:16:54.112" endtime="20210616 03:16:54.113"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:16:54.113" endtime="20210616 03:16:54.113"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:16:50.173" endtime="20210616 03:16:54.114"/>
</test>
<test id="s1-s4-t8" name="Move">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:16:54.120" level="INFO">Running command 'ozone fs -mv o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/NOTICE.txt o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:16:58.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:16:58.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:16:54.117" endtime="20210616 03:16:58.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:16:58.048" level="INFO"/>
<status status="PASS" starttime="20210616 03:16:58.047" endtime="20210616 03:16:58.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:16:58.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:16:58.048" endtime="20210616 03:16:58.049"/>
</kw>
<status status="PASS" starttime="20210616 03:16:54.116" endtime="20210616 03:16:58.049"/>
</kw>
<msg timestamp="20210616 03:16:58.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:16:54.116" endtime="20210616 03:16:58.050"/>
</kw>
<status status="PASS" starttime="20210616 03:16:54.115" endtime="20210616 03:16:58.050"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:16:58.055" level="INFO">Running command 'ozone sh key list fstest1/05392-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:17:02.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:17:02.354" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:16:58.052" endtime="20210616 03:17:02.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:17:02.356" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:17:02.355" endtime="20210616 03:17:02.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:17:02.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:17:02.356" endtime="20210616 03:17:02.357"/>
</kw>
<status status="PASS" starttime="20210616 03:16:58.051" endtime="20210616 03:17:02.357"/>
</kw>
<msg timestamp="20210616 03:17:02.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:16:58.051" endtime="20210616 03:17:02.357"/>
</kw>
<msg timestamp="20210616 03:17:02.358" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:16:58.050" endtime="20210616 03:17:02.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:17:02.358" endtime="20210616 03:17:02.359"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:17:02.359" endtime="20210616 03:17:02.359"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:16:54.114" endtime="20210616 03:17:02.359"/>
</test>
<test id="s1-s4-t9" name="Copy within FS">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:17:02.365" level="INFO">Running command 'ozone fs -mkdir -p o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:17:06.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:17:06.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:17:02.363" endtime="20210616 03:17:06.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:17:06.033" level="INFO"/>
<status status="PASS" starttime="20210616 03:17:06.032" endtime="20210616 03:17:06.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:17:06.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:17:06.033" endtime="20210616 03:17:06.034"/>
</kw>
<status status="PASS" starttime="20210616 03:17:02.362" endtime="20210616 03:17:06.034"/>
</kw>
<msg timestamp="20210616 03:17:06.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:17:02.362" endtime="20210616 03:17:06.035"/>
</kw>
<status status="PASS" starttime="20210616 03:17:02.361" endtime="20210616 03:17:06.035"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:17:06.041" level="INFO">Running command 'ozone fs -cp o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:17:12.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:17:12.214" level="INFO">${output} = 2021-06-16 03:17:09,841 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:17:09,933 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:17:06.038" endtime="20210616 03:17:12.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:17:12.215" level="INFO">2021-06-16 03:17:09,841 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:17:09,933 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:17:09,933 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:17:11,241 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:17:11,242 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-81095D698740-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:17:11,244 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:17:12.215" endtime="20210616 03:17:12.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:17:12.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:17:12.216" endtime="20210616 03:17:12.216"/>
</kw>
<status status="PASS" starttime="20210616 03:17:06.038" endtime="20210616 03:17:12.217"/>
</kw>
<msg timestamp="20210616 03:17:12.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:17:06.037" endtime="20210616 03:17:12.217"/>
</kw>
<status status="PASS" starttime="20210616 03:17:06.035" endtime="20210616 03:17:12.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:17:12.222" level="INFO">Running command 'ozone sh key list fstest1/05392-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:17:16.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:17:16.289" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:17:12.220" endtime="20210616 03:17:16.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:17:16.290" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:17:16.290" endtime="20210616 03:17:16.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:17:16.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:17:16.291" endtime="20210616 03:17:16.291"/>
</kw>
<status status="PASS" starttime="20210616 03:17:12.219" endtime="20210616 03:17:16.292"/>
</kw>
<msg timestamp="20210616 03:17:16.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:17:12.218" endtime="20210616 03:17:16.293"/>
</kw>
<msg timestamp="20210616 03:17:16.294" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:17:12.218" endtime="20210616 03:17:16.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:17:16.294" endtime="20210616 03:17:16.294"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:17:16.299" level="INFO">Running command 'ozone fs -ls o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:17:19.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:17:19.966" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:17 o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:17:16.296" endtime="20210616 03:17:19.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:17:19.968" level="INFO">Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:17 o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:17:19.967" endtime="20210616 03:17:19.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:17:19.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:17:19.968" endtime="20210616 03:17:19.969"/>
</kw>
<status status="PASS" starttime="20210616 03:17:16.296" endtime="20210616 03:17:19.970"/>
</kw>
<msg timestamp="20210616 03:17:19.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:17:16.295" endtime="20210616 03:17:19.970"/>
</kw>
<msg timestamp="20210616 03:17:19.970" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:17 o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:17:16.295" endtime="20210616 03:17:19.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:17:19.970" endtime="20210616 03:17:19.971"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:17:19.971" endtime="20210616 03:17:19.972"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:17:02.360" endtime="20210616 03:17:19.972"/>
</test>
<test id="s1-s4-t10" name="Cat file">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:17:19.980" level="INFO">Running command 'ozone fs -cat o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:17:25.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:17:25.454" level="INFO">${output} = 2021-06-16 03:17:23,708 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:17:23,790 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:17:19.978" endtime="20210616 03:17:25.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:17:25.455" level="INFO">2021-06-16 03:17:23,708 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:17:23,790 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:17:23,791 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Ozone
Copyright 2021 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20210616 03:17:25.454" endtime="20210616 03:17:25.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:17:25.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:17:25.455" endtime="20210616 03:17:25.456"/>
</kw>
<status status="PASS" starttime="20210616 03:17:19.977" endtime="20210616 03:17:25.457"/>
</kw>
<msg timestamp="20210616 03:17:25.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:17:19.977" endtime="20210616 03:17:25.457"/>
</kw>
<status status="PASS" starttime="20210616 03:17:19.976" endtime="20210616 03:17:25.458"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:17:19.975" endtime="20210616 03:17:25.458"/>
</test>
<test id="s1-s4-t11" name="Delete file">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:17:25.465" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:17:29.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:17:29.096" level="INFO">${output} = Deleted o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:17:25.463" endtime="20210616 03:17:29.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:17:29.098" level="INFO">Deleted o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:17:29.097" endtime="20210616 03:17:29.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:17:29.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:17:29.098" endtime="20210616 03:17:29.099"/>
</kw>
<status status="PASS" starttime="20210616 03:17:25.462" endtime="20210616 03:17:29.099"/>
</kw>
<msg timestamp="20210616 03:17:29.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:17:25.462" endtime="20210616 03:17:29.099"/>
</kw>
<status status="PASS" starttime="20210616 03:17:25.461" endtime="20210616 03:17:29.099"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:17:29.105" level="INFO">Running command 'ozone sh key list fstest1/05392-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:17:33.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:17:33.202" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210616 03:17:29.102" endtime="20210616 03:17:33.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:17:33.204" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210616 03:17:33.203" endtime="20210616 03:17:33.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:17:33.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:17:33.204" endtime="20210616 03:17:33.205"/>
</kw>
<status status="PASS" starttime="20210616 03:17:29.101" endtime="20210616 03:17:33.205"/>
</kw>
<msg timestamp="20210616 03:17:33.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:17:29.100" endtime="20210616 03:17:33.205"/>
</kw>
<msg timestamp="20210616 03:17:33.206" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210616 03:17:29.100" endtime="20210616 03:17:33.206"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:17:33.206" endtime="20210616 03:17:33.206"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:17:25.460" endtime="20210616 03:17:33.207"/>
</test>
<test id="s1-s4-t12" name="Delete dir">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:17:33.213" level="INFO">Running command 'ozone fs -rmdir o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:17:36.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:17:36.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:17:33.211" endtime="20210616 03:17:36.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:17:36.962" level="INFO"/>
<status status="PASS" starttime="20210616 03:17:36.961" endtime="20210616 03:17:36.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:17:36.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:17:36.962" endtime="20210616 03:17:36.963"/>
</kw>
<status status="PASS" starttime="20210616 03:17:33.210" endtime="20210616 03:17:36.963"/>
</kw>
<msg timestamp="20210616 03:17:36.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:17:33.210" endtime="20210616 03:17:36.964"/>
</kw>
<msg timestamp="20210616 03:17:36.964" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 03:17:33.209" endtime="20210616 03:17:36.964"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:17:36.968" level="INFO">Running command 'ozone sh key list fstest1/05392-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:17:41.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:17:41.117" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:17:36.966" endtime="20210616 03:17:41.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:17:41.119" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:17:41.118" endtime="20210616 03:17:41.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:17:41.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:17:41.119" endtime="20210616 03:17:41.120"/>
</kw>
<status status="PASS" starttime="20210616 03:17:36.966" endtime="20210616 03:17:41.120"/>
</kw>
<msg timestamp="20210616 03:17:41.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:17:36.965" endtime="20210616 03:17:41.120"/>
</kw>
<msg timestamp="20210616 03:17:41.121" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:17:36.964" endtime="20210616 03:17:41.121"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:17:41.121" endtime="20210616 03:17:41.121"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:17:33.208" endtime="20210616 03:17:41.122"/>
</test>
<test id="s1-s4-t13" name="Touch file">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:17:41.127" level="INFO">Running command 'ozone fs -touch o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:17:45.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:17:45.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:17:41.125" endtime="20210616 03:17:45.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:17:45.138" level="INFO"/>
<status status="PASS" starttime="20210616 03:17:45.137" endtime="20210616 03:17:45.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:17:45.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:17:45.139" endtime="20210616 03:17:45.139"/>
</kw>
<status status="PASS" starttime="20210616 03:17:41.125" endtime="20210616 03:17:45.140"/>
</kw>
<msg timestamp="20210616 03:17:45.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:17:41.124" endtime="20210616 03:17:45.140"/>
</kw>
<status status="PASS" starttime="20210616 03:17:41.123" endtime="20210616 03:17:45.140"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:17:45.145" level="INFO">Running command 'ozone sh key list fstest1/05392-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:17:49.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:17:49.273" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210616 03:17:45.142" endtime="20210616 03:17:49.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:17:49.274" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210616 03:17:49.273" endtime="20210616 03:17:49.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:17:49.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:17:49.274" endtime="20210616 03:17:49.275"/>
</kw>
<status status="PASS" starttime="20210616 03:17:45.142" endtime="20210616 03:17:49.275"/>
</kw>
<msg timestamp="20210616 03:17:49.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:17:45.141" endtime="20210616 03:17:49.276"/>
</kw>
<msg timestamp="20210616 03:17:49.276" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210616 03:17:45.140" endtime="20210616 03:17:49.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:17:49.276" endtime="20210616 03:17:49.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:17:41.123" endtime="20210616 03:17:49.277"/>
</test>
<test id="s1-s4-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:17:49.283" level="INFO">Running command 'ozone fs -touch o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:17:53.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:17:53.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:17:49.280" endtime="20210616 03:17:53.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:17:53.145" level="INFO"/>
<status status="PASS" starttime="20210616 03:17:53.144" endtime="20210616 03:17:53.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:17:53.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:17:53.145" endtime="20210616 03:17:53.146"/>
</kw>
<status status="PASS" starttime="20210616 03:17:49.280" endtime="20210616 03:17:53.146"/>
</kw>
<msg timestamp="20210616 03:17:53.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:17:49.279" endtime="20210616 03:17:53.147"/>
</kw>
<status status="PASS" starttime="20210616 03:17:49.279" endtime="20210616 03:17:53.147"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:17:53.152" level="INFO">Running command 'ozone fs -rm o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:17:57.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:17:57.159" level="INFO">${output} = 2021-06-16 03:17:57,001 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:17:57,072 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210616 03:17:53.150" endtime="20210616 03:17:57.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:17:57.160" level="INFO">2021-06-16 03:17:57,001 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:17:57,072 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/testFile.txt' to trash at: /.Trash/root/Current/test/o3fs/dir/testFile.txt</msg>
<status status="PASS" starttime="20210616 03:17:57.159" endtime="20210616 03:17:57.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:17:57.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:17:57.160" endtime="20210616 03:17:57.161"/>
</kw>
<status status="PASS" starttime="20210616 03:17:53.148" endtime="20210616 03:17:57.162"/>
</kw>
<msg timestamp="20210616 03:17:57.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:17:53.148" endtime="20210616 03:17:57.162"/>
</kw>
<status status="PASS" starttime="20210616 03:17:53.147" endtime="20210616 03:17:57.162"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:17:57.168" level="INFO">Running command 'ozone fs -ls -R o3fs://05392-link1-o3fs.fstest1.om/// 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:01.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:01.337" level="INFO">${output} = drwxrwxrwx   - root root          0 2021-06-16 03:17 o3fs://05392-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - root root          0 2021-06-16 03:17 o3fs://05392-link1-o3fs.fstest1.om/.Trash/root
drwxr...</msg>
<status status="PASS" starttime="20210616 03:17:57.165" endtime="20210616 03:18:01.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:01.338" level="INFO">drwxrwxrwx   - root root          0 2021-06-16 03:17 o3fs://05392-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - root root          0 2021-06-16 03:17 o3fs://05392-link1-o3fs.fstest1.om/.Trash/root
drwxrwxrwx   - root root          0 2021-06-16 03:18 o3fs://05392-link1-o3fs.fstest1.om/.Trash/root/210616031800
drwxrwxrwx   - root root          0 2021-06-16 03:18 o3fs://05392-link1-o3fs.fstest1.om/.Trash/root/210616031800/test
drwxrwxrwx   - root root          0 2021-06-16 03:18 o3fs://05392-link1-o3fs.fstest1.om/.Trash/root/210616031800/test/o3fs
drwxrwxrwx   - root root          0 2021-06-16 03:18 o3fs://05392-link1-o3fs.fstest1.om/.Trash/root/210616031800/test/o3fs/dir
-rw-rw-rw-   3 root root          0 2021-06-16 03:18 o3fs://05392-link1-o3fs.fstest1.om/.Trash/root/210616031800/test/o3fs/dir/testFile.txt
drwxrwxrwx   - root root          0 2021-06-16 03:16 o3fs://05392-link1-o3fs.fstest1.om/test
drwxrwxrwx   - root root          0 2021-06-16 03:16 o3fs://05392-link1-o3fs.fstest1.om/test/o3fs
drwxrwxrwx   - root root          0 2021-06-16 03:16 o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir
-rw-rw-rw-   3 root root      17526 2021-06-16 03:16 o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/MOVED.TXT
-rw-rw-rw-   3 root root      17526 2021-06-16 03:16 o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 root root          0 2021-06-16 03:17 o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210616 03:18:01.338" endtime="20210616 03:18:01.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:01.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:01.339" endtime="20210616 03:18:01.339"/>
</kw>
<status status="PASS" starttime="20210616 03:17:57.164" endtime="20210616 03:18:01.340"/>
</kw>
<msg timestamp="20210616 03:18:01.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:17:57.164" endtime="20210616 03:18:01.340"/>
</kw>
<msg timestamp="20210616 03:18:01.340" level="INFO">${result} = drwxrwxrwx   - root root          0 2021-06-16 03:17 o3fs://05392-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - root root          0 2021-06-16 03:17 o3fs://05392-link1-o3fs.fstest1.om/.Trash/root
drwxr...</msg>
<status status="PASS" starttime="20210616 03:17:57.162" endtime="20210616 03:18:01.340"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:18:01.341" endtime="20210616 03:18:01.341"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20210616 03:18:01.342" endtime="20210616 03:18:01.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:18:01.344" endtime="20210616 03:18:01.346"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:17:49.278" endtime="20210616 03:18:01.347"/>
</test>
<test id="s1-s4-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:01.354" level="INFO">Running command 'ozone fs -mkdir -p o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:05.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:05.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:18:01.352" endtime="20210616 03:18:05.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:05.131" level="INFO"/>
<status status="PASS" starttime="20210616 03:18:05.130" endtime="20210616 03:18:05.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:05.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:05.132" endtime="20210616 03:18:05.132"/>
</kw>
<status status="PASS" starttime="20210616 03:18:01.351" endtime="20210616 03:18:05.133"/>
</kw>
<msg timestamp="20210616 03:18:05.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:01.351" endtime="20210616 03:18:05.133"/>
</kw>
<status status="PASS" starttime="20210616 03:18:01.350" endtime="20210616 03:18:05.133"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:05.138" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://05392-link1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:08.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:08.956" level="INFO">${output} = Deleted o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20210616 03:18:05.135" endtime="20210616 03:18:08.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:08.957" level="INFO">Deleted o3fs://05392-link1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20210616 03:18:08.956" endtime="20210616 03:18:08.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:08.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:08.958" endtime="20210616 03:18:08.958"/>
</kw>
<status status="PASS" starttime="20210616 03:18:05.135" endtime="20210616 03:18:08.959"/>
</kw>
<msg timestamp="20210616 03:18:08.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:05.134" endtime="20210616 03:18:08.963"/>
</kw>
<status status="PASS" starttime="20210616 03:18:05.133" endtime="20210616 03:18:08.963"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:08.972" level="INFO">Running command 'ozone sh key list fstest1/05392-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:12.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:12.979" level="INFO">${output} = .Trash/
.Trash/root/
.Trash/root/210616031800/
.Trash/root/210616031800/test/
.Trash/root/210616031800/test/o3fs/
.Trash/root/210616031800/test/o3fs/dir/
.Trash/root/210616031800/test/o3fs/dir/testFil...</msg>
<status status="PASS" starttime="20210616 03:18:08.967" endtime="20210616 03:18:12.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:12.980" level="INFO">.Trash/
.Trash/root/
.Trash/root/210616031800/
.Trash/root/210616031800/test/
.Trash/root/210616031800/test/o3fs/
.Trash/root/210616031800/test/o3fs/dir/
.Trash/root/210616031800/test/o3fs/dir/testFile.txt
test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210616 03:18:12.980" endtime="20210616 03:18:12.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:12.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:12.981" endtime="20210616 03:18:12.981"/>
</kw>
<status status="PASS" starttime="20210616 03:18:08.966" endtime="20210616 03:18:12.982"/>
</kw>
<msg timestamp="20210616 03:18:12.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:08.966" endtime="20210616 03:18:12.982"/>
</kw>
<msg timestamp="20210616 03:18:12.982" level="INFO">${result} = .Trash/
.Trash/root/
.Trash/root/210616031800/
.Trash/root/210616031800/test/
.Trash/root/210616031800/test/o3fs/
.Trash/root/210616031800/test/o3fs/dir/
.Trash/root/210616031800/test/o3fs/dir/testFil...</msg>
<status status="PASS" starttime="20210616 03:18:08.963" endtime="20210616 03:18:12.983"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:18:12.983" endtime="20210616 03:18:12.983"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:18:01.349" endtime="20210616 03:18:12.984"/>
</test>
<test id="s1-s4-t16" name="List recursively">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:12.989" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:12.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:12.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:18:12.987" endtime="20210616 03:18:12.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:12.994" level="INFO"/>
<status status="PASS" starttime="20210616 03:18:12.993" endtime="20210616 03:18:12.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:12.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:12.995" endtime="20210616 03:18:12.995"/>
</kw>
<status status="PASS" starttime="20210616 03:18:12.987" endtime="20210616 03:18:12.996"/>
</kw>
<msg timestamp="20210616 03:18:12.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:12.986" endtime="20210616 03:18:12.996"/>
</kw>
<status status="PASS" starttime="20210616 03:18:12.986" endtime="20210616 03:18:12.996"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:12.999" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:13.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:13.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:18:12.998" endtime="20210616 03:18:13.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:13.004" level="INFO"/>
<status status="PASS" starttime="20210616 03:18:13.003" endtime="20210616 03:18:13.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:13.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:13.004" endtime="20210616 03:18:13.005"/>
</kw>
<status status="PASS" starttime="20210616 03:18:12.997" endtime="20210616 03:18:13.005"/>
</kw>
<msg timestamp="20210616 03:18:13.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:12.997" endtime="20210616 03:18:13.005"/>
</kw>
<status status="PASS" starttime="20210616 03:18:12.996" endtime="20210616 03:18:13.005"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:13.009" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:13.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:13.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:18:13.007" endtime="20210616 03:18:13.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:13.014" level="INFO"/>
<status status="PASS" starttime="20210616 03:18:13.013" endtime="20210616 03:18:13.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:13.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:13.014" endtime="20210616 03:18:13.015"/>
</kw>
<status status="PASS" starttime="20210616 03:18:13.006" endtime="20210616 03:18:13.015"/>
</kw>
<msg timestamp="20210616 03:18:13.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:13.006" endtime="20210616 03:18:13.015"/>
</kw>
<status status="PASS" starttime="20210616 03:18:13.006" endtime="20210616 03:18:13.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:13.019" level="INFO">Running command 'ozone fs -mkdir -p o3fs://05392-link1-o3fs.fstest1.om//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:16.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:16.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:18:13.017" endtime="20210616 03:18:16.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:16.942" level="INFO"/>
<status status="PASS" starttime="20210616 03:18:16.941" endtime="20210616 03:18:16.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:16.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:16.942" endtime="20210616 03:18:16.943"/>
</kw>
<status status="PASS" starttime="20210616 03:18:13.017" endtime="20210616 03:18:16.943"/>
</kw>
<msg timestamp="20210616 03:18:16.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:13.016" endtime="20210616 03:18:16.944"/>
</kw>
<status status="PASS" starttime="20210616 03:18:13.016" endtime="20210616 03:18:16.944"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:16.948" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://05392-link1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:23.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:23.057" level="INFO">${output} = 2021-06-16 03:18:20,933 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:18:21,012 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:18:16.946" endtime="20210616 03:18:23.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:23.058" level="INFO">2021-06-16 03:18:20,933 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:18:21,012 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:18:21,012 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:18:21,286 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:18:21,286 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-48745D7491F2-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:18:21,287 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:18:23.058" endtime="20210616 03:18:23.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:23.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:23.059" endtime="20210616 03:18:23.059"/>
</kw>
<status status="PASS" starttime="20210616 03:18:16.945" endtime="20210616 03:18:23.060"/>
</kw>
<msg timestamp="20210616 03:18:23.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:16.945" endtime="20210616 03:18:23.060"/>
</kw>
<status status="PASS" starttime="20210616 03:18:16.944" endtime="20210616 03:18:23.060"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:23.065" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://05392-link1-o3fs.fstest1.om//testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:28.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:28.821" level="INFO">${output} = 2021-06-16 03:18:26,974 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:18:27,056 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:18:23.063" endtime="20210616 03:18:28.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:28.822" level="INFO">2021-06-16 03:18:26,974 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:18:27,056 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:18:27,056 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:18:27,384 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:18:27,384 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-994D87AC5D72-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:18:27,386 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:18:28.822" endtime="20210616 03:18:28.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:28.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:28.823" endtime="20210616 03:18:28.823"/>
</kw>
<status status="PASS" starttime="20210616 03:18:23.062" endtime="20210616 03:18:28.824"/>
</kw>
<msg timestamp="20210616 03:18:28.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:23.062" endtime="20210616 03:18:28.824"/>
</kw>
<status status="PASS" starttime="20210616 03:18:23.061" endtime="20210616 03:18:28.824"/>
</kw>
<status status="PASS" starttime="20210616 03:18:12.985" endtime="20210616 03:18:28.824"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:28.829" level="INFO">Running command 'ozone fs -ls -R o3fs://05392-link1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:32.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:32.773" level="INFO">${output} = -rw-rw-rw-   3 root root      17526 2021-06-16 03:18 o3fs://05392-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-16 03:18 o3fs://05392-link1-o3fs.fstest1.om/test...</msg>
<status status="PASS" starttime="20210616 03:18:28.826" endtime="20210616 03:18:32.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:32.774" level="INFO">-rw-rw-rw-   3 root root      17526 2021-06-16 03:18 o3fs://05392-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-16 03:18 o3fs://05392-link1-o3fs.fstest1.om/testdir1/localdir1
-rw-rw-rw-   3 root root      17526 2021-06-16 03:18 o3fs://05392-link1-o3fs.fstest1.om/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20210616 03:18:32.774" endtime="20210616 03:18:32.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:32.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:32.775" endtime="20210616 03:18:32.776"/>
</kw>
<status status="PASS" starttime="20210616 03:18:28.826" endtime="20210616 03:18:32.776"/>
</kw>
<msg timestamp="20210616 03:18:32.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:28.825" endtime="20210616 03:18:32.776"/>
</kw>
<msg timestamp="20210616 03:18:32.776" level="INFO">${result} = -rw-rw-rw-   3 root root      17526 2021-06-16 03:18 o3fs://05392-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-16 03:18 o3fs://05392-link1-o3fs.fstest1.om/test...</msg>
<status status="PASS" starttime="20210616 03:18:28.825" endtime="20210616 03:18:32.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:18:32.777" endtime="20210616 03:18:32.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:18:32.777" endtime="20210616 03:18:32.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:18:12.984" endtime="20210616 03:18:32.778"/>
</test>
<test id="s1-s4-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:18:32.788" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210616 03:18:32.787" endtime="20210616 03:18:32.788"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:18:32.788" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210616 03:18:32.788" endtime="20210616 03:18:32.788"/>
</kw>
<status status="PASS" starttime="20210616 03:18:32.786" endtime="20210616 03:18:32.789"/>
</kw>
<msg timestamp="20210616 03:18:32.789" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210616 03:18:32.785" endtime="20210616 03:18:32.789"/>
</kw>
<status status="PASS" starttime="20210616 03:18:32.784" endtime="20210616 03:18:32.790"/>
</kw>
<msg timestamp="20210616 03:18:32.790" level="INFO">${url} = o3fs://05392-link2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20210616 03:18:32.783" endtime="20210616 03:18:32.790"/>
</kw>
<msg timestamp="20210616 03:18:32.790" level="INFO">${target} = o3fs://05392-link2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20210616 03:18:32.783" endtime="20210616 03:18:32.790"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:32.794" level="INFO">Running command 'ozone fs -mkdir -p o3fs://05392-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:36.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:36.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:18:32.792" endtime="20210616 03:18:36.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:36.512" level="INFO"/>
<status status="PASS" starttime="20210616 03:18:36.511" endtime="20210616 03:18:36.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:36.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:36.512" endtime="20210616 03:18:36.513"/>
</kw>
<status status="PASS" starttime="20210616 03:18:32.791" endtime="20210616 03:18:36.513"/>
</kw>
<msg timestamp="20210616 03:18:36.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:32.791" endtime="20210616 03:18:36.513"/>
</kw>
<status status="PASS" starttime="20210616 03:18:32.790" endtime="20210616 03:18:36.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:36.518" level="INFO">Running command 'ozone fs -cp o3fs://05392-link1-o3fs.fstest1.om///testdir1/localdir1 o3fs://05392-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:42.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:42.704" level="INFO">${output} = 2021-06-16 03:18:40,524 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:18:40,701 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:18:36.516" endtime="20210616 03:18:42.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:42.706" level="INFO">2021-06-16 03:18:40,524 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:18:40,701 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:18:40,701 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:18:41,951 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:18:41,951 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-DB9059FCAECE-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:18:41,952 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:18:42.705" endtime="20210616 03:18:42.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:42.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:42.706" endtime="20210616 03:18:42.708"/>
</kw>
<status status="PASS" starttime="20210616 03:18:36.515" endtime="20210616 03:18:42.709"/>
</kw>
<msg timestamp="20210616 03:18:42.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:36.515" endtime="20210616 03:18:42.709"/>
</kw>
<status status="PASS" starttime="20210616 03:18:36.514" endtime="20210616 03:18:42.709"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:42.713" level="INFO">Running command 'ozone fs -rm -r o3fs://05392-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:46.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:46.793" level="INFO">${output} = 2021-06-16 03:18:46,435 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:18:46,531 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210616 03:18:42.711" endtime="20210616 03:18:46.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:46.794" level="INFO">2021-06-16 03:18:46,435 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:18:46,531 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://05392-link2-o3fs.fstest1.om/testdir2' to trash at: /.Trash/root/Current/testdir2</msg>
<status status="PASS" starttime="20210616 03:18:46.793" endtime="20210616 03:18:46.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:46.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:46.794" endtime="20210616 03:18:46.795"/>
</kw>
<status status="PASS" starttime="20210616 03:18:42.711" endtime="20210616 03:18:46.795"/>
</kw>
<msg timestamp="20210616 03:18:46.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:42.710" endtime="20210616 03:18:46.796"/>
</kw>
<status status="PASS" starttime="20210616 03:18:42.709" endtime="20210616 03:18:46.796"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:18:32.782" endtime="20210616 03:18:46.796"/>
</test>
<test id="s1-s4-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:18:46.804" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210616 03:18:46.803" endtime="20210616 03:18:46.804"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:18:46.805" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210616 03:18:46.804" endtime="20210616 03:18:46.805"/>
</kw>
<status status="PASS" starttime="20210616 03:18:46.802" endtime="20210616 03:18:46.805"/>
</kw>
<msg timestamp="20210616 03:18:46.805" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210616 03:18:46.801" endtime="20210616 03:18:46.805"/>
</kw>
<status status="PASS" starttime="20210616 03:18:46.800" endtime="20210616 03:18:46.806"/>
</kw>
<msg timestamp="20210616 03:18:46.806" level="INFO">${url} = o3fs://05392-link3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20210616 03:18:46.799" endtime="20210616 03:18:46.806"/>
</kw>
<msg timestamp="20210616 03:18:46.806" level="INFO">${target} = o3fs://05392-link3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20210616 03:18:46.798" endtime="20210616 03:18:46.806"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:46.810" level="INFO">Running command 'ozone fs -mkdir -p o3fs://05392-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:50.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:50.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:18:46.808" endtime="20210616 03:18:50.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:50.544" level="INFO"/>
<status status="PASS" starttime="20210616 03:18:50.543" endtime="20210616 03:18:50.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:50.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:50.544" endtime="20210616 03:18:50.545"/>
</kw>
<status status="PASS" starttime="20210616 03:18:46.807" endtime="20210616 03:18:50.545"/>
</kw>
<msg timestamp="20210616 03:18:50.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:46.807" endtime="20210616 03:18:50.546"/>
</kw>
<status status="PASS" starttime="20210616 03:18:46.806" endtime="20210616 03:18:50.546"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:50.552" level="INFO">Running command 'ozone fs -cp o3fs://05392-link1-o3fs.fstest1.om///testdir1/localdir1 o3fs://05392-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:18:56.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:18:56.639" level="INFO">${output} = 2021-06-16 03:18:54,448 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:18:54,581 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:18:50.548" endtime="20210616 03:18:56.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:18:56.640" level="INFO">2021-06-16 03:18:54,448 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:18:54,581 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:18:54,581 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:18:55,943 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:18:55,944 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-BA46DB7617BA-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:18:55,945 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:18:56.640" endtime="20210616 03:18:56.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:18:56.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:18:56.641" endtime="20210616 03:18:56.642"/>
</kw>
<status status="PASS" starttime="20210616 03:18:50.548" endtime="20210616 03:18:56.642"/>
</kw>
<msg timestamp="20210616 03:18:56.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:50.547" endtime="20210616 03:18:56.642"/>
</kw>
<status status="PASS" starttime="20210616 03:18:50.546" endtime="20210616 03:18:56.643"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:18:56.648" level="INFO">Running command 'ozone fs -rm -r o3fs://05392-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:19:00.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:19:00.524" level="INFO">${output} = 2021-06-16 03:19:00,237 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:19:00,347 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210616 03:18:56.645" endtime="20210616 03:19:00.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:00.525" level="INFO">2021-06-16 03:19:00,237 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:19:00,347 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://05392-link3-o3fs.fstest2.om/testdir3' to trash at: /.Trash/root/Current/testdir3</msg>
<status status="PASS" starttime="20210616 03:19:00.524" endtime="20210616 03:19:00.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:19:00.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:19:00.525" endtime="20210616 03:19:00.526"/>
</kw>
<status status="PASS" starttime="20210616 03:18:56.644" endtime="20210616 03:19:00.526"/>
</kw>
<msg timestamp="20210616 03:19:00.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:18:56.644" endtime="20210616 03:19:00.526"/>
</kw>
<status status="PASS" starttime="20210616 03:18:56.643" endtime="20210616 03:19:00.527"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:18:46.797" endtime="20210616 03:19:00.527"/>
</test>
<test id="s1-s4-t19" name="List file created via shell">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:19:00.532" level="INFO">Running command 'ozone sh key put fstest1/05392-link1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:19:06.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:19:06.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:19:00.530" endtime="20210616 03:19:06.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:06.887" level="INFO"/>
<status status="PASS" starttime="20210616 03:19:06.886" endtime="20210616 03:19:06.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:19:06.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:19:06.887" endtime="20210616 03:19:06.888"/>
</kw>
<status status="PASS" starttime="20210616 03:19:00.530" endtime="20210616 03:19:06.888"/>
</kw>
<msg timestamp="20210616 03:19:06.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:19:00.529" endtime="20210616 03:19:06.888"/>
</kw>
<status status="PASS" starttime="20210616 03:19:00.528" endtime="20210616 03:19:06.888"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:19:06.893" level="INFO">Running command 'ozone fs -ls o3fs://05392-link1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:19:10.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:19:10.850" level="INFO">${output} = -rw-rw-rw-   3 root root      17526 2021-06-16 03:19 o3fs://05392-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210616 03:19:06.891" endtime="20210616 03:19:10.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:10.851" level="INFO">-rw-rw-rw-   3 root root      17526 2021-06-16 03:19 o3fs://05392-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210616 03:19:10.850" endtime="20210616 03:19:10.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:19:10.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:19:10.852" endtime="20210616 03:19:10.852"/>
</kw>
<status status="PASS" starttime="20210616 03:19:06.890" endtime="20210616 03:19:10.853"/>
</kw>
<msg timestamp="20210616 03:19:10.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:19:06.890" endtime="20210616 03:19:10.853"/>
</kw>
<msg timestamp="20210616 03:19:10.853" level="INFO">${result} = -rw-rw-rw-   3 root root      17526 2021-06-16 03:19 o3fs://05392-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210616 03:19:06.889" endtime="20210616 03:19:10.853"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:19:10.854" endtime="20210616 03:19:10.854"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:19:00.527" endtime="20210616 03:19:10.854"/>
</test>
<test id="s1-s4-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:19:10.859" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://05392-link1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:19:14.863" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:19:14.863" level="INFO">${output} = copyFromLocal: `o3fs://05392-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210616 03:19:10.857" endtime="20210616 03:19:14.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:14.865" level="INFO">copyFromLocal: `o3fs://05392-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210616 03:19:14.864" endtime="20210616 03:19:14.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:19:14.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:19:14.865" endtime="20210616 03:19:14.866"/>
</kw>
<msg timestamp="20210616 03:19:14.866" level="INFO">${result} = copyFromLocal: `o3fs://05392-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210616 03:19:10.856" endtime="20210616 03:19:14.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:19:14.867" endtime="20210616 03:19:14.867"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:19:10.855" endtime="20210616 03:19:14.867"/>
</test>
<test id="s1-s4-t21" name="Get file">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:19:14.873" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:19:14.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:19:14.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:19:14.871" endtime="20210616 03:19:14.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:14.878" level="INFO"/>
<status status="PASS" starttime="20210616 03:19:14.877" endtime="20210616 03:19:14.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:19:14.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:19:14.878" endtime="20210616 03:19:14.879"/>
</kw>
<status status="PASS" starttime="20210616 03:19:14.870" endtime="20210616 03:19:14.879"/>
</kw>
<msg timestamp="20210616 03:19:14.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:19:14.870" endtime="20210616 03:19:14.879"/>
</kw>
<status status="PASS" starttime="20210616 03:19:14.869" endtime="20210616 03:19:14.879"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:19:14.884" level="INFO">Running command 'ozone fs -get o3fs://05392-link1-o3fs.fstest1.om//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:19:20.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:19:20.623" level="INFO">${output} = 2021-06-16 03:19:18,584 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:19:18,734 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:19:14.881" endtime="20210616 03:19:20.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:20.624" level="INFO">2021-06-16 03:19:18,584 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:19:18,734 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:19:18,734 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20210616 03:19:20.624" endtime="20210616 03:19:20.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:19:20.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:19:20.625" endtime="20210616 03:19:20.626"/>
</kw>
<status status="PASS" starttime="20210616 03:19:14.881" endtime="20210616 03:19:20.626"/>
</kw>
<msg timestamp="20210616 03:19:20.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:19:14.880" endtime="20210616 03:19:20.626"/>
</kw>
<status status="PASS" starttime="20210616 03:19:14.880" endtime="20210616 03:19:20.627"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210616 03:19:20.627" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210616 03:19:20.627" endtime="20210616 03:19:20.627"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:19:14.868" endtime="20210616 03:19:20.628"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20210616 03:15:19.984" endtime="20210616 03:19:20.630"/>
</suite>
<suite id="s1-s5" name="ozonefs-o3fs-bucket" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 03:19:26.183" level="INFO">${random} = 78779</msg>
<status status="PASS" starttime="20210616 03:19:26.183" endtime="20210616 03:19:26.183"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:19:26.184" level="INFO">${BUCKET} = 78779-bucket1-o3fs</msg>
<status status="PASS" starttime="20210616 03:19:26.183" endtime="20210616 03:19:26.184"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:19:26.185" level="INFO">${BUCKET2} = 78779-bucket2-o3fs</msg>
<status status="PASS" starttime="20210616 03:19:26.184" endtime="20210616 03:19:26.185"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:19:26.186" level="INFO">${BUCKET_IN_VOL2} = 78779-bucket3-o3fs</msg>
<status status="PASS" starttime="20210616 03:19:26.185" endtime="20210616 03:19:26.186"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:19:26.191" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210616 03:19:26.190" endtime="20210616 03:19:26.191"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:19:26.192" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210616 03:19:26.191" endtime="20210616 03:19:26.192"/>
</kw>
<status status="PASS" starttime="20210616 03:19:26.190" endtime="20210616 03:19:26.192"/>
</kw>
<msg timestamp="20210616 03:19:26.192" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210616 03:19:26.189" endtime="20210616 03:19:26.192"/>
</kw>
<status status="PASS" starttime="20210616 03:19:26.187" endtime="20210616 03:19:26.193"/>
</kw>
<msg timestamp="20210616 03:19:26.193" level="INFO">${url} = o3fs://78779-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210616 03:19:26.187" endtime="20210616 03:19:26.193"/>
</kw>
<msg timestamp="20210616 03:19:26.193" level="INFO">${BASE_URL} = o3fs://78779-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210616 03:19:26.186" endtime="20210616 03:19:26.193"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:19:26.194" level="INFO">${BASE_URL} = o3fs://78779-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210616 03:19:26.193" endtime="20210616 03:19:26.194"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:19:26.196" level="INFO">${DEEP_URL} = o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir</msg>
<status status="PASS" starttime="20210616 03:19:26.194" endtime="20210616 03:19:26.196"/>
</kw>
<status status="PASS" starttime="20210616 03:19:26.182" endtime="20210616 03:19:26.196"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:19:26.201" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:19:30.145" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:19:30.145" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:19:26.197" endtime="20210616 03:19:30.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:30.146" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:19:30.146" endtime="20210616 03:19:30.146"/>
</kw>
<status status="PASS" starttime="20210616 03:19:26.197" endtime="20210616 03:19:30.147"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:19:30.152" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:19:33.987" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:19:33.987" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:19:30.148" endtime="20210616 03:19:33.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:33.988" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210616 03:19:33.987" endtime="20210616 03:19:33.988"/>
</kw>
<status status="PASS" starttime="20210616 03:19:30.147" endtime="20210616 03:19:33.988"/>
</kw>
<status status="PASS" starttime="20210616 03:19:26.196" endtime="20210616 03:19:33.989"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create buckets for FS test" library="setup">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:19:33.995" level="INFO">Running command 'ozone sh bucket create fstest1/78779-bucket1-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:19:37.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:19:37.921" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:19:33.992" endtime="20210616 03:19:37.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:37.923" level="INFO"/>
<status status="PASS" starttime="20210616 03:19:37.922" endtime="20210616 03:19:37.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:19:37.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:19:37.923" endtime="20210616 03:19:37.924"/>
</kw>
<status status="PASS" starttime="20210616 03:19:33.992" endtime="20210616 03:19:37.924"/>
</kw>
<msg timestamp="20210616 03:19:37.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:19:33.991" endtime="20210616 03:19:37.924"/>
</kw>
<status status="PASS" starttime="20210616 03:19:33.990" endtime="20210616 03:19:37.925"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:19:37.928" level="INFO">Running command 'ozone sh bucket create fstest1/78779-bucket2-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:19:42.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:19:42.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:19:37.926" endtime="20210616 03:19:42.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:42.063" level="INFO"/>
<status status="PASS" starttime="20210616 03:19:42.062" endtime="20210616 03:19:42.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:19:42.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:19:42.063" endtime="20210616 03:19:42.064"/>
</kw>
<status status="PASS" starttime="20210616 03:19:37.926" endtime="20210616 03:19:42.065"/>
</kw>
<msg timestamp="20210616 03:19:42.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:19:37.925" endtime="20210616 03:19:42.065"/>
</kw>
<status status="PASS" starttime="20210616 03:19:37.925" endtime="20210616 03:19:42.065"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:19:42.069" level="INFO">Running command 'ozone sh bucket create fstest2/78779-bucket3-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:19:46.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:19:46.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:19:42.067" endtime="20210616 03:19:46.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:46.015" level="INFO"/>
<status status="PASS" starttime="20210616 03:19:46.014" endtime="20210616 03:19:46.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:19:46.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:19:46.015" endtime="20210616 03:19:46.016"/>
</kw>
<status status="PASS" starttime="20210616 03:19:42.067" endtime="20210616 03:19:46.016"/>
</kw>
<msg timestamp="20210616 03:19:46.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:19:42.066" endtime="20210616 03:19:46.016"/>
</kw>
<status status="PASS" starttime="20210616 03:19:42.066" endtime="20210616 03:19:46.016"/>
</kw>
<status status="PASS" starttime="20210616 03:19:33.989" endtime="20210616 03:19:46.017"/>
</kw>
<status status="PASS" starttime="20210616 03:19:33.989" endtime="20210616 03:19:46.017"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:19:46.022" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:19:49.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:19:49.959" level="INFO">${output} = {
  "metadata" : { },
  "name" : "48892-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210616 03:19:46.019" endtime="20210616 03:19:49.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:49.960" level="INFO">{
  "metadata" : { },
  "name" : "48892-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T02:52:59.291Z",
  "modificationTime" : "2021-06-16T02:53:23.131Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "94856-source",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2021-06-16T02:42:18.070Z",
  "modificationTime" : "2021-06-16T02:42:55.576Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ]
}
{
  "metadata" : { },
  "name" : "94856-target",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 10,
  "creationTime" : "2021-06-16T02:42:22.074Z",
  "modificationTime" : "2021-06-16T02:42:52Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 8,
  "creationTime" : "2021-06-16T03:07:24.316Z",
  "modificationTime" : "2021-06-16T03:07:24.316Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-06-16T03:07:32.067Z",
  "modificationTime" : "2021-06-16T03:07:32.067Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-06-16T03:07:28.188Z",
  "modificationTime" : "2021-06-16T03:07:28.188Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-16T03:07:36.126Z",
  "modificationTime" : "2021-06-16T03:07:36.126Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest266",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:03:31.481Z",
  "modificationTime" : "2021-06-16T03:03:31.481Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest366",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:03:51.094Z",
  "modificationTime" : "2021-06-16T03:05:52.817Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest410",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:03:01.351Z",
  "modificationTime" : "2021-06-16T03:03:01.351Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest66",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-16T03:03:27.669Z",
  "modificationTime" : "2021-06-16T03:03:27.669Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "root",
  "owner" : "root",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-16T02:40:24.526Z",
  "modificationTime" : "2021-06-16T02:40:24.526Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-58978",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:03.846Z",
  "modificationTime" : "2021-06-16T02:41:03.846Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-1-88023",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.093Z",
  "modificationTime" : "2021-06-16T02:41:04.093Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-33168",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.108Z",
  "modificationTime" : "2021-06-16T02:41:04.108Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-85489",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.118Z",
  "modificationTime" : "2021-06-16T02:41:04.118Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-67887",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.131Z",
  "modificationTime" : "2021-06-16T02:41:04.131Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-kjegm",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:02:28.278Z",
  "modificationTime" : "2021-06-16T03:02:28.278Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" starttime="20210616 03:19:49.959" endtime="20210616 03:19:49.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:19:49.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:19:49.961" endtime="20210616 03:19:49.961"/>
</kw>
<status status="PASS" starttime="20210616 03:19:46.018" endtime="20210616 03:19:49.962"/>
</kw>
<msg timestamp="20210616 03:19:49.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:19:46.018" endtime="20210616 03:19:49.963"/>
</kw>
<msg timestamp="20210616 03:19:49.963" level="INFO">${result} = {
  "metadata" : { },
  "name" : "48892-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210616 03:19:46.017" endtime="20210616 03:19:49.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:19:49.963" endtime="20210616 03:19:49.964"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:19:49.964" endtime="20210616 03:19:49.964"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm[^@]*@EXAMPLE\.COM)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:19:49.964" endtime="20210616 03:19:49.966"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:19:49.969" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:19:54.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:19:54.187" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05392-link1-o3fs",
  "storageType" : "DISK",...</msg>
<status status="PASS" starttime="20210616 03:19:49.967" endtime="20210616 03:19:54.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:54.188" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05392-link1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:15:50.792Z",
  "modificationTime" : "2021-06-16T03:15:50.792Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "05392-link1-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05392-link2-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:15:55.162Z",
  "modificationTime" : "2021-06-16T03:15:55.162Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "05392-link2-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "07623-link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:07:51.385Z",
  "modificationTime" : "2021-06-16T03:07:51.385Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "07623-link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "07623-link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:07:55.321Z",
  "modificationTime" : "2021-06-16T03:07:55.321Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "07623-link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "27752-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 262890,
  "usedNamespace" : -2,
  "creationTime" : "2021-06-16T03:11:42.650Z",
  "modificationTime" : "2021-06-16T03:11:42.650Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "27752-bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : -5,
  "creationTime" : "2021-06-16T03:11:46.145Z",
  "modificationTime" : "2021-06-16T03:11:46.145Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "78779-bucket1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:19:37.739Z",
  "modificationTime" : "2021-06-16T03:19:37.739Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "78779-bucket2-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:19:41.754Z",
  "modificationTime" : "2021-06-16T03:19:41.754Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210616 03:19:54.187" endtime="20210616 03:19:54.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:19:54.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:19:54.188" endtime="20210616 03:19:54.189"/>
</kw>
<status status="PASS" starttime="20210616 03:19:49.967" endtime="20210616 03:19:54.189"/>
</kw>
<msg timestamp="20210616 03:19:54.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:19:49.966" endtime="20210616 03:19:54.189"/>
</kw>
<msg timestamp="20210616 03:19:54.190" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05392-link1-o3fs",
  "storageType" : "DISK",...</msg>
<status status="PASS" starttime="20210616 03:19:49.966" endtime="20210616 03:19:54.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:19:54.190" endtime="20210616 03:19:54.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:19:54.191" endtime="20210616 03:19:54.191"/>
</kw>
<status status="PASS" starttime="20210616 03:19:46.017" endtime="20210616 03:19:54.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:54.192" level="INFO">Completed setup for o3fs tests with buckets in fstest1/78779-bucket1-o3fs using FS base URL: o3fs://78779-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210616 03:19:54.192" endtime="20210616 03:19:54.192"/>
</kw>
<status status="PASS" starttime="20210616 03:19:26.182" endtime="20210616 03:19:54.192"/>
</kw>
<test id="s1-s5-t1" name="List root">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:19:54.200" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210616 03:19:54.199" endtime="20210616 03:19:54.200"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:19:54.201" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210616 03:19:54.200" endtime="20210616 03:19:54.201"/>
</kw>
<status status="PASS" starttime="20210616 03:19:54.199" endtime="20210616 03:19:54.201"/>
</kw>
<msg timestamp="20210616 03:19:54.201" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210616 03:19:54.197" endtime="20210616 03:19:54.201"/>
</kw>
<status status="PASS" starttime="20210616 03:19:54.196" endtime="20210616 03:19:54.202"/>
</kw>
<msg timestamp="20210616 03:19:54.202" level="INFO">${url} = o3fs://78779-bucket1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20210616 03:19:54.196" endtime="20210616 03:19:54.202"/>
</kw>
<msg timestamp="20210616 03:19:54.202" level="INFO">${root} = o3fs://78779-bucket1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20210616 03:19:54.194" endtime="20210616 03:19:54.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:19:54.206" level="INFO">Running command 'ozone fs -ls o3fs://78779-bucket1-o3fs.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:19:58.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:19:58.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:19:54.204" endtime="20210616 03:19:58.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:19:58.124" level="INFO"/>
<status status="PASS" starttime="20210616 03:19:58.123" endtime="20210616 03:19:58.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:19:58.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:19:58.124" endtime="20210616 03:19:58.125"/>
</kw>
<status status="PASS" starttime="20210616 03:19:54.203" endtime="20210616 03:19:58.125"/>
</kw>
<msg timestamp="20210616 03:19:58.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:19:54.203" endtime="20210616 03:19:58.125"/>
</kw>
<status status="PASS" starttime="20210616 03:19:54.203" endtime="20210616 03:19:58.126"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:19:54.193" endtime="20210616 03:19:58.126"/>
</test>
<test id="s1-s5-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:19:58.134" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210616 03:19:58.133" endtime="20210616 03:19:58.134"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:19:58.135" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210616 03:19:58.134" endtime="20210616 03:19:58.135"/>
</kw>
<status status="PASS" starttime="20210616 03:19:58.132" endtime="20210616 03:19:58.135"/>
</kw>
<msg timestamp="20210616 03:19:58.135" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210616 03:19:58.131" endtime="20210616 03:19:58.135"/>
</kw>
<status status="PASS" starttime="20210616 03:19:58.130" endtime="20210616 03:19:58.136"/>
</kw>
<msg timestamp="20210616 03:19:58.136" level="INFO">${url} = o3fs://78779-bucket1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20210616 03:19:58.129" endtime="20210616 03:19:58.136"/>
</kw>
<msg timestamp="20210616 03:19:58.136" level="INFO">${url} = o3fs://78779-bucket1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20210616 03:19:58.127" endtime="20210616 03:19:58.136"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:19:58.139" level="INFO">Running command 'ozone fs -ls o3fs://78779-bucket1-o3fs.no-such-volume.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:20:01.891" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:20:01.892" level="INFO">${output} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210616 03:19:58.137" endtime="20210616 03:20:01.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:20:01.893" level="INFO">ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210616 03:20:01.892" endtime="20210616 03:20:01.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:20:01.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:20:01.893" endtime="20210616 03:20:01.894"/>
</kw>
<msg timestamp="20210616 03:20:01.894" level="INFO">${result} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210616 03:19:58.136" endtime="20210616 03:20:01.894"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:20:01.895" endtime="20210616 03:20:01.896"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:19:58.126" endtime="20210616 03:20:01.896"/>
</test>
<test id="s1-s5-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:20:01.904" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210616 03:20:01.903" endtime="20210616 03:20:01.904"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:20:01.905" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210616 03:20:01.904" endtime="20210616 03:20:01.905"/>
</kw>
<status status="PASS" starttime="20210616 03:20:01.903" endtime="20210616 03:20:01.905"/>
</kw>
<msg timestamp="20210616 03:20:01.905" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210616 03:20:01.901" endtime="20210616 03:20:01.905"/>
</kw>
<status status="PASS" starttime="20210616 03:20:01.901" endtime="20210616 03:20:01.906"/>
</kw>
<msg timestamp="20210616 03:20:01.906" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20210616 03:20:01.900" endtime="20210616 03:20:01.906"/>
</kw>
<msg timestamp="20210616 03:20:01.906" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20210616 03:20:01.898" endtime="20210616 03:20:01.906"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:20:01.909" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:20:05.495" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:20:05.495" level="INFO">${output} = ls: Bucket not found</msg>
<status status="PASS" starttime="20210616 03:20:01.907" endtime="20210616 03:20:05.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:20:05.496" level="INFO">ls: Bucket not found</msg>
<status status="PASS" starttime="20210616 03:20:05.496" endtime="20210616 03:20:05.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:20:05.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:20:05.497" endtime="20210616 03:20:05.498"/>
</kw>
<msg timestamp="20210616 03:20:05.498" level="INFO">${result} = ls: Bucket not found</msg>
<status status="PASS" starttime="20210616 03:20:01.907" endtime="20210616 03:20:05.499"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:20:05.499" endtime="20210616 03:20:05.500"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:20:01.897" endtime="20210616 03:20:05.500"/>
</test>
<test id="s1-s5-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:20:05.506" level="INFO">Running command 'ozone fs -mkdir -p o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:20:10.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:20:10.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:20:05.504" endtime="20210616 03:20:10.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:20:10.028" level="INFO"/>
<status status="PASS" starttime="20210616 03:20:10.028" endtime="20210616 03:20:10.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:20:10.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:20:10.029" endtime="20210616 03:20:10.029"/>
</kw>
<status status="PASS" starttime="20210616 03:20:05.503" endtime="20210616 03:20:10.030"/>
</kw>
<msg timestamp="20210616 03:20:10.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:20:05.503" endtime="20210616 03:20:10.030"/>
</kw>
<status status="PASS" starttime="20210616 03:20:05.502" endtime="20210616 03:20:10.030"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:20:10.035" level="INFO">Running command 'ozone sh key list fstest1/78779-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:20:14.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:20:14.152" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210616 03:20:10.032" endtime="20210616 03:20:14.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:20:14.153" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210616 03:20:14.153" endtime="20210616 03:20:14.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:20:14.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:20:14.154" endtime="20210616 03:20:14.154"/>
</kw>
<status status="PASS" starttime="20210616 03:20:10.032" endtime="20210616 03:20:14.155"/>
</kw>
<msg timestamp="20210616 03:20:14.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:20:10.031" endtime="20210616 03:20:14.155"/>
</kw>
<msg timestamp="20210616 03:20:14.155" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210616 03:20:10.030" endtime="20210616 03:20:14.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:20:14.156" endtime="20210616 03:20:14.156"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:20:05.501" endtime="20210616 03:20:14.156"/>
</test>
<test id="s1-s5-t5" name="Copy from local">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:20:14.162" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:21:53.574" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:21:53.574" level="INFO">${output} = 2021-06-16 03:20:18,000 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:20:18,129 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:20:14.160" endtime="20210616 03:21:53.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:21:53.575" level="INFO">2021-06-16 03:20:18,000 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:20:18,129 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:20:18,129 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:20:18,437 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:20:18,438 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-923D08ABFF64-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:20:18,439 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-16 03:20:24,983 [java.util.concurrent.ThreadPoolExecutor$Worker@18d9cfd1[State = -1, empty queue]] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-923D08ABFF64-&gt;5de8ea40-18cc-4585-a347-6ddd982a1c57
2021-06-16 03:20:24,984 [java.util.concurrent.ThreadPoolExecutor$Worker@18d9cfd1[State = -1, empty queue]] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-16 03:20:46,509 [grpc-default-executor-0] WARN grpc.GrpcUtil: Timed out gracefully shutting down connection: ManagedChannelOrphanWrapper{delegate=ManagedChannelImpl{logId=7, target=172.18.0.6:9858}}. 
2021-06-16 03:20:52,709 [java.util.concurrent.ThreadPoolExecutor$Worker@3b4b7b40[State = -1, empty queue]] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-923D08ABFF64-&gt;123bb0d1-8001-4fbb-ae39-8ceb288ebc7d
2021-06-16 03:20:52,709 [java.util.concurrent.ThreadPoolExecutor$Worker@3b4b7b40[State = -1, empty queue]] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-16 03:21:14,151 [grpc-default-executor-2] WARN grpc.GrpcUtil: Timed out gracefully shutting down connection: ManagedChannelOrphanWrapper{delegate=ManagedChannelImpl{logId=14, target=172.18.0.8:9858}}. 
2021-06-16 03:21:28,291 [grpc-default-executor-2] WARN grpc.GrpcUtil: Timed out gracefully shutting down connection: ManagedChannelOrphanWrapper{delegate=ManagedChannelImpl{logId=27, target=172.18.0.6:9858}}. 
2021-06-16 03:21:49,221 [grpc-default-executor-1] WARN grpc.GrpcUtil: Timed out gracefully shutting down connection: ManagedChannelOrphanWrapper{delegate=ManagedChannelImpl{logId=40, target=172.18.0.6:9858}}. 
2021-06-16 03:21:53,109 [main] WARN io.KeyOutputStream: Encountered exception java.io.IOException: Unexpected Storage Container Exception: java.util.concurrent.CompletionException: Failed to write chunk 107544261427200180_chunk_1 into block conID: 1 locID: 107544261427200180 bcsId: 0 on the pipeline Pipeline[ Id: a792d848-9b10-4030-a85c-709bb294106a, Nodes: 1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec{ip: 172.18.0.4, host: ozonesecure_datanode_3.ozonesecure_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}5de8ea40-18cc-4585-a347-6ddd982a1c57{ip: 172.18.0.6, host: ozonesecure_datanode_1.ozonesecure_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}123bb0d1-8001-4fbb-ae39-8ceb288ebc7d{ip: 172.18.0.8, host: ozonesecure_datanode_2.ozonesecure_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec, CreationTimestamp2021-06-16T02:40:22.749Z]. The last committed block length is 0, uncommitted data length is 17526 retry count 0
copyFromLocal: INTERNAL_ERROR org.apache.hadoop.ozone.om.exceptions.OMException: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20210616 03:21:53.575" endtime="20210616 03:21:53.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:21:53.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210616 03:21:53.577" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210616 03:21:53.576" endtime="20210616 03:21:53.577"/>
</kw>
<status status="FAIL" starttime="20210616 03:20:14.159" endtime="20210616 03:21:53.577"/>
</kw>
<msg timestamp="20210616 03:21:53.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210616 03:20:14.159" endtime="20210616 03:21:53.577"/>
</kw>
<status status="FAIL" starttime="20210616 03:20:14.158" endtime="20210616 03:21:53.578"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210616 03:21:53.578" endtime="20210616 03:21:53.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210616 03:21:53.578" endtime="20210616 03:21:53.578"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
<status status="NOT RUN" starttime="20210616 03:21:53.578" endtime="20210616 03:21:53.578"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210616 03:21:53.579" endtime="20210616 03:21:53.579"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210616 03:20:14.157" endtime="20210616 03:21:53.579">1 != 0</status>
</test>
<test id="s1-s5-t6" name="Put">
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:21:53.586" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:21:57.635" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:21:57.635" level="INFO">${output} = put: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20210616 03:21:53.584" endtime="20210616 03:21:57.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:21:57.636" level="INFO">put: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20210616 03:21:57.635" endtime="20210616 03:21:57.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:21:57.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210616 03:21:57.637" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210616 03:21:57.637" endtime="20210616 03:21:57.637"/>
</kw>
<status status="FAIL" starttime="20210616 03:21:53.582" endtime="20210616 03:21:57.639"/>
</kw>
<msg timestamp="20210616 03:21:57.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210616 03:21:53.582" endtime="20210616 03:21:57.639"/>
</kw>
<status status="FAIL" starttime="20210616 03:21:53.581" endtime="20210616 03:21:57.639"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210616 03:21:57.639" endtime="20210616 03:21:57.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210616 03:21:57.639" endtime="20210616 03:21:57.640"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210616 03:21:53.580" endtime="20210616 03:21:57.640">1 != 0</status>
</test>
<test id="s1-s5-t7" name="List">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:21:57.647" level="INFO">Running command 'ozone fs -ls o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:01.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:22:01.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:21:57.644" endtime="20210616 03:22:01.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:01.242" level="INFO"/>
<status status="PASS" starttime="20210616 03:22:01.242" endtime="20210616 03:22:01.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:01.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:22:01.243" endtime="20210616 03:22:01.243"/>
</kw>
<status status="PASS" starttime="20210616 03:21:57.644" endtime="20210616 03:22:01.244"/>
</kw>
<msg timestamp="20210616 03:22:01.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:21:57.643" endtime="20210616 03:22:01.245"/>
</kw>
<msg timestamp="20210616 03:22:01.245" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 03:21:57.642" endtime="20210616 03:22:01.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210616 03:22:01.246" level="FAIL">'' does not contain 'NOTICE.txt'</msg>
<status status="FAIL" starttime="20210616 03:22:01.245" endtime="20210616 03:22:01.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210616 03:22:01.246" endtime="20210616 03:22:01.246"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210616 03:21:57.641" endtime="20210616 03:22:01.246">'' does not contain 'NOTICE.txt'</status>
</test>
<test id="s1-s5-t8" name="Move">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:01.252" level="INFO">Running command 'ozone fs -mv o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/NOTICE.txt o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:05.182" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:22:05.182" level="INFO">${output} = mv: `o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/NOTICE.txt': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:22:01.250" endtime="20210616 03:22:05.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:05.183" level="INFO">mv: `o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/NOTICE.txt': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:22:05.183" endtime="20210616 03:22:05.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:05.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210616 03:22:05.185" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210616 03:22:05.184" endtime="20210616 03:22:05.185"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:01.249" endtime="20210616 03:22:05.185"/>
</kw>
<msg timestamp="20210616 03:22:05.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210616 03:22:01.249" endtime="20210616 03:22:05.185"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:01.248" endtime="20210616 03:22:05.185"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210616 03:22:05.186" endtime="20210616 03:22:05.186"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210616 03:22:05.186" endtime="20210616 03:22:05.186"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210616 03:22:05.186" endtime="20210616 03:22:05.186"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210616 03:22:01.247" endtime="20210616 03:22:05.187">1 != 0</status>
</test>
<test id="s1-s5-t9" name="Copy within FS">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:05.193" level="INFO">Running command 'ozone fs -mkdir -p o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:09.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:22:09.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:22:05.190" endtime="20210616 03:22:09.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:09.220" level="INFO"/>
<status status="PASS" starttime="20210616 03:22:09.219" endtime="20210616 03:22:09.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:09.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:22:09.220" endtime="20210616 03:22:09.221"/>
</kw>
<status status="PASS" starttime="20210616 03:22:05.190" endtime="20210616 03:22:09.222"/>
</kw>
<msg timestamp="20210616 03:22:09.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:22:05.190" endtime="20210616 03:22:09.222"/>
</kw>
<status status="PASS" starttime="20210616 03:22:05.189" endtime="20210616 03:22:09.222"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:09.226" level="INFO">Running command 'ozone fs -cp o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:13.104" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:22:13.104" level="INFO">${output} = cp: `o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:22:09.224" endtime="20210616 03:22:13.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:13.105" level="INFO">cp: `o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:22:13.105" endtime="20210616 03:22:13.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:13.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210616 03:22:13.107" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210616 03:22:13.106" endtime="20210616 03:22:13.107"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:09.223" endtime="20210616 03:22:13.107"/>
</kw>
<msg timestamp="20210616 03:22:13.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210616 03:22:09.223" endtime="20210616 03:22:13.107"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:09.222" endtime="20210616 03:22:13.107"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210616 03:22:13.108" endtime="20210616 03:22:13.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210616 03:22:13.108" endtime="20210616 03:22:13.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<status status="NOT RUN" starttime="20210616 03:22:13.108" endtime="20210616 03:22:13.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210616 03:22:13.108" endtime="20210616 03:22:13.109"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210616 03:22:13.109" endtime="20210616 03:22:13.109"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210616 03:22:05.188" endtime="20210616 03:22:13.109">1 != 0</status>
</test>
<test id="s1-s5-t10" name="Cat file">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:13.115" level="INFO">Running command 'ozone fs -cat o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:16.956" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:22:16.956" level="INFO">${output} = cat: `o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:22:13.112" endtime="20210616 03:22:16.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:16.958" level="INFO">cat: `o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:22:16.957" endtime="20210616 03:22:16.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:16.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210616 03:22:16.959" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210616 03:22:16.958" endtime="20210616 03:22:16.959"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:13.112" endtime="20210616 03:22:16.959"/>
</kw>
<msg timestamp="20210616 03:22:16.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210616 03:22:13.111" endtime="20210616 03:22:16.960"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:13.111" endtime="20210616 03:22:16.960"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210616 03:22:13.110" endtime="20210616 03:22:16.960">1 != 0</status>
</test>
<test id="s1-s5-t11" name="Delete file">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:16.967" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:20.791" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:22:20.792" level="INFO">${output} = rm: `o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:22:16.965" endtime="20210616 03:22:20.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:20.793" level="INFO">rm: `o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:22:20.792" endtime="20210616 03:22:20.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:20.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210616 03:22:20.794" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210616 03:22:20.793" endtime="20210616 03:22:20.794"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:16.964" endtime="20210616 03:22:20.794"/>
</kw>
<msg timestamp="20210616 03:22:20.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210616 03:22:16.964" endtime="20210616 03:22:20.795"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:16.963" endtime="20210616 03:22:20.795"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210616 03:22:20.795" endtime="20210616 03:22:20.795"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210616 03:22:20.796" endtime="20210616 03:22:20.796"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210616 03:22:16.962" endtime="20210616 03:22:20.796">1 != 0</status>
</test>
<test id="s1-s5-t12" name="Delete dir">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:20.802" level="INFO">Running command 'ozone fs -rmdir o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:24.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:22:24.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:22:20.800" endtime="20210616 03:22:24.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:24.250" level="INFO"/>
<status status="PASS" starttime="20210616 03:22:24.248" endtime="20210616 03:22:24.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:24.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:22:24.250" endtime="20210616 03:22:24.251"/>
</kw>
<status status="PASS" starttime="20210616 03:22:20.799" endtime="20210616 03:22:24.251"/>
</kw>
<msg timestamp="20210616 03:22:24.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:22:20.799" endtime="20210616 03:22:24.252"/>
</kw>
<msg timestamp="20210616 03:22:24.253" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 03:22:20.798" endtime="20210616 03:22:24.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:24.259" level="INFO">Running command 'ozone sh key list fstest1/78779-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:28.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:22:28.414" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210616 03:22:24.256" endtime="20210616 03:22:28.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:28.416" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210616 03:22:28.415" endtime="20210616 03:22:28.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:28.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:22:28.416" endtime="20210616 03:22:28.416"/>
</kw>
<status status="PASS" starttime="20210616 03:22:24.255" endtime="20210616 03:22:28.417"/>
</kw>
<msg timestamp="20210616 03:22:28.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:22:24.254" endtime="20210616 03:22:28.417"/>
</kw>
<msg timestamp="20210616 03:22:28.417" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210616 03:22:24.253" endtime="20210616 03:22:28.418"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:22:28.418" endtime="20210616 03:22:28.418"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:22:20.797" endtime="20210616 03:22:28.418"/>
</test>
<test id="s1-s5-t13" name="Touch file">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:28.425" level="INFO">Running command 'ozone fs -touch o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:32.246" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:22:32.246" level="INFO">${output} = touch: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20210616 03:22:28.423" endtime="20210616 03:22:32.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:32.247" level="INFO">touch: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20210616 03:22:32.246" endtime="20210616 03:22:32.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:32.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210616 03:22:32.248" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210616 03:22:32.247" endtime="20210616 03:22:32.248"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:28.422" endtime="20210616 03:22:32.249"/>
</kw>
<msg timestamp="20210616 03:22:32.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210616 03:22:28.421" endtime="20210616 03:22:32.249"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:28.421" endtime="20210616 03:22:32.249"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210616 03:22:32.249" endtime="20210616 03:22:32.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210616 03:22:32.250" endtime="20210616 03:22:32.250"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210616 03:22:28.420" endtime="20210616 03:22:32.250">1 != 0</status>
</test>
<test id="s1-s5-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:32.257" level="INFO">Running command 'ozone fs -touch o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:36.285" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:22:36.285" level="INFO">${output} = touch: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20210616 03:22:32.254" endtime="20210616 03:22:36.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:36.287" level="INFO">touch: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20210616 03:22:36.286" endtime="20210616 03:22:36.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:36.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210616 03:22:36.288" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210616 03:22:36.287" endtime="20210616 03:22:36.288"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:32.253" endtime="20210616 03:22:36.288"/>
</kw>
<msg timestamp="20210616 03:22:36.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210616 03:22:32.252" endtime="20210616 03:22:36.288"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:32.252" endtime="20210616 03:22:36.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<status status="NOT RUN" starttime="20210616 03:22:36.289" endtime="20210616 03:22:36.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<status status="NOT RUN" starttime="20210616 03:22:36.289" endtime="20210616 03:22:36.289"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210616 03:22:36.289" endtime="20210616 03:22:36.290"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="NOT RUN" starttime="20210616 03:22:36.290" endtime="20210616 03:22:36.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210616 03:22:36.290" endtime="20210616 03:22:36.290"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210616 03:22:32.251" endtime="20210616 03:22:36.290">1 != 0</status>
</test>
<test id="s1-s5-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:36.297" level="INFO">Running command 'ozone fs -mkdir -p o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:40.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:22:40.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:22:36.294" endtime="20210616 03:22:40.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:40.487" level="INFO"/>
<status status="PASS" starttime="20210616 03:22:40.486" endtime="20210616 03:22:40.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:40.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:22:40.488" endtime="20210616 03:22:40.488"/>
</kw>
<status status="PASS" starttime="20210616 03:22:36.293" endtime="20210616 03:22:40.489"/>
</kw>
<msg timestamp="20210616 03:22:40.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:22:36.293" endtime="20210616 03:22:40.489"/>
</kw>
<status status="PASS" starttime="20210616 03:22:36.292" endtime="20210616 03:22:40.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:40.493" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://78779-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:44.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:22:44.412" level="INFO">${output} = Deleted o3fs://78779-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20210616 03:22:40.491" endtime="20210616 03:22:44.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:44.414" level="INFO">Deleted o3fs://78779-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20210616 03:22:44.413" endtime="20210616 03:22:44.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:44.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:22:44.414" endtime="20210616 03:22:44.415"/>
</kw>
<status status="PASS" starttime="20210616 03:22:40.490" endtime="20210616 03:22:44.415"/>
</kw>
<msg timestamp="20210616 03:22:44.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:22:40.490" endtime="20210616 03:22:44.415"/>
</kw>
<status status="PASS" starttime="20210616 03:22:40.489" endtime="20210616 03:22:44.416"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:44.421" level="INFO">Running command 'ozone sh key list fstest1/78779-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:48.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:22:48.516" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210616 03:22:44.418" endtime="20210616 03:22:48.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:48.518" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210616 03:22:48.517" endtime="20210616 03:22:48.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:48.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:22:48.518" endtime="20210616 03:22:48.519"/>
</kw>
<status status="PASS" starttime="20210616 03:22:44.417" endtime="20210616 03:22:48.519"/>
</kw>
<msg timestamp="20210616 03:22:48.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:22:44.417" endtime="20210616 03:22:48.519"/>
</kw>
<msg timestamp="20210616 03:22:48.520" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210616 03:22:44.416" endtime="20210616 03:22:48.520"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:22:48.520" endtime="20210616 03:22:48.521"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:22:36.291" endtime="20210616 03:22:48.521"/>
</test>
<test id="s1-s5-t16" name="List recursively">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:48.527" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:48.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:22:48.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:22:48.524" endtime="20210616 03:22:48.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:48.531" level="INFO"/>
<status status="PASS" starttime="20210616 03:22:48.530" endtime="20210616 03:22:48.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:48.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:22:48.531" endtime="20210616 03:22:48.532"/>
</kw>
<status status="PASS" starttime="20210616 03:22:48.524" endtime="20210616 03:22:48.532"/>
</kw>
<msg timestamp="20210616 03:22:48.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:22:48.523" endtime="20210616 03:22:48.532"/>
</kw>
<status status="PASS" starttime="20210616 03:22:48.523" endtime="20210616 03:22:48.533"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:48.538" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:48.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:22:48.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:22:48.536" endtime="20210616 03:22:48.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:48.542" level="INFO"/>
<status status="PASS" starttime="20210616 03:22:48.541" endtime="20210616 03:22:48.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:48.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:22:48.542" endtime="20210616 03:22:48.543"/>
</kw>
<status status="PASS" starttime="20210616 03:22:48.535" endtime="20210616 03:22:48.544"/>
</kw>
<msg timestamp="20210616 03:22:48.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:22:48.534" endtime="20210616 03:22:48.544"/>
</kw>
<status status="PASS" starttime="20210616 03:22:48.533" endtime="20210616 03:22:48.544"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:48.548" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:48.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:22:48.551" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:22:48.546" endtime="20210616 03:22:48.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:48.552" level="INFO"/>
<status status="PASS" starttime="20210616 03:22:48.551" endtime="20210616 03:22:48.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:48.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:22:48.552" endtime="20210616 03:22:48.553"/>
</kw>
<status status="PASS" starttime="20210616 03:22:48.545" endtime="20210616 03:22:48.554"/>
</kw>
<msg timestamp="20210616 03:22:48.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:22:48.545" endtime="20210616 03:22:48.554"/>
</kw>
<status status="PASS" starttime="20210616 03:22:48.544" endtime="20210616 03:22:48.554"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:48.558" level="INFO">Running command 'ozone fs -mkdir -p o3fs://78779-bucket1-o3fs.fstest1.om//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:52.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:22:52.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:22:48.556" endtime="20210616 03:22:52.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:52.519" level="INFO"/>
<status status="PASS" starttime="20210616 03:22:52.518" endtime="20210616 03:22:52.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:52.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:22:52.519" endtime="20210616 03:22:52.520"/>
</kw>
<status status="PASS" starttime="20210616 03:22:48.556" endtime="20210616 03:22:52.520"/>
</kw>
<msg timestamp="20210616 03:22:52.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:22:48.555" endtime="20210616 03:22:52.521"/>
</kw>
<status status="PASS" starttime="20210616 03:22:48.554" endtime="20210616 03:22:52.521"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:52.526" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://78779-bucket1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:22:56.395" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:22:56.396" level="INFO">${output} = copyFromLocal: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20210616 03:22:52.523" endtime="20210616 03:22:56.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:22:56.397" level="INFO">copyFromLocal: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20210616 03:22:56.396" endtime="20210616 03:22:56.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:22:56.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210616 03:22:56.398" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210616 03:22:56.397" endtime="20210616 03:22:56.398"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:52.523" endtime="20210616 03:22:56.398"/>
</kw>
<msg timestamp="20210616 03:22:56.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210616 03:22:52.522" endtime="20210616 03:22:56.399"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:52.521" endtime="20210616 03:22:56.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210616 03:22:56.399" endtime="20210616 03:22:56.399"/>
</kw>
<status status="FAIL" starttime="20210616 03:22:48.522" endtime="20210616 03:22:56.399"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210616 03:22:48.521" endtime="20210616 03:22:56.400">Setup failed:
1 != 0</status>
</test>
<test id="s1-s5-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:22:56.408" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210616 03:22:56.407" endtime="20210616 03:22:56.408"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:22:56.409" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210616 03:22:56.408" endtime="20210616 03:22:56.409"/>
</kw>
<status status="PASS" starttime="20210616 03:22:56.407" endtime="20210616 03:22:56.409"/>
</kw>
<msg timestamp="20210616 03:22:56.409" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210616 03:22:56.405" endtime="20210616 03:22:56.409"/>
</kw>
<status status="PASS" starttime="20210616 03:22:56.403" endtime="20210616 03:22:56.410"/>
</kw>
<msg timestamp="20210616 03:22:56.410" level="INFO">${url} = o3fs://78779-bucket2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20210616 03:22:56.403" endtime="20210616 03:22:56.410"/>
</kw>
<msg timestamp="20210616 03:22:56.410" level="INFO">${target} = o3fs://78779-bucket2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20210616 03:22:56.402" endtime="20210616 03:22:56.410"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:22:56.415" level="INFO">Running command 'ozone fs -mkdir -p o3fs://78779-bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:23:00.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:23:00.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:22:56.412" endtime="20210616 03:23:00.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:23:00.250" level="INFO"/>
<status status="PASS" starttime="20210616 03:23:00.249" endtime="20210616 03:23:00.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:23:00.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:23:00.251" endtime="20210616 03:23:00.251"/>
</kw>
<status status="PASS" starttime="20210616 03:22:56.412" endtime="20210616 03:23:00.252"/>
</kw>
<msg timestamp="20210616 03:23:00.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:22:56.411" endtime="20210616 03:23:00.252"/>
</kw>
<status status="PASS" starttime="20210616 03:22:56.411" endtime="20210616 03:23:00.252"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:23:00.257" level="INFO">Running command 'ozone fs -cp o3fs://78779-bucket1-o3fs.fstest1.om///testdir1/localdir1 o3fs://78779-bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:23:04.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:23:04.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:23:00.254" endtime="20210616 03:23:04.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:23:04.286" level="INFO"/>
<status status="PASS" starttime="20210616 03:23:04.285" endtime="20210616 03:23:04.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:23:04.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:23:04.286" endtime="20210616 03:23:04.287"/>
</kw>
<status status="PASS" starttime="20210616 03:23:00.253" endtime="20210616 03:23:04.287"/>
</kw>
<msg timestamp="20210616 03:23:04.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:23:00.253" endtime="20210616 03:23:04.288"/>
</kw>
<status status="PASS" starttime="20210616 03:23:00.252" endtime="20210616 03:23:04.288"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:23:04.292" level="INFO">Running command 'ozone fs -rm -r o3fs://78779-bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:23:08.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:23:08.122" level="INFO">${output} = 2021-06-16 03:23:07,776 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:23:07,865 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210616 03:23:04.290" endtime="20210616 03:23:08.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:23:08.123" level="INFO">2021-06-16 03:23:07,776 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:23:07,865 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://78779-bucket2-o3fs.fstest1.om/testdir2' to trash at: /.Trash/root/Current/testdir2</msg>
<status status="PASS" starttime="20210616 03:23:08.122" endtime="20210616 03:23:08.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:23:08.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:23:08.123" endtime="20210616 03:23:08.124"/>
</kw>
<status status="PASS" starttime="20210616 03:23:04.289" endtime="20210616 03:23:08.124"/>
</kw>
<msg timestamp="20210616 03:23:08.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:23:04.289" endtime="20210616 03:23:08.124"/>
</kw>
<status status="PASS" starttime="20210616 03:23:04.288" endtime="20210616 03:23:08.125"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:22:56.400" endtime="20210616 03:23:08.125"/>
</test>
<test id="s1-s5-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:23:08.132" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210616 03:23:08.132" endtime="20210616 03:23:08.132"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:23:08.133" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210616 03:23:08.132" endtime="20210616 03:23:08.133"/>
</kw>
<status status="PASS" starttime="20210616 03:23:08.131" endtime="20210616 03:23:08.133"/>
</kw>
<msg timestamp="20210616 03:23:08.134" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210616 03:23:08.129" endtime="20210616 03:23:08.134"/>
</kw>
<status status="PASS" starttime="20210616 03:23:08.128" endtime="20210616 03:23:08.134"/>
</kw>
<msg timestamp="20210616 03:23:08.134" level="INFO">${url} = o3fs://78779-bucket3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20210616 03:23:08.127" endtime="20210616 03:23:08.134"/>
</kw>
<msg timestamp="20210616 03:23:08.135" level="INFO">${target} = o3fs://78779-bucket3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20210616 03:23:08.126" endtime="20210616 03:23:08.135"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:23:08.139" level="INFO">Running command 'ozone fs -mkdir -p o3fs://78779-bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:23:12.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:23:12.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:23:08.136" endtime="20210616 03:23:12.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:23:12.007" level="INFO"/>
<status status="PASS" starttime="20210616 03:23:12.006" endtime="20210616 03:23:12.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:23:12.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:23:12.007" endtime="20210616 03:23:12.008"/>
</kw>
<status status="PASS" starttime="20210616 03:23:08.136" endtime="20210616 03:23:12.008"/>
</kw>
<msg timestamp="20210616 03:23:12.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:23:08.135" endtime="20210616 03:23:12.008"/>
</kw>
<status status="PASS" starttime="20210616 03:23:08.135" endtime="20210616 03:23:12.009"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:23:12.013" level="INFO">Running command 'ozone fs -cp o3fs://78779-bucket1-o3fs.fstest1.om///testdir1/localdir1 o3fs://78779-bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:23:16.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:23:16.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:23:12.011" endtime="20210616 03:23:16.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:23:16.116" level="INFO"/>
<status status="PASS" starttime="20210616 03:23:16.116" endtime="20210616 03:23:16.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:23:16.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:23:16.117" endtime="20210616 03:23:16.118"/>
</kw>
<status status="PASS" starttime="20210616 03:23:12.010" endtime="20210616 03:23:16.118"/>
</kw>
<msg timestamp="20210616 03:23:16.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:23:12.010" endtime="20210616 03:23:16.118"/>
</kw>
<status status="PASS" starttime="20210616 03:23:12.009" endtime="20210616 03:23:16.119"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:23:16.123" level="INFO">Running command 'ozone fs -rm -r o3fs://78779-bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:23:19.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:23:19.986" level="INFO">${output} = 2021-06-16 03:23:19,796 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:23:19,893 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210616 03:23:16.121" endtime="20210616 03:23:19.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:23:19.988" level="INFO">2021-06-16 03:23:19,796 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:23:19,893 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://78779-bucket3-o3fs.fstest2.om/testdir3' to trash at: /.Trash/root/Current/testdir3</msg>
<status status="PASS" starttime="20210616 03:23:19.987" endtime="20210616 03:23:19.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:23:19.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:23:19.988" endtime="20210616 03:23:19.989"/>
</kw>
<status status="PASS" starttime="20210616 03:23:16.120" endtime="20210616 03:23:19.989"/>
</kw>
<msg timestamp="20210616 03:23:19.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:23:16.120" endtime="20210616 03:23:19.989"/>
</kw>
<status status="PASS" starttime="20210616 03:23:16.119" endtime="20210616 03:23:19.990"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:23:08.125" endtime="20210616 03:23:19.990"/>
</test>
<test id="s1-s5-t19" name="List file created via shell">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:23:19.996" level="INFO">Running command 'ozone sh key put fstest1/78779-bucket1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:23:23.815" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:23:23.816" level="INFO">${output} = INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20210616 03:23:19.994" endtime="20210616 03:23:23.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:23:23.817" level="INFO">INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20210616 03:23:23.816" endtime="20210616 03:23:23.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:23:23.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210616 03:23:23.819" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210616 03:23:23.817" endtime="20210616 03:23:23.819"/>
</kw>
<status status="FAIL" starttime="20210616 03:23:19.993" endtime="20210616 03:23:23.819"/>
</kw>
<msg timestamp="20210616 03:23:23.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210616 03:23:19.993" endtime="20210616 03:23:23.819"/>
</kw>
<status status="FAIL" starttime="20210616 03:23:19.992" endtime="20210616 03:23:23.819"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210616 03:23:19.991" endtime="20210616 03:23:23.820">Setup failed:
255 != 0</status>
</test>
<test id="s1-s5-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:23:23.825" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://78779-bucket1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:23:27.694" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:23:27.694" level="INFO">${output} = copyFromLocal: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20210616 03:23:23.822" endtime="20210616 03:23:27.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:23:27.696" level="INFO">copyFromLocal: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20210616 03:23:27.695" endtime="20210616 03:23:27.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:23:27.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:23:27.697" endtime="20210616 03:23:27.697"/>
</kw>
<msg timestamp="20210616 03:23:27.698" level="INFO">${result} = copyFromLocal: Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20210616 03:23:23.822" endtime="20210616 03:23:27.698"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210616 03:23:27.699" level="FAIL">'copyFromLocal: Allocated 0 blocks. Requested 1 blocks' does not contain 'File exists'</msg>
<status status="FAIL" starttime="20210616 03:23:27.698" endtime="20210616 03:23:27.699"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210616 03:23:23.821" endtime="20210616 03:23:27.699">'copyFromLocal: Allocated 0 blocks. Requested 1 blocks' does not contain 'File exists'</status>
</test>
<test id="s1-s5-t21" name="Get file">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:23:27.704" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:23:27.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:23:27.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:23:27.702" endtime="20210616 03:23:27.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:23:27.709" level="INFO"/>
<status status="PASS" starttime="20210616 03:23:27.708" endtime="20210616 03:23:27.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:23:27.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:23:27.709" endtime="20210616 03:23:27.710"/>
</kw>
<status status="PASS" starttime="20210616 03:23:27.702" endtime="20210616 03:23:27.710"/>
</kw>
<msg timestamp="20210616 03:23:27.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:23:27.701" endtime="20210616 03:23:27.710"/>
</kw>
<status status="PASS" starttime="20210616 03:23:27.701" endtime="20210616 03:23:27.710"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:23:27.714" level="INFO">Running command 'ozone fs -get o3fs://78779-bucket1-o3fs.fstest1.om//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:23:31.452" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:23:31.452" level="INFO">${output} = get: `o3fs://78779-bucket1-o3fs.fstest1.om//o3fs.txt': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:23:27.713" endtime="20210616 03:23:31.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:23:31.453" level="INFO">get: `o3fs://78779-bucket1-o3fs.fstest1.om//o3fs.txt': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:23:31.452" endtime="20210616 03:23:31.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:23:31.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210616 03:23:31.455" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210616 03:23:31.454" endtime="20210616 03:23:31.455"/>
</kw>
<status status="FAIL" starttime="20210616 03:23:27.712" endtime="20210616 03:23:31.455"/>
</kw>
<msg timestamp="20210616 03:23:31.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210616 03:23:27.711" endtime="20210616 03:23:31.455"/>
</kw>
<status status="FAIL" starttime="20210616 03:23:27.711" endtime="20210616 03:23:31.456"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<status status="NOT RUN" starttime="20210616 03:23:31.456" endtime="20210616 03:23:31.456"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210616 03:23:27.700" endtime="20210616 03:23:31.456">1 != 0</status>
</test>
<doc>Ozone FS tests</doc>
<status status="FAIL" starttime="20210616 03:19:26.102" endtime="20210616 03:23:31.459"/>
</suite>
<suite id="s1-s6" name="ozonefs-ofs-link" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 03:07:20.603" level="INFO">${random} = 07623</msg>
<status status="PASS" starttime="20210616 03:07:20.603" endtime="20210616 03:07:20.603"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:07:20.604" level="INFO">${BUCKET} = 07623-link1-ofs</msg>
<status status="PASS" starttime="20210616 03:07:20.604" endtime="20210616 03:07:20.604"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:07:20.605" level="INFO">${BUCKET2} = 07623-link2-ofs</msg>
<status status="PASS" starttime="20210616 03:07:20.604" endtime="20210616 03:07:20.605"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:07:20.606" level="INFO">${BUCKET_IN_VOL2} = 07623-link3-ofs</msg>
<status status="PASS" starttime="20210616 03:07:20.605" endtime="20210616 03:07:20.606"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:07:20.611" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210616 03:07:20.610" endtime="20210616 03:07:20.611"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:07:20.612" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210616 03:07:20.611" endtime="20210616 03:07:20.612"/>
</kw>
<status status="PASS" starttime="20210616 03:07:20.610" endtime="20210616 03:07:20.612"/>
</kw>
<msg timestamp="20210616 03:07:20.612" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210616 03:07:20.609" endtime="20210616 03:07:20.612"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:07:20.614" level="INFO">${first} = /</msg>
<status status="PASS" starttime="20210616 03:07:20.614" endtime="20210616 03:07:20.614"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:07:20.615" level="INFO">${result} = /</msg>
<status status="PASS" starttime="20210616 03:07:20.615" endtime="20210616 03:07:20.615"/>
</kw>
<status status="PASS" starttime="20210616 03:07:20.614" endtime="20210616 03:07:20.616"/>
</kw>
<msg timestamp="20210616 03:07:20.616" level="INFO">${path_with_leading} = /</msg>
<status status="PASS" starttime="20210616 03:07:20.612" endtime="20210616 03:07:20.616"/>
</kw>
<status status="PASS" starttime="20210616 03:07:20.608" endtime="20210616 03:07:20.616"/>
</kw>
<msg timestamp="20210616 03:07:20.616" level="INFO">${url} = ofs://om/fstest1/07623-link1-ofs/</msg>
<status status="PASS" starttime="20210616 03:07:20.607" endtime="20210616 03:07:20.617"/>
</kw>
<msg timestamp="20210616 03:07:20.617" level="INFO">${BASE_URL} = ofs://om/fstest1/07623-link1-ofs/</msg>
<status status="PASS" starttime="20210616 03:07:20.606" endtime="20210616 03:07:20.617"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:07:20.617" level="INFO">${BASE_URL} = ofs://om/fstest1/07623-link1-ofs/</msg>
<status status="PASS" starttime="20210616 03:07:20.617" endtime="20210616 03:07:20.618"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:07:20.620" level="INFO">${DEEP_URL} = ofs://om/fstest1/07623-link1-ofs/test/ofs/dir</msg>
<status status="PASS" starttime="20210616 03:07:20.618" endtime="20210616 03:07:20.620"/>
</kw>
<status status="PASS" starttime="20210616 03:07:20.603" endtime="20210616 03:07:20.620"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:20.625" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:24.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:24.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:07:20.621" endtime="20210616 03:07:24.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:24.478" level="INFO"/>
<status status="PASS" starttime="20210616 03:07:24.477" endtime="20210616 03:07:24.478"/>
</kw>
<status status="PASS" starttime="20210616 03:07:20.621" endtime="20210616 03:07:24.479"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:24.482" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:28.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:28.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:07:24.480" endtime="20210616 03:07:28.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:28.306" level="INFO"/>
<status status="PASS" starttime="20210616 03:07:28.305" endtime="20210616 03:07:28.306"/>
</kw>
<status status="PASS" starttime="20210616 03:07:24.479" endtime="20210616 03:07:28.306"/>
</kw>
<status status="PASS" starttime="20210616 03:07:20.620" endtime="20210616 03:07:28.306"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:28.310" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:32.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:32.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:07:28.308" endtime="20210616 03:07:32.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:32.191" level="INFO"/>
<status status="PASS" starttime="20210616 03:07:32.191" endtime="20210616 03:07:32.191"/>
</kw>
<status status="PASS" starttime="20210616 03:07:28.307" endtime="20210616 03:07:32.192"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:32.195" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:36.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:36.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:07:32.193" endtime="20210616 03:07:36.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:36.300" level="INFO"/>
<status status="PASS" starttime="20210616 03:07:36.299" endtime="20210616 03:07:36.300"/>
</kw>
<status status="PASS" starttime="20210616 03:07:32.192" endtime="20210616 03:07:36.301"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:36.305" level="INFO">Running command 'ozone sh bucket create fstest1-src/07623-link1-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:40.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:40.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:07:36.302" endtime="20210616 03:07:40.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:40.088" level="INFO"/>
<status status="PASS" starttime="20210616 03:07:40.087" endtime="20210616 03:07:40.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:07:40.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:07:40.088" endtime="20210616 03:07:40.089"/>
</kw>
<status status="PASS" starttime="20210616 03:07:36.302" endtime="20210616 03:07:40.089"/>
</kw>
<msg timestamp="20210616 03:07:40.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:07:36.302" endtime="20210616 03:07:40.090"/>
</kw>
<status status="PASS" starttime="20210616 03:07:36.301" endtime="20210616 03:07:40.090"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:40.094" level="INFO">Running command 'ozone sh bucket create fstest1-src/07623-link2-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:44.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:44.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:07:40.092" endtime="20210616 03:07:44.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:44.043" level="INFO"/>
<status status="PASS" starttime="20210616 03:07:44.042" endtime="20210616 03:07:44.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:07:44.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:07:44.043" endtime="20210616 03:07:44.044"/>
</kw>
<status status="PASS" starttime="20210616 03:07:40.091" endtime="20210616 03:07:44.044"/>
</kw>
<msg timestamp="20210616 03:07:44.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:07:40.091" endtime="20210616 03:07:44.045"/>
</kw>
<status status="PASS" starttime="20210616 03:07:40.090" endtime="20210616 03:07:44.045"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:44.049" level="INFO">Running command 'ozone sh bucket create fstest2-src/07623-link3-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:47.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:47.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:07:44.047" endtime="20210616 03:07:47.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:47.783" level="INFO"/>
<status status="PASS" starttime="20210616 03:07:47.782" endtime="20210616 03:07:47.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:07:47.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:07:47.784" endtime="20210616 03:07:47.784"/>
</kw>
<status status="PASS" starttime="20210616 03:07:44.046" endtime="20210616 03:07:47.784"/>
</kw>
<msg timestamp="20210616 03:07:47.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:07:44.046" endtime="20210616 03:07:47.785"/>
</kw>
<status status="PASS" starttime="20210616 03:07:44.045" endtime="20210616 03:07:47.785"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:47.789" level="INFO">Running command 'ozone sh bucket link fstest1-src/07623-link1-ofs-src fstest1/07623-link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:51.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:51.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:07:47.787" endtime="20210616 03:07:51.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:51.501" level="INFO"/>
<status status="PASS" starttime="20210616 03:07:51.500" endtime="20210616 03:07:51.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:07:51.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:07:51.501" endtime="20210616 03:07:51.502"/>
</kw>
<status status="PASS" starttime="20210616 03:07:47.786" endtime="20210616 03:07:51.502"/>
</kw>
<msg timestamp="20210616 03:07:51.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:07:47.786" endtime="20210616 03:07:51.502"/>
</kw>
<status status="PASS" starttime="20210616 03:07:47.785" endtime="20210616 03:07:51.503"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:51.507" level="INFO">Running command 'ozone sh bucket link fstest1-src/07623-link2-ofs-src fstest1/07623-link2-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:55.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:55.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:07:51.504" endtime="20210616 03:07:55.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:55.409" level="INFO"/>
<status status="PASS" starttime="20210616 03:07:55.408" endtime="20210616 03:07:55.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:07:55.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:07:55.409" endtime="20210616 03:07:55.410"/>
</kw>
<status status="PASS" starttime="20210616 03:07:51.504" endtime="20210616 03:07:55.410"/>
</kw>
<msg timestamp="20210616 03:07:55.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:07:51.504" endtime="20210616 03:07:55.410"/>
</kw>
<status status="PASS" starttime="20210616 03:07:51.503" endtime="20210616 03:07:55.411"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:55.415" level="INFO">Running command 'ozone sh bucket link fstest2-src/07623-link3-ofs-src fstest2/07623-link3-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:59.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:59.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:07:55.412" endtime="20210616 03:07:59.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:59.207" level="INFO"/>
<status status="PASS" starttime="20210616 03:07:59.206" endtime="20210616 03:07:59.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:07:59.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:07:59.207" endtime="20210616 03:07:59.208"/>
</kw>
<status status="PASS" starttime="20210616 03:07:55.412" endtime="20210616 03:07:59.208"/>
</kw>
<msg timestamp="20210616 03:07:59.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:07:55.412" endtime="20210616 03:07:59.209"/>
</kw>
<status status="PASS" starttime="20210616 03:07:55.411" endtime="20210616 03:07:59.209"/>
</kw>
<status status="PASS" starttime="20210616 03:07:28.307" endtime="20210616 03:07:59.209"/>
</kw>
<status status="PASS" starttime="20210616 03:07:28.307" endtime="20210616 03:07:59.209"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:59.213" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:08:03.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:08:03.266" level="INFO">${output} = {
  "metadata" : { },
  "name" : "48892-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210616 03:07:59.211" endtime="20210616 03:08:03.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:08:03.267" level="INFO">{
  "metadata" : { },
  "name" : "48892-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T02:52:59.291Z",
  "modificationTime" : "2021-06-16T02:53:23.131Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "94856-source",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2021-06-16T02:42:18.070Z",
  "modificationTime" : "2021-06-16T02:42:55.576Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ]
}
{
  "metadata" : { },
  "name" : "94856-target",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 10,
  "creationTime" : "2021-06-16T02:42:22.074Z",
  "modificationTime" : "2021-06-16T02:42:52Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-16T03:07:24.316Z",
  "modificationTime" : "2021-06-16T03:07:24.316Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-16T03:07:32.067Z",
  "modificationTime" : "2021-06-16T03:07:32.067Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:07:28.188Z",
  "modificationTime" : "2021-06-16T03:07:28.188Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:07:36.126Z",
  "modificationTime" : "2021-06-16T03:07:36.126Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest266",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:03:31.481Z",
  "modificationTime" : "2021-06-16T03:03:31.481Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest366",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:03:51.094Z",
  "modificationTime" : "2021-06-16T03:05:52.817Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest410",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:03:01.351Z",
  "modificationTime" : "2021-06-16T03:03:01.351Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest66",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-16T03:03:27.669Z",
  "modificationTime" : "2021-06-16T03:03:27.669Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "root",
  "owner" : "root",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-16T02:40:24.526Z",
  "modificationTime" : "2021-06-16T02:40:24.526Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-58978",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:03.846Z",
  "modificationTime" : "2021-06-16T02:41:03.846Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-1-88023",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.093Z",
  "modificationTime" : "2021-06-16T02:41:04.093Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-33168",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.108Z",
  "modificationTime" : "2021-06-16T02:41:04.108Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-85489",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.118Z",
  "modificationTime" : "2021-06-16T02:41:04.118Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-67887",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-16T02:41:04.131Z",
  "modificationTime" : "2021-06-16T02:41:04.131Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-kjegm",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:02:28.278Z",
  "modificationTime" : "2021-06-16T03:02:28.278Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" starttime="20210616 03:08:03.267" endtime="20210616 03:08:03.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:08:03.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:08:03.268" endtime="20210616 03:08:03.268"/>
</kw>
<status status="PASS" starttime="20210616 03:07:59.211" endtime="20210616 03:08:03.269"/>
</kw>
<msg timestamp="20210616 03:08:03.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:07:59.210" endtime="20210616 03:08:03.269"/>
</kw>
<msg timestamp="20210616 03:08:03.270" level="INFO">${result} = {
  "metadata" : { },
  "name" : "48892-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210616 03:07:59.210" endtime="20210616 03:08:03.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:08:03.270" endtime="20210616 03:08:03.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:08:03.270" endtime="20210616 03:08:03.271"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm[^@]*@EXAMPLE\.COM)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:08:03.271" endtime="20210616 03:08:03.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:08:03.276" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:08:07.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:08:07.219" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "07623-link1-ofs",
  "storageType" : "DISK",
...</msg>
<status status="PASS" starttime="20210616 03:08:03.274" endtime="20210616 03:08:07.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:08:07.220" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "07623-link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:07:51.385Z",
  "modificationTime" : "2021-06-16T03:07:51.385Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "07623-link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "07623-link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-16T03:07:55.321Z",
  "modificationTime" : "2021-06-16T03:07:55.321Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "07623-link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210616 03:08:07.219" endtime="20210616 03:08:07.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:08:07.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:08:07.220" endtime="20210616 03:08:07.221"/>
</kw>
<status status="PASS" starttime="20210616 03:08:03.273" endtime="20210616 03:08:07.221"/>
</kw>
<msg timestamp="20210616 03:08:07.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:08:03.273" endtime="20210616 03:08:07.221"/>
</kw>
<msg timestamp="20210616 03:08:07.222" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "07623-link1-ofs",
  "storageType" : "DISK",
...</msg>
<status status="PASS" starttime="20210616 03:08:03.272" endtime="20210616 03:08:07.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:08:07.222" endtime="20210616 03:08:07.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:08:07.223" endtime="20210616 03:08:07.223"/>
</kw>
<status status="PASS" starttime="20210616 03:07:59.210" endtime="20210616 03:08:07.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:08:07.224" level="INFO">Completed setup for ofs tests with links in fstest1/07623-link1-ofs using FS base URL: ofs://om/fstest1/07623-link1-ofs/</msg>
<status status="PASS" starttime="20210616 03:08:07.223" endtime="20210616 03:08:07.224"/>
</kw>
<status status="PASS" starttime="20210616 03:07:20.602" endtime="20210616 03:08:07.224"/>
</kw>
<test id="s1-s6-t1" name="List root">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:08:07.235" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210616 03:08:07.234" endtime="20210616 03:08:07.235"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:08:07.236" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210616 03:08:07.235" endtime="20210616 03:08:07.236"/>
</kw>
<status status="PASS" starttime="20210616 03:08:07.234" endtime="20210616 03:08:07.236"/>
</kw>
<msg timestamp="20210616 03:08:07.236" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210616 03:08:07.232" endtime="20210616 03:08:07.236"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210616 03:08:07.238" endtime="20210616 03:08:07.239"/>
</kw>
<msg timestamp="20210616 03:08:07.239" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210616 03:08:07.237" endtime="20210616 03:08:07.239"/>
</kw>
<status status="PASS" starttime="20210616 03:08:07.231" endtime="20210616 03:08:07.240"/>
</kw>
<msg timestamp="20210616 03:08:07.240" level="INFO">${url} = ofs://om/fstest1/07623-link1-ofs</msg>
<status status="PASS" starttime="20210616 03:08:07.227" endtime="20210616 03:08:07.240"/>
</kw>
<msg timestamp="20210616 03:08:07.240" level="INFO">${root} = ofs://om/fstest1/07623-link1-ofs</msg>
<status status="PASS" starttime="20210616 03:08:07.226" endtime="20210616 03:08:07.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:08:07.244" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/07623-link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:08:11.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:08:11.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:08:07.242" endtime="20210616 03:08:11.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:08:11.159" level="INFO"/>
<status status="PASS" starttime="20210616 03:08:11.158" endtime="20210616 03:08:11.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:08:11.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:08:11.159" endtime="20210616 03:08:11.160"/>
</kw>
<status status="PASS" starttime="20210616 03:08:07.241" endtime="20210616 03:08:11.160"/>
</kw>
<msg timestamp="20210616 03:08:11.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:08:07.241" endtime="20210616 03:08:11.160"/>
</kw>
<status status="PASS" starttime="20210616 03:08:07.240" endtime="20210616 03:08:11.160"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:08:07.224" endtime="20210616 03:08:11.161"/>
</test>
<test id="s1-s6-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:08:11.169" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210616 03:08:11.169" endtime="20210616 03:08:11.169"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:08:11.170" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210616 03:08:11.170" endtime="20210616 03:08:11.170"/>
</kw>
<status status="PASS" starttime="20210616 03:08:11.168" endtime="20210616 03:08:11.171"/>
</kw>
<msg timestamp="20210616 03:08:11.171" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210616 03:08:11.167" endtime="20210616 03:08:11.171"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210616 03:08:11.172" endtime="20210616 03:08:11.173"/>
</kw>
<msg timestamp="20210616 03:08:11.174" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210616 03:08:11.171" endtime="20210616 03:08:11.174"/>
</kw>
<status status="PASS" starttime="20210616 03:08:11.166" endtime="20210616 03:08:11.174"/>
</kw>
<msg timestamp="20210616 03:08:11.174" level="INFO">${url} = ofs://om/no-such-volume/07623-link1-ofs</msg>
<status status="PASS" starttime="20210616 03:08:11.165" endtime="20210616 03:08:11.174"/>
</kw>
<msg timestamp="20210616 03:08:11.175" level="INFO">${url} = ofs://om/no-such-volume/07623-link1-ofs</msg>
<status status="PASS" starttime="20210616 03:08:11.163" endtime="20210616 03:08:11.175"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:08:11.178" level="INFO">Running command 'ozone fs -ls ofs://om/no-such-volume/07623-link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:08:15.103" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:08:15.103" level="INFO">${output} = ls: `ofs://om/no-such-volume/07623-link1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:08:11.175" endtime="20210616 03:08:15.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:08:15.104" level="INFO">ls: `ofs://om/no-such-volume/07623-link1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:08:15.103" endtime="20210616 03:08:15.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:08:15.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:08:15.105" endtime="20210616 03:08:15.105"/>
</kw>
<msg timestamp="20210616 03:08:15.106" level="INFO">${result} = ls: `ofs://om/no-such-volume/07623-link1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:08:11.175" endtime="20210616 03:08:15.106"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:08:15.106" endtime="20210616 03:08:15.107"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:08:11.162" endtime="20210616 03:08:15.108"/>
</test>
<test id="s1-s6-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:08:15.117" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210616 03:08:15.116" endtime="20210616 03:08:15.117"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:08:15.118" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210616 03:08:15.117" endtime="20210616 03:08:15.118"/>
</kw>
<status status="PASS" starttime="20210616 03:08:15.115" endtime="20210616 03:08:15.118"/>
</kw>
<msg timestamp="20210616 03:08:15.118" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210616 03:08:15.114" endtime="20210616 03:08:15.118"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210616 03:08:15.120" endtime="20210616 03:08:15.121"/>
</kw>
<msg timestamp="20210616 03:08:15.121" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210616 03:08:15.118" endtime="20210616 03:08:15.121"/>
</kw>
<status status="PASS" starttime="20210616 03:08:15.113" endtime="20210616 03:08:15.121"/>
</kw>
<msg timestamp="20210616 03:08:15.122" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20210616 03:08:15.112" endtime="20210616 03:08:15.122"/>
</kw>
<msg timestamp="20210616 03:08:15.122" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20210616 03:08:15.110" endtime="20210616 03:08:15.122"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:08:15.125" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:08:18.798" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:08:18.798" level="INFO">${output} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:08:15.123" endtime="20210616 03:08:18.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:08:18.799" level="INFO">ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:08:18.799" endtime="20210616 03:08:18.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:08:18.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:08:18.800" endtime="20210616 03:08:18.800"/>
</kw>
<msg timestamp="20210616 03:08:18.801" level="INFO">${result} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210616 03:08:15.122" endtime="20210616 03:08:18.801"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:08:18.801" endtime="20210616 03:08:18.802"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:08:15.109" endtime="20210616 03:08:18.802"/>
</test>
<test id="s1-s6-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:08:18.813" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/07623-link1-ofs/test/ofs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:08:22.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:08:22.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:08:18.808" endtime="20210616 03:08:22.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:08:22.626" level="INFO"/>
<status status="PASS" starttime="20210616 03:08:22.625" endtime="20210616 03:08:22.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:08:22.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:08:22.626" endtime="20210616 03:08:22.627"/>
</kw>
<status status="PASS" starttime="20210616 03:08:18.807" endtime="20210616 03:08:22.627"/>
</kw>
<msg timestamp="20210616 03:08:22.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:08:18.807" endtime="20210616 03:08:22.628"/>
</kw>
<status status="PASS" starttime="20210616 03:08:18.806" endtime="20210616 03:08:22.628"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:08:22.633" level="INFO">Running command 'ozone sh key list fstest1/07623-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:08:26.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:08:26.909" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210616 03:08:22.630" endtime="20210616 03:08:26.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:08:26.910" level="INFO">test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210616 03:08:26.909" endtime="20210616 03:08:26.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:08:26.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:08:26.911" endtime="20210616 03:08:26.911"/>
</kw>
<status status="PASS" starttime="20210616 03:08:22.629" endtime="20210616 03:08:26.912"/>
</kw>
<msg timestamp="20210616 03:08:26.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:08:22.629" endtime="20210616 03:08:26.912"/>
</kw>
<msg timestamp="20210616 03:08:26.912" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210616 03:08:22.628" endtime="20210616 03:08:26.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:08:26.912" endtime="20210616 03:08:26.913"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:08:18.805" endtime="20210616 03:08:26.913"/>
</test>
<test id="s1-s6-t5" name="Copy from local">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:08:26.919" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:08:33.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:08:33.075" level="INFO">${output} = 2021-06-16 03:08:30,927 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:08:31,069 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:08:26.916" endtime="20210616 03:08:33.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:08:33.076" level="INFO">2021-06-16 03:08:30,927 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:08:31,069 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:08:31,069 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:08:31,457 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:08:31,458 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-87593AC96818-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:08:31,459 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:08:33.075" endtime="20210616 03:08:33.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:08:33.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:08:33.076" endtime="20210616 03:08:33.077"/>
</kw>
<status status="PASS" starttime="20210616 03:08:26.916" endtime="20210616 03:08:33.077"/>
</kw>
<msg timestamp="20210616 03:08:33.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:08:26.915" endtime="20210616 03:08:33.078"/>
</kw>
<status status="PASS" starttime="20210616 03:08:26.915" endtime="20210616 03:08:33.078"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:08:33.083" level="INFO">Running command 'ozone sh key list fstest1/07623-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:08:37.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:08:37.158" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:08:33.080" endtime="20210616 03:08:37.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:08:37.159" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:08:37.158" endtime="20210616 03:08:37.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:08:37.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:08:37.159" endtime="20210616 03:08:37.160"/>
</kw>
<status status="PASS" starttime="20210616 03:08:33.079" endtime="20210616 03:08:37.160"/>
</kw>
<msg timestamp="20210616 03:08:37.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:08:33.079" endtime="20210616 03:08:37.161"/>
</kw>
<msg timestamp="20210616 03:08:37.161" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:08:33.078" endtime="20210616 03:08:37.161"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:08:37.161" endtime="20210616 03:08:37.162"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:08:37.166" level="INFO">Running command 'ozone sh key info fstest1/07623-link1-ofs/test/ofs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:08:41.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:08:41.488" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20210616 03:08:37.164" endtime="20210616 03:08:41.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:08:41.490" level="INFO">3</msg>
<status status="PASS" starttime="20210616 03:08:41.489" endtime="20210616 03:08:41.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:08:41.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:08:41.490" endtime="20210616 03:08:41.491"/>
</kw>
<status status="PASS" starttime="20210616 03:08:37.163" endtime="20210616 03:08:41.491"/>
</kw>
<msg timestamp="20210616 03:08:41.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:08:37.163" endtime="20210616 03:08:41.491"/>
</kw>
<msg timestamp="20210616 03:08:41.492" level="INFO">${result} = 3</msg>
<status status="PASS" starttime="20210616 03:08:37.162" endtime="20210616 03:08:41.492"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210616 03:08:41.492" endtime="20210616 03:08:41.492"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:08:26.914" endtime="20210616 03:08:41.493"/>
</test>
<test id="s1-s6-t6" name="Put">
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:08:41.499" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:08:49.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:08:49.855" level="INFO">${output} = 2021-06-16 03:08:45,494 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:08:45,576 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:08:41.496" endtime="20210616 03:08:49.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:08:49.856" level="INFO">2021-06-16 03:08:45,494 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:08:45,576 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:08:45,576 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:08:45,842 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:08:45,842 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-58BF64B3037C-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:08:45,843 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:08:49.855" endtime="20210616 03:08:49.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:08:49.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:08:49.856" endtime="20210616 03:08:49.857"/>
</kw>
<status status="PASS" starttime="20210616 03:08:41.496" endtime="20210616 03:08:49.857"/>
</kw>
<msg timestamp="20210616 03:08:49.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:08:41.495" endtime="20210616 03:08:49.858"/>
</kw>
<status status="PASS" starttime="20210616 03:08:41.494" endtime="20210616 03:08:49.858"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:08:49.863" level="INFO">Running command 'ozone sh key list fstest1/07623-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:08:54.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:08:54.122" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:08:49.861" endtime="20210616 03:08:54.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:08:54.124" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:08:54.123" endtime="20210616 03:08:54.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:08:54.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:08:54.124" endtime="20210616 03:08:54.125"/>
</kw>
<status status="PASS" starttime="20210616 03:08:49.860" endtime="20210616 03:08:54.125"/>
</kw>
<msg timestamp="20210616 03:08:54.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:08:49.859" endtime="20210616 03:08:54.126"/>
</kw>
<msg timestamp="20210616 03:08:54.126" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:08:49.858" endtime="20210616 03:08:54.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:08:54.126" endtime="20210616 03:08:54.127"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:08:41.493" endtime="20210616 03:08:54.127"/>
</test>
<test id="s1-s6-t7" name="List">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:08:54.136" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:08:57.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:08:57.944" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:08 ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-16 03:08 ofs://om/fstest1/07623-...</msg>
<status status="PASS" starttime="20210616 03:08:54.130" endtime="20210616 03:08:57.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:08:57.945" level="INFO">Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:08 ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-16 03:08 ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:08:57.944" endtime="20210616 03:08:57.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:08:57.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:08:57.946" endtime="20210616 03:08:57.947"/>
</kw>
<status status="PASS" starttime="20210616 03:08:54.130" endtime="20210616 03:08:57.947"/>
</kw>
<msg timestamp="20210616 03:08:57.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:08:54.129" endtime="20210616 03:08:57.947"/>
</kw>
<msg timestamp="20210616 03:08:57.948" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:08 ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-16 03:08 ofs://om/fstest1/07623-...</msg>
<status status="PASS" starttime="20210616 03:08:54.129" endtime="20210616 03:08:57.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:08:57.948" endtime="20210616 03:08:57.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:08:57.948" endtime="20210616 03:08:57.949"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:08:54.128" endtime="20210616 03:08:57.949"/>
</test>
<test id="s1-s6-t8" name="Move">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:08:57.955" level="INFO">Running command 'ozone fs -mv ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/NOTICE.txt ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:09:01.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:09:01.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:08:57.953" endtime="20210616 03:09:01.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:09:01.913" level="INFO"/>
<status status="PASS" starttime="20210616 03:09:01.913" endtime="20210616 03:09:01.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:09:01.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:09:01.914" endtime="20210616 03:09:01.914"/>
</kw>
<status status="PASS" starttime="20210616 03:08:57.952" endtime="20210616 03:09:01.915"/>
</kw>
<msg timestamp="20210616 03:09:01.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:08:57.952" endtime="20210616 03:09:01.915"/>
</kw>
<status status="PASS" starttime="20210616 03:08:57.951" endtime="20210616 03:09:01.915"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:09:01.920" level="INFO">Running command 'ozone sh key list fstest1/07623-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:09:06.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:09:06.400" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:09:01.917" endtime="20210616 03:09:06.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:09:06.402" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:09:06.401" endtime="20210616 03:09:06.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:09:06.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:09:06.402" endtime="20210616 03:09:06.403"/>
</kw>
<status status="PASS" starttime="20210616 03:09:01.917" endtime="20210616 03:09:06.403"/>
</kw>
<msg timestamp="20210616 03:09:06.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:09:01.916" endtime="20210616 03:09:06.403"/>
</kw>
<msg timestamp="20210616 03:09:06.404" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:09:01.916" endtime="20210616 03:09:06.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:09:06.404" endtime="20210616 03:09:06.405"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:09:06.405" endtime="20210616 03:09:06.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:08:57.950" endtime="20210616 03:09:06.406"/>
</test>
<test id="s1-s6-t9" name="Copy within FS">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:09:06.411" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:09:10.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:09:10.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:09:06.409" endtime="20210616 03:09:10.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:09:10.239" level="INFO"/>
<status status="PASS" starttime="20210616 03:09:10.238" endtime="20210616 03:09:10.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:09:10.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:09:10.239" endtime="20210616 03:09:10.240"/>
</kw>
<status status="PASS" starttime="20210616 03:09:06.409" endtime="20210616 03:09:10.240"/>
</kw>
<msg timestamp="20210616 03:09:10.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:09:06.408" endtime="20210616 03:09:10.240"/>
</kw>
<status status="PASS" starttime="20210616 03:09:06.407" endtime="20210616 03:09:10.241"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:09:10.245" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/MOVED.TXT ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:09:16.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:09:16.324" level="INFO">${output} = 2021-06-16 03:09:14,051 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:09:14,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:09:10.243" endtime="20210616 03:09:16.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:09:16.326" level="INFO">2021-06-16 03:09:14,051 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:09:14,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:09:14,166 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:09:15,441 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:09:15,441 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-53A965B93AD3-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:09:15,443 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:09:16.325" endtime="20210616 03:09:16.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:09:16.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:09:16.326" endtime="20210616 03:09:16.327"/>
</kw>
<status status="PASS" starttime="20210616 03:09:10.242" endtime="20210616 03:09:16.327"/>
</kw>
<msg timestamp="20210616 03:09:16.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:09:10.242" endtime="20210616 03:09:16.327"/>
</kw>
<status status="PASS" starttime="20210616 03:09:10.241" endtime="20210616 03:09:16.328"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:09:16.333" level="INFO">Running command 'ozone sh key list fstest1/07623-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:09:20.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:09:20.426" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:09:16.330" endtime="20210616 03:09:20.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:09:20.427" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:09:20.426" endtime="20210616 03:09:20.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:09:20.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:09:20.427" endtime="20210616 03:09:20.428"/>
</kw>
<status status="PASS" starttime="20210616 03:09:16.329" endtime="20210616 03:09:20.429"/>
</kw>
<msg timestamp="20210616 03:09:20.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:09:16.329" endtime="20210616 03:09:20.429"/>
</kw>
<msg timestamp="20210616 03:09:20.429" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:09:16.328" endtime="20210616 03:09:20.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:09:20.430" endtime="20210616 03:09:20.430"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:09:20.436" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:09:24.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:09:24.234" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:09 ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:09:20.433" endtime="20210616 03:09:24.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:09:24.235" level="INFO">Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:09 ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:09:24.234" endtime="20210616 03:09:24.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:09:24.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:09:24.235" endtime="20210616 03:09:24.236"/>
</kw>
<status status="PASS" starttime="20210616 03:09:20.432" endtime="20210616 03:09:24.236"/>
</kw>
<msg timestamp="20210616 03:09:24.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:09:20.431" endtime="20210616 03:09:24.237"/>
</kw>
<msg timestamp="20210616 03:09:24.237" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-16 03:09 ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:09:20.431" endtime="20210616 03:09:24.237"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:09:24.237" endtime="20210616 03:09:24.238"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:09:24.238" endtime="20210616 03:09:24.238"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:09:06.407" endtime="20210616 03:09:24.239"/>
</test>
<test id="s1-s6-t10" name="Cat file">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:09:24.248" level="INFO">Running command 'ozone fs -cat ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:09:29.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:09:29.774" level="INFO">${output} = 2021-06-16 03:09:28,098 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:09:28,193 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:09:24.245" endtime="20210616 03:09:29.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:09:29.776" level="INFO">2021-06-16 03:09:28,098 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:09:28,193 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:09:28,193 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Ozone
Copyright 2021 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20210616 03:09:29.775" endtime="20210616 03:09:29.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:09:29.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:09:29.776" endtime="20210616 03:09:29.777"/>
</kw>
<status status="PASS" starttime="20210616 03:09:24.244" endtime="20210616 03:09:29.777"/>
</kw>
<msg timestamp="20210616 03:09:29.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:09:24.243" endtime="20210616 03:09:29.778"/>
</kw>
<status status="PASS" starttime="20210616 03:09:24.241" endtime="20210616 03:09:29.779"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:09:24.240" endtime="20210616 03:09:29.779"/>
</test>
<test id="s1-s6-t11" name="Delete file">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:09:29.786" level="INFO">Running command 'ozone fs -rm -skipTrash ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:09:33.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:09:33.603" level="INFO">${output} = Deleted ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:09:29.784" endtime="20210616 03:09:33.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:09:33.604" level="INFO">Deleted ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:09:33.603" endtime="20210616 03:09:33.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:09:33.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:09:33.604" endtime="20210616 03:09:33.605"/>
</kw>
<status status="PASS" starttime="20210616 03:09:29.783" endtime="20210616 03:09:33.606"/>
</kw>
<msg timestamp="20210616 03:09:33.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:09:29.783" endtime="20210616 03:09:33.606"/>
</kw>
<status status="PASS" starttime="20210616 03:09:29.782" endtime="20210616 03:09:33.606"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:09:33.612" level="INFO">Running command 'ozone sh key list fstest1/07623-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:09:37.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:09:37.518" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210616 03:09:33.609" endtime="20210616 03:09:37.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:09:37.519" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210616 03:09:37.519" endtime="20210616 03:09:37.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:09:37.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:09:37.520" endtime="20210616 03:09:37.520"/>
</kw>
<status status="PASS" starttime="20210616 03:09:33.608" endtime="20210616 03:09:37.521"/>
</kw>
<msg timestamp="20210616 03:09:37.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:09:33.607" endtime="20210616 03:09:37.521"/>
</kw>
<msg timestamp="20210616 03:09:37.521" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210616 03:09:33.606" endtime="20210616 03:09:37.521"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:09:37.522" endtime="20210616 03:09:37.522"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:09:29.781" endtime="20210616 03:09:37.522"/>
</test>
<test id="s1-s6-t12" name="Delete dir">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:09:37.528" level="INFO">Running command 'ozone fs -rmdir ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:09:41.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:09:41.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:09:37.526" endtime="20210616 03:09:41.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:09:41.590" level="INFO"/>
<status status="PASS" starttime="20210616 03:09:41.589" endtime="20210616 03:09:41.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:09:41.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:09:41.590" endtime="20210616 03:09:41.591"/>
</kw>
<status status="PASS" starttime="20210616 03:09:37.525" endtime="20210616 03:09:41.591"/>
</kw>
<msg timestamp="20210616 03:09:41.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:09:37.525" endtime="20210616 03:09:41.591"/>
</kw>
<msg timestamp="20210616 03:09:41.591" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 03:09:37.524" endtime="20210616 03:09:41.592"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:09:41.596" level="INFO">Running command 'ozone sh key list fstest1/07623-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:09:45.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:09:45.992" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:09:41.594" endtime="20210616 03:09:45.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:09:45.994" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:09:45.993" endtime="20210616 03:09:45.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:09:45.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:09:45.994" endtime="20210616 03:09:45.995"/>
</kw>
<status status="PASS" starttime="20210616 03:09:41.593" endtime="20210616 03:09:45.995"/>
</kw>
<msg timestamp="20210616 03:09:45.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:09:41.593" endtime="20210616 03:09:45.995"/>
</kw>
<msg timestamp="20210616 03:09:45.996" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210616 03:09:41.592" endtime="20210616 03:09:45.996"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:09:45.996" endtime="20210616 03:09:45.997"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:09:37.523" endtime="20210616 03:09:45.997"/>
</test>
<test id="s1-s6-t13" name="Touch file">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:09:46.003" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:09:49.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:09:49.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:09:46.001" endtime="20210616 03:09:49.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:09:49.829" level="INFO"/>
<status status="PASS" starttime="20210616 03:09:49.828" endtime="20210616 03:09:49.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:09:49.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:09:49.830" endtime="20210616 03:09:49.830"/>
</kw>
<status status="PASS" starttime="20210616 03:09:46.000" endtime="20210616 03:09:49.831"/>
</kw>
<msg timestamp="20210616 03:09:49.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:09:46.000" endtime="20210616 03:09:49.831"/>
</kw>
<status status="PASS" starttime="20210616 03:09:45.999" endtime="20210616 03:09:49.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:09:49.838" level="INFO">Running command 'ozone sh key list fstest1/07623-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:09:54.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:09:54.193" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210616 03:09:49.834" endtime="20210616 03:09:54.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:09:54.195" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210616 03:09:54.194" endtime="20210616 03:09:54.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:09:54.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:09:54.196" endtime="20210616 03:09:54.196"/>
</kw>
<status status="PASS" starttime="20210616 03:09:49.833" endtime="20210616 03:09:54.197"/>
</kw>
<msg timestamp="20210616 03:09:54.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:09:49.832" endtime="20210616 03:09:54.197"/>
</kw>
<msg timestamp="20210616 03:09:54.198" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210616 03:09:49.832" endtime="20210616 03:09:54.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:09:54.198" endtime="20210616 03:09:54.199"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:09:45.998" endtime="20210616 03:09:54.199"/>
</test>
<test id="s1-s6-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:09:54.206" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:09:58.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:09:58.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:09:54.202" endtime="20210616 03:09:58.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:09:58.046" level="INFO"/>
<status status="PASS" starttime="20210616 03:09:58.045" endtime="20210616 03:09:58.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:09:58.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:09:58.046" endtime="20210616 03:09:58.047"/>
</kw>
<status status="PASS" starttime="20210616 03:09:54.202" endtime="20210616 03:09:58.047"/>
</kw>
<msg timestamp="20210616 03:09:58.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:09:54.201" endtime="20210616 03:09:58.048"/>
</kw>
<status status="PASS" starttime="20210616 03:09:54.201" endtime="20210616 03:09:58.048"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:09:58.053" level="INFO">Running command 'ozone fs -rm ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:02.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:02.155" level="INFO">${output} = 2021-06-16 03:10:01,741 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:10:01,892 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210616 03:09:58.051" endtime="20210616 03:10:02.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:02.157" level="INFO">2021-06-16 03:10:01,741 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:10:01,892 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/testFile.txt' to trash at: ofs://om/fstest1/07623-link1-ofs/.Trash/root/Current/fstest1/07623-link1-ofs/test/ofs/dir/testFile.txt</msg>
<status status="PASS" starttime="20210616 03:10:02.156" endtime="20210616 03:10:02.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:02.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:02.157" endtime="20210616 03:10:02.158"/>
</kw>
<status status="PASS" starttime="20210616 03:09:58.049" endtime="20210616 03:10:02.158"/>
</kw>
<msg timestamp="20210616 03:10:02.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:09:58.049" endtime="20210616 03:10:02.158"/>
</kw>
<status status="PASS" starttime="20210616 03:09:58.048" endtime="20210616 03:10:02.159"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:02.163" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/07623-link1-ofs// 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:06.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:06.290" level="INFO">${output} = drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/.Trash
drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/.Trash/root
drwxrwxrw...</msg>
<status status="PASS" starttime="20210616 03:10:02.161" endtime="20210616 03:10:06.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:06.292" level="INFO">drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/.Trash
drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/.Trash/root
drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/.Trash/root/Current
drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/.Trash/root/Current/fstest1
drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/.Trash/root/Current/fstest1/07623-link1-ofs
drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/.Trash/root/Current/fstest1/07623-link1-ofs/test
drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/.Trash/root/Current/fstest1/07623-link1-ofs/test/ofs
drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/.Trash/root/Current/fstest1/07623-link1-ofs/test/ofs/dir
-rw-rw-rw-   3 root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/.Trash/root/Current/fstest1/07623-link1-ofs/test/ofs/dir/testFile.txt
drwxrwxrwx   - root root          0 2021-06-16 03:08 ofs://om/fstest1/07623-link1-ofs/test
drwxrwxrwx   - root root          0 2021-06-16 03:08 ofs://om/fstest1/07623-link1-ofs/test/ofs
drwxrwxrwx   - root root          0 2021-06-16 03:08 ofs://om/fstest1/07623-link1-ofs/test/ofs/dir
-rw-rw-rw-   3 root root      17526 2021-06-16 03:09 ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/MOVED.TXT
-rw-rw-rw-   3 root root      17526 2021-06-16 03:08 ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 root root          0 2021-06-16 03:09 ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210616 03:10:06.291" endtime="20210616 03:10:06.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:06.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:06.292" endtime="20210616 03:10:06.293"/>
</kw>
<status status="PASS" starttime="20210616 03:10:02.160" endtime="20210616 03:10:06.293"/>
</kw>
<msg timestamp="20210616 03:10:06.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:02.159" endtime="20210616 03:10:06.294"/>
</kw>
<msg timestamp="20210616 03:10:06.294" level="INFO">${result} = drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/.Trash
drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/.Trash/root
drwxrwxrw...</msg>
<status status="PASS" starttime="20210616 03:10:02.159" endtime="20210616 03:10:06.294"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:10:06.294" endtime="20210616 03:10:06.295"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20210616 03:10:06.295" endtime="20210616 03:10:06.295"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:10:06.296" endtime="20210616 03:10:06.296"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:09:54.200" endtime="20210616 03:10:06.296"/>
</test>
<test id="s1-s6-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:06.303" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:10.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:10.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:10:06.300" endtime="20210616 03:10:10.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:10.510" level="INFO"/>
<status status="PASS" starttime="20210616 03:10:10.509" endtime="20210616 03:10:10.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:10.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:10.510" endtime="20210616 03:10:10.511"/>
</kw>
<status status="PASS" starttime="20210616 03:10:06.300" endtime="20210616 03:10:10.512"/>
</kw>
<msg timestamp="20210616 03:10:10.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:06.299" endtime="20210616 03:10:10.512"/>
</kw>
<status status="PASS" starttime="20210616 03:10:06.298" endtime="20210616 03:10:10.512"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:10.516" level="INFO">Running command 'ozone fs -rm -skipTrash -r ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:14.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:14.398" level="INFO">${output} = Deleted ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20210616 03:10:10.514" endtime="20210616 03:10:14.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:14.399" level="INFO">Deleted ofs://om/fstest1/07623-link1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20210616 03:10:14.399" endtime="20210616 03:10:14.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:14.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:14.400" endtime="20210616 03:10:14.401"/>
</kw>
<status status="PASS" starttime="20210616 03:10:10.513" endtime="20210616 03:10:14.401"/>
</kw>
<msg timestamp="20210616 03:10:14.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:10.513" endtime="20210616 03:10:14.401"/>
</kw>
<status status="PASS" starttime="20210616 03:10:10.512" endtime="20210616 03:10:14.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:14.406" level="INFO">Running command 'ozone sh key list fstest1/07623-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:18.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:18.495" level="INFO">${output} = .Trash/
.Trash/root/
.Trash/root/Current/
.Trash/root/Current/fstest1/
.Trash/root/Current/fstest1/07623-link1-ofs/
.Trash/root/Current/fstest1/07623-link1-ofs/test/
.Trash/root/Current/fstest1/07623-...</msg>
<status status="PASS" starttime="20210616 03:10:14.403" endtime="20210616 03:10:18.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:18.496" level="INFO">.Trash/
.Trash/root/
.Trash/root/Current/
.Trash/root/Current/fstest1/
.Trash/root/Current/fstest1/07623-link1-ofs/
.Trash/root/Current/fstest1/07623-link1-ofs/test/
.Trash/root/Current/fstest1/07623-link1-ofs/test/ofs/
.Trash/root/Current/fstest1/07623-link1-ofs/test/ofs/dir/
.Trash/root/Current/fstest1/07623-link1-ofs/test/ofs/dir/testFile.txt
test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210616 03:10:18.496" endtime="20210616 03:10:18.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:18.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:18.497" endtime="20210616 03:10:18.498"/>
</kw>
<status status="PASS" starttime="20210616 03:10:14.403" endtime="20210616 03:10:18.498"/>
</kw>
<msg timestamp="20210616 03:10:18.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:14.402" endtime="20210616 03:10:18.498"/>
</kw>
<msg timestamp="20210616 03:10:18.498" level="INFO">${result} = .Trash/
.Trash/root/
.Trash/root/Current/
.Trash/root/Current/fstest1/
.Trash/root/Current/fstest1/07623-link1-ofs/
.Trash/root/Current/fstest1/07623-link1-ofs/test/
.Trash/root/Current/fstest1/07623-...</msg>
<status status="PASS" starttime="20210616 03:10:14.402" endtime="20210616 03:10:18.499"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:10:18.499" endtime="20210616 03:10:18.499"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:10:06.298" endtime="20210616 03:10:18.500"/>
</test>
<test id="s1-s6-t16" name="List recursively">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:18.506" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:18.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:18.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:10:18.504" endtime="20210616 03:10:18.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:18.511" level="INFO"/>
<status status="PASS" starttime="20210616 03:10:18.510" endtime="20210616 03:10:18.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:18.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:18.511" endtime="20210616 03:10:18.512"/>
</kw>
<status status="PASS" starttime="20210616 03:10:18.503" endtime="20210616 03:10:18.512"/>
</kw>
<msg timestamp="20210616 03:10:18.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:18.503" endtime="20210616 03:10:18.513"/>
</kw>
<status status="PASS" starttime="20210616 03:10:18.502" endtime="20210616 03:10:18.513"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:18.517" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:18.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:18.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:10:18.515" endtime="20210616 03:10:18.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:18.522" level="INFO"/>
<status status="PASS" starttime="20210616 03:10:18.522" endtime="20210616 03:10:18.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:18.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:18.523" endtime="20210616 03:10:18.524"/>
</kw>
<status status="PASS" starttime="20210616 03:10:18.514" endtime="20210616 03:10:18.524"/>
</kw>
<msg timestamp="20210616 03:10:18.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:18.514" endtime="20210616 03:10:18.524"/>
</kw>
<status status="PASS" starttime="20210616 03:10:18.513" endtime="20210616 03:10:18.524"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:18.529" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:18.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:18.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:10:18.526" endtime="20210616 03:10:18.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:18.535" level="INFO"/>
<status status="PASS" starttime="20210616 03:10:18.534" endtime="20210616 03:10:18.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:18.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:18.535" endtime="20210616 03:10:18.536"/>
</kw>
<status status="PASS" starttime="20210616 03:10:18.526" endtime="20210616 03:10:18.536"/>
</kw>
<msg timestamp="20210616 03:10:18.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:18.525" endtime="20210616 03:10:18.536"/>
</kw>
<status status="PASS" starttime="20210616 03:10:18.525" endtime="20210616 03:10:18.536"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:18.541" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/07623-link1-ofs/testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:22.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:22.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:10:18.538" endtime="20210616 03:10:22.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:22.586" level="INFO"/>
<status status="PASS" starttime="20210616 03:10:22.585" endtime="20210616 03:10:22.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:22.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:22.586" endtime="20210616 03:10:22.587"/>
</kw>
<status status="PASS" starttime="20210616 03:10:18.538" endtime="20210616 03:10:22.588"/>
</kw>
<msg timestamp="20210616 03:10:22.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:18.537" endtime="20210616 03:10:22.589"/>
</kw>
<status status="PASS" starttime="20210616 03:10:18.537" endtime="20210616 03:10:22.589"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:22.593" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 ofs://om/fstest1/07623-link1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:28.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:28.665" level="INFO">${output} = 2021-06-16 03:10:26,710 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:10:26,857 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:10:22.591" endtime="20210616 03:10:28.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:28.666" level="INFO">2021-06-16 03:10:26,710 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:10:26,857 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:10:26,857 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:10:27,185 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:10:27,186 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-F9B588693FBB-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:10:27,188 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:10:28.666" endtime="20210616 03:10:28.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:28.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:28.667" endtime="20210616 03:10:28.668"/>
</kw>
<status status="PASS" starttime="20210616 03:10:22.590" endtime="20210616 03:10:28.668"/>
</kw>
<msg timestamp="20210616 03:10:28.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:22.590" endtime="20210616 03:10:28.668"/>
</kw>
<status status="PASS" starttime="20210616 03:10:22.589" endtime="20210616 03:10:28.669"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:28.673" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/07623-link1-ofs/testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:34.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:34.583" level="INFO">${output} = 2021-06-16 03:10:32,658 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:10:32,740 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:10:28.671" endtime="20210616 03:10:34.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:34.585" level="INFO">2021-06-16 03:10:32,658 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:10:32,740 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:10:32,741 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:10:33,061 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:10:33,062 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-9132F4DB4859-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:10:33,064 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:10:34.584" endtime="20210616 03:10:34.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:34.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:34.586" endtime="20210616 03:10:34.586"/>
</kw>
<status status="PASS" starttime="20210616 03:10:28.670" endtime="20210616 03:10:34.587"/>
</kw>
<msg timestamp="20210616 03:10:34.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:28.670" endtime="20210616 03:10:34.588"/>
</kw>
<status status="PASS" starttime="20210616 03:10:28.669" endtime="20210616 03:10:34.588"/>
</kw>
<status status="PASS" starttime="20210616 03:10:18.502" endtime="20210616 03:10:34.588"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:34.593" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/07623-link1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:38.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:38.378" level="INFO">${output} = -rw-rw-rw-   3 root root      17526 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/testdir1...</msg>
<status status="PASS" starttime="20210616 03:10:34.591" endtime="20210616 03:10:38.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:38.379" level="INFO">-rw-rw-rw-   3 root root      17526 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/testdir1/localdir1
-rw-rw-rw-   3 root root      17526 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20210616 03:10:38.378" endtime="20210616 03:10:38.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:38.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:38.380" endtime="20210616 03:10:38.380"/>
</kw>
<status status="PASS" starttime="20210616 03:10:34.590" endtime="20210616 03:10:38.381"/>
</kw>
<msg timestamp="20210616 03:10:38.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:34.589" endtime="20210616 03:10:38.381"/>
</kw>
<msg timestamp="20210616 03:10:38.381" level="INFO">${result} = -rw-rw-rw-   3 root root      17526 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-16 03:10 ofs://om/fstest1/07623-link1-ofs/testdir1...</msg>
<status status="PASS" starttime="20210616 03:10:34.588" endtime="20210616 03:10:38.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:10:38.381" endtime="20210616 03:10:38.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:10:38.382" endtime="20210616 03:10:38.383"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:10:18.501" endtime="20210616 03:10:38.383"/>
</test>
<test id="s1-s6-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:10:38.390" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210616 03:10:38.389" endtime="20210616 03:10:38.390"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:10:38.391" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210616 03:10:38.390" endtime="20210616 03:10:38.391"/>
</kw>
<status status="PASS" starttime="20210616 03:10:38.389" endtime="20210616 03:10:38.391"/>
</kw>
<msg timestamp="20210616 03:10:38.391" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210616 03:10:38.387" endtime="20210616 03:10:38.391"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:10:38.394" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20210616 03:10:38.393" endtime="20210616 03:10:38.394"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:10:38.395" level="INFO">${result} = /testdir2</msg>
<status status="PASS" starttime="20210616 03:10:38.394" endtime="20210616 03:10:38.395"/>
</kw>
<status status="PASS" starttime="20210616 03:10:38.393" endtime="20210616 03:10:38.395"/>
</kw>
<msg timestamp="20210616 03:10:38.395" level="INFO">${path_with_leading} = /testdir2</msg>
<status status="PASS" starttime="20210616 03:10:38.391" endtime="20210616 03:10:38.395"/>
</kw>
<status status="PASS" starttime="20210616 03:10:38.387" endtime="20210616 03:10:38.397"/>
</kw>
<msg timestamp="20210616 03:10:38.397" level="INFO">${url} = ofs://om/fstest1/07623-link2-ofs/testdir2</msg>
<status status="PASS" starttime="20210616 03:10:38.385" endtime="20210616 03:10:38.397"/>
</kw>
<msg timestamp="20210616 03:10:38.398" level="INFO">${target} = ofs://om/fstest1/07623-link2-ofs/testdir2</msg>
<status status="PASS" starttime="20210616 03:10:38.384" endtime="20210616 03:10:38.398"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:38.402" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/07623-link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:42.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:42.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:10:38.399" endtime="20210616 03:10:42.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:42.239" level="INFO"/>
<status status="PASS" starttime="20210616 03:10:42.238" endtime="20210616 03:10:42.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:42.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:42.239" endtime="20210616 03:10:42.240"/>
</kw>
<status status="PASS" starttime="20210616 03:10:38.399" endtime="20210616 03:10:42.240"/>
</kw>
<msg timestamp="20210616 03:10:42.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:38.398" endtime="20210616 03:10:42.240"/>
</kw>
<status status="PASS" starttime="20210616 03:10:38.398" endtime="20210616 03:10:42.241"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:42.245" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/07623-link1-ofs//testdir1/localdir1 ofs://om/fstest1/07623-link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:48.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:48.274" level="INFO">${output} = 2021-06-16 03:10:46,165 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:10:46,253 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:10:42.243" endtime="20210616 03:10:48.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:48.275" level="INFO">2021-06-16 03:10:46,165 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:10:46,253 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:10:46,253 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:10:47,505 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:10:47,506 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-A445E6994117-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:10:47,507 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:10:48.275" endtime="20210616 03:10:48.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:48.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:48.276" endtime="20210616 03:10:48.276"/>
</kw>
<status status="PASS" starttime="20210616 03:10:42.242" endtime="20210616 03:10:48.277"/>
</kw>
<msg timestamp="20210616 03:10:48.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:42.242" endtime="20210616 03:10:48.277"/>
</kw>
<status status="PASS" starttime="20210616 03:10:42.241" endtime="20210616 03:10:48.277"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:48.282" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest1/07623-link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:52.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:52.222" level="INFO">${output} = 2021-06-16 03:10:51,981 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:10:52,117 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210616 03:10:48.279" endtime="20210616 03:10:52.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:52.223" level="INFO">2021-06-16 03:10:51,981 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:10:52,117 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/07623-link2-ofs/testdir2' to trash at: ofs://om/fstest1/07623-link2-ofs/.Trash/root/Current/fstest1/07623-link2-ofs/testdir2</msg>
<status status="PASS" starttime="20210616 03:10:52.223" endtime="20210616 03:10:52.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:52.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:52.223" endtime="20210616 03:10:52.224"/>
</kw>
<status status="PASS" starttime="20210616 03:10:48.279" endtime="20210616 03:10:52.225"/>
</kw>
<msg timestamp="20210616 03:10:52.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:48.278" endtime="20210616 03:10:52.225"/>
</kw>
<status status="PASS" starttime="20210616 03:10:48.278" endtime="20210616 03:10:52.225"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:10:38.383" endtime="20210616 03:10:52.225"/>
</test>
<test id="s1-s6-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:10:52.233" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210616 03:10:52.232" endtime="20210616 03:10:52.233"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:10:52.234" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210616 03:10:52.233" endtime="20210616 03:10:52.234"/>
</kw>
<status status="PASS" starttime="20210616 03:10:52.232" endtime="20210616 03:10:52.234"/>
</kw>
<msg timestamp="20210616 03:10:52.234" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210616 03:10:52.230" endtime="20210616 03:10:52.234"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210616 03:10:52.237" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20210616 03:10:52.236" endtime="20210616 03:10:52.237"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:10:52.239" level="INFO">${result} = /testdir3</msg>
<status status="PASS" starttime="20210616 03:10:52.237" endtime="20210616 03:10:52.240"/>
</kw>
<status status="PASS" starttime="20210616 03:10:52.236" endtime="20210616 03:10:52.240"/>
</kw>
<msg timestamp="20210616 03:10:52.240" level="INFO">${path_with_leading} = /testdir3</msg>
<status status="PASS" starttime="20210616 03:10:52.234" endtime="20210616 03:10:52.240"/>
</kw>
<status status="PASS" starttime="20210616 03:10:52.229" endtime="20210616 03:10:52.241"/>
</kw>
<msg timestamp="20210616 03:10:52.241" level="INFO">${url} = ofs://om/fstest2/07623-link3-ofs/testdir3</msg>
<status status="PASS" starttime="20210616 03:10:52.229" endtime="20210616 03:10:52.241"/>
</kw>
<msg timestamp="20210616 03:10:52.241" level="INFO">${target} = ofs://om/fstest2/07623-link3-ofs/testdir3</msg>
<status status="PASS" starttime="20210616 03:10:52.228" endtime="20210616 03:10:52.241"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:52.245" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest2/07623-link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:10:56.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:10:56.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:10:52.243" endtime="20210616 03:10:56.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:10:56.012" level="INFO"/>
<status status="PASS" starttime="20210616 03:10:56.011" endtime="20210616 03:10:56.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:10:56.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:10:56.012" endtime="20210616 03:10:56.013"/>
</kw>
<status status="PASS" starttime="20210616 03:10:52.242" endtime="20210616 03:10:56.013"/>
</kw>
<msg timestamp="20210616 03:10:56.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:52.242" endtime="20210616 03:10:56.014"/>
</kw>
<status status="PASS" starttime="20210616 03:10:52.241" endtime="20210616 03:10:56.014"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:10:56.018" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/07623-link1-ofs//testdir1/localdir1 ofs://om/fstest2/07623-link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:11:02.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:11:02.160" level="INFO">${output} = 2021-06-16 03:10:59,940 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:11:00,055 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:10:56.016" endtime="20210616 03:11:02.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:02.161" level="INFO">2021-06-16 03:10:59,940 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:11:00,055 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:11:00,055 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-16 03:11:01,451 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-16 03:11:01,451 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-CC675E69026F-&gt;1cdf2ef8-5fd3-4344-90c5-5b12b8cb80ec
2021-06-16 03:11:01,452 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210616 03:11:02.160" endtime="20210616 03:11:02.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:11:02.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:11:02.161" endtime="20210616 03:11:02.163"/>
</kw>
<status status="PASS" starttime="20210616 03:10:56.015" endtime="20210616 03:11:02.163"/>
</kw>
<msg timestamp="20210616 03:11:02.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:10:56.015" endtime="20210616 03:11:02.163"/>
</kw>
<status status="PASS" starttime="20210616 03:10:56.014" endtime="20210616 03:11:02.164"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:11:02.168" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest2/07623-link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:11:06.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:11:06.114" level="INFO">${output} = 2021-06-16 03:11:05,830 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:11:05,976 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210616 03:11:02.166" endtime="20210616 03:11:06.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:06.115" level="INFO">2021-06-16 03:11:05,830 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-16 03:11:05,976 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest2/07623-link3-ofs/testdir3' to trash at: ofs://om/fstest2/07623-link3-ofs/.Trash/root/Current/fstest2/07623-link3-ofs/testdir3</msg>
<status status="PASS" starttime="20210616 03:11:06.114" endtime="20210616 03:11:06.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:11:06.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:11:06.115" endtime="20210616 03:11:06.116"/>
</kw>
<status status="PASS" starttime="20210616 03:11:02.165" endtime="20210616 03:11:06.116"/>
</kw>
<msg timestamp="20210616 03:11:06.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:11:02.165" endtime="20210616 03:11:06.117"/>
</kw>
<status status="PASS" starttime="20210616 03:11:02.164" endtime="20210616 03:11:06.117"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:10:52.227" endtime="20210616 03:11:06.117"/>
</test>
<test id="s1-s6-t19" name="List file created via shell">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:11:06.123" level="INFO">Running command 'ozone sh key put fstest1/07623-link1-ofs/ofs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:11:12.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:11:12.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:11:06.121" endtime="20210616 03:11:12.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:12.591" level="INFO"/>
<status status="PASS" starttime="20210616 03:11:12.591" endtime="20210616 03:11:12.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:11:12.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:11:12.592" endtime="20210616 03:11:12.593"/>
</kw>
<status status="PASS" starttime="20210616 03:11:06.120" endtime="20210616 03:11:12.593"/>
</kw>
<msg timestamp="20210616 03:11:12.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:11:06.120" endtime="20210616 03:11:12.593"/>
</kw>
<status status="PASS" starttime="20210616 03:11:06.119" endtime="20210616 03:11:12.594"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:11:12.600" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/07623-link1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:11:16.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:11:16.473" level="INFO">${output} = -rw-rw-rw-   3 root root      17526 2021-06-16 03:11 ofs://om/fstest1/07623-link1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210616 03:11:12.596" endtime="20210616 03:11:16.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:16.475" level="INFO">-rw-rw-rw-   3 root root      17526 2021-06-16 03:11 ofs://om/fstest1/07623-link1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210616 03:11:16.474" endtime="20210616 03:11:16.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:11:16.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:11:16.475" endtime="20210616 03:11:16.476"/>
</kw>
<status status="PASS" starttime="20210616 03:11:12.595" endtime="20210616 03:11:16.477"/>
</kw>
<msg timestamp="20210616 03:11:16.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:11:12.595" endtime="20210616 03:11:16.478"/>
</kw>
<msg timestamp="20210616 03:11:16.478" level="INFO">${result} = -rw-rw-rw-   3 root root      17526 2021-06-16 03:11 ofs://om/fstest1/07623-link1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210616 03:11:12.594" endtime="20210616 03:11:16.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:11:16.478" endtime="20210616 03:11:16.479"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:11:06.118" endtime="20210616 03:11:16.479"/>
</test>
<test id="s1-s6-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:11:16.484" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/07623-link1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:11:20.204" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:11:20.204" level="INFO">${output} = copyFromLocal: `ofs://om/fstest1/07623-link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210616 03:11:16.482" endtime="20210616 03:11:20.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:20.205" level="INFO">copyFromLocal: `ofs://om/fstest1/07623-link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210616 03:11:20.205" endtime="20210616 03:11:20.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:11:20.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:11:20.206" endtime="20210616 03:11:20.206"/>
</kw>
<msg timestamp="20210616 03:11:20.207" level="INFO">${result} = copyFromLocal: `ofs://om/fstest1/07623-link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210616 03:11:16.481" endtime="20210616 03:11:20.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:11:20.207" endtime="20210616 03:11:20.208"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:11:16.480" endtime="20210616 03:11:20.208"/>
</test>
<test id="s1-s6-t21" name="Get file">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:11:20.214" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:11:20.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:11:20.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:11:20.211" endtime="20210616 03:11:20.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:20.218" level="INFO"/>
<status status="PASS" starttime="20210616 03:11:20.217" endtime="20210616 03:11:20.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:11:20.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:11:20.218" endtime="20210616 03:11:20.219"/>
</kw>
<status status="PASS" starttime="20210616 03:11:20.211" endtime="20210616 03:11:20.219"/>
</kw>
<msg timestamp="20210616 03:11:20.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:11:20.210" endtime="20210616 03:11:20.219"/>
</kw>
<status status="PASS" starttime="20210616 03:11:20.209" endtime="20210616 03:11:20.220"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:11:20.227" level="INFO">Running command 'ozone fs -get ofs://om/fstest1/07623-link1-ofs/ofs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:11:25.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:11:25.712" level="INFO">${output} = 2021-06-16 03:11:23,914 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:11:23,996 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210616 03:11:20.222" endtime="20210616 03:11:25.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:11:25.714" level="INFO">2021-06-16 03:11:23,914 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-16 03:11:23,996 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-16 03:11:23,996 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20210616 03:11:25.713" endtime="20210616 03:11:25.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:11:25.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:11:25.714" endtime="20210616 03:11:25.715"/>
</kw>
<status status="PASS" starttime="20210616 03:11:20.221" endtime="20210616 03:11:25.715"/>
</kw>
<msg timestamp="20210616 03:11:25.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:11:20.220" endtime="20210616 03:11:25.715"/>
</kw>
<status status="PASS" starttime="20210616 03:11:20.220" endtime="20210616 03:11:25.716"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210616 03:11:25.716" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210616 03:11:25.716" endtime="20210616 03:11:25.717"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:11:20.209" endtime="20210616 03:11:25.717"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20210616 03:07:20.520" endtime="20210616 03:11:25.720"/>
</suite>
<suite id="s1-s7" name="Security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s7-s1" name="Admin-Cert" source="/opt/hadoop/smoketest/security/admin-cert.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:11.460" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:11.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:11.464" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 03:02:11.456" endtime="20210616 03:02:11.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:11.465" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 03:02:11.465" endtime="20210616 03:02:11.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:11.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:11.465" endtime="20210616 03:02:11.466"/>
</kw>
<status status="PASS" starttime="20210616 03:02:11.455" endtime="20210616 03:02:11.466"/>
</kw>
<msg timestamp="20210616 03:02:11.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:11.455" endtime="20210616 03:02:11.467"/>
</kw>
<msg timestamp="20210616 03:02:11.467" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 03:02:11.455" endtime="20210616 03:02:11.467"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:02:11.469" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 03:02:11.467" endtime="20210616 03:02:11.469"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:11.473" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:11.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:11.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:02:11.471" endtime="20210616 03:02:11.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:11.499" level="INFO"/>
<status status="PASS" starttime="20210616 03:02:11.498" endtime="20210616 03:02:11.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:11.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:11.499" endtime="20210616 03:02:11.500"/>
</kw>
<status status="PASS" starttime="20210616 03:02:11.471" endtime="20210616 03:02:11.500"/>
</kw>
<msg timestamp="20210616 03:02:11.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:11.470" endtime="20210616 03:02:11.500"/>
</kw>
<status status="PASS" starttime="20210616 03:02:11.470" endtime="20210616 03:02:11.500"/>
</kw>
<status status="PASS" starttime="20210616 03:02:11.469" endtime="20210616 03:02:11.501"/>
</kw>
<status status="PASS" starttime="20210616 03:02:11.454" endtime="20210616 03:02:11.501"/>
</kw>
<status status="PASS" starttime="20210616 03:02:11.454" endtime="20210616 03:02:11.501"/>
</kw>
<status status="PASS" starttime="20210616 03:02:11.453" endtime="20210616 03:02:11.501"/>
</kw>
<test id="s1-s7-s1-t1" name="List valid certificates">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:11.506" level="INFO">Running command 'ozone admin cert list 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:14.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:14.770" level="INFO">${output} = Total 6 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20210616 03:02:11.504" endtime="20210616 03:02:14.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:14.772" level="INFO">Total 6 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       
1                 Wed Jun 16 00:00:00 UTC 2021   Sat Jul 25 23:59:59 UTC 2026   O=CID-89c9dc86-2b93-452b-a174-fd4683383067, OU=6fb0cd91-a7eb-46dc-aeb6-28c6276e3a70, CN=scm@scm               
307847224683      Wed Jun 16 00:00:00 UTC 2021   Sat Jul 25 00:00:00 UTC 2026   O=CID-89c9dc86-2b93-452b-a174-fd4683383067, OU=6fb0cd91-a7eb-46dc-aeb6-28c6276e3a70, CN=scm-sub@scm           
317359383547      Wed Jun 16 00:00:00 UTC 2021   Thu Jun 16 00:00:00 UTC 2022   O=CID-89c9dc86-2b93-452b-a174-fd4683383067, OU=6fb0cd91-a7eb-46dc-aeb6-28c6276e3a70, CN=root@af4ae9d1e9de     
317556358225      Wed Jun 16 00:00:00 UTC 2021   Thu Jun 16 00:00:00 UTC 2022   O=CID-89c9dc86-2b93-452b-a174-fd4683383067, OU=6fb0cd91-a7eb-46dc-aeb6-28c6276e3a70, CN=root@a05bd0a5f5d0     
317776511278      Wed Jun 16 00:00:00 UTC 2021   Thu Jun 16 00:00:00 UTC 2022   O=CID-89c9dc86-2b93-452b-a174-fd4683383067, OU=6fb0cd91-a7eb-46dc-aeb6-28c6276e3a70, CN=root@fc48781beb2c     
322931689101      Wed Jun 16 00:00:00 UTC 2021   Thu Jun 16 00:00:00 UTC 2022   O=CID-89c9dc86-2b93-452b-a174-fd4683383067, OU=6fb0cd91-a7eb-46dc-aeb6-28c6276e3a70, CN=om                    </msg>
<status status="PASS" starttime="20210616 03:02:14.771" endtime="20210616 03:02:14.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:14.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:14.772" endtime="20210616 03:02:14.773"/>
</kw>
<status status="PASS" starttime="20210616 03:02:11.503" endtime="20210616 03:02:14.773"/>
</kw>
<msg timestamp="20210616 03:02:14.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:11.503" endtime="20210616 03:02:14.774"/>
</kw>
<msg timestamp="20210616 03:02:14.774" level="INFO">${output} = Total 6 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20210616 03:02:11.502" endtime="20210616 03:02:14.774"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>valid certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:02:14.774" endtime="20210616 03:02:14.775"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:02:11.501" endtime="20210616 03:02:14.775"/>
</test>
<test id="s1-s7-s1-t2" name="List revoked certificates">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -t revoked</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:14.781" level="INFO">Running command 'ozone admin cert list -t revoked 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:17.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:17.860" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20210616 03:02:14.778" endtime="20210616 03:02:17.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:17.862" level="INFO">Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       </msg>
<status status="PASS" starttime="20210616 03:02:17.861" endtime="20210616 03:02:17.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:17.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:17.862" endtime="20210616 03:02:17.863"/>
</kw>
<status status="PASS" starttime="20210616 03:02:14.778" endtime="20210616 03:02:17.863"/>
</kw>
<msg timestamp="20210616 03:02:17.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:14.778" endtime="20210616 03:02:17.864"/>
</kw>
<msg timestamp="20210616 03:02:17.864" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20210616 03:02:14.777" endtime="20210616 03:02:17.864"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Total 0 revoked certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:02:17.864" endtime="20210616 03:02:17.865"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:02:14.776" endtime="20210616 03:02:17.865"/>
</test>
<test id="s1-s7-s1-t3" name="Info of the cert">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:17.870" level="INFO">Running command 'for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:24.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:24.479" level="INFO">${output} = Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-89c9dc86-2b93-452b-a174-fd4683383067, OU=6fb0cd91-a7eb-46dc-aeb6-28c6276e3a70, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.11354...</msg>
<status status="PASS" starttime="20210616 03:02:17.868" endtime="20210616 03:02:24.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:24.481" level="INFO">Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-89c9dc86-2b93-452b-a174-fd4683383067, OU=6fb0cd91-a7eb-46dc-aeb6-28c6276e3a70, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.113549.1.1.11

  Key:  Sun RSA public key, 2048 bits
  params: null
  modulus: 22515336846330959876196122942443260478848281415169943920769788678289222260125191483647863478760193713322649133680927536497349373400399255743087444333803031105535234182703555282168163417953138420870817303978110334811329363502917771148699230457057640493942037327734021401234384395859352747736474542627888785877936309484396089037689098374270567906893196208945667644966717487363889971663909964026656025854322609717786902920125474776563122703259044736627652416646819777640583430311560376304854100699474467508420888644601336784635910720720669986715679922480734198977806591315899377454436836201834972217122490887529015680671
  public exponent: 65537
  Validity: [From: Wed Jun 16 00:00:00 UTC 2021,
               To: Sat Jul 25 23:59:59 UTC 2026]
  Issuer: O=CID-89c9dc86-2b93-452b-a174-fd4683383067, OU=6fb0cd91-a7eb-46dc-aeb6-28c6276e3a70, CN=scm@scm
  SerialNumber: [    01]

Certificate Extensions: 3
[1]: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

[2]: ObjectId: 2.5.29.15 Criticality=true
KeyUsage [
  Key_CertSign
  Crl_Sign
]

[3]: ObjectId: 2.5.29.17 Criticality=false
SubjectAlternativeName [
  IPAddress: 172.18.0.3
]

]
  Algorithm: [SHA256withRSA]
  Signature:
0000: AC 03 3F F6 B5 E1 C7 19   53 4C 50 3D E4 E3 18 A1  ..?.....SLP=....
0010: 89 29 8B 2B 4C D3 39 00   5B A7 D7 A2 15 28 68 30  .).+L.9.[....(h0
0020: 2E 4F 02 A1 98 00 E0 5A   34 F0 68 3A 42 B9 76 C9  .O.....Z4.h:B.v.
0030: 5D 96 AD BD B3 FD B9 A0   61 28 67 DA 6A 99 EE D0  ].......a(g.j...
0040: 5D C0 45 9D 90 A8 FD 75   5D 36 15 A4 DA CF D2 99  ].E....u]6......
0050: A2 BA 3A 1A BD 5C 45 29   EB D0 FA 63 3A 99 79 2A  ..:..\E)...c:.y*
0060: BC 6E 18 06 6F BE E5 8D   62 9A 74 4E 65 68 20 5A  .n..o...b.tNeh Z
0070: AC 41 65 57 35 27 DF 11   98 58 A3 29 BF 77 22 B6  .AeW5'...X.).w".
0080: 34 4B 27 14 1F 21 11 C1   4A 68 1C C2 8A 3A CB A1  4K'..!..Jh...:..
0090: F7 0A BC 06 BC BF B6 9A   F7 E0 2A 01 8E 75 69 09  ..........*..ui.
00A0: 18 52 03 7C 02 6D E3 93   45 80 CE EE CD D1 04 FD  .R...m..E.......
00B0: C3 6B 13 6B 34 E2 4A 0C   0F 66 0A BB F4 0D 93 51  .k.k4.J..f.....Q
00C0: 3F 36 31 52 B2 FF 62 B6   9B 23 BA 25 7B 05 98 D7  ?61R..b..#.%....
00D0: 3A 9A 1D 41 6D D9 D7 AD   CA 17 A2 D1 E6 9E 55 CD  :..Am.........U.
00E0: CE 1D C0 20 05 04 3A 79   EC 9B BD 2A 27 C9 2B 11  ... ..:y...*'.+.
00F0: F8 2A 56 A4 72 1A E8 F9   75 F5 AF 4D D3 9F 6B 39  .*V.r...u..M..k9

]</msg>
<status status="PASS" starttime="20210616 03:02:24.480" endtime="20210616 03:02:24.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:24.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:24.481" endtime="20210616 03:02:24.482"/>
</kw>
<status status="PASS" starttime="20210616 03:02:17.868" endtime="20210616 03:02:24.482"/>
</kw>
<msg timestamp="20210616 03:02:24.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:17.867" endtime="20210616 03:02:24.482"/>
</kw>
<msg timestamp="20210616 03:02:24.483" level="INFO">${output} = Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-89c9dc86-2b93-452b-a174-fd4683383067, OU=6fb0cd91-a7eb-46dc-aeb6-28c6276e3a70, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.11354...</msg>
<status status="PASS" starttime="20210616 03:02:17.867" endtime="20210616 03:02:24.483"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate not found</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:02:24.483" endtime="20210616 03:02:24.484"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:02:17.866" endtime="20210616 03:02:24.484"/>
</test>
<doc>Test for ozone admin cert command</doc>
<status status="PASS" starttime="20210616 03:02:11.415" endtime="20210616 03:02:24.486"/>
</suite>
<suite id="s1-s7-s2" name="Bucket-Encryption" source="/opt/hadoop/smoketest/security/bucket-encryption.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Create Random Volume" library="shell">
<var>${volume}</var>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 03:02:24.499" level="INFO">${random} = kjegm</msg>
<status status="PASS" starttime="20210616 03:02:24.498" endtime="20210616 03:02:24.499"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:24.502" level="INFO">Running command 'ozone sh volume create o3://om/vol-kjegm 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:28.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:28.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:02:24.500" endtime="20210616 03:02:28.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:28.434" level="INFO"/>
<status status="PASS" starttime="20210616 03:02:28.433" endtime="20210616 03:02:28.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:28.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:28.434" endtime="20210616 03:02:28.435"/>
</kw>
<status status="PASS" starttime="20210616 03:02:24.500" endtime="20210616 03:02:28.435"/>
</kw>
<msg timestamp="20210616 03:02:28.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:24.499" endtime="20210616 03:02:28.435"/>
</kw>
<status status="PASS" starttime="20210616 03:02:24.499" endtime="20210616 03:02:28.435"/>
</kw>
<msg timestamp="20210616 03:02:28.436" level="INFO">${volume} = vol-kjegm</msg>
<status status="PASS" starttime="20210616 03:02:24.498" endtime="20210616 03:02:28.436"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:02:28.437" level="INFO">${VOLUME} = vol-kjegm</msg>
<status status="PASS" starttime="20210616 03:02:28.436" endtime="20210616 03:02:28.437"/>
</kw>
<status status="PASS" starttime="20210616 03:02:24.497" endtime="20210616 03:02:28.437"/>
</kw>
<test id="s1-s7-s2-t1" name="Create Encrypted Bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:28.442" level="INFO">Running command 'ozone sh bucket create -k key1 o3://om/vol-kjegm/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:33.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:33.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:02:28.440" endtime="20210616 03:02:33.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:33.033" level="INFO"/>
<status status="PASS" starttime="20210616 03:02:33.032" endtime="20210616 03:02:33.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:33.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:33.033" endtime="20210616 03:02:33.034"/>
</kw>
<status status="PASS" starttime="20210616 03:02:28.439" endtime="20210616 03:02:33.035"/>
</kw>
<msg timestamp="20210616 03:02:33.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:28.439" endtime="20210616 03:02:33.035"/>
</kw>
<msg timestamp="20210616 03:02:33.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:02:28.438" endtime="20210616 03:02:33.035"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>INVALID_REQUEST</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:02:33.035" endtime="20210616 03:02:33.036"/>
</kw>
<kw name="Bucket Exists" library="shell">
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:33.039" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol-kjegm/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:37.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:37.177" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "vol-kjegm",
  "name" : "encrypted-bucket",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210616 03:02:33.037" endtime="20210616 03:02:37.178"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210616 03:02:37.178" endtime="20210616 03:02:37.179"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210616 03:02:37.179" endtime="20210616 03:02:37.179"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210616 03:02:37.179" endtime="20210616 03:02:37.180"/>
</kw>
<status status="PASS" starttime="20210616 03:02:33.036" endtime="20210616 03:02:37.180"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:02:28.437" endtime="20210616 03:02:37.180"/>
</test>
<test id="s1-s7-s2-t2" name="Create Key in Encrypted Bucket">
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket/passwd</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210616 03:02:37.183" level="INFO">${key} = o3://om/vol-kjegm/encrypted-bucket/passwd</msg>
<status status="PASS" starttime="20210616 03:02:37.183" endtime="20210616 03:02:37.183"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${key} /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:37.188" level="INFO">Running command 'ozone sh key put o3://om/vol-kjegm/encrypted-bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:44.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:44.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:02:37.185" endtime="20210616 03:02:44.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:44.338" level="INFO"/>
<status status="PASS" starttime="20210616 03:02:44.337" endtime="20210616 03:02:44.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:44.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:44.338" endtime="20210616 03:02:44.339"/>
</kw>
<status status="PASS" starttime="20210616 03:02:37.184" endtime="20210616 03:02:44.339"/>
</kw>
<msg timestamp="20210616 03:02:44.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:37.184" endtime="20210616 03:02:44.339"/>
</kw>
<msg timestamp="20210616 03:02:44.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:02:37.183" endtime="20210616 03:02:44.340"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 03:02:44.342" level="INFO">${postfix} = 21487</msg>
<status status="PASS" starttime="20210616 03:02:44.341" endtime="20210616 03:02:44.342"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210616 03:02:44.342" level="INFO">${tmpfile} = /tmp/tempkey-21487</msg>
<status status="PASS" starttime="20210616 03:02:44.342" endtime="20210616 03:02:44.342"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:44.346" level="INFO">Running command 'ozone sh key get o3://om/vol-kjegm/encrypted-bucket/passwd /tmp/tempkey-21487 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:50.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:50.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:02:44.344" endtime="20210616 03:02:50.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:50.734" level="INFO"/>
<status status="PASS" starttime="20210616 03:02:50.733" endtime="20210616 03:02:50.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:50.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:50.734" endtime="20210616 03:02:50.735"/>
</kw>
<status status="PASS" starttime="20210616 03:02:44.343" endtime="20210616 03:02:50.735"/>
</kw>
<msg timestamp="20210616 03:02:50.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:44.343" endtime="20210616 03:02:50.736"/>
</kw>
<status status="PASS" starttime="20210616 03:02:44.342" endtime="20210616 03:02:50.736"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210616 03:02:50.739" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-21487 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:50.742" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210616 03:02:50.736" endtime="20210616 03:02:50.742"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:50.746" level="INFO">Running command 'rm -f /tmp/tempkey-21487 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:50.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:50.749" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:02:50.744" endtime="20210616 03:02:50.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:50.751" level="INFO"/>
<status status="PASS" starttime="20210616 03:02:50.750" endtime="20210616 03:02:50.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:50.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:50.751" endtime="20210616 03:02:50.752"/>
</kw>
<status status="PASS" starttime="20210616 03:02:50.744" endtime="20210616 03:02:50.752"/>
</kw>
<msg timestamp="20210616 03:02:50.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:50.743" endtime="20210616 03:02:50.752"/>
</kw>
<status status="PASS" starttime="20210616 03:02:50.742" endtime="20210616 03:02:50.753"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210616 03:02:50.753" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210616 03:02:50.753" endtime="20210616 03:02:50.753"/>
</kw>
<msg timestamp="20210616 03:02:50.754" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210616 03:02:44.340" endtime="20210616 03:02:50.754"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210616 03:02:50.754" endtime="20210616 03:02:50.754"/>
</kw>
<status status="PASS" starttime="20210616 03:02:44.340" endtime="20210616 03:02:50.754"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:02:37.182" endtime="20210616 03:02:50.755"/>
</test>
<doc>Test for bucket encryption</doc>
<status status="PASS" starttime="20210616 03:02:24.488" endtime="20210616 03:02:50.756"/>
</suite>
<suite id="s1-s7-s3" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s7-s3-t1" name="Create volume bucket with wrong credentials">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:50.773" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:50.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:50.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:02:50.771" endtime="20210616 03:02:50.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:50.778" level="INFO"/>
<status status="PASS" starttime="20210616 03:02:50.777" endtime="20210616 03:02:50.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:50.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:50.778" endtime="20210616 03:02:50.780"/>
</kw>
<status status="PASS" starttime="20210616 03:02:50.770" endtime="20210616 03:02:50.780"/>
</kw>
<msg timestamp="20210616 03:02:50.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:50.770" endtime="20210616 03:02:50.781"/>
</kw>
<status status="PASS" starttime="20210616 03:02:50.769" endtime="20210616 03:02:50.781"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:50.783" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:54.035" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:02:54.035" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20210616 03:02:50.781" endtime="20210616 03:02:54.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:02:54.036" endtime="20210616 03:02:54.037"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:02:50.769" endtime="20210616 03:02:54.037"/>
</test>
<test id="s1-s7-s3-t2" name="Create volume with non-admin user">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:54.044" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:54.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:54.049" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 03:02:54.041" endtime="20210616 03:02:54.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:54.050" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 03:02:54.050" endtime="20210616 03:02:54.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:54.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:54.051" endtime="20210616 03:02:54.051"/>
</kw>
<status status="PASS" starttime="20210616 03:02:54.041" endtime="20210616 03:02:54.051"/>
</kw>
<msg timestamp="20210616 03:02:54.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:54.040" endtime="20210616 03:02:54.052"/>
</kw>
<msg timestamp="20210616 03:02:54.052" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 03:02:54.039" endtime="20210616 03:02:54.052"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:02:54.056" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 03:02:54.052" endtime="20210616 03:02:54.056"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:54.061" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:54.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:54.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:02:54.059" endtime="20210616 03:02:54.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:54.073" level="INFO"/>
<status status="PASS" starttime="20210616 03:02:54.073" endtime="20210616 03:02:54.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:54.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:54.074" endtime="20210616 03:02:54.074"/>
</kw>
<status status="PASS" starttime="20210616 03:02:54.058" endtime="20210616 03:02:54.075"/>
</kw>
<msg timestamp="20210616 03:02:54.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:54.058" endtime="20210616 03:02:54.075"/>
</kw>
<status status="PASS" starttime="20210616 03:02:54.057" endtime="20210616 03:02:54.075"/>
</kw>
<status status="PASS" starttime="20210616 03:02:54.056" endtime="20210616 03:02:54.075"/>
</kw>
<status status="PASS" starttime="20210616 03:02:54.039" endtime="20210616 03:02:54.075"/>
</kw>
<status status="PASS" starttime="20210616 03:02:54.039" endtime="20210616 03:02:54.075"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:54.078" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:57.705" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:02:57.705" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have CREATE permission to access volume fstest null null</msg>
<status status="PASS" starttime="20210616 03:02:54.076" endtime="20210616 03:02:57.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:02:57.706" endtime="20210616 03:02:57.706"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:02:54.038" endtime="20210616 03:02:57.707"/>
</test>
<test id="s1-s7-s3-t3" name="Create bucket with non-admin owner(testuser2)">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:57.714" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:57.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:57.717" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 03:02:57.711" endtime="20210616 03:02:57.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:57.719" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 03:02:57.718" endtime="20210616 03:02:57.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:57.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:57.719" endtime="20210616 03:02:57.720"/>
</kw>
<status status="PASS" starttime="20210616 03:02:57.711" endtime="20210616 03:02:57.720"/>
</kw>
<msg timestamp="20210616 03:02:57.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:57.711" endtime="20210616 03:02:57.720"/>
</kw>
<msg timestamp="20210616 03:02:57.720" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 03:02:57.710" endtime="20210616 03:02:57.720"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:02:57.721" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 03:02:57.721" endtime="20210616 03:02:57.721"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:57.727" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:02:57.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:02:57.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:02:57.724" endtime="20210616 03:02:57.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:02:57.736" level="INFO"/>
<status status="PASS" starttime="20210616 03:02:57.736" endtime="20210616 03:02:57.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:02:57.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:02:57.737" endtime="20210616 03:02:57.737"/>
</kw>
<status status="PASS" starttime="20210616 03:02:57.723" endtime="20210616 03:02:57.738"/>
</kw>
<msg timestamp="20210616 03:02:57.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:57.723" endtime="20210616 03:02:57.738"/>
</kw>
<status status="PASS" starttime="20210616 03:02:57.722" endtime="20210616 03:02:57.738"/>
</kw>
<status status="PASS" starttime="20210616 03:02:57.722" endtime="20210616 03:02:57.738"/>
</kw>
<status status="PASS" starttime="20210616 03:02:57.709" endtime="20210616 03:02:57.739"/>
</kw>
<status status="PASS" starttime="20210616 03:02:57.709" endtime="20210616 03:02:57.739"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 03:02:57.740" level="INFO">${random} = 10</msg>
<status status="PASS" starttime="20210616 03:02:57.740" endtime="20210616 03:02:57.740"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:02:57.742" level="INFO">${volume1} = fstest10</msg>
<status status="PASS" starttime="20210616 03:02:57.741" endtime="20210616 03:02:57.742"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:02:57.744" level="INFO">${volume2} = fstest210</msg>
<status status="PASS" starttime="20210616 03:02:57.743" endtime="20210616 03:02:57.744"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:02:57.746" level="INFO">${volume3} = fstest310</msg>
<status status="PASS" starttime="20210616 03:02:57.744" endtime="20210616 03:02:57.746"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:02:57.748" level="INFO">${volume4} = fstest410</msg>
<status status="PASS" starttime="20210616 03:02:57.747" endtime="20210616 03:02:57.748"/>
</kw>
<status status="PASS" starttime="20210616 03:02:57.739" endtime="20210616 03:02:57.749"/>
</kw>
<status status="PASS" starttime="20210616 03:02:57.739" endtime="20210616 03:02:57.749"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume4} -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:02:57.754" level="INFO">Running command 'ozone sh volume create o3://om/fstest410 -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:01.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:01.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:02:57.752" endtime="20210616 03:03:01.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:01.415" level="INFO"/>
<status status="PASS" starttime="20210616 03:03:01.414" endtime="20210616 03:03:01.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:01.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:01.415" endtime="20210616 03:03:01.415"/>
</kw>
<status status="PASS" starttime="20210616 03:02:57.750" endtime="20210616 03:03:01.416"/>
</kw>
<msg timestamp="20210616 03:03:01.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:02:57.750" endtime="20210616 03:03:01.416"/>
</kw>
<status status="PASS" starttime="20210616 03:02:57.749" endtime="20210616 03:03:01.416"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:01.422" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:01.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:01.425" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 03:03:01.419" endtime="20210616 03:03:01.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:01.427" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 03:03:01.426" endtime="20210616 03:03:01.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:01.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:01.427" endtime="20210616 03:03:01.428"/>
</kw>
<status status="PASS" starttime="20210616 03:03:01.419" endtime="20210616 03:03:01.429"/>
</kw>
<msg timestamp="20210616 03:03:01.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:01.418" endtime="20210616 03:03:01.429"/>
</kw>
<msg timestamp="20210616 03:03:01.429" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 03:03:01.418" endtime="20210616 03:03:01.429"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:03:01.430" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 03:03:01.430" endtime="20210616 03:03:01.430"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:01.435" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:01.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:01.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:03:01.433" endtime="20210616 03:03:01.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:01.444" level="INFO"/>
<status status="PASS" starttime="20210616 03:03:01.444" endtime="20210616 03:03:01.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:01.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:01.445" endtime="20210616 03:03:01.445"/>
</kw>
<status status="PASS" starttime="20210616 03:03:01.432" endtime="20210616 03:03:01.446"/>
</kw>
<msg timestamp="20210616 03:03:01.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:01.432" endtime="20210616 03:03:01.446"/>
</kw>
<status status="PASS" starttime="20210616 03:03:01.431" endtime="20210616 03:03:01.446"/>
</kw>
<status status="PASS" starttime="20210616 03:03:01.430" endtime="20210616 03:03:01.446"/>
</kw>
<status status="PASS" starttime="20210616 03:03:01.417" endtime="20210616 03:03:01.447"/>
</kw>
<status status="PASS" starttime="20210616 03:03:01.417" endtime="20210616 03:03:01.447"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create o3://om/${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:01.451" level="INFO">Running command 'ozone sh bucket create o3://om/fstest410/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:05.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:05.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:03:01.449" endtime="20210616 03:03:05.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:05.197" level="INFO"/>
<status status="PASS" starttime="20210616 03:03:05.197" endtime="20210616 03:03:05.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:05.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:05.198" endtime="20210616 03:03:05.198"/>
</kw>
<status status="PASS" starttime="20210616 03:03:01.448" endtime="20210616 03:03:05.199"/>
</kw>
<msg timestamp="20210616 03:03:05.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:01.448" endtime="20210616 03:03:05.199"/>
</kw>
<msg timestamp="20210616 03:03:05.199" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 03:03:01.447" endtime="20210616 03:03:05.199"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:03:05.200" endtime="20210616 03:03:05.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume4}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:05.204" level="INFO">Running command 'ozone sh key put fstest410/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:11.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:11.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:03:05.202" endtime="20210616 03:03:11.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:11.785" level="INFO"/>
<status status="PASS" starttime="20210616 03:03:11.783" endtime="20210616 03:03:11.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:11.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:11.786" endtime="20210616 03:03:11.786"/>
</kw>
<status status="PASS" starttime="20210616 03:03:05.201" endtime="20210616 03:03:11.787"/>
</kw>
<msg timestamp="20210616 03:03:11.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:05.201" endtime="20210616 03:03:11.787"/>
</kw>
<msg timestamp="20210616 03:03:11.787" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 03:03:05.200" endtime="20210616 03:03:11.787"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:03:11.787" endtime="20210616 03:03:11.788"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:11.792" level="INFO">Running command 'ozone sh key list fstest410/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:15.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:15.981" level="INFO">${output} = {
  "volumeName" : "fstest410",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-06-16T03:03:09.072Z",
  "modificationTime" : "2021-06-16T03:03:11.267Z",
 ...</msg>
<status status="PASS" starttime="20210616 03:03:11.790" endtime="20210616 03:03:15.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:15.982" level="INFO">{
  "volumeName" : "fstest410",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-06-16T03:03:09.072Z",
  "modificationTime" : "2021-06-16T03:03:11.267Z",
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210616 03:03:15.981" endtime="20210616 03:03:15.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:15.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:15.983" endtime="20210616 03:03:15.983"/>
</kw>
<status status="PASS" starttime="20210616 03:03:11.789" endtime="20210616 03:03:15.984"/>
</kw>
<msg timestamp="20210616 03:03:15.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:11.789" endtime="20210616 03:03:15.984"/>
</kw>
<msg timestamp="20210616 03:03:15.984" level="INFO">${result} = {
  "volumeName" : "fstest410",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-06-16T03:03:09.072Z",
  "modificationTime" : "2021-06-16T03:03:11.267Z",
 ...</msg>
<status status="PASS" starttime="20210616 03:03:11.788" endtime="20210616 03:03:15.984"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:03:15.984" endtime="20210616 03:03:15.985"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key delete ${volume4}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:15.989" level="INFO">Running command 'ozone sh key delete fstest410/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:19.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:19.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:03:15.987" endtime="20210616 03:03:19.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:19.866" level="INFO"/>
<status status="PASS" starttime="20210616 03:03:19.865" endtime="20210616 03:03:19.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:19.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:19.866" endtime="20210616 03:03:19.867"/>
</kw>
<status status="PASS" starttime="20210616 03:03:15.986" endtime="20210616 03:03:19.867"/>
</kw>
<msg timestamp="20210616 03:03:19.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:15.986" endtime="20210616 03:03:19.868"/>
</kw>
<msg timestamp="20210616 03:03:19.868" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 03:03:15.985" endtime="20210616 03:03:19.868"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:03:19.870" endtime="20210616 03:03:19.870"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket delete ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:19.874" level="INFO">Running command 'ozone sh bucket delete fstest410/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:23.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:23.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:03:19.872" endtime="20210616 03:03:23.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:23.797" level="INFO"/>
<status status="PASS" starttime="20210616 03:03:23.796" endtime="20210616 03:03:23.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:23.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:23.797" endtime="20210616 03:03:23.798"/>
</kw>
<status status="PASS" starttime="20210616 03:03:19.871" endtime="20210616 03:03:23.798"/>
</kw>
<msg timestamp="20210616 03:03:23.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:19.871" endtime="20210616 03:03:23.798"/>
</kw>
<msg timestamp="20210616 03:03:23.799" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 03:03:19.870" endtime="20210616 03:03:23.799"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:03:23.799" endtime="20210616 03:03:23.799"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:02:57.708" endtime="20210616 03:03:23.800"/>
</test>
<test id="s1-s7-s3-t4" name="Create volume bucket with credentials">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:23.806" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:23.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:23.810" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 03:03:23.804" endtime="20210616 03:03:23.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:23.811" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 03:03:23.810" endtime="20210616 03:03:23.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:23.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:23.811" endtime="20210616 03:03:23.812"/>
</kw>
<status status="PASS" starttime="20210616 03:03:23.803" endtime="20210616 03:03:23.812"/>
</kw>
<msg timestamp="20210616 03:03:23.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:23.803" endtime="20210616 03:03:23.813"/>
</kw>
<msg timestamp="20210616 03:03:23.813" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 03:03:23.802" endtime="20210616 03:03:23.813"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:03:23.814" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 03:03:23.813" endtime="20210616 03:03:23.814"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:23.820" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:23.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:23.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:03:23.818" endtime="20210616 03:03:23.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:23.831" level="INFO"/>
<status status="PASS" starttime="20210616 03:03:23.830" endtime="20210616 03:03:23.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:23.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:23.831" endtime="20210616 03:03:23.832"/>
</kw>
<status status="PASS" starttime="20210616 03:03:23.817" endtime="20210616 03:03:23.832"/>
</kw>
<msg timestamp="20210616 03:03:23.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:23.817" endtime="20210616 03:03:23.832"/>
</kw>
<status status="PASS" starttime="20210616 03:03:23.814" endtime="20210616 03:03:23.832"/>
</kw>
<status status="PASS" starttime="20210616 03:03:23.814" endtime="20210616 03:03:23.833"/>
</kw>
<status status="PASS" starttime="20210616 03:03:23.801" endtime="20210616 03:03:23.833"/>
</kw>
<status status="PASS" starttime="20210616 03:03:23.801" endtime="20210616 03:03:23.833"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 03:03:23.835" level="INFO">${random} = 66</msg>
<status status="PASS" starttime="20210616 03:03:23.834" endtime="20210616 03:03:23.835"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:03:23.836" level="INFO">${volume1} = fstest66</msg>
<status status="PASS" starttime="20210616 03:03:23.835" endtime="20210616 03:03:23.836"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:03:23.836" level="INFO">${volume2} = fstest266</msg>
<status status="PASS" starttime="20210616 03:03:23.836" endtime="20210616 03:03:23.837"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:03:23.837" level="INFO">${volume3} = fstest366</msg>
<status status="PASS" starttime="20210616 03:03:23.837" endtime="20210616 03:03:23.837"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:03:23.838" level="INFO">${volume4} = fstest466</msg>
<status status="PASS" starttime="20210616 03:03:23.837" endtime="20210616 03:03:23.838"/>
</kw>
<status status="PASS" starttime="20210616 03:03:23.833" endtime="20210616 03:03:23.838"/>
</kw>
<status status="PASS" starttime="20210616 03:03:23.833" endtime="20210616 03:03:23.838"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:23.842" level="INFO">Running command 'ozone sh volume create o3://om/fstest66 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:27.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:27.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:03:23.840" endtime="20210616 03:03:27.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:27.903" level="INFO"/>
<status status="PASS" starttime="20210616 03:03:27.902" endtime="20210616 03:03:27.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:27.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:27.903" endtime="20210616 03:03:27.904"/>
</kw>
<status status="PASS" starttime="20210616 03:03:23.839" endtime="20210616 03:03:27.904"/>
</kw>
<msg timestamp="20210616 03:03:27.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:23.839" endtime="20210616 03:03:27.905"/>
</kw>
<status status="PASS" starttime="20210616 03:03:23.838" endtime="20210616 03:03:27.905"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:27.910" level="INFO">Running command 'ozone sh volume create o3://om/fstest266 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:31.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:31.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:03:27.907" endtime="20210616 03:03:31.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:31.571" level="INFO"/>
<status status="PASS" starttime="20210616 03:03:31.571" endtime="20210616 03:03:31.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:31.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:31.572" endtime="20210616 03:03:31.574"/>
</kw>
<status status="PASS" starttime="20210616 03:03:27.906" endtime="20210616 03:03:31.574"/>
</kw>
<msg timestamp="20210616 03:03:31.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:27.906" endtime="20210616 03:03:31.574"/>
</kw>
<status status="PASS" starttime="20210616 03:03:27.905" endtime="20210616 03:03:31.574"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:31.578" level="INFO">Running command 'ozone sh bucket create o3://om/fstest66/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:35.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:35.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:03:31.576" endtime="20210616 03:03:35.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:35.493" level="INFO"/>
<status status="PASS" starttime="20210616 03:03:35.492" endtime="20210616 03:03:35.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:35.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:35.494" endtime="20210616 03:03:35.494"/>
</kw>
<status status="PASS" starttime="20210616 03:03:31.576" endtime="20210616 03:03:35.495"/>
</kw>
<msg timestamp="20210616 03:03:35.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:31.575" endtime="20210616 03:03:35.495"/>
</kw>
<status status="PASS" starttime="20210616 03:03:31.575" endtime="20210616 03:03:35.495"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:35.499" level="INFO">Running command 'ozone sh bucket create o3://om/fstest66/bucket2 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:39.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:39.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:03:35.497" endtime="20210616 03:03:39.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:39.522" level="INFO"/>
<status status="PASS" starttime="20210616 03:03:39.522" endtime="20210616 03:03:39.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:39.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:39.524" endtime="20210616 03:03:39.525"/>
</kw>
<status status="PASS" starttime="20210616 03:03:35.496" endtime="20210616 03:03:39.525"/>
</kw>
<msg timestamp="20210616 03:03:39.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:35.496" endtime="20210616 03:03:39.525"/>
</kw>
<status status="PASS" starttime="20210616 03:03:35.495" endtime="20210616 03:03:39.526"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume2}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:39.531" level="INFO">Running command 'ozone sh bucket create o3://om/fstest266/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:43.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:43.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:03:39.528" endtime="20210616 03:03:43.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:43.373" level="INFO"/>
<status status="PASS" starttime="20210616 03:03:43.372" endtime="20210616 03:03:43.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:43.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:43.373" endtime="20210616 03:03:43.374"/>
</kw>
<status status="PASS" starttime="20210616 03:03:39.527" endtime="20210616 03:03:43.374"/>
</kw>
<msg timestamp="20210616 03:03:43.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:39.527" endtime="20210616 03:03:43.375"/>
</kw>
<status status="PASS" starttime="20210616 03:03:39.526" endtime="20210616 03:03:43.375"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:03:23.800" endtime="20210616 03:03:43.375"/>
</test>
<test id="s1-s7-s3-t5" name="Check volume from ozonefs">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:43.382" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest66/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:47.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:47.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:03:43.379" endtime="20210616 03:03:47.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:47.219" level="INFO"/>
<status status="PASS" starttime="20210616 03:03:47.218" endtime="20210616 03:03:47.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:47.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:47.219" endtime="20210616 03:03:47.220"/>
</kw>
<status status="PASS" starttime="20210616 03:03:43.379" endtime="20210616 03:03:47.220"/>
</kw>
<msg timestamp="20210616 03:03:47.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:43.378" endtime="20210616 03:03:47.220"/>
</kw>
<msg timestamp="20210616 03:03:47.221" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 03:03:43.377" endtime="20210616 03:03:47.221"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:03:43.376" endtime="20210616 03:03:47.221"/>
</test>
<test id="s1-s7-s3-t6" name="Test Volume Acls">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:47.227" level="INFO">Running command 'ozone sh volume create fstest366 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:51.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:51.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:03:47.225" endtime="20210616 03:03:51.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:51.215" level="INFO"/>
<status status="PASS" starttime="20210616 03:03:51.214" endtime="20210616 03:03:51.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:51.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:51.216" endtime="20210616 03:03:51.216"/>
</kw>
<status status="PASS" starttime="20210616 03:03:47.224" endtime="20210616 03:03:51.217"/>
</kw>
<msg timestamp="20210616 03:03:51.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:47.224" endtime="20210616 03:03:51.217"/>
</kw>
<msg timestamp="20210616 03:03:51.217" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 03:03:47.223" endtime="20210616 03:03:51.217"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:03:51.217" endtime="20210616 03:03:51.218"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:51.227" level="INFO">Running command 'ozone sh volume getacl fstest366 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:55.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:55.521" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:03:51.220" endtime="20210616 03:03:55.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:55.523" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:03:55.522" endtime="20210616 03:03:55.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:55.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:55.524" endtime="20210616 03:03:55.524"/>
</kw>
<status status="PASS" starttime="20210616 03:03:51.219" endtime="20210616 03:03:55.525"/>
</kw>
<msg timestamp="20210616 03:03:55.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:51.219" endtime="20210616 03:03:55.525"/>
</kw>
<msg timestamp="20210616 03:03:55.525" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:03:51.218" endtime="20210616 03:03:55.525"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:03:55.526" endtime="20210616 03:03:55.527"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:55.532" level="INFO">Running command 'ozone sh volume addacl fstest366 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:03:59.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:03:59.571" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210616 03:03:55.529" endtime="20210616 03:03:59.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:03:59.573" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210616 03:03:59.572" endtime="20210616 03:03:59.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:03:59.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:03:59.573" endtime="20210616 03:03:59.574"/>
</kw>
<status status="PASS" starttime="20210616 03:03:55.528" endtime="20210616 03:03:59.574"/>
</kw>
<msg timestamp="20210616 03:03:59.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:55.528" endtime="20210616 03:03:59.575"/>
</kw>
<msg timestamp="20210616 03:03:59.575" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210616 03:03:55.527" endtime="20210616 03:03:59.575"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:03:59.579" level="INFO">Running command 'ozone sh volume getacl fstest366 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:04:03.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:04:03.596" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:03:59.577" endtime="20210616 03:04:03.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:04:03.598" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:04:03.596" endtime="20210616 03:04:03.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:04:03.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:04:03.598" endtime="20210616 03:04:03.599"/>
</kw>
<status status="PASS" starttime="20210616 03:03:59.577" endtime="20210616 03:04:03.599"/>
</kw>
<msg timestamp="20210616 03:04:03.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:03:59.576" endtime="20210616 03:04:03.599"/>
</kw>
<msg timestamp="20210616 03:04:03.600" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:03:59.576" endtime="20210616 03:04:03.600"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:04:03.600" endtime="20210616 03:04:03.601"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${volume3} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:04:03.605" level="INFO">Running command 'ozone sh volume removeacl fstest366 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:04:07.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:04:07.671" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 03:04:03.603" endtime="20210616 03:04:07.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:04:07.674" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 03:04:07.672" endtime="20210616 03:04:07.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:04:07.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:04:07.674" endtime="20210616 03:04:07.675"/>
</kw>
<status status="PASS" starttime="20210616 03:04:03.602" endtime="20210616 03:04:07.675"/>
</kw>
<msg timestamp="20210616 03:04:07.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:04:03.602" endtime="20210616 03:04:07.675"/>
</kw>
<msg timestamp="20210616 03:04:07.676" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 03:04:03.601" endtime="20210616 03:04:07.676"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:04:07.680" level="INFO">Running command 'ozone sh volume getacl fstest366 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:04:11.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:04:11.930" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:04:07.677" endtime="20210616 03:04:11.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:04:11.932" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:04:11.931" endtime="20210616 03:04:11.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:04:11.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:04:11.933" endtime="20210616 03:04:11.933"/>
</kw>
<status status="PASS" starttime="20210616 03:04:07.677" endtime="20210616 03:04:11.934"/>
</kw>
<msg timestamp="20210616 03:04:11.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:04:07.676" endtime="20210616 03:04:11.934"/>
</kw>
<msg timestamp="20210616 03:04:11.934" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:04:07.676" endtime="20210616 03:04:11.934"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:04:11.935" endtime="20210616 03:04:11.936"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${volume3} -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:04:11.940" level="INFO">Running command 'ozone sh volume setacl fstest366 -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:04:15.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:04:15.717" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 03:04:11.937" endtime="20210616 03:04:15.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:04:15.718" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 03:04:15.717" endtime="20210616 03:04:15.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:04:15.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:04:15.719" endtime="20210616 03:04:15.719"/>
</kw>
<status status="PASS" starttime="20210616 03:04:11.937" endtime="20210616 03:04:15.720"/>
</kw>
<msg timestamp="20210616 03:04:15.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:04:11.936" endtime="20210616 03:04:15.720"/>
</kw>
<msg timestamp="20210616 03:04:15.720" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 03:04:11.936" endtime="20210616 03:04:15.720"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:04:15.725" level="INFO">Running command 'ozone sh volume getacl fstest366 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:04:19.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:04:19.991" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20210616 03:04:15.722" endtime="20210616 03:04:19.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:04:19.992" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:04:19.991" endtime="20210616 03:04:19.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:04:19.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:04:19.993" endtime="20210616 03:04:19.994"/>
</kw>
<status status="PASS" starttime="20210616 03:04:15.722" endtime="20210616 03:04:19.994"/>
</kw>
<msg timestamp="20210616 03:04:19.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:04:15.721" endtime="20210616 03:04:19.995"/>
</kw>
<msg timestamp="20210616 03:04:19.995" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20210616 03:04:15.721" endtime="20210616 03:04:19.995"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:04:19.995" endtime="20210616 03:04:19.996"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:04:19.996" endtime="20210616 03:04:19.997"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:03:47.222" endtime="20210616 03:04:19.997"/>
</test>
<test id="s1-s7-s3-t7" name="Test Bucket Acls">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:04:20.003" level="INFO">Running command 'ozone sh bucket create fstest366/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:04:24.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:04:24.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:04:20.001" endtime="20210616 03:04:24.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:04:24.177" level="INFO"/>
<status status="PASS" starttime="20210616 03:04:24.177" endtime="20210616 03:04:24.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:04:24.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:04:24.178" endtime="20210616 03:04:24.179"/>
</kw>
<status status="PASS" starttime="20210616 03:04:20.000" endtime="20210616 03:04:24.179"/>
</kw>
<msg timestamp="20210616 03:04:24.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:04:20.000" endtime="20210616 03:04:24.179"/>
</kw>
<msg timestamp="20210616 03:04:24.179" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210616 03:04:19.999" endtime="20210616 03:04:24.180"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:04:24.180" endtime="20210616 03:04:24.181"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:04:24.185" level="INFO">Running command 'ozone sh bucket getacl fstest366/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:04:28.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:04:28.328" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:04:24.183" endtime="20210616 03:04:28.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:04:28.330" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:04:28.329" endtime="20210616 03:04:28.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:04:28.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:04:28.330" endtime="20210616 03:04:28.331"/>
</kw>
<status status="PASS" starttime="20210616 03:04:24.182" endtime="20210616 03:04:28.331"/>
</kw>
<msg timestamp="20210616 03:04:28.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:04:24.182" endtime="20210616 03:04:28.332"/>
</kw>
<msg timestamp="20210616 03:04:28.332" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:04:24.181" endtime="20210616 03:04:28.332"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:04:28.333" endtime="20210616 03:04:28.333"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:04:28.337" level="INFO">Running command 'ozone sh bucket addacl fstest366/bk1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:04:32.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:04:32.299" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 03:04:28.335" endtime="20210616 03:04:32.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:04:32.300" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 03:04:32.300" endtime="20210616 03:04:32.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:04:32.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:04:32.301" endtime="20210616 03:04:32.301"/>
</kw>
<status status="PASS" starttime="20210616 03:04:28.334" endtime="20210616 03:04:32.302"/>
</kw>
<msg timestamp="20210616 03:04:32.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:04:28.334" endtime="20210616 03:04:32.303"/>
</kw>
<msg timestamp="20210616 03:04:32.303" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 03:04:28.333" endtime="20210616 03:04:32.303"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:04:32.308" level="INFO">Running command 'ozone sh bucket getacl fstest366/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:04:36.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:04:36.347" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:04:32.305" endtime="20210616 03:04:36.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:04:36.349" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:04:36.348" endtime="20210616 03:04:36.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:04:36.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:04:36.349" endtime="20210616 03:04:36.350"/>
</kw>
<status status="PASS" starttime="20210616 03:04:32.305" endtime="20210616 03:04:36.350"/>
</kw>
<msg timestamp="20210616 03:04:36.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:04:32.304" endtime="20210616 03:04:36.350"/>
</kw>
<msg timestamp="20210616 03:04:36.351" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:04:32.303" endtime="20210616 03:04:36.351"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:04:36.351" endtime="20210616 03:04:36.351"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${volume3}/bk1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:04:36.356" level="INFO">Running command 'ozone sh bucket removeacl fstest366/bk1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:04:40.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:04:40.242" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 03:04:36.353" endtime="20210616 03:04:40.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:04:40.244" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 03:04:40.243" endtime="20210616 03:04:40.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:04:40.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:04:40.244" endtime="20210616 03:04:40.244"/>
</kw>
<status status="PASS" starttime="20210616 03:04:36.353" endtime="20210616 03:04:40.245"/>
</kw>
<msg timestamp="20210616 03:04:40.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:04:36.352" endtime="20210616 03:04:40.245"/>
</kw>
<msg timestamp="20210616 03:04:40.245" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 03:04:36.352" endtime="20210616 03:04:40.245"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:04:40.249" level="INFO">Running command 'ozone sh bucket getacl fstest366/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:04:44.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:04:44.250" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:04:40.247" endtime="20210616 03:04:44.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:04:44.251" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:04:44.251" endtime="20210616 03:04:44.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:04:44.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:04:44.252" endtime="20210616 03:04:44.252"/>
</kw>
<status status="PASS" starttime="20210616 03:04:40.247" endtime="20210616 03:04:44.253"/>
</kw>
<msg timestamp="20210616 03:04:44.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:04:40.246" endtime="20210616 03:04:44.253"/>
</kw>
<msg timestamp="20210616 03:04:44.253" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:04:40.246" endtime="20210616 03:04:44.253"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:04:44.254" endtime="20210616 03:04:44.255"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${volume3}/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:04:44.259" level="INFO">Running command 'ozone sh bucket setacl fstest366/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:04:48.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:04:48.269" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 03:04:44.257" endtime="20210616 03:04:48.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:04:48.270" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 03:04:48.270" endtime="20210616 03:04:48.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:04:48.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:04:48.271" endtime="20210616 03:04:48.271"/>
</kw>
<status status="PASS" starttime="20210616 03:04:44.256" endtime="20210616 03:04:48.272"/>
</kw>
<msg timestamp="20210616 03:04:48.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:04:44.256" endtime="20210616 03:04:48.272"/>
</kw>
<msg timestamp="20210616 03:04:48.272" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 03:04:44.255" endtime="20210616 03:04:48.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:04:48.277" level="INFO">Running command 'ozone sh bucket getacl fstest366/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:04:52.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:04:52.106" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210616 03:04:48.274" endtime="20210616 03:04:52.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:04:52.108" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:04:52.107" endtime="20210616 03:04:52.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:04:52.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:04:52.108" endtime="20210616 03:04:52.109"/>
</kw>
<status status="PASS" starttime="20210616 03:04:48.274" endtime="20210616 03:04:52.110"/>
</kw>
<msg timestamp="20210616 03:04:52.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:04:48.273" endtime="20210616 03:04:52.110"/>
</kw>
<msg timestamp="20210616 03:04:52.110" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210616 03:04:48.273" endtime="20210616 03:04:52.110"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:04:52.110" endtime="20210616 03:04:52.111"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:04:52.111" endtime="20210616 03:04:52.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:04:19.998" endtime="20210616 03:04:52.112"/>
</test>
<test id="s1-s7-s3-t8" name="Test key Acls">
<kw name="Execute" library="os">
<arg>ozone sh key put ${volume3}/bk1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:04:52.117" level="INFO">Running command 'ozone sh key put fstest366/bk1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:04:58.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:04:58.553" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:04:52.115" endtime="20210616 03:04:58.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:04:58.554" level="INFO"/>
<status status="PASS" starttime="20210616 03:04:58.553" endtime="20210616 03:04:58.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:04:58.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:04:58.554" endtime="20210616 03:04:58.555"/>
</kw>
<status status="PASS" starttime="20210616 03:04:52.115" endtime="20210616 03:04:58.555"/>
</kw>
<msg timestamp="20210616 03:04:58.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:04:52.114" endtime="20210616 03:04:58.556"/>
</kw>
<status status="PASS" starttime="20210616 03:04:52.114" endtime="20210616 03:04:58.556"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:04:58.560" level="INFO">Running command 'ozone sh key getacl fstest366/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:02.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:02.608" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:04:58.558" endtime="20210616 03:05:02.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:02.610" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:05:02.609" endtime="20210616 03:05:02.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:02.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:02.610" endtime="20210616 03:05:02.611"/>
</kw>
<status status="PASS" starttime="20210616 03:04:58.557" endtime="20210616 03:05:02.611"/>
</kw>
<msg timestamp="20210616 03:05:02.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:04:58.557" endtime="20210616 03:05:02.612"/>
</kw>
<msg timestamp="20210616 03:05:02.612" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:04:58.556" endtime="20210616 03:05:02.612"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:05:02.612" endtime="20210616 03:05:02.613"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${volume3}/bk1/key1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:02.617" level="INFO">Running command 'ozone sh key addacl fstest366/bk1/key1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:06.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:06.399" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 03:05:02.615" endtime="20210616 03:05:06.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:06.400" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 03:05:06.400" endtime="20210616 03:05:06.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:06.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:06.401" endtime="20210616 03:05:06.401"/>
</kw>
<status status="PASS" starttime="20210616 03:05:02.614" endtime="20210616 03:05:06.402"/>
</kw>
<msg timestamp="20210616 03:05:06.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:02.614" endtime="20210616 03:05:06.402"/>
</kw>
<msg timestamp="20210616 03:05:06.402" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 03:05:02.613" endtime="20210616 03:05:06.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:06.407" level="INFO">Running command 'ozone sh key getacl fstest366/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:10.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:10.475" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:05:06.404" endtime="20210616 03:05:10.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:10.477" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:05:10.476" endtime="20210616 03:05:10.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:10.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:10.477" endtime="20210616 03:05:10.478"/>
</kw>
<status status="PASS" starttime="20210616 03:05:06.404" endtime="20210616 03:05:10.478"/>
</kw>
<msg timestamp="20210616 03:05:10.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:06.403" endtime="20210616 03:05:10.478"/>
</kw>
<msg timestamp="20210616 03:05:10.479" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:05:06.403" endtime="20210616 03:05:10.479"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:05:10.479" endtime="20210616 03:05:10.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${volume3}/bk1/key1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:10.484" level="INFO">Running command 'ozone sh key removeacl fstest366/bk1/key1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:14.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:14.300" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 03:05:10.481" endtime="20210616 03:05:14.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:14.302" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 03:05:14.301" endtime="20210616 03:05:14.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:14.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:14.302" endtime="20210616 03:05:14.303"/>
</kw>
<status status="PASS" starttime="20210616 03:05:10.481" endtime="20210616 03:05:14.303"/>
</kw>
<msg timestamp="20210616 03:05:14.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:10.480" endtime="20210616 03:05:14.303"/>
</kw>
<msg timestamp="20210616 03:05:14.304" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 03:05:10.480" endtime="20210616 03:05:14.304"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:14.308" level="INFO">Running command 'ozone sh key getacl fstest366/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:18.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:18.262" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:05:14.306" endtime="20210616 03:05:18.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:18.264" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:05:18.263" endtime="20210616 03:05:18.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:18.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:18.264" endtime="20210616 03:05:18.265"/>
</kw>
<status status="PASS" starttime="20210616 03:05:14.305" endtime="20210616 03:05:18.265"/>
</kw>
<msg timestamp="20210616 03:05:18.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:14.305" endtime="20210616 03:05:18.265"/>
</kw>
<msg timestamp="20210616 03:05:18.266" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210616 03:05:14.304" endtime="20210616 03:05:18.266"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:05:18.266" endtime="20210616 03:05:18.267"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${volume3}/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:18.271" level="INFO">Running command 'ozone sh key setacl fstest366/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:22.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:22.080" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 03:05:18.269" endtime="20210616 03:05:22.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:22.081" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 03:05:22.081" endtime="20210616 03:05:22.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:22.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:22.082" endtime="20210616 03:05:22.082"/>
</kw>
<status status="PASS" starttime="20210616 03:05:18.268" endtime="20210616 03:05:22.083"/>
</kw>
<msg timestamp="20210616 03:05:22.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:18.268" endtime="20210616 03:05:22.083"/>
</kw>
<msg timestamp="20210616 03:05:22.084" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210616 03:05:18.267" endtime="20210616 03:05:22.084"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:22.088" level="INFO">Running command 'ozone sh key getacl fstest366/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:26.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:26.004" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210616 03:05:22.086" endtime="20210616 03:05:26.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:26.006" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:05:26.005" endtime="20210616 03:05:26.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:26.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:26.006" endtime="20210616 03:05:26.007"/>
</kw>
<status status="PASS" starttime="20210616 03:05:22.085" endtime="20210616 03:05:26.007"/>
</kw>
<msg timestamp="20210616 03:05:26.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:22.085" endtime="20210616 03:05:26.008"/>
</kw>
<msg timestamp="20210616 03:05:26.008" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210616 03:05:22.084" endtime="20210616 03:05:26.008"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:05:26.008" endtime="20210616 03:05:26.009"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210616 03:05:26.009" endtime="20210616 03:05:26.009"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:04:52.113" endtime="20210616 03:05:26.010"/>
</test>
<test id="s1-s7-s3-t9" name="Test native authorizer">
<kw name="Execute" library="os">
<arg>ozone sh volume removeacl ${volume3} -a group:root:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:26.016" level="INFO">Running command 'ozone sh volume removeacl fstest366 -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:30.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:30.020" level="INFO">${output} = ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 03:05:26.013" endtime="20210616 03:05:30.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:30.022" level="INFO">ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210616 03:05:30.021" endtime="20210616 03:05:30.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:30.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:30.022" endtime="20210616 03:05:30.023"/>
</kw>
<status status="PASS" starttime="20210616 03:05:26.013" endtime="20210616 03:05:30.023"/>
</kw>
<msg timestamp="20210616 03:05:30.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:26.012" endtime="20210616 03:05:30.024"/>
</kw>
<status status="PASS" starttime="20210616 03:05:26.012" endtime="20210616 03:05:30.024"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:30.028" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:30.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:30.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:05:30.026" endtime="20210616 03:05:30.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:30.033" level="INFO"/>
<status status="PASS" starttime="20210616 03:05:30.033" endtime="20210616 03:05:30.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:30.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:30.034" endtime="20210616 03:05:30.034"/>
</kw>
<status status="PASS" starttime="20210616 03:05:30.025" endtime="20210616 03:05:30.035"/>
</kw>
<msg timestamp="20210616 03:05:30.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:30.025" endtime="20210616 03:05:30.035"/>
</kw>
<status status="PASS" starttime="20210616 03:05:30.024" endtime="20210616 03:05:30.035"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:30.040" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:30.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:30.043" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 03:05:30.038" endtime="20210616 03:05:30.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:30.044" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 03:05:30.044" endtime="20210616 03:05:30.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:30.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:30.045" endtime="20210616 03:05:30.045"/>
</kw>
<status status="PASS" starttime="20210616 03:05:30.037" endtime="20210616 03:05:30.046"/>
</kw>
<msg timestamp="20210616 03:05:30.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:30.037" endtime="20210616 03:05:30.046"/>
</kw>
<msg timestamp="20210616 03:05:30.046" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 03:05:30.036" endtime="20210616 03:05:30.046"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:05:30.047" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 03:05:30.047" endtime="20210616 03:05:30.047"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:30.052" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:30.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:30.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:05:30.050" endtime="20210616 03:05:30.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:30.091" level="INFO"/>
<status status="PASS" starttime="20210616 03:05:30.090" endtime="20210616 03:05:30.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:30.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:30.091" endtime="20210616 03:05:30.092"/>
</kw>
<status status="PASS" starttime="20210616 03:05:30.050" endtime="20210616 03:05:30.092"/>
</kw>
<msg timestamp="20210616 03:05:30.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:30.049" endtime="20210616 03:05:30.092"/>
</kw>
<status status="PASS" starttime="20210616 03:05:30.048" endtime="20210616 03:05:30.092"/>
</kw>
<status status="PASS" starttime="20210616 03:05:30.048" endtime="20210616 03:05:30.092"/>
</kw>
<status status="PASS" starttime="20210616 03:05:30.036" endtime="20210616 03:05:30.093"/>
</kw>
<status status="PASS" starttime="20210616 03:05:30.035" endtime="20210616 03:05:30.093"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:30.096" level="INFO">Running command 'ozone sh bucket list /fstest366/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:33.707" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:05:33.708" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume fstest366 null null</msg>
<status status="PASS" starttime="20210616 03:05:30.094" endtime="20210616 03:05:33.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:33.709" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume fstest366 null null</msg>
<status status="PASS" starttime="20210616 03:05:33.708" endtime="20210616 03:05:33.709"/>
</kw>
<msg timestamp="20210616 03:05:33.710" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume fstest366 null null</msg>
<status status="PASS" starttime="20210616 03:05:30.093" endtime="20210616 03:05:33.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:05:33.710" endtime="20210616 03:05:33.710"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:33.713" level="INFO">Running command 'ozone sh key list /fstest366/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:37.491" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:05:37.491" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume fstest366 null null</msg>
<status status="PASS" starttime="20210616 03:05:33.711" endtime="20210616 03:05:37.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:37.493" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume fstest366 null null</msg>
<status status="PASS" starttime="20210616 03:05:37.492" endtime="20210616 03:05:37.493"/>
</kw>
<msg timestamp="20210616 03:05:37.493" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume fstest366 null null</msg>
<status status="PASS" starttime="20210616 03:05:33.711" endtime="20210616 03:05:37.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:05:37.494" endtime="20210616 03:05:37.494"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xy</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:37.497" level="INFO">Running command 'ozone sh volume addacl fstest366 -a user:testuser2/scm@EXAMPLE.COM:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:41.434" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:05:41.434" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume fstest366 null null</msg>
<status status="PASS" starttime="20210616 03:05:37.495" endtime="20210616 03:05:41.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:41.435" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume fstest366 null null</msg>
<status status="PASS" starttime="20210616 03:05:41.434" endtime="20210616 03:05:41.435"/>
</kw>
<msg timestamp="20210616 03:05:41.436" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume fstest366 null null</msg>
<status status="PASS" starttime="20210616 03:05:37.494" endtime="20210616 03:05:41.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:05:41.436" endtime="20210616 03:05:41.437"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:41.441" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:41.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:41.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:05:41.439" endtime="20210616 03:05:41.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:41.446" level="INFO"/>
<status status="PASS" starttime="20210616 03:05:41.445" endtime="20210616 03:05:41.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:41.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:41.446" endtime="20210616 03:05:41.447"/>
</kw>
<status status="PASS" starttime="20210616 03:05:41.438" endtime="20210616 03:05:41.447"/>
</kw>
<msg timestamp="20210616 03:05:41.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:41.438" endtime="20210616 03:05:41.448"/>
</kw>
<status status="PASS" starttime="20210616 03:05:41.437" endtime="20210616 03:05:41.448"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:41.454" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:41.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:41.458" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 03:05:41.451" endtime="20210616 03:05:41.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:41.459" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 03:05:41.459" endtime="20210616 03:05:41.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:41.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:41.460" endtime="20210616 03:05:41.460"/>
</kw>
<status status="PASS" starttime="20210616 03:05:41.450" endtime="20210616 03:05:41.461"/>
</kw>
<msg timestamp="20210616 03:05:41.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:41.450" endtime="20210616 03:05:41.461"/>
</kw>
<msg timestamp="20210616 03:05:41.461" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 03:05:41.449" endtime="20210616 03:05:41.461"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:05:41.462" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 03:05:41.462" endtime="20210616 03:05:41.462"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:41.467" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:41.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:41.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:05:41.465" endtime="20210616 03:05:41.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:41.476" level="INFO"/>
<status status="PASS" starttime="20210616 03:05:41.475" endtime="20210616 03:05:41.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:41.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:41.477" endtime="20210616 03:05:41.478"/>
</kw>
<status status="PASS" starttime="20210616 03:05:41.464" endtime="20210616 03:05:41.478"/>
</kw>
<msg timestamp="20210616 03:05:41.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:41.464" endtime="20210616 03:05:41.478"/>
</kw>
<status status="PASS" starttime="20210616 03:05:41.463" endtime="20210616 03:05:41.479"/>
</kw>
<status status="PASS" starttime="20210616 03:05:41.463" endtime="20210616 03:05:41.479"/>
</kw>
<status status="PASS" starttime="20210616 03:05:41.449" endtime="20210616 03:05:41.479"/>
</kw>
<status status="PASS" starttime="20210616 03:05:41.448" endtime="20210616 03:05:41.479"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xyrw</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:41.483" level="INFO">Running command 'ozone sh volume addacl fstest366 -a user:testuser2/scm@EXAMPLE.COM:xyrw 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:45.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:45.338" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 03:05:41.481" endtime="20210616 03:05:45.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:45.339" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 03:05:45.338" endtime="20210616 03:05:45.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:45.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:45.339" endtime="20210616 03:05:45.340"/>
</kw>
<status status="PASS" starttime="20210616 03:05:41.480" endtime="20210616 03:05:45.340"/>
</kw>
<msg timestamp="20210616 03:05:45.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:41.480" endtime="20210616 03:05:45.341"/>
</kw>
<status status="PASS" starttime="20210616 03:05:41.479" endtime="20210616 03:05:45.341"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:45.345" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:45.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:45.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:05:45.343" endtime="20210616 03:05:45.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:45.350" level="INFO"/>
<status status="PASS" starttime="20210616 03:05:45.349" endtime="20210616 03:05:45.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:45.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:45.350" endtime="20210616 03:05:45.351"/>
</kw>
<status status="PASS" starttime="20210616 03:05:45.342" endtime="20210616 03:05:45.352"/>
</kw>
<msg timestamp="20210616 03:05:45.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:45.342" endtime="20210616 03:05:45.352"/>
</kw>
<status status="PASS" starttime="20210616 03:05:45.341" endtime="20210616 03:05:45.352"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:45.357" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:45.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:45.361" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 03:05:45.355" endtime="20210616 03:05:45.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:45.362" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 03:05:45.361" endtime="20210616 03:05:45.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:45.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:45.362" endtime="20210616 03:05:45.363"/>
</kw>
<status status="PASS" starttime="20210616 03:05:45.354" endtime="20210616 03:05:45.363"/>
</kw>
<msg timestamp="20210616 03:05:45.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:45.354" endtime="20210616 03:05:45.364"/>
</kw>
<msg timestamp="20210616 03:05:45.364" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 03:05:45.353" endtime="20210616 03:05:45.364"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:05:45.365" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 03:05:45.364" endtime="20210616 03:05:45.365"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:45.370" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:45.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:45.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:05:45.368" endtime="20210616 03:05:45.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:45.383" level="INFO"/>
<status status="PASS" starttime="20210616 03:05:45.382" endtime="20210616 03:05:45.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:45.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:45.383" endtime="20210616 03:05:45.384"/>
</kw>
<status status="PASS" starttime="20210616 03:05:45.367" endtime="20210616 03:05:45.384"/>
</kw>
<msg timestamp="20210616 03:05:45.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:45.367" endtime="20210616 03:05:45.385"/>
</kw>
<status status="PASS" starttime="20210616 03:05:45.366" endtime="20210616 03:05:45.385"/>
</kw>
<status status="PASS" starttime="20210616 03:05:45.366" endtime="20210616 03:05:45.385"/>
</kw>
<status status="PASS" starttime="20210616 03:05:45.353" endtime="20210616 03:05:45.385"/>
</kw>
<status status="PASS" starttime="20210616 03:05:45.352" endtime="20210616 03:05:45.385"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:45.389" level="INFO">Running command 'ozone sh bucket list /fstest366/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:49.249" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:05:49.249" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume fstest366 null null</msg>
<status status="PASS" starttime="20210616 03:05:45.386" endtime="20210616 03:05:49.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:49.250" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume fstest366 null null</msg>
<status status="PASS" starttime="20210616 03:05:49.249" endtime="20210616 03:05:49.250"/>
</kw>
<msg timestamp="20210616 03:05:49.251" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume fstest366 null null</msg>
<status status="PASS" starttime="20210616 03:05:45.386" endtime="20210616 03:05:49.251"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:05:49.251" endtime="20210616 03:05:49.251"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:49.256" level="INFO">Running command 'ozone sh volume addacl fstest366 -a user:testuser2/scm@EXAMPLE.COM:l 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:52.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:52.897" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 03:05:49.254" endtime="20210616 03:05:52.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:52.899" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 03:05:52.898" endtime="20210616 03:05:52.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:52.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:52.899" endtime="20210616 03:05:52.900"/>
</kw>
<status status="PASS" starttime="20210616 03:05:49.253" endtime="20210616 03:05:52.900"/>
</kw>
<msg timestamp="20210616 03:05:52.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:49.252" endtime="20210616 03:05:52.900"/>
</kw>
<status status="PASS" starttime="20210616 03:05:49.252" endtime="20210616 03:05:52.901"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:52.905" level="INFO">Running command 'ozone sh bucket list /fstest366/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:05:56.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:05:56.973" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest366",
  "name" : "bk1",
  "storageType" : "DISK",
  "version...</msg>
<status status="PASS" starttime="20210616 03:05:52.902" endtime="20210616 03:05:56.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:05:56.976" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest366",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52578,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-16T03:04:23.953Z",
  "modificationTime" : "2021-06-16T03:04:48.066Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210616 03:05:56.975" endtime="20210616 03:05:56.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:05:56.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:05:56.976" endtime="20210616 03:05:56.977"/>
</kw>
<status status="PASS" starttime="20210616 03:05:52.902" endtime="20210616 03:05:56.977"/>
</kw>
<msg timestamp="20210616 03:05:56.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:52.902" endtime="20210616 03:05:56.977"/>
</kw>
<status status="PASS" starttime="20210616 03:05:52.901" endtime="20210616 03:05:56.978"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume getacl /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:05:56.982" level="INFO">Running command 'ozone sh volume getacl /fstest366/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:00.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:00.883" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20210616 03:05:56.979" endtime="20210616 03:06:00.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:00.885" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:06:00.884" endtime="20210616 03:06:00.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:00.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:00.885" endtime="20210616 03:06:00.886"/>
</kw>
<status status="PASS" starttime="20210616 03:05:56.979" endtime="20210616 03:06:00.886"/>
</kw>
<msg timestamp="20210616 03:06:00.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:05:56.979" endtime="20210616 03:06:00.886"/>
</kw>
<status status="PASS" starttime="20210616 03:05:56.978" endtime="20210616 03:06:00.887"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:00.890" level="INFO">Running command 'ozone sh key list /fstest366/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:04.754" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:06:04.754" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket fstest366 bk1 null</msg>
<status status="PASS" starttime="20210616 03:06:00.887" endtime="20210616 03:06:04.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:04.756" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket fstest366 bk1 null</msg>
<status status="PASS" starttime="20210616 03:06:04.755" endtime="20210616 03:06:04.756"/>
</kw>
<msg timestamp="20210616 03:06:04.756" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket fstest366 bk1 null</msg>
<status status="PASS" starttime="20210616 03:06:00.887" endtime="20210616 03:06:04.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:06:04.756" endtime="20210616 03:06:04.757"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:04.762" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:04.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:04.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:04.759" endtime="20210616 03:06:04.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:04.767" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:04.767" endtime="20210616 03:06:04.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:04.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:04.768" endtime="20210616 03:06:04.768"/>
</kw>
<status status="PASS" starttime="20210616 03:06:04.758" endtime="20210616 03:06:04.769"/>
</kw>
<msg timestamp="20210616 03:06:04.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:04.758" endtime="20210616 03:06:04.769"/>
</kw>
<status status="PASS" starttime="20210616 03:06:04.757" endtime="20210616 03:06:04.769"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:04.775" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:04.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:04.781" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 03:06:04.772" endtime="20210616 03:06:04.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:04.782" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 03:06:04.781" endtime="20210616 03:06:04.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:04.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:04.782" endtime="20210616 03:06:04.783"/>
</kw>
<status status="PASS" starttime="20210616 03:06:04.771" endtime="20210616 03:06:04.784"/>
</kw>
<msg timestamp="20210616 03:06:04.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:04.771" endtime="20210616 03:06:04.784"/>
</kw>
<msg timestamp="20210616 03:06:04.784" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 03:06:04.770" endtime="20210616 03:06:04.784"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:06:04.785" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 03:06:04.784" endtime="20210616 03:06:04.785"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:04.791" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:04.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:04.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:04.788" endtime="20210616 03:06:04.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:04.799" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:04.798" endtime="20210616 03:06:04.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:04.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:04.799" endtime="20210616 03:06:04.800"/>
</kw>
<status status="PASS" starttime="20210616 03:06:04.787" endtime="20210616 03:06:04.800"/>
</kw>
<msg timestamp="20210616 03:06:04.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:04.787" endtime="20210616 03:06:04.801"/>
</kw>
<status status="PASS" starttime="20210616 03:06:04.786" endtime="20210616 03:06:04.801"/>
</kw>
<status status="PASS" starttime="20210616 03:06:04.785" endtime="20210616 03:06:04.801"/>
</kw>
<status status="PASS" starttime="20210616 03:06:04.770" endtime="20210616 03:06:04.801"/>
</kw>
<status status="PASS" starttime="20210616 03:06:04.769" endtime="20210616 03:06:04.801"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:testuser2/scm@EXAMPLE.COM:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:04.805" level="INFO">Running command 'ozone sh bucket addacl fstest366/bk1 -a user:testuser2/scm@EXAMPLE.COM:a 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:08.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:08.602" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 03:06:04.804" endtime="20210616 03:06:08.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:08.603" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210616 03:06:08.602" endtime="20210616 03:06:08.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:08.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:08.603" endtime="20210616 03:06:08.604"/>
</kw>
<status status="PASS" starttime="20210616 03:06:04.803" endtime="20210616 03:06:08.604"/>
</kw>
<msg timestamp="20210616 03:06:08.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:04.802" endtime="20210616 03:06:08.605"/>
</kw>
<status status="PASS" starttime="20210616 03:06:04.801" endtime="20210616 03:06:08.605"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:08.609" level="INFO">Running command 'ozone sh bucket getacl /fstest366/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:12.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:12.756" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210616 03:06:08.607" endtime="20210616 03:06:12.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:12.757" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:06:12.756" endtime="20210616 03:06:12.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:12.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:12.758" endtime="20210616 03:06:12.758"/>
</kw>
<status status="PASS" starttime="20210616 03:06:08.606" endtime="20210616 03:06:12.759"/>
</kw>
<msg timestamp="20210616 03:06:12.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:08.606" endtime="20210616 03:06:12.759"/>
</kw>
<status status="PASS" starttime="20210616 03:06:08.605" endtime="20210616 03:06:12.759"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:12.763" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:12.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:12.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:12.761" endtime="20210616 03:06:12.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:12.771" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:12.770" endtime="20210616 03:06:12.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:12.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:12.771" endtime="20210616 03:06:12.772"/>
</kw>
<status status="PASS" starttime="20210616 03:06:12.760" endtime="20210616 03:06:12.772"/>
</kw>
<msg timestamp="20210616 03:06:12.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:12.760" endtime="20210616 03:06:12.772"/>
</kw>
<status status="PASS" starttime="20210616 03:06:12.759" endtime="20210616 03:06:12.773"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:12.778" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:12.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:12.782" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 03:06:12.776" endtime="20210616 03:06:12.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:12.783" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 03:06:12.782" endtime="20210616 03:06:12.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:12.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:12.783" endtime="20210616 03:06:12.784"/>
</kw>
<status status="PASS" starttime="20210616 03:06:12.775" endtime="20210616 03:06:12.784"/>
</kw>
<msg timestamp="20210616 03:06:12.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:12.774" endtime="20210616 03:06:12.784"/>
</kw>
<msg timestamp="20210616 03:06:12.785" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 03:06:12.774" endtime="20210616 03:06:12.785"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:06:12.786" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 03:06:12.785" endtime="20210616 03:06:12.786"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:12.792" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:12.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:12.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:12.789" endtime="20210616 03:06:12.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:12.801" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:12.800" endtime="20210616 03:06:12.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:12.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:12.801" endtime="20210616 03:06:12.802"/>
</kw>
<status status="PASS" starttime="20210616 03:06:12.788" endtime="20210616 03:06:12.802"/>
</kw>
<msg timestamp="20210616 03:06:12.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:12.788" endtime="20210616 03:06:12.803"/>
</kw>
<status status="PASS" starttime="20210616 03:06:12.787" endtime="20210616 03:06:12.803"/>
</kw>
<status status="PASS" starttime="20210616 03:06:12.786" endtime="20210616 03:06:12.803"/>
</kw>
<status status="PASS" starttime="20210616 03:06:12.773" endtime="20210616 03:06:12.803"/>
</kw>
<status status="PASS" starttime="20210616 03:06:12.773" endtime="20210616 03:06:12.803"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:12.807" level="INFO">Running command 'ozone sh bucket getacl /fstest366/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:16.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:16.964" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210616 03:06:12.805" endtime="20210616 03:06:16.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:16.965" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210616 03:06:16.964" endtime="20210616 03:06:16.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:16.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:16.966" endtime="20210616 03:06:16.966"/>
</kw>
<status status="PASS" starttime="20210616 03:06:12.805" endtime="20210616 03:06:16.967"/>
</kw>
<msg timestamp="20210616 03:06:16.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:12.804" endtime="20210616 03:06:16.967"/>
</kw>
<status status="PASS" starttime="20210616 03:06:12.803" endtime="20210616 03:06:16.967"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:16.971" level="INFO">Running command 'ozone sh key list /fstest366/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:21.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:21.165" level="INFO">${output} = {
  "volumeName" : "fstest366",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-06-16T03:04:56.052Z",
  "modificationTime" : "2021-06-16T03:05:21.891Z",
  "re...</msg>
<status status="PASS" starttime="20210616 03:06:16.969" endtime="20210616 03:06:21.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:21.167" level="INFO">{
  "volumeName" : "fstest366",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-06-16T03:04:56.052Z",
  "modificationTime" : "2021-06-16T03:05:21.891Z",
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210616 03:06:21.166" endtime="20210616 03:06:21.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:21.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:21.167" endtime="20210616 03:06:21.168"/>
</kw>
<status status="PASS" starttime="20210616 03:06:16.968" endtime="20210616 03:06:21.168"/>
</kw>
<msg timestamp="20210616 03:06:21.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:16.968" endtime="20210616 03:06:21.168"/>
</kw>
<status status="PASS" starttime="20210616 03:06:16.968" endtime="20210616 03:06:21.169"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:21.173" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:21.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:21.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:21.170" endtime="20210616 03:06:21.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:21.178" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:21.177" endtime="20210616 03:06:21.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:21.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:21.178" endtime="20210616 03:06:21.179"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.170" endtime="20210616 03:06:21.179"/>
</kw>
<msg timestamp="20210616 03:06:21.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:21.169" endtime="20210616 03:06:21.179"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.169" endtime="20210616 03:06:21.180"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:21.187" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:21.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:21.190" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 03:06:21.182" endtime="20210616 03:06:21.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:21.192" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 03:06:21.191" endtime="20210616 03:06:21.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:21.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:21.192" endtime="20210616 03:06:21.193"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.182" endtime="20210616 03:06:21.193"/>
</kw>
<msg timestamp="20210616 03:06:21.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:21.181" endtime="20210616 03:06:21.193"/>
</kw>
<msg timestamp="20210616 03:06:21.194" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 03:06:21.181" endtime="20210616 03:06:21.194"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:06:21.195" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 03:06:21.194" endtime="20210616 03:06:21.195"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:21.199" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:21.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:21.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:21.197" endtime="20210616 03:06:21.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:21.208" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:21.208" endtime="20210616 03:06:21.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:21.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:21.209" endtime="20210616 03:06:21.210"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.196" endtime="20210616 03:06:21.210"/>
</kw>
<msg timestamp="20210616 03:06:21.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:21.196" endtime="20210616 03:06:21.210"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.195" endtime="20210616 03:06:21.210"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.195" endtime="20210616 03:06:21.210"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.180" endtime="20210616 03:06:21.211"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.180" endtime="20210616 03:06:21.211"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:05:26.011" endtime="20210616 03:06:21.211"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20210616 03:02:50.759" endtime="20210616 03:06:21.213"/>
</suite>
<suite id="s1-s7-s4" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s7-s4-t1" name="Secure S3 test Success">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup s3 tests</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 03:06:21.239" level="INFO">${random} = 61545</msg>
<status status="PASS" starttime="20210616 03:06:21.239" endtime="20210616 03:06:21.239"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:06:21.241" level="INFO">${PREFIX} = 61545</msg>
<status status="PASS" starttime="20210616 03:06:21.240" endtime="20210616 03:06:21.241"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.238" endtime="20210616 03:06:21.242"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.238" endtime="20210616 03:06:21.242"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:21.245" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:21.248" level="INFO">${rc} = 1</msg>
<msg timestamp="20210616 03:06:21.248" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210616 03:06:21.243" endtime="20210616 03:06:21.248"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210616 03:06:21.248" endtime="20210616 03:06:21.249"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:21.251" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:21.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:21.533" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/Installtid'
Usage: yum [options] COMMAND

List of Commands:

check          Check f...</msg>
<status status="PASS" starttime="20210616 03:06:21.249" endtime="20210616 03:06:21.533"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:21.540" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:29.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:29.557" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.vcu.edu
 * epel: iad.mirror.rackspace.com
 * extras: mirror.jaleco.com
 * updates: packages.oit.ncsu.edu
Package awscli-1...</msg>
<status status="PASS" starttime="20210616 03:06:21.538" endtime="20210616 03:06:29.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:29.559" level="INFO">Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.vcu.edu
 * epel: iad.mirror.rackspace.com
 * extras: mirror.jaleco.com
 * updates: packages.oit.ncsu.edu
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210616 03:06:29.558" endtime="20210616 03:06:29.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:29.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:29.559" endtime="20210616 03:06:29.560"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.537" endtime="20210616 03:06:29.561"/>
</kw>
<msg timestamp="20210616 03:06:29.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:21.536" endtime="20210616 03:06:29.561"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.536" endtime="20210616 03:06:29.561"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.535" endtime="20210616 03:06:29.562"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.534" endtime="20210616 03:06:29.562"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.242" endtime="20210616 03:06:29.562"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.242" endtime="20210616 03:06:29.562"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:29.571" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:29.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:29.575" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 03:06:29.566" endtime="20210616 03:06:29.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:29.576" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 03:06:29.575" endtime="20210616 03:06:29.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:29.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:29.576" endtime="20210616 03:06:29.578"/>
</kw>
<status status="PASS" starttime="20210616 03:06:29.566" endtime="20210616 03:06:29.578"/>
</kw>
<msg timestamp="20210616 03:06:29.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:29.565" endtime="20210616 03:06:29.579"/>
</kw>
<msg timestamp="20210616 03:06:29.579" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 03:06:29.565" endtime="20210616 03:06:29.579"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:06:29.582" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 03:06:29.579" endtime="20210616 03:06:29.582"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:29.587" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:29.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:29.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:29.584" endtime="20210616 03:06:29.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:29.596" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:29.595" endtime="20210616 03:06:29.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:29.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:29.596" endtime="20210616 03:06:29.597"/>
</kw>
<status status="PASS" starttime="20210616 03:06:29.584" endtime="20210616 03:06:29.597"/>
</kw>
<msg timestamp="20210616 03:06:29.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:29.583" endtime="20210616 03:06:29.597"/>
</kw>
<status status="PASS" starttime="20210616 03:06:29.583" endtime="20210616 03:06:29.598"/>
</kw>
<status status="PASS" starttime="20210616 03:06:29.582" endtime="20210616 03:06:29.598"/>
</kw>
<status status="PASS" starttime="20210616 03:06:29.564" endtime="20210616 03:06:29.598"/>
</kw>
<status status="PASS" starttime="20210616 03:06:29.564" endtime="20210616 03:06:29.598"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:29.603" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:32.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:32.859" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b42d18d7b3b535f74fe7ed3ce2e9a8b1a5743121474db03bae38a8b721d8fd60</msg>
<status status="PASS" starttime="20210616 03:06:29.601" endtime="20210616 03:06:32.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:32.861" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b42d18d7b3b535f74fe7ed3ce2e9a8b1a5743121474db03bae38a8b721d8fd60</msg>
<status status="PASS" starttime="20210616 03:06:32.860" endtime="20210616 03:06:32.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:32.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:32.861" endtime="20210616 03:06:32.862"/>
</kw>
<status status="PASS" starttime="20210616 03:06:29.601" endtime="20210616 03:06:32.862"/>
</kw>
<msg timestamp="20210616 03:06:32.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:29.600" endtime="20210616 03:06:32.862"/>
</kw>
<msg timestamp="20210616 03:06:32.863" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b42d18d7b3b535f74fe7ed3ce2e9a8b1a5743121474db03bae38a8b721d8fd60</msg>
<status status="PASS" starttime="20210616 03:06:29.599" endtime="20210616 03:06:32.863"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210616 03:06:32.864" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210616 03:06:32.863" endtime="20210616 03:06:32.864"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210616 03:06:32.864" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210616 03:06:32.864" endtime="20210616 03:06:32.865"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210616 03:06:32.865" level="INFO">${secret} = ['b42d18d7b3b535f74fe7ed3ce2e9a8b1a5743121474db03bae38a8b721d8fd60']</msg>
<status status="PASS" starttime="20210616 03:06:32.865" endtime="20210616 03:06:32.865"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210616 03:06:32.867" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 03:06:32.866" endtime="20210616 03:06:32.867"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210616 03:06:32.869" level="INFO">${secret} = b42d18d7b3b535f74fe7ed3ce2e9a8b1a5743121474db03bae38a8b721d8fd60</msg>
<status status="PASS" starttime="20210616 03:06:32.867" endtime="20210616 03:06:32.869"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:32.873" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:33.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:33.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:32.870" endtime="20210616 03:06:33.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:33.284" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:33.284" endtime="20210616 03:06:33.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:33.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:33.285" endtime="20210616 03:06:33.285"/>
</kw>
<status status="PASS" starttime="20210616 03:06:32.870" endtime="20210616 03:06:33.286"/>
</kw>
<msg timestamp="20210616 03:06:33.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:32.869" endtime="20210616 03:06:33.286"/>
</kw>
<status status="PASS" starttime="20210616 03:06:32.869" endtime="20210616 03:06:33.286"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:33.291" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:33.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:33.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:33.289" endtime="20210616 03:06:33.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:33.653" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:33.652" endtime="20210616 03:06:33.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:33.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:33.653" endtime="20210616 03:06:33.654"/>
</kw>
<status status="PASS" starttime="20210616 03:06:33.288" endtime="20210616 03:06:33.655"/>
</kw>
<msg timestamp="20210616 03:06:33.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:33.287" endtime="20210616 03:06:33.655"/>
</kw>
<status status="PASS" starttime="20210616 03:06:33.286" endtime="20210616 03:06:33.655"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:33.660" level="INFO">Running command 'aws configure set aws_secret_access_key b42d18d7b3b535f74fe7ed3ce2e9a8b1a5743121474db03bae38a8b721d8fd60 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:34.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:34.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:33.657" endtime="20210616 03:06:34.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:34.023" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:34.023" endtime="20210616 03:06:34.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:34.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:34.024" endtime="20210616 03:06:34.024"/>
</kw>
<status status="PASS" starttime="20210616 03:06:33.657" endtime="20210616 03:06:34.025"/>
</kw>
<msg timestamp="20210616 03:06:34.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:33.656" endtime="20210616 03:06:34.025"/>
</kw>
<status status="PASS" starttime="20210616 03:06:33.655" endtime="20210616 03:06:34.025"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:34.030" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:34.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:34.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:34.028" endtime="20210616 03:06:34.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:34.387" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:34.386" endtime="20210616 03:06:34.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:34.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:34.387" endtime="20210616 03:06:34.387"/>
</kw>
<status status="PASS" starttime="20210616 03:06:34.027" endtime="20210616 03:06:34.388"/>
</kw>
<msg timestamp="20210616 03:06:34.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:34.027" endtime="20210616 03:06:34.388"/>
</kw>
<status status="PASS" starttime="20210616 03:06:34.026" endtime="20210616 03:06:34.388"/>
</kw>
<status status="PASS" starttime="20210616 03:06:29.599" endtime="20210616 03:06:34.389"/>
</kw>
<status status="PASS" starttime="20210616 03:06:29.598" endtime="20210616 03:06:34.389"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210616 03:06:34.389" endtime="20210616 03:06:34.389"/>
</kw>
<status status="PASS" starttime="20210616 03:06:29.563" endtime="20210616 03:06:34.390"/>
</kw>
<status status="PASS" starttime="20210616 03:06:29.562" endtime="20210616 03:06:34.390"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210616 03:06:34.392" level="INFO">${postfix} = 96515</msg>
<status status="PASS" starttime="20210616 03:06:34.391" endtime="20210616 03:06:34.392"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210616 03:06:34.392" level="INFO">${bucket} = bucket-96515</msg>
<status status="PASS" starttime="20210616 03:06:34.392" endtime="20210616 03:06:34.392"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:34.398" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-96515 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:36.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:36.446" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-96515"
}</msg>
<status status="PASS" starttime="20210616 03:06:34.395" endtime="20210616 03:06:36.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:36.447" level="INFO">{
    "Location": "http://s3g:9878/bucket-96515"
}</msg>
<status status="PASS" starttime="20210616 03:06:36.447" endtime="20210616 03:06:36.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:36.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:36.448" endtime="20210616 03:06:36.449"/>
</kw>
<status status="PASS" starttime="20210616 03:06:34.395" endtime="20210616 03:06:36.449"/>
</kw>
<msg timestamp="20210616 03:06:36.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:34.394" endtime="20210616 03:06:36.449"/>
</kw>
<msg timestamp="20210616 03:06:36.450" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-96515"
}</msg>
<status status="PASS" starttime="20210616 03:06:34.394" endtime="20210616 03:06:36.450"/>
</kw>
<msg timestamp="20210616 03:06:36.450" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-96515"
}</msg>
<status status="PASS" starttime="20210616 03:06:34.393" endtime="20210616 03:06:36.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:06:36.450" endtime="20210616 03:06:36.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:06:36.451" endtime="20210616 03:06:36.452"/>
</kw>
<status status="PASS" starttime="20210616 03:06:34.392" endtime="20210616 03:06:36.452"/>
</kw>
<status status="PASS" starttime="20210616 03:06:34.390" endtime="20210616 03:06:36.452"/>
</kw>
<msg timestamp="20210616 03:06:36.453" level="INFO">${BUCKET} = bucket-96515</msg>
<status status="PASS" starttime="20210616 03:06:34.390" endtime="20210616 03:06:36.453"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:06:36.453" level="INFO">${BUCKET} = bucket-96515</msg>
<status status="PASS" starttime="20210616 03:06:36.453" endtime="20210616 03:06:36.453"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210616 03:06:36.454" endtime="20210616 03:06:36.454"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.238" endtime="20210616 03:06:36.454"/>
</kw>
<status status="PASS" starttime="20210616 03:06:21.237" endtime="20210616 03:06:36.454"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:36.459" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:36.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:36.990" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20210616 03:06:36.456" endtime="20210616 03:06:36.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:36.992" level="INFO">{
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20210616 03:06:36.990" endtime="20210616 03:06:36.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:36.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:36.992" endtime="20210616 03:06:36.993"/>
</kw>
<status status="PASS" starttime="20210616 03:06:36.455" endtime="20210616 03:06:36.993"/>
</kw>
<msg timestamp="20210616 03:06:36.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:36.455" endtime="20210616 03:06:36.993"/>
</kw>
<msg timestamp="20210616 03:06:36.993" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20210616 03:06:36.455" endtime="20210616 03:06:36.993"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:36.997" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:37.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:37.560" level="INFO">${output} = {
    "Buckets": [
        {
            "CreationDate": "2021-06-16T03:06:36.376Z", 
            "Name": "bucket-96515"
        }, 
        {
            "CreationDate": "2021-06-16T03:06:36.936Z", 
...</msg>
<status status="PASS" starttime="20210616 03:06:36.995" endtime="20210616 03:06:37.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:37.562" level="INFO">{
    "Buckets": [
        {
            "CreationDate": "2021-06-16T03:06:36.376Z", 
            "Name": "bucket-96515"
        }, 
        {
            "CreationDate": "2021-06-16T03:06:36.936Z", 
            "Name": "bucket-test123"
        }
    ]
}</msg>
<status status="PASS" starttime="20210616 03:06:37.561" endtime="20210616 03:06:37.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:37.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:37.562" endtime="20210616 03:06:37.563"/>
</kw>
<status status="PASS" starttime="20210616 03:06:36.995" endtime="20210616 03:06:37.563"/>
</kw>
<msg timestamp="20210616 03:06:37.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:36.994" endtime="20210616 03:06:37.564"/>
</kw>
<msg timestamp="20210616 03:06:37.564" level="INFO">${output} = {
    "Buckets": [
        {
            "CreationDate": "2021-06-16T03:06:36.376Z", 
            "Name": "bucket-96515"
        }, 
        {
            "CreationDate": "2021-06-16T03:06:36.936Z", 
...</msg>
<status status="PASS" starttime="20210616 03:06:36.994" endtime="20210616 03:06:37.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test123</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:06:37.565" endtime="20210616 03:06:37.565"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:06:21.236" endtime="20210616 03:06:37.566"/>
</test>
<test id="s1-s7-s4-t2" name="Secure S3 put-object test">
<kw name="Set Variable" library="BuiltIn">
<var>${testFilePath}</var>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210616 03:06:37.568" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20210616 03:06:37.567" endtime="20210616 03:06:37.568"/>
</kw>
<kw name="Copy File" library="OperatingSystem">
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20210616 03:06:37.570" level="INFO" html="true">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20210616 03:06:37.568" endtime="20210616 03:06:37.570"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:37.575" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:40.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:40.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:37.572" endtime="20210616 03:06:40.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:40.413" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:40.412" endtime="20210616 03:06:40.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:40.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:40.414" endtime="20210616 03:06:40.414"/>
</kw>
<status status="PASS" starttime="20210616 03:06:37.571" endtime="20210616 03:06:40.415"/>
</kw>
<msg timestamp="20210616 03:06:40.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:37.571" endtime="20210616 03:06:40.415"/>
</kw>
<msg timestamp="20210616 03:06:40.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:37.570" endtime="20210616 03:06:40.415"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:40.421" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:40.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:40.991" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-06-16T03:06:40.331Z", 
            "ETag": "2021-06-16T03:06:40.331Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20210616 03:06:40.418" endtime="20210616 03:06:40.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:40.992" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-06-16T03:06:40.331Z", 
            "ETag": "2021-06-16T03:06:40.331Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp1/tmp2/NOTICE.txt", 
            "Size": 17526
        }
    ]
}</msg>
<status status="PASS" starttime="20210616 03:06:40.991" endtime="20210616 03:06:40.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:40.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:40.992" endtime="20210616 03:06:40.993"/>
</kw>
<status status="PASS" starttime="20210616 03:06:40.417" endtime="20210616 03:06:40.993"/>
</kw>
<msg timestamp="20210616 03:06:40.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:40.417" endtime="20210616 03:06:40.994"/>
</kw>
<msg timestamp="20210616 03:06:40.994" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-06-16T03:06:40.331Z", 
            "ETag": "2021-06-16T03:06:40.331Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20210616 03:06:40.416" endtime="20210616 03:06:40.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:06:40.994" endtime="20210616 03:06:40.995"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:41.001" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:41.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:41.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:40.998" endtime="20210616 03:06:41.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:41.641" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:41.640" endtime="20210616 03:06:41.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:41.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:41.641" endtime="20210616 03:06:41.642"/>
</kw>
<status status="PASS" starttime="20210616 03:06:40.996" endtime="20210616 03:06:41.642"/>
</kw>
<msg timestamp="20210616 03:06:41.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:40.996" endtime="20210616 03:06:41.643"/>
</kw>
<msg timestamp="20210616 03:06:41.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:40.995" endtime="20210616 03:06:41.644"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:41.648" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:42.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:42.165" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-06-16T03:06:40.331Z", 
            "ETag": "2021-06-16T03:06:40.331Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20210616 03:06:41.646" endtime="20210616 03:06:42.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:42.167" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-06-16T03:06:40.331Z", 
            "ETag": "2021-06-16T03:06:40.331Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp1/tmp2/NOTICE.txt", 
            "Size": 17526
        }, 
        {
            "LastModified": "2021-06-16T03:06:41.589Z", 
            "ETag": "2021-06-16T03:06:41.589Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp3//tmp4/NOTICE.txt", 
            "Size": 17526
        }
    ]
}</msg>
<status status="PASS" starttime="20210616 03:06:42.166" endtime="20210616 03:06:42.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:42.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:42.167" endtime="20210616 03:06:42.168"/>
</kw>
<status status="PASS" starttime="20210616 03:06:41.645" endtime="20210616 03:06:42.168"/>
</kw>
<msg timestamp="20210616 03:06:42.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:41.645" endtime="20210616 03:06:42.168"/>
</kw>
<msg timestamp="20210616 03:06:42.169" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-06-16T03:06:40.331Z", 
            "ETag": "2021-06-16T03:06:40.331Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20210616 03:06:41.644" endtime="20210616 03:06:42.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:06:42.169" endtime="20210616 03:06:42.170"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:42.174" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:42.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:42.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:42.172" endtime="20210616 03:06:42.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:42.818" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:42.817" endtime="20210616 03:06:42.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:42.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:42.818" endtime="20210616 03:06:42.819"/>
</kw>
<status status="PASS" starttime="20210616 03:06:42.171" endtime="20210616 03:06:42.819"/>
</kw>
<msg timestamp="20210616 03:06:42.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:42.171" endtime="20210616 03:06:42.820"/>
</kw>
<msg timestamp="20210616 03:06:42.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:42.170" endtime="20210616 03:06:42.820"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:42.825" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:43.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:43.364" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-06-16T03:06:42.762Z", 
            "ETag": "2021-06-16T03:06:42.762Z", 
            "StorageClass": "STANDARD", 
            "Key": "//t...</msg>
<status status="PASS" starttime="20210616 03:06:42.822" endtime="20210616 03:06:43.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:43.366" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-06-16T03:06:42.762Z", 
            "ETag": "2021-06-16T03:06:42.762Z", 
            "StorageClass": "STANDARD", 
            "Key": "//tmp5/tmp6/NOTICE.txt", 
            "Size": 17526
        }, 
        {
            "LastModified": "2021-06-16T03:06:40.331Z", 
            "ETag": "2021-06-16T03:06:40.331Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp1/tmp2/NOTICE.txt", 
            "Size": 17526
        }, 
        {
            "LastModified": "2021-06-16T03:06:41.589Z", 
            "ETag": "2021-06-16T03:06:41.589Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp3//tmp4/NOTICE.txt", 
            "Size": 17526
        }
    ]
}</msg>
<status status="PASS" starttime="20210616 03:06:43.365" endtime="20210616 03:06:43.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:43.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:43.366" endtime="20210616 03:06:43.367"/>
</kw>
<status status="PASS" starttime="20210616 03:06:42.822" endtime="20210616 03:06:43.367"/>
</kw>
<msg timestamp="20210616 03:06:43.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:42.821" endtime="20210616 03:06:43.368"/>
</kw>
<msg timestamp="20210616 03:06:43.368" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-06-16T03:06:42.762Z", 
            "ETag": "2021-06-16T03:06:42.762Z", 
            "StorageClass": "STANDARD", 
            "Key": "//t...</msg>
<status status="PASS" starttime="20210616 03:06:42.820" endtime="20210616 03:06:43.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:06:43.368" endtime="20210616 03:06:43.369"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:06:37.566" endtime="20210616 03:06:43.369"/>
</test>
<test id="s1-s7-s4-t3" name="Secure S3 test Failure">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:43.377" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:43.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:43.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:43.374" endtime="20210616 03:06:43.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:43.744" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:43.743" endtime="20210616 03:06:43.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:43.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:43.744" endtime="20210616 03:06:43.745"/>
</kw>
<status status="PASS" starttime="20210616 03:06:43.373" endtime="20210616 03:06:43.746"/>
</kw>
<msg timestamp="20210616 03:06:43.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:43.372" endtime="20210616 03:06:43.746"/>
</kw>
<status status="PASS" starttime="20210616 03:06:43.372" endtime="20210616 03:06:43.746"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:43.751" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:44.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:44.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:43.748" endtime="20210616 03:06:44.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:44.130" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:44.129" endtime="20210616 03:06:44.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:44.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:44.130" endtime="20210616 03:06:44.132"/>
</kw>
<status status="PASS" starttime="20210616 03:06:43.747" endtime="20210616 03:06:44.132"/>
</kw>
<msg timestamp="20210616 03:06:44.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:43.747" endtime="20210616 03:06:44.132"/>
</kw>
<status status="PASS" starttime="20210616 03:06:43.746" endtime="20210616 03:06:44.133"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:44.137" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:44.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:44.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:44.134" endtime="20210616 03:06:44.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:44.501" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:44.500" endtime="20210616 03:06:44.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:44.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:44.501" endtime="20210616 03:06:44.502"/>
</kw>
<status status="PASS" starttime="20210616 03:06:44.134" endtime="20210616 03:06:44.502"/>
</kw>
<msg timestamp="20210616 03:06:44.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:44.133" endtime="20210616 03:06:44.503"/>
</kw>
<status status="PASS" starttime="20210616 03:06:44.133" endtime="20210616 03:06:44.503"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:44.508" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:44.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:44.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:44.505" endtime="20210616 03:06:44.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:44.900" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:44.899" endtime="20210616 03:06:44.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:44.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:44.900" endtime="20210616 03:06:44.901"/>
</kw>
<status status="PASS" starttime="20210616 03:06:44.504" endtime="20210616 03:06:44.902"/>
</kw>
<msg timestamp="20210616 03:06:44.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:44.504" endtime="20210616 03:06:44.902"/>
</kw>
<status status="PASS" starttime="20210616 03:06:44.503" endtime="20210616 03:06:44.902"/>
</kw>
<status status="PASS" starttime="20210616 03:06:43.371" endtime="20210616 03:06:44.902"/>
</kw>
<status status="PASS" starttime="20210616 03:06:43.371" endtime="20210616 03:06:44.903"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${result}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:44.905" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:51.482" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:06:51.482" level="INFO">${result} = 
An error occurred (500) when calling the CreateBucket operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210616 03:06:44.903" endtime="20210616 03:06:51.482"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210616 03:06:51.483" endtime="20210616 03:06:51.484"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:06:43.370" endtime="20210616 03:06:51.484"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20210616 03:06:21.216" endtime="20210616 03:06:51.486"/>
</suite>
<suite id="s1-s7-s5" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s7-s5-t1" name="Token Test">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210616 03:06:51.498" endtime="20210616 03:06:51.498"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Secure Cluster">
<kw name="Get and use Token in Secure Cluster">
<kw name="Execute" library="os">
<arg>ozone sh token get -t /tmp/ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:51.503" level="INFO">Running command 'ozone sh token get -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:55.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:55.451" level="INFO">${output} = Successfully get token for service 172.18.0.10:9862
Kind: OzoneToken, Service: 172.18.0.10:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=root, realUser=, issueDate=2021-06-16T03:06:...</msg>
<status status="PASS" starttime="20210616 03:06:51.501" endtime="20210616 03:06:55.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:55.452" level="INFO">Successfully get token for service 172.18.0.10:9862
Kind: OzoneToken, Service: 172.18.0.10:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=root, realUser=, issueDate=2021-06-16T03:06:55.302Z, maxDate=2021-06-23T03:06:55.302Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault)
Token persisted to /tmp/ozone.token successfully!</msg>
<status status="PASS" starttime="20210616 03:06:55.452" endtime="20210616 03:06:55.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:55.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:55.453" endtime="20210616 03:06:55.453"/>
</kw>
<status status="PASS" starttime="20210616 03:06:51.500" endtime="20210616 03:06:55.454"/>
</kw>
<msg timestamp="20210616 03:06:55.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:51.500" endtime="20210616 03:06:55.454"/>
</kw>
<status status="PASS" starttime="20210616 03:06:51.499" endtime="20210616 03:06:55.454"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>/tmp/ozone.token</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210616 03:06:55.455" level="INFO" html="true">File '&lt;a href="file:///tmp/ozone.token"&gt;/tmp/ozone.token&lt;/a&gt;' contains 400 bytes.</msg>
<status status="PASS" starttime="20210616 03:06:55.455" endtime="20210616 03:06:55.455"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:55.459" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:55.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:55.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:55.457" endtime="20210616 03:06:55.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:55.464" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:55.464" endtime="20210616 03:06:55.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:55.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:55.465" endtime="20210616 03:06:55.465"/>
</kw>
<status status="PASS" starttime="20210616 03:06:55.456" endtime="20210616 03:06:55.467"/>
</kw>
<msg timestamp="20210616 03:06:55.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:55.456" endtime="20210616 03:06:55.468"/>
</kw>
<status status="PASS" starttime="20210616 03:06:55.455" endtime="20210616 03:06:55.468"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<arg>/tmp/ozone.token</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210616 03:06:55.468" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' set to value '/tmp/ozone.token'.</msg>
<status status="PASS" starttime="20210616 03:06:55.468" endtime="20210616 03:06:55.469"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:55.473" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:06:59.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:06:59.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:55.470" endtime="20210616 03:06:59.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:06:59.244" level="INFO"/>
<status status="PASS" starttime="20210616 03:06:59.243" endtime="20210616 03:06:59.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:06:59.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:06:59.244" endtime="20210616 03:06:59.245"/>
</kw>
<status status="PASS" starttime="20210616 03:06:55.470" endtime="20210616 03:06:59.245"/>
</kw>
<msg timestamp="20210616 03:06:59.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:06:55.469" endtime="20210616 03:06:59.245"/>
</kw>
<msg timestamp="20210616 03:06:59.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:06:55.469" endtime="20210616 03:06:59.246"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:06:59.246" endtime="20210616 03:06:59.247"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20210616 03:06:59.247" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' deleted.</msg>
<status status="PASS" starttime="20210616 03:06:59.247" endtime="20210616 03:06:59.247"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:06:59.250" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:02.612" level="INFO">${rc} = 255</msg>
<msg timestamp="20210616 03:07:02.612" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20210616 03:06:59.248" endtime="20210616 03:07:02.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:02.613" level="INFO">org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20210616 03:07:02.612" endtime="20210616 03:07:02.613"/>
</kw>
<msg timestamp="20210616 03:07:02.614" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20210616 03:06:59.248" endtime="20210616 03:07:02.614"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:07:02.614" endtime="20210616 03:07:02.615"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:02.620" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:02.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:02.626" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210616 03:07:02.617" endtime="20210616 03:07:02.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:02.628" level="INFO">scm</msg>
<status status="PASS" starttime="20210616 03:07:02.627" endtime="20210616 03:07:02.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:07:02.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:07:02.628" endtime="20210616 03:07:02.629"/>
</kw>
<status status="PASS" starttime="20210616 03:07:02.617" endtime="20210616 03:07:02.629"/>
</kw>
<msg timestamp="20210616 03:07:02.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:07:02.616" endtime="20210616 03:07:02.629"/>
</kw>
<msg timestamp="20210616 03:07:02.630" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210616 03:07:02.616" endtime="20210616 03:07:02.630"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210616 03:07:02.632" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210616 03:07:02.630" endtime="20210616 03:07:02.632"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:02.638" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:02.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:02.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210616 03:07:02.635" endtime="20210616 03:07:02.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:02.650" level="INFO"/>
<status status="PASS" starttime="20210616 03:07:02.649" endtime="20210616 03:07:02.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:07:02.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:07:02.650" endtime="20210616 03:07:02.651"/>
</kw>
<status status="PASS" starttime="20210616 03:07:02.635" endtime="20210616 03:07:02.651"/>
</kw>
<msg timestamp="20210616 03:07:02.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:07:02.634" endtime="20210616 03:07:02.652"/>
</kw>
<status status="PASS" starttime="20210616 03:07:02.634" endtime="20210616 03:07:02.652"/>
</kw>
<status status="PASS" starttime="20210616 03:07:02.632" endtime="20210616 03:07:02.652"/>
</kw>
<status status="PASS" starttime="20210616 03:07:02.615" endtime="20210616 03:07:02.652"/>
</kw>
<status status="PASS" starttime="20210616 03:07:02.615" endtime="20210616 03:07:02.652"/>
</kw>
<status status="PASS" starttime="20210616 03:06:51.499" endtime="20210616 03:07:02.652"/>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:02.657" level="INFO">Running command 'ozone sh token print 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:04.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:04.796" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.10:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=root, realUser=, issueDate=2021-06-16T03:06:55.302Z, maxDate=2021-06-23T03:06:55.302Z, sequenceN...</msg>
<status status="PASS" starttime="20210616 03:07:02.655" endtime="20210616 03:07:04.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:04.797" level="INFO">Kind: OzoneToken, Service: 172.18.0.10:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=root, realUser=, issueDate=2021-06-16T03:06:55.302Z, maxDate=2021-06-23T03:06:55.302Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault)</msg>
<status status="PASS" starttime="20210616 03:07:04.796" endtime="20210616 03:07:04.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:07:04.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:07:04.798" endtime="20210616 03:07:04.798"/>
</kw>
<status status="PASS" starttime="20210616 03:07:02.654" endtime="20210616 03:07:04.799"/>
</kw>
<msg timestamp="20210616 03:07:04.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:07:02.654" endtime="20210616 03:07:04.799"/>
</kw>
<msg timestamp="20210616 03:07:04.799" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.10:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=root, realUser=, issueDate=2021-06-16T03:06:55.302Z, maxDate=2021-06-23T03:06:55.302Z, sequenceN...</msg>
<status status="PASS" starttime="20210616 03:07:02.653" endtime="20210616 03:07:04.799"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210616 03:07:04.800" level="INFO">Length is 308</msg>
<status status="PASS" starttime="20210616 03:07:04.800" endtime="20210616 03:07:04.800"/>
</kw>
<status status="PASS" starttime="20210616 03:07:02.653" endtime="20210616 03:07:04.801"/>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:04.805" level="INFO">Running command 'ozone sh token renew 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:09.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:09.136" level="INFO">${output} = Token renewed successfully, expiry time: 2021-06-17T03:07:08.886Z.</msg>
<status status="PASS" starttime="20210616 03:07:04.803" endtime="20210616 03:07:09.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:09.137" level="INFO">Token renewed successfully, expiry time: 2021-06-17T03:07:08.886Z.</msg>
<status status="PASS" starttime="20210616 03:07:09.136" endtime="20210616 03:07:09.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:07:09.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:07:09.138" endtime="20210616 03:07:09.138"/>
</kw>
<status status="PASS" starttime="20210616 03:07:04.802" endtime="20210616 03:07:09.139"/>
</kw>
<msg timestamp="20210616 03:07:09.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:07:04.802" endtime="20210616 03:07:09.139"/>
</kw>
<msg timestamp="20210616 03:07:09.139" level="INFO">${output} = Token renewed successfully, expiry time: 2021-06-17T03:07:08.886Z.</msg>
<status status="PASS" starttime="20210616 03:07:04.801" endtime="20210616 03:07:09.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:07:09.139" endtime="20210616 03:07:09.140"/>
</kw>
<status status="PASS" starttime="20210616 03:07:04.801" endtime="20210616 03:07:09.140"/>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:09.147" level="INFO">Running command 'ozone sh token cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:12.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:12.993" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20210616 03:07:09.143" endtime="20210616 03:07:12.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:12.994" level="INFO">Token canceled successfully.</msg>
<status status="PASS" starttime="20210616 03:07:12.993" endtime="20210616 03:07:12.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:07:12.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:07:12.994" endtime="20210616 03:07:12.995"/>
</kw>
<status status="PASS" starttime="20210616 03:07:09.142" endtime="20210616 03:07:12.995"/>
</kw>
<msg timestamp="20210616 03:07:12.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:07:09.141" endtime="20210616 03:07:12.996"/>
</kw>
<msg timestamp="20210616 03:07:12.997" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20210616 03:07:09.141" endtime="20210616 03:07:12.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:07:12.997" endtime="20210616 03:07:12.997"/>
</kw>
<status status="PASS" starttime="20210616 03:07:09.140" endtime="20210616 03:07:12.997"/>
</kw>
<status status="PASS" starttime="20210616 03:06:51.499" endtime="20210616 03:07:12.998"/>
</kw>
<status status="PASS" starttime="20210616 03:06:51.498" endtime="20210616 03:07:12.998"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210616 03:07:13.002" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20210616 03:07:15.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210616 03:07:15.096" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20210616 03:07:13.000" endtime="20210616 03:07:15.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210616 03:07:15.097" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20210616 03:07:15.096" endtime="20210616 03:07:15.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210616 03:07:15.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210616 03:07:15.098" endtime="20210616 03:07:15.098"/>
</kw>
<status status="PASS" starttime="20210616 03:07:12.999" endtime="20210616 03:07:15.099"/>
</kw>
<msg timestamp="20210616 03:07:15.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210616 03:07:12.999" endtime="20210616 03:07:15.099"/>
</kw>
<msg timestamp="20210616 03:07:15.099" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20210616 03:07:12.999" endtime="20210616 03:07:15.099"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210616 03:07:15.099" endtime="20210616 03:07:15.100"/>
</kw>
<status status="PASS" starttime="20210616 03:07:12.998" endtime="20210616 03:07:15.101"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210616 03:06:51.497" endtime="20210616 03:07:15.102"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20210616 03:06:51.488" endtime="20210616 03:07:15.103"/>
</suite>
<status status="PASS" starttime="20210616 03:02:11.381" endtime="20210616 03:07:15.107"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2525050"/>
</suite>
<statistics>
<total>
<stat pass="119" fail="13" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="119" fail="13" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="29" fail="0" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
<stat pass="21" fail="0" skip="0" id="s1-s3" name="ozonefs-ofs-bucket">ozonesecure.ozonefs-ofs-bucket</stat>
<stat pass="21" fail="0" skip="0" id="s1-s4" name="ozonefs-o3fs-link">ozonesecure.ozonefs-o3fs-link</stat>
<stat pass="8" fail="13" skip="0" id="s1-s5" name="ozonefs-o3fs-bucket">ozonesecure.ozonefs-o3fs-bucket</stat>
<stat pass="21" fail="0" skip="0" id="s1-s6" name="ozonefs-ofs-link">ozonesecure.ozonefs-ofs-link</stat>
<stat pass="18" fail="0" skip="0" id="s1-s7" name="Security">ozonesecure.Security</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7-s1" name="Admin-Cert">ozonesecure.Security.Admin-Cert</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7-s2" name="Bucket-Encryption">ozonesecure.Security.Bucket-Encryption</stat>
<stat pass="9" fail="0" skip="0" id="s1-s7-s3" name="Ozone-Secure-Fs">ozonesecure.Security.Ozone-Secure-Fs</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7-s4" name="Ozone-Secure-S3">ozonesecure.Security.Ozone-Secure-S3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7-s5" name="Ozone-Secure-Token">ozonesecure.Security.Ozone-Secure-Token</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
