<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210607 15:00:31.932" rpa="false" schemaversion="2">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:59:53.331" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 15:00:09.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 15:00:09.237" level="INFO">${output} = 2021-06-07 14:59:54,560 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:59:54,678 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 14:59:53.327" endtime="20210607 15:00:09.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 15:00:09.238" level="INFO">2021-06-07 14:59:54,560 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:59:54,678 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-07 14:59:54,678 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-07 14:59:54,856 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-06-07 14:59:54,874 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:59:55,878 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:59:56,344 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-06-07 14:59:56,581 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-07 14:59:56,582 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-505E06DFD31E-&gt;1ffc07c4-1805-4baf-b397-f4b40e0345e8
2021-06-07 14:59:56,584 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-07 14:59:56,879 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:59:57,879 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:59:58,880 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:59:59,880 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 15:00:00,658 [java.util.concurrent.ThreadPoolExecutor$Worker@5a3a0bb5[State = -1, empty queue]] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-505E06DFD31E-&gt;6c72a3a9-1f43-4ef7-9ed3-8c367f7fc28a
2021-06-07 15:00:00,659 [java.util.concurrent.ThreadPoolExecutor$Worker@5a3a0bb5[State = -1, empty queue]] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-07 15:00:00,881 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 15:00:01,881 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 15:00:02,882 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 15:00:03,882 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 15:00:04,883 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 15:00:05,883 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 15:00:06,884 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 15:00:07,449 [java.util.concurrent.ThreadPoolExecutor$Worker@29265e5e[State = -1, empty queue]] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-505E06DFD31E-&gt;96d744ea-73af-4720-9705-0e0c2f3ff140
2021-06-07 15:00:07,450 [java.util.concurrent.ThreadPoolExecutor$Worker@29265e5e[State = -1, empty queue]] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-07 15:00:07,884 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 15:00:08,885 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-07 15:00:08,908 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=12455.018181, max=12455.018181, mean=12455.018181, stddev=0.0, median=12455.018181, p75=12455.018181, p95=12455.018181, p98=12455.018181, p99=12455.018181, p999=12455.018181, mean_rate=0.07482552352781213, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-07 15:00:08,908 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 14
2021-06-07 15:00:08,909 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-07 15:00:08,909 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210607 15:00:09.237" endtime="20210607 15:00:09.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 15:00:09.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 15:00:09.238" endtime="20210607 15:00:09.239"/>
</kw>
<status status="PASS" starttime="20210607 14:59:53.326" endtime="20210607 15:00:09.239"/>
</kw>
<msg timestamp="20210607 15:00:09.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:59:53.326" endtime="20210607 15:00:09.239"/>
</kw>
<msg timestamp="20210607 15:00:09.240" level="INFO">${result} = 2021-06-07 14:59:54,560 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:59:54,678 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 14:59:53.325" endtime="20210607 15:00:09.240"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 15:00:09.240" endtime="20210607 15:00:09.240"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210607 14:59:53.324" endtime="20210607 15:00:09.241"/>
</test>
<test id="s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 15:00:09.246" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 15:00:12.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 15:00:12.372" level="INFO">${output} = 2021-06-07 15:00:10,368 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 15:00:10,505 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 15:00:09.244" endtime="20210607 15:00:12.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 15:00:12.373" level="INFO">2021-06-07 15:00:10,368 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 15:00:10,505 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-07 15:00:10,506 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-07 15:00:10,710 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost
2021-06-07 15:00:10,723 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 15:00:11,727 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-07 15:00:12,350 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=57.046388, max=57.046388, mean=57.046388, stddev=0.0, median=57.046388, p75=57.046388, p95=57.046388, p98=57.046388, p99=57.046388, p999=57.046388, mean_rate=0.9715507620355001, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-07 15:00:12,362 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-06-07 15:00:12,362 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-07 15:00:12,362 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210607 15:00:12.372" endtime="20210607 15:00:12.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 15:00:12.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 15:00:12.373" endtime="20210607 15:00:12.374"/>
</kw>
<status status="PASS" starttime="20210607 15:00:09.243" endtime="20210607 15:00:12.374"/>
</kw>
<msg timestamp="20210607 15:00:12.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 15:00:09.243" endtime="20210607 15:00:12.374"/>
</kw>
<msg timestamp="20210607 15:00:12.375" level="INFO">${result} = 2021-06-07 15:00:10,368 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 15:00:10,505 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 15:00:09.242" endtime="20210607 15:00:12.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 15:00:12.375" endtime="20210607 15:00:12.375"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210607 15:00:09.241" endtime="20210607 15:00:12.376"/>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 15:00:12.381" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 15:00:15.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 15:00:15.559" level="INFO">${output} = 2021-06-07 15:00:13,651 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 15:00:13,753 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 15:00:12.379" endtime="20210607 15:00:15.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 15:00:15.560" level="INFO">2021-06-07 15:00:13,651 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 15:00:13,753 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-07 15:00:13,753 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-07 15:00:13,919 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost
2021-06-07 15:00:13,935 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 15:00:14,954 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-07 15:00:15,536 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=18.371296, max=18.371296, mean=18.371296, stddev=0.0, median=18.371296, p75=18.371296, p95=18.371296, p98=18.371296, p99=18.371296, p999=18.371296, mean_rate=0.9876746266024962, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-07 15:00:15,537 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-06-07 15:00:15,540 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-07 15:00:15,541 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210607 15:00:15.559" endtime="20210607 15:00:15.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 15:00:15.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 15:00:15.560" endtime="20210607 15:00:15.561"/>
</kw>
<status status="PASS" starttime="20210607 15:00:12.378" endtime="20210607 15:00:15.561"/>
</kw>
<msg timestamp="20210607 15:00:15.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 15:00:12.378" endtime="20210607 15:00:15.561"/>
</kw>
<msg timestamp="20210607 15:00:15.562" level="INFO">${result} = 2021-06-07 15:00:13,651 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 15:00:13,753 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 15:00:12.377" endtime="20210607 15:00:15.562"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 15:00:15.562" endtime="20210607 15:00:15.562"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210607 15:00:12.376" endtime="20210607 15:00:15.563"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20210607 14:59:53.279" endtime="20210607 15:00:15.564"/>
</suite>
<suite id="s1-s2" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s2-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:58:25.499" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:58:33.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:58:33.865" level="INFO">${output} = 2021-06-07 14:58:26,901 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:58:27,004 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 14:58:25.495" endtime="20210607 14:58:33.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:58:33.866" level="INFO">2021-06-07 14:58:26,901 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:58:27,004 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-07 14:58:27,004 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-07 14:58:27,177 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-06-07 14:58:27,197 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:58:28,202 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:58:29,203 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:58:30,204 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:58:30,245 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-06-07 14:58:30,445 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-07 14:58:31,204 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:58:31,214 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-06-07 14:58:31,409 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-07 14:58:31,410 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-ACE4A236CB37-&gt;96d744ea-73af-4720-9705-0e0c2f3ff140
2021-06-07 14:58:31,412 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-07 14:58:32,206 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:58:33,207 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-07 14:58:33,538 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=2339.966768, max=2339.966768, mean=2339.966768, stddev=0.0, median=2339.966768, p75=2339.966768, p95=2339.966768, p98=2339.966768, p99=2339.966768, p999=2339.966768, mean_rate=0.32664486744654264, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-07 14:58:33,539 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2021-06-07 14:58:33,539 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-07 14:58:33,539 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210607 14:58:33.865" endtime="20210607 14:58:33.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:58:33.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:58:33.866" endtime="20210607 14:58:33.867"/>
</kw>
<status status="PASS" starttime="20210607 14:58:25.494" endtime="20210607 14:58:33.868"/>
</kw>
<msg timestamp="20210607 14:58:33.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:58:25.494" endtime="20210607 14:58:33.868"/>
</kw>
<msg timestamp="20210607 14:58:33.868" level="INFO">${result} = 2021-06-07 14:58:26,901 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:58:27,004 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 14:58:25.493" endtime="20210607 14:58:33.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:58:33.869" endtime="20210607 14:58:33.869"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210607 14:58:25.492" endtime="20210607 14:58:33.870"/>
</test>
<test id="s1-s2-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:58:33.875" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:58:37.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:58:37.115" level="INFO">${output} = 2021-06-07 14:58:35,108 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:58:35,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 14:58:33.873" endtime="20210607 14:58:37.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:58:37.116" level="INFO">2021-06-07 14:58:35,108 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:58:35,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-07 14:58:35,256 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-07 14:58:35,428 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre
2021-06-07 14:58:35,443 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:58:36,447 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-07 14:58:37,100 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=70.202156, max=70.202156, mean=70.202156, stddev=0.0, median=70.202156, p75=70.202156, p95=70.202156, p98=70.202156, p99=70.202156, p999=70.202156, mean_rate=0.9792798687060679, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-07 14:58:37,104 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-06-07 14:58:37,104 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-07 14:58:37,104 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210607 14:58:37.115" endtime="20210607 14:58:37.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:58:37.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:58:37.117" endtime="20210607 14:58:37.117"/>
</kw>
<status status="PASS" starttime="20210607 14:58:33.872" endtime="20210607 14:58:37.118"/>
</kw>
<msg timestamp="20210607 14:58:37.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:58:33.872" endtime="20210607 14:58:37.118"/>
</kw>
<msg timestamp="20210607 14:58:37.118" level="INFO">${result} = 2021-06-07 14:58:35,108 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:58:35,256 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 14:58:33.871" endtime="20210607 14:58:37.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:58:37.118" endtime="20210607 14:58:37.119"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210607 14:58:33.870" endtime="20210607 14:58:37.119"/>
</test>
<test id="s1-s2-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:58:37.125" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:58:40.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:58:40.308" level="INFO">${output} = 2021-06-07 14:58:38,394 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:58:38,495 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 14:58:37.122" endtime="20210607 14:58:40.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:58:40.310" level="INFO">2021-06-07 14:58:38,394 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:58:38,495 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-07 14:58:38,496 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-07 14:58:38,648 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre
2021-06-07 14:58:38,664 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:58:39,676 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-07 14:58:40,272 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=15.543004, max=15.543004, mean=15.543004, stddev=0.0, median=15.543004, p75=15.543004, p95=15.543004, p98=15.543004, p99=15.543004, p999=15.543004, mean_rate=0.9740162588462702, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-07 14:58:40,273 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-06-07 14:58:40,273 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-07 14:58:40,273 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210607 14:58:40.309" endtime="20210607 14:58:40.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:58:40.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:58:40.310" endtime="20210607 14:58:40.311"/>
</kw>
<status status="PASS" starttime="20210607 14:58:37.122" endtime="20210607 14:58:40.311"/>
</kw>
<msg timestamp="20210607 14:58:40.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:58:37.122" endtime="20210607 14:58:40.311"/>
</kw>
<msg timestamp="20210607 14:58:40.311" level="INFO">${result} = 2021-06-07 14:58:38,394 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:58:38,495 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 14:58:37.121" endtime="20210607 14:58:40.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:58:40.312" endtime="20210607 14:58:40.312"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210607 14:58:37.120" endtime="20210607 14:58:40.312"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20210607 14:58:25.451" endtime="20210607 14:58:40.314"/>
</suite>
<suite id="s1-s3" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s3-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:59:43.409" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:59:48.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:59:48.667" level="INFO">${output} = 2021-06-07 14:59:44,666 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:59:44,838 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 14:59:43.404" endtime="20210607 14:59:48.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:59:48.668" level="INFO">2021-06-07 14:59:44,666 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:59:44,838 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-07 14:59:44,838 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-07 14:59:44,997 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-06-07 14:59:45,016 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:59:46,023 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:59:46,694 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-06-07 14:59:47,026 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:59:48,027 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-07 14:59:48,338 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=33.548528, max=33.548528, mean=33.548528, stddev=0.0, median=33.548528, p75=33.548528, p95=33.548528, p98=33.548528, p99=33.548528, p999=33.548528, mean_rate=0.9917133119932033, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-07 14:59:48,339 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-06-07 14:59:48,339 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-07 14:59:48,339 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210607 14:59:48.667" endtime="20210607 14:59:48.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:59:48.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:59:48.668" endtime="20210607 14:59:48.669"/>
</kw>
<status status="PASS" starttime="20210607 14:59:43.404" endtime="20210607 14:59:48.669"/>
</kw>
<msg timestamp="20210607 14:59:48.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:59:43.404" endtime="20210607 14:59:48.669"/>
</kw>
<msg timestamp="20210607 14:59:48.670" level="INFO">${result} = 2021-06-07 14:59:44,666 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:59:44,838 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 14:59:43.403" endtime="20210607 14:59:48.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:59:48.670" endtime="20210607 14:59:48.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210607 14:59:43.402" endtime="20210607 14:59:48.670"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20210607 14:59:43.361" endtime="20210607 14:59:48.672"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s4-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 15:00:20.077" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 15:00:24.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 15:00:24.680" level="INFO">${output} = 2021-06-07 15:00:21,337 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 15:00:21,456 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 15:00:20.073" endtime="20210607 15:00:24.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 15:00:24.682" level="INFO">2021-06-07 15:00:21,337 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 15:00:21,456 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-07 15:00:21,456 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-07 15:00:21,591 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-06-07 15:00:21,603 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 15:00:22,612 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 15:00:22,708 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-06-07 15:00:23,613 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-07 15:00:24,353 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=34.855092, max=34.855092, mean=34.855092, stddev=0.0, median=34.855092, p75=34.855092, p95=34.855092, p98=34.855092, p99=34.855092, p999=34.855092, mean_rate=0.9851595758525488, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-07 15:00:24,353 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-06-07 15:00:24,356 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-07 15:00:24,356 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210607 15:00:24.681" endtime="20210607 15:00:24.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 15:00:24.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 15:00:24.682" endtime="20210607 15:00:24.683"/>
</kw>
<status status="PASS" starttime="20210607 15:00:20.072" endtime="20210607 15:00:24.683"/>
</kw>
<msg timestamp="20210607 15:00:24.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 15:00:20.072" endtime="20210607 15:00:24.683"/>
</kw>
<msg timestamp="20210607 15:00:24.684" level="INFO">${result} = 2021-06-07 15:00:21,337 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 15:00:21,456 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 15:00:20.071" endtime="20210607 15:00:24.684"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 15:00:24.684" endtime="20210607 15:00:24.684"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210607 15:00:20.070" endtime="20210607 15:00:24.685"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20210607 15:00:20.028" endtime="20210607 15:00:24.686"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s5-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:58:44.898" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:58:49.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:58:49.791" level="INFO">${output} = 2021-06-07 14:58:46,225 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:58:46,395 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 14:58:44.893" endtime="20210607 14:58:49.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:58:49.792" level="INFO">2021-06-07 14:58:46,225 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:58:46,395 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-07 14:58:46,396 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-07 14:58:46,545 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-06-07 14:58:46,555 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:58:47,568 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-07 14:58:47,768 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-06-07 14:58:48,569 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-07 14:58:49,462 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=38.837785, max=38.837785, mean=38.837785, stddev=0.0, median=38.837785, p75=38.837785, p95=38.837785, p98=38.837785, p99=38.837785, p999=38.837785, mean_rate=0.9858425488013478, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-07 14:58:49,463 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-06-07 14:58:49,463 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-07 14:58:49,463 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210607 14:58:49.791" endtime="20210607 14:58:49.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:58:49.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:58:49.792" endtime="20210607 14:58:49.793"/>
</kw>
<status status="PASS" starttime="20210607 14:58:44.893" endtime="20210607 14:58:49.793"/>
</kw>
<msg timestamp="20210607 14:58:49.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:58:44.893" endtime="20210607 14:58:49.793"/>
</kw>
<msg timestamp="20210607 14:58:49.794" level="INFO">${result} = 2021-06-07 14:58:46,225 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-07 14:58:46,395 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210607 14:58:44.892" endtime="20210607 14:58:49.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:58:49.794" endtime="20210607 14:58:49.794"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210607 14:58:44.891" endtime="20210607 14:58:49.794"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20210607 14:58:44.848" endtime="20210607 14:58:49.796"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="52065"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Generate">restart.Generate</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">restart.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
