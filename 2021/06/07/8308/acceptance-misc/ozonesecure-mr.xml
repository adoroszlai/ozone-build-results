<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210607 14:57:31.733" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:53:17.261" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:53:21.817" level="INFO">${rc} = 255</msg>
<msg timestamp="20210607 14:53:21.817" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210607 14:53:17.258" endtime="20210607 14:53:21.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:53:21.819" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210607 14:53:21.818" endtime="20210607 14:53:21.819"/>
</kw>
<msg timestamp="20210607 14:53:21.819" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210607 14:53:17.257" endtime="20210607 14:53:21.819"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:53:21.824" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:53:25.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:53:25.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210607 14:53:21.822" endtime="20210607 14:53:25.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:53:25.667" level="INFO"/>
<status status="PASS" starttime="20210607 14:53:25.666" endtime="20210607 14:53:25.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:53:25.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:53:25.667" endtime="20210607 14:53:25.667"/>
</kw>
<status status="PASS" starttime="20210607 14:53:21.821" endtime="20210607 14:53:25.668"/>
</kw>
<msg timestamp="20210607 14:53:25.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:53:21.821" endtime="20210607 14:53:25.668"/>
</kw>
<msg timestamp="20210607 14:53:25.668" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210607 14:53:21.820" endtime="20210607 14:53:25.668"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:53:25.669" endtime="20210607 14:53:25.669"/>
</kw>
<status status="PASS" starttime="20210607 14:53:21.820" endtime="20210607 14:53:25.669"/>
</kw>
<status status="PASS" starttime="20210607 14:53:21.819" endtime="20210607 14:53:25.669"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:53:25.674" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:53:29.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:53:29.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210607 14:53:25.672" endtime="20210607 14:53:29.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:53:29.133" level="INFO"/>
<status status="PASS" starttime="20210607 14:53:29.132" endtime="20210607 14:53:29.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:53:29.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:53:29.133" endtime="20210607 14:53:29.134"/>
</kw>
<status status="PASS" starttime="20210607 14:53:25.671" endtime="20210607 14:53:29.134"/>
</kw>
<msg timestamp="20210607 14:53:29.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:53:25.671" endtime="20210607 14:53:29.134"/>
</kw>
<status status="PASS" starttime="20210607 14:53:25.670" endtime="20210607 14:53:29.134"/>
</kw>
<status status="PASS" starttime="20210607 14:53:25.670" endtime="20210607 14:53:29.134"/>
</kw>
<status status="PASS" starttime="20210607 14:53:25.669" endtime="20210607 14:53:29.134"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210607 14:53:29.135" endtime="20210607 14:53:29.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:53:29.139" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:53:32.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:53:32.838" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-07T14:53...</msg>
<status status="PASS" starttime="20210607 14:53:29.137" endtime="20210607 14:53:32.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:53:32.840" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-07T14:53:29.051Z",
  "modificationTime" : "2021-06-07T14:53:29.051Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210607 14:53:32.839" endtime="20210607 14:53:32.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:53:32.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:53:32.840" endtime="20210607 14:53:32.840"/>
</kw>
<status status="PASS" starttime="20210607 14:53:29.136" endtime="20210607 14:53:32.841"/>
</kw>
<msg timestamp="20210607 14:53:32.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:53:29.136" endtime="20210607 14:53:32.841"/>
</kw>
<msg timestamp="20210607 14:53:32.841" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-07T14:53...</msg>
<status status="PASS" starttime="20210607 14:53:29.135" endtime="20210607 14:53:32.841"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:53:32.841" endtime="20210607 14:53:32.842"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210607 14:53:32.847" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210607 14:53:32.846" endtime="20210607 14:53:32.847"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210607 14:53:32.847" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210607 14:53:32.847" endtime="20210607 14:53:32.847"/>
</kw>
<status status="PASS" starttime="20210607 14:53:32.845" endtime="20210607 14:53:32.848"/>
</kw>
<msg timestamp="20210607 14:53:32.848" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210607 14:53:32.844" endtime="20210607 14:53:32.848"/>
</kw>
<status status="PASS" starttime="20210607 14:53:32.844" endtime="20210607 14:53:32.848"/>
</kw>
<msg timestamp="20210607 14:53:32.848" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210607 14:53:32.843" endtime="20210607 14:53:32.848"/>
</kw>
<msg timestamp="20210607 14:53:32.848" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210607 14:53:32.842" endtime="20210607 14:53:32.849"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:53:32.852" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:53:36.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:53:36.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210607 14:53:32.850" endtime="20210607 14:53:36.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:53:36.712" level="INFO"/>
<status status="PASS" starttime="20210607 14:53:36.711" endtime="20210607 14:53:36.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:53:36.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:53:36.712" endtime="20210607 14:53:36.712"/>
</kw>
<status status="PASS" starttime="20210607 14:53:32.849" endtime="20210607 14:53:36.713"/>
</kw>
<msg timestamp="20210607 14:53:36.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:53:32.849" endtime="20210607 14:53:36.713"/>
</kw>
<status status="PASS" starttime="20210607 14:53:32.849" endtime="20210607 14:53:36.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:53:36.717" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:53:44.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:53:44.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210607 14:53:36.715" endtime="20210607 14:53:44.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:53:44.616" level="INFO"/>
<status status="PASS" starttime="20210607 14:53:44.615" endtime="20210607 14:53:44.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:53:44.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:53:44.616" endtime="20210607 14:53:44.617"/>
</kw>
<status status="PASS" starttime="20210607 14:53:36.714" endtime="20210607 14:53:44.617"/>
</kw>
<msg timestamp="20210607 14:53:44.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:53:36.714" endtime="20210607 14:53:44.618"/>
</kw>
<status status="PASS" starttime="20210607 14:53:36.713" endtime="20210607 14:53:44.618"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:53:44.622" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:53:50.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:53:50.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210607 14:53:44.619" endtime="20210607 14:53:50.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:53:50.414" level="INFO"/>
<status status="PASS" starttime="20210607 14:53:50.413" endtime="20210607 14:53:50.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:53:50.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:53:50.414" endtime="20210607 14:53:50.415"/>
</kw>
<status status="PASS" starttime="20210607 14:53:44.619" endtime="20210607 14:53:50.415"/>
</kw>
<msg timestamp="20210607 14:53:50.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:53:44.619" endtime="20210607 14:53:50.416"/>
</kw>
<status status="PASS" starttime="20210607 14:53:44.618" endtime="20210607 14:53:50.416"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:53:50.419" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:53:55.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:53:55.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210607 14:53:50.417" endtime="20210607 14:53:55.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:53:55.863" level="INFO"/>
<status status="PASS" starttime="20210607 14:53:55.862" endtime="20210607 14:53:55.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:53:55.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:53:55.863" endtime="20210607 14:53:55.864"/>
</kw>
<status status="PASS" starttime="20210607 14:53:50.417" endtime="20210607 14:53:55.864"/>
</kw>
<msg timestamp="20210607 14:53:55.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:53:50.416" endtime="20210607 14:53:55.864"/>
</kw>
<status status="PASS" starttime="20210607 14:53:50.416" endtime="20210607 14:53:55.865"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210607 14:53:17.256" endtime="20210607 14:53:55.865"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210607 14:53:55.871" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210607 14:53:55.870" endtime="20210607 14:53:55.871"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210607 14:53:55.871" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210607 14:53:55.871" endtime="20210607 14:53:55.872"/>
</kw>
<status status="PASS" starttime="20210607 14:53:55.870" endtime="20210607 14:53:55.872"/>
</kw>
<msg timestamp="20210607 14:53:55.872" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210607 14:53:55.869" endtime="20210607 14:53:55.872"/>
</kw>
<status status="PASS" starttime="20210607 14:53:55.868" endtime="20210607 14:53:55.872"/>
</kw>
<msg timestamp="20210607 14:53:55.872" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210607 14:53:55.867" endtime="20210607 14:53:55.872"/>
</kw>
<msg timestamp="20210607 14:53:55.873" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210607 14:53:55.866" endtime="20210607 14:53:55.873"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:53:55.876" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:53:59.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:53:59.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210607 14:53:55.874" endtime="20210607 14:53:59.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:53:59.618" level="INFO"/>
<status status="PASS" starttime="20210607 14:53:59.617" endtime="20210607 14:53:59.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:53:59.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:53:59.618" endtime="20210607 14:53:59.619"/>
</kw>
<status status="PASS" starttime="20210607 14:53:55.873" endtime="20210607 14:53:59.619"/>
</kw>
<msg timestamp="20210607 14:53:59.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:53:55.873" endtime="20210607 14:53:59.619"/>
</kw>
<status status="PASS" starttime="20210607 14:53:55.873" endtime="20210607 14:53:59.619"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:53:59.623" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:54:03.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:54:03.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210607 14:53:59.621" endtime="20210607 14:54:03.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:54:03.319" level="INFO"/>
<status status="PASS" starttime="20210607 14:54:03.318" endtime="20210607 14:54:03.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:54:03.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:54:03.319" endtime="20210607 14:54:03.319"/>
</kw>
<status status="PASS" starttime="20210607 14:53:59.620" endtime="20210607 14:54:03.320"/>
</kw>
<msg timestamp="20210607 14:54:03.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:53:59.620" endtime="20210607 14:54:03.320"/>
</kw>
<status status="PASS" starttime="20210607 14:53:59.620" endtime="20210607 14:54:03.320"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210607 14:53:55.866" endtime="20210607 14:54:03.320"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210607 14:53:17.198" endtime="20210607 14:54:03.322"/>
</suite>
<suite id="s1-s2" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210607 14:56:03.017" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210607 14:56:03.016" endtime="20210607 14:56:03.017"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210607 14:56:03.017" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210607 14:56:03.017" endtime="20210607 14:56:03.017"/>
</kw>
<status status="PASS" starttime="20210607 14:56:03.016" endtime="20210607 14:56:03.018"/>
</kw>
<msg timestamp="20210607 14:56:03.018" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210607 14:56:03.015" endtime="20210607 14:56:03.018"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210607 14:56:03.018" endtime="20210607 14:56:03.019"/>
</kw>
<msg timestamp="20210607 14:56:03.019" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210607 14:56:03.018" endtime="20210607 14:56:03.019"/>
</kw>
<status status="PASS" starttime="20210607 14:56:03.014" endtime="20210607 14:56:03.019"/>
</kw>
<msg timestamp="20210607 14:56:03.019" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210607 14:56:03.013" endtime="20210607 14:56:03.019"/>
</kw>
<msg timestamp="20210607 14:56:03.020" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210607 14:56:03.010" endtime="20210607 14:56:03.020"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210607 14:56:03.022" level="INFO">${random} = 65482</msg>
<status status="PASS" starttime="20210607 14:56:03.020" endtime="20210607 14:56:03.022"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:56:03.032" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-65482 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:56:09.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:56:09.622" level="INFO">${output} = 2021-06-07 14:56:05 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-07 14:56:05 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210607 14:56:03.026" endtime="20210607 14:56:09.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:56:09.623" level="INFO">2021-06-07 14:56:05 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-07 14:56:05 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-07 14:56:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-07 14:56:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-07 14:56:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-20DA17C2E295-&gt;38e4dbac-74b7-44c7-8288-87a54867524f
2021-06-07 14:56:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210607 14:56:09.622" endtime="20210607 14:56:09.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:56:09.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:56:09.623" endtime="20210607 14:56:09.624"/>
</kw>
<status status="PASS" starttime="20210607 14:56:03.025" endtime="20210607 14:56:09.624"/>
</kw>
<msg timestamp="20210607 14:56:09.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:56:03.025" endtime="20210607 14:56:09.624"/>
</kw>
<msg timestamp="20210607 14:56:09.624" level="INFO">${result} = 2021-06-07 14:56:05 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-07 14:56:05 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210607 14:56:03.023" endtime="20210607 14:56:09.625"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:56:09.628" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:56:11.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:56:11.559" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-07 14:53 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-07 14:54 ofs://om/volume1/bucket1/ozone-48086
-rw-...</msg>
<status status="PASS" starttime="20210607 14:56:09.626" endtime="20210607 14:56:11.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:56:11.560" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-07 14:53 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-07 14:54 ofs://om/volume1/bucket1/ozone-48086
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-07 14:56 ofs://om/volume1/bucket1/ozone-65482
drwxrwxrwx   - hadoop hadoop          0 2021-06-07 14:53 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-06-07 14:55 ofs://om/volume1/bucket1/wordcount-wVGwsxum.txt</msg>
<status status="PASS" starttime="20210607 14:56:11.559" endtime="20210607 14:56:11.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:56:11.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:56:11.560" endtime="20210607 14:56:11.561"/>
</kw>
<status status="PASS" starttime="20210607 14:56:09.626" endtime="20210607 14:56:11.561"/>
</kw>
<msg timestamp="20210607 14:56:11.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:56:09.625" endtime="20210607 14:56:11.561"/>
</kw>
<msg timestamp="20210607 14:56:11.561" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-07 14:53 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-07 14:54 ofs://om/volume1/bucket1/ozone-48086
-rw-...</msg>
<status status="PASS" starttime="20210607 14:56:09.625" endtime="20210607 14:56:11.561"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:56:11.562" endtime="20210607 14:56:11.562"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210607 14:56:03.009" endtime="20210607 14:56:11.562"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210607 14:56:02.921" endtime="20210607 14:56:11.563"/>
</suite>
<suite id="s1-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210607 14:54:29.547" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210607 14:54:29.547" endtime="20210607 14:54:29.547"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210607 14:54:29.548" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210607 14:54:29.547" endtime="20210607 14:54:29.548"/>
</kw>
<status status="PASS" starttime="20210607 14:54:29.546" endtime="20210607 14:54:29.548"/>
</kw>
<msg timestamp="20210607 14:54:29.548" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210607 14:54:29.546" endtime="20210607 14:54:29.548"/>
</kw>
<status status="PASS" starttime="20210607 14:54:29.545" endtime="20210607 14:54:29.548"/>
</kw>
<msg timestamp="20210607 14:54:29.548" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210607 14:54:29.545" endtime="20210607 14:54:29.549"/>
</kw>
<msg timestamp="20210607 14:54:29.549" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210607 14:54:29.544" endtime="20210607 14:54:29.549"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210607 14:54:29.549" level="INFO">${random} = 48086</msg>
<status status="PASS" starttime="20210607 14:54:29.549" endtime="20210607 14:54:29.549"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:54:29.555" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-48086 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:54:33.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:54:33.859" level="INFO">${output} = 2021-06-07 14:54:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-07 14:54:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210607 14:54:29.551" endtime="20210607 14:54:33.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:54:33.860" level="INFO">2021-06-07 14:54:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-07 14:54:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-07 14:54:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-07 14:54:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-07 14:54:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A36E6A0CF6AB-&gt;bb9ed4f1-f9ea-45d5-b6cd-2f9ce8769303
2021-06-07 14:54:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210607 14:54:33.859" endtime="20210607 14:54:33.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:54:33.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:54:33.860" endtime="20210607 14:54:33.861"/>
</kw>
<status status="PASS" starttime="20210607 14:54:29.550" endtime="20210607 14:54:33.861"/>
</kw>
<msg timestamp="20210607 14:54:33.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:54:29.550" endtime="20210607 14:54:33.861"/>
</kw>
<msg timestamp="20210607 14:54:33.862" level="INFO">${result} = 2021-06-07 14:54:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-07 14:54:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210607 14:54:29.549" endtime="20210607 14:54:33.862"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:54:33.865" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:54:35.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:54:35.886" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-07 14:53 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-07 14:54 o3fs://bucket1.volume1.om/ozone-48086
dr...</msg>
<status status="PASS" starttime="20210607 14:54:33.863" endtime="20210607 14:54:35.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:54:35.887" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-07 14:53 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-07 14:54 o3fs://bucket1.volume1.om/ozone-48086
drwxrwxrwx   - hadoop hadoop          0 2021-06-07 14:53 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210607 14:54:35.886" endtime="20210607 14:54:35.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:54:35.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:54:35.887" endtime="20210607 14:54:35.888"/>
</kw>
<status status="PASS" starttime="20210607 14:54:33.863" endtime="20210607 14:54:35.888"/>
</kw>
<msg timestamp="20210607 14:54:35.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:54:33.862" endtime="20210607 14:54:35.888"/>
</kw>
<msg timestamp="20210607 14:54:35.888" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-07 14:53 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-07 14:54 o3fs://bucket1.volume1.om/ozone-48086
dr...</msg>
<status status="PASS" starttime="20210607 14:54:33.862" endtime="20210607 14:54:35.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:54:35.889" endtime="20210607 14:54:35.889"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210607 14:54:29.543" endtime="20210607 14:54:35.889"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210607 14:54:29.490" endtime="20210607 14:54:35.891"/>
</suite>
<suite id="s1-s4" name="Kinit-Hadoop" source="/opt/ozone/smoketest/kinit-hadoop.robot">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:54:23.790" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:54:23.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:54:23.795" level="INFO">${output} = rm</msg>
<status status="PASS" starttime="20210607 14:54:23.785" endtime="20210607 14:54:23.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:54:23.796" level="INFO">rm</msg>
<status status="PASS" starttime="20210607 14:54:23.795" endtime="20210607 14:54:23.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:54:23.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:54:23.796" endtime="20210607 14:54:23.797"/>
</kw>
<status status="PASS" starttime="20210607 14:54:23.784" endtime="20210607 14:54:23.797"/>
</kw>
<msg timestamp="20210607 14:54:23.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:54:23.784" endtime="20210607 14:54:23.797"/>
</kw>
<msg timestamp="20210607 14:54:23.797" level="INFO">${instance} = rm</msg>
<status status="PASS" starttime="20210607 14:54:23.784" endtime="20210607 14:54:23.797"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210607 14:54:23.799" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210607 14:54:23.798" endtime="20210607 14:54:23.799"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:54:23.802" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:54:23.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:54:23.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210607 14:54:23.801" endtime="20210607 14:54:23.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:54:23.812" level="INFO"/>
<status status="PASS" starttime="20210607 14:54:23.811" endtime="20210607 14:54:23.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:54:23.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:54:23.812" endtime="20210607 14:54:23.812"/>
</kw>
<status status="PASS" starttime="20210607 14:54:23.800" endtime="20210607 14:54:23.813"/>
</kw>
<msg timestamp="20210607 14:54:23.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:54:23.800" endtime="20210607 14:54:23.813"/>
</kw>
<status status="PASS" starttime="20210607 14:54:23.799" endtime="20210607 14:54:23.813"/>
</kw>
<status status="PASS" starttime="20210607 14:54:23.799" endtime="20210607 14:54:23.813"/>
</kw>
<status status="PASS" starttime="20210607 14:54:23.783" endtime="20210607 14:54:23.813"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210607 14:54:23.782" endtime="20210607 14:54:23.813"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210607 14:54:23.732" endtime="20210607 14:54:23.814"/>
</suite>
<suite id="s1-s5" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:53:11.287" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:53:11.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:53:11.291" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210607 14:53:11.283" endtime="20210607 14:53:11.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:53:11.292" level="INFO">om</msg>
<status status="PASS" starttime="20210607 14:53:11.291" endtime="20210607 14:53:11.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:53:11.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:53:11.292" endtime="20210607 14:53:11.293"/>
</kw>
<status status="PASS" starttime="20210607 14:53:11.283" endtime="20210607 14:53:11.293"/>
</kw>
<msg timestamp="20210607 14:53:11.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:53:11.282" endtime="20210607 14:53:11.293"/>
</kw>
<msg timestamp="20210607 14:53:11.293" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20210607 14:53:11.282" endtime="20210607 14:53:11.293"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210607 14:53:11.294" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210607 14:53:11.294" endtime="20210607 14:53:11.294"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:53:11.298" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:53:11.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:53:11.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210607 14:53:11.296" endtime="20210607 14:53:11.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:53:11.307" level="INFO"/>
<status status="PASS" starttime="20210607 14:53:11.307" endtime="20210607 14:53:11.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:53:11.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:53:11.308" endtime="20210607 14:53:11.308"/>
</kw>
<status status="PASS" starttime="20210607 14:53:11.296" endtime="20210607 14:53:11.308"/>
</kw>
<msg timestamp="20210607 14:53:11.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:53:11.295" endtime="20210607 14:53:11.309"/>
</kw>
<status status="PASS" starttime="20210607 14:53:11.295" endtime="20210607 14:53:11.309"/>
</kw>
<status status="PASS" starttime="20210607 14:53:11.294" endtime="20210607 14:53:11.309"/>
</kw>
<status status="PASS" starttime="20210607 14:53:11.281" endtime="20210607 14:53:11.309"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210607 14:53:11.280" endtime="20210607 14:53:11.309"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210607 14:53:11.228" endtime="20210607 14:53:11.311"/>
</suite>
<suite id="s1-s6" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:56:17.285" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:56:17.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:56:17.291" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:56:17.281" endtime="20210607 14:56:17.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:56:17.292" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:56:17.291" endtime="20210607 14:56:17.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:56:17.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:56:17.292" endtime="20210607 14:56:17.292"/>
</kw>
<status status="PASS" starttime="20210607 14:56:17.281" endtime="20210607 14:56:17.293"/>
</kw>
<msg timestamp="20210607 14:56:17.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:56:17.280" endtime="20210607 14:56:17.293"/>
</kw>
<msg timestamp="20210607 14:56:17.293" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:56:17.280" endtime="20210607 14:56:17.294"/>
</kw>
<msg timestamp="20210607 14:56:17.294" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:56:17.279" endtime="20210607 14:56:17.294"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210607 14:56:17.298" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210607 14:56:17.298" endtime="20210607 14:56:17.298"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210607 14:56:17.299" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210607 14:56:17.298" endtime="20210607 14:56:17.299"/>
</kw>
<status status="PASS" starttime="20210607 14:56:17.297" endtime="20210607 14:56:17.299"/>
</kw>
<msg timestamp="20210607 14:56:17.299" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210607 14:56:17.297" endtime="20210607 14:56:17.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210607 14:56:17.300" endtime="20210607 14:56:17.300"/>
</kw>
<msg timestamp="20210607 14:56:17.300" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210607 14:56:17.299" endtime="20210607 14:56:17.300"/>
</kw>
<status status="PASS" starttime="20210607 14:56:17.296" endtime="20210607 14:56:17.300"/>
</kw>
<msg timestamp="20210607 14:56:17.300" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210607 14:56:17.295" endtime="20210607 14:56:17.300"/>
</kw>
<msg timestamp="20210607 14:56:17.301" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210607 14:56:17.294" endtime="20210607 14:56:17.301"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:56:17.304" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:56:50.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:56:50.515" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-07 14:56:19 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-07 14:56:19 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210607 14:56:17.302" endtime="20210607 14:56:50.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:56:50.517" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-07 14:56:19 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-07 14:56:19 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-07 14:56:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-07 14:56:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-07 14:56:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-198E481F4224-&gt;38e4dbac-74b7-44c7-8288-87a54867524f
2021-06-07 14:56:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-06-07 14:56:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F8952160A3E6-&gt;bb9ed4f1-f9ea-45d5-b6cd-2f9ce8769303
2021-06-07 14:56:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-06-07 14:56:21 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.11:8032
2021-06-07 14:56:21 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-06-07 14:56:21 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623077781438, maxDate=1623682581438, sequenceNumber=3, masterKeyId=2))
2021-06-07 14:56:21 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 da fe e5 b7 9e 2f 38 da 86 98 d8 a0 2f 40 03 48 01 5a 0d 34 30 38 33 38 35 35 33 32 30 32 33 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-07 14:56:21 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623077781438, maxDate=1623682581438, sequenceNumber=3, masterKeyId=2)
2021-06-07 14:56:21 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-07 14:56:21 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-07 14:56:21 INFO  JobSubmitter:202 - number of splits:3
2021-06-07 14:56:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1623077541188_0003
2021-06-07 14:56:22 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 da fe e5 b7 9e 2f 38 da 86 98 d8 a0 2f 40 03 48 01 5a 0d 34 30 38 33 38 35 35 33 32 30 32 33 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623077781438, maxDate=1623682581438, sequenceNumber=3, masterKeyId=2)]
2021-06-07 14:56:22 INFO  Configuration:2795 - resource-types.xml not found
2021-06-07 14:56:22 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-07 14:56:22 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-07 14:56:23 INFO  YarnClientImpl:329 - Submitted application application_1623077541188_0003
2021-06-07 14:56:23 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1623077541188_0003/
2021-06-07 14:56:23 INFO  Job:1614 - Running job: job_1623077541188_0003
2021-06-07 14:56:31 INFO  Job:1635 - Job job_1623077541188_0003 running in uber mode : false
2021-06-07 14:56:31 INFO  Job:1642 -  map 0% reduce 0%
2021-06-07 14:56:41 INFO  Job:1642 -  map 33% reduce 0%
2021-06-07 14:56:43 INFO  Job:1642 -  map 67% reduce 0%
2021-06-07 14:56:44 INFO  Job:1642 -  map 100% reduce 0%
2021-06-07 14:56:48 INFO  Job:1642 -  map 100% reduce 100%
2021-06-07 14:56:49 INFO  Job:1653 - Job job_1623077541188_0003 completed successfully
2021-06-07 14:56:49 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1127121
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48618
		Total time spent by all reduces in occupied slots (ms)=8142
		Total time spent by all map tasks (ms)=24309
		Total time spent by all reduce tasks (ms)=4071
		Total vcore-milliseconds taken by all map tasks=24309
		Total vcore-milliseconds taken by all reduce tasks=4071
		Total megabyte-milliseconds taken by all map tasks=49784832
		Total megabyte-milliseconds taken by all reduce tasks=8337408
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1184
		CPU time spent (ms)=8210
		Physical memory (bytes) snapshot=1482530816
		Virtual memory (bytes) snapshot=14038851584
		Total committed heap usage (bytes)=1282408448
		Peak Map Physical memory (bytes)=399073280
		Peak Map Virtual memory (bytes)=3513856000
		Peak Reduce Physical memory (bytes)=310505472
		Peak Reduce Virtual memory (bytes)=3509342208
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.018 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210607 14:56:50.516" endtime="20210607 14:56:50.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:56:50.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:56:50.517" endtime="20210607 14:56:50.518"/>
</kw>
<status status="PASS" starttime="20210607 14:56:17.301" endtime="20210607 14:56:50.518"/>
</kw>
<msg timestamp="20210607 14:56:50.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:56:17.301" endtime="20210607 14:56:50.518"/>
</kw>
<msg timestamp="20210607 14:56:50.519" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-07 14:56:19 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-07 14:56:19 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210607 14:56:17.301" endtime="20210607 14:56:50.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:56:50.519" endtime="20210607 14:56:50.519"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210607 14:56:17.279" endtime="20210607 14:56:50.520"/>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:56:50.525" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:56:50.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:56:50.532" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:56:50.523" endtime="20210607 14:56:50.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:56:50.533" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:56:50.532" endtime="20210607 14:56:50.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:56:50.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:56:50.533" endtime="20210607 14:56:50.534"/>
</kw>
<status status="PASS" starttime="20210607 14:56:50.522" endtime="20210607 14:56:50.534"/>
</kw>
<msg timestamp="20210607 14:56:50.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:56:50.522" endtime="20210607 14:56:50.534"/>
</kw>
<msg timestamp="20210607 14:56:50.535" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:56:50.521" endtime="20210607 14:56:50.535"/>
</kw>
<msg timestamp="20210607 14:56:50.535" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:56:50.521" endtime="20210607 14:56:50.535"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210607 14:56:50.535" level="INFO">${random} = Gn76g1a9</msg>
<status status="PASS" starttime="20210607 14:56:50.535" endtime="20210607 14:56:50.535"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210607 14:56:50.539" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210607 14:56:50.539" endtime="20210607 14:56:50.539"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210607 14:56:50.540" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210607 14:56:50.539" endtime="20210607 14:56:50.540"/>
</kw>
<status status="PASS" starttime="20210607 14:56:50.538" endtime="20210607 14:56:50.540"/>
</kw>
<msg timestamp="20210607 14:56:50.540" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210607 14:56:50.538" endtime="20210607 14:56:50.540"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210607 14:56:50.541" endtime="20210607 14:56:50.541"/>
</kw>
<msg timestamp="20210607 14:56:50.541" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210607 14:56:50.540" endtime="20210607 14:56:50.541"/>
</kw>
<status status="PASS" starttime="20210607 14:56:50.537" endtime="20210607 14:56:50.542"/>
</kw>
<msg timestamp="20210607 14:56:50.542" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210607 14:56:50.536" endtime="20210607 14:56:50.542"/>
</kw>
<msg timestamp="20210607 14:56:50.542" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210607 14:56:50.536" endtime="20210607 14:56:50.542"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210607 14:56:50.545" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210607 14:56:50.545" endtime="20210607 14:56:50.545"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210607 14:56:50.546" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210607 14:56:50.546" endtime="20210607 14:56:50.546"/>
</kw>
<status status="PASS" starttime="20210607 14:56:50.545" endtime="20210607 14:56:50.546"/>
</kw>
<msg timestamp="20210607 14:56:50.546" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210607 14:56:50.544" endtime="20210607 14:56:50.546"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210607 14:56:50.548" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210607 14:56:50.547" endtime="20210607 14:56:50.548"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210607 14:56:50.548" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210607 14:56:50.548" endtime="20210607 14:56:50.549"/>
</kw>
<status status="PASS" starttime="20210607 14:56:50.547" endtime="20210607 14:56:50.549"/>
</kw>
<msg timestamp="20210607 14:56:50.549" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210607 14:56:50.547" endtime="20210607 14:56:50.549"/>
</kw>
<status status="PASS" starttime="20210607 14:56:50.543" endtime="20210607 14:56:50.549"/>
</kw>
<msg timestamp="20210607 14:56:50.549" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210607 14:56:50.543" endtime="20210607 14:56:50.549"/>
</kw>
<msg timestamp="20210607 14:56:50.549" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210607 14:56:50.542" endtime="20210607 14:56:50.550"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210607 14:56:50.553" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210607 14:56:50.552" endtime="20210607 14:56:50.553"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210607 14:56:50.554" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210607 14:56:50.553" endtime="20210607 14:56:50.554"/>
</kw>
<status status="PASS" starttime="20210607 14:56:50.552" endtime="20210607 14:56:50.554"/>
</kw>
<msg timestamp="20210607 14:56:50.554" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210607 14:56:50.551" endtime="20210607 14:56:50.554"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210607 14:56:50.556" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210607 14:56:50.555" endtime="20210607 14:56:50.556"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210607 14:56:50.556" level="INFO">${result} = /wordcount-Gn76g1a9.txt</msg>
<status status="PASS" starttime="20210607 14:56:50.556" endtime="20210607 14:56:50.556"/>
</kw>
<status status="PASS" starttime="20210607 14:56:50.555" endtime="20210607 14:56:50.556"/>
</kw>
<msg timestamp="20210607 14:56:50.556" level="INFO">${path_with_leading} = /wordcount-Gn76g1a9.txt</msg>
<status status="PASS" starttime="20210607 14:56:50.554" endtime="20210607 14:56:50.556"/>
</kw>
<status status="PASS" starttime="20210607 14:56:50.551" endtime="20210607 14:56:50.557"/>
</kw>
<msg timestamp="20210607 14:56:50.557" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-Gn76g1a9.txt</msg>
<status status="PASS" starttime="20210607 14:56:50.550" endtime="20210607 14:56:50.557"/>
</kw>
<msg timestamp="20210607 14:56:50.557" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-Gn76g1a9.txt</msg>
<status status="PASS" starttime="20210607 14:56:50.550" endtime="20210607 14:56:50.557"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:56:50.561" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-Gn76g1a9.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:57:23.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:57:23.502" level="INFO">${output} = 2021-06-07 14:56:52 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.11:8032
2021-06-07 14:56:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
20...</msg>
<status status="PASS" starttime="20210607 14:56:50.559" endtime="20210607 14:57:23.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:57:23.504" level="INFO">2021-06-07 14:56:52 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.11:8032
2021-06-07 14:56:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-06-07 14:56:53 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623077813010, maxDate=1623682613010, sequenceNumber=4, masterKeyId=2))
2021-06-07 14:56:53 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9d f5 e7 b7 9e 2f 38 9d fd 99 d8 a0 2f 40 04 48 01 5a 0d 34 30 38 33 38 35 35 33 32 30 32 33 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-07 14:56:53 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623077813010, maxDate=1623682613010, sequenceNumber=4, masterKeyId=2)
2021-06-07 14:56:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-07 14:56:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-07 14:56:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-07 14:56:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-07 14:56:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-07 14:56:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CA2E9C626E2F-&gt;38e4dbac-74b7-44c7-8288-87a54867524f
2021-06-07 14:56:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-07 14:56:54 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-07 14:56:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-930DE27FB538-&gt;bb9ed4f1-f9ea-45d5-b6cd-2f9ce8769303
2021-06-07 14:56:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-07 14:56:55 INFO  JobSubmitter:202 - number of splits:3
2021-06-07 14:56:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1623077541188_0004
2021-06-07 14:56:55 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9d f5 e7 b7 9e 2f 38 9d fd 99 d8 a0 2f 40 04 48 01 5a 0d 34 30 38 33 38 35 35 33 32 30 32 33 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623077813010, maxDate=1623682613010, sequenceNumber=4, masterKeyId=2)]
2021-06-07 14:56:55 INFO  Configuration:2795 - resource-types.xml not found
2021-06-07 14:56:55 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-07 14:56:55 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-07 14:56:56 INFO  YarnClientImpl:329 - Submitted application application_1623077541188_0004
2021-06-07 14:56:56 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1623077541188_0004/
2021-06-07 14:56:56 INFO  Job:1614 - Running job: job_1623077541188_0004
2021-06-07 14:57:03 INFO  Job:1635 - Job job_1623077541188_0004 running in uber mode : false
2021-06-07 14:57:03 INFO  Job:1642 -  map 0% reduce 0%
2021-06-07 14:57:14 INFO  Job:1642 -  map 33% reduce 0%
2021-06-07 14:57:16 INFO  Job:1642 -  map 67% reduce 0%
2021-06-07 14:57:17 INFO  Job:1642 -  map 100% reduce 0%
2021-06-07 14:57:21 INFO  Job:1642 -  map 100% reduce 100%
2021-06-07 14:57:22 INFO  Job:1653 - Job job_1623077541188_0004 completed successfully
2021-06-07 14:57:23 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1189803
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39729
		OFS: Number of bytes written=22209
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50478
		Total time spent by all reduces in occupied slots (ms)=8138
		Total time spent by all map tasks (ms)=25239
		Total time spent by all reduce tasks (ms)=4069
		Total vcore-milliseconds taken by all map tasks=25239
		Total vcore-milliseconds taken by all reduce tasks=4069
		Total megabyte-milliseconds taken by all map tasks=51689472
		Total megabyte-milliseconds taken by all reduce tasks=8333312
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1194
		CPU time spent (ms)=8990
		Physical memory (bytes) snapshot=1497624576
		Virtual memory (bytes) snapshot=14061953024
		Total committed heap usage (bytes)=1267728384
		Peak Map Physical memory (bytes)=395137024
		Peak Map Virtual memory (bytes)=3512315904
		Peak Reduce Physical memory (bytes)=332230656
		Peak Reduce Virtual memory (bytes)=3527483392
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209</msg>
<status status="PASS" starttime="20210607 14:57:23.503" endtime="20210607 14:57:23.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:57:23.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:57:23.504" endtime="20210607 14:57:23.504"/>
</kw>
<status status="PASS" starttime="20210607 14:56:50.558" endtime="20210607 14:57:23.505"/>
</kw>
<msg timestamp="20210607 14:57:23.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:56:50.558" endtime="20210607 14:57:23.505"/>
</kw>
<msg timestamp="20210607 14:57:23.505" level="INFO">${output} = 2021-06-07 14:56:52 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.11:8032
2021-06-07 14:56:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
20...</msg>
<status status="PASS" starttime="20210607 14:56:50.557" endtime="20210607 14:57:23.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:57:23.506" endtime="20210607 14:57:23.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:57:23.506" endtime="20210607 14:57:23.506"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210607 14:56:50.520" endtime="20210607 14:57:23.507"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210607 14:56:17.226" endtime="20210607 14:57:23.508"/>
</suite>
<suite id="s1-s7" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:54:41.624" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:54:41.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:54:41.630" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:54:41.621" endtime="20210607 14:54:41.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:54:41.631" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:54:41.631" endtime="20210607 14:54:41.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:54:41.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:54:41.632" endtime="20210607 14:54:41.632"/>
</kw>
<status status="PASS" starttime="20210607 14:54:41.620" endtime="20210607 14:54:41.632"/>
</kw>
<msg timestamp="20210607 14:54:41.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:54:41.620" endtime="20210607 14:54:41.633"/>
</kw>
<msg timestamp="20210607 14:54:41.633" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:54:41.619" endtime="20210607 14:54:41.634"/>
</kw>
<msg timestamp="20210607 14:54:41.634" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:54:41.619" endtime="20210607 14:54:41.634"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210607 14:54:41.638" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210607 14:54:41.637" endtime="20210607 14:54:41.638"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210607 14:54:41.638" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210607 14:54:41.638" endtime="20210607 14:54:41.638"/>
</kw>
<status status="PASS" starttime="20210607 14:54:41.637" endtime="20210607 14:54:41.639"/>
</kw>
<msg timestamp="20210607 14:54:41.639" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210607 14:54:41.636" endtime="20210607 14:54:41.639"/>
</kw>
<status status="PASS" starttime="20210607 14:54:41.636" endtime="20210607 14:54:41.639"/>
</kw>
<msg timestamp="20210607 14:54:41.639" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210607 14:54:41.635" endtime="20210607 14:54:41.639"/>
</kw>
<msg timestamp="20210607 14:54:41.639" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210607 14:54:41.634" endtime="20210607 14:54:41.639"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:54:41.643" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:55:21.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:55:21.598" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-07 14:54:43 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-07 14:54:43 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210607 14:54:41.641" endtime="20210607 14:55:21.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:55:21.599" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-07 14:54:43 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-07 14:54:43 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-07 14:54:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-07 14:54:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-07 14:54:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D22F125F0BE8-&gt;bb9ed4f1-f9ea-45d5-b6cd-2f9ce8769303
2021-06-07 14:54:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-06-07 14:54:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-947D123DB15F-&gt;38e4dbac-74b7-44c7-8288-87a54867524f
2021-06-07 14:54:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-07 14:54:45 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.11:8032
2021-06-07 14:54:45 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-06-07 14:54:46 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623077686113, maxDate=1623682486113, sequenceNumber=1, masterKeyId=2))
2021-06-07 14:54:46 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ab 94 e0 b7 9e 2f 38 ab 9c 92 d8 a0 2f 40 01 48 01 5a 0d 34 30 38 33 38 35 35 33 32 30 32 33 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-07 14:54:46 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623077686113, maxDate=1623682486113, sequenceNumber=1, masterKeyId=2)
2021-06-07 14:54:46 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-07 14:54:49 INFO  JobSubmitter:202 - number of splits:3
2021-06-07 14:54:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1623077541188_0001
2021-06-07 14:54:49 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ab 94 e0 b7 9e 2f 38 ab 9c 92 d8 a0 2f 40 01 48 01 5a 0d 34 30 38 33 38 35 35 33 32 30 32 33 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623077686113, maxDate=1623682486113, sequenceNumber=1, masterKeyId=2)]
2021-06-07 14:54:49 INFO  Configuration:2795 - resource-types.xml not found
2021-06-07 14:54:49 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-07 14:54:49 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-07 14:54:51 INFO  YarnClientImpl:329 - Submitted application application_1623077541188_0001
2021-06-07 14:54:51 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1623077541188_0001/
2021-06-07 14:54:51 INFO  Job:1614 - Running job: job_1623077541188_0001
2021-06-07 14:55:02 INFO  Job:1635 - Job job_1623077541188_0001 running in uber mode : false
2021-06-07 14:55:02 INFO  Job:1642 -  map 0% reduce 0%
2021-06-07 14:55:12 INFO  Job:1642 -  map 33% reduce 0%
2021-06-07 14:55:14 INFO  Job:1642 -  map 67% reduce 0%
2021-06-07 14:55:15 INFO  Job:1642 -  map 100% reduce 0%
2021-06-07 14:55:19 INFO  Job:1642 -  map 100% reduce 100%
2021-06-07 14:55:20 INFO  Job:1653 - Job job_1623077541188_0001 completed successfully
2021-06-07 14:55:20 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1127349
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46380
		Total time spent by all reduces in occupied slots (ms)=8102
		Total time spent by all map tasks (ms)=23190
		Total time spent by all reduce tasks (ms)=4051
		Total vcore-milliseconds taken by all map tasks=23190
		Total vcore-milliseconds taken by all reduce tasks=4051
		Total megabyte-milliseconds taken by all map tasks=47493120
		Total megabyte-milliseconds taken by all reduce tasks=8296448
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1090
		CPU time spent (ms)=7000
		Physical memory (bytes) snapshot=1467691008
		Virtual memory (bytes) snapshot=14021070848
		Total committed heap usage (bytes)=1281359872
		Peak Map Physical memory (bytes)=391991296
		Peak Map Virtual memory (bytes)=3507675136
		Peak Reduce Physical memory (bytes)=332570624
		Peak Reduce Virtual memory (bytes)=3521728512
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.622 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210607 14:55:21.599" endtime="20210607 14:55:21.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:55:21.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:55:21.600" endtime="20210607 14:55:21.600"/>
</kw>
<status status="PASS" starttime="20210607 14:54:41.640" endtime="20210607 14:55:21.601"/>
</kw>
<msg timestamp="20210607 14:55:21.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:54:41.640" endtime="20210607 14:55:21.601"/>
</kw>
<msg timestamp="20210607 14:55:21.601" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-07 14:54:43 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-07 14:54:43 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210607 14:54:41.640" endtime="20210607 14:55:21.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:55:21.602" endtime="20210607 14:55:21.602"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210607 14:54:41.618" endtime="20210607 14:55:21.602"/>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:55:21.608" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:55:21.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:55:21.622" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:55:21.605" endtime="20210607 14:55:21.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:55:21.624" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:55:21.623" endtime="20210607 14:55:21.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:55:21.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:55:21.624" endtime="20210607 14:55:21.625"/>
</kw>
<status status="PASS" starttime="20210607 14:55:21.605" endtime="20210607 14:55:21.625"/>
</kw>
<msg timestamp="20210607 14:55:21.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:55:21.605" endtime="20210607 14:55:21.625"/>
</kw>
<msg timestamp="20210607 14:55:21.625" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:55:21.604" endtime="20210607 14:55:21.625"/>
</kw>
<msg timestamp="20210607 14:55:21.626" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210607 14:55:21.604" endtime="20210607 14:55:21.626"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210607 14:55:21.626" level="INFO">${random} = wVGwsxum</msg>
<status status="PASS" starttime="20210607 14:55:21.626" endtime="20210607 14:55:21.626"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210607 14:55:21.630" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210607 14:55:21.629" endtime="20210607 14:55:21.630"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210607 14:55:21.631" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210607 14:55:21.630" endtime="20210607 14:55:21.631"/>
</kw>
<status status="PASS" starttime="20210607 14:55:21.629" endtime="20210607 14:55:21.631"/>
</kw>
<msg timestamp="20210607 14:55:21.631" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210607 14:55:21.629" endtime="20210607 14:55:21.631"/>
</kw>
<status status="PASS" starttime="20210607 14:55:21.628" endtime="20210607 14:55:21.631"/>
</kw>
<msg timestamp="20210607 14:55:21.631" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210607 14:55:21.627" endtime="20210607 14:55:21.631"/>
</kw>
<msg timestamp="20210607 14:55:21.631" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210607 14:55:21.626" endtime="20210607 14:55:21.632"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210607 14:55:21.635" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210607 14:55:21.635" endtime="20210607 14:55:21.635"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210607 14:55:21.636" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210607 14:55:21.635" endtime="20210607 14:55:21.636"/>
</kw>
<status status="PASS" starttime="20210607 14:55:21.634" endtime="20210607 14:55:21.636"/>
</kw>
<msg timestamp="20210607 14:55:21.636" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210607 14:55:21.634" endtime="20210607 14:55:21.636"/>
</kw>
<status status="PASS" starttime="20210607 14:55:21.633" endtime="20210607 14:55:21.636"/>
</kw>
<msg timestamp="20210607 14:55:21.636" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210607 14:55:21.632" endtime="20210607 14:55:21.636"/>
</kw>
<msg timestamp="20210607 14:55:21.637" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210607 14:55:21.632" endtime="20210607 14:55:21.637"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210607 14:55:21.640" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210607 14:55:21.640" endtime="20210607 14:55:21.640"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210607 14:55:21.640" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210607 14:55:21.640" endtime="20210607 14:55:21.641"/>
</kw>
<status status="PASS" starttime="20210607 14:55:21.639" endtime="20210607 14:55:21.641"/>
</kw>
<msg timestamp="20210607 14:55:21.641" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210607 14:55:21.639" endtime="20210607 14:55:21.641"/>
</kw>
<status status="PASS" starttime="20210607 14:55:21.638" endtime="20210607 14:55:21.641"/>
</kw>
<msg timestamp="20210607 14:55:21.641" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-wVGwsxum.txt</msg>
<status status="PASS" starttime="20210607 14:55:21.637" endtime="20210607 14:55:21.641"/>
</kw>
<msg timestamp="20210607 14:55:21.641" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-wVGwsxum.txt</msg>
<status status="PASS" starttime="20210607 14:55:21.637" endtime="20210607 14:55:21.641"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210607 14:55:21.645" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-wVGwsxum.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210607 14:55:57.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210607 14:55:57.090" level="INFO">${output} = 2021-06-07 14:55:23 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.11:8032
2021-06-07 14:55:24 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
20...</msg>
<status status="PASS" starttime="20210607 14:55:21.643" endtime="20210607 14:55:57.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210607 14:55:57.091" level="INFO">2021-06-07 14:55:23 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.11:8032
2021-06-07 14:55:24 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-06-07 14:55:24 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623077724251, maxDate=1623682524251, sequenceNumber=2, masterKeyId=2))
2021-06-07 14:55:24 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b7 bf e2 b7 9e 2f 38 b7 c7 94 d8 a0 2f 40 02 48 01 5a 0d 34 30 38 33 38 35 35 33 32 30 32 33 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-07 14:55:24 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623077724251, maxDate=1623682524251, sequenceNumber=2, masterKeyId=2)
2021-06-07 14:55:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-07 14:55:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-07 14:55:24 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-07 14:55:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-07 14:55:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-07 14:55:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-98AF339CEACF-&gt;38e4dbac-74b7-44c7-8288-87a54867524f
2021-06-07 14:55:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-07 14:55:26 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-07 14:55:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D18B5D9C8851-&gt;bb9ed4f1-f9ea-45d5-b6cd-2f9ce8769303
2021-06-07 14:55:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-07 14:55:26 INFO  JobSubmitter:202 - number of splits:3
2021-06-07 14:55:26 INFO  JobSubmitter:298 - Submitting tokens for job: job_1623077541188_0002
2021-06-07 14:55:26 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b7 bf e2 b7 9e 2f 38 b7 c7 94 d8 a0 2f 40 02 48 01 5a 0d 34 30 38 33 38 35 35 33 32 30 32 33 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623077724251, maxDate=1623682524251, sequenceNumber=2, masterKeyId=2)]
2021-06-07 14:55:27 INFO  Configuration:2795 - resource-types.xml not found
2021-06-07 14:55:27 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-07 14:55:27 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-07 14:55:27 INFO  YarnClientImpl:329 - Submitted application application_1623077541188_0002
2021-06-07 14:55:28 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1623077541188_0002/
2021-06-07 14:55:28 INFO  Job:1614 - Running job: job_1623077541188_0002
2021-06-07 14:55:36 INFO  Job:1635 - Job job_1623077541188_0002 running in uber mode : false
2021-06-07 14:55:36 INFO  Job:1642 -  map 0% reduce 0%
2021-06-07 14:55:47 INFO  Job:1642 -  map 33% reduce 0%
2021-06-07 14:55:48 INFO  Job:1642 -  map 67% reduce 0%
2021-06-07 14:55:49 INFO  Job:1642 -  map 100% reduce 0%
2021-06-07 14:55:53 INFO  Job:1642 -  map 100% reduce 100%
2021-06-07 14:55:56 INFO  Job:1653 - Job job_1623077541188_0002 completed successfully
2021-06-07 14:55:56 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1189887
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39732
		O3FS: Number of bytes written=22209
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47268
		Total time spent by all reduces in occupied slots (ms)=7850
		Total time spent by all map tasks (ms)=23634
		Total time spent by all reduce tasks (ms)=3925
		Total vcore-milliseconds taken by all map tasks=23634
		Total vcore-milliseconds taken by all reduce tasks=3925
		Total megabyte-milliseconds taken by all map tasks=48402432
		Total megabyte-milliseconds taken by all reduce tasks=8038400
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1030
		CPU time spent (ms)=7860
		Physical memory (bytes) snapshot=1504694272
		Virtual memory (bytes) snapshot=14052270080
		Total committed heap usage (bytes)=1298137088
		Peak Map Physical memory (bytes)=392605696
		Peak Map Virtual memory (bytes)=3510910976
		Peak Reduce Physical memory (bytes)=336293888
		Peak Reduce Virtual memory (bytes)=3529326592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209</msg>
<status status="PASS" starttime="20210607 14:55:57.091" endtime="20210607 14:55:57.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210607 14:55:57.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210607 14:55:57.092" endtime="20210607 14:55:57.093"/>
</kw>
<status status="PASS" starttime="20210607 14:55:21.643" endtime="20210607 14:55:57.093"/>
</kw>
<msg timestamp="20210607 14:55:57.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210607 14:55:21.642" endtime="20210607 14:55:57.093"/>
</kw>
<msg timestamp="20210607 14:55:57.094" level="INFO">${output} = 2021-06-07 14:55:23 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.11:8032
2021-06-07 14:55:24 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
20...</msg>
<status status="PASS" starttime="20210607 14:55:21.642" endtime="20210607 14:55:57.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:55:57.094" endtime="20210607 14:55:57.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210607 14:55:57.094" endtime="20210607 14:55:57.095"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210607 14:55:21.603" endtime="20210607 14:55:57.095"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210607 14:54:41.567" endtime="20210607 14:55:57.096"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="203143"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="hadoopfs-ofs">ozonesecure-mr.hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="hadoopfs-o3fs">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Kinit-Hadoop">ozonesecure-mr.Kinit-Hadoop</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Kinit">ozonesecure-mr.Kinit</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="mapreduce-ofs">ozonesecure-mr.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="mapreduce-o3fs">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
