<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210629 13:21:46.918" rpa="false" schemaversion="2">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite id="s1-s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:07:15.620" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:07:18.287" level="INFO">${rc} = 255</msg>
<msg timestamp="20210629 13:07:18.287" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210629 13:07:15.617" endtime="20210629 13:07:18.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:07:18.288" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210629 13:07:18.288" endtime="20210629 13:07:18.289"/>
</kw>
<msg timestamp="20210629 13:07:18.289" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210629 13:07:15.616" endtime="20210629 13:07:18.289"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:07:18.296" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:07:20.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:07:20.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:07:18.293" endtime="20210629 13:07:20.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:07:20.884" level="INFO"/>
<status status="PASS" starttime="20210629 13:07:20.883" endtime="20210629 13:07:20.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:07:20.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:07:20.884" endtime="20210629 13:07:20.885"/>
</kw>
<status status="PASS" starttime="20210629 13:07:18.292" endtime="20210629 13:07:20.885"/>
</kw>
<msg timestamp="20210629 13:07:20.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:07:18.292" endtime="20210629 13:07:20.885"/>
</kw>
<msg timestamp="20210629 13:07:20.891" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210629 13:07:18.291" endtime="20210629 13:07:20.891"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:07:20.891" endtime="20210629 13:07:20.892"/>
</kw>
<status status="PASS" starttime="20210629 13:07:18.290" endtime="20210629 13:07:20.892"/>
</kw>
<status status="PASS" starttime="20210629 13:07:18.289" endtime="20210629 13:07:20.892"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:07:20.899" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:07:23.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:07:23.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:07:20.895" endtime="20210629 13:07:23.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:07:23.556" level="INFO"/>
<status status="PASS" starttime="20210629 13:07:23.556" endtime="20210629 13:07:23.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:07:23.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:07:23.557" endtime="20210629 13:07:23.557"/>
</kw>
<status status="PASS" starttime="20210629 13:07:20.895" endtime="20210629 13:07:23.558"/>
</kw>
<msg timestamp="20210629 13:07:23.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:07:20.894" endtime="20210629 13:07:23.558"/>
</kw>
<status status="PASS" starttime="20210629 13:07:20.893" endtime="20210629 13:07:23.558"/>
</kw>
<status status="PASS" starttime="20210629 13:07:20.893" endtime="20210629 13:07:23.559"/>
</kw>
<status status="PASS" starttime="20210629 13:07:20.892" endtime="20210629 13:07:23.559"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210629 13:07:23.559" endtime="20210629 13:07:23.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:07:23.563" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:07:26.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:07:26.442" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210629 13:07:23.561" endtime="20210629 13:07:26.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:07:26.443" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-29T13:07:23.527Z",
  "modificationTime" : "2021-06-29T13:07:23.527Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210629 13:07:26.443" endtime="20210629 13:07:26.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:07:26.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:07:26.444" endtime="20210629 13:07:26.444"/>
</kw>
<status status="PASS" starttime="20210629 13:07:23.560" endtime="20210629 13:07:26.445"/>
</kw>
<msg timestamp="20210629 13:07:26.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:07:23.560" endtime="20210629 13:07:26.445"/>
</kw>
<msg timestamp="20210629 13:07:26.445" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210629 13:07:23.560" endtime="20210629 13:07:26.445"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:07:26.445" endtime="20210629 13:07:26.446"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:07:26.450" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:07:26.450" endtime="20210629 13:07:26.450"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:07:26.451" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:07:26.450" endtime="20210629 13:07:26.451"/>
</kw>
<status status="PASS" starttime="20210629 13:07:26.449" endtime="20210629 13:07:26.451"/>
</kw>
<msg timestamp="20210629 13:07:26.451" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:07:26.448" endtime="20210629 13:07:26.451"/>
</kw>
<status status="PASS" starttime="20210629 13:07:26.447" endtime="20210629 13:07:26.452"/>
</kw>
<msg timestamp="20210629 13:07:26.452" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210629 13:07:26.447" endtime="20210629 13:07:26.452"/>
</kw>
<msg timestamp="20210629 13:07:26.452" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210629 13:07:26.446" endtime="20210629 13:07:26.452"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:07:26.455" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:07:28.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:07:28.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:07:26.454" endtime="20210629 13:07:28.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:07:28.977" level="INFO"/>
<status status="PASS" starttime="20210629 13:07:28.976" endtime="20210629 13:07:28.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:07:28.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:07:28.977" endtime="20210629 13:07:28.978"/>
</kw>
<status status="PASS" starttime="20210629 13:07:26.453" endtime="20210629 13:07:28.978"/>
</kw>
<msg timestamp="20210629 13:07:28.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:07:26.453" endtime="20210629 13:07:28.978"/>
</kw>
<status status="PASS" starttime="20210629 13:07:26.452" endtime="20210629 13:07:28.979"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:07:28.982" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:07:34.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:07:34.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:07:28.980" endtime="20210629 13:07:34.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:07:34.434" level="INFO"/>
<status status="PASS" starttime="20210629 13:07:34.433" endtime="20210629 13:07:34.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:07:34.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:07:34.434" endtime="20210629 13:07:34.435"/>
</kw>
<status status="PASS" starttime="20210629 13:07:28.980" endtime="20210629 13:07:34.435"/>
</kw>
<msg timestamp="20210629 13:07:34.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:07:28.980" endtime="20210629 13:07:34.435"/>
</kw>
<status status="PASS" starttime="20210629 13:07:28.979" endtime="20210629 13:07:34.436"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:07:34.439" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:07:39.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:07:39.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:07:34.437" endtime="20210629 13:07:39.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:07:39.134" level="INFO"/>
<status status="PASS" starttime="20210629 13:07:39.133" endtime="20210629 13:07:39.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:07:39.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:07:39.134" endtime="20210629 13:07:39.135"/>
</kw>
<status status="PASS" starttime="20210629 13:07:34.437" endtime="20210629 13:07:39.135"/>
</kw>
<msg timestamp="20210629 13:07:39.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:07:34.436" endtime="20210629 13:07:39.135"/>
</kw>
<status status="PASS" starttime="20210629 13:07:34.436" endtime="20210629 13:07:39.136"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:07:39.140" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:07:43.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:07:43.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:07:39.137" endtime="20210629 13:07:43.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:07:43.744" level="INFO"/>
<status status="PASS" starttime="20210629 13:07:43.743" endtime="20210629 13:07:43.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:07:43.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:07:43.744" endtime="20210629 13:07:43.745"/>
</kw>
<status status="PASS" starttime="20210629 13:07:39.137" endtime="20210629 13:07:43.746"/>
</kw>
<msg timestamp="20210629 13:07:43.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:07:39.137" endtime="20210629 13:07:43.746"/>
</kw>
<status status="PASS" starttime="20210629 13:07:39.136" endtime="20210629 13:07:43.747"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210629 13:07:15.615" endtime="20210629 13:07:43.747"/>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:07:43.753" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:07:43.753" endtime="20210629 13:07:43.753"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:07:43.754" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:07:43.753" endtime="20210629 13:07:43.754"/>
</kw>
<status status="PASS" starttime="20210629 13:07:43.752" endtime="20210629 13:07:43.754"/>
</kw>
<msg timestamp="20210629 13:07:43.754" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:07:43.751" endtime="20210629 13:07:43.754"/>
</kw>
<status status="PASS" starttime="20210629 13:07:43.750" endtime="20210629 13:07:43.755"/>
</kw>
<msg timestamp="20210629 13:07:43.755" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210629 13:07:43.749" endtime="20210629 13:07:43.755"/>
</kw>
<msg timestamp="20210629 13:07:43.755" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210629 13:07:43.748" endtime="20210629 13:07:43.756"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:07:43.759" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:07:46.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:07:46.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:07:43.757" endtime="20210629 13:07:46.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:07:46.026" level="INFO"/>
<status status="PASS" starttime="20210629 13:07:46.024" endtime="20210629 13:07:46.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:07:46.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:07:46.026" endtime="20210629 13:07:46.027"/>
</kw>
<status status="PASS" starttime="20210629 13:07:43.757" endtime="20210629 13:07:46.027"/>
</kw>
<msg timestamp="20210629 13:07:46.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:07:43.756" endtime="20210629 13:07:46.027"/>
</kw>
<status status="PASS" starttime="20210629 13:07:43.756" endtime="20210629 13:07:46.028"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:07:46.031" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:07:48.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:07:48.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:07:46.030" endtime="20210629 13:07:48.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:07:48.411" level="INFO"/>
<status status="PASS" starttime="20210629 13:07:48.410" endtime="20210629 13:07:48.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:07:48.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:07:48.411" endtime="20210629 13:07:48.412"/>
</kw>
<status status="PASS" starttime="20210629 13:07:46.029" endtime="20210629 13:07:48.412"/>
</kw>
<msg timestamp="20210629 13:07:48.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:07:46.028" endtime="20210629 13:07:48.413"/>
</kw>
<status status="PASS" starttime="20210629 13:07:46.028" endtime="20210629 13:07:48.413"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210629 13:07:43.748" endtime="20210629 13:07:48.413"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210629 13:07:15.549" endtime="20210629 13:07:48.414"/>
</suite>
<suite id="s1-s1-s2" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:09:28.320" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:09:28.319" endtime="20210629 13:09:28.320"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:09:28.321" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:09:28.320" endtime="20210629 13:09:28.321"/>
</kw>
<status status="PASS" starttime="20210629 13:09:28.319" endtime="20210629 13:09:28.321"/>
</kw>
<msg timestamp="20210629 13:09:28.321" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:09:28.318" endtime="20210629 13:09:28.321"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210629 13:09:28.322" endtime="20210629 13:09:28.322"/>
</kw>
<msg timestamp="20210629 13:09:28.322" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210629 13:09:28.321" endtime="20210629 13:09:28.322"/>
</kw>
<status status="PASS" starttime="20210629 13:09:28.317" endtime="20210629 13:09:28.323"/>
</kw>
<msg timestamp="20210629 13:09:28.323" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:09:28.317" endtime="20210629 13:09:28.323"/>
</kw>
<msg timestamp="20210629 13:09:28.323" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:09:28.316" endtime="20210629 13:09:28.323"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210629 13:09:28.324" level="INFO">${random} = 65564</msg>
<status status="PASS" starttime="20210629 13:09:28.323" endtime="20210629 13:09:28.324"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:09:28.330" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-65564 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:09:31.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:09:31.976" level="INFO">${output} = 2021-06-29 13:09:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:09:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 ...</msg>
<status status="PASS" starttime="20210629 13:09:28.326" endtime="20210629 13:09:31.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:09:31.977" level="INFO">2021-06-29 13:09:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:09:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 13:09:30 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-06-29 13:09:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:09:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5CA99AB615F0-&gt;df8d1da4-07e9-407e-8110-c049a741155e
2021-06-29 13:09:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210629 13:09:31.977" endtime="20210629 13:09:31.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:09:31.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:09:31.978" endtime="20210629 13:09:31.978"/>
</kw>
<status status="PASS" starttime="20210629 13:09:28.325" endtime="20210629 13:09:31.978"/>
</kw>
<msg timestamp="20210629 13:09:31.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:09:28.325" endtime="20210629 13:09:31.979"/>
</kw>
<msg timestamp="20210629 13:09:31.979" level="INFO">${result} = 2021-06-29 13:09:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:09:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 ...</msg>
<status status="PASS" starttime="20210629 13:09:28.324" endtime="20210629 13:09:31.979"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:09:31.987" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:09:33.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:09:33.892" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-06-29 13:09 ofs://om/volume1/bucket1/ozone-65564
-rw-...</msg>
<status status="PASS" starttime="20210629 13:09:31.982" endtime="20210629 13:09:33.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:09:33.894" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-06-29 13:09 ofs://om/volume1/bucket1/ozone-65564
-rw-rw-rw-   3 hadoop hadoop      14978 2021-06-29 13:07 ofs://om/volume1/bucket1/ozone-73225
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:07 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:08 ofs://om/volume1/bucket1/wordcount-jsWvjeaS.txt</msg>
<status status="PASS" starttime="20210629 13:09:33.893" endtime="20210629 13:09:33.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:09:33.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:09:33.894" endtime="20210629 13:09:33.895"/>
</kw>
<status status="PASS" starttime="20210629 13:09:31.980" endtime="20210629 13:09:33.895"/>
</kw>
<msg timestamp="20210629 13:09:33.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:09:31.980" endtime="20210629 13:09:33.895"/>
</kw>
<msg timestamp="20210629 13:09:33.895" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-06-29 13:09 ofs://om/volume1/bucket1/ozone-65564
-rw-...</msg>
<status status="PASS" starttime="20210629 13:09:31.979" endtime="20210629 13:09:33.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:09:33.896" endtime="20210629 13:09:33.896"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:09:33.900" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-65564 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:09:36.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:09:36.973" level="INFO">${output} = 2021-06-29 13:09:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:09:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 ...</msg>
<status status="PASS" starttime="20210629 13:09:33.898" endtime="20210629 13:09:36.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:09:36.974" level="INFO">2021-06-29 13:09:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:09:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 13:09:35 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20210629 13:09:36.974" endtime="20210629 13:09:36.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:09:36.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:09:36.975" endtime="20210629 13:09:36.976"/>
</kw>
<status status="PASS" starttime="20210629 13:09:33.897" endtime="20210629 13:09:36.976"/>
</kw>
<msg timestamp="20210629 13:09:36.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:09:33.897" endtime="20210629 13:09:36.976"/>
</kw>
<msg timestamp="20210629 13:09:36.978" level="INFO">${result} = 2021-06-29 13:09:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:09:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 ...</msg>
<status status="PASS" starttime="20210629 13:09:33.896" endtime="20210629 13:09:36.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed by The Apache Software</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:09:36.978" endtime="20210629 13:09:36.978"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210629 13:09:28.314" endtime="20210629 13:09:36.979"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210629 13:09:28.238" endtime="20210629 13:09:36.980"/>
</suite>
<suite id="s1-s1-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:07:53.438" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:07:53.437" endtime="20210629 13:07:53.438"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:07:53.438" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:07:53.438" endtime="20210629 13:07:53.438"/>
</kw>
<status status="PASS" starttime="20210629 13:07:53.437" endtime="20210629 13:07:53.439"/>
</kw>
<msg timestamp="20210629 13:07:53.439" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:07:53.436" endtime="20210629 13:07:53.439"/>
</kw>
<status status="PASS" starttime="20210629 13:07:53.435" endtime="20210629 13:07:53.439"/>
</kw>
<msg timestamp="20210629 13:07:53.439" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:07:53.435" endtime="20210629 13:07:53.439"/>
</kw>
<msg timestamp="20210629 13:07:53.440" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:07:53.433" endtime="20210629 13:07:53.440"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210629 13:07:53.440" level="INFO">${random} = 73225</msg>
<status status="PASS" starttime="20210629 13:07:53.440" endtime="20210629 13:07:53.440"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:07:53.446" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-73225 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:07:57.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:07:57.632" level="INFO">${output} = 2021-06-29 13:07:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:07:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 ...</msg>
<status status="PASS" starttime="20210629 13:07:53.442" endtime="20210629 13:07:57.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:07:57.633" level="INFO">2021-06-29 13:07:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:07:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 13:07:55 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-06-29 13:07:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:07:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3CB0C172ECE0-&gt;0a1c11ee-4446-44d1-b9c9-1695116ad91f
2021-06-29 13:07:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210629 13:07:57.633" endtime="20210629 13:07:57.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:07:57.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:07:57.634" endtime="20210629 13:07:57.634"/>
</kw>
<status status="PASS" starttime="20210629 13:07:53.441" endtime="20210629 13:07:57.634"/>
</kw>
<msg timestamp="20210629 13:07:57.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:07:53.441" endtime="20210629 13:07:57.635"/>
</kw>
<msg timestamp="20210629 13:07:57.635" level="INFO">${result} = 2021-06-29 13:07:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:07:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 ...</msg>
<status status="PASS" starttime="20210629 13:07:53.440" endtime="20210629 13:07:57.635"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:07:57.638" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:07:59.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:07:59.573" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-06-29 13:07 o3fs://bucket1.volume1.om/ozone-73225
dr...</msg>
<status status="PASS" starttime="20210629 13:07:57.636" endtime="20210629 13:07:59.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:07:59.574" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-06-29 13:07 o3fs://bucket1.volume1.om/ozone-73225
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:07 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210629 13:07:59.573" endtime="20210629 13:07:59.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:07:59.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:07:59.574" endtime="20210629 13:07:59.575"/>
</kw>
<status status="PASS" starttime="20210629 13:07:57.636" endtime="20210629 13:07:59.575"/>
</kw>
<msg timestamp="20210629 13:07:59.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:07:57.636" endtime="20210629 13:07:59.576"/>
</kw>
<msg timestamp="20210629 13:07:59.576" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-06-29 13:07 o3fs://bucket1.volume1.om/ozone-73225
dr...</msg>
<status status="PASS" starttime="20210629 13:07:57.635" endtime="20210629 13:07:59.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:07:59.576" endtime="20210629 13:07:59.577"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:07:59.580" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-73225 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:08:02.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:08:02.851" level="INFO">${output} = 2021-06-29 13:08:01 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:08:01 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 ...</msg>
<status status="PASS" starttime="20210629 13:07:59.578" endtime="20210629 13:08:02.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:08:02.852" level="INFO">2021-06-29 13:08:01 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:08:01 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 13:08:01 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20210629 13:08:02.852" endtime="20210629 13:08:02.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:08:02.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:08:02.853" endtime="20210629 13:08:02.854"/>
</kw>
<status status="PASS" starttime="20210629 13:07:59.578" endtime="20210629 13:08:02.854"/>
</kw>
<msg timestamp="20210629 13:08:02.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:07:59.577" endtime="20210629 13:08:02.854"/>
</kw>
<msg timestamp="20210629 13:08:02.855" level="INFO">${result} = 2021-06-29 13:08:01 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:08:01 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 ...</msg>
<status status="PASS" starttime="20210629 13:07:59.577" endtime="20210629 13:08:02.855"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed by The Apache Software</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:08:02.855" endtime="20210629 13:08:02.856"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210629 13:07:53.432" endtime="20210629 13:08:02.856"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210629 13:07:53.355" endtime="20210629 13:08:02.857"/>
</suite>
<suite id="s1-s1-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:09:41.965" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:09:41.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:09:41.971" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:09:41.961" endtime="20210629 13:09:41.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:09:41.972" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:09:41.971" endtime="20210629 13:09:41.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:09:41.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:09:41.972" endtime="20210629 13:09:41.973"/>
</kw>
<status status="PASS" starttime="20210629 13:09:41.961" endtime="20210629 13:09:41.973"/>
</kw>
<msg timestamp="20210629 13:09:41.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:09:41.960" endtime="20210629 13:09:41.973"/>
</kw>
<msg timestamp="20210629 13:09:41.973" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:09:41.960" endtime="20210629 13:09:41.973"/>
</kw>
<msg timestamp="20210629 13:09:41.974" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:09:41.959" endtime="20210629 13:09:41.974"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:09:41.980" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:09:41.980" endtime="20210629 13:09:41.980"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:09:41.981" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:09:41.980" endtime="20210629 13:09:41.981"/>
</kw>
<status status="PASS" starttime="20210629 13:09:41.979" endtime="20210629 13:09:41.981"/>
</kw>
<msg timestamp="20210629 13:09:41.981" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:09:41.979" endtime="20210629 13:09:41.981"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210629 13:09:41.982" endtime="20210629 13:09:41.982"/>
</kw>
<msg timestamp="20210629 13:09:41.982" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210629 13:09:41.981" endtime="20210629 13:09:41.982"/>
</kw>
<status status="PASS" starttime="20210629 13:09:41.978" endtime="20210629 13:09:41.983"/>
</kw>
<msg timestamp="20210629 13:09:41.983" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:09:41.977" endtime="20210629 13:09:41.983"/>
</kw>
<msg timestamp="20210629 13:09:41.984" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:09:41.974" endtime="20210629 13:09:41.984"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:09:41.987" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:10:19.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:10:19.479" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:09:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:09:44 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210629 13:09:41.985" endtime="20210629 13:10:19.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:10:19.480" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:09:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:09:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 13:09:44 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-06-29 13:09:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:09:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-88F8CF2DC3F3-&gt;0a1c11ee-4446-44d1-b9c9-1695116ad91f
2021-06-29 13:09:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-06-29 13:09:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-51568C9ECF01-&gt;df8d1da4-07e9-407e-8110-c049a741155e
2021-06-29 13:09:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-29 13:09:45 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-06-29 13:09:45 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-29 13:09:45 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-06-29 13:09:46 INFO  JobSubmitter:198 - number of splits:3
2021-06-29 13:09:46 INFO  JobSubmitter:287 - Submitting tokens for job: job_1624971990752_0003
2021-06-29 13:09:46 INFO  YarnClientImpl:273 - Submitted application application_1624971990752_0003
2021-06-29 13:09:46 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1624971990752_0003/
2021-06-29 13:09:46 INFO  Job:1339 - Running job: job_1624971990752_0003
2021-06-29 13:09:54 INFO  Job:1360 - Job job_1624971990752_0003 running in uber mode : false
2021-06-29 13:09:54 INFO  Job:1367 -  map 0% reduce 0%
2021-06-29 13:10:00 INFO  Job:1367 -  map 33% reduce 0%
2021-06-29 13:10:05 INFO  Job:1367 -  map 67% reduce 0%
2021-06-29 13:10:10 INFO  Job:1367 -  map 100% reduce 0%
2021-06-29 13:10:15 INFO  Job:1367 -  map 100% reduce 100%
2021-06-29 13:10:18 INFO  Job:1378 - Job job_1624971990752_0003 completed successfully
2021-06-29 13:10:18 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=630093
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44288
		Total time spent by all reduces in occupied slots (ms)=16844
		Total time spent by all map tasks (ms)=11072
		Total time spent by all reduce tasks (ms)=4211
		Total vcore-milliseconds taken by all map tasks=11072
		Total vcore-milliseconds taken by all reduce tasks=4211
		Total megabyte-milliseconds taken by all map tasks=45350912
		Total megabyte-milliseconds taken by all reduce tasks=17248256
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=602
		CPU time spent (ms)=7730
		Physical memory (bytes) snapshot=1304596480
		Virtual memory (bytes) snapshot=15796953088
		Total committed heap usage (bytes)=1123024896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.389 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210629 13:10:19.479" endtime="20210629 13:10:19.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:10:19.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:10:19.481" endtime="20210629 13:10:19.481"/>
</kw>
<status status="PASS" starttime="20210629 13:09:41.985" endtime="20210629 13:10:19.482"/>
</kw>
<msg timestamp="20210629 13:10:19.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:09:41.985" endtime="20210629 13:10:19.482"/>
</kw>
<msg timestamp="20210629 13:10:19.482" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:09:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:09:44 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210629 13:09:41.984" endtime="20210629 13:10:19.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:10:19.482" endtime="20210629 13:10:19.483"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210629 13:09:41.958" endtime="20210629 13:10:19.483"/>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:10:19.490" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:10:19.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:10:19.495" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:10:19.488" endtime="20210629 13:10:19.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:10:19.496" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:10:19.495" endtime="20210629 13:10:19.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:10:19.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:10:19.496" endtime="20210629 13:10:19.497"/>
</kw>
<status status="PASS" starttime="20210629 13:10:19.487" endtime="20210629 13:10:19.497"/>
</kw>
<msg timestamp="20210629 13:10:19.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:10:19.487" endtime="20210629 13:10:19.497"/>
</kw>
<msg timestamp="20210629 13:10:19.497" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:10:19.487" endtime="20210629 13:10:19.498"/>
</kw>
<msg timestamp="20210629 13:10:19.498" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:10:19.486" endtime="20210629 13:10:19.498"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210629 13:10:19.499" level="INFO">${random} = Z2Q779Mt</msg>
<status status="PASS" starttime="20210629 13:10:19.498" endtime="20210629 13:10:19.499"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:10:19.502" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:10:19.502" endtime="20210629 13:10:19.502"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:10:19.503" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:10:19.502" endtime="20210629 13:10:19.503"/>
</kw>
<status status="PASS" starttime="20210629 13:10:19.501" endtime="20210629 13:10:19.503"/>
</kw>
<msg timestamp="20210629 13:10:19.503" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:10:19.501" endtime="20210629 13:10:19.503"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210629 13:10:19.504" endtime="20210629 13:10:19.505"/>
</kw>
<msg timestamp="20210629 13:10:19.505" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210629 13:10:19.503" endtime="20210629 13:10:19.505"/>
</kw>
<status status="PASS" starttime="20210629 13:10:19.500" endtime="20210629 13:10:19.505"/>
</kw>
<msg timestamp="20210629 13:10:19.505" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:10:19.500" endtime="20210629 13:10:19.506"/>
</kw>
<msg timestamp="20210629 13:10:19.506" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:10:19.499" endtime="20210629 13:10:19.506"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:10:19.509" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:10:19.509" endtime="20210629 13:10:19.510"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:10:19.510" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:10:19.510" endtime="20210629 13:10:19.510"/>
</kw>
<status status="PASS" starttime="20210629 13:10:19.508" endtime="20210629 13:10:19.510"/>
</kw>
<msg timestamp="20210629 13:10:19.511" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:10:19.508" endtime="20210629 13:10:19.511"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:10:19.513" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210629 13:10:19.512" endtime="20210629 13:10:19.513"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:10:19.513" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210629 13:10:19.513" endtime="20210629 13:10:19.513"/>
</kw>
<status status="PASS" starttime="20210629 13:10:19.511" endtime="20210629 13:10:19.514"/>
</kw>
<msg timestamp="20210629 13:10:19.514" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210629 13:10:19.511" endtime="20210629 13:10:19.514"/>
</kw>
<status status="PASS" starttime="20210629 13:10:19.507" endtime="20210629 13:10:19.514"/>
</kw>
<msg timestamp="20210629 13:10:19.514" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210629 13:10:19.507" endtime="20210629 13:10:19.514"/>
</kw>
<msg timestamp="20210629 13:10:19.515" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210629 13:10:19.506" endtime="20210629 13:10:19.515"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:10:19.519" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:10:19.518" endtime="20210629 13:10:19.519"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:10:19.519" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:10:19.519" endtime="20210629 13:10:19.519"/>
</kw>
<status status="PASS" starttime="20210629 13:10:19.517" endtime="20210629 13:10:19.520"/>
</kw>
<msg timestamp="20210629 13:10:19.520" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:10:19.517" endtime="20210629 13:10:19.520"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:10:19.521" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210629 13:10:19.521" endtime="20210629 13:10:19.521"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:10:19.522" level="INFO">${result} = /wordcount-Z2Q779Mt.txt</msg>
<status status="PASS" starttime="20210629 13:10:19.521" endtime="20210629 13:10:19.522"/>
</kw>
<status status="PASS" starttime="20210629 13:10:19.520" endtime="20210629 13:10:19.522"/>
</kw>
<msg timestamp="20210629 13:10:19.522" level="INFO">${path_with_leading} = /wordcount-Z2Q779Mt.txt</msg>
<status status="PASS" starttime="20210629 13:10:19.520" endtime="20210629 13:10:19.522"/>
</kw>
<status status="PASS" starttime="20210629 13:10:19.516" endtime="20210629 13:10:19.523"/>
</kw>
<msg timestamp="20210629 13:10:19.523" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-Z2Q779Mt.txt</msg>
<status status="PASS" starttime="20210629 13:10:19.516" endtime="20210629 13:10:19.523"/>
</kw>
<msg timestamp="20210629 13:10:19.523" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-Z2Q779Mt.txt</msg>
<status status="PASS" starttime="20210629 13:10:19.515" endtime="20210629 13:10:19.523"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:10:19.527" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-Z2Q779Mt.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:10:53.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:10:53.647" level="INFO">${output} = 2021-06-29 13:10:21 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-06-29 13:10:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210629 13:10:19.525" endtime="20210629 13:10:53.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:10:53.649" level="INFO">2021-06-29 13:10:21 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-06-29 13:10:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-29 13:10:21 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:10:22 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 13:10:22 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-06-29 13:10:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:10:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C4CE3E9F622E-&gt;0a1c11ee-4446-44d1-b9c9-1695116ad91f
2021-06-29 13:10:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-29 13:10:23 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-06-29 13:10:23 INFO  JobSubmitter:198 - number of splits:3
2021-06-29 13:10:23 INFO  JobSubmitter:287 - Submitting tokens for job: job_1624971990752_0004
2021-06-29 13:10:23 INFO  YarnClientImpl:273 - Submitted application application_1624971990752_0004
2021-06-29 13:10:23 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1624971990752_0004/
2021-06-29 13:10:23 INFO  Job:1339 - Running job: job_1624971990752_0004
2021-06-29 13:10:32 INFO  Job:1360 - Job job_1624971990752_0004 running in uber mode : false
2021-06-29 13:10:32 INFO  Job:1367 -  map 0% reduce 0%
2021-06-29 13:10:39 INFO  Job:1367 -  map 33% reduce 0%
2021-06-29 13:10:43 INFO  Job:1367 -  map 67% reduce 0%
2021-06-29 13:10:48 INFO  Job:1367 -  map 100% reduce 0%
2021-06-29 13:10:52 INFO  Job:1367 -  map 100% reduce 100%
2021-06-29 13:10:53 INFO  Job:1378 - Job job_1624971990752_0004 completed successfully
2021-06-29 13:10:53 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=692855
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39729
		OFS: Number of bytes written=22209
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42536
		Total time spent by all reduces in occupied slots (ms)=14340
		Total time spent by all map tasks (ms)=10634
		Total time spent by all reduce tasks (ms)=3585
		Total vcore-milliseconds taken by all map tasks=10634
		Total vcore-milliseconds taken by all reduce tasks=3585
		Total megabyte-milliseconds taken by all map tasks=43556864
		Total megabyte-milliseconds taken by all reduce tasks=14684160
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=570
		CPU time spent (ms)=7660
		Physical memory (bytes) snapshot=1341800448
		Virtual memory (bytes) snapshot=15808069632
		Total committed heap usage (bytes)=1074266112
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209</msg>
<status status="PASS" starttime="20210629 13:10:53.648" endtime="20210629 13:10:53.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:10:53.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:10:53.649" endtime="20210629 13:10:53.650"/>
</kw>
<status status="PASS" starttime="20210629 13:10:19.524" endtime="20210629 13:10:53.651"/>
</kw>
<msg timestamp="20210629 13:10:53.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:10:19.524" endtime="20210629 13:10:53.651"/>
</kw>
<msg timestamp="20210629 13:10:53.651" level="INFO">${output} = 2021-06-29 13:10:21 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-06-29 13:10:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210629 13:10:19.523" endtime="20210629 13:10:53.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:10:53.651" endtime="20210629 13:10:53.652"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:10:53.652" endtime="20210629 13:10:53.652"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210629 13:10:19.485" endtime="20210629 13:10:53.653"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210629 13:09:41.896" endtime="20210629 13:10:53.654"/>
</suite>
<suite id="s1-s1-s5" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:08:07.574" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:08:07.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:08:07.579" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:08:07.571" endtime="20210629 13:08:07.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:08:07.579" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:08:07.579" endtime="20210629 13:08:07.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:08:07.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:08:07.580" endtime="20210629 13:08:07.580"/>
</kw>
<status status="PASS" starttime="20210629 13:08:07.570" endtime="20210629 13:08:07.580"/>
</kw>
<msg timestamp="20210629 13:08:07.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:08:07.570" endtime="20210629 13:08:07.581"/>
</kw>
<msg timestamp="20210629 13:08:07.581" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:08:07.570" endtime="20210629 13:08:07.581"/>
</kw>
<msg timestamp="20210629 13:08:07.581" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:08:07.569" endtime="20210629 13:08:07.581"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:08:07.585" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:08:07.585" endtime="20210629 13:08:07.585"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:08:07.586" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:08:07.585" endtime="20210629 13:08:07.586"/>
</kw>
<status status="PASS" starttime="20210629 13:08:07.584" endtime="20210629 13:08:07.586"/>
</kw>
<msg timestamp="20210629 13:08:07.586" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:08:07.584" endtime="20210629 13:08:07.586"/>
</kw>
<status status="PASS" starttime="20210629 13:08:07.583" endtime="20210629 13:08:07.586"/>
</kw>
<msg timestamp="20210629 13:08:07.586" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:08:07.582" endtime="20210629 13:08:07.587"/>
</kw>
<msg timestamp="20210629 13:08:07.587" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:08:07.581" endtime="20210629 13:08:07.587"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:08:07.591" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:08:46.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:08:46.140" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:08:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:08:09 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210629 13:08:07.589" endtime="20210629 13:08:46.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:08:46.141" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:08:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:08:09 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 13:08:09 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-06-29 13:08:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:08:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-17F10BB69575-&gt;df8d1da4-07e9-407e-8110-c049a741155e
2021-06-29 13:08:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-06-29 13:08:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5820EBCD102B-&gt;0a1c11ee-4446-44d1-b9c9-1695116ad91f
2021-06-29 13:08:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-29 13:08:10 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-06-29 13:08:11 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-06-29 13:08:11 INFO  JobSubmitter:198 - number of splits:3
2021-06-29 13:08:11 INFO  JobSubmitter:287 - Submitting tokens for job: job_1624971990752_0001
2021-06-29 13:08:12 INFO  YarnClientImpl:273 - Submitted application application_1624971990752_0001
2021-06-29 13:08:12 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1624971990752_0001/
2021-06-29 13:08:12 INFO  Job:1339 - Running job: job_1624971990752_0001
2021-06-29 13:08:22 INFO  Job:1360 - Job job_1624971990752_0001 running in uber mode : false
2021-06-29 13:08:22 INFO  Job:1367 -  map 0% reduce 0%
2021-06-29 13:08:29 INFO  Job:1367 -  map 33% reduce 0%
2021-06-29 13:08:34 INFO  Job:1367 -  map 67% reduce 0%
2021-06-29 13:08:39 INFO  Job:1367 -  map 100% reduce 0%
2021-06-29 13:08:44 INFO  Job:1367 -  map 100% reduce 100%
2021-06-29 13:08:45 INFO  Job:1378 - Job job_1624971990752_0001 completed successfully
2021-06-29 13:08:45 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=630305
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44732
		Total time spent by all reduces in occupied slots (ms)=16964
		Total time spent by all map tasks (ms)=11183
		Total time spent by all reduce tasks (ms)=4241
		Total vcore-milliseconds taken by all map tasks=11183
		Total vcore-milliseconds taken by all reduce tasks=4241
		Total megabyte-milliseconds taken by all map tasks=45805568
		Total megabyte-milliseconds taken by all reduce tasks=17371136
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=623
		CPU time spent (ms)=7590
		Physical memory (bytes) snapshot=1266245632
		Virtual memory (bytes) snapshot=15812108288
		Total committed heap usage (bytes)=1062731776
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.675 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210629 13:08:46.141" endtime="20210629 13:08:46.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:08:46.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:08:46.142" endtime="20210629 13:08:46.143"/>
</kw>
<status status="PASS" starttime="20210629 13:08:07.589" endtime="20210629 13:08:46.143"/>
</kw>
<msg timestamp="20210629 13:08:46.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:08:07.588" endtime="20210629 13:08:46.143"/>
</kw>
<msg timestamp="20210629 13:08:46.144" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:08:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:08:09 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210629 13:08:07.587" endtime="20210629 13:08:46.144"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:08:46.144" endtime="20210629 13:08:46.145"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210629 13:08:07.569" endtime="20210629 13:08:46.145"/>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:08:46.150" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:08:46.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:08:46.157" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:08:46.148" endtime="20210629 13:08:46.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:08:46.158" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:08:46.157" endtime="20210629 13:08:46.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:08:46.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:08:46.158" endtime="20210629 13:08:46.159"/>
</kw>
<status status="PASS" starttime="20210629 13:08:46.148" endtime="20210629 13:08:46.159"/>
</kw>
<msg timestamp="20210629 13:08:46.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:08:46.147" endtime="20210629 13:08:46.160"/>
</kw>
<msg timestamp="20210629 13:08:46.160" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:08:46.147" endtime="20210629 13:08:46.160"/>
</kw>
<msg timestamp="20210629 13:08:46.160" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210629 13:08:46.146" endtime="20210629 13:08:46.160"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210629 13:08:46.161" level="INFO">${random} = jsWvjeaS</msg>
<status status="PASS" starttime="20210629 13:08:46.160" endtime="20210629 13:08:46.161"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:08:46.165" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:08:46.165" endtime="20210629 13:08:46.165"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:08:46.166" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:08:46.165" endtime="20210629 13:08:46.166"/>
</kw>
<status status="PASS" starttime="20210629 13:08:46.164" endtime="20210629 13:08:46.166"/>
</kw>
<msg timestamp="20210629 13:08:46.166" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:08:46.163" endtime="20210629 13:08:46.166"/>
</kw>
<status status="PASS" starttime="20210629 13:08:46.163" endtime="20210629 13:08:46.167"/>
</kw>
<msg timestamp="20210629 13:08:46.167" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:08:46.162" endtime="20210629 13:08:46.167"/>
</kw>
<msg timestamp="20210629 13:08:46.167" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:08:46.161" endtime="20210629 13:08:46.167"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:08:46.171" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:08:46.170" endtime="20210629 13:08:46.171"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:08:46.172" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:08:46.171" endtime="20210629 13:08:46.172"/>
</kw>
<status status="PASS" starttime="20210629 13:08:46.170" endtime="20210629 13:08:46.172"/>
</kw>
<msg timestamp="20210629 13:08:46.172" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:08:46.169" endtime="20210629 13:08:46.172"/>
</kw>
<status status="PASS" starttime="20210629 13:08:46.168" endtime="20210629 13:08:46.172"/>
</kw>
<msg timestamp="20210629 13:08:46.173" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210629 13:08:46.168" endtime="20210629 13:08:46.173"/>
</kw>
<msg timestamp="20210629 13:08:46.173" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210629 13:08:46.167" endtime="20210629 13:08:46.173"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:08:46.184" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:08:46.183" endtime="20210629 13:08:46.184"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:08:46.185" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:08:46.184" endtime="20210629 13:08:46.185"/>
</kw>
<status status="PASS" starttime="20210629 13:08:46.183" endtime="20210629 13:08:46.185"/>
</kw>
<msg timestamp="20210629 13:08:46.185" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:08:46.182" endtime="20210629 13:08:46.185"/>
</kw>
<status status="PASS" starttime="20210629 13:08:46.182" endtime="20210629 13:08:46.186"/>
</kw>
<msg timestamp="20210629 13:08:46.186" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-jsWvjeaS.txt</msg>
<status status="PASS" starttime="20210629 13:08:46.174" endtime="20210629 13:08:46.186"/>
</kw>
<msg timestamp="20210629 13:08:46.186" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-jsWvjeaS.txt</msg>
<status status="PASS" starttime="20210629 13:08:46.173" endtime="20210629 13:08:46.186"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:08:46.190" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-jsWvjeaS.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:09:23.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:09:23.328" level="INFO">${output} = 2021-06-29 13:08:48 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-06-29 13:08:48 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210629 13:08:46.188" endtime="20210629 13:09:23.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:09:23.330" level="INFO">2021-06-29 13:08:48 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-06-29 13:08:48 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-29 13:08:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:08:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-06-29 13:08:48 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-06-29 13:08:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:08:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DB78A576E537-&gt;df8d1da4-07e9-407e-8110-c049a741155e
2021-06-29 13:08:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-29 13:08:49 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-06-29 13:08:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-17BA7D6EBFD0-&gt;0a1c11ee-4446-44d1-b9c9-1695116ad91f
2021-06-29 13:08:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-29 13:08:49 INFO  JobSubmitter:198 - number of splits:3
2021-06-29 13:08:50 INFO  JobSubmitter:287 - Submitting tokens for job: job_1624971990752_0002
2021-06-29 13:08:50 INFO  YarnClientImpl:273 - Submitted application application_1624971990752_0002
2021-06-29 13:08:50 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1624971990752_0002/
2021-06-29 13:08:50 INFO  Job:1339 - Running job: job_1624971990752_0002
2021-06-29 13:08:58 INFO  Job:1360 - Job job_1624971990752_0002 running in uber mode : false
2021-06-29 13:08:58 INFO  Job:1367 -  map 0% reduce 0%
2021-06-29 13:09:05 INFO  Job:1367 -  map 33% reduce 0%
2021-06-29 13:09:10 INFO  Job:1367 -  map 67% reduce 0%
2021-06-29 13:09:15 INFO  Job:1367 -  map 100% reduce 0%
2021-06-29 13:09:19 INFO  Job:1367 -  map 100% reduce 100%
2021-06-29 13:09:22 INFO  Job:1378 - Job job_1624971990752_0002 completed successfully
2021-06-29 13:09:22 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=692939
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39732
		O3FS: Number of bytes written=22209
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43792
		Total time spent by all reduces in occupied slots (ms)=14716
		Total time spent by all map tasks (ms)=10948
		Total time spent by all reduce tasks (ms)=3679
		Total vcore-milliseconds taken by all map tasks=10948
		Total vcore-milliseconds taken by all reduce tasks=3679
		Total megabyte-milliseconds taken by all map tasks=44843008
		Total megabyte-milliseconds taken by all reduce tasks=15069184
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=540
		CPU time spent (ms)=7160
		Physical memory (bytes) snapshot=1271992320
		Virtual memory (bytes) snapshot=15794724864
		Total committed heap usage (bytes)=1046478848
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209</msg>
<status status="PASS" starttime="20210629 13:09:23.329" endtime="20210629 13:09:23.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:09:23.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:09:23.330" endtime="20210629 13:09:23.331"/>
</kw>
<status status="PASS" starttime="20210629 13:08:46.187" endtime="20210629 13:09:23.331"/>
</kw>
<msg timestamp="20210629 13:09:23.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:08:46.187" endtime="20210629 13:09:23.331"/>
</kw>
<msg timestamp="20210629 13:09:23.332" level="INFO">${output} = 2021-06-29 13:08:48 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-06-29 13:08:48 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210629 13:08:46.186" endtime="20210629 13:09:23.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:09:23.332" endtime="20210629 13:09:23.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:09:23.333" endtime="20210629 13:09:23.333"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210629 13:08:46.145" endtime="20210629 13:09:23.333"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210629 13:08:07.504" endtime="20210629 13:09:23.335"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="198698"/>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite id="s1-s2-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:07.772" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:12:10.445" level="INFO">${rc} = 255</msg>
<msg timestamp="20210629 13:12:10.445" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210629 13:12:07.768" endtime="20210629 13:12:10.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:12:10.446" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210629 13:12:10.445" endtime="20210629 13:12:10.446"/>
</kw>
<msg timestamp="20210629 13:12:10.447" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210629 13:12:07.767" endtime="20210629 13:12:10.447"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:10.452" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:12:12.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:12:12.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:12:10.450" endtime="20210629 13:12:12.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:12:12.940" level="INFO"/>
<status status="PASS" starttime="20210629 13:12:12.939" endtime="20210629 13:12:12.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:12:12.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:12:12.940" endtime="20210629 13:12:12.941"/>
</kw>
<status status="PASS" starttime="20210629 13:12:10.449" endtime="20210629 13:12:12.941"/>
</kw>
<msg timestamp="20210629 13:12:12.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:12:10.449" endtime="20210629 13:12:12.941"/>
</kw>
<msg timestamp="20210629 13:12:12.942" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210629 13:12:10.448" endtime="20210629 13:12:12.942"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:12:12.942" endtime="20210629 13:12:12.942"/>
</kw>
<status status="PASS" starttime="20210629 13:12:10.447" endtime="20210629 13:12:12.942"/>
</kw>
<status status="PASS" starttime="20210629 13:12:10.447" endtime="20210629 13:12:12.942"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:12.957" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:12:15.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:12:15.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:12:12.950" endtime="20210629 13:12:15.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:12:15.699" level="INFO"/>
<status status="PASS" starttime="20210629 13:12:15.698" endtime="20210629 13:12:15.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:12:15.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:12:15.699" endtime="20210629 13:12:15.700"/>
</kw>
<status status="PASS" starttime="20210629 13:12:12.949" endtime="20210629 13:12:15.700"/>
</kw>
<msg timestamp="20210629 13:12:15.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:12:12.949" endtime="20210629 13:12:15.700"/>
</kw>
<status status="PASS" starttime="20210629 13:12:12.948" endtime="20210629 13:12:15.700"/>
</kw>
<status status="PASS" starttime="20210629 13:12:12.947" endtime="20210629 13:12:15.701"/>
</kw>
<status status="PASS" starttime="20210629 13:12:12.943" endtime="20210629 13:12:15.701"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210629 13:12:15.701" endtime="20210629 13:12:15.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:15.705" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:12:18.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:12:18.313" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210629 13:12:15.703" endtime="20210629 13:12:18.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:12:18.315" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-29T13:12:15.662Z",
  "modificationTime" : "2021-06-29T13:12:15.662Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210629 13:12:18.314" endtime="20210629 13:12:18.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:12:18.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:12:18.316" endtime="20210629 13:12:18.316"/>
</kw>
<status status="PASS" starttime="20210629 13:12:15.703" endtime="20210629 13:12:18.317"/>
</kw>
<msg timestamp="20210629 13:12:18.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:12:15.702" endtime="20210629 13:12:18.317"/>
</kw>
<msg timestamp="20210629 13:12:18.317" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210629 13:12:15.702" endtime="20210629 13:12:18.317"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:12:18.318" endtime="20210629 13:12:18.318"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:12:18.323" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:12:18.322" endtime="20210629 13:12:18.323"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:12:18.324" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:12:18.323" endtime="20210629 13:12:18.324"/>
</kw>
<status status="PASS" starttime="20210629 13:12:18.322" endtime="20210629 13:12:18.324"/>
</kw>
<msg timestamp="20210629 13:12:18.324" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:12:18.320" endtime="20210629 13:12:18.324"/>
</kw>
<status status="PASS" starttime="20210629 13:12:18.320" endtime="20210629 13:12:18.324"/>
</kw>
<msg timestamp="20210629 13:12:18.325" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210629 13:12:18.319" endtime="20210629 13:12:18.325"/>
</kw>
<msg timestamp="20210629 13:12:18.325" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210629 13:12:18.318" endtime="20210629 13:12:18.325"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:18.328" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:12:20.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:12:20.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:12:18.326" endtime="20210629 13:12:20.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:12:20.633" level="INFO"/>
<status status="PASS" starttime="20210629 13:12:20.632" endtime="20210629 13:12:20.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:12:20.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:12:20.633" endtime="20210629 13:12:20.633"/>
</kw>
<status status="PASS" starttime="20210629 13:12:18.326" endtime="20210629 13:12:20.634"/>
</kw>
<msg timestamp="20210629 13:12:20.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:12:18.326" endtime="20210629 13:12:20.634"/>
</kw>
<status status="PASS" starttime="20210629 13:12:18.325" endtime="20210629 13:12:20.634"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:20.638" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:12:25.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:12:25.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:12:20.636" endtime="20210629 13:12:25.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:12:25.844" level="INFO"/>
<status status="PASS" starttime="20210629 13:12:25.842" endtime="20210629 13:12:25.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:12:25.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:12:25.844" endtime="20210629 13:12:25.845"/>
</kw>
<status status="PASS" starttime="20210629 13:12:20.635" endtime="20210629 13:12:25.846"/>
</kw>
<msg timestamp="20210629 13:12:25.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:12:20.635" endtime="20210629 13:12:25.846"/>
</kw>
<status status="PASS" starttime="20210629 13:12:20.634" endtime="20210629 13:12:25.846"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:25.850" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:12:30.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:12:30.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:12:25.848" endtime="20210629 13:12:30.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:12:30.227" level="INFO"/>
<status status="PASS" starttime="20210629 13:12:30.225" endtime="20210629 13:12:30.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:12:30.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:12:30.227" endtime="20210629 13:12:30.228"/>
</kw>
<status status="PASS" starttime="20210629 13:12:25.847" endtime="20210629 13:12:30.228"/>
</kw>
<msg timestamp="20210629 13:12:30.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:12:25.847" endtime="20210629 13:12:30.228"/>
</kw>
<status status="PASS" starttime="20210629 13:12:25.846" endtime="20210629 13:12:30.229"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:30.232" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:12:34.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:12:34.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:12:30.230" endtime="20210629 13:12:34.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:12:34.721" level="INFO"/>
<status status="PASS" starttime="20210629 13:12:34.720" endtime="20210629 13:12:34.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:12:34.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:12:34.721" endtime="20210629 13:12:34.721"/>
</kw>
<status status="PASS" starttime="20210629 13:12:30.230" endtime="20210629 13:12:34.722"/>
</kw>
<msg timestamp="20210629 13:12:34.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:12:30.229" endtime="20210629 13:12:34.722"/>
</kw>
<status status="PASS" starttime="20210629 13:12:30.229" endtime="20210629 13:12:34.722"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210629 13:12:07.766" endtime="20210629 13:12:34.723"/>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:12:34.729" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:12:34.728" endtime="20210629 13:12:34.729"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:12:34.730" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:12:34.729" endtime="20210629 13:12:34.730"/>
</kw>
<status status="PASS" starttime="20210629 13:12:34.728" endtime="20210629 13:12:34.730"/>
</kw>
<msg timestamp="20210629 13:12:34.730" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:12:34.727" endtime="20210629 13:12:34.730"/>
</kw>
<status status="PASS" starttime="20210629 13:12:34.726" endtime="20210629 13:12:34.730"/>
</kw>
<msg timestamp="20210629 13:12:34.731" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210629 13:12:34.725" endtime="20210629 13:12:34.731"/>
</kw>
<msg timestamp="20210629 13:12:34.731" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210629 13:12:34.724" endtime="20210629 13:12:34.731"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:34.735" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:12:37.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:12:37.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:12:34.733" endtime="20210629 13:12:37.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:12:37.241" level="INFO"/>
<status status="PASS" starttime="20210629 13:12:37.240" endtime="20210629 13:12:37.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:12:37.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:12:37.241" endtime="20210629 13:12:37.242"/>
</kw>
<status status="PASS" starttime="20210629 13:12:34.733" endtime="20210629 13:12:37.242"/>
</kw>
<msg timestamp="20210629 13:12:37.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:12:34.733" endtime="20210629 13:12:37.242"/>
</kw>
<status status="PASS" starttime="20210629 13:12:34.731" endtime="20210629 13:12:37.242"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:37.246" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:12:39.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:12:39.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:12:37.244" endtime="20210629 13:12:39.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:12:39.614" level="INFO"/>
<status status="PASS" starttime="20210629 13:12:39.613" endtime="20210629 13:12:39.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:12:39.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:12:39.614" endtime="20210629 13:12:39.615"/>
</kw>
<status status="PASS" starttime="20210629 13:12:37.244" endtime="20210629 13:12:39.615"/>
</kw>
<msg timestamp="20210629 13:12:39.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:12:37.243" endtime="20210629 13:12:39.615"/>
</kw>
<status status="PASS" starttime="20210629 13:12:37.243" endtime="20210629 13:12:39.615"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210629 13:12:34.724" endtime="20210629 13:12:39.616"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210629 13:12:07.700" endtime="20210629 13:12:39.617"/>
</suite>
<suite id="s1-s2-s2" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:14:36.655" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:14:36.654" endtime="20210629 13:14:36.655"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:14:36.656" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:14:36.655" endtime="20210629 13:14:36.656"/>
</kw>
<status status="PASS" starttime="20210629 13:14:36.654" endtime="20210629 13:14:36.656"/>
</kw>
<msg timestamp="20210629 13:14:36.656" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:14:36.653" endtime="20210629 13:14:36.656"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210629 13:14:36.657" endtime="20210629 13:14:36.658"/>
</kw>
<msg timestamp="20210629 13:14:36.658" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210629 13:14:36.656" endtime="20210629 13:14:36.658"/>
</kw>
<status status="PASS" starttime="20210629 13:14:36.652" endtime="20210629 13:14:36.658"/>
</kw>
<msg timestamp="20210629 13:14:36.659" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:14:36.652" endtime="20210629 13:14:36.659"/>
</kw>
<msg timestamp="20210629 13:14:36.659" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:14:36.650" endtime="20210629 13:14:36.659"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210629 13:14:36.660" level="INFO">${random} = 79330</msg>
<status status="PASS" starttime="20210629 13:14:36.659" endtime="20210629 13:14:36.660"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:14:36.665" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-79330 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:14:40.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:14:40.311" level="INFO">${output} = 2021-06-29 13:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:14:36.661" endtime="20210629 13:14:40.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:14:40.312" level="INFO">2021-06-29 13:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:38 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-06-29 13:14:38 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:14:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:14:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-29 13:14:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:14:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5DDF8D37EAB3-&gt;670d1d6d-e366-4e9a-864a-74ef8829acbe
2021-06-29 13:14:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-29 13:14:39 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210629 13:14:40.311" endtime="20210629 13:14:40.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:14:40.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:14:40.312" endtime="20210629 13:14:40.313"/>
</kw>
<status status="PASS" starttime="20210629 13:14:36.661" endtime="20210629 13:14:40.313"/>
</kw>
<msg timestamp="20210629 13:14:40.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:14:36.660" endtime="20210629 13:14:40.313"/>
</kw>
<msg timestamp="20210629 13:14:40.314" level="INFO">${result} = 2021-06-29 13:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:14:36.660" endtime="20210629 13:14:40.314"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:14:40.318" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:14:42.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:14:42.293" level="INFO">${output} = 2021-06-29 13:14:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:41 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:14:40.316" endtime="20210629 13:14:42.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:14:42.294" level="INFO">2021-06-29 13:14:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:41 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:12 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-06-29 13:12 ofs://om/volume1/bucket1/ozone-03923
-rw-rw-rw-   3 hadoop hadoop      21867 2021-06-29 13:14 ofs://om/volume1/bucket1/ozone-79330
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:12 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:14 ofs://om/volume1/bucket1/wordcount-4BlMqQHd.txt
2021-06-29 13:14:42 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210629 13:14:42.293" endtime="20210629 13:14:42.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:14:42.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:14:42.294" endtime="20210629 13:14:42.295"/>
</kw>
<status status="PASS" starttime="20210629 13:14:40.315" endtime="20210629 13:14:42.295"/>
</kw>
<msg timestamp="20210629 13:14:42.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:14:40.315" endtime="20210629 13:14:42.295"/>
</kw>
<msg timestamp="20210629 13:14:42.296" level="INFO">${result} = 2021-06-29 13:14:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:41 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:41 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:14:40.314" endtime="20210629 13:14:42.296"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:14:42.296" endtime="20210629 13:14:42.297"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:14:42.300" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-79330 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:14:45.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:14:45.348" level="INFO">${output} = 2021-06-29 13:14:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:14:42.298" endtime="20210629 13:14:45.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:14:45.349" level="INFO">2021-06-29 13:14:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:44 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-06-29 13:14:44 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:14:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:14:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/
2021-06-29 13:14:45 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210629 13:14:45.348" endtime="20210629 13:14:45.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:14:45.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:14:45.349" endtime="20210629 13:14:45.350"/>
</kw>
<status status="PASS" starttime="20210629 13:14:42.298" endtime="20210629 13:14:45.350"/>
</kw>
<msg timestamp="20210629 13:14:45.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:14:42.297" endtime="20210629 13:14:45.350"/>
</kw>
<msg timestamp="20210629 13:14:45.352" level="INFO">${result} = 2021-06-29 13:14:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:14:42.297" endtime="20210629 13:14:45.352"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed by The Apache Software</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:14:45.352" endtime="20210629 13:14:45.352"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210629 13:14:36.649" endtime="20210629 13:14:45.352"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210629 13:14:36.585" endtime="20210629 13:14:45.354"/>
</suite>
<suite id="s1-s2-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:12:44.646" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:12:44.646" endtime="20210629 13:12:44.646"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:12:44.647" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:12:44.646" endtime="20210629 13:12:44.647"/>
</kw>
<status status="PASS" starttime="20210629 13:12:44.645" endtime="20210629 13:12:44.647"/>
</kw>
<msg timestamp="20210629 13:12:44.647" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:12:44.645" endtime="20210629 13:12:44.647"/>
</kw>
<status status="PASS" starttime="20210629 13:12:44.644" endtime="20210629 13:12:44.648"/>
</kw>
<msg timestamp="20210629 13:12:44.648" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:12:44.643" endtime="20210629 13:12:44.648"/>
</kw>
<msg timestamp="20210629 13:12:44.648" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:12:44.642" endtime="20210629 13:12:44.648"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210629 13:12:44.649" level="INFO">${random} = 03923</msg>
<status status="PASS" starttime="20210629 13:12:44.648" endtime="20210629 13:12:44.649"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:44.655" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-03923 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:12:49.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:12:49.198" level="INFO">${output} = 2021-06-29 13:12:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:12:44.651" endtime="20210629 13:12:49.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:12:49.199" level="INFO">2021-06-29 13:12:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:47 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-06-29 13:12:47 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:12:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:12:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-29 13:12:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:12:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-027CF1DAAD73-&gt;670d1d6d-e366-4e9a-864a-74ef8829acbe
2021-06-29 13:12:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-29 13:12:48 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210629 13:12:49.198" endtime="20210629 13:12:49.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:12:49.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:12:49.199" endtime="20210629 13:12:49.200"/>
</kw>
<status status="PASS" starttime="20210629 13:12:44.650" endtime="20210629 13:12:49.200"/>
</kw>
<msg timestamp="20210629 13:12:49.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:12:44.650" endtime="20210629 13:12:49.200"/>
</kw>
<msg timestamp="20210629 13:12:49.200" level="INFO">${result} = 2021-06-29 13:12:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:12:44.649" endtime="20210629 13:12:49.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:49.204" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:12:51.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:12:51.244" level="INFO">${output} = 2021-06-29 13:12:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:12:49.202" endtime="20210629 13:12:51.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:12:51.245" level="INFO">2021-06-29 13:12:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:50 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:12 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-06-29 13:12 o3fs://bucket1.volume1.om/ozone-03923
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:12 o3fs://bucket1.volume1.om/user
2021-06-29 13:12:51 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210629 13:12:51.245" endtime="20210629 13:12:51.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:12:51.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:12:51.246" endtime="20210629 13:12:51.246"/>
</kw>
<status status="PASS" starttime="20210629 13:12:49.202" endtime="20210629 13:12:51.247"/>
</kw>
<msg timestamp="20210629 13:12:51.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:12:49.201" endtime="20210629 13:12:51.247"/>
</kw>
<msg timestamp="20210629 13:12:51.247" level="INFO">${result} = 2021-06-29 13:12:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:12:49.201" endtime="20210629 13:12:51.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:12:51.247" endtime="20210629 13:12:51.248"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:51.252" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-03923 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:12:54.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:12:54.759" level="INFO">${output} = 2021-06-29 13:12:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:12:51.250" endtime="20210629 13:12:54.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:12:54.760" level="INFO">2021-06-29 13:12:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:53 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-06-29 13:12:53 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:12:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:12:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/
2021-06-29 13:12:54 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210629 13:12:54.760" endtime="20210629 13:12:54.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:12:54.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:12:54.761" endtime="20210629 13:12:54.762"/>
</kw>
<status status="PASS" starttime="20210629 13:12:51.249" endtime="20210629 13:12:54.762"/>
</kw>
<msg timestamp="20210629 13:12:54.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:12:51.249" endtime="20210629 13:12:54.762"/>
</kw>
<msg timestamp="20210629 13:12:54.764" level="INFO">${result} = 2021-06-29 13:12:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:12:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:12:51.248" endtime="20210629 13:12:54.764"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed by The Apache Software</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:12:54.764" endtime="20210629 13:12:54.765"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210629 13:12:44.641" endtime="20210629 13:12:54.765"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210629 13:12:44.572" endtime="20210629 13:12:54.766"/>
</suite>
<suite id="s1-s2-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:14:50.106" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:14:50.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:14:50.113" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:14:50.103" endtime="20210629 13:14:50.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:14:50.114" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:14:50.113" endtime="20210629 13:14:50.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:14:50.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:14:50.114" endtime="20210629 13:14:50.115"/>
</kw>
<status status="PASS" starttime="20210629 13:14:50.102" endtime="20210629 13:14:50.115"/>
</kw>
<msg timestamp="20210629 13:14:50.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:14:50.102" endtime="20210629 13:14:50.115"/>
</kw>
<msg timestamp="20210629 13:14:50.116" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:14:50.101" endtime="20210629 13:14:50.116"/>
</kw>
<msg timestamp="20210629 13:14:50.116" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:14:50.101" endtime="20210629 13:14:50.116"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:14:50.121" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:14:50.120" endtime="20210629 13:14:50.121"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:14:50.122" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:14:50.121" endtime="20210629 13:14:50.122"/>
</kw>
<status status="PASS" starttime="20210629 13:14:50.120" endtime="20210629 13:14:50.122"/>
</kw>
<msg timestamp="20210629 13:14:50.122" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:14:50.119" endtime="20210629 13:14:50.122"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210629 13:14:50.123" endtime="20210629 13:14:50.123"/>
</kw>
<msg timestamp="20210629 13:14:50.123" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210629 13:14:50.122" endtime="20210629 13:14:50.123"/>
</kw>
<status status="PASS" starttime="20210629 13:14:50.119" endtime="20210629 13:14:50.123"/>
</kw>
<msg timestamp="20210629 13:14:50.123" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:14:50.118" endtime="20210629 13:14:50.124"/>
</kw>
<msg timestamp="20210629 13:14:50.124" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:14:50.116" endtime="20210629 13:14:50.124"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:14:50.127" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:15:32.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:15:32.354" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:14:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14...</msg>
<status status="PASS" starttime="20210629 13:14:50.126" endtime="20210629 13:15:32.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:15:32.356" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:14:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:52 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-06-29 13:14:52 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:14:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:14:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-29 13:14:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:14:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6A038BBF35F9-&gt;670d1d6d-e366-4e9a-864a-74ef8829acbe
2021-06-29 13:14:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-06-29 13:14:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C6592DBBD64E-&gt;b7af4e5a-8a24-436b-b05b-4517317aa4f4
2021-06-29 13:14:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-29 13:14:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:55 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2021-06-29 13:14:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:56 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-29 13:14:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:56 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-29 13:14:56 INFO  JobSubmitter:202 - number of splits:3
2021-06-29 13:14:56 INFO  JobSubmitter:298 - Submitting tokens for job: job_1624972294409_0003
2021-06-29 13:14:56 INFO  JobSubmitter:299 - Executing with tokens: []
2021-06-29 13:14:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:56 INFO  Configuration:2752 - resource-types.xml not found
2021-06-29 13:14:56 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-06-29 13:14:57 INFO  YarnClientImpl:324 - Submitted application application_1624972294409_0003
2021-06-29 13:14:57 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1624972294409_0003/
2021-06-29 13:14:57 INFO  Job:1619 - Running job: job_1624972294409_0003
2021-06-29 13:15:04 INFO  Job:1640 - Job job_1624972294409_0003 running in uber mode : false
2021-06-29 13:15:04 INFO  Job:1647 -  map 0% reduce 0%
2021-06-29 13:15:11 INFO  Job:1647 -  map 33% reduce 0%
2021-06-29 13:15:17 INFO  Job:1647 -  map 67% reduce 0%
2021-06-29 13:15:22 INFO  Job:1647 -  map 100% reduce 0%
2021-06-29 13:15:28 INFO  Job:1647 -  map 100% reduce 100%
2021-06-29 13:15:31 INFO  Job:1658 - Job job_1624972294409_0003 completed successfully
2021-06-29 13:15:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:31 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1038101
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42764
		Total time spent by all reduces in occupied slots (ms)=16004
		Total time spent by all map tasks (ms)=10691
		Total time spent by all reduce tasks (ms)=4001
		Total vcore-milliseconds taken by all map tasks=10691
		Total vcore-milliseconds taken by all reduce tasks=4001
		Total megabyte-milliseconds taken by all map tasks=43790336
		Total megabyte-milliseconds taken by all reduce tasks=16388096
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=627
		CPU time spent (ms)=7440
		Physical memory (bytes) snapshot=1447665664
		Virtual memory (bytes) snapshot=15824039936
		Total committed heap usage (bytes)=1226833920
		Peak Map Physical memory (bytes)=386977792
		Peak Map Virtual memory (bytes)=3953393664
		Peak Reduce Physical memory (bytes)=326524928
		Peak Reduce Virtual memory (bytes)=3971604480
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.827 seconds
2021-06-29 13:15:31 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-06-29 13:15:32 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210629 13:15:32.355" endtime="20210629 13:15:32.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:15:32.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:15:32.356" endtime="20210629 13:15:32.356"/>
</kw>
<status status="PASS" starttime="20210629 13:14:50.125" endtime="20210629 13:15:32.356"/>
</kw>
<msg timestamp="20210629 13:15:32.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:14:50.125" endtime="20210629 13:15:32.357"/>
</kw>
<msg timestamp="20210629 13:15:32.357" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:14:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14...</msg>
<status status="PASS" starttime="20210629 13:14:50.124" endtime="20210629 13:15:32.357"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:15:32.357" endtime="20210629 13:15:32.358"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210629 13:14:50.100" endtime="20210629 13:15:32.358"/>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:15:32.366" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:15:32.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:15:32.371" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:15:32.363" endtime="20210629 13:15:32.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:15:32.372" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:15:32.371" endtime="20210629 13:15:32.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:15:32.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:15:32.372" endtime="20210629 13:15:32.373"/>
</kw>
<status status="PASS" starttime="20210629 13:15:32.363" endtime="20210629 13:15:32.373"/>
</kw>
<msg timestamp="20210629 13:15:32.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:15:32.362" endtime="20210629 13:15:32.373"/>
</kw>
<msg timestamp="20210629 13:15:32.373" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:15:32.362" endtime="20210629 13:15:32.373"/>
</kw>
<msg timestamp="20210629 13:15:32.374" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:15:32.360" endtime="20210629 13:15:32.374"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210629 13:15:32.374" level="INFO">${random} = YPTJwNDE</msg>
<status status="PASS" starttime="20210629 13:15:32.374" endtime="20210629 13:15:32.374"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:15:32.379" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:15:32.378" endtime="20210629 13:15:32.379"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:15:32.379" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:15:32.379" endtime="20210629 13:15:32.379"/>
</kw>
<status status="PASS" starttime="20210629 13:15:32.377" endtime="20210629 13:15:32.380"/>
</kw>
<msg timestamp="20210629 13:15:32.380" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:15:32.377" endtime="20210629 13:15:32.380"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210629 13:15:32.381" endtime="20210629 13:15:32.381"/>
</kw>
<msg timestamp="20210629 13:15:32.382" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210629 13:15:32.380" endtime="20210629 13:15:32.382"/>
</kw>
<status status="PASS" starttime="20210629 13:15:32.376" endtime="20210629 13:15:32.382"/>
</kw>
<msg timestamp="20210629 13:15:32.382" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:15:32.375" endtime="20210629 13:15:32.382"/>
</kw>
<msg timestamp="20210629 13:15:32.382" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:15:32.374" endtime="20210629 13:15:32.382"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:15:32.386" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:15:32.386" endtime="20210629 13:15:32.386"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:15:32.387" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:15:32.387" endtime="20210629 13:15:32.387"/>
</kw>
<status status="PASS" starttime="20210629 13:15:32.385" endtime="20210629 13:15:32.387"/>
</kw>
<msg timestamp="20210629 13:15:32.387" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:15:32.385" endtime="20210629 13:15:32.387"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:15:32.389" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210629 13:15:32.389" endtime="20210629 13:15:32.390"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:15:32.390" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210629 13:15:32.390" endtime="20210629 13:15:32.390"/>
</kw>
<status status="PASS" starttime="20210629 13:15:32.388" endtime="20210629 13:15:32.391"/>
</kw>
<msg timestamp="20210629 13:15:32.391" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210629 13:15:32.387" endtime="20210629 13:15:32.391"/>
</kw>
<status status="PASS" starttime="20210629 13:15:32.384" endtime="20210629 13:15:32.392"/>
</kw>
<msg timestamp="20210629 13:15:32.392" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210629 13:15:32.383" endtime="20210629 13:15:32.392"/>
</kw>
<msg timestamp="20210629 13:15:32.392" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210629 13:15:32.382" endtime="20210629 13:15:32.392"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:15:32.396" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:15:32.395" endtime="20210629 13:15:32.396"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:15:32.396" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:15:32.396" endtime="20210629 13:15:32.396"/>
</kw>
<status status="PASS" starttime="20210629 13:15:32.395" endtime="20210629 13:15:32.397"/>
</kw>
<msg timestamp="20210629 13:15:32.397" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:15:32.394" endtime="20210629 13:15:32.397"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:15:32.398" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210629 13:15:32.398" endtime="20210629 13:15:32.398"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:15:32.399" level="INFO">${result} = /wordcount-YPTJwNDE.txt</msg>
<status status="PASS" starttime="20210629 13:15:32.398" endtime="20210629 13:15:32.399"/>
</kw>
<status status="PASS" starttime="20210629 13:15:32.397" endtime="20210629 13:15:32.399"/>
</kw>
<msg timestamp="20210629 13:15:32.400" level="INFO">${path_with_leading} = /wordcount-YPTJwNDE.txt</msg>
<status status="PASS" starttime="20210629 13:15:32.397" endtime="20210629 13:15:32.400"/>
</kw>
<status status="PASS" starttime="20210629 13:15:32.394" endtime="20210629 13:15:32.400"/>
</kw>
<msg timestamp="20210629 13:15:32.400" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-YPTJwNDE.txt</msg>
<status status="PASS" starttime="20210629 13:15:32.393" endtime="20210629 13:15:32.400"/>
</kw>
<msg timestamp="20210629 13:15:32.400" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-YPTJwNDE.txt</msg>
<status status="PASS" starttime="20210629 13:15:32.392" endtime="20210629 13:15:32.400"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:15:32.404" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-YPTJwNDE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:16:14.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:16:14.257" level="INFO">${output} = 2021-06-29 13:15:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:15:32.403" endtime="20210629 13:16:14.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:16:14.258" level="INFO">2021-06-29 13:15:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2021-06-29 13:15:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-29 13:15:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:34 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-06-29 13:15:34 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:15:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:15:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-29 13:15:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:15:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F6C8B18FDB17-&gt;b7af4e5a-8a24-436b-b05b-4517317aa4f4
2021-06-29 13:15:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-29 13:15:38 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-29 13:15:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4BA0E3FEB967-&gt;670d1d6d-e366-4e9a-864a-74ef8829acbe
2021-06-29 13:15:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-29 13:15:38 INFO  JobSubmitter:202 - number of splits:3
2021-06-29 13:15:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1624972294409_0004
2021-06-29 13:15:39 INFO  JobSubmitter:299 - Executing with tokens: []
2021-06-29 13:15:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:39 INFO  Configuration:2752 - resource-types.xml not found
2021-06-29 13:15:39 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-06-29 13:15:39 INFO  YarnClientImpl:324 - Submitted application application_1624972294409_0004
2021-06-29 13:15:39 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1624972294409_0004/
2021-06-29 13:15:39 INFO  Job:1619 - Running job: job_1624972294409_0004
2021-06-29 13:15:46 INFO  Job:1640 - Job job_1624972294409_0004 running in uber mode : false
2021-06-29 13:15:46 INFO  Job:1647 -  map 0% reduce 0%
2021-06-29 13:15:53 INFO  Job:1647 -  map 33% reduce 0%
2021-06-29 13:15:59 INFO  Job:1647 -  map 67% reduce 0%
2021-06-29 13:16:05 INFO  Job:1647 -  map 100% reduce 0%
2021-06-29 13:16:10 INFO  Job:1647 -  map 100% reduce 100%
2021-06-29 13:16:13 INFO  Job:1658 - Job job_1624972294409_0004 completed successfully
2021-06-29 13:16:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:16:13 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1100783
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39729
		OFS: Number of bytes written=22209
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44388
		Total time spent by all reduces in occupied slots (ms)=15104
		Total time spent by all map tasks (ms)=11097
		Total time spent by all reduce tasks (ms)=3776
		Total vcore-milliseconds taken by all map tasks=11097
		Total vcore-milliseconds taken by all reduce tasks=3776
		Total megabyte-milliseconds taken by all map tasks=45453312
		Total megabyte-milliseconds taken by all reduce tasks=15466496
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=812
		CPU time spent (ms)=8080
		Physical memory (bytes) snapshot=1625649152
		Virtual memory (bytes) snapshot=15828639744
		Total committed heap usage (bytes)=1472724992
		Peak Map Physical memory (bytes)=567070720
		Peak Map Virtual memory (bytes)=3954708480
		Peak Reduce Physical memory (bytes)=323702784
		Peak Reduce Virtual memory (bytes)=3971497984
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209
2021-06-29 13:16:13 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210629 13:16:14.257" endtime="20210629 13:16:14.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:16:14.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:16:14.258" endtime="20210629 13:16:14.259"/>
</kw>
<status status="PASS" starttime="20210629 13:15:32.402" endtime="20210629 13:16:14.259"/>
</kw>
<msg timestamp="20210629 13:16:14.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:15:32.401" endtime="20210629 13:16:14.259"/>
</kw>
<msg timestamp="20210629 13:16:14.260" level="INFO">${output} = 2021-06-29 13:15:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:15:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:15:32.400" endtime="20210629 13:16:14.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:16:14.260" endtime="20210629 13:16:14.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:16:14.261" endtime="20210629 13:16:14.261"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210629 13:15:32.359" endtime="20210629 13:16:14.261"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210629 13:14:50.038" endtime="20210629 13:16:14.263"/>
</suite>
<suite id="s1-s2-s5" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:59.643" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:12:59.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:12:59.650" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:12:59.640" endtime="20210629 13:12:59.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:12:59.651" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:12:59.650" endtime="20210629 13:12:59.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:12:59.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:12:59.651" endtime="20210629 13:12:59.652"/>
</kw>
<status status="PASS" starttime="20210629 13:12:59.639" endtime="20210629 13:12:59.652"/>
</kw>
<msg timestamp="20210629 13:12:59.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:12:59.639" endtime="20210629 13:12:59.653"/>
</kw>
<msg timestamp="20210629 13:12:59.653" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:12:59.639" endtime="20210629 13:12:59.653"/>
</kw>
<msg timestamp="20210629 13:12:59.653" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:12:59.638" endtime="20210629 13:12:59.653"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:12:59.659" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:12:59.658" endtime="20210629 13:12:59.659"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:12:59.660" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:12:59.659" endtime="20210629 13:12:59.660"/>
</kw>
<status status="PASS" starttime="20210629 13:12:59.657" endtime="20210629 13:12:59.660"/>
</kw>
<msg timestamp="20210629 13:12:59.660" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:12:59.657" endtime="20210629 13:12:59.660"/>
</kw>
<status status="PASS" starttime="20210629 13:12:59.656" endtime="20210629 13:12:59.660"/>
</kw>
<msg timestamp="20210629 13:12:59.660" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:12:59.655" endtime="20210629 13:12:59.660"/>
</kw>
<msg timestamp="20210629 13:12:59.661" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:12:59.654" endtime="20210629 13:12:59.661"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:12:59.664" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:13:50.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:13:50.625" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:13:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13...</msg>
<status status="PASS" starttime="20210629 13:12:59.662" endtime="20210629 13:13:50.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:13:50.627" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:13:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:01 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-06-29 13:13:01 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:13:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:13:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-29 13:13:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:13:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E684C112E227-&gt;670d1d6d-e366-4e9a-864a-74ef8829acbe
2021-06-29 13:13:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-06-29 13:13:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FE984BDBEF81-&gt;b7af4e5a-8a24-436b-b05b-4517317aa4f4
2021-06-29 13:13:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-29 13:13:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2021-06-29 13:13:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:08 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-29 13:13:09 INFO  JobSubmitter:202 - number of splits:3
2021-06-29 13:13:11 INFO  JobSubmitter:298 - Submitting tokens for job: job_1624972294409_0001
2021-06-29 13:13:11 INFO  JobSubmitter:299 - Executing with tokens: []
2021-06-29 13:13:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:12 INFO  Configuration:2752 - resource-types.xml not found
2021-06-29 13:13:12 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-06-29 13:13:12 INFO  YarnClientImpl:324 - Submitted application application_1624972294409_0001
2021-06-29 13:13:12 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1624972294409_0001/
2021-06-29 13:13:12 INFO  Job:1619 - Running job: job_1624972294409_0001
2021-06-29 13:13:22 INFO  Job:1640 - Job job_1624972294409_0001 running in uber mode : false
2021-06-29 13:13:22 INFO  Job:1647 -  map 0% reduce 0%
2021-06-29 13:13:29 INFO  Job:1647 -  map 33% reduce 0%
2021-06-29 13:13:35 INFO  Job:1647 -  map 67% reduce 0%
2021-06-29 13:13:41 INFO  Job:1647 -  map 100% reduce 0%
2021-06-29 13:13:46 INFO  Job:1647 -  map 100% reduce 100%
2021-06-29 13:13:49 INFO  Job:1658 - Job job_1624972294409_0001 completed successfully
2021-06-29 13:13:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:50 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1038305
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42880
		Total time spent by all reduces in occupied slots (ms)=16344
		Total time spent by all map tasks (ms)=10720
		Total time spent by all reduce tasks (ms)=4086
		Total vcore-milliseconds taken by all map tasks=10720
		Total vcore-milliseconds taken by all reduce tasks=4086
		Total megabyte-milliseconds taken by all map tasks=43909120
		Total megabyte-milliseconds taken by all reduce tasks=16736256
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=957
		CPU time spent (ms)=7720
		Physical memory (bytes) snapshot=1803284480
		Virtual memory (bytes) snapshot=15817318400
		Total committed heap usage (bytes)=1767899136
		Peak Map Physical memory (bytes)=559968256
		Peak Map Virtual memory (bytes)=3954761728
		Peak Reduce Physical memory (bytes)=330952704
		Peak Reduce Virtual memory (bytes)=3970248704
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 41.705 seconds
2021-06-29 13:13:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:50 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-06-29 13:13:50 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210629 13:13:50.626" endtime="20210629 13:13:50.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:13:50.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:13:50.628" endtime="20210629 13:13:50.629"/>
</kw>
<status status="PASS" starttime="20210629 13:12:59.662" endtime="20210629 13:13:50.629"/>
</kw>
<msg timestamp="20210629 13:13:50.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:12:59.661" endtime="20210629 13:13:50.629"/>
</kw>
<msg timestamp="20210629 13:13:50.630" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:13:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13...</msg>
<status status="PASS" starttime="20210629 13:12:59.661" endtime="20210629 13:13:50.630"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:13:50.631" endtime="20210629 13:13:50.631"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210629 13:12:59.637" endtime="20210629 13:13:50.632"/>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:13:50.638" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:13:50.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:13:50.644" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:13:50.635" endtime="20210629 13:13:50.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:13:50.645" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:13:50.644" endtime="20210629 13:13:50.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:13:50.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:13:50.645" endtime="20210629 13:13:50.646"/>
</kw>
<status status="PASS" starttime="20210629 13:13:50.635" endtime="20210629 13:13:50.647"/>
</kw>
<msg timestamp="20210629 13:13:50.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:13:50.635" endtime="20210629 13:13:50.647"/>
</kw>
<msg timestamp="20210629 13:13:50.647" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:13:50.634" endtime="20210629 13:13:50.647"/>
</kw>
<msg timestamp="20210629 13:13:50.647" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20210629 13:13:50.634" endtime="20210629 13:13:50.647"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210629 13:13:50.648" level="INFO">${random} = 4BlMqQHd</msg>
<status status="PASS" starttime="20210629 13:13:50.648" endtime="20210629 13:13:50.648"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:13:50.652" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:13:50.652" endtime="20210629 13:13:50.652"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:13:50.653" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:13:50.652" endtime="20210629 13:13:50.653"/>
</kw>
<status status="PASS" starttime="20210629 13:13:50.651" endtime="20210629 13:13:50.653"/>
</kw>
<msg timestamp="20210629 13:13:50.653" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:13:50.650" endtime="20210629 13:13:50.653"/>
</kw>
<status status="PASS" starttime="20210629 13:13:50.649" endtime="20210629 13:13:50.654"/>
</kw>
<msg timestamp="20210629 13:13:50.654" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:13:50.649" endtime="20210629 13:13:50.654"/>
</kw>
<msg timestamp="20210629 13:13:50.654" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:13:50.648" endtime="20210629 13:13:50.654"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:13:50.659" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:13:50.658" endtime="20210629 13:13:50.659"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:13:50.660" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:13:50.659" endtime="20210629 13:13:50.660"/>
</kw>
<status status="PASS" starttime="20210629 13:13:50.658" endtime="20210629 13:13:50.660"/>
</kw>
<msg timestamp="20210629 13:13:50.660" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:13:50.657" endtime="20210629 13:13:50.660"/>
</kw>
<status status="PASS" starttime="20210629 13:13:50.656" endtime="20210629 13:13:50.660"/>
</kw>
<msg timestamp="20210629 13:13:50.660" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210629 13:13:50.655" endtime="20210629 13:13:50.660"/>
</kw>
<msg timestamp="20210629 13:13:50.661" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210629 13:13:50.654" endtime="20210629 13:13:50.661"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:13:50.664" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:13:50.664" endtime="20210629 13:13:50.664"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:13:50.665" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:13:50.665" endtime="20210629 13:13:50.665"/>
</kw>
<status status="PASS" starttime="20210629 13:13:50.663" endtime="20210629 13:13:50.665"/>
</kw>
<msg timestamp="20210629 13:13:50.666" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:13:50.663" endtime="20210629 13:13:50.666"/>
</kw>
<status status="PASS" starttime="20210629 13:13:50.662" endtime="20210629 13:13:50.666"/>
</kw>
<msg timestamp="20210629 13:13:50.666" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-4BlMqQHd.txt</msg>
<status status="PASS" starttime="20210629 13:13:50.662" endtime="20210629 13:13:50.666"/>
</kw>
<msg timestamp="20210629 13:13:50.666" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-4BlMqQHd.txt</msg>
<status status="PASS" starttime="20210629 13:13:50.661" endtime="20210629 13:13:50.666"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:13:50.670" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-4BlMqQHd.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:14:31.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:14:31.602" level="INFO">${output} = 2021-06-29 13:13:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:13:50.668" endtime="20210629 13:14:31.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:14:31.604" level="INFO">2021-06-29 13:13:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2021-06-29 13:13:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-29 13:13:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:53 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-06-29 13:13:53 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-06-29 13:13:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:13:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-29 13:13:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:13:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A3F30513BCE3-&gt;b7af4e5a-8a24-436b-b05b-4517317aa4f4
2021-06-29 13:13:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-29 13:13:54 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-29 13:13:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3A10A6197A68-&gt;670d1d6d-e366-4e9a-864a-74ef8829acbe
2021-06-29 13:13:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-29 13:13:57 INFO  JobSubmitter:202 - number of splits:3
2021-06-29 13:13:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1624972294409_0002
2021-06-29 13:13:57 INFO  JobSubmitter:299 - Executing with tokens: []
2021-06-29 13:13:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:57 INFO  Configuration:2752 - resource-types.xml not found
2021-06-29 13:13:57 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-06-29 13:13:57 INFO  YarnClientImpl:324 - Submitted application application_1624972294409_0002
2021-06-29 13:13:57 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1624972294409_0002/
2021-06-29 13:13:57 INFO  Job:1619 - Running job: job_1624972294409_0002
2021-06-29 13:14:05 INFO  Job:1640 - Job job_1624972294409_0002 running in uber mode : false
2021-06-29 13:14:05 INFO  Job:1647 -  map 0% reduce 0%
2021-06-29 13:14:12 INFO  Job:1647 -  map 33% reduce 0%
2021-06-29 13:14:19 INFO  Job:1647 -  map 67% reduce 0%
2021-06-29 13:14:25 INFO  Job:1647 -  map 100% reduce 0%
2021-06-29 13:14:30 INFO  Job:1647 -  map 100% reduce 100%
2021-06-29 13:14:31 INFO  Job:1658 - Job job_1624972294409_0002 completed successfully
2021-06-29 13:14:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:14:31 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1100867
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39732
		O3FS: Number of bytes written=22209
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43740
		Total time spent by all reduces in occupied slots (ms)=16060
		Total time spent by all map tasks (ms)=10935
		Total time spent by all reduce tasks (ms)=4015
		Total vcore-milliseconds taken by all map tasks=10935
		Total vcore-milliseconds taken by all reduce tasks=4015
		Total megabyte-milliseconds taken by all map tasks=44789760
		Total megabyte-milliseconds taken by all reduce tasks=16445440
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=656
		CPU time spent (ms)=7380
		Physical memory (bytes) snapshot=1475248128
		Virtual memory (bytes) snapshot=15801778176
		Total committed heap usage (bytes)=1296039936
		Peak Map Physical memory (bytes)=395673600
		Peak Map Virtual memory (bytes)=3954089984
		Peak Reduce Physical memory (bytes)=295534592
		Peak Reduce Virtual memory (bytes)=3952517120
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209
2021-06-29 13:14:31 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" starttime="20210629 13:14:31.603" endtime="20210629 13:14:31.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:14:31.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:14:31.604" endtime="20210629 13:14:31.605"/>
</kw>
<status status="PASS" starttime="20210629 13:13:50.667" endtime="20210629 13:14:31.605"/>
</kw>
<msg timestamp="20210629 13:14:31.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:13:50.667" endtime="20210629 13:14:31.605"/>
</kw>
<msg timestamp="20210629 13:14:31.606" level="INFO">${output} = 2021-06-29 13:13:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-06-29 13:13:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" starttime="20210629 13:13:50.666" endtime="20210629 13:14:31.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:14:31.606" endtime="20210629 13:14:31.607"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:14:31.607" endtime="20210629 13:14:31.608"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210629 13:13:50.633" endtime="20210629 13:14:31.608"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210629 13:12:59.580" endtime="20210629 13:14:31.609"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="227134"/>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite id="s1-s3-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:17:28.755" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:17:41.439" level="INFO">${rc} = 255</msg>
<msg timestamp="20210629 13:17:41.439" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210629 13:17:28.750" endtime="20210629 13:17:41.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:17:41.440" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210629 13:17:41.439" endtime="20210629 13:17:41.440"/>
</kw>
<msg timestamp="20210629 13:17:41.440" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210629 13:17:28.749" endtime="20210629 13:17:41.440"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:17:41.446" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:17:44.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:17:44.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:17:41.443" endtime="20210629 13:17:44.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:17:44.794" level="INFO"/>
<status status="PASS" starttime="20210629 13:17:44.793" endtime="20210629 13:17:44.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:17:44.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:17:44.794" endtime="20210629 13:17:44.795"/>
</kw>
<status status="PASS" starttime="20210629 13:17:41.443" endtime="20210629 13:17:44.795"/>
</kw>
<msg timestamp="20210629 13:17:44.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:17:41.442" endtime="20210629 13:17:44.795"/>
</kw>
<msg timestamp="20210629 13:17:44.795" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210629 13:17:41.442" endtime="20210629 13:17:44.795"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:17:44.796" endtime="20210629 13:17:44.796"/>
</kw>
<status status="PASS" starttime="20210629 13:17:41.441" endtime="20210629 13:17:44.796"/>
</kw>
<status status="PASS" starttime="20210629 13:17:41.441" endtime="20210629 13:17:44.796"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:17:44.802" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:17:47.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:17:47.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:17:44.800" endtime="20210629 13:17:47.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:17:47.917" level="INFO"/>
<status status="PASS" starttime="20210629 13:17:47.916" endtime="20210629 13:17:47.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:17:47.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:17:47.921" endtime="20210629 13:17:47.921"/>
</kw>
<status status="PASS" starttime="20210629 13:17:44.799" endtime="20210629 13:17:47.921"/>
</kw>
<msg timestamp="20210629 13:17:47.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:17:44.799" endtime="20210629 13:17:47.922"/>
</kw>
<status status="PASS" starttime="20210629 13:17:44.798" endtime="20210629 13:17:47.922"/>
</kw>
<status status="PASS" starttime="20210629 13:17:44.797" endtime="20210629 13:17:47.922"/>
</kw>
<status status="PASS" starttime="20210629 13:17:44.797" endtime="20210629 13:17:47.922"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210629 13:17:47.922" endtime="20210629 13:17:47.923"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:17:47.927" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:17:51.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:17:51.541" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210629 13:17:47.924" endtime="20210629 13:17:51.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:17:51.542" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-29T13:17:47.822Z",
  "modificationTime" : "2021-06-29T13:17:47.822Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210629 13:17:51.541" endtime="20210629 13:17:51.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:17:51.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:17:51.542" endtime="20210629 13:17:51.543"/>
</kw>
<status status="PASS" starttime="20210629 13:17:47.924" endtime="20210629 13:17:51.543"/>
</kw>
<msg timestamp="20210629 13:17:51.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:17:47.923" endtime="20210629 13:17:51.543"/>
</kw>
<msg timestamp="20210629 13:17:51.544" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210629 13:17:47.923" endtime="20210629 13:17:51.544"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:17:51.544" endtime="20210629 13:17:51.544"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:17:51.550" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:17:51.549" endtime="20210629 13:17:51.550"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:17:51.552" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:17:51.550" endtime="20210629 13:17:51.552"/>
</kw>
<status status="PASS" starttime="20210629 13:17:51.548" endtime="20210629 13:17:51.552"/>
</kw>
<msg timestamp="20210629 13:17:51.552" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:17:51.547" endtime="20210629 13:17:51.552"/>
</kw>
<status status="PASS" starttime="20210629 13:17:51.546" endtime="20210629 13:17:51.553"/>
</kw>
<msg timestamp="20210629 13:17:51.553" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210629 13:17:51.546" endtime="20210629 13:17:51.553"/>
</kw>
<msg timestamp="20210629 13:17:51.553" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210629 13:17:51.545" endtime="20210629 13:17:51.553"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:17:51.559" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:17:55.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:17:55.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:17:51.555" endtime="20210629 13:17:55.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:17:55.072" level="INFO"/>
<status status="PASS" starttime="20210629 13:17:55.071" endtime="20210629 13:17:55.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:17:55.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:17:55.072" endtime="20210629 13:17:55.073"/>
</kw>
<status status="PASS" starttime="20210629 13:17:51.554" endtime="20210629 13:17:55.073"/>
</kw>
<msg timestamp="20210629 13:17:55.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:17:51.554" endtime="20210629 13:17:55.074"/>
</kw>
<status status="PASS" starttime="20210629 13:17:51.553" endtime="20210629 13:17:55.074"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:17:55.078" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:18:01.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:18:01.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:17:55.076" endtime="20210629 13:18:01.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:18:01.854" level="INFO"/>
<status status="PASS" starttime="20210629 13:18:01.853" endtime="20210629 13:18:01.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:18:01.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:18:01.854" endtime="20210629 13:18:01.855"/>
</kw>
<status status="PASS" starttime="20210629 13:17:55.075" endtime="20210629 13:18:01.855"/>
</kw>
<msg timestamp="20210629 13:18:01.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:17:55.075" endtime="20210629 13:18:01.855"/>
</kw>
<status status="PASS" starttime="20210629 13:17:55.074" endtime="20210629 13:18:01.856"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:18:01.859" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:18:08.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:18:08.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:18:01.857" endtime="20210629 13:18:08.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:18:08.228" level="INFO"/>
<status status="PASS" starttime="20210629 13:18:08.227" endtime="20210629 13:18:08.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:18:08.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:18:08.228" endtime="20210629 13:18:08.229"/>
</kw>
<status status="PASS" starttime="20210629 13:18:01.857" endtime="20210629 13:18:08.229"/>
</kw>
<msg timestamp="20210629 13:18:08.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:18:01.856" endtime="20210629 13:18:08.229"/>
</kw>
<status status="PASS" starttime="20210629 13:18:01.856" endtime="20210629 13:18:08.229"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:18:08.233" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:18:13.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:18:13.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:18:08.231" endtime="20210629 13:18:13.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:18:13.900" level="INFO"/>
<status status="PASS" starttime="20210629 13:18:13.899" endtime="20210629 13:18:13.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:18:13.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:18:13.901" endtime="20210629 13:18:13.901"/>
</kw>
<status status="PASS" starttime="20210629 13:18:08.231" endtime="20210629 13:18:13.902"/>
</kw>
<msg timestamp="20210629 13:18:13.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:18:08.230" endtime="20210629 13:18:13.902"/>
</kw>
<status status="PASS" starttime="20210629 13:18:08.230" endtime="20210629 13:18:13.903"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210629 13:17:28.748" endtime="20210629 13:18:13.903"/>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:18:13.910" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:18:13.910" endtime="20210629 13:18:13.910"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:18:13.911" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:18:13.911" endtime="20210629 13:18:13.911"/>
</kw>
<status status="PASS" starttime="20210629 13:18:13.909" endtime="20210629 13:18:13.912"/>
</kw>
<msg timestamp="20210629 13:18:13.912" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:18:13.907" endtime="20210629 13:18:13.912"/>
</kw>
<status status="PASS" starttime="20210629 13:18:13.906" endtime="20210629 13:18:13.912"/>
</kw>
<msg timestamp="20210629 13:18:13.913" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210629 13:18:13.905" endtime="20210629 13:18:13.913"/>
</kw>
<msg timestamp="20210629 13:18:13.913" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210629 13:18:13.904" endtime="20210629 13:18:13.913"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:18:13.917" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:18:17.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:18:17.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:18:13.915" endtime="20210629 13:18:17.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:18:17.441" level="INFO"/>
<status status="PASS" starttime="20210629 13:18:17.440" endtime="20210629 13:18:17.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:18:17.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:18:17.442" endtime="20210629 13:18:17.442"/>
</kw>
<status status="PASS" starttime="20210629 13:18:13.914" endtime="20210629 13:18:17.443"/>
</kw>
<msg timestamp="20210629 13:18:17.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:18:13.914" endtime="20210629 13:18:17.443"/>
</kw>
<status status="PASS" starttime="20210629 13:18:13.913" endtime="20210629 13:18:17.445"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:18:17.449" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:18:21.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:18:21.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210629 13:18:17.447" endtime="20210629 13:18:21.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:18:21.085" level="INFO"/>
<status status="PASS" starttime="20210629 13:18:21.084" endtime="20210629 13:18:21.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:18:21.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:18:21.085" endtime="20210629 13:18:21.086"/>
</kw>
<status status="PASS" starttime="20210629 13:18:17.446" endtime="20210629 13:18:21.087"/>
</kw>
<msg timestamp="20210629 13:18:21.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:18:17.446" endtime="20210629 13:18:21.087"/>
</kw>
<status status="PASS" starttime="20210629 13:18:17.445" endtime="20210629 13:18:21.088"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210629 13:18:13.904" endtime="20210629 13:18:21.088"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210629 13:17:28.669" endtime="20210629 13:18:21.090"/>
</suite>
<suite id="s1-s3-s2" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:20:07.777" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:20:07.776" endtime="20210629 13:20:07.777"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:20:07.777" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:20:07.777" endtime="20210629 13:20:07.778"/>
</kw>
<status status="PASS" starttime="20210629 13:20:07.776" endtime="20210629 13:20:07.778"/>
</kw>
<msg timestamp="20210629 13:20:07.778" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:20:07.775" endtime="20210629 13:20:07.778"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210629 13:20:07.779" endtime="20210629 13:20:07.779"/>
</kw>
<msg timestamp="20210629 13:20:07.779" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210629 13:20:07.778" endtime="20210629 13:20:07.779"/>
</kw>
<status status="PASS" starttime="20210629 13:20:07.774" endtime="20210629 13:20:07.780"/>
</kw>
<msg timestamp="20210629 13:20:07.780" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:20:07.772" endtime="20210629 13:20:07.780"/>
</kw>
<msg timestamp="20210629 13:20:07.780" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:20:07.771" endtime="20210629 13:20:07.780"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210629 13:20:07.781" level="INFO">${random} = 26233</msg>
<status status="PASS" starttime="20210629 13:20:07.781" endtime="20210629 13:20:07.781"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:20:07.788" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-26233 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:20:11.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:20:11.499" level="INFO">${output} = 2021-06-29 13:20:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:20:09 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210629 13:20:07.783" endtime="20210629 13:20:11.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:20:11.501" level="INFO">2021-06-29 13:20:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:20:09 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:20:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-29 13:20:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:20:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B277195EC144-&gt;824a48d9-e5ce-4c91-9713-5fe8dfa43523
2021-06-29 13:20:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210629 13:20:11.500" endtime="20210629 13:20:11.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:20:11.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:20:11.501" endtime="20210629 13:20:11.502"/>
</kw>
<status status="PASS" starttime="20210629 13:20:07.782" endtime="20210629 13:20:11.502"/>
</kw>
<msg timestamp="20210629 13:20:11.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:20:07.782" endtime="20210629 13:20:11.503"/>
</kw>
<msg timestamp="20210629 13:20:11.504" level="INFO">${result} = 2021-06-29 13:20:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:20:09 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210629 13:20:07.781" endtime="20210629 13:20:11.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:20:11.507" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:20:13.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:20:13.520" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-29 13:18 ofs://om/volume1/bucket1/ozone-20485
-rw-...</msg>
<status status="PASS" starttime="20210629 13:20:11.505" endtime="20210629 13:20:13.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:20:13.522" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-29 13:18 ofs://om/volume1/bucket1/ozone-20485
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-29 13:20 ofs://om/volume1/bucket1/ozone-26233
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:18 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:19 ofs://om/volume1/bucket1/wordcount-qqMtBLAK.txt</msg>
<status status="PASS" starttime="20210629 13:20:13.521" endtime="20210629 13:20:13.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:20:13.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:20:13.523" endtime="20210629 13:20:13.524"/>
</kw>
<status status="PASS" starttime="20210629 13:20:11.505" endtime="20210629 13:20:13.524"/>
</kw>
<msg timestamp="20210629 13:20:13.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:20:11.504" endtime="20210629 13:20:13.526"/>
</kw>
<msg timestamp="20210629 13:20:13.526" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-29 13:18 ofs://om/volume1/bucket1/ozone-20485
-rw-...</msg>
<status status="PASS" starttime="20210629 13:20:11.504" endtime="20210629 13:20:13.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:20:13.526" endtime="20210629 13:20:13.527"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:20:13.531" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-26233 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:20:16.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:20:16.868" level="INFO">${output} = 2021-06-29 13:20:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:20:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210629 13:20:13.529" endtime="20210629 13:20:16.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:20:16.869" level="INFO">2021-06-29 13:20:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:20:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:20:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20210629 13:20:16.869" endtime="20210629 13:20:16.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:20:16.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:20:16.870" endtime="20210629 13:20:16.871"/>
</kw>
<status status="PASS" starttime="20210629 13:20:13.528" endtime="20210629 13:20:16.871"/>
</kw>
<msg timestamp="20210629 13:20:16.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:20:13.528" endtime="20210629 13:20:16.871"/>
</kw>
<msg timestamp="20210629 13:20:16.873" level="INFO">${result} = 2021-06-29 13:20:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:20:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210629 13:20:13.527" endtime="20210629 13:20:16.873"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed by The Apache Software</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:20:16.873" endtime="20210629 13:20:16.873"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210629 13:20:07.770" endtime="20210629 13:20:16.874"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210629 13:20:07.691" endtime="20210629 13:20:16.875"/>
</suite>
<suite id="s1-s3-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:18:26.079" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:18:26.078" endtime="20210629 13:18:26.079"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:18:26.079" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:18:26.079" endtime="20210629 13:18:26.079"/>
</kw>
<status status="PASS" starttime="20210629 13:18:26.078" endtime="20210629 13:18:26.080"/>
</kw>
<msg timestamp="20210629 13:18:26.080" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:18:26.077" endtime="20210629 13:18:26.080"/>
</kw>
<status status="PASS" starttime="20210629 13:18:26.076" endtime="20210629 13:18:26.080"/>
</kw>
<msg timestamp="20210629 13:18:26.080" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:18:26.076" endtime="20210629 13:18:26.080"/>
</kw>
<msg timestamp="20210629 13:18:26.081" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:18:26.075" endtime="20210629 13:18:26.081"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210629 13:18:26.081" level="INFO">${random} = 20485</msg>
<status status="PASS" starttime="20210629 13:18:26.081" endtime="20210629 13:18:26.081"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:18:26.086" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-20485 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:18:30.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:18:30.284" level="INFO">${output} = 2021-06-29 13:18:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:18:28 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210629 13:18:26.083" endtime="20210629 13:18:30.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:18:30.286" level="INFO">2021-06-29 13:18:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:18:28 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:18:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-29 13:18:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:18:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-773EB2AFACA2-&gt;e6ffe1bf-0c6e-4930-beab-221fa6cea2d4
2021-06-29 13:18:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210629 13:18:30.285" endtime="20210629 13:18:30.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:18:30.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:18:30.286" endtime="20210629 13:18:30.287"/>
</kw>
<status status="PASS" starttime="20210629 13:18:26.082" endtime="20210629 13:18:30.287"/>
</kw>
<msg timestamp="20210629 13:18:30.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:18:26.082" endtime="20210629 13:18:30.287"/>
</kw>
<msg timestamp="20210629 13:18:30.288" level="INFO">${result} = 2021-06-29 13:18:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:18:28 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210629 13:18:26.081" endtime="20210629 13:18:30.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:18:30.292" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:18:32.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:18:32.196" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-29 13:18 o3fs://bucket1.volume1.om/ozone-20485
dr...</msg>
<status status="PASS" starttime="20210629 13:18:30.290" endtime="20210629 13:18:32.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:18:32.197" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-29 13:18 o3fs://bucket1.volume1.om/ozone-20485
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:18 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210629 13:18:32.197" endtime="20210629 13:18:32.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:18:32.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:18:32.198" endtime="20210629 13:18:32.198"/>
</kw>
<status status="PASS" starttime="20210629 13:18:30.289" endtime="20210629 13:18:32.199"/>
</kw>
<msg timestamp="20210629 13:18:32.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:18:30.288" endtime="20210629 13:18:32.199"/>
</kw>
<msg timestamp="20210629 13:18:32.199" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-29 13:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-29 13:18 o3fs://bucket1.volume1.om/ozone-20485
dr...</msg>
<status status="PASS" starttime="20210629 13:18:30.288" endtime="20210629 13:18:32.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:18:32.199" endtime="20210629 13:18:32.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:18:32.203" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-20485 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:18:35.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:18:35.609" level="INFO">${output} = 2021-06-29 13:18:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:18:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210629 13:18:32.201" endtime="20210629 13:18:35.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:18:35.610" level="INFO">2021-06-29 13:18:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:18:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:18:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20210629 13:18:35.610" endtime="20210629 13:18:35.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:18:35.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:18:35.611" endtime="20210629 13:18:35.612"/>
</kw>
<status status="PASS" starttime="20210629 13:18:32.201" endtime="20210629 13:18:35.612"/>
</kw>
<msg timestamp="20210629 13:18:35.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:18:32.201" endtime="20210629 13:18:35.612"/>
</kw>
<msg timestamp="20210629 13:18:35.614" level="INFO">${result} = 2021-06-29 13:18:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:18:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210629 13:18:32.200" endtime="20210629 13:18:35.614"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed by The Apache Software</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:18:35.614" endtime="20210629 13:18:35.614"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210629 13:18:26.074" endtime="20210629 13:18:35.615"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210629 13:18:26.000" endtime="20210629 13:18:35.616"/>
</suite>
<suite id="s1-s3-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:20:21.731" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:20:21.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:20:21.737" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:20:21.728" endtime="20210629 13:20:21.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:20:21.738" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:20:21.737" endtime="20210629 13:20:21.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:20:21.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:20:21.738" endtime="20210629 13:20:21.739"/>
</kw>
<status status="PASS" starttime="20210629 13:20:21.727" endtime="20210629 13:20:21.739"/>
</kw>
<msg timestamp="20210629 13:20:21.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:20:21.727" endtime="20210629 13:20:21.739"/>
</kw>
<msg timestamp="20210629 13:20:21.739" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:20:21.727" endtime="20210629 13:20:21.740"/>
</kw>
<msg timestamp="20210629 13:20:21.740" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:20:21.726" endtime="20210629 13:20:21.740"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:20:21.744" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:20:21.744" endtime="20210629 13:20:21.744"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:20:21.745" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:20:21.744" endtime="20210629 13:20:21.745"/>
</kw>
<status status="PASS" starttime="20210629 13:20:21.743" endtime="20210629 13:20:21.745"/>
</kw>
<msg timestamp="20210629 13:20:21.745" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:20:21.743" endtime="20210629 13:20:21.745"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210629 13:20:21.746" endtime="20210629 13:20:21.746"/>
</kw>
<msg timestamp="20210629 13:20:21.747" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210629 13:20:21.745" endtime="20210629 13:20:21.747"/>
</kw>
<status status="PASS" starttime="20210629 13:20:21.742" endtime="20210629 13:20:21.747"/>
</kw>
<msg timestamp="20210629 13:20:21.747" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:20:21.741" endtime="20210629 13:20:21.747"/>
</kw>
<msg timestamp="20210629 13:20:21.747" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:20:21.741" endtime="20210629 13:20:21.748"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:20:21.750" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:20:57.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:20:57.787" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:20:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:20:24 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210629 13:20:21.749" endtime="20210629 13:20:57.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:20:57.788" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:20:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:20:24 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:20:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-29 13:20:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:20:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AD626094571E-&gt;e6ffe1bf-0c6e-4930-beab-221fa6cea2d4
2021-06-29 13:20:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-06-29 13:20:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2C10A9513D94-&gt;824a48d9-e5ce-4c91-9713-5fe8dfa43523
2021-06-29 13:20:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-29 13:20:25 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.9:8032
2021-06-29 13:20:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-29 13:20:25 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-29 13:20:26 INFO  JobSubmitter:202 - number of splits:3
2021-06-29 13:20:26 INFO  JobSubmitter:298 - Submitting tokens for job: job_1624972619018_0003
2021-06-29 13:20:26 INFO  JobSubmitter:299 - Executing with tokens: []
2021-06-29 13:20:26 INFO  Configuration:2795 - resource-types.xml not found
2021-06-29 13:20:26 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-29 13:20:26 INFO  YarnClientImpl:329 - Submitted application application_1624972619018_0003
2021-06-29 13:20:26 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1624972619018_0003/
2021-06-29 13:20:26 INFO  Job:1614 - Running job: job_1624972619018_0003
2021-06-29 13:20:33 INFO  Job:1635 - Job job_1624972619018_0003 running in uber mode : false
2021-06-29 13:20:33 INFO  Job:1642 -  map 0% reduce 0%
2021-06-29 13:20:41 INFO  Job:1642 -  map 33% reduce 0%
2021-06-29 13:20:47 INFO  Job:1642 -  map 67% reduce 0%
2021-06-29 13:20:52 INFO  Job:1642 -  map 100% reduce 0%
2021-06-29 13:20:56 INFO  Job:1642 -  map 100% reduce 100%
2021-06-29 13:20:57 INFO  Job:1653 - Job job_1624972619018_0003 completed successfully
2021-06-29 13:20:57 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1113501
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40200
		Total time spent by all reduces in occupied slots (ms)=15980
		Total time spent by all map tasks (ms)=10050
		Total time spent by all reduce tasks (ms)=3995
		Total vcore-milliseconds taken by all map tasks=10050
		Total vcore-milliseconds taken by all reduce tasks=3995
		Total megabyte-milliseconds taken by all map tasks=41164800
		Total megabyte-milliseconds taken by all reduce tasks=16363520
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=600
		CPU time spent (ms)=7620
		Physical memory (bytes) snapshot=1413853184
		Virtual memory (bytes) snapshot=15828570112
		Total committed heap usage (bytes)=1196425216
		Peak Map Physical memory (bytes)=384253952
		Peak Map Virtual memory (bytes)=3952312320
		Peak Reduce Physical memory (bytes)=318750720
		Peak Reduce Virtual memory (bytes)=3975430144
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.807 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210629 13:20:57.787" endtime="20210629 13:20:57.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:20:57.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:20:57.789" endtime="20210629 13:20:57.789"/>
</kw>
<status status="PASS" starttime="20210629 13:20:21.749" endtime="20210629 13:20:57.789"/>
</kw>
<msg timestamp="20210629 13:20:57.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:20:21.748" endtime="20210629 13:20:57.790"/>
</kw>
<msg timestamp="20210629 13:20:57.790" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:20:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:20:24 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210629 13:20:21.748" endtime="20210629 13:20:57.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:20:57.790" endtime="20210629 13:20:57.791"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210629 13:20:21.725" endtime="20210629 13:20:57.791"/>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:20:57.797" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:20:57.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:20:57.802" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:20:57.794" endtime="20210629 13:20:57.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:20:57.803" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:20:57.802" endtime="20210629 13:20:57.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:20:57.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:20:57.803" endtime="20210629 13:20:57.804"/>
</kw>
<status status="PASS" starttime="20210629 13:20:57.794" endtime="20210629 13:20:57.804"/>
</kw>
<msg timestamp="20210629 13:20:57.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:20:57.794" endtime="20210629 13:20:57.804"/>
</kw>
<msg timestamp="20210629 13:20:57.804" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:20:57.793" endtime="20210629 13:20:57.804"/>
</kw>
<msg timestamp="20210629 13:20:57.805" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:20:57.793" endtime="20210629 13:20:57.805"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210629 13:20:57.805" level="INFO">${random} = mqMHLUPt</msg>
<status status="PASS" starttime="20210629 13:20:57.805" endtime="20210629 13:20:57.805"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:20:57.809" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:20:57.808" endtime="20210629 13:20:57.809"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:20:57.809" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:20:57.809" endtime="20210629 13:20:57.809"/>
</kw>
<status status="PASS" starttime="20210629 13:20:57.808" endtime="20210629 13:20:57.810"/>
</kw>
<msg timestamp="20210629 13:20:57.810" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:20:57.807" endtime="20210629 13:20:57.810"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210629 13:20:57.810" endtime="20210629 13:20:57.811"/>
</kw>
<msg timestamp="20210629 13:20:57.811" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210629 13:20:57.810" endtime="20210629 13:20:57.811"/>
</kw>
<status status="PASS" starttime="20210629 13:20:57.807" endtime="20210629 13:20:57.812"/>
</kw>
<msg timestamp="20210629 13:20:57.812" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:20:57.806" endtime="20210629 13:20:57.812"/>
</kw>
<msg timestamp="20210629 13:20:57.812" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210629 13:20:57.805" endtime="20210629 13:20:57.812"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:20:57.815" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:20:57.815" endtime="20210629 13:20:57.815"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:20:57.816" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:20:57.815" endtime="20210629 13:20:57.816"/>
</kw>
<status status="PASS" starttime="20210629 13:20:57.814" endtime="20210629 13:20:57.816"/>
</kw>
<msg timestamp="20210629 13:20:57.816" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:20:57.814" endtime="20210629 13:20:57.816"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:20:57.818" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210629 13:20:57.817" endtime="20210629 13:20:57.818"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:20:57.819" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210629 13:20:57.818" endtime="20210629 13:20:57.819"/>
</kw>
<status status="PASS" starttime="20210629 13:20:57.817" endtime="20210629 13:20:57.819"/>
</kw>
<msg timestamp="20210629 13:20:57.819" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210629 13:20:57.816" endtime="20210629 13:20:57.819"/>
</kw>
<status status="PASS" starttime="20210629 13:20:57.813" endtime="20210629 13:20:57.820"/>
</kw>
<msg timestamp="20210629 13:20:57.820" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210629 13:20:57.813" endtime="20210629 13:20:57.820"/>
</kw>
<msg timestamp="20210629 13:20:57.820" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210629 13:20:57.812" endtime="20210629 13:20:57.820"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:20:57.824" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210629 13:20:57.823" endtime="20210629 13:20:57.824"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:20:57.824" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210629 13:20:57.824" endtime="20210629 13:20:57.824"/>
</kw>
<status status="PASS" starttime="20210629 13:20:57.823" endtime="20210629 13:20:57.825"/>
</kw>
<msg timestamp="20210629 13:20:57.825" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210629 13:20:57.822" endtime="20210629 13:20:57.825"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:20:57.826" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210629 13:20:57.826" endtime="20210629 13:20:57.827"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:20:57.827" level="INFO">${result} = /wordcount-mqMHLUPt.txt</msg>
<status status="PASS" starttime="20210629 13:20:57.827" endtime="20210629 13:20:57.827"/>
</kw>
<status status="PASS" starttime="20210629 13:20:57.825" endtime="20210629 13:20:57.828"/>
</kw>
<msg timestamp="20210629 13:20:57.828" level="INFO">${path_with_leading} = /wordcount-mqMHLUPt.txt</msg>
<status status="PASS" starttime="20210629 13:20:57.825" endtime="20210629 13:20:57.828"/>
</kw>
<status status="PASS" starttime="20210629 13:20:57.822" endtime="20210629 13:20:57.828"/>
</kw>
<msg timestamp="20210629 13:20:57.828" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-mqMHLUPt.txt</msg>
<status status="PASS" starttime="20210629 13:20:57.821" endtime="20210629 13:20:57.828"/>
</kw>
<msg timestamp="20210629 13:20:57.829" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-mqMHLUPt.txt</msg>
<status status="PASS" starttime="20210629 13:20:57.820" endtime="20210629 13:20:57.829"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:20:57.832" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-mqMHLUPt.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:21:39.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:21:39.351" level="INFO">${output} = 2021-06-29 13:20:59 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.9:8032
2021-06-29 13:20:59 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210629 13:20:57.830" endtime="20210629 13:21:39.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:21:39.352" level="INFO">2021-06-29 13:20:59 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.9:8032
2021-06-29 13:20:59 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-29 13:21:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:21:00 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:21:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-29 13:21:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:21:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E7D422B9EF92-&gt;e6ffe1bf-0c6e-4930-beab-221fa6cea2d4
2021-06-29 13:21:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-29 13:21:01 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-29 13:21:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9D04EA67C906-&gt;824a48d9-e5ce-4c91-9713-5fe8dfa43523
2021-06-29 13:21:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-29 13:21:01 INFO  JobSubmitter:202 - number of splits:3
2021-06-29 13:21:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1624972619018_0004
2021-06-29 13:21:01 INFO  JobSubmitter:299 - Executing with tokens: []
2021-06-29 13:21:02 INFO  Configuration:2795 - resource-types.xml not found
2021-06-29 13:21:02 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-29 13:21:02 INFO  YarnClientImpl:329 - Submitted application application_1624972619018_0004
2021-06-29 13:21:02 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1624972619018_0004/
2021-06-29 13:21:02 INFO  Job:1614 - Running job: job_1624972619018_0004
2021-06-29 13:21:10 INFO  Job:1635 - Job job_1624972619018_0004 running in uber mode : false
2021-06-29 13:21:10 INFO  Job:1642 -  map 0% reduce 0%
2021-06-29 13:21:16 INFO  Job:1642 -  map 33% reduce 0%
2021-06-29 13:21:22 INFO  Job:1642 -  map 67% reduce 0%
2021-06-29 13:21:27 INFO  Job:1642 -  map 100% reduce 0%
2021-06-29 13:21:35 INFO  Job:1642 -  map 100% reduce 100%
2021-06-29 13:21:38 INFO  Job:1653 - Job job_1624972619018_0004 completed successfully
2021-06-29 13:21:38 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1176167
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39729
		OFS: Number of bytes written=22209
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43104
		Total time spent by all reduces in occupied slots (ms)=25172
		Total time spent by all map tasks (ms)=10776
		Total time spent by all reduce tasks (ms)=6293
		Total vcore-milliseconds taken by all map tasks=10776
		Total vcore-milliseconds taken by all reduce tasks=6293
		Total megabyte-milliseconds taken by all map tasks=44138496
		Total megabyte-milliseconds taken by all reduce tasks=25776128
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=589
		CPU time spent (ms)=7580
		Physical memory (bytes) snapshot=1337823232
		Virtual memory (bytes) snapshot=15804567552
		Total committed heap usage (bytes)=1132986368
		Peak Map Physical memory (bytes)=356880384
		Peak Map Virtual memory (bytes)=3953164288
		Peak Reduce Physical memory (bytes)=311242752
		Peak Reduce Virtual memory (bytes)=3969269760
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209</msg>
<status status="PASS" starttime="20210629 13:21:39.351" endtime="20210629 13:21:39.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:21:39.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:21:39.352" endtime="20210629 13:21:39.353"/>
</kw>
<status status="PASS" starttime="20210629 13:20:57.830" endtime="20210629 13:21:39.353"/>
</kw>
<msg timestamp="20210629 13:21:39.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:20:57.830" endtime="20210629 13:21:39.353"/>
</kw>
<msg timestamp="20210629 13:21:39.354" level="INFO">${output} = 2021-06-29 13:20:59 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.9:8032
2021-06-29 13:20:59 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210629 13:20:57.829" endtime="20210629 13:21:39.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:21:39.354" endtime="20210629 13:21:39.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:21:39.355" endtime="20210629 13:21:39.355"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210629 13:20:57.792" endtime="20210629 13:21:39.355"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210629 13:20:21.662" endtime="20210629 13:21:39.357"/>
</suite>
<suite id="s1-s3-s5" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:18:40.635" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:18:40.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:18:40.641" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:18:40.630" endtime="20210629 13:18:40.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:18:40.642" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:18:40.641" endtime="20210629 13:18:40.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:18:40.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:18:40.642" endtime="20210629 13:18:40.643"/>
</kw>
<status status="PASS" starttime="20210629 13:18:40.629" endtime="20210629 13:18:40.643"/>
</kw>
<msg timestamp="20210629 13:18:40.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:18:40.629" endtime="20210629 13:18:40.644"/>
</kw>
<msg timestamp="20210629 13:18:40.644" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:18:40.628" endtime="20210629 13:18:40.645"/>
</kw>
<msg timestamp="20210629 13:18:40.645" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:18:40.628" endtime="20210629 13:18:40.645"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:18:40.649" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:18:40.649" endtime="20210629 13:18:40.649"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:18:40.650" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:18:40.649" endtime="20210629 13:18:40.650"/>
</kw>
<status status="PASS" starttime="20210629 13:18:40.648" endtime="20210629 13:18:40.650"/>
</kw>
<msg timestamp="20210629 13:18:40.650" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:18:40.648" endtime="20210629 13:18:40.650"/>
</kw>
<status status="PASS" starttime="20210629 13:18:40.647" endtime="20210629 13:18:40.651"/>
</kw>
<msg timestamp="20210629 13:18:40.651" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:18:40.646" endtime="20210629 13:18:40.651"/>
</kw>
<msg timestamp="20210629 13:18:40.651" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:18:40.645" endtime="20210629 13:18:40.651"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:18:40.655" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:19:21.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:19:21.273" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:18:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:18:42 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210629 13:18:40.653" endtime="20210629 13:19:21.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:19:21.274" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:18:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:18:42 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:18:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-29 13:18:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:18:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A1DE8DD500F8-&gt;824a48d9-e5ce-4c91-9713-5fe8dfa43523
2021-06-29 13:18:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-29 13:18:44 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.9:8032
2021-06-29 13:18:44 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-29 13:18:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-873FF74113AF-&gt;e6ffe1bf-0c6e-4930-beab-221fa6cea2d4
2021-06-29 13:18:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-29 13:18:45 INFO  JobSubmitter:202 - number of splits:3
2021-06-29 13:18:45 INFO  JobSubmitter:298 - Submitting tokens for job: job_1624972619018_0001
2021-06-29 13:18:45 INFO  JobSubmitter:299 - Executing with tokens: []
2021-06-29 13:18:45 INFO  Configuration:2795 - resource-types.xml not found
2021-06-29 13:18:45 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-29 13:18:46 INFO  YarnClientImpl:329 - Submitted application application_1624972619018_0001
2021-06-29 13:18:46 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1624972619018_0001/
2021-06-29 13:18:46 INFO  Job:1614 - Running job: job_1624972619018_0001
2021-06-29 13:18:56 INFO  Job:1635 - Job job_1624972619018_0001 running in uber mode : false
2021-06-29 13:18:56 INFO  Job:1642 -  map 0% reduce 0%
2021-06-29 13:19:02 INFO  Job:1642 -  map 33% reduce 0%
2021-06-29 13:19:07 INFO  Job:1642 -  map 67% reduce 0%
2021-06-29 13:19:12 INFO  Job:1642 -  map 100% reduce 0%
2021-06-29 13:19:19 INFO  Job:1642 -  map 100% reduce 100%
2021-06-29 13:19:20 INFO  Job:1653 - Job job_1624972619018_0001 completed successfully
2021-06-29 13:19:20 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1113705
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40712
		Total time spent by all reduces in occupied slots (ms)=26104
		Total time spent by all map tasks (ms)=10178
		Total time spent by all reduce tasks (ms)=6526
		Total vcore-milliseconds taken by all map tasks=10178
		Total vcore-milliseconds taken by all reduce tasks=6526
		Total megabyte-milliseconds taken by all map tasks=41689088
		Total megabyte-milliseconds taken by all reduce tasks=26730496
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=619
		CPU time spent (ms)=7040
		Physical memory (bytes) snapshot=1314238464
		Virtual memory (bytes) snapshot=15824551936
		Total committed heap usage (bytes)=1132986368
		Peak Map Physical memory (bytes)=331530240
		Peak Map Virtual memory (bytes)=3954434048
		Peak Reduce Physical memory (bytes)=323280896
		Peak Reduce Virtual memory (bytes)=3971780608
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.354 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210629 13:19:21.273" endtime="20210629 13:19:21.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:19:21.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:19:21.274" endtime="20210629 13:19:21.275"/>
</kw>
<status status="PASS" starttime="20210629 13:18:40.653" endtime="20210629 13:19:21.275"/>
</kw>
<msg timestamp="20210629 13:19:21.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:18:40.652" endtime="20210629 13:19:21.275"/>
</kw>
<msg timestamp="20210629 13:19:21.276" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-29 13:18:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:18:42 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210629 13:18:40.651" endtime="20210629 13:19:21.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:19:21.276" endtime="20210629 13:19:21.277"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210629 13:18:40.627" endtime="20210629 13:19:21.277"/>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:19:21.282" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:19:21.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:19:21.287" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:19:21.281" endtime="20210629 13:19:21.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:19:21.288" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:19:21.287" endtime="20210629 13:19:21.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:19:21.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:19:21.289" endtime="20210629 13:19:21.291"/>
</kw>
<status status="PASS" starttime="20210629 13:19:21.280" endtime="20210629 13:19:21.292"/>
</kw>
<msg timestamp="20210629 13:19:21.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:19:21.280" endtime="20210629 13:19:21.292"/>
</kw>
<msg timestamp="20210629 13:19:21.293" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:19:21.279" endtime="20210629 13:19:21.293"/>
</kw>
<msg timestamp="20210629 13:19:21.293" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210629 13:19:21.279" endtime="20210629 13:19:21.293"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210629 13:19:21.294" level="INFO">${random} = qqMtBLAK</msg>
<status status="PASS" starttime="20210629 13:19:21.293" endtime="20210629 13:19:21.294"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:19:21.298" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:19:21.297" endtime="20210629 13:19:21.298"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:19:21.299" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:19:21.298" endtime="20210629 13:19:21.299"/>
</kw>
<status status="PASS" starttime="20210629 13:19:21.297" endtime="20210629 13:19:21.299"/>
</kw>
<msg timestamp="20210629 13:19:21.299" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:19:21.296" endtime="20210629 13:19:21.299"/>
</kw>
<status status="PASS" starttime="20210629 13:19:21.296" endtime="20210629 13:19:21.299"/>
</kw>
<msg timestamp="20210629 13:19:21.299" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:19:21.295" endtime="20210629 13:19:21.300"/>
</kw>
<msg timestamp="20210629 13:19:21.300" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210629 13:19:21.294" endtime="20210629 13:19:21.300"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:19:21.304" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:19:21.303" endtime="20210629 13:19:21.304"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:19:21.304" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:19:21.304" endtime="20210629 13:19:21.304"/>
</kw>
<status status="PASS" starttime="20210629 13:19:21.303" endtime="20210629 13:19:21.305"/>
</kw>
<msg timestamp="20210629 13:19:21.305" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:19:21.302" endtime="20210629 13:19:21.305"/>
</kw>
<status status="PASS" starttime="20210629 13:19:21.301" endtime="20210629 13:19:21.305"/>
</kw>
<msg timestamp="20210629 13:19:21.305" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210629 13:19:21.301" endtime="20210629 13:19:21.305"/>
</kw>
<msg timestamp="20210629 13:19:21.305" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210629 13:19:21.300" endtime="20210629 13:19:21.306"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210629 13:19:21.310" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210629 13:19:21.309" endtime="20210629 13:19:21.310"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210629 13:19:21.311" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210629 13:19:21.310" endtime="20210629 13:19:21.311"/>
</kw>
<status status="PASS" starttime="20210629 13:19:21.308" endtime="20210629 13:19:21.311"/>
</kw>
<msg timestamp="20210629 13:19:21.311" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210629 13:19:21.308" endtime="20210629 13:19:21.311"/>
</kw>
<status status="PASS" starttime="20210629 13:19:21.307" endtime="20210629 13:19:21.311"/>
</kw>
<msg timestamp="20210629 13:19:21.311" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-qqMtBLAK.txt</msg>
<status status="PASS" starttime="20210629 13:19:21.306" endtime="20210629 13:19:21.311"/>
</kw>
<msg timestamp="20210629 13:19:21.312" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-qqMtBLAK.txt</msg>
<status status="PASS" starttime="20210629 13:19:21.306" endtime="20210629 13:19:21.312"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210629 13:19:21.316" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-qqMtBLAK.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210629 13:20:02.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210629 13:20:02.782" level="INFO">${output} = 2021-06-29 13:19:23 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.9:8032
2021-06-29 13:19:23 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210629 13:19:21.313" endtime="20210629 13:20:02.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210629 13:20:02.783" level="INFO">2021-06-29 13:19:23 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.9:8032
2021-06-29 13:19:23 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-29 13:19:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-29 13:19:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-29 13:19:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-29 13:19:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-29 13:19:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D4033BA93542-&gt;e6ffe1bf-0c6e-4930-beab-221fa6cea2d4
2021-06-29 13:19:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-29 13:19:27 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-29 13:19:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-304CB85E1621-&gt;824a48d9-e5ce-4c91-9713-5fe8dfa43523
2021-06-29 13:19:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-29 13:19:30 INFO  JobSubmitter:202 - number of splits:3
2021-06-29 13:19:30 INFO  JobSubmitter:298 - Submitting tokens for job: job_1624972619018_0002
2021-06-29 13:19:30 INFO  JobSubmitter:299 - Executing with tokens: []
2021-06-29 13:19:30 INFO  Configuration:2795 - resource-types.xml not found
2021-06-29 13:19:30 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-29 13:19:30 INFO  YarnClientImpl:329 - Submitted application application_1624972619018_0002
2021-06-29 13:19:30 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1624972619018_0002/
2021-06-29 13:19:30 INFO  Job:1614 - Running job: job_1624972619018_0002
2021-06-29 13:19:39 INFO  Job:1635 - Job job_1624972619018_0002 running in uber mode : false
2021-06-29 13:19:39 INFO  Job:1642 -  map 0% reduce 0%
2021-06-29 13:19:46 INFO  Job:1642 -  map 33% reduce 0%
2021-06-29 13:19:52 INFO  Job:1642 -  map 67% reduce 0%
2021-06-29 13:19:57 INFO  Job:1642 -  map 100% reduce 0%
2021-06-29 13:20:01 INFO  Job:1642 -  map 100% reduce 100%
2021-06-29 13:20:02 INFO  Job:1653 - Job job_1624972619018_0002 completed successfully
2021-06-29 13:20:02 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1176251
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39732
		O3FS: Number of bytes written=22209
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42212
		Total time spent by all reduces in occupied slots (ms)=14760
		Total time spent by all map tasks (ms)=10553
		Total time spent by all reduce tasks (ms)=3690
		Total vcore-milliseconds taken by all map tasks=10553
		Total vcore-milliseconds taken by all reduce tasks=3690
		Total megabyte-milliseconds taken by all map tasks=43225088
		Total megabyte-milliseconds taken by all reduce tasks=15114240
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=573
		CPU time spent (ms)=7250
		Physical memory (bytes) snapshot=1341390848
		Virtual memory (bytes) snapshot=15805087744
		Total committed heap usage (bytes)=1114636288
		Peak Map Physical memory (bytes)=382398464
		Peak Map Virtual memory (bytes)=3953041408
		Peak Reduce Physical memory (bytes)=293400576
		Peak Reduce Virtual memory (bytes)=3953041408
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209</msg>
<status status="PASS" starttime="20210629 13:20:02.782" endtime="20210629 13:20:02.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210629 13:20:02.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210629 13:20:02.783" endtime="20210629 13:20:02.784"/>
</kw>
<status status="PASS" starttime="20210629 13:19:21.313" endtime="20210629 13:20:02.785"/>
</kw>
<msg timestamp="20210629 13:20:02.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210629 13:19:21.313" endtime="20210629 13:20:02.785"/>
</kw>
<msg timestamp="20210629 13:20:02.785" level="INFO">${output} = 2021-06-29 13:19:23 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.9:8032
2021-06-29 13:19:23 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210629 13:19:21.312" endtime="20210629 13:20:02.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:20:02.786" endtime="20210629 13:20:02.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210629 13:20:02.786" endtime="20210629 13:20:02.786"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210629 13:19:21.278" endtime="20210629 13:20:02.787"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210629 13:18:40.557" endtime="20210629 13:20:02.788"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="231147"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="656979"/>
</suite>
<statistics>
<total>
<stat pass="24" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="24" fail="0" skip="0" id="s1" name="ozone-mr">ozone-mr</stat>
<stat pass="8" fail="0" skip="0" id="s1-s1" name="hadoop27">ozone-mr.hadoop27</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Createmrenv">ozone-mr.hadoop27.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="hadoopfs-ofs">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="hadoopfs-o3fs">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s4" name="mapreduce-ofs">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="mapreduce-o3fs">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat pass="8" fail="0" skip="0" id="s1-s2" name="hadoop31">ozone-mr.hadoop31</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s1" name="Createmrenv">ozone-mr.hadoop31.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="hadoopfs-ofs">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="hadoopfs-o3fs">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="mapreduce-ofs">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s5" name="mapreduce-o3fs">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat pass="8" fail="0" skip="0" id="s1-s3" name="hadoop32">ozone-mr.hadoop32</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s1" name="Createmrenv">ozone-mr.hadoop32.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s2" name="hadoopfs-ofs">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s3" name="hadoopfs-o3fs">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s4" name="mapreduce-ofs">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s5" name="mapreduce-o3fs">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
