<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210619 01:49:13.123" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:03:17.423" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:03:17.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:03:17.426" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:03:17.419" endtime="20210619 01:03:17.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:03:17.427" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:03:17.426" endtime="20210619 01:03:17.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:03:17.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:03:17.427" endtime="20210619 01:03:17.428"/>
</kw>
<status status="PASS" starttime="20210619 01:03:17.418" endtime="20210619 01:03:17.428"/>
</kw>
<msg timestamp="20210619 01:03:17.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:03:17.418" endtime="20210619 01:03:17.428"/>
</kw>
<msg timestamp="20210619 01:03:17.428" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210619 01:03:17.418" endtime="20210619 01:03:17.429"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:03:17.432" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:03:17.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:03:17.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:03:17.431" endtime="20210619 01:03:17.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:03:17.440" level="INFO"/>
<status status="PASS" starttime="20210619 01:03:17.440" endtime="20210619 01:03:17.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:03:17.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:03:17.441" endtime="20210619 01:03:17.441"/>
</kw>
<status status="PASS" starttime="20210619 01:03:17.430" endtime="20210619 01:03:17.442"/>
</kw>
<msg timestamp="20210619 01:03:17.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:03:17.430" endtime="20210619 01:03:17.442"/>
</kw>
<status status="PASS" starttime="20210619 01:03:17.429" endtime="20210619 01:03:17.442"/>
</kw>
<status status="PASS" starttime="20210619 01:03:17.429" endtime="20210619 01:03:17.442"/>
</kw>
<status status="PASS" starttime="20210619 01:03:17.417" endtime="20210619 01:03:17.442"/>
</kw>
<status status="PASS" starttime="20210619 01:03:17.416" endtime="20210619 01:03:17.442"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:03:17.446" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:03:17.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:03:17.560" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210619 01:03:17.444" endtime="20210619 01:03:17.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:03:17.561" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Sat, 19 Jun 2021 01:03:17 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCba9qeY92fCB/x72xGArMzDeRc/kmSUUsyXYt775lFrBzTcfrrOzD5aFfXRzEvEvMO72cjUlrAPklzeD5Rj1/OuFB
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1624100597549&amp;s=GbveFtie1n3o3g/8a+SyZCexKUc+EF4dhGKLEjNN21M="; Path=/; HttpOnly
Last-Modified: Sat, 19 Jun 2021 00:52:20 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210619 01:03:17.560" endtime="20210619 01:03:17.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:03:17.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:03:17.561" endtime="20210619 01:03:17.562"/>
</kw>
<status status="PASS" starttime="20210619 01:03:17.443" endtime="20210619 01:03:17.562"/>
</kw>
<msg timestamp="20210619 01:03:17.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:03:17.443" endtime="20210619 01:03:17.563"/>
</kw>
<msg timestamp="20210619 01:03:17.563" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210619 01:03:17.442" endtime="20210619 01:03:17.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:03:17.563" endtime="20210619 01:03:17.564"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:03:17.415" endtime="20210619 01:03:17.564"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:03:17.571" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:03:17.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:03:17.576" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:03:17.569" endtime="20210619 01:03:17.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:03:17.577" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:03:17.576" endtime="20210619 01:03:17.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:03:17.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:03:17.577" endtime="20210619 01:03:17.578"/>
</kw>
<status status="PASS" starttime="20210619 01:03:17.568" endtime="20210619 01:03:17.578"/>
</kw>
<msg timestamp="20210619 01:03:17.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:03:17.568" endtime="20210619 01:03:17.578"/>
</kw>
<msg timestamp="20210619 01:03:17.579" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:03:17.567" endtime="20210619 01:03:17.579"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:03:17.581" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:03:17.579" endtime="20210619 01:03:17.581"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:03:17.585" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:03:17.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:03:17.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:03:17.583" endtime="20210619 01:03:17.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:03:17.594" level="INFO"/>
<status status="PASS" starttime="20210619 01:03:17.593" endtime="20210619 01:03:17.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:03:17.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:03:17.594" endtime="20210619 01:03:17.595"/>
</kw>
<status status="PASS" starttime="20210619 01:03:17.582" endtime="20210619 01:03:17.595"/>
</kw>
<msg timestamp="20210619 01:03:17.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:03:17.582" endtime="20210619 01:03:17.596"/>
</kw>
<status status="PASS" starttime="20210619 01:03:17.581" endtime="20210619 01:03:17.596"/>
</kw>
<status status="PASS" starttime="20210619 01:03:17.581" endtime="20210619 01:03:17.596"/>
</kw>
<status status="PASS" starttime="20210619 01:03:17.567" endtime="20210619 01:03:17.597"/>
</kw>
<status status="PASS" starttime="20210619 01:03:17.566" endtime="20210619 01:03:17.597"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:03:17.601" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:11.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:11.403" level="INFO">${output} = 2021-06-19 01:03:19,421 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:03:19,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:03:17.599" endtime="20210619 01:04:11.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:11.405" level="INFO">2021-06-19 01:03:19,421 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:03:19,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:03:19,553 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-19 01:03:21,106 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2021-06-19 01:03:21,108 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2021-06-19 01:03:21,108 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2021-06-19 01:03:21,108 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2021-06-19 01:03:21,108 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2021-06-19 01:03:21,108 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2021-06-19 01:03:21,108 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2021-06-19 01:03:21,108 [main] INFO freon.RandomKeyGenerator: cleanObjects : false
2021-06-19 01:03:21,114 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2021-06-19 01:03:21,116 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2021-06-19 01:03:21,124 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-06-19 01:03:21,160 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-51285, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-06-19 01:03:21,383 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-76499, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-06-19 01:03:21,398 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-31975, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-06-19 01:03:21,406 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-25085, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-06-19 01:03:21,416 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-24180, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-06-19 01:03:21,437 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-51285/bucket-0-93112, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,527 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76499/bucket-0-21334, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,547 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-31975/bucket-0-91043, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,560 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-25085/bucket-0-02388, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,570 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-24180/bucket-0-21512, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,600 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-51285/bucket-1-89194, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,614 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76499/bucket-1-39661, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,627 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-31975/bucket-1-89241, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,636 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-25085/bucket-1-58784, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,645 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-24180/bucket-1-50322, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,657 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-51285/bucket-2-49843, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,667 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76499/bucket-2-00165, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,680 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-31975/bucket-2-67374, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,694 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-25085/bucket-2-80807, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,710 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-24180/bucket-2-17676, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,726 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-51285/bucket-3-32230, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,734 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76499/bucket-3-53729, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,743 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-31975/bucket-3-57457, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,749 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-25085/bucket-3-88086, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,763 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-24180/bucket-3-39380, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,779 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-51285/bucket-4-35410, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,805 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-76499/bucket-4-25538, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,814 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-31975/bucket-4-01774, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,820 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-25085/bucket-4-61462, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:21,829 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-24180/bucket-4-25845, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-19 01:03:22,129 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-06-19 01:03:22,785 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-06-19 01:03:23,034 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:03:23,035 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-F6D57F050504-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:03:23,037 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-19 01:03:23,130 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-06-19 01:03:24,130 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-06-19 01:03:25,130 [Thread-8] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-06-19 01:03:26,132 [Thread-8] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2021-06-19 01:03:27,139 [Thread-8] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2021-06-19 01:03:28,140 [Thread-8] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2021-06-19 01:03:29,140 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2021-06-19 01:03:30,141 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2021-06-19 01:03:31,141 [Thread-8] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2021-06-19 01:03:32,142 [Thread-8] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2021-06-19 01:03:33,142 [Thread-8] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2021-06-19 01:03:34,144 [Thread-8] INFO freon.ProgressBar: Progress: 16.80 % (21 out of 125)
2021-06-19 01:03:35,145 [Thread-8] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2021-06-19 01:03:36,145 [Thread-8] INFO freon.ProgressBar: Progress: 19.20 % (24 out of 125)
2021-06-19 01:03:37,145 [Thread-8] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2021-06-19 01:03:38,146 [Thread-8] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2021-06-19 01:03:39,146 [Thread-8] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2021-06-19 01:03:40,147 [Thread-8] INFO freon.ProgressBar: Progress: 24.00 % (30 out of 125)
2021-06-19 01:03:41,147 [Thread-8] INFO freon.ProgressBar: Progress: 32.00 % (40 out of 125)
2021-06-19 01:03:42,148 [Thread-8] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2021-06-19 01:03:43,148 [Thread-8] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2021-06-19 01:03:44,148 [Thread-8] INFO freon.ProgressBar: Progress: 36.80 % (46 out of 125)
2021-06-19 01:03:45,149 [Thread-8] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2021-06-19 01:03:46,150 [Thread-8] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2021-06-19 01:03:47,150 [Thread-8] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2021-06-19 01:03:48,150 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2021-06-19 01:03:49,151 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2021-06-19 01:03:50,151 [Thread-8] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2021-06-19 01:03:51,152 [Thread-8] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2021-06-19 01:03:52,152 [Thread-8] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2021-06-19 01:03:53,152 [Thread-8] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2021-06-19 01:03:54,153 [Thread-8] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2021-06-19 01:03:55,153 [Thread-8] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2021-06-19 01:03:56,154 [Thread-8] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2021-06-19 01:03:57,154 [Thread-8] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2021-06-19 01:03:58,155 [Thread-8] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2021-06-19 01:03:59,155 [Thread-8] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2021-06-19 01:04:00,155 [Thread-8] INFO freon.ProgressBar: Progress: 66.40 % (83 out of 125)
2021-06-19 01:04:01,156 [Thread-8] INFO freon.ProgressBar: Progress: 75.20 % (94 out of 125)
2021-06-19 01:04:02,157 [Thread-8] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2021-06-19 01:04:03,157 [Thread-8] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2021-06-19 01:04:04,158 [Thread-8] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2021-06-19 01:04:05,158 [Thread-8] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2021-06-19 01:04:06,158 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: 7a3bc90b05f257c8ace2f76d74264906f0f7a932
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,265
Average Time spent in bucket creation: 00:00:00,324
Average Time spent in key creation: 00:00:03,941
Average Time spent in key write: 00:00:00,903
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:51,307
***************************************************</msg>
<status status="PASS" starttime="20210619 01:04:11.404" endtime="20210619 01:04:11.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:11.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:11.405" endtime="20210619 01:04:11.406"/>
</kw>
<status status="PASS" starttime="20210619 01:03:17.598" endtime="20210619 01:04:11.406"/>
</kw>
<msg timestamp="20210619 01:04:11.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:03:17.597" endtime="20210619 01:04:11.406"/>
</kw>
<msg timestamp="20210619 01:04:11.407" level="INFO">${result} = 2021-06-19 01:03:19,421 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:03:19,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:03:17.597" endtime="20210619 01:04:11.407"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:04:11.407" endtime="20210619 01:04:11.408"/>
</kw>
<status status="PASS" starttime="20210619 01:04:11.407" endtime="20210619 01:04:11.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:04:11.408" endtime="20210619 01:04:11.408"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:03:17.565" endtime="20210619 01:04:11.409"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210619 01:03:17.379" endtime="20210619 01:04:11.410"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:11.419" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:12.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:12.818" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210619 01:04:11.418" endtime="20210619 01:04:12.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:12.819" level="INFO">om</msg>
<status status="PASS" starttime="20210619 01:04:12.818" endtime="20210619 01:04:12.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:12.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:12.820" endtime="20210619 01:04:12.820"/>
</kw>
<status status="PASS" starttime="20210619 01:04:11.417" endtime="20210619 01:04:12.820"/>
</kw>
<msg timestamp="20210619 01:04:12.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:11.416" endtime="20210619 01:04:12.821"/>
</kw>
<msg timestamp="20210619 01:04:12.821" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210619 01:04:11.416" endtime="20210619 01:04:12.821"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:04:12.821" endtime="20210619 01:04:12.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:12.825" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:14.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:14.189" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210619 01:04:12.823" endtime="20210619 01:04:14.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:14.190" level="INFO">om</msg>
<status status="PASS" starttime="20210619 01:04:14.189" endtime="20210619 01:04:14.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:14.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:14.191" endtime="20210619 01:04:14.191"/>
</kw>
<status status="PASS" starttime="20210619 01:04:12.823" endtime="20210619 01:04:14.192"/>
</kw>
<msg timestamp="20210619 01:04:14.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:12.822" endtime="20210619 01:04:14.192"/>
</kw>
<msg timestamp="20210619 01:04:14.192" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210619 01:04:12.822" endtime="20210619 01:04:14.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:04:14.192" endtime="20210619 01:04:14.193"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:04:11.415" endtime="20210619 01:04:14.193"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:14.198" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:15.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:15.566" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:04:14.197" endtime="20210619 01:04:15.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:15.567" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:04:15.567" endtime="20210619 01:04:15.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:15.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:15.568" endtime="20210619 01:04:15.568"/>
</kw>
<status status="PASS" starttime="20210619 01:04:14.196" endtime="20210619 01:04:15.568"/>
</kw>
<msg timestamp="20210619 01:04:15.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:14.196" endtime="20210619 01:04:15.569"/>
</kw>
<msg timestamp="20210619 01:04:15.569" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210619 01:04:14.195" endtime="20210619 01:04:15.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:04:15.569" endtime="20210619 01:04:15.570"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:15.573" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:16.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:16.989" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:04:15.571" endtime="20210619 01:04:16.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:16.990" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:04:16.989" endtime="20210619 01:04:16.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:16.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:16.990" endtime="20210619 01:04:16.991"/>
</kw>
<status status="PASS" starttime="20210619 01:04:15.571" endtime="20210619 01:04:16.991"/>
</kw>
<msg timestamp="20210619 01:04:16.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:15.570" endtime="20210619 01:04:16.991"/>
</kw>
<msg timestamp="20210619 01:04:16.994" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210619 01:04:15.570" endtime="20210619 01:04:16.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:04:16.994" endtime="20210619 01:04:16.994"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:04:14.194" endtime="20210619 01:04:16.995"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:17.000" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:18.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:18.233" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210619 01:04:16.998" endtime="20210619 01:04:18.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:18.234" level="INFO">om</msg>
<status status="PASS" starttime="20210619 01:04:18.233" endtime="20210619 01:04:18.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:18.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:18.235" endtime="20210619 01:04:18.235"/>
</kw>
<status status="PASS" starttime="20210619 01:04:16.997" endtime="20210619 01:04:18.236"/>
</kw>
<msg timestamp="20210619 01:04:18.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:16.997" endtime="20210619 01:04:18.236"/>
</kw>
<msg timestamp="20210619 01:04:18.236" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210619 01:04:16.996" endtime="20210619 01:04:18.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:04:18.237" endtime="20210619 01:04:18.237"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:04:18.237" endtime="20210619 01:04:18.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:18.241" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:19.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:19.566" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210619 01:04:18.239" endtime="20210619 01:04:19.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:19.568" level="INFO">om</msg>
<status status="PASS" starttime="20210619 01:04:19.567" endtime="20210619 01:04:19.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:19.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:19.568" endtime="20210619 01:04:19.568"/>
</kw>
<status status="PASS" starttime="20210619 01:04:18.239" endtime="20210619 01:04:19.569"/>
</kw>
<msg timestamp="20210619 01:04:19.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:18.239" endtime="20210619 01:04:19.569"/>
</kw>
<msg timestamp="20210619 01:04:19.569" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210619 01:04:18.238" endtime="20210619 01:04:19.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:04:19.570" endtime="20210619 01:04:19.570"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:04:19.570" endtime="20210619 01:04:19.571"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:04:16.995" endtime="20210619 01:04:19.571"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:19.575" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:20.894" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:04:20.894" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210619 01:04:19.573" endtime="20210619 01:04:20.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:20.896" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210619 01:04:20.895" endtime="20210619 01:04:20.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:20.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:20.896" endtime="20210619 01:04:20.897"/>
</kw>
<msg timestamp="20210619 01:04:20.897" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210619 01:04:19.573" endtime="20210619 01:04:20.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:04:20.897" endtime="20210619 01:04:20.898"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:20.900" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:22.270" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:04:22.270" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210619 01:04:20.899" endtime="20210619 01:04:22.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:22.271" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210619 01:04:22.270" endtime="20210619 01:04:22.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:22.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:22.271" endtime="20210619 01:04:22.272"/>
</kw>
<msg timestamp="20210619 01:04:22.272" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210619 01:04:20.898" endtime="20210619 01:04:22.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:04:22.273" endtime="20210619 01:04:22.273"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:04:19.572" endtime="20210619 01:04:22.273"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210619 01:04:11.411" endtime="20210619 01:04:22.274"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:04:22.289" level="INFO">${random} = 48644</msg>
<status status="PASS" starttime="20210619 01:04:22.289" endtime="20210619 01:04:22.289"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:04:22.291" level="INFO">${source} = 48644-source</msg>
<status status="PASS" starttime="20210619 01:04:22.289" endtime="20210619 01:04:22.291"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:04:22.293" level="INFO">${target} = 48644-target</msg>
<status status="PASS" starttime="20210619 01:04:22.291" endtime="20210619 01:04:22.293"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:22.296" level="INFO">Running command 'ozone sh volume create 48644-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:26.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:26.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:04:22.294" endtime="20210619 01:04:26.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:26.015" level="INFO"/>
<status status="PASS" starttime="20210619 01:04:26.015" endtime="20210619 01:04:26.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:26.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:26.016" endtime="20210619 01:04:26.016"/>
</kw>
<status status="PASS" starttime="20210619 01:04:22.294" endtime="20210619 01:04:26.017"/>
</kw>
<msg timestamp="20210619 01:04:26.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:22.293" endtime="20210619 01:04:26.017"/>
</kw>
<status status="PASS" starttime="20210619 01:04:22.293" endtime="20210619 01:04:26.017"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:26.021" level="INFO">Running command 'ozone sh volume create 48644-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:29.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:29.553" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:04:26.019" endtime="20210619 01:04:29.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:29.554" level="INFO"/>
<status status="PASS" starttime="20210619 01:04:29.554" endtime="20210619 01:04:29.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:29.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:29.554" endtime="20210619 01:04:29.555"/>
</kw>
<status status="PASS" starttime="20210619 01:04:26.018" endtime="20210619 01:04:29.555"/>
</kw>
<msg timestamp="20210619 01:04:29.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:26.018" endtime="20210619 01:04:29.556"/>
</kw>
<status status="PASS" starttime="20210619 01:04:26.017" endtime="20210619 01:04:29.556"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:29.560" level="INFO">Running command 'ozone sh bucket create 48644-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:33.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:33.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:04:29.558" endtime="20210619 01:04:33.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:33.196" level="INFO"/>
<status status="PASS" starttime="20210619 01:04:33.195" endtime="20210619 01:04:33.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:33.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:33.196" endtime="20210619 01:04:33.197"/>
</kw>
<status status="PASS" starttime="20210619 01:04:29.558" endtime="20210619 01:04:33.197"/>
</kw>
<msg timestamp="20210619 01:04:33.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:29.558" endtime="20210619 01:04:33.197"/>
</kw>
<status status="PASS" starttime="20210619 01:04:29.557" endtime="20210619 01:04:33.197"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:33.201" level="INFO">Running command 'ozone sh key put 48644-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:38.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:38.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:04:33.199" endtime="20210619 01:04:38.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:38.957" level="INFO"/>
<status status="PASS" starttime="20210619 01:04:38.957" endtime="20210619 01:04:38.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:38.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:38.958" endtime="20210619 01:04:38.960"/>
</kw>
<status status="PASS" starttime="20210619 01:04:33.199" endtime="20210619 01:04:38.960"/>
</kw>
<msg timestamp="20210619 01:04:38.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:33.198" endtime="20210619 01:04:38.960"/>
</kw>
<status status="PASS" starttime="20210619 01:04:33.198" endtime="20210619 01:04:38.960"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:38.964" level="INFO">Running command 'ozone sh bucket create 48644-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:42.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:42.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:04:38.962" endtime="20210619 01:04:42.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:42.486" level="INFO"/>
<status status="PASS" starttime="20210619 01:04:42.485" endtime="20210619 01:04:42.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:42.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:42.486" endtime="20210619 01:04:42.487"/>
</kw>
<status status="PASS" starttime="20210619 01:04:38.961" endtime="20210619 01:04:42.487"/>
</kw>
<msg timestamp="20210619 01:04:42.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:38.961" endtime="20210619 01:04:42.487"/>
</kw>
<status status="PASS" starttime="20210619 01:04:38.961" endtime="20210619 01:04:42.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:42.491" level="INFO">Running command 'ozone sh bucket link 48644-source/readable-bucket 48644-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:46.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:46.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:04:42.489" endtime="20210619 01:04:46.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:46.046" level="INFO"/>
<status status="PASS" starttime="20210619 01:04:46.045" endtime="20210619 01:04:46.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:46.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:46.046" endtime="20210619 01:04:46.047"/>
</kw>
<status status="PASS" starttime="20210619 01:04:42.489" endtime="20210619 01:04:46.047"/>
</kw>
<msg timestamp="20210619 01:04:46.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:42.488" endtime="20210619 01:04:46.048"/>
</kw>
<status status="PASS" starttime="20210619 01:04:42.488" endtime="20210619 01:04:46.048"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:46.051" level="INFO">Running command 'ozone sh bucket link 48644-source/readable-bucket 48644-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:49.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:49.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:04:46.050" endtime="20210619 01:04:49.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:49.650" level="INFO"/>
<status status="PASS" starttime="20210619 01:04:49.650" endtime="20210619 01:04:49.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:49.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:49.651" endtime="20210619 01:04:49.651"/>
</kw>
<status status="PASS" starttime="20210619 01:04:46.049" endtime="20210619 01:04:49.652"/>
</kw>
<msg timestamp="20210619 01:04:49.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:46.049" endtime="20210619 01:04:49.652"/>
</kw>
<status status="PASS" starttime="20210619 01:04:46.048" endtime="20210619 01:04:49.652"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:49.657" level="INFO">Running command 'ozone sh bucket link 48644-source/unreadable-bucket 48644-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:53.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:53.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:04:49.654" endtime="20210619 01:04:53.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:53.649" level="INFO"/>
<status status="PASS" starttime="20210619 01:04:53.649" endtime="20210619 01:04:53.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:53.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:53.650" endtime="20210619 01:04:53.650"/>
</kw>
<status status="PASS" starttime="20210619 01:04:49.653" endtime="20210619 01:04:53.651"/>
</kw>
<msg timestamp="20210619 01:04:53.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:49.653" endtime="20210619 01:04:53.651"/>
</kw>
<status status="PASS" starttime="20210619 01:04:49.652" endtime="20210619 01:04:53.651"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:53.655" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 48644-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:04:57.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:04:57.170" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:04:53.653" endtime="20210619 01:04:57.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:04:57.171" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:04:57.170" endtime="20210619 01:04:57.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:04:57.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:04:57.171" endtime="20210619 01:04:57.172"/>
</kw>
<status status="PASS" starttime="20210619 01:04:53.652" endtime="20210619 01:04:57.172"/>
</kw>
<msg timestamp="20210619 01:04:57.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:53.652" endtime="20210619 01:04:57.172"/>
</kw>
<status status="PASS" starttime="20210619 01:04:53.651" endtime="20210619 01:04:57.173"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:04:57.176" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 48644-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:00.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:00.849" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:04:57.174" endtime="20210619 01:05:00.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:00.850" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:05:00.850" endtime="20210619 01:05:00.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:00.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:00.851" endtime="20210619 01:05:00.851"/>
</kw>
<status status="PASS" starttime="20210619 01:04:57.174" endtime="20210619 01:05:00.851"/>
</kw>
<msg timestamp="20210619 01:05:00.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:04:57.173" endtime="20210619 01:05:00.852"/>
</kw>
<status status="PASS" starttime="20210619 01:04:57.173" endtime="20210619 01:05:00.852"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:00.855" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 48644-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:04.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:04.459" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:05:00.854" endtime="20210619 01:05:04.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:04.460" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:05:04.459" endtime="20210619 01:05:04.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:04.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:04.460" endtime="20210619 01:05:04.461"/>
</kw>
<status status="PASS" starttime="20210619 01:05:00.853" endtime="20210619 01:05:04.461"/>
</kw>
<msg timestamp="20210619 01:05:04.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:00.853" endtime="20210619 01:05:04.461"/>
</kw>
<status status="PASS" starttime="20210619 01:05:00.852" endtime="20210619 01:05:04.461"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:04.465" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 48644-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:08.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:08.015" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:05:04.463" endtime="20210619 01:05:08.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:08.016" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:05:08.015" endtime="20210619 01:05:08.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:08.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:08.016" endtime="20210619 01:05:08.017"/>
</kw>
<status status="PASS" starttime="20210619 01:05:04.463" endtime="20210619 01:05:08.017"/>
</kw>
<msg timestamp="20210619 01:05:08.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:04.462" endtime="20210619 01:05:08.018"/>
</kw>
<status status="PASS" starttime="20210619 01:05:04.462" endtime="20210619 01:05:08.018"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:08.021" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 48644-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:11.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:11.551" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:05:08.019" endtime="20210619 01:05:11.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:11.552" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:05:11.552" endtime="20210619 01:05:11.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:11.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:11.553" endtime="20210619 01:05:11.553"/>
</kw>
<status status="PASS" starttime="20210619 01:05:08.019" endtime="20210619 01:05:11.553"/>
</kw>
<msg timestamp="20210619 01:05:11.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:08.019" endtime="20210619 01:05:11.554"/>
</kw>
<status status="PASS" starttime="20210619 01:05:08.018" endtime="20210619 01:05:11.554"/>
</kw>
<status status="PASS" starttime="20210619 01:04:29.556" endtime="20210619 01:05:11.554"/>
</kw>
<status status="PASS" starttime="20210619 01:04:29.556" endtime="20210619 01:05:11.554"/>
</kw>
<status status="PASS" starttime="20210619 01:04:22.288" endtime="20210619 01:05:11.554"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:11.560" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:11.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:11.563" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:05:11.558" endtime="20210619 01:05:11.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:11.564" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:05:11.564" endtime="20210619 01:05:11.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:11.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:11.565" endtime="20210619 01:05:11.565"/>
</kw>
<status status="PASS" starttime="20210619 01:05:11.558" endtime="20210619 01:05:11.566"/>
</kw>
<msg timestamp="20210619 01:05:11.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:11.557" endtime="20210619 01:05:11.566"/>
</kw>
<msg timestamp="20210619 01:05:11.566" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:05:11.557" endtime="20210619 01:05:11.566"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:05:11.569" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:05:11.567" endtime="20210619 01:05:11.569"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:11.573" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:11.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:11.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:11.571" endtime="20210619 01:05:11.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:11.580" level="INFO"/>
<status status="PASS" starttime="20210619 01:05:11.580" endtime="20210619 01:05:11.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:11.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:11.581" endtime="20210619 01:05:11.581"/>
</kw>
<status status="PASS" starttime="20210619 01:05:11.570" endtime="20210619 01:05:11.582"/>
</kw>
<msg timestamp="20210619 01:05:11.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:11.570" endtime="20210619 01:05:11.582"/>
</kw>
<status status="PASS" starttime="20210619 01:05:11.569" endtime="20210619 01:05:11.582"/>
</kw>
<status status="PASS" starttime="20210619 01:05:11.569" endtime="20210619 01:05:11.582"/>
</kw>
<status status="PASS" starttime="20210619 01:05:11.556" endtime="20210619 01:05:11.582"/>
</kw>
<status status="PASS" starttime="20210619 01:05:11.556" endtime="20210619 01:05:11.582"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:11.586" level="INFO">Running command 'ozone sh bucket link 48644-source/no-such-bucket 48644-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:15.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:15.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:11.584" endtime="20210619 01:05:15.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:15.304" level="INFO"/>
<status status="PASS" starttime="20210619 01:05:15.304" endtime="20210619 01:05:15.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:15.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:15.305" endtime="20210619 01:05:15.305"/>
</kw>
<status status="PASS" starttime="20210619 01:05:11.584" endtime="20210619 01:05:15.306"/>
</kw>
<msg timestamp="20210619 01:05:15.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:11.583" endtime="20210619 01:05:15.306"/>
</kw>
<status status="PASS" starttime="20210619 01:05:11.583" endtime="20210619 01:05:15.306"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:15.309" level="INFO">Running command 'ozone sh key list 48644-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:18.824" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:05:18.825" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210619 01:05:15.307" endtime="20210619 01:05:18.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:18.826" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210619 01:05:18.825" endtime="20210619 01:05:18.826"/>
</kw>
<msg timestamp="20210619 01:05:18.826" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210619 01:05:15.307" endtime="20210619 01:05:18.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:05:18.827" endtime="20210619 01:05:18.827"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:05:11.555" endtime="20210619 01:05:18.827"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:18.833" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:18.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:18.836" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:05:18.832" endtime="20210619 01:05:18.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:18.838" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:05:18.837" endtime="20210619 01:05:18.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:18.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:18.838" endtime="20210619 01:05:18.839"/>
</kw>
<status status="PASS" starttime="20210619 01:05:18.831" endtime="20210619 01:05:18.839"/>
</kw>
<msg timestamp="20210619 01:05:18.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:18.831" endtime="20210619 01:05:18.839"/>
</kw>
<msg timestamp="20210619 01:05:18.839" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:05:18.830" endtime="20210619 01:05:18.839"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:05:18.840" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:05:18.840" endtime="20210619 01:05:18.840"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:18.844" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:18.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:18.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:18.843" endtime="20210619 01:05:18.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:18.852" level="INFO"/>
<status status="PASS" starttime="20210619 01:05:18.852" endtime="20210619 01:05:18.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:18.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:18.853" endtime="20210619 01:05:18.853"/>
</kw>
<status status="PASS" starttime="20210619 01:05:18.842" endtime="20210619 01:05:18.854"/>
</kw>
<msg timestamp="20210619 01:05:18.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:18.842" endtime="20210619 01:05:18.854"/>
</kw>
<status status="PASS" starttime="20210619 01:05:18.841" endtime="20210619 01:05:18.854"/>
</kw>
<status status="PASS" starttime="20210619 01:05:18.840" endtime="20210619 01:05:18.854"/>
</kw>
<status status="PASS" starttime="20210619 01:05:18.829" endtime="20210619 01:05:18.854"/>
</kw>
<status status="PASS" starttime="20210619 01:05:18.829" endtime="20210619 01:05:18.855"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:18.858" level="INFO">Running command 'ozone sh bucket link 48644-source/bucket1 48644-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:22.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:22.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:18.856" endtime="20210619 01:05:22.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:22.413" level="INFO"/>
<status status="PASS" starttime="20210619 01:05:22.412" endtime="20210619 01:05:22.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:22.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:22.413" endtime="20210619 01:05:22.414"/>
</kw>
<status status="PASS" starttime="20210619 01:05:18.856" endtime="20210619 01:05:22.414"/>
</kw>
<msg timestamp="20210619 01:05:22.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:18.855" endtime="20210619 01:05:22.414"/>
</kw>
<status status="PASS" starttime="20210619 01:05:18.855" endtime="20210619 01:05:22.415"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:22.418" level="INFO">Running command 'ozone sh bucket create 48644-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:26.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:26.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:22.417" endtime="20210619 01:05:26.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:26.222" level="INFO"/>
<status status="PASS" starttime="20210619 01:05:26.221" endtime="20210619 01:05:26.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:26.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:26.222" endtime="20210619 01:05:26.223"/>
</kw>
<status status="PASS" starttime="20210619 01:05:22.416" endtime="20210619 01:05:26.223"/>
</kw>
<msg timestamp="20210619 01:05:26.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:22.416" endtime="20210619 01:05:26.223"/>
</kw>
<status status="PASS" starttime="20210619 01:05:22.415" endtime="20210619 01:05:26.223"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:26.227" level="INFO">Running command 'ozone sh key put 48644-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:32.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:32.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:26.226" endtime="20210619 01:05:32.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:32.218" level="INFO"/>
<status status="PASS" starttime="20210619 01:05:32.218" endtime="20210619 01:05:32.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:32.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:32.219" endtime="20210619 01:05:32.219"/>
</kw>
<status status="PASS" starttime="20210619 01:05:26.225" endtime="20210619 01:05:32.220"/>
</kw>
<msg timestamp="20210619 01:05:32.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:26.224" endtime="20210619 01:05:32.220"/>
</kw>
<status status="PASS" starttime="20210619 01:05:26.224" endtime="20210619 01:05:32.220"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:05:32.222" level="INFO">${postfix} = 76610</msg>
<status status="PASS" starttime="20210619 01:05:32.222" endtime="20210619 01:05:32.222"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:05:32.223" level="INFO">${tmpfile} = /tmp/tempkey-76610</msg>
<status status="PASS" starttime="20210619 01:05:32.223" endtime="20210619 01:05:32.223"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:32.227" level="INFO">Running command 'ozone sh key get 48644-target/link1/key1 /tmp/tempkey-76610 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:37.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:37.653" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:32.225" endtime="20210619 01:05:37.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:37.654" level="INFO"/>
<status status="PASS" starttime="20210619 01:05:37.654" endtime="20210619 01:05:37.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:37.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:37.655" endtime="20210619 01:05:37.655"/>
</kw>
<status status="PASS" starttime="20210619 01:05:32.224" endtime="20210619 01:05:37.656"/>
</kw>
<msg timestamp="20210619 01:05:37.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:32.224" endtime="20210619 01:05:37.656"/>
</kw>
<status status="PASS" starttime="20210619 01:05:32.223" endtime="20210619 01:05:37.656"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210619 01:05:37.658" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-76610 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:37.662" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210619 01:05:37.656" endtime="20210619 01:05:37.662"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:37.666" level="INFO">Running command 'rm -f /tmp/tempkey-76610 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:37.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:37.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:37.664" endtime="20210619 01:05:37.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:37.669" level="INFO"/>
<status status="PASS" starttime="20210619 01:05:37.668" endtime="20210619 01:05:37.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:37.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:37.669" endtime="20210619 01:05:37.670"/>
</kw>
<status status="PASS" starttime="20210619 01:05:37.663" endtime="20210619 01:05:37.670"/>
</kw>
<msg timestamp="20210619 01:05:37.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:37.663" endtime="20210619 01:05:37.670"/>
</kw>
<status status="PASS" starttime="20210619 01:05:37.662" endtime="20210619 01:05:37.671"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:05:37.671" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210619 01:05:37.671" endtime="20210619 01:05:37.671"/>
</kw>
<msg timestamp="20210619 01:05:37.672" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210619 01:05:32.221" endtime="20210619 01:05:37.672"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210619 01:05:37.672" endtime="20210619 01:05:37.672"/>
</kw>
<status status="PASS" starttime="20210619 01:05:32.220" endtime="20210619 01:05:37.673"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:05:18.828" endtime="20210619 01:05:37.673"/>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:37.679" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:37.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:37.682" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:05:37.677" endtime="20210619 01:05:37.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:37.683" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:05:37.682" endtime="20210619 01:05:37.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:37.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:37.683" endtime="20210619 01:05:37.684"/>
</kw>
<status status="PASS" starttime="20210619 01:05:37.676" endtime="20210619 01:05:37.684"/>
</kw>
<msg timestamp="20210619 01:05:37.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:37.676" endtime="20210619 01:05:37.684"/>
</kw>
<msg timestamp="20210619 01:05:37.685" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:05:37.676" endtime="20210619 01:05:37.685"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:05:37.685" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:05:37.685" endtime="20210619 01:05:37.686"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:37.690" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:37.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:37.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:37.688" endtime="20210619 01:05:37.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:37.698" level="INFO"/>
<status status="PASS" starttime="20210619 01:05:37.697" endtime="20210619 01:05:37.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:37.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:37.698" endtime="20210619 01:05:37.699"/>
</kw>
<status status="PASS" starttime="20210619 01:05:37.687" endtime="20210619 01:05:37.699"/>
</kw>
<msg timestamp="20210619 01:05:37.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:37.687" endtime="20210619 01:05:37.699"/>
</kw>
<status status="PASS" starttime="20210619 01:05:37.686" endtime="20210619 01:05:37.700"/>
</kw>
<status status="PASS" starttime="20210619 01:05:37.686" endtime="20210619 01:05:37.700"/>
</kw>
<status status="PASS" starttime="20210619 01:05:37.675" endtime="20210619 01:05:37.700"/>
</kw>
<status status="PASS" starttime="20210619 01:05:37.675" endtime="20210619 01:05:37.700"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:37.703" level="INFO">Running command 'ozone sh key put 48644-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:43.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:43.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:37.702" endtime="20210619 01:05:43.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:43.374" level="INFO"/>
<status status="PASS" starttime="20210619 01:05:43.373" endtime="20210619 01:05:43.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:43.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:43.374" endtime="20210619 01:05:43.375"/>
</kw>
<status status="PASS" starttime="20210619 01:05:37.701" endtime="20210619 01:05:43.375"/>
</kw>
<msg timestamp="20210619 01:05:43.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:37.701" endtime="20210619 01:05:43.376"/>
</kw>
<status status="PASS" starttime="20210619 01:05:37.700" endtime="20210619 01:05:43.376"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:05:43.378" level="INFO">${postfix} = 73946</msg>
<status status="PASS" starttime="20210619 01:05:43.377" endtime="20210619 01:05:43.378"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:05:43.379" level="INFO">${tmpfile} = /tmp/tempkey-73946</msg>
<status status="PASS" starttime="20210619 01:05:43.378" endtime="20210619 01:05:43.379"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:43.382" level="INFO">Running command 'ozone sh key get 48644-source/bucket1/key2 /tmp/tempkey-73946 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:48.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:48.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:43.380" endtime="20210619 01:05:48.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:48.957" level="INFO"/>
<status status="PASS" starttime="20210619 01:05:48.957" endtime="20210619 01:05:48.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:48.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:48.958" endtime="20210619 01:05:48.958"/>
</kw>
<status status="PASS" starttime="20210619 01:05:43.380" endtime="20210619 01:05:48.959"/>
</kw>
<msg timestamp="20210619 01:05:48.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:43.379" endtime="20210619 01:05:48.959"/>
</kw>
<status status="PASS" starttime="20210619 01:05:43.379" endtime="20210619 01:05:48.959"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210619 01:05:48.961" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-73946 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:48.964" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210619 01:05:48.959" endtime="20210619 01:05:48.964"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:48.968" level="INFO">Running command 'rm -f /tmp/tempkey-73946 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:48.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:48.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:48.967" endtime="20210619 01:05:48.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:48.976" level="INFO"/>
<status status="PASS" starttime="20210619 01:05:48.975" endtime="20210619 01:05:48.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:48.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:48.976" endtime="20210619 01:05:48.977"/>
</kw>
<status status="PASS" starttime="20210619 01:05:48.966" endtime="20210619 01:05:48.977"/>
</kw>
<msg timestamp="20210619 01:05:48.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:48.966" endtime="20210619 01:05:48.977"/>
</kw>
<status status="PASS" starttime="20210619 01:05:48.964" endtime="20210619 01:05:48.978"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:05:48.978" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210619 01:05:48.978" endtime="20210619 01:05:48.979"/>
</kw>
<msg timestamp="20210619 01:05:48.979" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210619 01:05:43.377" endtime="20210619 01:05:48.979"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210619 01:05:48.979" endtime="20210619 01:05:48.980"/>
</kw>
<status status="PASS" starttime="20210619 01:05:43.376" endtime="20210619 01:05:48.980"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:05:37.674" endtime="20210619 01:05:48.980"/>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:48.986" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:48.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:48.989" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:05:48.984" endtime="20210619 01:05:48.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:48.990" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:05:48.989" endtime="20210619 01:05:48.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:48.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:48.990" endtime="20210619 01:05:48.991"/>
</kw>
<status status="PASS" starttime="20210619 01:05:48.983" endtime="20210619 01:05:48.991"/>
</kw>
<msg timestamp="20210619 01:05:48.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:48.983" endtime="20210619 01:05:48.991"/>
</kw>
<msg timestamp="20210619 01:05:48.992" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:05:48.983" endtime="20210619 01:05:48.992"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:05:48.993" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:05:48.992" endtime="20210619 01:05:48.993"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:48.997" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:49.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:49.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:48.995" endtime="20210619 01:05:49.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:49.005" level="INFO"/>
<status status="PASS" starttime="20210619 01:05:49.005" endtime="20210619 01:05:49.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:49.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:49.006" endtime="20210619 01:05:49.006"/>
</kw>
<status status="PASS" starttime="20210619 01:05:48.994" endtime="20210619 01:05:49.007"/>
</kw>
<msg timestamp="20210619 01:05:49.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:48.994" endtime="20210619 01:05:49.007"/>
</kw>
<status status="PASS" starttime="20210619 01:05:48.993" endtime="20210619 01:05:49.007"/>
</kw>
<status status="PASS" starttime="20210619 01:05:48.993" endtime="20210619 01:05:49.007"/>
</kw>
<status status="PASS" starttime="20210619 01:05:48.982" endtime="20210619 01:05:49.007"/>
</kw>
<status status="PASS" starttime="20210619 01:05:48.982" endtime="20210619 01:05:49.007"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:49.011" level="INFO">Running command 'ozone sh key list 48644-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:52.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:52.838" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210619 01:05:49.009" endtime="20210619 01:05:52.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:52.840" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210619 01:05:52.839" endtime="20210619 01:05:52.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:52.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:52.840" endtime="20210619 01:05:52.841"/>
</kw>
<status status="PASS" starttime="20210619 01:05:49.009" endtime="20210619 01:05:52.841"/>
</kw>
<msg timestamp="20210619 01:05:52.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:49.008" endtime="20210619 01:05:52.841"/>
</kw>
<msg timestamp="20210619 01:05:52.842" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20210619 01:05:49.008" endtime="20210619 01:05:52.842"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:52.845" level="INFO">Running command 'ozone sh key list 48644-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:56.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:56.950" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210619 01:05:52.843" endtime="20210619 01:05:56.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:56.951" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210619 01:05:56.951" endtime="20210619 01:05:56.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:56.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:56.952" endtime="20210619 01:05:56.952"/>
</kw>
<status status="PASS" starttime="20210619 01:05:52.843" endtime="20210619 01:05:56.953"/>
</kw>
<msg timestamp="20210619 01:05:56.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:52.843" endtime="20210619 01:05:56.953"/>
</kw>
<msg timestamp="20210619 01:05:56.953" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210619 01:05:52.842" endtime="20210619 01:05:56.953"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:05:56.954" endtime="20210619 01:05:56.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:05:56.954" endtime="20210619 01:05:56.955"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:05:56.955" endtime="20210619 01:05:56.955"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:05:48.981" endtime="20210619 01:05:56.956"/>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:56.961" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:56.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:56.964" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:05:56.959" endtime="20210619 01:05:56.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:56.966" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:05:56.965" endtime="20210619 01:05:56.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:56.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:56.966" endtime="20210619 01:05:56.967"/>
</kw>
<status status="PASS" starttime="20210619 01:05:56.959" endtime="20210619 01:05:56.967"/>
</kw>
<msg timestamp="20210619 01:05:56.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:56.958" endtime="20210619 01:05:56.967"/>
</kw>
<msg timestamp="20210619 01:05:56.967" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:05:56.958" endtime="20210619 01:05:56.968"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:05:56.968" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:05:56.968" endtime="20210619 01:05:56.968"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:56.973" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:05:56.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:05:56.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:56.971" endtime="20210619 01:05:56.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:05:56.981" level="INFO"/>
<status status="PASS" starttime="20210619 01:05:56.980" endtime="20210619 01:05:56.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:05:56.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:05:56.981" endtime="20210619 01:05:56.982"/>
</kw>
<status status="PASS" starttime="20210619 01:05:56.970" endtime="20210619 01:05:56.982"/>
</kw>
<msg timestamp="20210619 01:05:56.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:56.970" endtime="20210619 01:05:56.982"/>
</kw>
<status status="PASS" starttime="20210619 01:05:56.969" endtime="20210619 01:05:56.982"/>
</kw>
<status status="PASS" starttime="20210619 01:05:56.969" endtime="20210619 01:05:56.982"/>
</kw>
<status status="PASS" starttime="20210619 01:05:56.957" endtime="20210619 01:05:56.983"/>
</kw>
<status status="PASS" starttime="20210619 01:05:56.957" endtime="20210619 01:05:56.983"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:05:56.986" level="INFO">Running command 'ozone sh key delete 48644-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:00.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:00.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:05:56.985" endtime="20210619 01:06:00.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:00.588" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:00.587" endtime="20210619 01:06:00.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:00.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:00.589" endtime="20210619 01:06:00.589"/>
</kw>
<status status="PASS" starttime="20210619 01:05:56.984" endtime="20210619 01:06:00.590"/>
</kw>
<msg timestamp="20210619 01:06:00.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:05:56.984" endtime="20210619 01:06:00.590"/>
</kw>
<status status="PASS" starttime="20210619 01:05:56.983" endtime="20210619 01:06:00.591"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:00.595" level="INFO">Running command 'ozone sh key list 48644-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:04.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:04.480" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210619 01:06:00.592" endtime="20210619 01:06:04.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:04.482" level="INFO">key1</msg>
<status status="PASS" starttime="20210619 01:06:04.481" endtime="20210619 01:06:04.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:04.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:04.482" endtime="20210619 01:06:04.482"/>
</kw>
<status status="PASS" starttime="20210619 01:06:00.592" endtime="20210619 01:06:04.483"/>
</kw>
<msg timestamp="20210619 01:06:04.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:00.591" endtime="20210619 01:06:04.483"/>
</kw>
<msg timestamp="20210619 01:06:04.483" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210619 01:06:00.591" endtime="20210619 01:06:04.483"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:06:04.484" endtime="20210619 01:06:04.484"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:05:56.956" endtime="20210619 01:06:04.484"/>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:04.490" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:04.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:04.493" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:06:04.488" endtime="20210619 01:06:04.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:04.494" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:06:04.494" endtime="20210619 01:06:04.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:04.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:04.495" endtime="20210619 01:06:04.495"/>
</kw>
<status status="PASS" starttime="20210619 01:06:04.488" endtime="20210619 01:06:04.496"/>
</kw>
<msg timestamp="20210619 01:06:04.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:04.488" endtime="20210619 01:06:04.496"/>
</kw>
<msg timestamp="20210619 01:06:04.496" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:06:04.487" endtime="20210619 01:06:04.496"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:06:04.497" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:06:04.496" endtime="20210619 01:06:04.497"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:04.502" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:04.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:04.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:04.500" endtime="20210619 01:06:04.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:04.509" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:04.509" endtime="20210619 01:06:04.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:04.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:04.510" endtime="20210619 01:06:04.510"/>
</kw>
<status status="PASS" starttime="20210619 01:06:04.499" endtime="20210619 01:06:04.511"/>
</kw>
<msg timestamp="20210619 01:06:04.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:04.499" endtime="20210619 01:06:04.511"/>
</kw>
<status status="PASS" starttime="20210619 01:06:04.498" endtime="20210619 01:06:04.511"/>
</kw>
<status status="PASS" starttime="20210619 01:06:04.497" endtime="20210619 01:06:04.511"/>
</kw>
<status status="PASS" starttime="20210619 01:06:04.487" endtime="20210619 01:06:04.511"/>
</kw>
<status status="PASS" starttime="20210619 01:06:04.486" endtime="20210619 01:06:04.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:04.515" level="INFO">Running command 'ozone sh bucket list 48644-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:08.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:08.293" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "dangling-link",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210619 01:06:04.513" endtime="20210619 01:06:08.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:08.295" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:05:15.107Z",
  "modificationTime" : "2021-06-19T01:05:15.107Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:04:53.431Z",
  "modificationTime" : "2021-06-19T01:05:11.454Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:05:22.232Z",
  "modificationTime" : "2021-06-19T01:05:22.232Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:04:45.839Z",
  "modificationTime" : "2021-06-19T01:05:07.848Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:04:49.555Z",
  "modificationTime" : "2021-06-19T01:04:49.555Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210619 01:06:08.294" endtime="20210619 01:06:08.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:08.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:08.295" endtime="20210619 01:06:08.296"/>
</kw>
<status status="PASS" starttime="20210619 01:06:04.513" endtime="20210619 01:06:08.296"/>
</kw>
<msg timestamp="20210619 01:06:08.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:04.512" endtime="20210619 01:06:08.296"/>
</kw>
<msg timestamp="20210619 01:06:08.297" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "dangling-link",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210619 01:06:04.512" endtime="20210619 01:06:08.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:06:08.297" endtime="20210619 01:06:08.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:06:08.298" endtime="20210619 01:06:08.298"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:06:04.485" endtime="20210619 01:06:08.298"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:08.304" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:08.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:08.308" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:06:08.303" endtime="20210619 01:06:08.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:08.309" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:06:08.308" endtime="20210619 01:06:08.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:08.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:08.309" endtime="20210619 01:06:08.310"/>
</kw>
<status status="PASS" starttime="20210619 01:06:08.302" endtime="20210619 01:06:08.310"/>
</kw>
<msg timestamp="20210619 01:06:08.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:08.302" endtime="20210619 01:06:08.310"/>
</kw>
<msg timestamp="20210619 01:06:08.311" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:06:08.301" endtime="20210619 01:06:08.311"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:06:08.311" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:06:08.311" endtime="20210619 01:06:08.311"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:08.316" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:08.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:08.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:08.314" endtime="20210619 01:06:08.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:08.323" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:08.323" endtime="20210619 01:06:08.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:08.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:08.324" endtime="20210619 01:06:08.324"/>
</kw>
<status status="PASS" starttime="20210619 01:06:08.313" endtime="20210619 01:06:08.325"/>
</kw>
<msg timestamp="20210619 01:06:08.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:08.313" endtime="20210619 01:06:08.325"/>
</kw>
<status status="PASS" starttime="20210619 01:06:08.312" endtime="20210619 01:06:08.325"/>
</kw>
<status status="PASS" starttime="20210619 01:06:08.312" endtime="20210619 01:06:08.325"/>
</kw>
<status status="PASS" starttime="20210619 01:06:08.301" endtime="20210619 01:06:08.326"/>
</kw>
<status status="PASS" starttime="20210619 01:06:08.300" endtime="20210619 01:06:08.326"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:08.329" level="INFO">Running command 'ozone sh bucket info 48644-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:12.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:12.004" level="INFO">${output} = 48644-source bucket1</msg>
<status status="PASS" starttime="20210619 01:06:08.327" endtime="20210619 01:06:12.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:12.005" level="INFO">48644-source bucket1</msg>
<status status="PASS" starttime="20210619 01:06:12.005" endtime="20210619 01:06:12.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:12.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:12.006" endtime="20210619 01:06:12.006"/>
</kw>
<status status="PASS" starttime="20210619 01:06:08.327" endtime="20210619 01:06:12.007"/>
</kw>
<msg timestamp="20210619 01:06:12.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:08.327" endtime="20210619 01:06:12.007"/>
</kw>
<msg timestamp="20210619 01:06:12.007" level="INFO">${result} = 48644-source bucket1</msg>
<status status="PASS" starttime="20210619 01:06:08.326" endtime="20210619 01:06:12.007"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:06:12.007" endtime="20210619 01:06:12.008"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:06:08.299" endtime="20210619 01:06:12.008"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:12.014" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:12.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:12.018" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:06:12.012" endtime="20210619 01:06:12.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:12.019" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:06:12.018" endtime="20210619 01:06:12.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:12.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:12.019" endtime="20210619 01:06:12.020"/>
</kw>
<status status="PASS" starttime="20210619 01:06:12.012" endtime="20210619 01:06:12.020"/>
</kw>
<msg timestamp="20210619 01:06:12.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:12.012" endtime="20210619 01:06:12.020"/>
</kw>
<msg timestamp="20210619 01:06:12.020" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:06:12.011" endtime="20210619 01:06:12.020"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:06:12.021" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:06:12.021" endtime="20210619 01:06:12.021"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:12.026" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:12.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:12.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:12.024" endtime="20210619 01:06:12.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:12.033" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:12.033" endtime="20210619 01:06:12.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:12.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:12.034" endtime="20210619 01:06:12.034"/>
</kw>
<status status="PASS" starttime="20210619 01:06:12.023" endtime="20210619 01:06:12.035"/>
</kw>
<msg timestamp="20210619 01:06:12.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:12.023" endtime="20210619 01:06:12.035"/>
</kw>
<status status="PASS" starttime="20210619 01:06:12.022" endtime="20210619 01:06:12.035"/>
</kw>
<status status="PASS" starttime="20210619 01:06:12.022" endtime="20210619 01:06:12.035"/>
</kw>
<status status="PASS" starttime="20210619 01:06:12.011" endtime="20210619 01:06:12.035"/>
</kw>
<status status="PASS" starttime="20210619 01:06:12.010" endtime="20210619 01:06:12.035"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:12.039" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 48644-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:15.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:15.508" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:06:12.037" endtime="20210619 01:06:15.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:15.510" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:06:15.509" endtime="20210619 01:06:15.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:15.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:15.510" endtime="20210619 01:06:15.511"/>
</kw>
<status status="PASS" starttime="20210619 01:06:12.037" endtime="20210619 01:06:15.511"/>
</kw>
<msg timestamp="20210619 01:06:15.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:12.036" endtime="20210619 01:06:15.511"/>
</kw>
<status status="PASS" starttime="20210619 01:06:12.036" endtime="20210619 01:06:15.512"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:15.516" level="INFO">Running command 'ozone sh bucket getacl 48644-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:19.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:19.147" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210619 01:06:15.515" endtime="20210619 01:06:19.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:19.148" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210619 01:06:19.147" endtime="20210619 01:06:19.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:19.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:19.148" endtime="20210619 01:06:19.149"/>
</kw>
<status status="PASS" starttime="20210619 01:06:15.514" endtime="20210619 01:06:19.149"/>
</kw>
<msg timestamp="20210619 01:06:19.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:15.514" endtime="20210619 01:06:19.149"/>
</kw>
<msg timestamp="20210619 01:06:19.150" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210619 01:06:15.513" endtime="20210619 01:06:19.150"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:06:19.150" endtime="20210619 01:06:19.151"/>
</kw>
<status status="PASS" starttime="20210619 01:06:15.512" endtime="20210619 01:06:19.151"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:19.156" level="INFO">Running command 'ozone sh bucket getacl 48644-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:22.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:22.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:19.155" endtime="20210619 01:06:22.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:22.799" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:22.798" endtime="20210619 01:06:22.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:22.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:22.799" endtime="20210619 01:06:22.800"/>
</kw>
<status status="PASS" starttime="20210619 01:06:19.154" endtime="20210619 01:06:22.800"/>
</kw>
<msg timestamp="20210619 01:06:22.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:19.154" endtime="20210619 01:06:22.800"/>
</kw>
<msg timestamp="20210619 01:06:22.800" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210619 01:06:19.153" endtime="20210619 01:06:22.801"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:06:22.801" endtime="20210619 01:06:22.801"/>
</kw>
<status status="PASS" starttime="20210619 01:06:19.151" endtime="20210619 01:06:22.801"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:22.806" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 48644-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:26.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:26.446" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:06:22.805" endtime="20210619 01:06:26.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:26.447" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:06:26.446" endtime="20210619 01:06:26.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:26.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:26.447" endtime="20210619 01:06:26.448"/>
</kw>
<status status="PASS" starttime="20210619 01:06:22.803" endtime="20210619 01:06:26.448"/>
</kw>
<msg timestamp="20210619 01:06:26.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:22.802" endtime="20210619 01:06:26.448"/>
</kw>
<status status="PASS" starttime="20210619 01:06:22.802" endtime="20210619 01:06:26.449"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:26.454" level="INFO">Running command 'ozone sh bucket getacl 48644-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:30.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:30.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:26.452" endtime="20210619 01:06:30.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:30.148" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:30.147" endtime="20210619 01:06:30.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:30.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:30.148" endtime="20210619 01:06:30.149"/>
</kw>
<status status="PASS" starttime="20210619 01:06:26.452" endtime="20210619 01:06:30.149"/>
</kw>
<msg timestamp="20210619 01:06:30.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:26.451" endtime="20210619 01:06:30.149"/>
</kw>
<msg timestamp="20210619 01:06:30.150" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210619 01:06:26.450" endtime="20210619 01:06:30.150"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:06:30.150" endtime="20210619 01:06:30.151"/>
</kw>
<status status="PASS" starttime="20210619 01:06:26.449" endtime="20210619 01:06:30.151"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:30.157" level="INFO">Running command 'ozone sh bucket getacl 48644-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:33.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:33.897" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210619 01:06:30.155" endtime="20210619 01:06:33.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:33.898" level="INFO">READ</msg>
<status status="PASS" starttime="20210619 01:06:33.898" endtime="20210619 01:06:33.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:33.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:33.899" endtime="20210619 01:06:33.899"/>
</kw>
<status status="PASS" starttime="20210619 01:06:30.154" endtime="20210619 01:06:33.900"/>
</kw>
<msg timestamp="20210619 01:06:33.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:30.154" endtime="20210619 01:06:33.900"/>
</kw>
<msg timestamp="20210619 01:06:33.900" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210619 01:06:30.153" endtime="20210619 01:06:33.900"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:06:33.900" endtime="20210619 01:06:33.901"/>
</kw>
<status status="PASS" starttime="20210619 01:06:30.151" endtime="20210619 01:06:33.901"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:06:12.009" endtime="20210619 01:06:33.901"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:33.908" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:33.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:33.911" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:06:33.906" endtime="20210619 01:06:33.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:33.912" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:06:33.912" endtime="20210619 01:06:33.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:33.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:33.913" endtime="20210619 01:06:33.913"/>
</kw>
<status status="PASS" starttime="20210619 01:06:33.905" endtime="20210619 01:06:33.914"/>
</kw>
<msg timestamp="20210619 01:06:33.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:33.905" endtime="20210619 01:06:33.914"/>
</kw>
<msg timestamp="20210619 01:06:33.914" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:06:33.904" endtime="20210619 01:06:33.914"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:06:33.915" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:06:33.914" endtime="20210619 01:06:33.915"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:33.919" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:33.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:33.926" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:33.918" endtime="20210619 01:06:33.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:33.927" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:33.926" endtime="20210619 01:06:33.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:33.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:33.927" endtime="20210619 01:06:33.928"/>
</kw>
<status status="PASS" starttime="20210619 01:06:33.917" endtime="20210619 01:06:33.928"/>
</kw>
<msg timestamp="20210619 01:06:33.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:33.916" endtime="20210619 01:06:33.928"/>
</kw>
<status status="PASS" starttime="20210619 01:06:33.916" endtime="20210619 01:06:33.928"/>
</kw>
<status status="PASS" starttime="20210619 01:06:33.915" endtime="20210619 01:06:33.928"/>
</kw>
<status status="PASS" starttime="20210619 01:06:33.904" endtime="20210619 01:06:33.929"/>
</kw>
<status status="PASS" starttime="20210619 01:06:33.903" endtime="20210619 01:06:33.929"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:33.932" level="INFO">Running command 'ozone sh bucket link 48644-source/bucket2 48644-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:37.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:37.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:33.931" endtime="20210619 01:06:37.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:37.633" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:37.632" endtime="20210619 01:06:37.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:37.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:37.633" endtime="20210619 01:06:37.640"/>
</kw>
<status status="PASS" starttime="20210619 01:06:33.930" endtime="20210619 01:06:37.641"/>
</kw>
<msg timestamp="20210619 01:06:37.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:33.930" endtime="20210619 01:06:37.641"/>
</kw>
<status status="PASS" starttime="20210619 01:06:33.929" endtime="20210619 01:06:37.641"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:37.645" level="INFO">Running command 'ozone sh bucket create 48644-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:41.107" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:06:41.107" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210619 01:06:37.642" endtime="20210619 01:06:41.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:41.108" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210619 01:06:41.107" endtime="20210619 01:06:41.108"/>
</kw>
<msg timestamp="20210619 01:06:41.109" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210619 01:06:37.642" endtime="20210619 01:06:41.109"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:06:41.109" endtime="20210619 01:06:41.109"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:41.113" level="INFO">Running command 'ozone sh bucket create 48644-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:44.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:44.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:41.111" endtime="20210619 01:06:44.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:44.712" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:44.711" endtime="20210619 01:06:44.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:44.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:44.712" endtime="20210619 01:06:44.713"/>
</kw>
<status status="PASS" starttime="20210619 01:06:41.111" endtime="20210619 01:06:44.713"/>
</kw>
<msg timestamp="20210619 01:06:44.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:41.110" endtime="20210619 01:06:44.713"/>
</kw>
<status status="PASS" starttime="20210619 01:06:41.110" endtime="20210619 01:06:44.714"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:44.717" level="INFO">Running command 'ozone sh bucket link 48644-source/bucket1 48644-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:48.301" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:06:48.301" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210619 01:06:44.715" endtime="20210619 01:06:48.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:48.302" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210619 01:06:48.301" endtime="20210619 01:06:48.302"/>
</kw>
<msg timestamp="20210619 01:06:48.303" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210619 01:06:44.714" endtime="20210619 01:06:48.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:06:48.303" endtime="20210619 01:06:48.303"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:06:33.902" endtime="20210619 01:06:48.304"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:48.310" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:48.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:48.314" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:06:48.308" endtime="20210619 01:06:48.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:48.315" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:06:48.314" endtime="20210619 01:06:48.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:48.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:48.315" endtime="20210619 01:06:48.316"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.308" endtime="20210619 01:06:48.316"/>
</kw>
<msg timestamp="20210619 01:06:48.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:48.307" endtime="20210619 01:06:48.317"/>
</kw>
<msg timestamp="20210619 01:06:48.317" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:06:48.307" endtime="20210619 01:06:48.317"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:06:48.318" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:06:48.317" endtime="20210619 01:06:48.318"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:48.322" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:48.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:48.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:48.320" endtime="20210619 01:06:48.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:48.351" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:48.351" endtime="20210619 01:06:48.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:48.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:48.352" endtime="20210619 01:06:48.352"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.319" endtime="20210619 01:06:48.353"/>
</kw>
<msg timestamp="20210619 01:06:48.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:48.319" endtime="20210619 01:06:48.353"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.318" endtime="20210619 01:06:48.353"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.318" endtime="20210619 01:06:48.353"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.306" endtime="20210619 01:06:48.354"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.305" endtime="20210619 01:06:48.354"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:48.358" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:48.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:48.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:48.356" endtime="20210619 01:06:48.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:48.362" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:48.361" endtime="20210619 01:06:48.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:48.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:48.362" endtime="20210619 01:06:48.363"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.355" endtime="20210619 01:06:48.363"/>
</kw>
<msg timestamp="20210619 01:06:48.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:48.355" endtime="20210619 01:06:48.363"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.355" endtime="20210619 01:06:48.364"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:48.368" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:48.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:48.371" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:06:48.366" endtime="20210619 01:06:48.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:48.372" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:06:48.371" endtime="20210619 01:06:48.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:48.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:48.372" endtime="20210619 01:06:48.373"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.366" endtime="20210619 01:06:48.374"/>
</kw>
<msg timestamp="20210619 01:06:48.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:48.365" endtime="20210619 01:06:48.374"/>
</kw>
<msg timestamp="20210619 01:06:48.375" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:06:48.365" endtime="20210619 01:06:48.375"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:06:48.376" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:06:48.375" endtime="20210619 01:06:48.376"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:48.380" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:48.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:48.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:48.378" endtime="20210619 01:06:48.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:48.390" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:48.388" endtime="20210619 01:06:48.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:48.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:48.390" endtime="20210619 01:06:48.390"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.378" endtime="20210619 01:06:48.391"/>
</kw>
<msg timestamp="20210619 01:06:48.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:48.377" endtime="20210619 01:06:48.391"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.376" endtime="20210619 01:06:48.391"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.376" endtime="20210619 01:06:48.391"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.364" endtime="20210619 01:06:48.392"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.364" endtime="20210619 01:06:48.392"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:48.394" level="INFO">Running command 'ozone sh key list 48644-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:52.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:52.387" level="INFO">${output} = {
  "volumeName" : "48644-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-06-19T01:04:36.546Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210619 01:06:48.393" endtime="20210619 01:06:52.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:52.389" level="INFO">{
  "volumeName" : "48644-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-06-19T01:04:36.546Z",
  "modificationTime" : "2021-06-19T01:04:38.511Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20210619 01:06:52.388" endtime="20210619 01:06:52.389"/>
</kw>
<msg timestamp="20210619 01:06:52.389" level="INFO">${result} = {
  "volumeName" : "48644-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-06-19T01:04:36.546Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210619 01:06:48.392" endtime="20210619 01:06:52.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:06:52.389" endtime="20210619 01:06:52.390"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.354" endtime="20210619 01:06:52.390"/>
</kw>
<status status="PASS" starttime="20210619 01:06:48.354" endtime="20210619 01:06:52.390"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:06:48.304" endtime="20210619 01:06:52.391"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:52.397" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:52.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:52.400" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:06:52.395" endtime="20210619 01:06:52.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:52.401" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:06:52.400" endtime="20210619 01:06:52.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:52.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:52.401" endtime="20210619 01:06:52.402"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.394" endtime="20210619 01:06:52.402"/>
</kw>
<msg timestamp="20210619 01:06:52.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:52.394" endtime="20210619 01:06:52.403"/>
</kw>
<msg timestamp="20210619 01:06:52.403" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:06:52.393" endtime="20210619 01:06:52.403"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:06:52.404" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:06:52.403" endtime="20210619 01:06:52.404"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:52.408" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:52.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:52.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:52.407" endtime="20210619 01:06:52.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:52.416" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:52.415" endtime="20210619 01:06:52.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:52.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:52.416" endtime="20210619 01:06:52.417"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.406" endtime="20210619 01:06:52.417"/>
</kw>
<msg timestamp="20210619 01:06:52.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:52.405" endtime="20210619 01:06:52.417"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.404" endtime="20210619 01:06:52.418"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.404" endtime="20210619 01:06:52.418"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.393" endtime="20210619 01:06:52.418"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.392" endtime="20210619 01:06:52.418"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:52.422" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:52.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:52.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:52.421" endtime="20210619 01:06:52.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:52.426" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:52.426" endtime="20210619 01:06:52.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:52.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:52.427" endtime="20210619 01:06:52.427"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.420" endtime="20210619 01:06:52.427"/>
</kw>
<msg timestamp="20210619 01:06:52.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:52.420" endtime="20210619 01:06:52.428"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.419" endtime="20210619 01:06:52.428"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:52.432" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:52.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:52.435" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:06:52.430" endtime="20210619 01:06:52.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:52.436" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:06:52.435" endtime="20210619 01:06:52.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:52.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:52.436" endtime="20210619 01:06:52.437"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.430" endtime="20210619 01:06:52.437"/>
</kw>
<msg timestamp="20210619 01:06:52.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:52.430" endtime="20210619 01:06:52.437"/>
</kw>
<msg timestamp="20210619 01:06:52.438" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:06:52.429" endtime="20210619 01:06:52.438"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:06:52.439" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:06:52.438" endtime="20210619 01:06:52.439"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:52.443" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:52.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:52.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:52.441" endtime="20210619 01:06:52.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:52.450" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:52.449" endtime="20210619 01:06:52.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:52.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:52.450" endtime="20210619 01:06:52.451"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.440" endtime="20210619 01:06:52.451"/>
</kw>
<msg timestamp="20210619 01:06:52.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:52.440" endtime="20210619 01:06:52.451"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.439" endtime="20210619 01:06:52.451"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.439" endtime="20210619 01:06:52.451"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.428" endtime="20210619 01:06:52.452"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.428" endtime="20210619 01:06:52.452"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:52.454" level="INFO">Running command 'ozone sh key list 48644-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:56.124" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:06:56.124" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 48644-target unreadable-link null</msg>
<status status="PASS" starttime="20210619 01:06:52.453" endtime="20210619 01:06:56.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:56.126" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 48644-target unreadable-link null</msg>
<status status="PASS" starttime="20210619 01:06:56.125" endtime="20210619 01:06:56.126"/>
</kw>
<msg timestamp="20210619 01:06:56.126" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 48644-target unreadable-link null</msg>
<status status="PASS" starttime="20210619 01:06:52.452" endtime="20210619 01:06:56.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:06:56.126" endtime="20210619 01:06:56.127"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.419" endtime="20210619 01:06:56.127"/>
</kw>
<status status="PASS" starttime="20210619 01:06:52.418" endtime="20210619 01:06:56.127"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:06:52.391" endtime="20210619 01:06:56.127"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:56.133" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:56.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:56.137" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:06:56.131" endtime="20210619 01:06:56.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:56.138" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:06:56.137" endtime="20210619 01:06:56.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:56.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:56.138" endtime="20210619 01:06:56.139"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.131" endtime="20210619 01:06:56.139"/>
</kw>
<msg timestamp="20210619 01:06:56.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:56.130" endtime="20210619 01:06:56.139"/>
</kw>
<msg timestamp="20210619 01:06:56.140" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:06:56.130" endtime="20210619 01:06:56.140"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:06:56.140" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:06:56.140" endtime="20210619 01:06:56.140"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:56.144" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:56.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:56.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:56.143" endtime="20210619 01:06:56.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:56.153" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:56.152" endtime="20210619 01:06:56.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:56.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:56.153" endtime="20210619 01:06:56.153"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.142" endtime="20210619 01:06:56.154"/>
</kw>
<msg timestamp="20210619 01:06:56.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:56.142" endtime="20210619 01:06:56.154"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.141" endtime="20210619 01:06:56.154"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.141" endtime="20210619 01:06:56.154"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.129" endtime="20210619 01:06:56.155"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.129" endtime="20210619 01:06:56.155"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:56.159" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:56.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:56.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:56.158" endtime="20210619 01:06:56.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:56.164" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:56.163" endtime="20210619 01:06:56.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:56.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:56.164" endtime="20210619 01:06:56.164"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.157" endtime="20210619 01:06:56.165"/>
</kw>
<msg timestamp="20210619 01:06:56.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:56.157" endtime="20210619 01:06:56.165"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.156" endtime="20210619 01:06:56.165"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:56.169" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:56.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:56.172" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:06:56.168" endtime="20210619 01:06:56.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:56.173" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:06:56.173" endtime="20210619 01:06:56.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:56.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:56.174" endtime="20210619 01:06:56.174"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.167" endtime="20210619 01:06:56.175"/>
</kw>
<msg timestamp="20210619 01:06:56.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:56.167" endtime="20210619 01:06:56.175"/>
</kw>
<msg timestamp="20210619 01:06:56.176" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:06:56.166" endtime="20210619 01:06:56.176"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:06:56.176" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:06:56.176" endtime="20210619 01:06:56.177"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:56.180" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:56.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:56.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:06:56.179" endtime="20210619 01:06:56.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:56.188" level="INFO"/>
<status status="PASS" starttime="20210619 01:06:56.187" endtime="20210619 01:06:56.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:56.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:56.188" endtime="20210619 01:06:56.189"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.178" endtime="20210619 01:06:56.189"/>
</kw>
<msg timestamp="20210619 01:06:56.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:56.178" endtime="20210619 01:06:56.189"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.177" endtime="20210619 01:06:56.189"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.177" endtime="20210619 01:06:56.189"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.166" endtime="20210619 01:06:56.190"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.166" endtime="20210619 01:06:56.190"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:56.193" level="INFO">Running command 'ozone sh bucket info 48644-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:06:59.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:06:59.802" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "link-to-unreadable-bucket",
  "storageT...</msg>
<status status="PASS" starttime="20210619 01:06:56.191" endtime="20210619 01:06:59.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:06:59.803" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:04:53.431Z",
  "modificationTime" : "2021-06-19T01:05:11.454Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210619 01:06:59.802" endtime="20210619 01:06:59.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:06:59.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:06:59.803" endtime="20210619 01:06:59.804"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.191" endtime="20210619 01:06:59.804"/>
</kw>
<msg timestamp="20210619 01:06:59.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:06:56.191" endtime="20210619 01:06:59.804"/>
</kw>
<msg timestamp="20210619 01:06:59.805" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "link-to-unreadable-bucket",
  "storageT...</msg>
<status status="PASS" starttime="20210619 01:06:56.190" endtime="20210619 01:06:59.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:06:59.805" endtime="20210619 01:06:59.805"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:06:59.806" endtime="20210619 01:06:59.806"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:06:59.809" level="INFO">Running command 'ozone sh key list 48644-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:03.284" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:07:03.284" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 48644-source unreadable-bucket </msg>
<status status="PASS" starttime="20210619 01:06:59.807" endtime="20210619 01:07:03.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:03.285" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 48644-source unreadable-bucket </msg>
<status status="PASS" starttime="20210619 01:07:03.284" endtime="20210619 01:07:03.285"/>
</kw>
<msg timestamp="20210619 01:07:03.286" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 48644-source unreadable-bucket </msg>
<status status="PASS" starttime="20210619 01:06:59.806" endtime="20210619 01:07:03.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:07:03.286" endtime="20210619 01:07:03.286"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.156" endtime="20210619 01:07:03.287"/>
</kw>
<status status="PASS" starttime="20210619 01:06:56.155" endtime="20210619 01:07:03.287"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:06:56.128" endtime="20210619 01:07:03.287"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:03.293" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:03.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:03.296" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:07:03.291" endtime="20210619 01:07:03.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:03.297" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:07:03.297" endtime="20210619 01:07:03.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:03.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:03.298" endtime="20210619 01:07:03.298"/>
</kw>
<status status="PASS" starttime="20210619 01:07:03.291" endtime="20210619 01:07:03.299"/>
</kw>
<msg timestamp="20210619 01:07:03.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:03.290" endtime="20210619 01:07:03.299"/>
</kw>
<msg timestamp="20210619 01:07:03.299" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:07:03.290" endtime="20210619 01:07:03.299"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:07:03.300" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:07:03.299" endtime="20210619 01:07:03.300"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:03.304" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:03.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:03.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:07:03.303" endtime="20210619 01:07:03.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:03.312" level="INFO"/>
<status status="PASS" starttime="20210619 01:07:03.311" endtime="20210619 01:07:03.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:03.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:03.312" endtime="20210619 01:07:03.313"/>
</kw>
<status status="PASS" starttime="20210619 01:07:03.302" endtime="20210619 01:07:03.314"/>
</kw>
<msg timestamp="20210619 01:07:03.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:03.302" endtime="20210619 01:07:03.314"/>
</kw>
<status status="PASS" starttime="20210619 01:07:03.301" endtime="20210619 01:07:03.314"/>
</kw>
<status status="PASS" starttime="20210619 01:07:03.300" endtime="20210619 01:07:03.314"/>
</kw>
<status status="PASS" starttime="20210619 01:07:03.289" endtime="20210619 01:07:03.314"/>
</kw>
<status status="PASS" starttime="20210619 01:07:03.289" endtime="20210619 01:07:03.314"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:03.318" level="INFO">Running command 'ozone sh bucket link 48644-target/loop1 48644-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:06.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:06.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:07:03.316" endtime="20210619 01:07:06.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:06.949" level="INFO"/>
<status status="PASS" starttime="20210619 01:07:06.948" endtime="20210619 01:07:06.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:06.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:06.949" endtime="20210619 01:07:06.950"/>
</kw>
<status status="PASS" starttime="20210619 01:07:03.316" endtime="20210619 01:07:06.950"/>
</kw>
<msg timestamp="20210619 01:07:06.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:03.315" endtime="20210619 01:07:06.950"/>
</kw>
<status status="PASS" starttime="20210619 01:07:03.315" endtime="20210619 01:07:06.951"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:06.955" level="INFO">Running command 'ozone sh bucket link 48644-target/loop2 48644-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:10.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:10.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:07:06.953" endtime="20210619 01:07:10.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:10.455" level="INFO"/>
<status status="PASS" starttime="20210619 01:07:10.454" endtime="20210619 01:07:10.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:10.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:10.455" endtime="20210619 01:07:10.456"/>
</kw>
<status status="PASS" starttime="20210619 01:07:06.952" endtime="20210619 01:07:10.456"/>
</kw>
<msg timestamp="20210619 01:07:10.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:06.951" endtime="20210619 01:07:10.457"/>
</kw>
<status status="PASS" starttime="20210619 01:07:06.951" endtime="20210619 01:07:10.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:10.461" level="INFO">Running command 'ozone sh bucket link 48644-target/loop3 48644-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:14.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:14.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:07:10.459" endtime="20210619 01:07:14.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:14.034" level="INFO"/>
<status status="PASS" starttime="20210619 01:07:14.033" endtime="20210619 01:07:14.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:14.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:14.034" endtime="20210619 01:07:14.035"/>
</kw>
<status status="PASS" starttime="20210619 01:07:10.459" endtime="20210619 01:07:14.035"/>
</kw>
<msg timestamp="20210619 01:07:14.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:10.458" endtime="20210619 01:07:14.035"/>
</kw>
<status status="PASS" starttime="20210619 01:07:10.457" endtime="20210619 01:07:14.036"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:14.038" level="INFO">Running command 'ozone sh key list 48644-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:17.550" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:07:17.551" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210619 01:07:14.036" endtime="20210619 01:07:17.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:17.552" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210619 01:07:17.551" endtime="20210619 01:07:17.552"/>
</kw>
<msg timestamp="20210619 01:07:17.552" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210619 01:07:14.036" endtime="20210619 01:07:17.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:07:17.553" endtime="20210619 01:07:17.553"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:07:03.288" endtime="20210619 01:07:17.553"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:17.559" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:17.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:17.563" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:07:17.558" endtime="20210619 01:07:17.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:17.564" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:07:17.563" endtime="20210619 01:07:17.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:17.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:17.564" endtime="20210619 01:07:17.565"/>
</kw>
<status status="PASS" starttime="20210619 01:07:17.557" endtime="20210619 01:07:17.565"/>
</kw>
<msg timestamp="20210619 01:07:17.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:17.557" endtime="20210619 01:07:17.565"/>
</kw>
<msg timestamp="20210619 01:07:17.566" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:07:17.556" endtime="20210619 01:07:17.566"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:07:17.566" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:07:17.566" endtime="20210619 01:07:17.567"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:17.571" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:17.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:17.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:07:17.569" endtime="20210619 01:07:17.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:17.579" level="INFO"/>
<status status="PASS" starttime="20210619 01:07:17.578" endtime="20210619 01:07:17.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:17.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:17.579" endtime="20210619 01:07:17.580"/>
</kw>
<status status="PASS" starttime="20210619 01:07:17.568" endtime="20210619 01:07:17.580"/>
</kw>
<msg timestamp="20210619 01:07:17.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:17.568" endtime="20210619 01:07:17.580"/>
</kw>
<status status="PASS" starttime="20210619 01:07:17.567" endtime="20210619 01:07:17.581"/>
</kw>
<status status="PASS" starttime="20210619 01:07:17.567" endtime="20210619 01:07:17.581"/>
</kw>
<status status="PASS" starttime="20210619 01:07:17.555" endtime="20210619 01:07:17.581"/>
</kw>
<status status="PASS" starttime="20210619 01:07:17.555" endtime="20210619 01:07:17.581"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:17.585" level="INFO">Running command 'ozone sh bucket link 48644-source/bucket1 48644-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:21.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:21.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:07:17.583" endtime="20210619 01:07:21.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:21.278" level="INFO"/>
<status status="PASS" starttime="20210619 01:07:21.278" endtime="20210619 01:07:21.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:21.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:21.279" endtime="20210619 01:07:21.279"/>
</kw>
<status status="PASS" starttime="20210619 01:07:17.582" endtime="20210619 01:07:21.280"/>
</kw>
<msg timestamp="20210619 01:07:21.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:17.582" endtime="20210619 01:07:21.280"/>
</kw>
<status status="PASS" starttime="20210619 01:07:17.581" endtime="20210619 01:07:21.280"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:21.284" level="INFO">Running command 'ozone sh key put 48644-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:26.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:26.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:07:21.282" endtime="20210619 01:07:26.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:26.936" level="INFO"/>
<status status="PASS" starttime="20210619 01:07:26.935" endtime="20210619 01:07:26.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:26.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:26.936" endtime="20210619 01:07:26.937"/>
</kw>
<status status="PASS" starttime="20210619 01:07:21.281" endtime="20210619 01:07:26.938"/>
</kw>
<msg timestamp="20210619 01:07:26.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:21.281" endtime="20210619 01:07:26.938"/>
</kw>
<status status="PASS" starttime="20210619 01:07:21.280" endtime="20210619 01:07:26.938"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:07:26.940" level="INFO">${postfix} = 56918</msg>
<status status="PASS" starttime="20210619 01:07:26.940" endtime="20210619 01:07:26.940"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:07:26.941" level="INFO">${tmpfile} = /tmp/tempkey-56918</msg>
<status status="PASS" starttime="20210619 01:07:26.940" endtime="20210619 01:07:26.941"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:26.944" level="INFO">Running command 'ozone sh key get 48644-target/link1/key3 /tmp/tempkey-56918 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:32.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:32.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:07:26.943" endtime="20210619 01:07:32.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:32.595" level="INFO"/>
<status status="PASS" starttime="20210619 01:07:32.595" endtime="20210619 01:07:32.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:32.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:32.596" endtime="20210619 01:07:32.596"/>
</kw>
<status status="PASS" starttime="20210619 01:07:26.942" endtime="20210619 01:07:32.597"/>
</kw>
<msg timestamp="20210619 01:07:32.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:26.942" endtime="20210619 01:07:32.597"/>
</kw>
<status status="PASS" starttime="20210619 01:07:26.941" endtime="20210619 01:07:32.597"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210619 01:07:32.599" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-56918 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:32.602" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210619 01:07:32.597" endtime="20210619 01:07:32.602"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:32.606" level="INFO">Running command 'rm -f /tmp/tempkey-56918 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:32.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:32.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:07:32.604" endtime="20210619 01:07:32.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:32.610" level="INFO"/>
<status status="PASS" starttime="20210619 01:07:32.610" endtime="20210619 01:07:32.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:32.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:32.611" endtime="20210619 01:07:32.611"/>
</kw>
<status status="PASS" starttime="20210619 01:07:32.604" endtime="20210619 01:07:32.612"/>
</kw>
<msg timestamp="20210619 01:07:32.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:32.603" endtime="20210619 01:07:32.612"/>
</kw>
<status status="PASS" starttime="20210619 01:07:32.602" endtime="20210619 01:07:32.612"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:07:32.613" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210619 01:07:32.612" endtime="20210619 01:07:32.613"/>
</kw>
<msg timestamp="20210619 01:07:32.613" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210619 01:07:26.939" endtime="20210619 01:07:32.613"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210619 01:07:32.614" endtime="20210619 01:07:32.614"/>
</kw>
<status status="PASS" starttime="20210619 01:07:26.938" endtime="20210619 01:07:32.614"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:07:17.554" endtime="20210619 01:07:32.614"/>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:32.620" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:32.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:32.623" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:07:32.619" endtime="20210619 01:07:32.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:32.624" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:07:32.624" endtime="20210619 01:07:32.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:32.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:32.625" endtime="20210619 01:07:32.625"/>
</kw>
<status status="PASS" starttime="20210619 01:07:32.618" endtime="20210619 01:07:32.626"/>
</kw>
<msg timestamp="20210619 01:07:32.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:32.618" endtime="20210619 01:07:32.626"/>
</kw>
<msg timestamp="20210619 01:07:32.626" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:07:32.617" endtime="20210619 01:07:32.626"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:07:32.627" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:07:32.627" endtime="20210619 01:07:32.628"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:32.632" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:32.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:32.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:07:32.630" endtime="20210619 01:07:32.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:32.639" level="INFO"/>
<status status="PASS" starttime="20210619 01:07:32.639" endtime="20210619 01:07:32.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:32.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:32.640" endtime="20210619 01:07:32.640"/>
</kw>
<status status="PASS" starttime="20210619 01:07:32.629" endtime="20210619 01:07:32.641"/>
</kw>
<msg timestamp="20210619 01:07:32.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:32.629" endtime="20210619 01:07:32.641"/>
</kw>
<status status="PASS" starttime="20210619 01:07:32.628" endtime="20210619 01:07:32.641"/>
</kw>
<status status="PASS" starttime="20210619 01:07:32.628" endtime="20210619 01:07:32.641"/>
</kw>
<status status="PASS" starttime="20210619 01:07:32.617" endtime="20210619 01:07:32.641"/>
</kw>
<status status="PASS" starttime="20210619 01:07:32.616" endtime="20210619 01:07:32.642"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:32.645" level="INFO">Running command 'ozone sh bucket delete 48644-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:36.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:36.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:07:32.643" endtime="20210619 01:07:36.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:36.067" level="INFO"/>
<status status="PASS" starttime="20210619 01:07:36.066" endtime="20210619 01:07:36.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:36.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:36.067" endtime="20210619 01:07:36.068"/>
</kw>
<status status="PASS" starttime="20210619 01:07:32.643" endtime="20210619 01:07:36.068"/>
</kw>
<msg timestamp="20210619 01:07:36.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:32.642" endtime="20210619 01:07:36.068"/>
</kw>
<status status="PASS" starttime="20210619 01:07:32.642" endtime="20210619 01:07:36.069"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:36.072" level="INFO">Running command 'ozone sh bucket list 48644-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:39.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:39.829" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "...</msg>
<status status="PASS" starttime="20210619 01:07:36.070" endtime="20210619 01:07:39.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:39.830" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:06:44.535Z",
  "modificationTime" : "2021-06-19T01:06:44.535Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:05:15.107Z",
  "modificationTime" : "2021-06-19T01:05:15.107Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:04:53.431Z",
  "modificationTime" : "2021-06-19T01:05:11.454Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:06:37.452Z",
  "modificationTime" : "2021-06-19T01:06:37.452Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:07:21.210Z",
  "modificationTime" : "2021-06-19T01:07:21.210Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:07:13.971Z",
  "modificationTime" : "2021-06-19T01:07:13.971Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:07:06.815Z",
  "modificationTime" : "2021-06-19T01:07:06.815Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:07:10.399Z",
  "modificationTime" : "2021-06-19T01:07:10.399Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:04:45.839Z",
  "modificationTime" : "2021-06-19T01:05:07.848Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:04:49.555Z",
  "modificationTime" : "2021-06-19T01:04:49.555Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "48644-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210619 01:07:39.829" endtime="20210619 01:07:39.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:39.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:39.831" endtime="20210619 01:07:39.831"/>
</kw>
<status status="PASS" starttime="20210619 01:07:36.070" endtime="20210619 01:07:39.832"/>
</kw>
<msg timestamp="20210619 01:07:39.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:36.070" endtime="20210619 01:07:39.832"/>
</kw>
<msg timestamp="20210619 01:07:39.832" level="INFO">${bucket_list} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "48644-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "...</msg>
<status status="PASS" starttime="20210619 01:07:36.069" endtime="20210619 01:07:39.832"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:07:39.832" endtime="20210619 01:07:39.833"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:39.837" level="INFO">Running command 'ozone sh key list 48644-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:43.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:43.725" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20210619 01:07:39.835" endtime="20210619 01:07:43.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:43.727" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20210619 01:07:43.726" endtime="20210619 01:07:43.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:43.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:43.727" endtime="20210619 01:07:43.728"/>
</kw>
<status status="PASS" starttime="20210619 01:07:39.834" endtime="20210619 01:07:43.728"/>
</kw>
<msg timestamp="20210619 01:07:43.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:39.834" endtime="20210619 01:07:43.728"/>
</kw>
<msg timestamp="20210619 01:07:43.728" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20210619 01:07:39.833" endtime="20210619 01:07:43.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:07:43.729" endtime="20210619 01:07:43.729"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:07:32.615" endtime="20210619 01:07:43.729"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20210619 01:04:22.277" endtime="20210619 01:07:43.731"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:07:43.758" level="INFO">${random} = 16853</msg>
<status status="PASS" starttime="20210619 01:07:43.757" endtime="20210619 01:07:43.758"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:07:43.759" level="INFO">${prefix} = 16853</msg>
<status status="PASS" starttime="20210619 01:07:43.758" endtime="20210619 01:07:43.759"/>
</kw>
<status status="PASS" starttime="20210619 01:07:43.757" endtime="20210619 01:07:43.759"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:43.764" level="INFO">Running command 'ozone sh volume info /16853-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:47.231" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:07:47.231" level="INFO">${output} = VOLUME_NOT_FOUND Volume 16853-rpcbasic is not found</msg>
<status status="PASS" starttime="20210619 01:07:43.762" endtime="20210619 01:07:47.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:47.232" level="INFO">VOLUME_NOT_FOUND Volume 16853-rpcbasic is not found</msg>
<status status="PASS" starttime="20210619 01:07:47.231" endtime="20210619 01:07:47.232"/>
</kw>
<msg timestamp="20210619 01:07:47.232" level="INFO">${result} = VOLUME_NOT_FOUND Volume 16853-rpcbasic is not found</msg>
<status status="PASS" starttime="20210619 01:07:43.761" endtime="20210619 01:07:47.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:07:47.233" endtime="20210619 01:07:47.233"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:47.237" level="INFO">Running command 'ozone sh volume create /16853-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:50.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:50.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:07:47.235" endtime="20210619 01:07:50.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:50.841" level="INFO"/>
<status status="PASS" starttime="20210619 01:07:50.840" endtime="20210619 01:07:50.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:50.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:50.841" endtime="20210619 01:07:50.842"/>
</kw>
<status status="PASS" starttime="20210619 01:07:47.234" endtime="20210619 01:07:50.842"/>
</kw>
<msg timestamp="20210619 01:07:50.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:47.234" endtime="20210619 01:07:50.843"/>
</kw>
<msg timestamp="20210619 01:07:50.843" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:07:47.233" endtime="20210619 01:07:50.843"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:07:50.843" endtime="20210619 01:07:50.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:50.848" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="16853-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:54.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:54.550" level="INFO">${output} = {
  "metadata": {},
  "name": "16853-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210619 01:07:50.846" endtime="20210619 01:07:54.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:54.552" level="INFO">{
  "metadata": {},
  "name": "16853-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-19T01:07:50.648Z",
  "modificationTime": "2021-06-19T01:07:50.648Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210619 01:07:54.551" endtime="20210619 01:07:54.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:54.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:54.553" endtime="20210619 01:07:54.553"/>
</kw>
<status status="PASS" starttime="20210619 01:07:50.845" endtime="20210619 01:07:54.554"/>
</kw>
<msg timestamp="20210619 01:07:54.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:50.845" endtime="20210619 01:07:54.554"/>
</kw>
<msg timestamp="20210619 01:07:54.554" level="INFO">${result} = {
  "metadata": {},
  "name": "16853-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210619 01:07:50.844" endtime="20210619 01:07:54.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:07:54.554" endtime="20210619 01:07:54.555"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:54.558" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="16853-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:07:58.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:07:58.325" level="INFO">${output} = {
  "metadata": {},
  "name": "16853-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210619 01:07:54.557" endtime="20210619 01:07:58.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:07:58.327" level="INFO">{
  "metadata": {},
  "name": "16853-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-19T01:07:50.648Z",
  "modificationTime": "2021-06-19T01:07:50.648Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210619 01:07:58.326" endtime="20210619 01:07:58.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:07:58.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:07:58.327" endtime="20210619 01:07:58.328"/>
</kw>
<status status="PASS" starttime="20210619 01:07:54.556" endtime="20210619 01:07:58.328"/>
</kw>
<msg timestamp="20210619 01:07:58.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:54.556" endtime="20210619 01:07:58.328"/>
</kw>
<msg timestamp="20210619 01:07:58.329" level="INFO">${result} = {
  "metadata": {},
  "name": "16853-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210619 01:07:54.555" endtime="20210619 01:07:58.329"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:07:58.329" endtime="20210619 01:07:58.329"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:07:58.333" level="INFO">Running command 'ozone sh volume setquota /16853-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:01.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:01.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:07:58.331" endtime="20210619 01:08:01.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:01.802" level="INFO"/>
<status status="PASS" starttime="20210619 01:08:01.802" endtime="20210619 01:08:01.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:01.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:01.803" endtime="20210619 01:08:01.803"/>
</kw>
<status status="PASS" starttime="20210619 01:07:58.331" endtime="20210619 01:08:01.804"/>
</kw>
<msg timestamp="20210619 01:08:01.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:07:58.330" endtime="20210619 01:08:01.804"/>
</kw>
<status status="PASS" starttime="20210619 01:07:58.329" endtime="20210619 01:08:01.804"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:01.808" level="INFO">Running command 'ozone sh volume info /16853-rpcbasic | jq -r '. | select(.name=="16853-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:05.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:05.557" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:08:01.806" endtime="20210619 01:08:05.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:05.559" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210619 01:08:05.558" endtime="20210619 01:08:05.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:05.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:05.559" endtime="20210619 01:08:05.560"/>
</kw>
<status status="PASS" starttime="20210619 01:08:01.806" endtime="20210619 01:08:05.560"/>
</kw>
<msg timestamp="20210619 01:08:05.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:01.805" endtime="20210619 01:08:05.560"/>
</kw>
<msg timestamp="20210619 01:08:05.561" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:08:01.804" endtime="20210619 01:08:05.561"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:08:05.561" endtime="20210619 01:08:05.561"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:05.566" level="INFO">Running command 'ozone sh bucket create /16853-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:09.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:09.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:08:05.564" endtime="20210619 01:08:09.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:09.170" level="INFO"/>
<status status="PASS" starttime="20210619 01:08:09.169" endtime="20210619 01:08:09.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:09.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:09.170" endtime="20210619 01:08:09.171"/>
</kw>
<status status="PASS" starttime="20210619 01:08:05.563" endtime="20210619 01:08:09.171"/>
</kw>
<msg timestamp="20210619 01:08:09.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:05.562" endtime="20210619 01:08:09.171"/>
</kw>
<status status="PASS" starttime="20210619 01:08:05.561" endtime="20210619 01:08:09.172"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:09.176" level="INFO">Running command 'ozone sh bucket info /16853-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:12.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:12.794" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210619 01:08:09.174" endtime="20210619 01:08:12.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:12.795" level="INFO">DISK</msg>
<status status="PASS" starttime="20210619 01:08:12.795" endtime="20210619 01:08:12.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:12.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:12.796" endtime="20210619 01:08:12.796"/>
</kw>
<status status="PASS" starttime="20210619 01:08:09.174" endtime="20210619 01:08:12.797"/>
</kw>
<msg timestamp="20210619 01:08:12.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:09.173" endtime="20210619 01:08:12.797"/>
</kw>
<msg timestamp="20210619 01:08:12.797" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210619 01:08:09.172" endtime="20210619 01:08:12.798"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:08:12.798" endtime="20210619 01:08:12.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:12.802" level="INFO">Running command 'ozone sh bucket info /16853-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:16.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:16.504" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:08:12.800" endtime="20210619 01:08:16.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:16.506" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210619 01:08:16.505" endtime="20210619 01:08:16.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:16.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:16.506" endtime="20210619 01:08:16.507"/>
</kw>
<status status="PASS" starttime="20210619 01:08:12.800" endtime="20210619 01:08:16.507"/>
</kw>
<msg timestamp="20210619 01:08:16.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:12.799" endtime="20210619 01:08:16.507"/>
</kw>
<msg timestamp="20210619 01:08:16.507" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:08:12.798" endtime="20210619 01:08:16.507"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:08:16.508" endtime="20210619 01:08:16.508"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:16.512" level="INFO">Running command 'ozone sh bucket info /16853-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:20.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:20.196" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210619 01:08:16.510" endtime="20210619 01:08:20.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:20.197" level="INFO">100</msg>
<status status="PASS" starttime="20210619 01:08:20.196" endtime="20210619 01:08:20.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:20.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:20.198" endtime="20210619 01:08:20.198"/>
</kw>
<status status="PASS" starttime="20210619 01:08:16.510" endtime="20210619 01:08:20.198"/>
</kw>
<msg timestamp="20210619 01:08:20.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:16.509" endtime="20210619 01:08:20.199"/>
</kw>
<msg timestamp="20210619 01:08:20.199" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210619 01:08:16.508" endtime="20210619 01:08:20.199"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:08:20.199" endtime="20210619 01:08:20.200"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:20.203" level="INFO">Running command 'ozone sh bucket setquota /16853-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:23.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:23.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:08:20.202" endtime="20210619 01:08:23.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:23.733" level="INFO"/>
<status status="PASS" starttime="20210619 01:08:23.732" endtime="20210619 01:08:23.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:23.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:23.733" endtime="20210619 01:08:23.734"/>
</kw>
<status status="PASS" starttime="20210619 01:08:20.201" endtime="20210619 01:08:23.734"/>
</kw>
<msg timestamp="20210619 01:08:23.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:20.201" endtime="20210619 01:08:23.735"/>
</kw>
<status status="PASS" starttime="20210619 01:08:20.200" endtime="20210619 01:08:23.735"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:23.740" level="INFO">Running command 'ozone sh bucket info /16853-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:27.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:27.391" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210619 01:08:23.738" endtime="20210619 01:08:27.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:27.392" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210619 01:08:27.391" endtime="20210619 01:08:27.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:27.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:27.392" endtime="20210619 01:08:27.393"/>
</kw>
<status status="PASS" starttime="20210619 01:08:23.737" endtime="20210619 01:08:27.393"/>
</kw>
<msg timestamp="20210619 01:08:27.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:23.736" endtime="20210619 01:08:27.393"/>
</kw>
<msg timestamp="20210619 01:08:27.394" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210619 01:08:23.735" endtime="20210619 01:08:27.394"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:08:27.394" endtime="20210619 01:08:27.394"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:27.398" level="INFO">Running command 'ozone sh bucket info /16853-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:31.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:31.133" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210619 01:08:27.397" endtime="20210619 01:08:31.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:31.135" level="INFO">1000</msg>
<status status="PASS" starttime="20210619 01:08:31.134" endtime="20210619 01:08:31.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:31.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:31.135" endtime="20210619 01:08:31.136"/>
</kw>
<status status="PASS" starttime="20210619 01:08:27.396" endtime="20210619 01:08:31.136"/>
</kw>
<msg timestamp="20210619 01:08:31.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:27.396" endtime="20210619 01:08:31.136"/>
</kw>
<msg timestamp="20210619 01:08:31.136" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210619 01:08:27.395" endtime="20210619 01:08:31.137"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:08:31.137" endtime="20210619 01:08:31.137"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:31.141" level="INFO">Running command 'ozone sh bucket list /16853-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:34.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:34.945" level="INFO">${output} = 16853-rpcbasic</msg>
<status status="PASS" starttime="20210619 01:08:31.139" endtime="20210619 01:08:34.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:34.947" level="INFO">16853-rpcbasic</msg>
<status status="PASS" starttime="20210619 01:08:34.946" endtime="20210619 01:08:34.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:34.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:34.947" endtime="20210619 01:08:34.948"/>
</kw>
<status status="PASS" starttime="20210619 01:08:31.139" endtime="20210619 01:08:34.949"/>
</kw>
<msg timestamp="20210619 01:08:34.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:31.138" endtime="20210619 01:08:34.949"/>
</kw>
<msg timestamp="20210619 01:08:34.949" level="INFO">${result} = 16853-rpcbasic</msg>
<status status="PASS" starttime="20210619 01:08:31.137" endtime="20210619 01:08:34.949"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:08:34.950" endtime="20210619 01:08:34.950"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:34.955" level="INFO">Running command 'ozone sh key put /16853-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:40.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:40.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:08:34.953" endtime="20210619 01:08:40.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:40.937" level="INFO"/>
<status status="PASS" starttime="20210619 01:08:40.937" endtime="20210619 01:08:40.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:40.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:40.938" endtime="20210619 01:08:40.939"/>
</kw>
<status status="PASS" starttime="20210619 01:08:34.952" endtime="20210619 01:08:40.939"/>
</kw>
<msg timestamp="20210619 01:08:40.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:34.952" endtime="20210619 01:08:40.939"/>
</kw>
<status status="PASS" starttime="20210619 01:08:34.951" endtime="20210619 01:08:40.939"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:40.943" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:40.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:40.946" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:08:40.941" endtime="20210619 01:08:40.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:40.947" level="INFO"/>
<status status="PASS" starttime="20210619 01:08:40.946" endtime="20210619 01:08:40.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:40.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:40.947" endtime="20210619 01:08:40.948"/>
</kw>
<status status="PASS" starttime="20210619 01:08:40.940" endtime="20210619 01:08:40.948"/>
</kw>
<msg timestamp="20210619 01:08:40.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:40.940" endtime="20210619 01:08:40.948"/>
</kw>
<status status="PASS" starttime="20210619 01:08:40.940" endtime="20210619 01:08:40.949"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:40.952" level="INFO">Running command 'ozone sh key get /16853-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:46.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:46.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:08:40.951" endtime="20210619 01:08:46.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:46.799" level="INFO"/>
<status status="PASS" starttime="20210619 01:08:46.798" endtime="20210619 01:08:46.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:46.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:46.799" endtime="20210619 01:08:46.800"/>
</kw>
<status status="PASS" starttime="20210619 01:08:40.950" endtime="20210619 01:08:46.800"/>
</kw>
<msg timestamp="20210619 01:08:46.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:40.950" endtime="20210619 01:08:46.800"/>
</kw>
<status status="PASS" starttime="20210619 01:08:40.949" endtime="20210619 01:08:46.801"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:46.804" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:46.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:46.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:08:46.802" endtime="20210619 01:08:46.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:46.808" level="INFO"/>
<status status="PASS" starttime="20210619 01:08:46.808" endtime="20210619 01:08:46.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:46.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:46.809" endtime="20210619 01:08:46.809"/>
</kw>
<status status="PASS" starttime="20210619 01:08:46.802" endtime="20210619 01:08:46.810"/>
</kw>
<msg timestamp="20210619 01:08:46.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:46.801" endtime="20210619 01:08:46.810"/>
</kw>
<status status="PASS" starttime="20210619 01:08:46.801" endtime="20210619 01:08:46.810"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:46.814" level="INFO">Running command 'ozone sh key put -t RATIS /16853-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:52.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:52.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:08:46.812" endtime="20210619 01:08:52.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:52.632" level="INFO"/>
<status status="PASS" starttime="20210619 01:08:52.631" endtime="20210619 01:08:52.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:52.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:52.632" endtime="20210619 01:08:52.633"/>
</kw>
<status status="PASS" starttime="20210619 01:08:46.811" endtime="20210619 01:08:52.633"/>
</kw>
<msg timestamp="20210619 01:08:52.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:46.811" endtime="20210619 01:08:52.633"/>
</kw>
<status status="PASS" starttime="20210619 01:08:46.810" endtime="20210619 01:08:52.634"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:52.638" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:52.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:52.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:08:52.636" endtime="20210619 01:08:52.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:52.642" level="INFO"/>
<status status="PASS" starttime="20210619 01:08:52.641" endtime="20210619 01:08:52.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:52.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:52.642" endtime="20210619 01:08:52.643"/>
</kw>
<status status="PASS" starttime="20210619 01:08:52.635" endtime="20210619 01:08:52.643"/>
</kw>
<msg timestamp="20210619 01:08:52.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:52.634" endtime="20210619 01:08:52.643"/>
</kw>
<status status="PASS" starttime="20210619 01:08:52.634" endtime="20210619 01:08:52.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:52.647" level="INFO">Running command 'ozone sh key get /16853-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:58.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:58.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:08:52.646" endtime="20210619 01:08:58.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:58.625" level="INFO"/>
<status status="PASS" starttime="20210619 01:08:58.624" endtime="20210619 01:08:58.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:58.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:58.625" endtime="20210619 01:08:58.626"/>
</kw>
<status status="PASS" starttime="20210619 01:08:52.645" endtime="20210619 01:08:58.626"/>
</kw>
<msg timestamp="20210619 01:08:58.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:52.644" endtime="20210619 01:08:58.627"/>
</kw>
<status status="PASS" starttime="20210619 01:08:52.643" endtime="20210619 01:08:58.627"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:58.630" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:08:58.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:08:58.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:08:58.629" endtime="20210619 01:08:58.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:08:58.634" level="INFO"/>
<status status="PASS" starttime="20210619 01:08:58.633" endtime="20210619 01:08:58.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:08:58.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:08:58.634" endtime="20210619 01:08:58.635"/>
</kw>
<status status="PASS" starttime="20210619 01:08:58.628" endtime="20210619 01:08:58.635"/>
</kw>
<msg timestamp="20210619 01:08:58.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:58.628" endtime="20210619 01:08:58.636"/>
</kw>
<status status="PASS" starttime="20210619 01:08:58.627" endtime="20210619 01:08:58.636"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:08:58.640" level="INFO">Running command 'ozone sh key info /16853-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:02.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:02.338" level="INFO">${output} = {
  "volumeName": "16853-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:08:50.129Z",
  "modificationTime": "2021-06-19T01:08:52.127Z",
...</msg>
<status status="PASS" starttime="20210619 01:08:58.638" endtime="20210619 01:09:02.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:02.342" level="INFO">{
  "volumeName": "16853-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:08:50.129Z",
  "modificationTime": "2021-06-19T01:08:52.127Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210619 01:09:02.341" endtime="20210619 01:09:02.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:02.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:02.342" endtime="20210619 01:09:02.343"/>
</kw>
<status status="PASS" starttime="20210619 01:08:58.638" endtime="20210619 01:09:02.343"/>
</kw>
<msg timestamp="20210619 01:09:02.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:08:58.637" endtime="20210619 01:09:02.344"/>
</kw>
<msg timestamp="20210619 01:09:02.344" level="INFO">${result} = {
  "volumeName": "16853-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:08:50.129Z",
  "modificationTime": "2021-06-19T01:08:52.127Z",
...</msg>
<status status="PASS" starttime="20210619 01:08:58.636" endtime="20210619 01:09:02.344"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:09:02.344" endtime="20210619 01:09:02.345"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:02.349" level="INFO">Running command 'ozone sh key delete /16853-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:05.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:05.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:09:02.347" endtime="20210619 01:09:05.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:05.899" level="INFO"/>
<status status="PASS" starttime="20210619 01:09:05.899" endtime="20210619 01:09:05.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:05.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:05.900" endtime="20210619 01:09:05.900"/>
</kw>
<status status="PASS" starttime="20210619 01:09:02.346" endtime="20210619 01:09:05.901"/>
</kw>
<msg timestamp="20210619 01:09:05.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:02.346" endtime="20210619 01:09:05.901"/>
</kw>
<status status="PASS" starttime="20210619 01:09:02.345" endtime="20210619 01:09:05.901"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:05.906" level="INFO">Running command 'ozone sh key cp /16853-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:12.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:12.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:09:05.903" endtime="20210619 01:09:12.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:12.218" level="INFO"/>
<status status="PASS" starttime="20210619 01:09:12.217" endtime="20210619 01:09:12.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:12.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:12.218" endtime="20210619 01:09:12.219"/>
</kw>
<status status="PASS" starttime="20210619 01:09:05.903" endtime="20210619 01:09:12.219"/>
</kw>
<msg timestamp="20210619 01:09:12.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:05.902" endtime="20210619 01:09:12.219"/>
</kw>
<status status="PASS" starttime="20210619 01:09:05.901" endtime="20210619 01:09:12.220"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:12.223" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:12.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:12.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:09:12.221" endtime="20210619 01:09:12.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:12.227" level="INFO"/>
<status status="PASS" starttime="20210619 01:09:12.226" endtime="20210619 01:09:12.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:12.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:12.227" endtime="20210619 01:09:12.228"/>
</kw>
<status status="PASS" starttime="20210619 01:09:12.221" endtime="20210619 01:09:12.228"/>
</kw>
<msg timestamp="20210619 01:09:12.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:12.220" endtime="20210619 01:09:12.228"/>
</kw>
<status status="PASS" starttime="20210619 01:09:12.220" endtime="20210619 01:09:12.228"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:12.232" level="INFO">Running command 'ozone sh key get /16853-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:17.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:17.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:09:12.230" endtime="20210619 01:09:17.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:17.637" level="INFO"/>
<status status="PASS" starttime="20210619 01:09:17.637" endtime="20210619 01:09:17.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:17.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:17.638" endtime="20210619 01:09:17.638"/>
</kw>
<status status="PASS" starttime="20210619 01:09:12.230" endtime="20210619 01:09:17.639"/>
</kw>
<msg timestamp="20210619 01:09:17.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:12.229" endtime="20210619 01:09:17.639"/>
</kw>
<status status="PASS" starttime="20210619 01:09:12.228" endtime="20210619 01:09:17.639"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:17.643" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:17.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:17.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:09:17.641" endtime="20210619 01:09:17.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:17.648" level="INFO"/>
<status status="PASS" starttime="20210619 01:09:17.647" endtime="20210619 01:09:17.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:17.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:17.648" endtime="20210619 01:09:17.648"/>
</kw>
<status status="PASS" starttime="20210619 01:09:17.640" endtime="20210619 01:09:17.649"/>
</kw>
<msg timestamp="20210619 01:09:17.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:17.640" endtime="20210619 01:09:17.649"/>
</kw>
<status status="PASS" starttime="20210619 01:09:17.640" endtime="20210619 01:09:17.649"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:17.653" level="INFO">Running command 'ozone sh key delete /16853-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:21.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:21.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:09:17.651" endtime="20210619 01:09:21.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:21.107" level="INFO"/>
<status status="PASS" starttime="20210619 01:09:21.106" endtime="20210619 01:09:21.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:21.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:21.107" endtime="20210619 01:09:21.108"/>
</kw>
<status status="PASS" starttime="20210619 01:09:17.651" endtime="20210619 01:09:21.108"/>
</kw>
<msg timestamp="20210619 01:09:21.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:17.650" endtime="20210619 01:09:21.108"/>
</kw>
<status status="PASS" starttime="20210619 01:09:17.650" endtime="20210619 01:09:21.108"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:21.111" level="INFO">Running command 'ozone sh key get /16853-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:24.472" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:09:24.472" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210619 01:09:21.109" endtime="20210619 01:09:24.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:24.473" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210619 01:09:24.472" endtime="20210619 01:09:24.474"/>
</kw>
<msg timestamp="20210619 01:09:24.474" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210619 01:09:21.109" endtime="20210619 01:09:24.474"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:09:24.474" endtime="20210619 01:09:24.475"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:24.480" level="INFO">Running command 'ozone sh key get --force /16853-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:30.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:30.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:09:24.476" endtime="20210619 01:09:30.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:30.334" level="INFO"/>
<status status="PASS" starttime="20210619 01:09:30.333" endtime="20210619 01:09:30.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:30.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:30.334" endtime="20210619 01:09:30.335"/>
</kw>
<status status="PASS" starttime="20210619 01:09:24.476" endtime="20210619 01:09:30.335"/>
</kw>
<msg timestamp="20210619 01:09:30.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:24.476" endtime="20210619 01:09:30.335"/>
</kw>
<msg timestamp="20210619 01:09:30.335" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:09:24.475" endtime="20210619 01:09:30.335"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:09:30.336" endtime="20210619 01:09:30.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:30.340" level="INFO">Running command 'ozone sh key info /16853-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:34.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:34.366" level="INFO">${output} = {
  "volumeName": "16853-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:08:38.432Z",
  "modificationTime": "2021-06-19T01:08:40.455Z",
  "ozo...</msg>
<status status="PASS" starttime="20210619 01:09:30.338" endtime="20210619 01:09:34.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:34.367" level="INFO">{
  "volumeName": "16853-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:08:38.432Z",
  "modificationTime": "2021-06-19T01:08:40.455Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210619 01:09:34.366" endtime="20210619 01:09:34.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:34.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:34.367" endtime="20210619 01:09:34.368"/>
</kw>
<status status="PASS" starttime="20210619 01:09:30.338" endtime="20210619 01:09:34.368"/>
</kw>
<msg timestamp="20210619 01:09:34.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:30.337" endtime="20210619 01:09:34.369"/>
</kw>
<msg timestamp="20210619 01:09:34.369" level="INFO">${result} = {
  "volumeName": "16853-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:08:38.432Z",
  "modificationTime": "2021-06-19T01:08:40.455Z",
  "ozo...</msg>
<status status="PASS" starttime="20210619 01:09:30.336" endtime="20210619 01:09:34.369"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:09:34.369" endtime="20210619 01:09:34.370"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:34.374" level="INFO">Running command 'ozone sh key list /16853-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:38.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:38.174" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210619 01:09:34.372" endtime="20210619 01:09:38.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:38.176" level="INFO">key1</msg>
<status status="PASS" starttime="20210619 01:09:38.175" endtime="20210619 01:09:38.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:38.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:38.176" endtime="20210619 01:09:38.177"/>
</kw>
<status status="PASS" starttime="20210619 01:09:34.371" endtime="20210619 01:09:38.177"/>
</kw>
<msg timestamp="20210619 01:09:38.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:34.371" endtime="20210619 01:09:38.177"/>
</kw>
<msg timestamp="20210619 01:09:38.177" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20210619 01:09:34.370" endtime="20210619 01:09:38.177"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:09:38.178" endtime="20210619 01:09:38.178"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:38.182" level="INFO">Running command 'ozone sh key rename /16853-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:41.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:41.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:09:38.180" endtime="20210619 01:09:41.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:41.459" level="INFO"/>
<status status="PASS" starttime="20210619 01:09:41.459" endtime="20210619 01:09:41.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:41.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:41.460" endtime="20210619 01:09:41.461"/>
</kw>
<status status="PASS" starttime="20210619 01:09:38.179" endtime="20210619 01:09:41.461"/>
</kw>
<msg timestamp="20210619 01:09:41.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:38.179" endtime="20210619 01:09:41.461"/>
</kw>
<status status="PASS" starttime="20210619 01:09:38.178" endtime="20210619 01:09:41.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:41.465" level="INFO">Running command 'ozone sh key list /16853-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:45.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:45.397" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20210619 01:09:41.463" endtime="20210619 01:09:45.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:45.398" level="INFO">key2</msg>
<status status="PASS" starttime="20210619 01:09:45.397" endtime="20210619 01:09:45.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:45.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:45.398" endtime="20210619 01:09:45.399"/>
</kw>
<status status="PASS" starttime="20210619 01:09:41.463" endtime="20210619 01:09:45.399"/>
</kw>
<msg timestamp="20210619 01:09:45.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:41.463" endtime="20210619 01:09:45.400"/>
</kw>
<msg timestamp="20210619 01:09:45.400" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20210619 01:09:41.462" endtime="20210619 01:09:45.400"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:09:45.401" endtime="20210619 01:09:45.401"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:45.405" level="INFO">Running command 'ozone sh key delete /16853-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:48.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:48.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:09:45.403" endtime="20210619 01:09:48.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:48.879" level="INFO"/>
<status status="PASS" starttime="20210619 01:09:48.879" endtime="20210619 01:09:48.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:48.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:48.880" endtime="20210619 01:09:48.880"/>
</kw>
<status status="PASS" starttime="20210619 01:09:45.403" endtime="20210619 01:09:48.881"/>
</kw>
<msg timestamp="20210619 01:09:48.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:45.402" endtime="20210619 01:09:48.881"/>
</kw>
<status status="PASS" starttime="20210619 01:09:45.401" endtime="20210619 01:09:48.881"/>
</kw>
<status status="PASS" starttime="20210619 01:08:34.951" endtime="20210619 01:09:48.881"/>
</kw>
<status status="PASS" starttime="20210619 01:08:34.950" endtime="20210619 01:09:48.881"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:48.885" level="INFO">Running command 'ozone sh volume clrquota --space-quota /16853-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:52.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:52.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:09:48.883" endtime="20210619 01:09:52.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:52.352" level="INFO"/>
<status status="PASS" starttime="20210619 01:09:52.351" endtime="20210619 01:09:52.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:52.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:52.352" endtime="20210619 01:09:52.353"/>
</kw>
<status status="PASS" starttime="20210619 01:09:48.883" endtime="20210619 01:09:52.353"/>
</kw>
<msg timestamp="20210619 01:09:52.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:48.882" endtime="20210619 01:09:52.353"/>
</kw>
<status status="PASS" starttime="20210619 01:09:48.882" endtime="20210619 01:09:52.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:52.358" level="INFO">Running command 'ozone sh volume info /16853-rpcbasic | jq -r '. | select(.name=="16853-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:56.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:56.314" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:09:52.356" endtime="20210619 01:09:56.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:56.316" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:09:56.315" endtime="20210619 01:09:56.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:56.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:56.316" endtime="20210619 01:09:56.317"/>
</kw>
<status status="PASS" starttime="20210619 01:09:52.355" endtime="20210619 01:09:56.317"/>
</kw>
<msg timestamp="20210619 01:09:56.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:52.355" endtime="20210619 01:09:56.317"/>
</kw>
<msg timestamp="20210619 01:09:56.318" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:09:52.354" endtime="20210619 01:09:56.318"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:09:56.318" endtime="20210619 01:09:56.318"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:56.322" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /16853-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:09:59.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:09:59.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:09:56.320" endtime="20210619 01:09:59.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:09:59.679" level="INFO"/>
<status status="PASS" starttime="20210619 01:09:59.679" endtime="20210619 01:09:59.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:09:59.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:09:59.680" endtime="20210619 01:09:59.680"/>
</kw>
<status status="PASS" starttime="20210619 01:09:56.320" endtime="20210619 01:09:59.681"/>
</kw>
<msg timestamp="20210619 01:09:59.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:56.319" endtime="20210619 01:09:59.681"/>
</kw>
<status status="PASS" starttime="20210619 01:09:56.318" endtime="20210619 01:09:59.681"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:09:59.686" level="INFO">Running command 'ozone sh volume info /16853-rpcbasic | jq -r '. | select(.name=="16853-rpcbasic") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:03.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:03.551" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:09:59.684" endtime="20210619 01:10:03.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:03.552" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:10:03.551" endtime="20210619 01:10:03.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:03.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:03.553" endtime="20210619 01:10:03.553"/>
</kw>
<status status="PASS" starttime="20210619 01:09:59.683" endtime="20210619 01:10:03.554"/>
</kw>
<msg timestamp="20210619 01:10:03.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:09:59.683" endtime="20210619 01:10:03.554"/>
</kw>
<msg timestamp="20210619 01:10:03.554" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:09:59.681" endtime="20210619 01:10:03.554"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:10:03.554" endtime="20210619 01:10:03.555"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:03.558" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /16853-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:06.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:06.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:10:03.557" endtime="20210619 01:10:06.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:06.870" level="INFO"/>
<status status="PASS" starttime="20210619 01:10:06.870" endtime="20210619 01:10:06.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:06.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:06.871" endtime="20210619 01:10:06.871"/>
</kw>
<status status="PASS" starttime="20210619 01:10:03.556" endtime="20210619 01:10:06.872"/>
</kw>
<msg timestamp="20210619 01:10:06.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:03.556" endtime="20210619 01:10:06.872"/>
</kw>
<status status="PASS" starttime="20210619 01:10:03.555" endtime="20210619 01:10:06.872"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:06.876" level="INFO">Running command 'ozone sh bucket info /16853-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:10.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:10.351" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:10:06.875" endtime="20210619 01:10:10.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:10.353" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:10:10.352" endtime="20210619 01:10:10.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:10.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:10.353" endtime="20210619 01:10:10.353"/>
</kw>
<status status="PASS" starttime="20210619 01:10:06.874" endtime="20210619 01:10:10.354"/>
</kw>
<msg timestamp="20210619 01:10:10.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:06.874" endtime="20210619 01:10:10.354"/>
</kw>
<msg timestamp="20210619 01:10:10.355" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:10:06.872" endtime="20210619 01:10:10.355"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:10:10.355" endtime="20210619 01:10:10.356"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:10.361" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /16853-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:13.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:13.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:10:10.358" endtime="20210619 01:10:13.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:13.745" level="INFO"/>
<status status="PASS" starttime="20210619 01:10:13.744" endtime="20210619 01:10:13.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:13.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:13.745" endtime="20210619 01:10:13.746"/>
</kw>
<status status="PASS" starttime="20210619 01:10:10.357" endtime="20210619 01:10:13.746"/>
</kw>
<msg timestamp="20210619 01:10:13.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:10.357" endtime="20210619 01:10:13.747"/>
</kw>
<status status="PASS" starttime="20210619 01:10:10.356" endtime="20210619 01:10:13.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:13.751" level="INFO">Running command 'ozone sh bucket info /16853-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:17.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:17.511" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:10:13.749" endtime="20210619 01:10:17.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:17.512" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:10:17.511" endtime="20210619 01:10:17.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:17.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:17.512" endtime="20210619 01:10:17.513"/>
</kw>
<status status="PASS" starttime="20210619 01:10:13.749" endtime="20210619 01:10:17.513"/>
</kw>
<msg timestamp="20210619 01:10:17.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:13.748" endtime="20210619 01:10:17.514"/>
</kw>
<msg timestamp="20210619 01:10:17.514" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:10:13.747" endtime="20210619 01:10:17.514"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:10:17.514" endtime="20210619 01:10:17.515"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:17.518" level="INFO">Running command 'ozone sh bucket delete /16853-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:21.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:21.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:10:17.516" endtime="20210619 01:10:21.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:21.141" level="INFO"/>
<status status="PASS" starttime="20210619 01:10:21.141" endtime="20210619 01:10:21.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:21.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:21.142" endtime="20210619 01:10:21.142"/>
</kw>
<status status="PASS" starttime="20210619 01:10:17.516" endtime="20210619 01:10:21.143"/>
</kw>
<msg timestamp="20210619 01:10:21.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:17.516" endtime="20210619 01:10:21.143"/>
</kw>
<status status="PASS" starttime="20210619 01:10:17.515" endtime="20210619 01:10:21.143"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:21.147" level="INFO">Running command 'ozone sh volume delete /16853-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:24.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:24.701" level="INFO">${output} = Volume 16853-rpcbasic is deleted</msg>
<status status="PASS" starttime="20210619 01:10:21.145" endtime="20210619 01:10:24.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:24.702" level="INFO">Volume 16853-rpcbasic is deleted</msg>
<status status="PASS" starttime="20210619 01:10:24.701" endtime="20210619 01:10:24.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:24.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:24.702" endtime="20210619 01:10:24.703"/>
</kw>
<status status="PASS" starttime="20210619 01:10:21.145" endtime="20210619 01:10:24.703"/>
</kw>
<msg timestamp="20210619 01:10:24.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:21.144" endtime="20210619 01:10:24.703"/>
</kw>
<status status="PASS" starttime="20210619 01:10:21.143" endtime="20210619 01:10:24.704"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:24.707" level="INFO">Running command 'ozone sh volume create /16853-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:28.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:28.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:10:24.706" endtime="20210619 01:10:28.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:28.292" level="INFO"/>
<status status="PASS" starttime="20210619 01:10:28.291" endtime="20210619 01:10:28.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:28.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:28.292" endtime="20210619 01:10:28.293"/>
</kw>
<status status="PASS" starttime="20210619 01:10:24.705" endtime="20210619 01:10:28.293"/>
</kw>
<msg timestamp="20210619 01:10:28.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:24.705" endtime="20210619 01:10:28.294"/>
</kw>
<status status="PASS" starttime="20210619 01:10:24.704" endtime="20210619 01:10:28.294"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:28.307" level="INFO">Running command 'ozone sh volume info /16853-rpcbasic | jq -r '. | select(.name=="16853-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:31.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:31.963" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:10:28.305" endtime="20210619 01:10:31.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:31.964" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:10:31.964" endtime="20210619 01:10:31.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:31.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:31.965" endtime="20210619 01:10:31.965"/>
</kw>
<status status="PASS" starttime="20210619 01:10:28.296" endtime="20210619 01:10:31.966"/>
</kw>
<msg timestamp="20210619 01:10:31.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:28.295" endtime="20210619 01:10:31.966"/>
</kw>
<msg timestamp="20210619 01:10:31.966" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:10:28.294" endtime="20210619 01:10:31.966"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:10:31.967" endtime="20210619 01:10:31.967"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:31.971" level="INFO">Running command 'ozone sh volume info /16853-rpcbasic | jq -r '. | select(.name=="16853-rpcbasic") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:35.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:35.804" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:10:31.969" endtime="20210619 01:10:35.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:35.806" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:10:35.805" endtime="20210619 01:10:35.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:35.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:35.806" endtime="20210619 01:10:35.806"/>
</kw>
<status status="PASS" starttime="20210619 01:10:31.969" endtime="20210619 01:10:35.807"/>
</kw>
<msg timestamp="20210619 01:10:35.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:31.968" endtime="20210619 01:10:35.807"/>
</kw>
<msg timestamp="20210619 01:10:35.807" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:10:31.967" endtime="20210619 01:10:35.807"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:10:35.808" endtime="20210619 01:10:35.808"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:35.812" level="INFO">Running command 'ozone sh bucket create /16853-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:39.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:39.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:10:35.810" endtime="20210619 01:10:39.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:39.241" level="INFO"/>
<status status="PASS" starttime="20210619 01:10:39.240" endtime="20210619 01:10:39.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:39.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:39.242" endtime="20210619 01:10:39.242"/>
</kw>
<status status="PASS" starttime="20210619 01:10:35.809" endtime="20210619 01:10:39.243"/>
</kw>
<msg timestamp="20210619 01:10:39.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:35.809" endtime="20210619 01:10:39.243"/>
</kw>
<status status="PASS" starttime="20210619 01:10:35.808" endtime="20210619 01:10:39.244"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:39.249" level="INFO">Running command 'ozone sh bucket info /16853-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:43.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:43.208" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:10:39.247" endtime="20210619 01:10:43.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:43.210" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:10:43.209" endtime="20210619 01:10:43.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:43.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:43.210" endtime="20210619 01:10:43.211"/>
</kw>
<status status="PASS" starttime="20210619 01:10:39.247" endtime="20210619 01:10:43.212"/>
</kw>
<msg timestamp="20210619 01:10:43.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:39.246" endtime="20210619 01:10:43.212"/>
</kw>
<msg timestamp="20210619 01:10:43.213" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:10:39.245" endtime="20210619 01:10:43.213"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:10:43.213" endtime="20210619 01:10:43.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:43.221" level="INFO">Running command 'ozone sh bucket info /16853-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:47.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:47.094" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:10:43.218" endtime="20210619 01:10:47.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:47.095" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:10:47.095" endtime="20210619 01:10:47.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:47.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:47.096" endtime="20210619 01:10:47.096"/>
</kw>
<status status="PASS" starttime="20210619 01:10:43.217" endtime="20210619 01:10:47.097"/>
</kw>
<msg timestamp="20210619 01:10:47.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:43.216" endtime="20210619 01:10:47.097"/>
</kw>
<msg timestamp="20210619 01:10:47.097" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:10:43.214" endtime="20210619 01:10:47.097"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:10:47.097" endtime="20210619 01:10:47.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:47.102" level="INFO">Running command 'ozone sh bucket delete /16853-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:50.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:50.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:10:47.100" endtime="20210619 01:10:50.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:50.641" level="INFO"/>
<status status="PASS" starttime="20210619 01:10:50.639" endtime="20210619 01:10:50.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:50.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:50.642" endtime="20210619 01:10:50.642"/>
</kw>
<status status="PASS" starttime="20210619 01:10:47.099" endtime="20210619 01:10:50.643"/>
</kw>
<msg timestamp="20210619 01:10:50.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:47.099" endtime="20210619 01:10:50.643"/>
</kw>
<status status="PASS" starttime="20210619 01:10:47.098" endtime="20210619 01:10:50.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:50.647" level="INFO">Running command 'ozone sh volume delete /16853-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:54.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:54.406" level="INFO">${output} = Volume 16853-rpcbasic is deleted</msg>
<status status="PASS" starttime="20210619 01:10:50.645" endtime="20210619 01:10:54.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:54.407" level="INFO">Volume 16853-rpcbasic is deleted</msg>
<status status="PASS" starttime="20210619 01:10:54.406" endtime="20210619 01:10:54.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:54.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:54.407" endtime="20210619 01:10:54.408"/>
</kw>
<status status="PASS" starttime="20210619 01:10:50.644" endtime="20210619 01:10:54.408"/>
</kw>
<msg timestamp="20210619 01:10:54.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:50.644" endtime="20210619 01:10:54.409"/>
</kw>
<status status="PASS" starttime="20210619 01:10:50.643" endtime="20210619 01:10:54.409"/>
</kw>
<status status="PASS" starttime="20210619 01:07:43.760" endtime="20210619 01:10:54.409"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:07:43.759" endtime="20210619 01:10:54.409"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20210619 01:07:43.735" endtime="20210619 01:10:54.411"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:10:54.421" level="INFO">${random} = 20221</msg>
<status status="PASS" starttime="20210619 01:10:54.420" endtime="20210619 01:10:54.421"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:10:54.422" level="INFO">${prefix} = 20221</msg>
<status status="PASS" starttime="20210619 01:10:54.421" endtime="20210619 01:10:54.422"/>
</kw>
<status status="PASS" starttime="20210619 01:10:54.420" endtime="20210619 01:10:54.422"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:54.428" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:54.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:54.432" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:10:54.426" endtime="20210619 01:10:54.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:54.433" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:10:54.433" endtime="20210619 01:10:54.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:54.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:54.434" endtime="20210619 01:10:54.434"/>
</kw>
<status status="PASS" starttime="20210619 01:10:54.424" endtime="20210619 01:10:54.435"/>
</kw>
<msg timestamp="20210619 01:10:54.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:54.424" endtime="20210619 01:10:54.435"/>
</kw>
<msg timestamp="20210619 01:10:54.435" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:10:54.424" endtime="20210619 01:10:54.435"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:10:54.437" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:10:54.435" endtime="20210619 01:10:54.438"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:54.441" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:54.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:10:54.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:10:54.440" endtime="20210619 01:10:54.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:54.449" level="INFO"/>
<status status="PASS" starttime="20210619 01:10:54.449" endtime="20210619 01:10:54.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:10:54.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:10:54.450" endtime="20210619 01:10:54.450"/>
</kw>
<status status="PASS" starttime="20210619 01:10:54.439" endtime="20210619 01:10:54.451"/>
</kw>
<msg timestamp="20210619 01:10:54.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:54.439" endtime="20210619 01:10:54.451"/>
</kw>
<status status="PASS" starttime="20210619 01:10:54.438" endtime="20210619 01:10:54.451"/>
</kw>
<status status="PASS" starttime="20210619 01:10:54.438" endtime="20210619 01:10:54.451"/>
</kw>
<status status="PASS" starttime="20210619 01:10:54.423" endtime="20210619 01:10:54.451"/>
</kw>
<status status="PASS" starttime="20210619 01:10:54.423" endtime="20210619 01:10:54.452"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:54.455" level="INFO">Running command 'ozone sh volume info o3://om:9862/20221-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:10:58.037" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:10:58.037" level="INFO">${output} = VOLUME_NOT_FOUND Volume 20221-rpcwoport is not found</msg>
<status status="PASS" starttime="20210619 01:10:54.453" endtime="20210619 01:10:58.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:10:58.038" level="INFO">VOLUME_NOT_FOUND Volume 20221-rpcwoport is not found</msg>
<status status="PASS" starttime="20210619 01:10:58.037" endtime="20210619 01:10:58.038"/>
</kw>
<msg timestamp="20210619 01:10:58.039" level="INFO">${result} = VOLUME_NOT_FOUND Volume 20221-rpcwoport is not found</msg>
<status status="PASS" starttime="20210619 01:10:54.452" endtime="20210619 01:10:58.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:10:58.039" endtime="20210619 01:10:58.040"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:10:58.044" level="INFO">Running command 'ozone sh volume create o3://om:9862/20221-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:01.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:01.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:10:58.042" endtime="20210619 01:11:01.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:01.435" level="INFO"/>
<status status="PASS" starttime="20210619 01:11:01.434" endtime="20210619 01:11:01.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:01.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:01.435" endtime="20210619 01:11:01.435"/>
</kw>
<status status="PASS" starttime="20210619 01:10:58.041" endtime="20210619 01:11:01.436"/>
</kw>
<msg timestamp="20210619 01:11:01.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:10:58.041" endtime="20210619 01:11:01.436"/>
</kw>
<msg timestamp="20210619 01:11:01.436" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:10:58.040" endtime="20210619 01:11:01.436"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:11:01.437" endtime="20210619 01:11:01.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:01.441" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="20221-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:05.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:05.348" level="INFO">${output} = {
  "metadata": {},
  "name": "20221-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210619 01:11:01.439" endtime="20210619 01:11:05.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:05.350" level="INFO">{
  "metadata": {},
  "name": "20221-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-19T01:11:01.363Z",
  "modificationTime": "2021-06-19T01:11:01.363Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210619 01:11:05.349" endtime="20210619 01:11:05.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:05.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:05.350" endtime="20210619 01:11:05.351"/>
</kw>
<status status="PASS" starttime="20210619 01:11:01.439" endtime="20210619 01:11:05.351"/>
</kw>
<msg timestamp="20210619 01:11:05.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:01.438" endtime="20210619 01:11:05.351"/>
</kw>
<msg timestamp="20210619 01:11:05.352" level="INFO">${result} = {
  "metadata": {},
  "name": "20221-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210619 01:11:01.437" endtime="20210619 01:11:05.352"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:11:05.352" endtime="20210619 01:11:05.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:05.356" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="20221-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:09.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:09.172" level="INFO">${output} = {
  "metadata": {},
  "name": "20221-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210619 01:11:05.354" endtime="20210619 01:11:09.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:09.173" level="INFO">{
  "metadata": {},
  "name": "20221-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-19T01:11:01.363Z",
  "modificationTime": "2021-06-19T01:11:01.363Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210619 01:11:09.172" endtime="20210619 01:11:09.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:09.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:09.173" endtime="20210619 01:11:09.174"/>
</kw>
<status status="PASS" starttime="20210619 01:11:05.353" endtime="20210619 01:11:09.174"/>
</kw>
<msg timestamp="20210619 01:11:09.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:05.353" endtime="20210619 01:11:09.175"/>
</kw>
<msg timestamp="20210619 01:11:09.175" level="INFO">${result} = {
  "metadata": {},
  "name": "20221-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210619 01:11:05.352" endtime="20210619 01:11:09.175"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:11:09.175" endtime="20210619 01:11:09.176"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:09.179" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/20221-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:12.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:12.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:11:09.178" endtime="20210619 01:11:12.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:12.726" level="INFO"/>
<status status="PASS" starttime="20210619 01:11:12.726" endtime="20210619 01:11:12.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:12.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:12.727" endtime="20210619 01:11:12.727"/>
</kw>
<status status="PASS" starttime="20210619 01:11:09.177" endtime="20210619 01:11:12.728"/>
</kw>
<msg timestamp="20210619 01:11:12.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:09.177" endtime="20210619 01:11:12.728"/>
</kw>
<status status="PASS" starttime="20210619 01:11:09.176" endtime="20210619 01:11:12.728"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:12.733" level="INFO">Running command 'ozone sh volume info o3://om:9862/20221-rpcwoport | jq -r '. | select(.name=="20221-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:16.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:16.362" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:11:12.731" endtime="20210619 01:11:16.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:16.363" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210619 01:11:16.362" endtime="20210619 01:11:16.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:16.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:16.363" endtime="20210619 01:11:16.364"/>
</kw>
<status status="PASS" starttime="20210619 01:11:12.730" endtime="20210619 01:11:16.364"/>
</kw>
<msg timestamp="20210619 01:11:16.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:12.730" endtime="20210619 01:11:16.364"/>
</kw>
<msg timestamp="20210619 01:11:16.365" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:11:12.728" endtime="20210619 01:11:16.365"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:11:16.365" endtime="20210619 01:11:16.365"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:16.370" level="INFO">Running command 'ozone sh bucket create o3://om:9862/20221-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:20.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:20.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:11:16.367" endtime="20210619 01:11:20.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:20.078" level="INFO"/>
<status status="PASS" starttime="20210619 01:11:20.077" endtime="20210619 01:11:20.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:20.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:20.078" endtime="20210619 01:11:20.079"/>
</kw>
<status status="PASS" starttime="20210619 01:11:16.367" endtime="20210619 01:11:20.079"/>
</kw>
<msg timestamp="20210619 01:11:20.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:16.367" endtime="20210619 01:11:20.080"/>
</kw>
<status status="PASS" starttime="20210619 01:11:16.366" endtime="20210619 01:11:20.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:20.084" level="INFO">Running command 'ozone sh bucket info o3://om:9862/20221-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:24.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:24.050" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210619 01:11:20.082" endtime="20210619 01:11:24.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:24.051" level="INFO">DISK</msg>
<status status="PASS" starttime="20210619 01:11:24.050" endtime="20210619 01:11:24.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:24.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:24.051" endtime="20210619 01:11:24.052"/>
</kw>
<status status="PASS" starttime="20210619 01:11:20.082" endtime="20210619 01:11:24.053"/>
</kw>
<msg timestamp="20210619 01:11:24.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:20.081" endtime="20210619 01:11:24.053"/>
</kw>
<msg timestamp="20210619 01:11:24.053" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210619 01:11:20.080" endtime="20210619 01:11:24.053"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:11:24.053" endtime="20210619 01:11:24.054"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:24.059" level="INFO">Running command 'ozone sh bucket info o3://om:9862/20221-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:28.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:28.008" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:11:24.056" endtime="20210619 01:11:28.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:28.010" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210619 01:11:28.009" endtime="20210619 01:11:28.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:28.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:28.010" endtime="20210619 01:11:28.011"/>
</kw>
<status status="PASS" starttime="20210619 01:11:24.056" endtime="20210619 01:11:28.011"/>
</kw>
<msg timestamp="20210619 01:11:28.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:24.055" endtime="20210619 01:11:28.011"/>
</kw>
<msg timestamp="20210619 01:11:28.012" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:11:24.054" endtime="20210619 01:11:28.012"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:11:28.012" endtime="20210619 01:11:28.012"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:28.017" level="INFO">Running command 'ozone sh bucket info o3://om:9862/20221-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:31.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:31.878" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210619 01:11:28.015" endtime="20210619 01:11:31.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:31.879" level="INFO">100</msg>
<status status="PASS" starttime="20210619 01:11:31.878" endtime="20210619 01:11:31.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:31.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:31.879" endtime="20210619 01:11:31.880"/>
</kw>
<status status="PASS" starttime="20210619 01:11:28.015" endtime="20210619 01:11:31.880"/>
</kw>
<msg timestamp="20210619 01:11:31.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:28.014" endtime="20210619 01:11:31.881"/>
</kw>
<msg timestamp="20210619 01:11:31.881" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210619 01:11:28.013" endtime="20210619 01:11:31.881"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:11:31.881" endtime="20210619 01:11:31.882"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:31.886" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/20221-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:35.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:35.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:11:31.884" endtime="20210619 01:11:35.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:35.692" level="INFO"/>
<status status="PASS" starttime="20210619 01:11:35.690" endtime="20210619 01:11:35.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:35.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:35.692" endtime="20210619 01:11:35.693"/>
</kw>
<status status="PASS" starttime="20210619 01:11:31.883" endtime="20210619 01:11:35.693"/>
</kw>
<msg timestamp="20210619 01:11:35.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:31.883" endtime="20210619 01:11:35.693"/>
</kw>
<status status="PASS" starttime="20210619 01:11:31.882" endtime="20210619 01:11:35.693"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:35.697" level="INFO">Running command 'ozone sh bucket info o3://om:9862/20221-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:39.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:39.697" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210619 01:11:35.696" endtime="20210619 01:11:39.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:39.699" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210619 01:11:39.698" endtime="20210619 01:11:39.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:39.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:39.699" endtime="20210619 01:11:39.700"/>
</kw>
<status status="PASS" starttime="20210619 01:11:35.695" endtime="20210619 01:11:39.700"/>
</kw>
<msg timestamp="20210619 01:11:39.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:35.695" endtime="20210619 01:11:39.700"/>
</kw>
<msg timestamp="20210619 01:11:39.700" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210619 01:11:35.694" endtime="20210619 01:11:39.701"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:11:39.701" endtime="20210619 01:11:39.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:39.705" level="INFO">Running command 'ozone sh bucket info o3://om:9862/20221-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:43.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:43.599" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210619 01:11:39.703" endtime="20210619 01:11:43.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:43.600" level="INFO">1000</msg>
<status status="PASS" starttime="20210619 01:11:43.599" endtime="20210619 01:11:43.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:43.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:43.600" endtime="20210619 01:11:43.601"/>
</kw>
<status status="PASS" starttime="20210619 01:11:39.703" endtime="20210619 01:11:43.601"/>
</kw>
<msg timestamp="20210619 01:11:43.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:39.702" endtime="20210619 01:11:43.601"/>
</kw>
<msg timestamp="20210619 01:11:43.602" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210619 01:11:39.701" endtime="20210619 01:11:43.602"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:11:43.602" endtime="20210619 01:11:43.602"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:43.607" level="INFO">Running command 'ozone sh bucket list o3://om:9862/20221-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:47.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:47.551" level="INFO">${output} = 20221-rpcwoport</msg>
<status status="PASS" starttime="20210619 01:11:43.605" endtime="20210619 01:11:47.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:47.553" level="INFO">20221-rpcwoport</msg>
<status status="PASS" starttime="20210619 01:11:47.552" endtime="20210619 01:11:47.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:47.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:47.553" endtime="20210619 01:11:47.553"/>
</kw>
<status status="PASS" starttime="20210619 01:11:43.604" endtime="20210619 01:11:47.554"/>
</kw>
<msg timestamp="20210619 01:11:47.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:43.604" endtime="20210619 01:11:47.554"/>
</kw>
<msg timestamp="20210619 01:11:47.555" level="INFO">${result} = 20221-rpcwoport</msg>
<status status="PASS" starttime="20210619 01:11:43.603" endtime="20210619 01:11:47.555"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:11:47.555" endtime="20210619 01:11:47.555"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:47.560" level="INFO">Running command 'ozone sh key put o3://om:9862/20221-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:53.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:53.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:11:47.559" endtime="20210619 01:11:53.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:53.588" level="INFO"/>
<status status="PASS" starttime="20210619 01:11:53.588" endtime="20210619 01:11:53.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:53.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:53.589" endtime="20210619 01:11:53.590"/>
</kw>
<status status="PASS" starttime="20210619 01:11:47.558" endtime="20210619 01:11:53.590"/>
</kw>
<msg timestamp="20210619 01:11:53.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:47.557" endtime="20210619 01:11:53.590"/>
</kw>
<status status="PASS" starttime="20210619 01:11:47.557" endtime="20210619 01:11:53.590"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:53.594" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:53.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:53.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:11:53.592" endtime="20210619 01:11:53.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:53.598" level="INFO"/>
<status status="PASS" starttime="20210619 01:11:53.597" endtime="20210619 01:11:53.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:53.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:53.598" endtime="20210619 01:11:53.599"/>
</kw>
<status status="PASS" starttime="20210619 01:11:53.592" endtime="20210619 01:11:53.599"/>
</kw>
<msg timestamp="20210619 01:11:53.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:53.591" endtime="20210619 01:11:53.599"/>
</kw>
<status status="PASS" starttime="20210619 01:11:53.591" endtime="20210619 01:11:53.599"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:53.603" level="INFO">Running command 'ozone sh key get o3://om:9862/20221-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:59.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:59.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:11:53.602" endtime="20210619 01:11:59.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:59.356" level="INFO"/>
<status status="PASS" starttime="20210619 01:11:59.355" endtime="20210619 01:11:59.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:59.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:59.356" endtime="20210619 01:11:59.357"/>
</kw>
<status status="PASS" starttime="20210619 01:11:53.601" endtime="20210619 01:11:59.357"/>
</kw>
<msg timestamp="20210619 01:11:59.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:53.601" endtime="20210619 01:11:59.358"/>
</kw>
<status status="PASS" starttime="20210619 01:11:53.600" endtime="20210619 01:11:59.358"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:59.361" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:11:59.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:11:59.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:11:59.360" endtime="20210619 01:11:59.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:11:59.365" level="INFO"/>
<status status="PASS" starttime="20210619 01:11:59.364" endtime="20210619 01:11:59.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:11:59.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:11:59.365" endtime="20210619 01:11:59.366"/>
</kw>
<status status="PASS" starttime="20210619 01:11:59.359" endtime="20210619 01:11:59.366"/>
</kw>
<msg timestamp="20210619 01:11:59.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:59.359" endtime="20210619 01:11:59.366"/>
</kw>
<status status="PASS" starttime="20210619 01:11:59.358" endtime="20210619 01:11:59.367"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:11:59.370" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/20221-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:05.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:05.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:11:59.368" endtime="20210619 01:12:05.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:05.220" level="INFO"/>
<status status="PASS" starttime="20210619 01:12:05.218" endtime="20210619 01:12:05.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:05.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:05.220" endtime="20210619 01:12:05.220"/>
</kw>
<status status="PASS" starttime="20210619 01:11:59.368" endtime="20210619 01:12:05.221"/>
</kw>
<msg timestamp="20210619 01:12:05.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:11:59.368" endtime="20210619 01:12:05.221"/>
</kw>
<status status="PASS" starttime="20210619 01:11:59.367" endtime="20210619 01:12:05.221"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:05.225" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:05.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:05.227" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:12:05.223" endtime="20210619 01:12:05.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:05.228" level="INFO"/>
<status status="PASS" starttime="20210619 01:12:05.228" endtime="20210619 01:12:05.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:05.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:05.229" endtime="20210619 01:12:05.230"/>
</kw>
<status status="PASS" starttime="20210619 01:12:05.222" endtime="20210619 01:12:05.230"/>
</kw>
<msg timestamp="20210619 01:12:05.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:05.222" endtime="20210619 01:12:05.230"/>
</kw>
<status status="PASS" starttime="20210619 01:12:05.221" endtime="20210619 01:12:05.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:05.234" level="INFO">Running command 'ozone sh key get o3://om:9862/20221-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:10.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:10.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:12:05.232" endtime="20210619 01:12:10.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:10.960" level="INFO"/>
<status status="PASS" starttime="20210619 01:12:10.959" endtime="20210619 01:12:10.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:10.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:10.960" endtime="20210619 01:12:10.961"/>
</kw>
<status status="PASS" starttime="20210619 01:12:05.232" endtime="20210619 01:12:10.961"/>
</kw>
<msg timestamp="20210619 01:12:10.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:05.231" endtime="20210619 01:12:10.961"/>
</kw>
<status status="PASS" starttime="20210619 01:12:05.231" endtime="20210619 01:12:10.961"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:10.965" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:10.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:10.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:12:10.963" endtime="20210619 01:12:10.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:10.969" level="INFO"/>
<status status="PASS" starttime="20210619 01:12:10.968" endtime="20210619 01:12:10.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:10.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:10.969" endtime="20210619 01:12:10.970"/>
</kw>
<status status="PASS" starttime="20210619 01:12:10.963" endtime="20210619 01:12:10.970"/>
</kw>
<msg timestamp="20210619 01:12:10.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:10.962" endtime="20210619 01:12:10.970"/>
</kw>
<status status="PASS" starttime="20210619 01:12:10.962" endtime="20210619 01:12:10.970"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:10.974" level="INFO">Running command 'ozone sh key info o3://om:9862/20221-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:14.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:14.896" level="INFO">${output} = {
  "volumeName": "20221-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:12:02.647Z",
  "modificationTime": "2021-06-19T01:12:04.627Z",...</msg>
<status status="PASS" starttime="20210619 01:12:10.972" endtime="20210619 01:12:14.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:14.897" level="INFO">{
  "volumeName": "20221-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:12:02.647Z",
  "modificationTime": "2021-06-19T01:12:04.627Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210619 01:12:14.896" endtime="20210619 01:12:14.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:14.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:14.897" endtime="20210619 01:12:14.898"/>
</kw>
<status status="PASS" starttime="20210619 01:12:10.972" endtime="20210619 01:12:14.898"/>
</kw>
<msg timestamp="20210619 01:12:14.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:10.972" endtime="20210619 01:12:14.898"/>
</kw>
<msg timestamp="20210619 01:12:14.899" level="INFO">${result} = {
  "volumeName": "20221-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:12:02.647Z",
  "modificationTime": "2021-06-19T01:12:04.627Z",...</msg>
<status status="PASS" starttime="20210619 01:12:10.971" endtime="20210619 01:12:14.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:12:14.899" endtime="20210619 01:12:14.899"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:14.904" level="INFO">Running command 'ozone sh key delete o3://om:9862/20221-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:18.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:18.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:12:14.902" endtime="20210619 01:12:18.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:18.448" level="INFO"/>
<status status="PASS" starttime="20210619 01:12:18.447" endtime="20210619 01:12:18.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:18.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:18.448" endtime="20210619 01:12:18.449"/>
</kw>
<status status="PASS" starttime="20210619 01:12:14.901" endtime="20210619 01:12:18.449"/>
</kw>
<msg timestamp="20210619 01:12:18.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:14.900" endtime="20210619 01:12:18.449"/>
</kw>
<status status="PASS" starttime="20210619 01:12:14.900" endtime="20210619 01:12:18.450"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:18.454" level="INFO">Running command 'ozone sh key cp o3://om:9862/20221-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:24.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:24.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:12:18.452" endtime="20210619 01:12:24.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:24.361" level="INFO"/>
<status status="PASS" starttime="20210619 01:12:24.360" endtime="20210619 01:12:24.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:24.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:24.362" endtime="20210619 01:12:24.362"/>
</kw>
<status status="PASS" starttime="20210619 01:12:18.451" endtime="20210619 01:12:24.363"/>
</kw>
<msg timestamp="20210619 01:12:24.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:18.451" endtime="20210619 01:12:24.363"/>
</kw>
<status status="PASS" starttime="20210619 01:12:18.450" endtime="20210619 01:12:24.363"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:24.367" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:24.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:24.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:12:24.365" endtime="20210619 01:12:24.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:24.370" level="INFO"/>
<status status="PASS" starttime="20210619 01:12:24.370" endtime="20210619 01:12:24.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:24.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:24.371" endtime="20210619 01:12:24.371"/>
</kw>
<status status="PASS" starttime="20210619 01:12:24.364" endtime="20210619 01:12:24.372"/>
</kw>
<msg timestamp="20210619 01:12:24.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:24.364" endtime="20210619 01:12:24.372"/>
</kw>
<status status="PASS" starttime="20210619 01:12:24.363" endtime="20210619 01:12:24.372"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:24.376" level="INFO">Running command 'ozone sh key get o3://om:9862/20221-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:30.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:30.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:12:24.374" endtime="20210619 01:12:30.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:30.191" level="INFO"/>
<status status="PASS" starttime="20210619 01:12:30.190" endtime="20210619 01:12:30.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:30.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:30.191" endtime="20210619 01:12:30.192"/>
</kw>
<status status="PASS" starttime="20210619 01:12:24.374" endtime="20210619 01:12:30.192"/>
</kw>
<msg timestamp="20210619 01:12:30.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:24.373" endtime="20210619 01:12:30.192"/>
</kw>
<status status="PASS" starttime="20210619 01:12:24.372" endtime="20210619 01:12:30.193"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:30.197" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:30.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:30.199" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:12:30.194" endtime="20210619 01:12:30.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:30.200" level="INFO"/>
<status status="PASS" starttime="20210619 01:12:30.199" endtime="20210619 01:12:30.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:30.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:30.200" endtime="20210619 01:12:30.201"/>
</kw>
<status status="PASS" starttime="20210619 01:12:30.194" endtime="20210619 01:12:30.201"/>
</kw>
<msg timestamp="20210619 01:12:30.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:30.193" endtime="20210619 01:12:30.202"/>
</kw>
<status status="PASS" starttime="20210619 01:12:30.193" endtime="20210619 01:12:30.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:30.206" level="INFO">Running command 'ozone sh key delete o3://om:9862/20221-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:33.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:33.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:12:30.204" endtime="20210619 01:12:33.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:33.737" level="INFO"/>
<status status="PASS" starttime="20210619 01:12:33.736" endtime="20210619 01:12:33.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:33.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:33.737" endtime="20210619 01:12:33.738"/>
</kw>
<status status="PASS" starttime="20210619 01:12:30.203" endtime="20210619 01:12:33.738"/>
</kw>
<msg timestamp="20210619 01:12:33.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:30.203" endtime="20210619 01:12:33.739"/>
</kw>
<status status="PASS" starttime="20210619 01:12:30.202" endtime="20210619 01:12:33.739"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:33.742" level="INFO">Running command 'ozone sh key get o3://om:9862/20221-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:37.314" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:12:37.314" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210619 01:12:33.740" endtime="20210619 01:12:37.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:37.315" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210619 01:12:37.314" endtime="20210619 01:12:37.315"/>
</kw>
<msg timestamp="20210619 01:12:37.316" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210619 01:12:33.739" endtime="20210619 01:12:37.316"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:12:37.316" endtime="20210619 01:12:37.316"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:37.320" level="INFO">Running command 'ozone sh key get --force o3://om:9862/20221-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:43.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:43.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:12:37.318" endtime="20210619 01:12:43.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:43.202" level="INFO"/>
<status status="PASS" starttime="20210619 01:12:43.201" endtime="20210619 01:12:43.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:43.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:43.202" endtime="20210619 01:12:43.203"/>
</kw>
<status status="PASS" starttime="20210619 01:12:37.318" endtime="20210619 01:12:43.203"/>
</kw>
<msg timestamp="20210619 01:12:43.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:37.317" endtime="20210619 01:12:43.203"/>
</kw>
<msg timestamp="20210619 01:12:43.204" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:12:37.317" endtime="20210619 01:12:43.204"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:12:43.204" endtime="20210619 01:12:43.204"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:43.209" level="INFO">Running command 'ozone sh key info o3://om:9862/20221-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:47.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:47.333" level="INFO">${output} = {
  "volumeName": "20221-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:11:51.123Z",
  "modificationTime": "2021-06-19T01:11:53.044Z",
  "oz...</msg>
<status status="PASS" starttime="20210619 01:12:43.207" endtime="20210619 01:12:47.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:47.335" level="INFO">{
  "volumeName": "20221-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:11:51.123Z",
  "modificationTime": "2021-06-19T01:11:53.044Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200130,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210619 01:12:47.334" endtime="20210619 01:12:47.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:47.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:47.335" endtime="20210619 01:12:47.336"/>
</kw>
<status status="PASS" starttime="20210619 01:12:43.206" endtime="20210619 01:12:47.336"/>
</kw>
<msg timestamp="20210619 01:12:47.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:43.206" endtime="20210619 01:12:47.337"/>
</kw>
<msg timestamp="20210619 01:12:47.337" level="INFO">${result} = {
  "volumeName": "20221-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:11:51.123Z",
  "modificationTime": "2021-06-19T01:11:53.044Z",
  "oz...</msg>
<status status="PASS" starttime="20210619 01:12:43.205" endtime="20210619 01:12:47.337"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:12:47.338" endtime="20210619 01:12:47.338"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:47.347" level="INFO">Running command 'ozone sh key list o3://om:9862/20221-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:51.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:51.526" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210619 01:12:47.343" endtime="20210619 01:12:51.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:51.528" level="INFO">key1</msg>
<status status="PASS" starttime="20210619 01:12:51.527" endtime="20210619 01:12:51.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:51.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:51.528" endtime="20210619 01:12:51.529"/>
</kw>
<status status="PASS" starttime="20210619 01:12:47.340" endtime="20210619 01:12:51.529"/>
</kw>
<msg timestamp="20210619 01:12:51.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:47.340" endtime="20210619 01:12:51.529"/>
</kw>
<msg timestamp="20210619 01:12:51.530" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20210619 01:12:47.339" endtime="20210619 01:12:51.530"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:12:51.530" endtime="20210619 01:12:51.531"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:51.534" level="INFO">Running command 'ozone sh key rename o3://om:9862/20221-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:55.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:55.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:12:51.532" endtime="20210619 01:12:55.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:55.506" level="INFO"/>
<status status="PASS" starttime="20210619 01:12:55.506" endtime="20210619 01:12:55.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:55.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:55.507" endtime="20210619 01:12:55.507"/>
</kw>
<status status="PASS" starttime="20210619 01:12:51.532" endtime="20210619 01:12:55.508"/>
</kw>
<msg timestamp="20210619 01:12:55.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:51.531" endtime="20210619 01:12:55.508"/>
</kw>
<status status="PASS" starttime="20210619 01:12:51.531" endtime="20210619 01:12:55.508"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:55.512" level="INFO">Running command 'ozone sh key list o3://om:9862/20221-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:12:59.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:12:59.688" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20210619 01:12:55.510" endtime="20210619 01:12:59.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:12:59.690" level="INFO">key2</msg>
<status status="PASS" starttime="20210619 01:12:59.689" endtime="20210619 01:12:59.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:12:59.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:12:59.690" endtime="20210619 01:12:59.691"/>
</kw>
<status status="PASS" starttime="20210619 01:12:55.509" endtime="20210619 01:12:59.691"/>
</kw>
<msg timestamp="20210619 01:12:59.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:55.509" endtime="20210619 01:12:59.691"/>
</kw>
<msg timestamp="20210619 01:12:59.692" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20210619 01:12:55.508" endtime="20210619 01:12:59.692"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:12:59.692" endtime="20210619 01:12:59.692"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:12:59.696" level="INFO">Running command 'ozone sh key delete o3://om:9862/20221-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:03.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:03.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:12:59.694" endtime="20210619 01:13:03.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:03.637" level="INFO"/>
<status status="PASS" starttime="20210619 01:13:03.637" endtime="20210619 01:13:03.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:03.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:03.638" endtime="20210619 01:13:03.638"/>
</kw>
<status status="PASS" starttime="20210619 01:12:59.694" endtime="20210619 01:13:03.639"/>
</kw>
<msg timestamp="20210619 01:13:03.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:12:59.693" endtime="20210619 01:13:03.639"/>
</kw>
<status status="PASS" starttime="20210619 01:12:59.692" endtime="20210619 01:13:03.639"/>
</kw>
<status status="PASS" starttime="20210619 01:11:47.556" endtime="20210619 01:13:03.639"/>
</kw>
<status status="PASS" starttime="20210619 01:11:47.556" endtime="20210619 01:13:03.640"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:03.643" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3://om:9862/20221-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:07.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:07.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:13:03.641" endtime="20210619 01:13:07.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:07.745" level="INFO"/>
<status status="PASS" starttime="20210619 01:13:07.744" endtime="20210619 01:13:07.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:07.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:07.745" endtime="20210619 01:13:07.748"/>
</kw>
<status status="PASS" starttime="20210619 01:13:03.641" endtime="20210619 01:13:07.748"/>
</kw>
<msg timestamp="20210619 01:13:07.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:03.640" endtime="20210619 01:13:07.748"/>
</kw>
<status status="PASS" starttime="20210619 01:13:03.640" endtime="20210619 01:13:07.748"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:07.753" level="INFO">Running command 'ozone sh volume info o3://om:9862/20221-rpcwoport | jq -r '. | select(.name=="20221-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:11.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:11.806" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:13:07.751" endtime="20210619 01:13:11.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:11.807" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:13:11.806" endtime="20210619 01:13:11.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:11.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:11.807" endtime="20210619 01:13:11.808"/>
</kw>
<status status="PASS" starttime="20210619 01:13:07.750" endtime="20210619 01:13:11.808"/>
</kw>
<msg timestamp="20210619 01:13:11.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:07.750" endtime="20210619 01:13:11.809"/>
</kw>
<msg timestamp="20210619 01:13:11.809" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:13:07.749" endtime="20210619 01:13:11.809"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:13:11.809" endtime="20210619 01:13:11.810"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:11.814" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3://om:9862/20221-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:15.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:15.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:13:11.812" endtime="20210619 01:13:15.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:15.593" level="INFO"/>
<status status="PASS" starttime="20210619 01:13:15.592" endtime="20210619 01:13:15.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:15.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:15.594" endtime="20210619 01:13:15.594"/>
</kw>
<status status="PASS" starttime="20210619 01:13:11.811" endtime="20210619 01:13:15.595"/>
</kw>
<msg timestamp="20210619 01:13:15.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:11.811" endtime="20210619 01:13:15.595"/>
</kw>
<status status="PASS" starttime="20210619 01:13:11.810" endtime="20210619 01:13:15.595"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:15.599" level="INFO">Running command 'ozone sh volume info o3://om:9862/20221-rpcwoport | jq -r '. | select(.name=="20221-rpcwoport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:19.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:19.906" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:13:15.597" endtime="20210619 01:13:19.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:19.907" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:13:19.906" endtime="20210619 01:13:19.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:19.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:19.907" endtime="20210619 01:13:19.908"/>
</kw>
<status status="PASS" starttime="20210619 01:13:15.597" endtime="20210619 01:13:19.908"/>
</kw>
<msg timestamp="20210619 01:13:19.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:15.596" endtime="20210619 01:13:19.909"/>
</kw>
<msg timestamp="20210619 01:13:19.909" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:13:15.595" endtime="20210619 01:13:19.909"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:13:19.909" endtime="20210619 01:13:19.910"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:19.914" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3://om:9862/20221-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:23.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:23.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:13:19.912" endtime="20210619 01:13:23.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:23.455" level="INFO"/>
<status status="PASS" starttime="20210619 01:13:23.454" endtime="20210619 01:13:23.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:23.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:23.455" endtime="20210619 01:13:23.456"/>
</kw>
<status status="PASS" starttime="20210619 01:13:19.912" endtime="20210619 01:13:23.456"/>
</kw>
<msg timestamp="20210619 01:13:23.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:19.911" endtime="20210619 01:13:23.457"/>
</kw>
<status status="PASS" starttime="20210619 01:13:19.910" endtime="20210619 01:13:23.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:23.461" level="INFO">Running command 'ozone sh bucket info o3://om:9862/20221-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:27.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:27.388" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:13:23.459" endtime="20210619 01:13:27.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:27.389" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:13:27.389" endtime="20210619 01:13:27.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:27.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:27.390" endtime="20210619 01:13:27.390"/>
</kw>
<status status="PASS" starttime="20210619 01:13:23.459" endtime="20210619 01:13:27.391"/>
</kw>
<msg timestamp="20210619 01:13:27.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:23.458" endtime="20210619 01:13:27.391"/>
</kw>
<msg timestamp="20210619 01:13:27.391" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:13:23.457" endtime="20210619 01:13:27.392"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:13:27.392" endtime="20210619 01:13:27.392"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:27.396" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3://om:9862/20221-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:31.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:31.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:13:27.394" endtime="20210619 01:13:31.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:31.154" level="INFO"/>
<status status="PASS" starttime="20210619 01:13:31.153" endtime="20210619 01:13:31.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:31.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:31.154" endtime="20210619 01:13:31.155"/>
</kw>
<status status="PASS" starttime="20210619 01:13:27.394" endtime="20210619 01:13:31.155"/>
</kw>
<msg timestamp="20210619 01:13:31.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:27.393" endtime="20210619 01:13:31.155"/>
</kw>
<status status="PASS" starttime="20210619 01:13:27.392" endtime="20210619 01:13:31.156"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:31.161" level="INFO">Running command 'ozone sh bucket info o3://om:9862/20221-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:34.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:34.951" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:13:31.159" endtime="20210619 01:13:34.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:34.952" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:13:34.951" endtime="20210619 01:13:34.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:34.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:34.952" endtime="20210619 01:13:34.953"/>
</kw>
<status status="PASS" starttime="20210619 01:13:31.159" endtime="20210619 01:13:34.954"/>
</kw>
<msg timestamp="20210619 01:13:34.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:31.158" endtime="20210619 01:13:34.954"/>
</kw>
<msg timestamp="20210619 01:13:34.954" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:13:31.156" endtime="20210619 01:13:34.954"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:13:34.954" endtime="20210619 01:13:34.956"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:34.962" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/20221-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:38.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:38.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:13:34.960" endtime="20210619 01:13:38.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:38.398" level="INFO"/>
<status status="PASS" starttime="20210619 01:13:38.397" endtime="20210619 01:13:38.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:38.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:38.398" endtime="20210619 01:13:38.399"/>
</kw>
<status status="PASS" starttime="20210619 01:13:34.959" endtime="20210619 01:13:38.399"/>
</kw>
<msg timestamp="20210619 01:13:38.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:34.958" endtime="20210619 01:13:38.399"/>
</kw>
<status status="PASS" starttime="20210619 01:13:34.956" endtime="20210619 01:13:38.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:38.403" level="INFO">Running command 'ozone sh volume delete o3://om:9862/20221-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:42.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:42.007" level="INFO">${output} = Volume 20221-rpcwoport is deleted</msg>
<status status="PASS" starttime="20210619 01:13:38.401" endtime="20210619 01:13:42.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:42.008" level="INFO">Volume 20221-rpcwoport is deleted</msg>
<status status="PASS" starttime="20210619 01:13:42.007" endtime="20210619 01:13:42.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:42.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:42.008" endtime="20210619 01:13:42.009"/>
</kw>
<status status="PASS" starttime="20210619 01:13:38.401" endtime="20210619 01:13:42.009"/>
</kw>
<msg timestamp="20210619 01:13:42.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:38.400" endtime="20210619 01:13:42.010"/>
</kw>
<status status="PASS" starttime="20210619 01:13:38.400" endtime="20210619 01:13:42.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:42.014" level="INFO">Running command 'ozone sh volume create o3://om:9862/20221-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:45.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:45.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:13:42.012" endtime="20210619 01:13:45.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:45.726" level="INFO"/>
<status status="PASS" starttime="20210619 01:13:45.726" endtime="20210619 01:13:45.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:45.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:45.727" endtime="20210619 01:13:45.727"/>
</kw>
<status status="PASS" starttime="20210619 01:13:42.011" endtime="20210619 01:13:45.728"/>
</kw>
<msg timestamp="20210619 01:13:45.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:42.011" endtime="20210619 01:13:45.728"/>
</kw>
<status status="PASS" starttime="20210619 01:13:42.010" endtime="20210619 01:13:45.728"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:45.732" level="INFO">Running command 'ozone sh volume info o3://om:9862/20221-rpcwoport | jq -r '. | select(.name=="20221-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:49.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:49.652" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:13:45.730" endtime="20210619 01:13:49.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:49.653" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:13:49.653" endtime="20210619 01:13:49.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:49.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:49.654" endtime="20210619 01:13:49.654"/>
</kw>
<status status="PASS" starttime="20210619 01:13:45.730" endtime="20210619 01:13:49.655"/>
</kw>
<msg timestamp="20210619 01:13:49.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:45.729" endtime="20210619 01:13:49.655"/>
</kw>
<msg timestamp="20210619 01:13:49.655" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:13:45.728" endtime="20210619 01:13:49.655"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:13:49.655" endtime="20210619 01:13:49.656"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:49.660" level="INFO">Running command 'ozone sh volume info o3://om:9862/20221-rpcwoport | jq -r '. | select(.name=="20221-rpcwoport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:53.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:53.391" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:13:49.658" endtime="20210619 01:13:53.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:53.393" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:13:53.392" endtime="20210619 01:13:53.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:53.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:53.393" endtime="20210619 01:13:53.394"/>
</kw>
<status status="PASS" starttime="20210619 01:13:49.657" endtime="20210619 01:13:53.394"/>
</kw>
<msg timestamp="20210619 01:13:53.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:49.657" endtime="20210619 01:13:53.394"/>
</kw>
<msg timestamp="20210619 01:13:53.394" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:13:49.656" endtime="20210619 01:13:53.394"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:13:53.395" endtime="20210619 01:13:53.395"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:53.399" level="INFO">Running command 'ozone sh bucket create o3://om:9862/20221-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:13:57.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:13:57.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:13:53.397" endtime="20210619 01:13:57.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:13:57.274" level="INFO"/>
<status status="PASS" starttime="20210619 01:13:57.274" endtime="20210619 01:13:57.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:13:57.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:13:57.275" endtime="20210619 01:13:57.275"/>
</kw>
<status status="PASS" starttime="20210619 01:13:53.396" endtime="20210619 01:13:57.276"/>
</kw>
<msg timestamp="20210619 01:13:57.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:53.396" endtime="20210619 01:13:57.276"/>
</kw>
<status status="PASS" starttime="20210619 01:13:53.395" endtime="20210619 01:13:57.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:13:57.281" level="INFO">Running command 'ozone sh bucket info o3://om:9862/20221-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:01.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:01.131" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:13:57.279" endtime="20210619 01:14:01.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:01.132" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:14:01.131" endtime="20210619 01:14:01.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:01.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:01.132" endtime="20210619 01:14:01.133"/>
</kw>
<status status="PASS" starttime="20210619 01:13:57.278" endtime="20210619 01:14:01.134"/>
</kw>
<msg timestamp="20210619 01:14:01.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:13:57.277" endtime="20210619 01:14:01.134"/>
</kw>
<msg timestamp="20210619 01:14:01.134" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:13:57.276" endtime="20210619 01:14:01.134"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:14:01.134" endtime="20210619 01:14:01.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:01.139" level="INFO">Running command 'ozone sh bucket info o3://om:9862/20221-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:05.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:05.146" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:14:01.137" endtime="20210619 01:14:05.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:05.147" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:14:05.147" endtime="20210619 01:14:05.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:05.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:05.148" endtime="20210619 01:14:05.148"/>
</kw>
<status status="PASS" starttime="20210619 01:14:01.136" endtime="20210619 01:14:05.149"/>
</kw>
<msg timestamp="20210619 01:14:05.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:01.136" endtime="20210619 01:14:05.149"/>
</kw>
<msg timestamp="20210619 01:14:05.149" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:14:01.135" endtime="20210619 01:14:05.149"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:14:05.149" endtime="20210619 01:14:05.150"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:05.154" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/20221-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:08.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:08.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:14:05.152" endtime="20210619 01:14:08.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:08.722" level="INFO"/>
<status status="PASS" starttime="20210619 01:14:08.722" endtime="20210619 01:14:08.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:08.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:08.723" endtime="20210619 01:14:08.723"/>
</kw>
<status status="PASS" starttime="20210619 01:14:05.151" endtime="20210619 01:14:08.724"/>
</kw>
<msg timestamp="20210619 01:14:08.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:05.151" endtime="20210619 01:14:08.724"/>
</kw>
<status status="PASS" starttime="20210619 01:14:05.150" endtime="20210619 01:14:08.724"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:08.728" level="INFO">Running command 'ozone sh volume delete o3://om:9862/20221-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:11.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:11.978" level="INFO">${output} = Volume 20221-rpcwoport is deleted</msg>
<status status="PASS" starttime="20210619 01:14:08.726" endtime="20210619 01:14:11.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:11.979" level="INFO">Volume 20221-rpcwoport is deleted</msg>
<status status="PASS" starttime="20210619 01:14:11.978" endtime="20210619 01:14:11.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:11.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:11.980" endtime="20210619 01:14:11.980"/>
</kw>
<status status="PASS" starttime="20210619 01:14:08.725" endtime="20210619 01:14:11.981"/>
</kw>
<msg timestamp="20210619 01:14:11.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:08.725" endtime="20210619 01:14:11.981"/>
</kw>
<status status="PASS" starttime="20210619 01:14:08.724" endtime="20210619 01:14:11.981"/>
</kw>
<status status="PASS" starttime="20210619 01:10:54.452" endtime="20210619 01:14:11.981"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:10:54.422" endtime="20210619 01:14:11.982"/>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:11.988" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:11.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:11.991" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:14:11.986" endtime="20210619 01:14:11.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:11.992" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:14:11.992" endtime="20210619 01:14:11.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:11.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:11.992" endtime="20210619 01:14:11.993"/>
</kw>
<status status="PASS" starttime="20210619 01:14:11.986" endtime="20210619 01:14:11.994"/>
</kw>
<msg timestamp="20210619 01:14:11.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:11.985" endtime="20210619 01:14:11.994"/>
</kw>
<msg timestamp="20210619 01:14:11.994" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:14:11.984" endtime="20210619 01:14:11.994"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:14:11.995" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:14:11.994" endtime="20210619 01:14:11.995"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:11.999" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:12.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:12.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:14:11.998" endtime="20210619 01:14:12.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:12.030" level="INFO"/>
<status status="PASS" starttime="20210619 01:14:12.030" endtime="20210619 01:14:12.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:12.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:12.031" endtime="20210619 01:14:12.031"/>
</kw>
<status status="PASS" starttime="20210619 01:14:11.997" endtime="20210619 01:14:12.032"/>
</kw>
<msg timestamp="20210619 01:14:12.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:11.997" endtime="20210619 01:14:12.032"/>
</kw>
<status status="PASS" starttime="20210619 01:14:11.996" endtime="20210619 01:14:12.032"/>
</kw>
<status status="PASS" starttime="20210619 01:14:11.995" endtime="20210619 01:14:12.032"/>
</kw>
<status status="PASS" starttime="20210619 01:14:11.984" endtime="20210619 01:14:12.033"/>
</kw>
<status status="PASS" starttime="20210619 01:14:11.983" endtime="20210619 01:14:12.033"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:12.037" level="INFO">Running command 'ozone sh volume create o3://om:9862/20221-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:15.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:15.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:14:12.035" endtime="20210619 01:14:15.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:15.395" level="INFO"/>
<status status="PASS" starttime="20210619 01:14:15.394" endtime="20210619 01:14:15.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:15.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:15.395" endtime="20210619 01:14:15.396"/>
</kw>
<status status="PASS" starttime="20210619 01:14:12.035" endtime="20210619 01:14:15.396"/>
</kw>
<msg timestamp="20210619 01:14:15.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:12.034" endtime="20210619 01:14:15.396"/>
</kw>
<status status="PASS" starttime="20210619 01:14:12.034" endtime="20210619 01:14:15.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:15.400" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/20221-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:19.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:19.105" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:14:15.398" endtime="20210619 01:14:19.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:19.106" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:14:19.106" endtime="20210619 01:14:19.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:19.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:19.107" endtime="20210619 01:14:19.107"/>
</kw>
<status status="PASS" starttime="20210619 01:14:15.398" endtime="20210619 01:14:19.108"/>
</kw>
<msg timestamp="20210619 01:14:19.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:15.397" endtime="20210619 01:14:19.108"/>
</kw>
<msg timestamp="20210619 01:14:19.108" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:14:15.397" endtime="20210619 01:14:19.108"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:14:19.108" endtime="20210619 01:14:19.110"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:19.115" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/20221-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:22.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:22.640" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210619 01:14:19.111" endtime="20210619 01:14:22.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:22.641" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210619 01:14:22.640" endtime="20210619 01:14:22.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:22.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:22.642" endtime="20210619 01:14:22.642"/>
</kw>
<status status="PASS" starttime="20210619 01:14:19.111" endtime="20210619 01:14:22.643"/>
</kw>
<msg timestamp="20210619 01:14:22.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:19.111" endtime="20210619 01:14:22.643"/>
</kw>
<msg timestamp="20210619 01:14:22.644" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210619 01:14:19.110" endtime="20210619 01:14:22.644"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:22.648" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/20221-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:26.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:26.597" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:14:22.646" endtime="20210619 01:14:26.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:26.598" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:14:26.597" endtime="20210619 01:14:26.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:26.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:26.598" endtime="20210619 01:14:26.599"/>
</kw>
<status status="PASS" starttime="20210619 01:14:22.645" endtime="20210619 01:14:26.599"/>
</kw>
<msg timestamp="20210619 01:14:26.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:22.645" endtime="20210619 01:14:26.600"/>
</kw>
<msg timestamp="20210619 01:14:26.600" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:14:22.644" endtime="20210619 01:14:26.600"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:14:26.600" endtime="20210619 01:14:26.601"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:26.605" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/20221-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:30.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:30.121" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:14:26.603" endtime="20210619 01:14:30.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:30.122" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:14:30.122" endtime="20210619 01:14:30.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:30.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:30.123" endtime="20210619 01:14:30.123"/>
</kw>
<status status="PASS" starttime="20210619 01:14:26.602" endtime="20210619 01:14:30.124"/>
</kw>
<msg timestamp="20210619 01:14:30.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:26.602" endtime="20210619 01:14:30.124"/>
</kw>
<msg timestamp="20210619 01:14:30.124" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:14:26.601" endtime="20210619 01:14:30.124"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:30.128" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/20221-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:33.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:33.902" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:14:30.126" endtime="20210619 01:14:33.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:33.903" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:14:33.902" endtime="20210619 01:14:33.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:33.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:33.904" endtime="20210619 01:14:33.904"/>
</kw>
<status status="PASS" starttime="20210619 01:14:30.126" endtime="20210619 01:14:33.905"/>
</kw>
<msg timestamp="20210619 01:14:33.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:30.125" endtime="20210619 01:14:33.905"/>
</kw>
<msg timestamp="20210619 01:14:33.905" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:14:30.124" endtime="20210619 01:14:33.905"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:14:33.905" endtime="20210619 01:14:33.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:33.910" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/20221-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:37.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:37.329" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:14:33.908" endtime="20210619 01:14:37.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:37.330" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:14:37.329" endtime="20210619 01:14:37.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:37.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:37.330" endtime="20210619 01:14:37.331"/>
</kw>
<status status="PASS" starttime="20210619 01:14:33.908" endtime="20210619 01:14:37.332"/>
</kw>
<msg timestamp="20210619 01:14:37.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:33.907" endtime="20210619 01:14:37.332"/>
</kw>
<msg timestamp="20210619 01:14:37.332" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:14:33.907" endtime="20210619 01:14:37.332"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:37.336" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/20221-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:40.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:40.775" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210619 01:14:37.334" endtime="20210619 01:14:40.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:40.777" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:14:40.776" endtime="20210619 01:14:40.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:40.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:40.777" endtime="20210619 01:14:40.778"/>
</kw>
<status status="PASS" starttime="20210619 01:14:37.333" endtime="20210619 01:14:40.778"/>
</kw>
<msg timestamp="20210619 01:14:40.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:37.333" endtime="20210619 01:14:40.778"/>
</kw>
<msg timestamp="20210619 01:14:40.778" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210619 01:14:37.332" endtime="20210619 01:14:40.779"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:14:40.779" endtime="20210619 01:14:40.779"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:14:40.779" endtime="20210619 01:14:40.780"/>
</kw>
<status status="PASS" starttime="20210619 01:14:12.033" endtime="20210619 01:14:40.780"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:14:11.982" endtime="20210619 01:14:40.781"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:40.787" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:40.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:40.790" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:14:40.785" endtime="20210619 01:14:40.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:40.791" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:14:40.790" endtime="20210619 01:14:40.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:40.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:40.791" endtime="20210619 01:14:40.792"/>
</kw>
<status status="PASS" starttime="20210619 01:14:40.784" endtime="20210619 01:14:40.792"/>
</kw>
<msg timestamp="20210619 01:14:40.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:40.784" endtime="20210619 01:14:40.793"/>
</kw>
<msg timestamp="20210619 01:14:40.793" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:14:40.783" endtime="20210619 01:14:40.793"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:14:40.794" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:14:40.793" endtime="20210619 01:14:40.794"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:40.798" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:40.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:40.805" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:14:40.797" endtime="20210619 01:14:40.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:40.806" level="INFO"/>
<status status="PASS" starttime="20210619 01:14:40.805" endtime="20210619 01:14:40.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:40.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:40.806" endtime="20210619 01:14:40.807"/>
</kw>
<status status="PASS" starttime="20210619 01:14:40.796" endtime="20210619 01:14:40.807"/>
</kw>
<msg timestamp="20210619 01:14:40.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:40.795" endtime="20210619 01:14:40.808"/>
</kw>
<status status="PASS" starttime="20210619 01:14:40.795" endtime="20210619 01:14:40.808"/>
</kw>
<status status="PASS" starttime="20210619 01:14:40.794" endtime="20210619 01:14:40.808"/>
</kw>
<status status="PASS" starttime="20210619 01:14:40.783" endtime="20210619 01:14:40.808"/>
</kw>
<status status="PASS" starttime="20210619 01:14:40.782" endtime="20210619 01:14:40.808"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:40.812" level="INFO">Running command 'ozone sh bucket create o3://om:9862/20221-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:44.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:44.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:14:40.811" endtime="20210619 01:14:44.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:44.235" level="INFO"/>
<status status="PASS" starttime="20210619 01:14:44.235" endtime="20210619 01:14:44.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:44.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:44.236" endtime="20210619 01:14:44.236"/>
</kw>
<status status="PASS" starttime="20210619 01:14:40.810" endtime="20210619 01:14:44.236"/>
</kw>
<msg timestamp="20210619 01:14:44.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:40.810" endtime="20210619 01:14:44.237"/>
</kw>
<status status="PASS" starttime="20210619 01:14:40.809" endtime="20210619 01:14:44.237"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:44.241" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/20221-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:47.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:47.954" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:14:44.239" endtime="20210619 01:14:47.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:47.955" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:14:47.954" endtime="20210619 01:14:47.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:47.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:47.955" endtime="20210619 01:14:47.956"/>
</kw>
<status status="PASS" starttime="20210619 01:14:44.238" endtime="20210619 01:14:47.957"/>
</kw>
<msg timestamp="20210619 01:14:47.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:44.238" endtime="20210619 01:14:47.957"/>
</kw>
<msg timestamp="20210619 01:14:47.957" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:14:44.237" endtime="20210619 01:14:47.957"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:14:47.957" endtime="20210619 01:14:47.958"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:47.962" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/20221-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:51.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:51.478" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210619 01:14:47.960" endtime="20210619 01:14:51.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:51.480" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210619 01:14:51.479" endtime="20210619 01:14:51.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:51.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:51.480" endtime="20210619 01:14:51.481"/>
</kw>
<status status="PASS" starttime="20210619 01:14:47.959" endtime="20210619 01:14:51.481"/>
</kw>
<msg timestamp="20210619 01:14:51.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:47.959" endtime="20210619 01:14:51.481"/>
</kw>
<msg timestamp="20210619 01:14:51.482" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210619 01:14:47.958" endtime="20210619 01:14:51.482"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:51.486" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/20221-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:55.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:55.116" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:14:51.484" endtime="20210619 01:14:55.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:55.118" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:14:55.117" endtime="20210619 01:14:55.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:55.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:55.118" endtime="20210619 01:14:55.118"/>
</kw>
<status status="PASS" starttime="20210619 01:14:51.483" endtime="20210619 01:14:55.119"/>
</kw>
<msg timestamp="20210619 01:14:55.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:51.483" endtime="20210619 01:14:55.119"/>
</kw>
<msg timestamp="20210619 01:14:55.119" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:14:51.482" endtime="20210619 01:14:55.119"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:14:55.120" endtime="20210619 01:14:55.121"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:55.124" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/20221-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:14:58.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:14:58.490" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:14:55.122" endtime="20210619 01:14:58.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:14:58.491" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:14:58.491" endtime="20210619 01:14:58.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:14:58.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:14:58.492" endtime="20210619 01:14:58.492"/>
</kw>
<status status="PASS" starttime="20210619 01:14:55.122" endtime="20210619 01:14:58.493"/>
</kw>
<msg timestamp="20210619 01:14:58.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:55.122" endtime="20210619 01:14:58.493"/>
</kw>
<msg timestamp="20210619 01:14:58.493" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:14:55.121" endtime="20210619 01:14:58.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:14:58.498" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/20221-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:02.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:02.339" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:14:58.496" endtime="20210619 01:15:02.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:02.341" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:15:02.340" endtime="20210619 01:15:02.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:02.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:02.341" endtime="20210619 01:15:02.342"/>
</kw>
<status status="PASS" starttime="20210619 01:14:58.496" endtime="20210619 01:15:02.342"/>
</kw>
<msg timestamp="20210619 01:15:02.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:14:58.494" endtime="20210619 01:15:02.342"/>
</kw>
<msg timestamp="20210619 01:15:02.343" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:14:58.494" endtime="20210619 01:15:02.343"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:15:02.343" endtime="20210619 01:15:02.344"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:02.347" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/20221-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:05.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:05.689" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:15:02.346" endtime="20210619 01:15:05.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:05.690" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:15:05.690" endtime="20210619 01:15:05.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:05.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:05.691" endtime="20210619 01:15:05.691"/>
</kw>
<status status="PASS" starttime="20210619 01:15:02.345" endtime="20210619 01:15:05.692"/>
</kw>
<msg timestamp="20210619 01:15:05.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:02.345" endtime="20210619 01:15:05.692"/>
</kw>
<msg timestamp="20210619 01:15:05.692" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:15:02.344" endtime="20210619 01:15:05.692"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:05.696" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/20221-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:09.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:09.485" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210619 01:15:05.694" endtime="20210619 01:15:09.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:09.487" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:15:09.486" endtime="20210619 01:15:09.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:09.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:09.487" endtime="20210619 01:15:09.488"/>
</kw>
<status status="PASS" starttime="20210619 01:15:05.694" endtime="20210619 01:15:09.488"/>
</kw>
<msg timestamp="20210619 01:15:09.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:05.693" endtime="20210619 01:15:09.489"/>
</kw>
<msg timestamp="20210619 01:15:09.489" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210619 01:15:05.693" endtime="20210619 01:15:09.489"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:15:09.489" endtime="20210619 01:15:09.490"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:15:09.490" endtime="20210619 01:15:09.490"/>
</kw>
<status status="PASS" starttime="20210619 01:14:40.808" endtime="20210619 01:15:09.491"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:14:40.781" endtime="20210619 01:15:09.491"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:09.497" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:09.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:09.500" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:15:09.495" endtime="20210619 01:15:09.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:09.501" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:15:09.501" endtime="20210619 01:15:09.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:09.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:09.501" endtime="20210619 01:15:09.502"/>
</kw>
<status status="PASS" starttime="20210619 01:15:09.494" endtime="20210619 01:15:09.502"/>
</kw>
<msg timestamp="20210619 01:15:09.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:09.494" endtime="20210619 01:15:09.503"/>
</kw>
<msg timestamp="20210619 01:15:09.503" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:15:09.494" endtime="20210619 01:15:09.503"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:15:09.504" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:15:09.503" endtime="20210619 01:15:09.504"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:09.508" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:09.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:09.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:15:09.506" endtime="20210619 01:15:09.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:09.516" level="INFO"/>
<status status="PASS" starttime="20210619 01:15:09.515" endtime="20210619 01:15:09.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:09.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:09.516" endtime="20210619 01:15:09.517"/>
</kw>
<status status="PASS" starttime="20210619 01:15:09.506" endtime="20210619 01:15:09.517"/>
</kw>
<msg timestamp="20210619 01:15:09.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:09.505" endtime="20210619 01:15:09.518"/>
</kw>
<status status="PASS" starttime="20210619 01:15:09.505" endtime="20210619 01:15:09.518"/>
</kw>
<status status="PASS" starttime="20210619 01:15:09.504" endtime="20210619 01:15:09.518"/>
</kw>
<status status="PASS" starttime="20210619 01:15:09.493" endtime="20210619 01:15:09.518"/>
</kw>
<status status="PASS" starttime="20210619 01:15:09.492" endtime="20210619 01:15:09.518"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:09.523" level="INFO">Running command 'ozone sh key put o3://om:9862/20221-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:15.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:15.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:15:09.521" endtime="20210619 01:15:15.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:15.443" level="INFO"/>
<status status="PASS" starttime="20210619 01:15:15.443" endtime="20210619 01:15:15.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:15.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:15.444" endtime="20210619 01:15:15.444"/>
</kw>
<status status="PASS" starttime="20210619 01:15:09.520" endtime="20210619 01:15:15.445"/>
</kw>
<msg timestamp="20210619 01:15:15.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:09.520" endtime="20210619 01:15:15.445"/>
</kw>
<status status="PASS" starttime="20210619 01:15:09.519" endtime="20210619 01:15:15.445"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:15.449" level="INFO">Running command 'ozone sh key getacl o3://om:9862/20221-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:19.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:19.190" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:15:15.447" endtime="20210619 01:15:19.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:19.192" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:15:19.191" endtime="20210619 01:15:19.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:19.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:19.192" endtime="20210619 01:15:19.193"/>
</kw>
<status status="PASS" starttime="20210619 01:15:15.446" endtime="20210619 01:15:19.193"/>
</kw>
<msg timestamp="20210619 01:15:19.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:15.446" endtime="20210619 01:15:19.193"/>
</kw>
<msg timestamp="20210619 01:15:19.194" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:15:15.445" endtime="20210619 01:15:19.194"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:15:19.194" endtime="20210619 01:15:19.194"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:19.198" level="INFO">Running command 'ozone sh key addacl o3://om:9862/20221-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:22.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:22.806" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:15:19.196" endtime="20210619 01:15:22.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:22.807" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:15:22.806" endtime="20210619 01:15:22.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:22.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:22.807" endtime="20210619 01:15:22.808"/>
</kw>
<status status="PASS" starttime="20210619 01:15:19.196" endtime="20210619 01:15:22.808"/>
</kw>
<msg timestamp="20210619 01:15:22.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:19.195" endtime="20210619 01:15:22.808"/>
</kw>
<msg timestamp="20210619 01:15:22.809" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:15:19.195" endtime="20210619 01:15:22.809"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:22.812" level="INFO">Running command 'ozone sh key getacl o3://om:9862/20221-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:26.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:26.863" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:15:22.811" endtime="20210619 01:15:26.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:26.864" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:15:26.863" endtime="20210619 01:15:26.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:26.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:26.864" endtime="20210619 01:15:26.865"/>
</kw>
<status status="PASS" starttime="20210619 01:15:22.810" endtime="20210619 01:15:26.865"/>
</kw>
<msg timestamp="20210619 01:15:26.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:22.810" endtime="20210619 01:15:26.866"/>
</kw>
<msg timestamp="20210619 01:15:26.866" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:15:22.809" endtime="20210619 01:15:26.866"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:15:26.866" endtime="20210619 01:15:26.867"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:26.871" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/20221-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:30.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:30.340" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:15:26.869" endtime="20210619 01:15:30.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:30.342" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:15:30.341" endtime="20210619 01:15:30.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:30.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:30.342" endtime="20210619 01:15:30.343"/>
</kw>
<status status="PASS" starttime="20210619 01:15:26.868" endtime="20210619 01:15:30.343"/>
</kw>
<msg timestamp="20210619 01:15:30.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:26.868" endtime="20210619 01:15:30.344"/>
</kw>
<msg timestamp="20210619 01:15:30.344" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:15:26.867" endtime="20210619 01:15:30.344"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:30.348" level="INFO">Running command 'ozone sh key getacl o3://om:9862/20221-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:34.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:34.142" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:15:30.346" endtime="20210619 01:15:34.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:34.143" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:15:34.143" endtime="20210619 01:15:34.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:34.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:34.144" endtime="20210619 01:15:34.144"/>
</kw>
<status status="PASS" starttime="20210619 01:15:30.345" endtime="20210619 01:15:34.145"/>
</kw>
<msg timestamp="20210619 01:15:34.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:30.345" endtime="20210619 01:15:34.145"/>
</kw>
<msg timestamp="20210619 01:15:34.145" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:15:30.344" endtime="20210619 01:15:34.145"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:15:34.145" endtime="20210619 01:15:34.146"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:34.150" level="INFO">Running command 'ozone sh key setacl o3://om:9862/20221-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:37.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:37.615" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:15:34.148" endtime="20210619 01:15:37.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:37.616" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:15:37.615" endtime="20210619 01:15:37.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:37.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:37.616" endtime="20210619 01:15:37.617"/>
</kw>
<status status="PASS" starttime="20210619 01:15:34.148" endtime="20210619 01:15:37.617"/>
</kw>
<msg timestamp="20210619 01:15:37.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:34.147" endtime="20210619 01:15:37.618"/>
</kw>
<msg timestamp="20210619 01:15:37.618" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:15:34.146" endtime="20210619 01:15:37.618"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:37.622" level="INFO">Running command 'ozone sh key getacl o3://om:9862/20221-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:41.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:41.493" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210619 01:15:37.620" endtime="20210619 01:15:41.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:41.494" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:15:41.493" endtime="20210619 01:15:41.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:41.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:41.494" endtime="20210619 01:15:41.495"/>
</kw>
<status status="PASS" starttime="20210619 01:15:37.619" endtime="20210619 01:15:41.495"/>
</kw>
<msg timestamp="20210619 01:15:41.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:37.619" endtime="20210619 01:15:41.496"/>
</kw>
<msg timestamp="20210619 01:15:41.496" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210619 01:15:37.618" endtime="20210619 01:15:41.496"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:15:41.496" endtime="20210619 01:15:41.497"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:15:41.497" endtime="20210619 01:15:41.498"/>
</kw>
<status status="PASS" starttime="20210619 01:15:09.518" endtime="20210619 01:15:41.498"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:15:09.492" endtime="20210619 01:15:41.498"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:41.506" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:41.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:41.509" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:15:41.504" endtime="20210619 01:15:41.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:41.510" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:15:41.510" endtime="20210619 01:15:41.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:41.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:41.511" endtime="20210619 01:15:41.511"/>
</kw>
<status status="PASS" starttime="20210619 01:15:41.502" endtime="20210619 01:15:41.512"/>
</kw>
<msg timestamp="20210619 01:15:41.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:41.502" endtime="20210619 01:15:41.512"/>
</kw>
<msg timestamp="20210619 01:15:41.513" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:15:41.501" endtime="20210619 01:15:41.513"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:15:41.513" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:15:41.513" endtime="20210619 01:15:41.514"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:41.517" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:41.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:41.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:15:41.516" endtime="20210619 01:15:41.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:41.525" level="INFO"/>
<status status="PASS" starttime="20210619 01:15:41.525" endtime="20210619 01:15:41.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:41.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:41.526" endtime="20210619 01:15:41.526"/>
</kw>
<status status="PASS" starttime="20210619 01:15:41.515" endtime="20210619 01:15:41.527"/>
</kw>
<msg timestamp="20210619 01:15:41.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:41.515" endtime="20210619 01:15:41.527"/>
</kw>
<status status="PASS" starttime="20210619 01:15:41.514" endtime="20210619 01:15:41.527"/>
</kw>
<status status="PASS" starttime="20210619 01:15:41.514" endtime="20210619 01:15:41.527"/>
</kw>
<status status="PASS" starttime="20210619 01:15:41.501" endtime="20210619 01:15:41.527"/>
</kw>
<status status="PASS" starttime="20210619 01:15:41.500" endtime="20210619 01:15:41.527"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:41.531" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/20221-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:45.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:45.146" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210619 01:15:41.530" endtime="20210619 01:15:45.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:45.147" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210619 01:15:45.147" endtime="20210619 01:15:45.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:45.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:45.148" endtime="20210619 01:15:45.149"/>
</kw>
<status status="PASS" starttime="20210619 01:15:41.529" endtime="20210619 01:15:45.149"/>
</kw>
<msg timestamp="20210619 01:15:45.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:41.529" endtime="20210619 01:15:45.149"/>
</kw>
<status status="PASS" starttime="20210619 01:15:41.528" endtime="20210619 01:15:45.149"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:45.153" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/20221-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:48.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:48.758" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210619 01:15:45.151" endtime="20210619 01:15:48.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:48.759" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:15:48.758" endtime="20210619 01:15:48.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:48.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:48.760" endtime="20210619 01:15:48.760"/>
</kw>
<status status="PASS" starttime="20210619 01:15:45.151" endtime="20210619 01:15:48.761"/>
</kw>
<msg timestamp="20210619 01:15:48.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:45.150" endtime="20210619 01:15:48.761"/>
</kw>
<msg timestamp="20210619 01:15:48.761" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210619 01:15:45.150" endtime="20210619 01:15:48.761"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:15:48.762" endtime="20210619 01:15:48.763"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:48.767" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/20221-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:52.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:52.471" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210619 01:15:48.765" endtime="20210619 01:15:52.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:52.472" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210619 01:15:52.472" endtime="20210619 01:15:52.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:52.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:52.473" endtime="20210619 01:15:52.473"/>
</kw>
<status status="PASS" starttime="20210619 01:15:48.764" endtime="20210619 01:15:52.474"/>
</kw>
<msg timestamp="20210619 01:15:52.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:48.764" endtime="20210619 01:15:52.474"/>
</kw>
<msg timestamp="20210619 01:15:52.474" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210619 01:15:48.763" endtime="20210619 01:15:52.474"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:52.478" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/20221-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:15:56.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:15:56.500" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210619 01:15:52.476" endtime="20210619 01:15:56.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:15:56.502" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:15:56.501" endtime="20210619 01:15:56.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:15:56.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:15:56.502" endtime="20210619 01:15:56.503"/>
</kw>
<status status="PASS" starttime="20210619 01:15:52.476" endtime="20210619 01:15:56.503"/>
</kw>
<msg timestamp="20210619 01:15:56.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:52.475" endtime="20210619 01:15:56.503"/>
</kw>
<msg timestamp="20210619 01:15:56.504" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210619 01:15:52.475" endtime="20210619 01:15:56.504"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:15:56.504" endtime="20210619 01:15:56.505"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:15:56.509" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/20221-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:00.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:00.110" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:15:56.507" endtime="20210619 01:16:00.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:00.112" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:16:00.111" endtime="20210619 01:16:00.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:00.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:00.112" endtime="20210619 01:16:00.113"/>
</kw>
<status status="PASS" starttime="20210619 01:15:56.506" endtime="20210619 01:16:00.113"/>
</kw>
<msg timestamp="20210619 01:16:00.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:15:56.506" endtime="20210619 01:16:00.113"/>
</kw>
<msg timestamp="20210619 01:16:00.114" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:15:56.505" endtime="20210619 01:16:00.114"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:00.118" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/20221-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:04.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:04.137" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210619 01:16:00.116" endtime="20210619 01:16:04.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:04.138" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:16:04.138" endtime="20210619 01:16:04.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:04.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:04.139" endtime="20210619 01:16:04.139"/>
</kw>
<status status="PASS" starttime="20210619 01:16:00.115" endtime="20210619 01:16:04.140"/>
</kw>
<msg timestamp="20210619 01:16:04.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:00.115" endtime="20210619 01:16:04.140"/>
</kw>
<msg timestamp="20210619 01:16:04.140" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210619 01:16:00.114" endtime="20210619 01:16:04.140"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:16:04.141" endtime="20210619 01:16:04.141"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:16:04.141" endtime="20210619 01:16:04.142"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:04.146" level="INFO">Running command 'ozone sh key put o3://om:9862/20221-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:10.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:10.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:16:04.144" endtime="20210619 01:16:10.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:10.452" level="INFO"/>
<status status="PASS" starttime="20210619 01:16:10.451" endtime="20210619 01:16:10.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:10.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:10.453" endtime="20210619 01:16:10.454"/>
</kw>
<status status="PASS" starttime="20210619 01:16:04.144" endtime="20210619 01:16:10.454"/>
</kw>
<msg timestamp="20210619 01:16:10.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:04.143" endtime="20210619 01:16:10.454"/>
</kw>
<status status="PASS" starttime="20210619 01:16:04.142" endtime="20210619 01:16:10.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:10.458" level="INFO">Running command 'ozone sh key getacl o3://om:9862/20221-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:14.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:14.298" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:16:10.456" endtime="20210619 01:16:14.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:14.299" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:16:14.299" endtime="20210619 01:16:14.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:14.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:14.300" endtime="20210619 01:16:14.301"/>
</kw>
<status status="PASS" starttime="20210619 01:16:10.456" endtime="20210619 01:16:14.301"/>
</kw>
<msg timestamp="20210619 01:16:14.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:10.455" endtime="20210619 01:16:14.301"/>
</kw>
<msg timestamp="20210619 01:16:14.302" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:16:10.455" endtime="20210619 01:16:14.302"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:16:14.302" endtime="20210619 01:16:14.302"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:16:14.302" endtime="20210619 01:16:14.303"/>
</kw>
<status status="PASS" starttime="20210619 01:15:41.528" endtime="20210619 01:16:14.303"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:15:41.499" endtime="20210619 01:16:14.303"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:14.310" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:14.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:14.318" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:16:14.308" endtime="20210619 01:16:14.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:14.319" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:16:14.319" endtime="20210619 01:16:14.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:14.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:14.320" endtime="20210619 01:16:14.320"/>
</kw>
<status status="PASS" starttime="20210619 01:16:14.307" endtime="20210619 01:16:14.321"/>
</kw>
<msg timestamp="20210619 01:16:14.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:14.307" endtime="20210619 01:16:14.321"/>
</kw>
<msg timestamp="20210619 01:16:14.321" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:16:14.306" endtime="20210619 01:16:14.321"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:16:14.322" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:16:14.322" endtime="20210619 01:16:14.322"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:14.327" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:14.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:14.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:16:14.325" endtime="20210619 01:16:14.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:14.336" level="INFO"/>
<status status="PASS" starttime="20210619 01:16:14.335" endtime="20210619 01:16:14.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:14.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:14.336" endtime="20210619 01:16:14.337"/>
</kw>
<status status="PASS" starttime="20210619 01:16:14.324" endtime="20210619 01:16:14.337"/>
</kw>
<msg timestamp="20210619 01:16:14.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:14.324" endtime="20210619 01:16:14.337"/>
</kw>
<status status="PASS" starttime="20210619 01:16:14.323" endtime="20210619 01:16:14.338"/>
</kw>
<status status="PASS" starttime="20210619 01:16:14.323" endtime="20210619 01:16:14.338"/>
</kw>
<status status="PASS" starttime="20210619 01:16:14.306" endtime="20210619 01:16:14.338"/>
</kw>
<status status="PASS" starttime="20210619 01:16:14.305" endtime="20210619 01:16:14.338"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:14.344" level="INFO">Running command 'ozone sh volume info o3:///20221-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:18.287" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:16:18.287" level="INFO">${output} = VOLUME_NOT_FOUND Volume 20221-rpcwport is not found</msg>
<status status="PASS" starttime="20210619 01:16:14.342" endtime="20210619 01:16:18.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:18.288" level="INFO">VOLUME_NOT_FOUND Volume 20221-rpcwport is not found</msg>
<status status="PASS" starttime="20210619 01:16:18.288" endtime="20210619 01:16:18.288"/>
</kw>
<msg timestamp="20210619 01:16:18.289" level="INFO">${result} = VOLUME_NOT_FOUND Volume 20221-rpcwport is not found</msg>
<status status="PASS" starttime="20210619 01:16:14.341" endtime="20210619 01:16:18.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:16:18.289" endtime="20210619 01:16:18.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:18.293" level="INFO">Running command 'ozone sh volume create o3:///20221-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:22.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:22.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:16:18.291" endtime="20210619 01:16:22.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:22.070" level="INFO"/>
<status status="PASS" starttime="20210619 01:16:22.065" endtime="20210619 01:16:22.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:22.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:22.071" endtime="20210619 01:16:22.071"/>
</kw>
<status status="PASS" starttime="20210619 01:16:18.291" endtime="20210619 01:16:22.072"/>
</kw>
<msg timestamp="20210619 01:16:22.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:18.290" endtime="20210619 01:16:22.072"/>
</kw>
<msg timestamp="20210619 01:16:22.073" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:16:18.290" endtime="20210619 01:16:22.073"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:16:22.073" endtime="20210619 01:16:22.073"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:22.077" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="20221-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:26.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:26.064" level="INFO">${output} = {
  "metadata": {},
  "name": "20221-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210619 01:16:22.075" endtime="20210619 01:16:26.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:26.066" level="INFO">{
  "metadata": {},
  "name": "20221-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-19T01:16:21.919Z",
  "modificationTime": "2021-06-19T01:16:21.919Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210619 01:16:26.065" endtime="20210619 01:16:26.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:26.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:26.066" endtime="20210619 01:16:26.067"/>
</kw>
<status status="PASS" starttime="20210619 01:16:22.075" endtime="20210619 01:16:26.067"/>
</kw>
<msg timestamp="20210619 01:16:26.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:22.074" endtime="20210619 01:16:26.067"/>
</kw>
<msg timestamp="20210619 01:16:26.068" level="INFO">${result} = {
  "metadata": {},
  "name": "20221-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210619 01:16:22.073" endtime="20210619 01:16:26.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:16:26.068" endtime="20210619 01:16:26.068"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:26.072" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="20221-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:30.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:30.044" level="INFO">${output} = {
  "metadata": {},
  "name": "20221-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210619 01:16:26.070" endtime="20210619 01:16:30.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:30.045" level="INFO">{
  "metadata": {},
  "name": "20221-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-19T01:16:21.919Z",
  "modificationTime": "2021-06-19T01:16:21.919Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210619 01:16:30.045" endtime="20210619 01:16:30.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:30.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:30.046" endtime="20210619 01:16:30.047"/>
</kw>
<status status="PASS" starttime="20210619 01:16:26.069" endtime="20210619 01:16:30.047"/>
</kw>
<msg timestamp="20210619 01:16:30.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:26.069" endtime="20210619 01:16:30.047"/>
</kw>
<msg timestamp="20210619 01:16:30.047" level="INFO">${result} = {
  "metadata": {},
  "name": "20221-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210619 01:16:26.068" endtime="20210619 01:16:30.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:16:30.048" endtime="20210619 01:16:30.048"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:30.052" level="INFO">Running command 'ozone sh volume setquota o3:///20221-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:33.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:33.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:16:30.050" endtime="20210619 01:16:33.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:33.402" level="INFO"/>
<status status="PASS" starttime="20210619 01:16:33.400" endtime="20210619 01:16:33.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:33.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:33.402" endtime="20210619 01:16:33.403"/>
</kw>
<status status="PASS" starttime="20210619 01:16:30.049" endtime="20210619 01:16:33.403"/>
</kw>
<msg timestamp="20210619 01:16:33.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:30.049" endtime="20210619 01:16:33.403"/>
</kw>
<status status="PASS" starttime="20210619 01:16:30.048" endtime="20210619 01:16:33.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:33.408" level="INFO">Running command 'ozone sh volume info o3:///20221-rpcwport | jq -r '. | select(.name=="20221-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:37.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:37.314" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:16:33.406" endtime="20210619 01:16:37.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:37.315" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210619 01:16:37.314" endtime="20210619 01:16:37.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:37.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:37.315" endtime="20210619 01:16:37.316"/>
</kw>
<status status="PASS" starttime="20210619 01:16:33.405" endtime="20210619 01:16:37.316"/>
</kw>
<msg timestamp="20210619 01:16:37.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:33.405" endtime="20210619 01:16:37.316"/>
</kw>
<msg timestamp="20210619 01:16:37.317" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:16:33.404" endtime="20210619 01:16:37.317"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:16:37.317" endtime="20210619 01:16:37.317"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:37.321" level="INFO">Running command 'ozone sh bucket create o3:///20221-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:40.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:40.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:16:37.319" endtime="20210619 01:16:40.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:40.887" level="INFO"/>
<status status="PASS" starttime="20210619 01:16:40.886" endtime="20210619 01:16:40.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:40.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:40.887" endtime="20210619 01:16:40.887"/>
</kw>
<status status="PASS" starttime="20210619 01:16:37.319" endtime="20210619 01:16:40.888"/>
</kw>
<msg timestamp="20210619 01:16:40.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:37.318" endtime="20210619 01:16:40.888"/>
</kw>
<status status="PASS" starttime="20210619 01:16:37.318" endtime="20210619 01:16:40.888"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:40.893" level="INFO">Running command 'ozone sh bucket info o3:///20221-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:44.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:44.944" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210619 01:16:40.891" endtime="20210619 01:16:44.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:44.946" level="INFO">DISK</msg>
<status status="PASS" starttime="20210619 01:16:44.944" endtime="20210619 01:16:44.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:44.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:44.946" endtime="20210619 01:16:44.947"/>
</kw>
<status status="PASS" starttime="20210619 01:16:40.890" endtime="20210619 01:16:44.948"/>
</kw>
<msg timestamp="20210619 01:16:44.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:40.890" endtime="20210619 01:16:44.949"/>
</kw>
<msg timestamp="20210619 01:16:44.949" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210619 01:16:40.888" endtime="20210619 01:16:44.949"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:16:44.950" endtime="20210619 01:16:44.951"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:44.959" level="INFO">Running command 'ozone sh bucket info o3:///20221-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:49.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:49.158" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:16:44.955" endtime="20210619 01:16:49.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:49.160" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210619 01:16:49.158" endtime="20210619 01:16:49.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:49.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:49.161" endtime="20210619 01:16:49.162"/>
</kw>
<status status="PASS" starttime="20210619 01:16:44.954" endtime="20210619 01:16:49.163"/>
</kw>
<msg timestamp="20210619 01:16:49.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:44.953" endtime="20210619 01:16:49.163"/>
</kw>
<msg timestamp="20210619 01:16:49.163" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:16:44.951" endtime="20210619 01:16:49.163"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:16:49.164" endtime="20210619 01:16:49.164"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:49.169" level="INFO">Running command 'ozone sh bucket info o3:///20221-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:53.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:53.126" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210619 01:16:49.167" endtime="20210619 01:16:53.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:53.127" level="INFO">100</msg>
<status status="PASS" starttime="20210619 01:16:53.127" endtime="20210619 01:16:53.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:53.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:53.128" endtime="20210619 01:16:53.128"/>
</kw>
<status status="PASS" starttime="20210619 01:16:49.166" endtime="20210619 01:16:53.129"/>
</kw>
<msg timestamp="20210619 01:16:53.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:49.165" endtime="20210619 01:16:53.129"/>
</kw>
<msg timestamp="20210619 01:16:53.129" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210619 01:16:49.164" endtime="20210619 01:16:53.129"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:16:53.130" endtime="20210619 01:16:53.130"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:53.134" level="INFO">Running command 'ozone sh bucket setquota o3:///20221-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:16:57.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:16:57.342" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:16:53.132" endtime="20210619 01:16:57.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:16:57.344" level="INFO"/>
<status status="PASS" starttime="20210619 01:16:57.343" endtime="20210619 01:16:57.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:16:57.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:16:57.344" endtime="20210619 01:16:57.345"/>
</kw>
<status status="PASS" starttime="20210619 01:16:53.131" endtime="20210619 01:16:57.345"/>
</kw>
<msg timestamp="20210619 01:16:57.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:53.131" endtime="20210619 01:16:57.345"/>
</kw>
<status status="PASS" starttime="20210619 01:16:53.130" endtime="20210619 01:16:57.345"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:16:57.350" level="INFO">Running command 'ozone sh bucket info o3:///20221-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:01.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:01.596" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210619 01:16:57.348" endtime="20210619 01:17:01.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:01.598" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210619 01:17:01.597" endtime="20210619 01:17:01.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:01.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:01.598" endtime="20210619 01:17:01.599"/>
</kw>
<status status="PASS" starttime="20210619 01:16:57.347" endtime="20210619 01:17:01.599"/>
</kw>
<msg timestamp="20210619 01:17:01.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:16:57.347" endtime="20210619 01:17:01.599"/>
</kw>
<msg timestamp="20210619 01:17:01.600" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210619 01:16:57.346" endtime="20210619 01:17:01.600"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:17:01.600" endtime="20210619 01:17:01.601"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:01.605" level="INFO">Running command 'ozone sh bucket info o3:///20221-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:05.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:05.450" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210619 01:17:01.603" endtime="20210619 01:17:05.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:05.452" level="INFO">1000</msg>
<status status="PASS" starttime="20210619 01:17:05.451" endtime="20210619 01:17:05.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:05.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:05.452" endtime="20210619 01:17:05.453"/>
</kw>
<status status="PASS" starttime="20210619 01:17:01.602" endtime="20210619 01:17:05.453"/>
</kw>
<msg timestamp="20210619 01:17:05.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:01.602" endtime="20210619 01:17:05.453"/>
</kw>
<msg timestamp="20210619 01:17:05.454" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210619 01:17:01.601" endtime="20210619 01:17:05.454"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:17:05.454" endtime="20210619 01:17:05.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:05.459" level="INFO">Running command 'ozone sh bucket list o3:///20221-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:09.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:09.520" level="INFO">${output} = 20221-rpcwport</msg>
<status status="PASS" starttime="20210619 01:17:05.457" endtime="20210619 01:17:09.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:09.521" level="INFO">20221-rpcwport</msg>
<status status="PASS" starttime="20210619 01:17:09.520" endtime="20210619 01:17:09.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:09.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:09.521" endtime="20210619 01:17:09.522"/>
</kw>
<status status="PASS" starttime="20210619 01:17:05.456" endtime="20210619 01:17:09.522"/>
</kw>
<msg timestamp="20210619 01:17:09.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:05.456" endtime="20210619 01:17:09.523"/>
</kw>
<msg timestamp="20210619 01:17:09.523" level="INFO">${result} = 20221-rpcwport</msg>
<status status="PASS" starttime="20210619 01:17:05.455" endtime="20210619 01:17:09.523"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:17:09.523" endtime="20210619 01:17:09.524"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:09.529" level="INFO">Running command 'ozone sh key put o3:///20221-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:15.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:15.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:17:09.527" endtime="20210619 01:17:15.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:15.441" level="INFO"/>
<status status="PASS" starttime="20210619 01:17:15.440" endtime="20210619 01:17:15.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:15.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:15.441" endtime="20210619 01:17:15.442"/>
</kw>
<status status="PASS" starttime="20210619 01:17:09.526" endtime="20210619 01:17:15.442"/>
</kw>
<msg timestamp="20210619 01:17:15.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:09.526" endtime="20210619 01:17:15.442"/>
</kw>
<status status="PASS" starttime="20210619 01:17:09.525" endtime="20210619 01:17:15.442"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:15.446" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:15.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:15.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:17:15.444" endtime="20210619 01:17:15.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:15.450" level="INFO"/>
<status status="PASS" starttime="20210619 01:17:15.449" endtime="20210619 01:17:15.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:15.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:15.450" endtime="20210619 01:17:15.451"/>
</kw>
<status status="PASS" starttime="20210619 01:17:15.444" endtime="20210619 01:17:15.451"/>
</kw>
<msg timestamp="20210619 01:17:15.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:15.443" endtime="20210619 01:17:15.451"/>
</kw>
<status status="PASS" starttime="20210619 01:17:15.443" endtime="20210619 01:17:15.451"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:15.455" level="INFO">Running command 'ozone sh key get o3:///20221-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:21.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:21.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:17:15.453" endtime="20210619 01:17:21.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:21.336" level="INFO"/>
<status status="PASS" starttime="20210619 01:17:21.336" endtime="20210619 01:17:21.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:21.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:21.337" endtime="20210619 01:17:21.337"/>
</kw>
<status status="PASS" starttime="20210619 01:17:15.453" endtime="20210619 01:17:21.338"/>
</kw>
<msg timestamp="20210619 01:17:21.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:15.452" endtime="20210619 01:17:21.338"/>
</kw>
<status status="PASS" starttime="20210619 01:17:15.452" endtime="20210619 01:17:21.339"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:21.343" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:21.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:21.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:17:21.340" endtime="20210619 01:17:21.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:21.347" level="INFO"/>
<status status="PASS" starttime="20210619 01:17:21.347" endtime="20210619 01:17:21.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:21.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:21.348" endtime="20210619 01:17:21.348"/>
</kw>
<status status="PASS" starttime="20210619 01:17:21.340" endtime="20210619 01:17:21.349"/>
</kw>
<msg timestamp="20210619 01:17:21.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:21.339" endtime="20210619 01:17:21.349"/>
</kw>
<status status="PASS" starttime="20210619 01:17:21.339" endtime="20210619 01:17:21.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:21.353" level="INFO">Running command 'ozone sh key put -t RATIS o3:///20221-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:27.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:27.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:17:21.352" endtime="20210619 01:17:27.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:27.846" level="INFO"/>
<status status="PASS" starttime="20210619 01:17:27.845" endtime="20210619 01:17:27.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:27.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:27.846" endtime="20210619 01:17:27.847"/>
</kw>
<status status="PASS" starttime="20210619 01:17:21.351" endtime="20210619 01:17:27.847"/>
</kw>
<msg timestamp="20210619 01:17:27.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:21.351" endtime="20210619 01:17:27.847"/>
</kw>
<status status="PASS" starttime="20210619 01:17:21.350" endtime="20210619 01:17:27.848"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:27.851" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:27.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:27.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:17:27.849" endtime="20210619 01:17:27.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:27.856" level="INFO"/>
<status status="PASS" starttime="20210619 01:17:27.855" endtime="20210619 01:17:27.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:27.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:27.857" endtime="20210619 01:17:27.857"/>
</kw>
<status status="PASS" starttime="20210619 01:17:27.849" endtime="20210619 01:17:27.858"/>
</kw>
<msg timestamp="20210619 01:17:27.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:27.848" endtime="20210619 01:17:27.858"/>
</kw>
<status status="PASS" starttime="20210619 01:17:27.848" endtime="20210619 01:17:27.858"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:27.862" level="INFO">Running command 'ozone sh key get o3:///20221-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:34.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:34.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:17:27.860" endtime="20210619 01:17:34.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:34.041" level="INFO"/>
<status status="PASS" starttime="20210619 01:17:34.040" endtime="20210619 01:17:34.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:34.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:34.041" endtime="20210619 01:17:34.042"/>
</kw>
<status status="PASS" starttime="20210619 01:17:27.859" endtime="20210619 01:17:34.043"/>
</kw>
<msg timestamp="20210619 01:17:34.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:27.859" endtime="20210619 01:17:34.043"/>
</kw>
<status status="PASS" starttime="20210619 01:17:27.858" endtime="20210619 01:17:34.046"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:34.050" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:34.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:34.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:17:34.048" endtime="20210619 01:17:34.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:34.058" level="INFO"/>
<status status="PASS" starttime="20210619 01:17:34.057" endtime="20210619 01:17:34.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:34.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:34.059" endtime="20210619 01:17:34.059"/>
</kw>
<status status="PASS" starttime="20210619 01:17:34.047" endtime="20210619 01:17:34.060"/>
</kw>
<msg timestamp="20210619 01:17:34.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:34.047" endtime="20210619 01:17:34.060"/>
</kw>
<status status="PASS" starttime="20210619 01:17:34.046" endtime="20210619 01:17:34.060"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:34.065" level="INFO">Running command 'ozone sh key info o3:///20221-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:38.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:38.366" level="INFO">${output} = {
  "volumeName": "20221-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:17:25.125Z",
  "modificationTime": "2021-06-19T01:17:27.436Z",
...</msg>
<status status="PASS" starttime="20210619 01:17:34.063" endtime="20210619 01:17:38.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:38.367" level="INFO">{
  "volumeName": "20221-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:17:25.125Z",
  "modificationTime": "2021-06-19T01:17:27.436Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200140,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210619 01:17:38.366" endtime="20210619 01:17:38.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:38.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:38.367" endtime="20210619 01:17:38.368"/>
</kw>
<status status="PASS" starttime="20210619 01:17:34.062" endtime="20210619 01:17:38.369"/>
</kw>
<msg timestamp="20210619 01:17:38.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:34.062" endtime="20210619 01:17:38.369"/>
</kw>
<msg timestamp="20210619 01:17:38.369" level="INFO">${result} = {
  "volumeName": "20221-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:17:25.125Z",
  "modificationTime": "2021-06-19T01:17:27.436Z",
...</msg>
<status status="PASS" starttime="20210619 01:17:34.060" endtime="20210619 01:17:38.369"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:17:38.369" endtime="20210619 01:17:38.370"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:38.374" level="INFO">Running command 'ozone sh key delete o3:///20221-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:42.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:42.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:17:38.372" endtime="20210619 01:17:42.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:42.205" level="INFO"/>
<status status="PASS" starttime="20210619 01:17:42.204" endtime="20210619 01:17:42.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:42.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:42.205" endtime="20210619 01:17:42.206"/>
</kw>
<status status="PASS" starttime="20210619 01:17:38.371" endtime="20210619 01:17:42.206"/>
</kw>
<msg timestamp="20210619 01:17:42.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:38.371" endtime="20210619 01:17:42.206"/>
</kw>
<status status="PASS" starttime="20210619 01:17:38.370" endtime="20210619 01:17:42.207"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:42.211" level="INFO">Running command 'ozone sh key cp o3:///20221-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:48.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:48.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:17:42.209" endtime="20210619 01:17:48.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:48.743" level="INFO"/>
<status status="PASS" starttime="20210619 01:17:48.743" endtime="20210619 01:17:48.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:48.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:48.744" endtime="20210619 01:17:48.744"/>
</kw>
<status status="PASS" starttime="20210619 01:17:42.208" endtime="20210619 01:17:48.745"/>
</kw>
<msg timestamp="20210619 01:17:48.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:42.208" endtime="20210619 01:17:48.745"/>
</kw>
<status status="PASS" starttime="20210619 01:17:42.207" endtime="20210619 01:17:48.745"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:48.749" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:48.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:48.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:17:48.747" endtime="20210619 01:17:48.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:48.753" level="INFO"/>
<status status="PASS" starttime="20210619 01:17:48.752" endtime="20210619 01:17:48.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:48.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:48.753" endtime="20210619 01:17:48.754"/>
</kw>
<status status="PASS" starttime="20210619 01:17:48.746" endtime="20210619 01:17:48.754"/>
</kw>
<msg timestamp="20210619 01:17:48.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:48.746" endtime="20210619 01:17:48.754"/>
</kw>
<status status="PASS" starttime="20210619 01:17:48.745" endtime="20210619 01:17:48.755"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:48.758" level="INFO">Running command 'ozone sh key get o3:///20221-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:54.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:54.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:17:48.757" endtime="20210619 01:17:54.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:54.433" level="INFO"/>
<status status="PASS" starttime="20210619 01:17:54.432" endtime="20210619 01:17:54.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:54.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:54.433" endtime="20210619 01:17:54.434"/>
</kw>
<status status="PASS" starttime="20210619 01:17:48.756" endtime="20210619 01:17:54.435"/>
</kw>
<msg timestamp="20210619 01:17:54.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:48.756" endtime="20210619 01:17:54.435"/>
</kw>
<status status="PASS" starttime="20210619 01:17:48.755" endtime="20210619 01:17:54.435"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:54.439" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:54.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:54.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:17:54.437" endtime="20210619 01:17:54.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:54.442" level="INFO"/>
<status status="PASS" starttime="20210619 01:17:54.442" endtime="20210619 01:17:54.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:54.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:54.442" endtime="20210619 01:17:54.443"/>
</kw>
<status status="PASS" starttime="20210619 01:17:54.436" endtime="20210619 01:17:54.443"/>
</kw>
<msg timestamp="20210619 01:17:54.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:54.436" endtime="20210619 01:17:54.444"/>
</kw>
<status status="PASS" starttime="20210619 01:17:54.435" endtime="20210619 01:17:54.444"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:54.447" level="INFO">Running command 'ozone sh key delete o3:///20221-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:17:58.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:17:58.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:17:54.446" endtime="20210619 01:17:58.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:17:58.124" level="INFO"/>
<status status="PASS" starttime="20210619 01:17:58.123" endtime="20210619 01:17:58.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:17:58.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:17:58.125" endtime="20210619 01:17:58.125"/>
</kw>
<status status="PASS" starttime="20210619 01:17:54.445" endtime="20210619 01:17:58.126"/>
</kw>
<msg timestamp="20210619 01:17:58.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:17:54.445" endtime="20210619 01:17:58.126"/>
</kw>
<status status="PASS" starttime="20210619 01:17:54.444" endtime="20210619 01:17:58.126"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:17:58.129" level="INFO">Running command 'ozone sh key get o3:///20221-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:01.481" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:18:01.481" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210619 01:17:58.127" endtime="20210619 01:18:01.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:01.483" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210619 01:18:01.482" endtime="20210619 01:18:01.483"/>
</kw>
<msg timestamp="20210619 01:18:01.483" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210619 01:17:58.126" endtime="20210619 01:18:01.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:18:01.483" endtime="20210619 01:18:01.484"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:01.488" level="INFO">Running command 'ozone sh key get --force o3:///20221-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:07.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:07.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:18:01.486" endtime="20210619 01:18:07.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:07.086" level="INFO"/>
<status status="PASS" starttime="20210619 01:18:07.085" endtime="20210619 01:18:07.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:07.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:07.086" endtime="20210619 01:18:07.087"/>
</kw>
<status status="PASS" starttime="20210619 01:18:01.485" endtime="20210619 01:18:07.087"/>
</kw>
<msg timestamp="20210619 01:18:07.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:01.485" endtime="20210619 01:18:07.087"/>
</kw>
<msg timestamp="20210619 01:18:07.088" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:18:01.484" endtime="20210619 01:18:07.088"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:18:07.088" endtime="20210619 01:18:07.088"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:07.093" level="INFO">Running command 'ozone sh key info o3:///20221-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:10.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:10.941" level="INFO">${output} = {
  "volumeName": "20221-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:17:13.091Z",
  "modificationTime": "2021-06-19T01:17:15.047Z",
  "ozo...</msg>
<status status="PASS" starttime="20210619 01:18:07.090" endtime="20210619 01:18:10.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:10.942" level="INFO">{
  "volumeName": "20221-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:17:13.091Z",
  "modificationTime": "2021-06-19T01:17:15.047Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200140,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210619 01:18:10.942" endtime="20210619 01:18:10.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:10.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:10.943" endtime="20210619 01:18:10.943"/>
</kw>
<status status="PASS" starttime="20210619 01:18:07.090" endtime="20210619 01:18:10.944"/>
</kw>
<msg timestamp="20210619 01:18:10.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:07.090" endtime="20210619 01:18:10.944"/>
</kw>
<msg timestamp="20210619 01:18:10.944" level="INFO">${result} = {
  "volumeName": "20221-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:17:13.091Z",
  "modificationTime": "2021-06-19T01:17:15.047Z",
  "ozo...</msg>
<status status="PASS" starttime="20210619 01:18:07.089" endtime="20210619 01:18:10.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:18:10.944" endtime="20210619 01:18:10.945"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:10.949" level="INFO">Running command 'ozone sh key list o3:///20221-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:14.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:14.595" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210619 01:18:10.947" endtime="20210619 01:18:14.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:14.596" level="INFO">key1</msg>
<status status="PASS" starttime="20210619 01:18:14.595" endtime="20210619 01:18:14.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:14.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:14.596" endtime="20210619 01:18:14.597"/>
</kw>
<status status="PASS" starttime="20210619 01:18:10.947" endtime="20210619 01:18:14.597"/>
</kw>
<msg timestamp="20210619 01:18:14.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:10.946" endtime="20210619 01:18:14.598"/>
</kw>
<msg timestamp="20210619 01:18:14.598" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20210619 01:18:10.945" endtime="20210619 01:18:14.598"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:18:14.598" endtime="20210619 01:18:14.599"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:14.603" level="INFO">Running command 'ozone sh key rename o3:///20221-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:18.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:18.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:18:14.601" endtime="20210619 01:18:18.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:18.112" level="INFO"/>
<status status="PASS" starttime="20210619 01:18:18.111" endtime="20210619 01:18:18.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:18.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:18.112" endtime="20210619 01:18:18.113"/>
</kw>
<status status="PASS" starttime="20210619 01:18:14.600" endtime="20210619 01:18:18.113"/>
</kw>
<msg timestamp="20210619 01:18:18.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:14.600" endtime="20210619 01:18:18.113"/>
</kw>
<status status="PASS" starttime="20210619 01:18:14.599" endtime="20210619 01:18:18.113"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:18.117" level="INFO">Running command 'ozone sh key list o3:///20221-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:21.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:21.955" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20210619 01:18:18.115" endtime="20210619 01:18:21.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:21.957" level="INFO">key2</msg>
<status status="PASS" starttime="20210619 01:18:21.956" endtime="20210619 01:18:21.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:21.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:21.957" endtime="20210619 01:18:21.958"/>
</kw>
<status status="PASS" starttime="20210619 01:18:18.115" endtime="20210619 01:18:21.958"/>
</kw>
<msg timestamp="20210619 01:18:21.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:18.114" endtime="20210619 01:18:21.958"/>
</kw>
<msg timestamp="20210619 01:18:21.959" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20210619 01:18:18.114" endtime="20210619 01:18:21.959"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:18:21.959" endtime="20210619 01:18:21.959"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:21.963" level="INFO">Running command 'ozone sh key delete o3:///20221-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:25.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:25.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:18:21.961" endtime="20210619 01:18:25.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:25.472" level="INFO"/>
<status status="PASS" starttime="20210619 01:18:25.471" endtime="20210619 01:18:25.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:25.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:25.473" endtime="20210619 01:18:25.474"/>
</kw>
<status status="PASS" starttime="20210619 01:18:21.961" endtime="20210619 01:18:25.474"/>
</kw>
<msg timestamp="20210619 01:18:25.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:21.960" endtime="20210619 01:18:25.474"/>
</kw>
<status status="PASS" starttime="20210619 01:18:21.959" endtime="20210619 01:18:25.475"/>
</kw>
<status status="PASS" starttime="20210619 01:17:09.524" endtime="20210619 01:18:25.475"/>
</kw>
<status status="PASS" starttime="20210619 01:17:09.524" endtime="20210619 01:18:25.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:25.479" level="INFO">Running command 'ozone sh volume clrquota --space-quota o3:///20221-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:28.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:28.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:18:25.478" endtime="20210619 01:18:28.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:28.859" level="INFO"/>
<status status="PASS" starttime="20210619 01:18:28.858" endtime="20210619 01:18:28.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:28.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:28.859" endtime="20210619 01:18:28.859"/>
</kw>
<status status="PASS" starttime="20210619 01:18:25.476" endtime="20210619 01:18:28.860"/>
</kw>
<msg timestamp="20210619 01:18:28.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:25.476" endtime="20210619 01:18:28.860"/>
</kw>
<status status="PASS" starttime="20210619 01:18:25.475" endtime="20210619 01:18:28.860"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:28.864" level="INFO">Running command 'ozone sh volume info o3:///20221-rpcwport | jq -r '. | select(.name=="20221-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:32.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:32.671" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:18:28.863" endtime="20210619 01:18:32.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:32.673" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:18:32.672" endtime="20210619 01:18:32.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:32.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:32.673" endtime="20210619 01:18:32.674"/>
</kw>
<status status="PASS" starttime="20210619 01:18:28.862" endtime="20210619 01:18:32.674"/>
</kw>
<msg timestamp="20210619 01:18:32.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:28.862" endtime="20210619 01:18:32.674"/>
</kw>
<msg timestamp="20210619 01:18:32.675" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:18:28.860" endtime="20210619 01:18:32.675"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:18:32.675" endtime="20210619 01:18:32.676"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:32.679" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota o3:///20221-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:36.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:36.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:18:32.677" endtime="20210619 01:18:36.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:36.123" level="INFO"/>
<status status="PASS" starttime="20210619 01:18:36.122" endtime="20210619 01:18:36.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:36.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:36.123" endtime="20210619 01:18:36.124"/>
</kw>
<status status="PASS" starttime="20210619 01:18:32.677" endtime="20210619 01:18:36.124"/>
</kw>
<msg timestamp="20210619 01:18:36.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:32.676" endtime="20210619 01:18:36.124"/>
</kw>
<status status="PASS" starttime="20210619 01:18:32.676" endtime="20210619 01:18:36.125"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:36.129" level="INFO">Running command 'ozone sh volume info o3:///20221-rpcwport | jq -r '. | select(.name=="20221-rpcwport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:39.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:39.774" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:18:36.127" endtime="20210619 01:18:39.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:39.775" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:18:39.775" endtime="20210619 01:18:39.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:39.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:39.776" endtime="20210619 01:18:39.776"/>
</kw>
<status status="PASS" starttime="20210619 01:18:36.126" endtime="20210619 01:18:39.777"/>
</kw>
<msg timestamp="20210619 01:18:39.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:36.126" endtime="20210619 01:18:39.777"/>
</kw>
<msg timestamp="20210619 01:18:39.777" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:18:36.125" endtime="20210619 01:18:39.777"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:18:39.777" endtime="20210619 01:18:39.778"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:39.783" level="INFO">Running command 'ozone sh bucket clrquota --space-quota o3:///20221-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:43.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:43.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:18:39.781" endtime="20210619 01:18:43.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:43.356" level="INFO"/>
<status status="PASS" starttime="20210619 01:18:43.355" endtime="20210619 01:18:43.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:43.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:43.356" endtime="20210619 01:18:43.357"/>
</kw>
<status status="PASS" starttime="20210619 01:18:39.780" endtime="20210619 01:18:43.357"/>
</kw>
<msg timestamp="20210619 01:18:43.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:39.779" endtime="20210619 01:18:43.358"/>
</kw>
<status status="PASS" starttime="20210619 01:18:39.778" endtime="20210619 01:18:43.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:43.362" level="INFO">Running command 'ozone sh bucket info o3:///20221-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:47.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:47.136" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:18:43.360" endtime="20210619 01:18:47.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:47.138" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:18:47.137" endtime="20210619 01:18:47.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:47.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:47.138" endtime="20210619 01:18:47.139"/>
</kw>
<status status="PASS" starttime="20210619 01:18:43.359" endtime="20210619 01:18:47.139"/>
</kw>
<msg timestamp="20210619 01:18:47.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:43.359" endtime="20210619 01:18:47.139"/>
</kw>
<msg timestamp="20210619 01:18:47.140" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:18:43.358" endtime="20210619 01:18:47.140"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:18:47.140" endtime="20210619 01:18:47.140"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:47.144" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota o3:///20221-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:50.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:50.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:18:47.142" endtime="20210619 01:18:50.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:50.677" level="INFO"/>
<status status="PASS" starttime="20210619 01:18:50.676" endtime="20210619 01:18:50.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:50.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:50.677" endtime="20210619 01:18:50.678"/>
</kw>
<status status="PASS" starttime="20210619 01:18:47.142" endtime="20210619 01:18:50.678"/>
</kw>
<msg timestamp="20210619 01:18:50.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:47.141" endtime="20210619 01:18:50.679"/>
</kw>
<status status="PASS" starttime="20210619 01:18:47.140" endtime="20210619 01:18:50.679"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:50.683" level="INFO">Running command 'ozone sh bucket info o3:///20221-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:54.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:54.387" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:18:50.681" endtime="20210619 01:18:54.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:54.389" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:18:54.388" endtime="20210619 01:18:54.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:54.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:54.389" endtime="20210619 01:18:54.390"/>
</kw>
<status status="PASS" starttime="20210619 01:18:50.680" endtime="20210619 01:18:54.390"/>
</kw>
<msg timestamp="20210619 01:18:54.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:50.680" endtime="20210619 01:18:54.390"/>
</kw>
<msg timestamp="20210619 01:18:54.391" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:18:50.679" endtime="20210619 01:18:54.391"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:18:54.391" endtime="20210619 01:18:54.392"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:54.396" level="INFO">Running command 'ozone sh bucket delete o3:///20221-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:18:57.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:18:57.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:18:54.394" endtime="20210619 01:18:57.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:18:57.802" level="INFO"/>
<status status="PASS" starttime="20210619 01:18:57.801" endtime="20210619 01:18:57.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:18:57.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:18:57.802" endtime="20210619 01:18:57.803"/>
</kw>
<status status="PASS" starttime="20210619 01:18:54.393" endtime="20210619 01:18:57.803"/>
</kw>
<msg timestamp="20210619 01:18:57.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:54.393" endtime="20210619 01:18:57.804"/>
</kw>
<status status="PASS" starttime="20210619 01:18:54.392" endtime="20210619 01:18:57.804"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:18:57.808" level="INFO">Running command 'ozone sh volume delete o3:///20221-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:01.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:01.225" level="INFO">${output} = Volume 20221-rpcwport is deleted</msg>
<status status="PASS" starttime="20210619 01:18:57.806" endtime="20210619 01:19:01.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:01.226" level="INFO">Volume 20221-rpcwport is deleted</msg>
<status status="PASS" starttime="20210619 01:19:01.226" endtime="20210619 01:19:01.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:01.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:01.227" endtime="20210619 01:19:01.227"/>
</kw>
<status status="PASS" starttime="20210619 01:18:57.805" endtime="20210619 01:19:01.228"/>
</kw>
<msg timestamp="20210619 01:19:01.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:18:57.805" endtime="20210619 01:19:01.228"/>
</kw>
<status status="PASS" starttime="20210619 01:18:57.804" endtime="20210619 01:19:01.228"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:01.232" level="INFO">Running command 'ozone sh volume create o3:///20221-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:04.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:04.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:19:01.230" endtime="20210619 01:19:04.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:04.780" level="INFO"/>
<status status="PASS" starttime="20210619 01:19:04.779" endtime="20210619 01:19:04.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:04.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:04.780" endtime="20210619 01:19:04.781"/>
</kw>
<status status="PASS" starttime="20210619 01:19:01.229" endtime="20210619 01:19:04.781"/>
</kw>
<msg timestamp="20210619 01:19:04.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:01.229" endtime="20210619 01:19:04.782"/>
</kw>
<status status="PASS" starttime="20210619 01:19:01.228" endtime="20210619 01:19:04.782"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:04.786" level="INFO">Running command 'ozone sh volume info o3:///20221-rpcwport | jq -r '. | select(.name=="20221-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:08.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:08.608" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:19:04.784" endtime="20210619 01:19:08.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:08.609" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:19:08.608" endtime="20210619 01:19:08.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:08.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:08.610" endtime="20210619 01:19:08.610"/>
</kw>
<status status="PASS" starttime="20210619 01:19:04.784" endtime="20210619 01:19:08.611"/>
</kw>
<msg timestamp="20210619 01:19:08.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:04.783" endtime="20210619 01:19:08.611"/>
</kw>
<msg timestamp="20210619 01:19:08.611" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:19:04.782" endtime="20210619 01:19:08.611"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:19:08.611" endtime="20210619 01:19:08.612"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:08.616" level="INFO">Running command 'ozone sh volume info o3:///20221-rpcwport | jq -r '. | select(.name=="20221-rpcwport") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:12.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:12.334" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:19:08.615" endtime="20210619 01:19:12.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:12.335" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:19:12.335" endtime="20210619 01:19:12.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:12.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:12.336" endtime="20210619 01:19:12.336"/>
</kw>
<status status="PASS" starttime="20210619 01:19:08.614" endtime="20210619 01:19:12.337"/>
</kw>
<msg timestamp="20210619 01:19:12.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:08.613" endtime="20210619 01:19:12.337"/>
</kw>
<msg timestamp="20210619 01:19:12.337" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:19:08.612" endtime="20210619 01:19:12.337"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:19:12.338" endtime="20210619 01:19:12.338"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:12.342" level="INFO">Running command 'ozone sh bucket create o3:///20221-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:15.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:15.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:19:12.340" endtime="20210619 01:19:15.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:15.897" level="INFO"/>
<status status="PASS" starttime="20210619 01:19:15.896" endtime="20210619 01:19:15.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:15.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:15.897" endtime="20210619 01:19:15.897"/>
</kw>
<status status="PASS" starttime="20210619 01:19:12.340" endtime="20210619 01:19:15.898"/>
</kw>
<msg timestamp="20210619 01:19:15.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:12.339" endtime="20210619 01:19:15.898"/>
</kw>
<status status="PASS" starttime="20210619 01:19:12.338" endtime="20210619 01:19:15.898"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:15.904" level="INFO">Running command 'ozone sh bucket info o3:///20221-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:19.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:19.564" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:19:15.902" endtime="20210619 01:19:19.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:19.565" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:19:19.565" endtime="20210619 01:19:19.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:19.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:19.566" endtime="20210619 01:19:19.566"/>
</kw>
<status status="PASS" starttime="20210619 01:19:15.901" endtime="20210619 01:19:19.567"/>
</kw>
<msg timestamp="20210619 01:19:19.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:15.900" endtime="20210619 01:19:19.567"/>
</kw>
<msg timestamp="20210619 01:19:19.567" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:19:15.899" endtime="20210619 01:19:19.567"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:19:19.567" endtime="20210619 01:19:19.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:19.572" level="INFO">Running command 'ozone sh bucket info o3:///20221-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:23.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:23.352" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:19:19.571" endtime="20210619 01:19:23.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:23.354" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:19:23.353" endtime="20210619 01:19:23.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:23.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:23.354" endtime="20210619 01:19:23.354"/>
</kw>
<status status="PASS" starttime="20210619 01:19:19.570" endtime="20210619 01:19:23.355"/>
</kw>
<msg timestamp="20210619 01:19:23.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:19.570" endtime="20210619 01:19:23.355"/>
</kw>
<msg timestamp="20210619 01:19:23.355" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:19:19.568" endtime="20210619 01:19:23.355"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:19:23.356" endtime="20210619 01:19:23.356"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:23.360" level="INFO">Running command 'ozone sh bucket delete o3:///20221-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:26.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:26.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:19:23.358" endtime="20210619 01:19:26.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:26.819" level="INFO"/>
<status status="PASS" starttime="20210619 01:19:26.819" endtime="20210619 01:19:26.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:26.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:26.820" endtime="20210619 01:19:26.820"/>
</kw>
<status status="PASS" starttime="20210619 01:19:23.357" endtime="20210619 01:19:26.821"/>
</kw>
<msg timestamp="20210619 01:19:26.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:23.357" endtime="20210619 01:19:26.821"/>
</kw>
<status status="PASS" starttime="20210619 01:19:23.356" endtime="20210619 01:19:26.821"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:26.825" level="INFO">Running command 'ozone sh volume delete o3:///20221-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:30.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:30.275" level="INFO">${output} = Volume 20221-rpcwport is deleted</msg>
<status status="PASS" starttime="20210619 01:19:26.823" endtime="20210619 01:19:30.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:30.276" level="INFO">Volume 20221-rpcwport is deleted</msg>
<status status="PASS" starttime="20210619 01:19:30.275" endtime="20210619 01:19:30.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:30.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:30.276" endtime="20210619 01:19:30.277"/>
</kw>
<status status="PASS" starttime="20210619 01:19:26.823" endtime="20210619 01:19:30.278"/>
</kw>
<msg timestamp="20210619 01:19:30.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:26.822" endtime="20210619 01:19:30.278"/>
</kw>
<status status="PASS" starttime="20210619 01:19:26.821" endtime="20210619 01:19:30.278"/>
</kw>
<status status="PASS" starttime="20210619 01:16:14.339" endtime="20210619 01:19:30.278"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:16:14.304" endtime="20210619 01:19:30.278"/>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:30.285" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:30.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:30.288" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:19:30.283" endtime="20210619 01:19:30.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:30.290" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:19:30.289" endtime="20210619 01:19:30.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:30.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:30.290" endtime="20210619 01:19:30.291"/>
</kw>
<status status="PASS" starttime="20210619 01:19:30.282" endtime="20210619 01:19:30.291"/>
</kw>
<msg timestamp="20210619 01:19:30.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:30.282" endtime="20210619 01:19:30.291"/>
</kw>
<msg timestamp="20210619 01:19:30.292" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:19:30.281" endtime="20210619 01:19:30.292"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:19:30.293" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:19:30.292" endtime="20210619 01:19:30.293"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:30.297" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:30.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:30.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:19:30.295" endtime="20210619 01:19:30.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:30.340" level="INFO"/>
<status status="PASS" starttime="20210619 01:19:30.339" endtime="20210619 01:19:30.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:30.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:30.340" endtime="20210619 01:19:30.341"/>
</kw>
<status status="PASS" starttime="20210619 01:19:30.295" endtime="20210619 01:19:30.341"/>
</kw>
<msg timestamp="20210619 01:19:30.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:30.294" endtime="20210619 01:19:30.342"/>
</kw>
<status status="PASS" starttime="20210619 01:19:30.294" endtime="20210619 01:19:30.342"/>
</kw>
<status status="PASS" starttime="20210619 01:19:30.293" endtime="20210619 01:19:30.342"/>
</kw>
<status status="PASS" starttime="20210619 01:19:30.281" endtime="20210619 01:19:30.342"/>
</kw>
<status status="PASS" starttime="20210619 01:19:30.280" endtime="20210619 01:19:30.342"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:30.347" level="INFO">Running command 'ozone sh volume info /20221-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:33.877" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:19:33.877" level="INFO">${output} = VOLUME_NOT_FOUND Volume 20221-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210619 01:19:30.346" endtime="20210619 01:19:33.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:33.878" level="INFO">VOLUME_NOT_FOUND Volume 20221-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210619 01:19:33.877" endtime="20210619 01:19:33.878"/>
</kw>
<msg timestamp="20210619 01:19:33.879" level="INFO">${result} = VOLUME_NOT_FOUND Volume 20221-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210619 01:19:30.345" endtime="20210619 01:19:33.879"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:19:33.879" endtime="20210619 01:19:33.879"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:33.884" level="INFO">Running command 'ozone sh volume create /20221-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:37.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:37.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:19:33.882" endtime="20210619 01:19:37.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:37.329" level="INFO"/>
<status status="PASS" starttime="20210619 01:19:37.328" endtime="20210619 01:19:37.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:37.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:37.329" endtime="20210619 01:19:37.330"/>
</kw>
<status status="PASS" starttime="20210619 01:19:33.881" endtime="20210619 01:19:37.330"/>
</kw>
<msg timestamp="20210619 01:19:37.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:33.881" endtime="20210619 01:19:37.330"/>
</kw>
<msg timestamp="20210619 01:19:37.331" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:19:33.880" endtime="20210619 01:19:37.331"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:19:37.331" endtime="20210619 01:19:37.331"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:37.335" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="20221-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:41.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:41.127" level="INFO">${output} = {
  "metadata": {},
  "name": "20221-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210619 01:19:37.333" endtime="20210619 01:19:41.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:41.129" level="INFO">{
  "metadata": {},
  "name": "20221-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-19T01:19:37.275Z",
  "modificationTime": "2021-06-19T01:19:37.275Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210619 01:19:41.128" endtime="20210619 01:19:41.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:41.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:41.129" endtime="20210619 01:19:41.130"/>
</kw>
<status status="PASS" starttime="20210619 01:19:37.333" endtime="20210619 01:19:41.130"/>
</kw>
<msg timestamp="20210619 01:19:41.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:37.332" endtime="20210619 01:19:41.130"/>
</kw>
<msg timestamp="20210619 01:19:41.130" level="INFO">${result} = {
  "metadata": {},
  "name": "20221-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210619 01:19:37.331" endtime="20210619 01:19:41.131"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:19:41.131" endtime="20210619 01:19:41.131"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:41.135" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="20221-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:45.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:45.008" level="INFO">${output} = {
  "metadata": {},
  "name": "20221-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210619 01:19:41.133" endtime="20210619 01:19:45.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:45.009" level="INFO">{
  "metadata": {},
  "name": "20221-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-06-19T01:19:37.275Z",
  "modificationTime": "2021-06-19T01:19:37.275Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210619 01:19:45.008" endtime="20210619 01:19:45.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:45.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:45.009" endtime="20210619 01:19:45.010"/>
</kw>
<status status="PASS" starttime="20210619 01:19:41.132" endtime="20210619 01:19:45.010"/>
</kw>
<msg timestamp="20210619 01:19:45.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:41.132" endtime="20210619 01:19:45.011"/>
</kw>
<msg timestamp="20210619 01:19:45.011" level="INFO">${result} = {
  "metadata": {},
  "name": "20221-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210619 01:19:41.131" endtime="20210619 01:19:45.011"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:19:45.011" endtime="20210619 01:19:45.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:45.016" level="INFO">Running command 'ozone sh volume setquota /20221-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:48.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:48.297" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:19:45.014" endtime="20210619 01:19:48.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:48.298" level="INFO"/>
<status status="PASS" starttime="20210619 01:19:48.297" endtime="20210619 01:19:48.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:48.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:48.298" endtime="20210619 01:19:48.299"/>
</kw>
<status status="PASS" starttime="20210619 01:19:45.013" endtime="20210619 01:19:48.300"/>
</kw>
<msg timestamp="20210619 01:19:48.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:45.013" endtime="20210619 01:19:48.300"/>
</kw>
<status status="PASS" starttime="20210619 01:19:45.012" endtime="20210619 01:19:48.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:48.304" level="INFO">Running command 'ozone sh volume info /20221-rpcwoscheme | jq -r '. | select(.name=="20221-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:52.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:52.004" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:19:48.302" endtime="20210619 01:19:52.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:52.005" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210619 01:19:52.004" endtime="20210619 01:19:52.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:52.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:52.005" endtime="20210619 01:19:52.006"/>
</kw>
<status status="PASS" starttime="20210619 01:19:48.302" endtime="20210619 01:19:52.007"/>
</kw>
<msg timestamp="20210619 01:19:52.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:48.301" endtime="20210619 01:19:52.007"/>
</kw>
<msg timestamp="20210619 01:19:52.007" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:19:48.300" endtime="20210619 01:19:52.007"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:19:52.007" endtime="20210619 01:19:52.008"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:52.012" level="INFO">Running command 'ozone sh bucket create /20221-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:55.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:55.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:19:52.010" endtime="20210619 01:19:55.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:55.873" level="INFO"/>
<status status="PASS" starttime="20210619 01:19:55.871" endtime="20210619 01:19:55.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:55.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:55.873" endtime="20210619 01:19:55.874"/>
</kw>
<status status="PASS" starttime="20210619 01:19:52.009" endtime="20210619 01:19:55.874"/>
</kw>
<msg timestamp="20210619 01:19:55.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:52.009" endtime="20210619 01:19:55.874"/>
</kw>
<status status="PASS" starttime="20210619 01:19:52.008" endtime="20210619 01:19:55.875"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:55.879" level="INFO">Running command 'ozone sh bucket info /20221-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:19:59.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:19:59.729" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210619 01:19:55.877" endtime="20210619 01:19:59.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:19:59.730" level="INFO">DISK</msg>
<status status="PASS" starttime="20210619 01:19:59.729" endtime="20210619 01:19:59.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:19:59.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:19:59.730" endtime="20210619 01:19:59.731"/>
</kw>
<status status="PASS" starttime="20210619 01:19:55.876" endtime="20210619 01:19:59.731"/>
</kw>
<msg timestamp="20210619 01:19:59.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:55.876" endtime="20210619 01:19:59.731"/>
</kw>
<msg timestamp="20210619 01:19:59.732" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210619 01:19:55.875" endtime="20210619 01:19:59.732"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:19:59.732" endtime="20210619 01:19:59.732"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:19:59.736" level="INFO">Running command 'ozone sh bucket info /20221-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:03.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:03.523" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:19:59.735" endtime="20210619 01:20:03.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:03.524" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210619 01:20:03.523" endtime="20210619 01:20:03.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:03.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:03.524" endtime="20210619 01:20:03.525"/>
</kw>
<status status="PASS" starttime="20210619 01:19:59.734" endtime="20210619 01:20:03.525"/>
</kw>
<msg timestamp="20210619 01:20:03.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:19:59.733" endtime="20210619 01:20:03.525"/>
</kw>
<msg timestamp="20210619 01:20:03.526" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210619 01:19:59.732" endtime="20210619 01:20:03.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:20:03.526" endtime="20210619 01:20:03.526"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:03.530" level="INFO">Running command 'ozone sh bucket info /20221-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:07.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:07.302" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210619 01:20:03.529" endtime="20210619 01:20:07.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:07.303" level="INFO">100</msg>
<status status="PASS" starttime="20210619 01:20:07.302" endtime="20210619 01:20:07.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:07.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:07.303" endtime="20210619 01:20:07.304"/>
</kw>
<status status="PASS" starttime="20210619 01:20:03.528" endtime="20210619 01:20:07.304"/>
</kw>
<msg timestamp="20210619 01:20:07.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:03.528" endtime="20210619 01:20:07.305"/>
</kw>
<msg timestamp="20210619 01:20:07.305" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210619 01:20:03.527" endtime="20210619 01:20:07.305"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:20:07.305" endtime="20210619 01:20:07.306"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:07.310" level="INFO">Running command 'ozone sh bucket setquota /20221-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:10.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:10.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:20:07.308" endtime="20210619 01:20:10.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:10.645" level="INFO"/>
<status status="PASS" starttime="20210619 01:20:10.644" endtime="20210619 01:20:10.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:10.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:10.645" endtime="20210619 01:20:10.645"/>
</kw>
<status status="PASS" starttime="20210619 01:20:07.307" endtime="20210619 01:20:10.646"/>
</kw>
<msg timestamp="20210619 01:20:10.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:07.307" endtime="20210619 01:20:10.646"/>
</kw>
<status status="PASS" starttime="20210619 01:20:07.306" endtime="20210619 01:20:10.646"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:10.650" level="INFO">Running command 'ozone sh bucket info /20221-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:14.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:14.446" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210619 01:20:10.648" endtime="20210619 01:20:14.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:14.447" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210619 01:20:14.447" endtime="20210619 01:20:14.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:14.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:14.448" endtime="20210619 01:20:14.448"/>
</kw>
<status status="PASS" starttime="20210619 01:20:10.648" endtime="20210619 01:20:14.449"/>
</kw>
<msg timestamp="20210619 01:20:14.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:10.648" endtime="20210619 01:20:14.449"/>
</kw>
<msg timestamp="20210619 01:20:14.450" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210619 01:20:10.647" endtime="20210619 01:20:14.450"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:20:14.450" endtime="20210619 01:20:14.450"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:14.454" level="INFO">Running command 'ozone sh bucket info /20221-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:18.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:18.087" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210619 01:20:14.453" endtime="20210619 01:20:18.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:18.088" level="INFO">1000</msg>
<status status="PASS" starttime="20210619 01:20:18.087" endtime="20210619 01:20:18.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:18.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:18.088" endtime="20210619 01:20:18.090"/>
</kw>
<status status="PASS" starttime="20210619 01:20:14.452" endtime="20210619 01:20:18.091"/>
</kw>
<msg timestamp="20210619 01:20:18.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:14.452" endtime="20210619 01:20:18.091"/>
</kw>
<msg timestamp="20210619 01:20:18.092" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210619 01:20:14.450" endtime="20210619 01:20:18.092"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:20:18.092" endtime="20210619 01:20:18.092"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:18.097" level="INFO">Running command 'ozone sh bucket list /20221-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:21.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:21.842" level="INFO">${output} = 20221-rpcwoscheme</msg>
<status status="PASS" starttime="20210619 01:20:18.095" endtime="20210619 01:20:21.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:21.843" level="INFO">20221-rpcwoscheme</msg>
<status status="PASS" starttime="20210619 01:20:21.843" endtime="20210619 01:20:21.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:21.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:21.844" endtime="20210619 01:20:21.845"/>
</kw>
<status status="PASS" starttime="20210619 01:20:18.094" endtime="20210619 01:20:21.845"/>
</kw>
<msg timestamp="20210619 01:20:21.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:18.094" endtime="20210619 01:20:21.845"/>
</kw>
<msg timestamp="20210619 01:20:21.845" level="INFO">${result} = 20221-rpcwoscheme</msg>
<status status="PASS" starttime="20210619 01:20:18.093" endtime="20210619 01:20:21.846"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:20:21.846" endtime="20210619 01:20:21.846"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:21.852" level="INFO">Running command 'ozone sh key put /20221-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:27.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:27.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:20:21.850" endtime="20210619 01:20:27.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:27.895" level="INFO"/>
<status status="PASS" starttime="20210619 01:20:27.894" endtime="20210619 01:20:27.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:27.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:27.895" endtime="20210619 01:20:27.896"/>
</kw>
<status status="PASS" starttime="20210619 01:20:21.850" endtime="20210619 01:20:27.896"/>
</kw>
<msg timestamp="20210619 01:20:27.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:21.849" endtime="20210619 01:20:27.896"/>
</kw>
<status status="PASS" starttime="20210619 01:20:21.849" endtime="20210619 01:20:27.897"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:27.900" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:27.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:27.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:20:27.898" endtime="20210619 01:20:27.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:27.904" level="INFO"/>
<status status="PASS" starttime="20210619 01:20:27.903" endtime="20210619 01:20:27.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:27.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:27.904" endtime="20210619 01:20:27.905"/>
</kw>
<status status="PASS" starttime="20210619 01:20:27.898" endtime="20210619 01:20:27.905"/>
</kw>
<msg timestamp="20210619 01:20:27.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:27.897" endtime="20210619 01:20:27.905"/>
</kw>
<status status="PASS" starttime="20210619 01:20:27.897" endtime="20210619 01:20:27.905"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:27.909" level="INFO">Running command 'ozone sh key get /20221-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:33.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:33.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:20:27.907" endtime="20210619 01:20:33.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:33.775" level="INFO"/>
<status status="PASS" starttime="20210619 01:20:33.774" endtime="20210619 01:20:33.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:33.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:33.775" endtime="20210619 01:20:33.776"/>
</kw>
<status status="PASS" starttime="20210619 01:20:27.907" endtime="20210619 01:20:33.776"/>
</kw>
<msg timestamp="20210619 01:20:33.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:27.906" endtime="20210619 01:20:33.777"/>
</kw>
<status status="PASS" starttime="20210619 01:20:27.906" endtime="20210619 01:20:33.777"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:33.781" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:33.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:33.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:20:33.779" endtime="20210619 01:20:33.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:33.787" level="INFO"/>
<status status="PASS" starttime="20210619 01:20:33.786" endtime="20210619 01:20:33.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:33.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:33.787" endtime="20210619 01:20:33.788"/>
</kw>
<status status="PASS" starttime="20210619 01:20:33.778" endtime="20210619 01:20:33.788"/>
</kw>
<msg timestamp="20210619 01:20:33.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:33.778" endtime="20210619 01:20:33.788"/>
</kw>
<status status="PASS" starttime="20210619 01:20:33.777" endtime="20210619 01:20:33.789"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:33.793" level="INFO">Running command 'ozone sh key put -t RATIS /20221-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:39.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:39.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:20:33.791" endtime="20210619 01:20:39.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:39.668" level="INFO"/>
<status status="PASS" starttime="20210619 01:20:39.667" endtime="20210619 01:20:39.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:39.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:39.668" endtime="20210619 01:20:39.669"/>
</kw>
<status status="PASS" starttime="20210619 01:20:33.790" endtime="20210619 01:20:39.669"/>
</kw>
<msg timestamp="20210619 01:20:39.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:33.790" endtime="20210619 01:20:39.669"/>
</kw>
<status status="PASS" starttime="20210619 01:20:33.789" endtime="20210619 01:20:39.670"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:39.673" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:39.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:39.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:20:39.671" endtime="20210619 01:20:39.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:39.677" level="INFO"/>
<status status="PASS" starttime="20210619 01:20:39.676" endtime="20210619 01:20:39.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:39.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:39.678" endtime="20210619 01:20:39.678"/>
</kw>
<status status="PASS" starttime="20210619 01:20:39.671" endtime="20210619 01:20:39.679"/>
</kw>
<msg timestamp="20210619 01:20:39.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:39.670" endtime="20210619 01:20:39.679"/>
</kw>
<status status="PASS" starttime="20210619 01:20:39.670" endtime="20210619 01:20:39.679"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:39.683" level="INFO">Running command 'ozone sh key get /20221-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:45.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:45.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:20:39.681" endtime="20210619 01:20:45.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:45.305" level="INFO"/>
<status status="PASS" starttime="20210619 01:20:45.305" endtime="20210619 01:20:45.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:45.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:45.306" endtime="20210619 01:20:45.306"/>
</kw>
<status status="PASS" starttime="20210619 01:20:39.680" endtime="20210619 01:20:45.307"/>
</kw>
<msg timestamp="20210619 01:20:45.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:39.680" endtime="20210619 01:20:45.307"/>
</kw>
<status status="PASS" starttime="20210619 01:20:39.679" endtime="20210619 01:20:45.307"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:45.311" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:45.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:45.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:20:45.309" endtime="20210619 01:20:45.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:45.315" level="INFO"/>
<status status="PASS" starttime="20210619 01:20:45.314" endtime="20210619 01:20:45.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:45.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:45.315" endtime="20210619 01:20:45.315"/>
</kw>
<status status="PASS" starttime="20210619 01:20:45.308" endtime="20210619 01:20:45.316"/>
</kw>
<msg timestamp="20210619 01:20:45.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:45.308" endtime="20210619 01:20:45.316"/>
</kw>
<status status="PASS" starttime="20210619 01:20:45.307" endtime="20210619 01:20:45.316"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:45.320" level="INFO">Running command 'ozone sh key info /20221-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:49.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:49.353" level="INFO">${output} = {
  "volumeName": "20221-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:20:37.402Z",
  "modificationTime": "2021-06-19T01:20:39.258Z...</msg>
<status status="PASS" starttime="20210619 01:20:45.318" endtime="20210619 01:20:49.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:49.354" level="INFO">{
  "volumeName": "20221-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:20:37.402Z",
  "modificationTime": "2021-06-19T01:20:39.258Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200140,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210619 01:20:49.353" endtime="20210619 01:20:49.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:49.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:49.354" endtime="20210619 01:20:49.356"/>
</kw>
<status status="PASS" starttime="20210619 01:20:45.318" endtime="20210619 01:20:49.356"/>
</kw>
<msg timestamp="20210619 01:20:49.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:45.317" endtime="20210619 01:20:49.356"/>
</kw>
<msg timestamp="20210619 01:20:49.357" level="INFO">${result} = {
  "volumeName": "20221-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:20:37.402Z",
  "modificationTime": "2021-06-19T01:20:39.258Z...</msg>
<status status="PASS" starttime="20210619 01:20:45.316" endtime="20210619 01:20:49.357"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:20:49.357" endtime="20210619 01:20:49.357"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:49.361" level="INFO">Running command 'ozone sh key delete /20221-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:52.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:52.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:20:49.359" endtime="20210619 01:20:52.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:52.656" level="INFO"/>
<status status="PASS" starttime="20210619 01:20:52.655" endtime="20210619 01:20:52.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:52.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:52.656" endtime="20210619 01:20:52.657"/>
</kw>
<status status="PASS" starttime="20210619 01:20:49.358" endtime="20210619 01:20:52.657"/>
</kw>
<msg timestamp="20210619 01:20:52.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:49.358" endtime="20210619 01:20:52.658"/>
</kw>
<status status="PASS" starttime="20210619 01:20:49.357" endtime="20210619 01:20:52.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:52.661" level="INFO">Running command 'ozone sh key cp /20221-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:58.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:58.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:20:52.660" endtime="20210619 01:20:58.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:58.664" level="INFO"/>
<status status="PASS" starttime="20210619 01:20:58.663" endtime="20210619 01:20:58.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:58.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:58.664" endtime="20210619 01:20:58.665"/>
</kw>
<status status="PASS" starttime="20210619 01:20:52.659" endtime="20210619 01:20:58.665"/>
</kw>
<msg timestamp="20210619 01:20:58.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:52.659" endtime="20210619 01:20:58.665"/>
</kw>
<status status="PASS" starttime="20210619 01:20:52.658" endtime="20210619 01:20:58.666"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:58.669" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:20:58.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:20:58.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:20:58.667" endtime="20210619 01:20:58.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:20:58.673" level="INFO"/>
<status status="PASS" starttime="20210619 01:20:58.672" endtime="20210619 01:20:58.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:20:58.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:20:58.673" endtime="20210619 01:20:58.674"/>
</kw>
<status status="PASS" starttime="20210619 01:20:58.667" endtime="20210619 01:20:58.674"/>
</kw>
<msg timestamp="20210619 01:20:58.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:58.666" endtime="20210619 01:20:58.675"/>
</kw>
<status status="PASS" starttime="20210619 01:20:58.666" endtime="20210619 01:20:58.675"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:20:58.678" level="INFO">Running command 'ozone sh key get /20221-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:04.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:04.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:20:58.677" endtime="20210619 01:21:04.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:04.268" level="INFO"/>
<status status="PASS" starttime="20210619 01:21:04.267" endtime="20210619 01:21:04.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:04.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:04.268" endtime="20210619 01:21:04.269"/>
</kw>
<status status="PASS" starttime="20210619 01:20:58.676" endtime="20210619 01:21:04.269"/>
</kw>
<msg timestamp="20210619 01:21:04.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:20:58.676" endtime="20210619 01:21:04.270"/>
</kw>
<status status="PASS" starttime="20210619 01:20:58.675" endtime="20210619 01:21:04.270"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:04.274" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:04.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:04.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:21:04.272" endtime="20210619 01:21:04.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:04.278" level="INFO"/>
<status status="PASS" starttime="20210619 01:21:04.277" endtime="20210619 01:21:04.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:04.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:04.278" endtime="20210619 01:21:04.279"/>
</kw>
<status status="PASS" starttime="20210619 01:21:04.271" endtime="20210619 01:21:04.279"/>
</kw>
<msg timestamp="20210619 01:21:04.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:04.271" endtime="20210619 01:21:04.279"/>
</kw>
<status status="PASS" starttime="20210619 01:21:04.270" endtime="20210619 01:21:04.279"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:04.283" level="INFO">Running command 'ozone sh key delete /20221-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:07.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:07.810" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:21:04.281" endtime="20210619 01:21:07.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:07.812" level="INFO"/>
<status status="PASS" starttime="20210619 01:21:07.811" endtime="20210619 01:21:07.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:07.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:07.812" endtime="20210619 01:21:07.813"/>
</kw>
<status status="PASS" starttime="20210619 01:21:04.281" endtime="20210619 01:21:07.813"/>
</kw>
<msg timestamp="20210619 01:21:07.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:04.280" endtime="20210619 01:21:07.813"/>
</kw>
<status status="PASS" starttime="20210619 01:21:04.280" endtime="20210619 01:21:07.814"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:07.816" level="INFO">Running command 'ozone sh key get /20221-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:11.418" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:21:11.418" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210619 01:21:07.814" endtime="20210619 01:21:11.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:11.419" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210619 01:21:11.418" endtime="20210619 01:21:11.419"/>
</kw>
<msg timestamp="20210619 01:21:11.420" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20210619 01:21:07.814" endtime="20210619 01:21:11.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:21:11.420" endtime="20210619 01:21:11.420"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:11.424" level="INFO">Running command 'ozone sh key get --force /20221-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:16.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:16.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:21:11.422" endtime="20210619 01:21:16.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:16.842" level="INFO"/>
<status status="PASS" starttime="20210619 01:21:16.841" endtime="20210619 01:21:16.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:16.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:16.842" endtime="20210619 01:21:16.843"/>
</kw>
<status status="PASS" starttime="20210619 01:21:11.422" endtime="20210619 01:21:16.843"/>
</kw>
<msg timestamp="20210619 01:21:16.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:11.421" endtime="20210619 01:21:16.844"/>
</kw>
<msg timestamp="20210619 01:21:16.844" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:21:11.420" endtime="20210619 01:21:16.844"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:21:16.844" endtime="20210619 01:21:16.845"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:16.849" level="INFO">Running command 'ozone sh key info /20221-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:20.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:20.653" level="INFO">${output} = {
  "volumeName": "20221-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:20:25.468Z",
  "modificationTime": "2021-06-19T01:20:27.439Z",
  "...</msg>
<status status="PASS" starttime="20210619 01:21:16.847" endtime="20210619 01:21:20.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:20.654" level="INFO">{
  "volumeName": "20221-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:20:25.468Z",
  "modificationTime": "2021-06-19T01:20:27.439Z",
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 107544261427200140,
      "length": 17526,
      "offset": 0,
      "keyOffset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null,
  "replicationFactor": 3,
  "replicationType": "RATIS"
}</msg>
<status status="PASS" starttime="20210619 01:21:20.653" endtime="20210619 01:21:20.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:20.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:20.654" endtime="20210619 01:21:20.655"/>
</kw>
<status status="PASS" starttime="20210619 01:21:16.846" endtime="20210619 01:21:20.655"/>
</kw>
<msg timestamp="20210619 01:21:20.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:16.846" endtime="20210619 01:21:20.655"/>
</kw>
<msg timestamp="20210619 01:21:20.656" level="INFO">${result} = {
  "volumeName": "20221-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17526,
  "creationTime": "2021-06-19T01:20:25.468Z",
  "modificationTime": "2021-06-19T01:20:27.439Z",
  "...</msg>
<status status="PASS" starttime="20210619 01:21:16.845" endtime="20210619 01:21:20.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:21:20.656" endtime="20210619 01:21:20.656"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:20.661" level="INFO">Running command 'ozone sh key list /20221-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:24.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:24.398" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210619 01:21:20.659" endtime="20210619 01:21:24.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:24.400" level="INFO">key1</msg>
<status status="PASS" starttime="20210619 01:21:24.399" endtime="20210619 01:21:24.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:24.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:24.400" endtime="20210619 01:21:24.401"/>
</kw>
<status status="PASS" starttime="20210619 01:21:20.658" endtime="20210619 01:21:24.401"/>
</kw>
<msg timestamp="20210619 01:21:24.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:20.658" endtime="20210619 01:21:24.401"/>
</kw>
<msg timestamp="20210619 01:21:24.402" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20210619 01:21:20.657" endtime="20210619 01:21:24.402"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:21:24.402" endtime="20210619 01:21:24.402"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:24.406" level="INFO">Running command 'ozone sh key rename /20221-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:28.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:28.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:21:24.404" endtime="20210619 01:21:28.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:28.028" level="INFO"/>
<status status="PASS" starttime="20210619 01:21:28.027" endtime="20210619 01:21:28.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:28.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:28.028" endtime="20210619 01:21:28.029"/>
</kw>
<status status="PASS" starttime="20210619 01:21:24.404" endtime="20210619 01:21:28.029"/>
</kw>
<msg timestamp="20210619 01:21:28.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:24.403" endtime="20210619 01:21:28.029"/>
</kw>
<status status="PASS" starttime="20210619 01:21:24.402" endtime="20210619 01:21:28.030"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:28.034" level="INFO">Running command 'ozone sh key list /20221-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:31.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:31.823" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20210619 01:21:28.032" endtime="20210619 01:21:31.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:31.824" level="INFO">key2</msg>
<status status="PASS" starttime="20210619 01:21:31.824" endtime="20210619 01:21:31.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:31.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:31.825" endtime="20210619 01:21:31.825"/>
</kw>
<status status="PASS" starttime="20210619 01:21:28.031" endtime="20210619 01:21:31.826"/>
</kw>
<msg timestamp="20210619 01:21:31.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:28.031" endtime="20210619 01:21:31.826"/>
</kw>
<msg timestamp="20210619 01:21:31.826" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20210619 01:21:28.030" endtime="20210619 01:21:31.826"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:21:31.826" endtime="20210619 01:21:31.827"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:31.831" level="INFO">Running command 'ozone sh key delete /20221-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:35.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:35.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:21:31.829" endtime="20210619 01:21:35.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:35.332" level="INFO"/>
<status status="PASS" starttime="20210619 01:21:35.331" endtime="20210619 01:21:35.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:35.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:35.332" endtime="20210619 01:21:35.333"/>
</kw>
<status status="PASS" starttime="20210619 01:21:31.828" endtime="20210619 01:21:35.334"/>
</kw>
<msg timestamp="20210619 01:21:35.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:31.828" endtime="20210619 01:21:35.334"/>
</kw>
<status status="PASS" starttime="20210619 01:21:31.827" endtime="20210619 01:21:35.334"/>
</kw>
<status status="PASS" starttime="20210619 01:20:21.847" endtime="20210619 01:21:35.334"/>
</kw>
<status status="PASS" starttime="20210619 01:20:21.846" endtime="20210619 01:21:35.335"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:35.339" level="INFO">Running command 'ozone sh volume clrquota --space-quota /20221-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:38.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:38.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:21:35.336" endtime="20210619 01:21:38.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:38.963" level="INFO"/>
<status status="PASS" starttime="20210619 01:21:38.963" endtime="20210619 01:21:38.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:38.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:38.964" endtime="20210619 01:21:38.964"/>
</kw>
<status status="PASS" starttime="20210619 01:21:35.336" endtime="20210619 01:21:38.965"/>
</kw>
<msg timestamp="20210619 01:21:38.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:35.335" endtime="20210619 01:21:38.965"/>
</kw>
<status status="PASS" starttime="20210619 01:21:35.335" endtime="20210619 01:21:38.965"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:38.969" level="INFO">Running command 'ozone sh volume info /20221-rpcwoscheme | jq -r '. | select(.name=="20221-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:42.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:42.545" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:21:38.967" endtime="20210619 01:21:42.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:42.546" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:21:42.545" endtime="20210619 01:21:42.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:42.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:42.546" endtime="20210619 01:21:42.547"/>
</kw>
<status status="PASS" starttime="20210619 01:21:38.967" endtime="20210619 01:21:42.547"/>
</kw>
<msg timestamp="20210619 01:21:42.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:38.966" endtime="20210619 01:21:42.548"/>
</kw>
<msg timestamp="20210619 01:21:42.548" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:21:38.965" endtime="20210619 01:21:42.548"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:21:42.548" endtime="20210619 01:21:42.549"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:42.554" level="INFO">Running command 'ozone sh volume clrquota --namespace-quota /20221-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:46.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:46.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:21:42.550" endtime="20210619 01:21:46.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:46.081" level="INFO"/>
<status status="PASS" starttime="20210619 01:21:46.081" endtime="20210619 01:21:46.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:46.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:46.082" endtime="20210619 01:21:46.082"/>
</kw>
<status status="PASS" starttime="20210619 01:21:42.550" endtime="20210619 01:21:46.083"/>
</kw>
<msg timestamp="20210619 01:21:46.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:42.550" endtime="20210619 01:21:46.083"/>
</kw>
<status status="PASS" starttime="20210619 01:21:42.549" endtime="20210619 01:21:46.083"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:46.087" level="INFO">Running command 'ozone sh volume info /20221-rpcwoscheme | jq -r '. | select(.name=="20221-rpcwoscheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:49.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:49.888" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:21:46.086" endtime="20210619 01:21:49.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:49.889" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:21:49.888" endtime="20210619 01:21:49.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:49.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:49.889" endtime="20210619 01:21:49.890"/>
</kw>
<status status="PASS" starttime="20210619 01:21:46.085" endtime="20210619 01:21:49.891"/>
</kw>
<msg timestamp="20210619 01:21:49.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:46.085" endtime="20210619 01:21:49.891"/>
</kw>
<msg timestamp="20210619 01:21:49.891" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:21:46.083" endtime="20210619 01:21:49.891"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:21:49.891" endtime="20210619 01:21:49.892"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:49.896" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /20221-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:53.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:53.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:21:49.894" endtime="20210619 01:21:53.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:53.530" level="INFO"/>
<status status="PASS" starttime="20210619 01:21:53.529" endtime="20210619 01:21:53.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:53.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:53.530" endtime="20210619 01:21:53.531"/>
</kw>
<status status="PASS" starttime="20210619 01:21:49.893" endtime="20210619 01:21:53.531"/>
</kw>
<msg timestamp="20210619 01:21:53.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:49.893" endtime="20210619 01:21:53.532"/>
</kw>
<status status="PASS" starttime="20210619 01:21:49.892" endtime="20210619 01:21:53.532"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:53.536" level="INFO">Running command 'ozone sh bucket info /20221-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:21:57.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:21:57.286" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:21:53.534" endtime="20210619 01:21:57.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:21:57.287" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:21:57.286" endtime="20210619 01:21:57.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:21:57.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:21:57.288" endtime="20210619 01:21:57.288"/>
</kw>
<status status="PASS" starttime="20210619 01:21:53.534" endtime="20210619 01:21:57.289"/>
</kw>
<msg timestamp="20210619 01:21:57.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:53.533" endtime="20210619 01:21:57.289"/>
</kw>
<msg timestamp="20210619 01:21:57.289" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:21:53.532" endtime="20210619 01:21:57.289"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:21:57.289" endtime="20210619 01:21:57.290"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:21:57.294" level="INFO">Running command 'ozone sh bucket clrquota --namespace-quota /20221-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:00.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:00.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:21:57.292" endtime="20210619 01:22:00.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:00.661" level="INFO"/>
<status status="PASS" starttime="20210619 01:22:00.660" endtime="20210619 01:22:00.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:00.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:00.662" endtime="20210619 01:22:00.662"/>
</kw>
<status status="PASS" starttime="20210619 01:21:57.291" endtime="20210619 01:22:00.663"/>
</kw>
<msg timestamp="20210619 01:22:00.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:21:57.291" endtime="20210619 01:22:00.663"/>
</kw>
<status status="PASS" starttime="20210619 01:21:57.290" endtime="20210619 01:22:00.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:00.667" level="INFO">Running command 'ozone sh bucket info /20221-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:04.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:04.609" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:22:00.665" endtime="20210619 01:22:04.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:04.610" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:22:04.610" endtime="20210619 01:22:04.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:04.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:04.611" endtime="20210619 01:22:04.611"/>
</kw>
<status status="PASS" starttime="20210619 01:22:00.665" endtime="20210619 01:22:04.612"/>
</kw>
<msg timestamp="20210619 01:22:04.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:00.664" endtime="20210619 01:22:04.612"/>
</kw>
<msg timestamp="20210619 01:22:04.612" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:22:00.663" endtime="20210619 01:22:04.612"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:22:04.613" endtime="20210619 01:22:04.613"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:04.617" level="INFO">Running command 'ozone sh bucket delete /20221-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:08.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:08.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:22:04.615" endtime="20210619 01:22:08.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:08.147" level="INFO"/>
<status status="PASS" starttime="20210619 01:22:08.146" endtime="20210619 01:22:08.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:08.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:08.147" endtime="20210619 01:22:08.148"/>
</kw>
<status status="PASS" starttime="20210619 01:22:04.615" endtime="20210619 01:22:08.148"/>
</kw>
<msg timestamp="20210619 01:22:08.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:04.614" endtime="20210619 01:22:08.148"/>
</kw>
<status status="PASS" starttime="20210619 01:22:04.613" endtime="20210619 01:22:08.149"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:08.153" level="INFO">Running command 'ozone sh volume delete /20221-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:11.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:11.729" level="INFO">${output} = Volume 20221-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20210619 01:22:08.151" endtime="20210619 01:22:11.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:11.730" level="INFO">Volume 20221-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20210619 01:22:11.730" endtime="20210619 01:22:11.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:11.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:11.731" endtime="20210619 01:22:11.731"/>
</kw>
<status status="PASS" starttime="20210619 01:22:08.150" endtime="20210619 01:22:11.732"/>
</kw>
<msg timestamp="20210619 01:22:11.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:08.150" endtime="20210619 01:22:11.732"/>
</kw>
<status status="PASS" starttime="20210619 01:22:08.149" endtime="20210619 01:22:11.732"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:11.736" level="INFO">Running command 'ozone sh volume create /20221-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:15.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:15.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:22:11.734" endtime="20210619 01:22:15.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:15.394" level="INFO"/>
<status status="PASS" starttime="20210619 01:22:15.393" endtime="20210619 01:22:15.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:15.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:15.394" endtime="20210619 01:22:15.395"/>
</kw>
<status status="PASS" starttime="20210619 01:22:11.734" endtime="20210619 01:22:15.395"/>
</kw>
<msg timestamp="20210619 01:22:15.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:11.733" endtime="20210619 01:22:15.396"/>
</kw>
<status status="PASS" starttime="20210619 01:22:11.732" endtime="20210619 01:22:15.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:15.400" level="INFO">Running command 'ozone sh volume info /20221-rpcwoscheme | jq -r '. | select(.name=="20221-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:19.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:19.204" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:22:15.398" endtime="20210619 01:22:19.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:19.205" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:22:19.204" endtime="20210619 01:22:19.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:19.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:19.205" endtime="20210619 01:22:19.206"/>
</kw>
<status status="PASS" starttime="20210619 01:22:15.398" endtime="20210619 01:22:19.206"/>
</kw>
<msg timestamp="20210619 01:22:19.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:15.397" endtime="20210619 01:22:19.206"/>
</kw>
<msg timestamp="20210619 01:22:19.207" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:22:15.396" endtime="20210619 01:22:19.207"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:22:19.207" endtime="20210619 01:22:19.207"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:19.212" level="INFO">Running command 'ozone sh volume info /20221-rpcwoscheme | jq -r '. | select(.name=="20221-rpcwoscheme") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:23.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:23.195" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:22:19.210" endtime="20210619 01:22:23.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:23.197" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:22:23.196" endtime="20210619 01:22:23.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:23.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:23.197" endtime="20210619 01:22:23.198"/>
</kw>
<status status="PASS" starttime="20210619 01:22:19.209" endtime="20210619 01:22:23.198"/>
</kw>
<msg timestamp="20210619 01:22:23.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:19.209" endtime="20210619 01:22:23.198"/>
</kw>
<msg timestamp="20210619 01:22:23.199" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:22:19.208" endtime="20210619 01:22:23.199"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:22:23.199" endtime="20210619 01:22:23.199"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:23.203" level="INFO">Running command 'ozone sh bucket create /20221-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:26.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:26.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:22:23.201" endtime="20210619 01:22:26.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:26.594" level="INFO"/>
<status status="PASS" starttime="20210619 01:22:26.593" endtime="20210619 01:22:26.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:26.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:26.594" endtime="20210619 01:22:26.595"/>
</kw>
<status status="PASS" starttime="20210619 01:22:23.201" endtime="20210619 01:22:26.595"/>
</kw>
<msg timestamp="20210619 01:22:26.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:23.200" endtime="20210619 01:22:26.595"/>
</kw>
<status status="PASS" starttime="20210619 01:22:23.199" endtime="20210619 01:22:26.595"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:26.600" level="INFO">Running command 'ozone sh bucket info /20221-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:30.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:30.359" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:22:26.598" endtime="20210619 01:22:30.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:30.360" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:22:30.359" endtime="20210619 01:22:30.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:30.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:30.360" endtime="20210619 01:22:30.361"/>
</kw>
<status status="PASS" starttime="20210619 01:22:26.597" endtime="20210619 01:22:30.361"/>
</kw>
<msg timestamp="20210619 01:22:30.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:26.597" endtime="20210619 01:22:30.362"/>
</kw>
<msg timestamp="20210619 01:22:30.362" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:22:26.596" endtime="20210619 01:22:30.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:22:30.362" endtime="20210619 01:22:30.363"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:30.367" level="INFO">Running command 'ozone sh bucket info /20221-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:34.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:34.170" level="INFO">${output} = -1</msg>
<status status="PASS" starttime="20210619 01:22:30.365" endtime="20210619 01:22:34.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:34.172" level="INFO">-1</msg>
<status status="PASS" starttime="20210619 01:22:34.171" endtime="20210619 01:22:34.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:34.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:34.172" endtime="20210619 01:22:34.173"/>
</kw>
<status status="PASS" starttime="20210619 01:22:30.364" endtime="20210619 01:22:34.173"/>
</kw>
<msg timestamp="20210619 01:22:34.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:30.364" endtime="20210619 01:22:34.174"/>
</kw>
<msg timestamp="20210619 01:22:34.174" level="INFO">${result} = -1</msg>
<status status="PASS" starttime="20210619 01:22:30.363" endtime="20210619 01:22:34.174"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:22:34.174" endtime="20210619 01:22:34.175"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:34.178" level="INFO">Running command 'ozone sh bucket delete /20221-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:37.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:37.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:22:34.177" endtime="20210619 01:22:37.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:37.592" level="INFO"/>
<status status="PASS" starttime="20210619 01:22:37.591" endtime="20210619 01:22:37.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:37.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:37.593" endtime="20210619 01:22:37.593"/>
</kw>
<status status="PASS" starttime="20210619 01:22:34.176" endtime="20210619 01:22:37.594"/>
</kw>
<msg timestamp="20210619 01:22:37.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:34.176" endtime="20210619 01:22:37.594"/>
</kw>
<status status="PASS" starttime="20210619 01:22:34.175" endtime="20210619 01:22:37.594"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:37.598" level="INFO">Running command 'ozone sh volume delete /20221-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:41.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:41.018" level="INFO">${output} = Volume 20221-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20210619 01:22:37.596" endtime="20210619 01:22:41.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:41.020" level="INFO">Volume 20221-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20210619 01:22:41.019" endtime="20210619 01:22:41.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:41.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:41.020" endtime="20210619 01:22:41.020"/>
</kw>
<status status="PASS" starttime="20210619 01:22:37.595" endtime="20210619 01:22:41.021"/>
</kw>
<msg timestamp="20210619 01:22:41.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:37.595" endtime="20210619 01:22:41.021"/>
</kw>
<status status="PASS" starttime="20210619 01:22:37.594" endtime="20210619 01:22:41.021"/>
</kw>
<status status="PASS" starttime="20210619 01:19:30.343" endtime="20210619 01:22:41.022"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:19:30.279" endtime="20210619 01:22:41.022"/>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20210619 01:10:54.412" endtime="20210619 01:22:41.023"/>
</suite>
<status status="PASS" starttime="20210619 01:03:17.347" endtime="20210619 01:22:41.028"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:03:12.311" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:03:12.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:03:12.315" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:03:12.308" endtime="20210619 01:03:12.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:03:12.316" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:03:12.316" endtime="20210619 01:03:12.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:03:12.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:03:12.317" endtime="20210619 01:03:12.317"/>
</kw>
<status status="PASS" starttime="20210619 01:03:12.307" endtime="20210619 01:03:12.318"/>
</kw>
<msg timestamp="20210619 01:03:12.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:03:12.307" endtime="20210619 01:03:12.318"/>
</kw>
<msg timestamp="20210619 01:03:12.318" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:03:12.306" endtime="20210619 01:03:12.318"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:03:12.319" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:03:12.319" endtime="20210619 01:03:12.319"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:03:12.323" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:03:12.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:03:12.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:03:12.322" endtime="20210619 01:03:12.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:03:12.331" level="INFO"/>
<status status="PASS" starttime="20210619 01:03:12.331" endtime="20210619 01:03:12.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:03:12.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:03:12.331" endtime="20210619 01:03:12.332"/>
</kw>
<status status="PASS" starttime="20210619 01:03:12.321" endtime="20210619 01:03:12.332"/>
</kw>
<msg timestamp="20210619 01:03:12.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:03:12.321" endtime="20210619 01:03:12.332"/>
</kw>
<status status="PASS" starttime="20210619 01:03:12.320" endtime="20210619 01:03:12.333"/>
</kw>
<status status="PASS" starttime="20210619 01:03:12.320" endtime="20210619 01:03:12.333"/>
</kw>
<status status="PASS" starttime="20210619 01:03:12.305" endtime="20210619 01:03:12.333"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:03:12.304" endtime="20210619 01:03:12.333"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210619 01:03:12.244" endtime="20210619 01:03:12.335"/>
</suite>
<suite id="s1-s3" name="ozonefs-ofs-bucket" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:31:09.774" level="INFO">${random} = 05318</msg>
<status status="PASS" starttime="20210619 01:31:09.774" endtime="20210619 01:31:09.774"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:31:09.775" level="INFO">${BUCKET} = 05318-bucket1-ofs</msg>
<status status="PASS" starttime="20210619 01:31:09.775" endtime="20210619 01:31:09.775"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:31:09.776" level="INFO">${BUCKET2} = 05318-bucket2-ofs</msg>
<status status="PASS" starttime="20210619 01:31:09.776" endtime="20210619 01:31:09.776"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:31:09.777" level="INFO">${BUCKET_IN_VOL2} = 05318-bucket3-ofs</msg>
<status status="PASS" starttime="20210619 01:31:09.776" endtime="20210619 01:31:09.777"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:31:09.782" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:31:09.781" endtime="20210619 01:31:09.782"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:31:09.782" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:31:09.782" endtime="20210619 01:31:09.782"/>
</kw>
<status status="PASS" starttime="20210619 01:31:09.781" endtime="20210619 01:31:09.783"/>
</kw>
<msg timestamp="20210619 01:31:09.783" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:31:09.779" endtime="20210619 01:31:09.783"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:31:09.785" level="INFO">${first} = /</msg>
<status status="PASS" starttime="20210619 01:31:09.785" endtime="20210619 01:31:09.785"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:31:09.786" level="INFO">${result} = /</msg>
<status status="PASS" starttime="20210619 01:31:09.785" endtime="20210619 01:31:09.786"/>
</kw>
<status status="PASS" starttime="20210619 01:31:09.784" endtime="20210619 01:31:09.786"/>
</kw>
<msg timestamp="20210619 01:31:09.786" level="INFO">${path_with_leading} = /</msg>
<status status="PASS" starttime="20210619 01:31:09.783" endtime="20210619 01:31:09.787"/>
</kw>
<status status="PASS" starttime="20210619 01:31:09.779" endtime="20210619 01:31:09.787"/>
</kw>
<msg timestamp="20210619 01:31:09.787" level="INFO">${url} = ofs://om/fstest1/05318-bucket1-ofs/</msg>
<status status="PASS" starttime="20210619 01:31:09.778" endtime="20210619 01:31:09.787"/>
</kw>
<msg timestamp="20210619 01:31:09.787" level="INFO">${BASE_URL} = ofs://om/fstest1/05318-bucket1-ofs/</msg>
<status status="PASS" starttime="20210619 01:31:09.777" endtime="20210619 01:31:09.787"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:31:09.788" level="INFO">${BASE_URL} = ofs://om/fstest1/05318-bucket1-ofs/</msg>
<status status="PASS" starttime="20210619 01:31:09.788" endtime="20210619 01:31:09.788"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:31:09.790" level="INFO">${DEEP_URL} = ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir</msg>
<status status="PASS" starttime="20210619 01:31:09.788" endtime="20210619 01:31:09.790"/>
</kw>
<status status="PASS" starttime="20210619 01:31:09.774" endtime="20210619 01:31:09.791"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:31:09.795" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:31:13.226" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:31:13.226" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:31:09.791" endtime="20210619 01:31:13.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:13.227" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:31:13.227" endtime="20210619 01:31:13.227"/>
</kw>
<status status="PASS" starttime="20210619 01:31:09.791" endtime="20210619 01:31:13.228"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:31:13.230" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:31:16.820" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:31:16.820" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:31:13.228" endtime="20210619 01:31:16.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:16.821" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:31:16.820" endtime="20210619 01:31:16.821"/>
</kw>
<status status="PASS" starttime="20210619 01:31:13.228" endtime="20210619 01:31:16.821"/>
</kw>
<status status="PASS" starttime="20210619 01:31:09.791" endtime="20210619 01:31:16.821"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create buckets for FS test" library="setup">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:31:16.826" level="INFO">Running command 'ozone sh bucket create fstest1/05318-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:31:20.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:31:20.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:31:16.824" endtime="20210619 01:31:20.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:20.364" level="INFO"/>
<status status="PASS" starttime="20210619 01:31:20.363" endtime="20210619 01:31:20.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:31:20.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:31:20.364" endtime="20210619 01:31:20.365"/>
</kw>
<status status="PASS" starttime="20210619 01:31:16.824" endtime="20210619 01:31:20.365"/>
</kw>
<msg timestamp="20210619 01:31:20.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:31:16.823" endtime="20210619 01:31:20.365"/>
</kw>
<status status="PASS" starttime="20210619 01:31:16.822" endtime="20210619 01:31:20.366"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:31:20.369" level="INFO">Running command 'ozone sh bucket create fstest1/05318-bucket2-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:31:23.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:31:23.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:31:20.367" endtime="20210619 01:31:23.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:23.968" level="INFO"/>
<status status="PASS" starttime="20210619 01:31:23.967" endtime="20210619 01:31:23.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:31:23.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:31:23.968" endtime="20210619 01:31:23.968"/>
</kw>
<status status="PASS" starttime="20210619 01:31:20.367" endtime="20210619 01:31:23.969"/>
</kw>
<msg timestamp="20210619 01:31:23.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:31:20.366" endtime="20210619 01:31:23.969"/>
</kw>
<status status="PASS" starttime="20210619 01:31:20.366" endtime="20210619 01:31:23.969"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:31:23.973" level="INFO">Running command 'ozone sh bucket create fstest2/05318-bucket3-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:31:27.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:31:27.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:31:23.971" endtime="20210619 01:31:27.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:27.549" level="INFO"/>
<status status="PASS" starttime="20210619 01:31:27.548" endtime="20210619 01:31:27.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:31:27.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:31:27.549" endtime="20210619 01:31:27.550"/>
</kw>
<status status="PASS" starttime="20210619 01:31:23.970" endtime="20210619 01:31:27.550"/>
</kw>
<msg timestamp="20210619 01:31:27.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:31:23.970" endtime="20210619 01:31:27.551"/>
</kw>
<status status="PASS" starttime="20210619 01:31:23.969" endtime="20210619 01:31:27.551"/>
</kw>
<status status="PASS" starttime="20210619 01:31:16.822" endtime="20210619 01:31:27.551"/>
</kw>
<status status="PASS" starttime="20210619 01:31:16.822" endtime="20210619 01:31:27.551"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:31:27.555" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:31:31.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:31:31.290" level="INFO">${output} = {
  "metadata" : { },
  "name" : "20221-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210619 01:31:27.553" endtime="20210619 01:31:31.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:31.291" level="INFO">{
  "metadata" : { },
  "name" : "20221-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:14:15.343Z",
  "modificationTime" : "2021-06-19T01:14:37.274Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "48644-source",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2021-06-19T01:04:25.872Z",
  "modificationTime" : "2021-06-19T01:05:00.663Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ]
}
{
  "metadata" : { },
  "name" : "48644-target",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 10,
  "creationTime" : "2021-06-19T01:04:29.436Z",
  "modificationTime" : "2021-06-19T01:04:57.068Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-06-19T01:27:26.826Z",
  "modificationTime" : "2021-06-19T01:27:26.826Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-19T01:27:34.366Z",
  "modificationTime" : "2021-06-19T01:27:34.366Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-19T01:27:30.689Z",
  "modificationTime" : "2021-06-19T01:27:30.689Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:27:37.810Z",
  "modificationTime" : "2021-06-19T01:27:37.810Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest254",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:23:59.214Z",
  "modificationTime" : "2021-06-19T01:23:59.214Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest354",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:24:16.679Z",
  "modificationTime" : "2021-06-19T01:26:05.936Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest479",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:23:32.141Z",
  "modificationTime" : "2021-06-19T01:23:32.141Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest54",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-19T01:23:55.783Z",
  "modificationTime" : "2021-06-19T01:23:55.783Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "root",
  "owner" : "root",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-19T01:02:38.598Z",
  "modificationTime" : "2021-06-19T01:02:38.598Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-51285",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.180Z",
  "modificationTime" : "2021-06-19T01:03:21.180Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-1-76499",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.388Z",
  "modificationTime" : "2021-06-19T01:03:21.388Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-31975",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.399Z",
  "modificationTime" : "2021-06-19T01:03:21.399Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-25085",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.407Z",
  "modificationTime" : "2021-06-19T01:03:21.407Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-24180",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.418Z",
  "modificationTime" : "2021-06-19T01:03:21.418Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-tgjpg",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:23:01.631Z",
  "modificationTime" : "2021-06-19T01:23:01.631Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" starttime="20210619 01:31:31.290" endtime="20210619 01:31:31.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:31:31.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:31:31.291" endtime="20210619 01:31:31.292"/>
</kw>
<status status="PASS" starttime="20210619 01:31:27.552" endtime="20210619 01:31:31.292"/>
</kw>
<msg timestamp="20210619 01:31:31.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:31:27.552" endtime="20210619 01:31:31.292"/>
</kw>
<msg timestamp="20210619 01:31:31.293" level="INFO">${result} = {
  "metadata" : { },
  "name" : "20221-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210619 01:31:27.552" endtime="20210619 01:31:31.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:31:31.293" endtime="20210619 01:31:31.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:31:31.294" endtime="20210619 01:31:31.294"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm[^@]*@EXAMPLE\.COM)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:31:31.294" endtime="20210619 01:31:31.295"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:31:31.298" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:31:35.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:31:35.018" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05318-bucket1-ofs",
  "storageType" : "DISK"...</msg>
<status status="PASS" starttime="20210619 01:31:31.296" endtime="20210619 01:31:35.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:35.019" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05318-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:31:20.287Z",
  "modificationTime" : "2021-06-19T01:31:20.287Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05318-bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:31:23.877Z",
  "modificationTime" : "2021-06-19T01:31:23.877Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "88666-link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:27:51.837Z",
  "modificationTime" : "2021-06-19T01:27:51.837Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "88666-link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "88666-link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:27:55.254Z",
  "modificationTime" : "2021-06-19T01:27:55.254Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "88666-link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210619 01:31:35.019" endtime="20210619 01:31:35.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:31:35.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:31:35.020" endtime="20210619 01:31:35.020"/>
</kw>
<status status="PASS" starttime="20210619 01:31:31.296" endtime="20210619 01:31:35.021"/>
</kw>
<msg timestamp="20210619 01:31:35.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:31:31.296" endtime="20210619 01:31:35.021"/>
</kw>
<msg timestamp="20210619 01:31:35.021" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05318-bucket1-ofs",
  "storageType" : "DISK"...</msg>
<status status="PASS" starttime="20210619 01:31:31.295" endtime="20210619 01:31:35.021"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:31:35.021" endtime="20210619 01:31:35.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:31:35.022" endtime="20210619 01:31:35.022"/>
</kw>
<status status="PASS" starttime="20210619 01:31:27.551" endtime="20210619 01:31:35.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:35.023" level="INFO">Completed setup for ofs tests with buckets in fstest1/05318-bucket1-ofs using FS base URL: ofs://om/fstest1/05318-bucket1-ofs/</msg>
<status status="PASS" starttime="20210619 01:31:35.023" endtime="20210619 01:31:35.023"/>
</kw>
<status status="PASS" starttime="20210619 01:31:09.773" endtime="20210619 01:31:35.023"/>
</kw>
<test id="s1-s3-t1" name="List root">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:31:35.031" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:31:35.030" endtime="20210619 01:31:35.031"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:31:35.031" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:31:35.031" endtime="20210619 01:31:35.032"/>
</kw>
<status status="PASS" starttime="20210619 01:31:35.029" endtime="20210619 01:31:35.032"/>
</kw>
<msg timestamp="20210619 01:31:35.032" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:31:35.028" endtime="20210619 01:31:35.032"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:31:35.033" endtime="20210619 01:31:35.034"/>
</kw>
<msg timestamp="20210619 01:31:35.035" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210619 01:31:35.032" endtime="20210619 01:31:35.035"/>
</kw>
<status status="PASS" starttime="20210619 01:31:35.027" endtime="20210619 01:31:35.035"/>
</kw>
<msg timestamp="20210619 01:31:35.035" level="INFO">${url} = ofs://om/fstest1/05318-bucket1-ofs</msg>
<status status="PASS" starttime="20210619 01:31:35.026" endtime="20210619 01:31:35.035"/>
</kw>
<msg timestamp="20210619 01:31:35.036" level="INFO">${root} = ofs://om/fstest1/05318-bucket1-ofs</msg>
<status status="PASS" starttime="20210619 01:31:35.025" endtime="20210619 01:31:35.036"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:31:35.039" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/05318-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:31:38.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:31:38.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:31:35.037" endtime="20210619 01:31:38.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:38.419" level="INFO"/>
<status status="PASS" starttime="20210619 01:31:38.419" endtime="20210619 01:31:38.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:31:38.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:31:38.420" endtime="20210619 01:31:38.420"/>
</kw>
<status status="PASS" starttime="20210619 01:31:35.037" endtime="20210619 01:31:38.421"/>
</kw>
<msg timestamp="20210619 01:31:38.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:31:35.036" endtime="20210619 01:31:38.421"/>
</kw>
<status status="PASS" starttime="20210619 01:31:35.036" endtime="20210619 01:31:38.421"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:31:35.024" endtime="20210619 01:31:38.421"/>
</test>
<test id="s1-s3-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:31:38.429" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:31:38.428" endtime="20210619 01:31:38.429"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:31:38.429" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:31:38.429" endtime="20210619 01:31:38.429"/>
</kw>
<status status="PASS" starttime="20210619 01:31:38.427" endtime="20210619 01:31:38.430"/>
</kw>
<msg timestamp="20210619 01:31:38.430" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:31:38.426" endtime="20210619 01:31:38.430"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:31:38.431" endtime="20210619 01:31:38.432"/>
</kw>
<msg timestamp="20210619 01:31:38.433" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210619 01:31:38.430" endtime="20210619 01:31:38.433"/>
</kw>
<status status="PASS" starttime="20210619 01:31:38.425" endtime="20210619 01:31:38.433"/>
</kw>
<msg timestamp="20210619 01:31:38.433" level="INFO">${url} = ofs://om/no-such-volume/05318-bucket1-ofs</msg>
<status status="PASS" starttime="20210619 01:31:38.424" endtime="20210619 01:31:38.433"/>
</kw>
<msg timestamp="20210619 01:31:38.434" level="INFO">${url} = ofs://om/no-such-volume/05318-bucket1-ofs</msg>
<status status="PASS" starttime="20210619 01:31:38.423" endtime="20210619 01:31:38.434"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:31:38.436" level="INFO">Running command 'ozone fs -ls ofs://om/no-such-volume/05318-bucket1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:31:41.891" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:31:41.891" level="INFO">${output} = ls: `ofs://om/no-such-volume/05318-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210619 01:31:38.435" endtime="20210619 01:31:41.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:41.892" level="INFO">ls: `ofs://om/no-such-volume/05318-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210619 01:31:41.891" endtime="20210619 01:31:41.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:31:41.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:31:41.892" endtime="20210619 01:31:41.893"/>
</kw>
<msg timestamp="20210619 01:31:41.893" level="INFO">${result} = ls: `ofs://om/no-such-volume/05318-bucket1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210619 01:31:38.434" endtime="20210619 01:31:41.893"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:31:41.894" endtime="20210619 01:31:41.895"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:31:38.422" endtime="20210619 01:31:41.895"/>
</test>
<test id="s1-s3-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:31:41.902" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:31:41.901" endtime="20210619 01:31:41.902"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:31:41.903" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:31:41.902" endtime="20210619 01:31:41.903"/>
</kw>
<status status="PASS" starttime="20210619 01:31:41.901" endtime="20210619 01:31:41.903"/>
</kw>
<msg timestamp="20210619 01:31:41.903" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:31:41.900" endtime="20210619 01:31:41.903"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:31:41.905" endtime="20210619 01:31:41.906"/>
</kw>
<msg timestamp="20210619 01:31:41.906" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210619 01:31:41.903" endtime="20210619 01:31:41.906"/>
</kw>
<status status="PASS" starttime="20210619 01:31:41.899" endtime="20210619 01:31:41.907"/>
</kw>
<msg timestamp="20210619 01:31:41.907" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20210619 01:31:41.898" endtime="20210619 01:31:41.907"/>
</kw>
<msg timestamp="20210619 01:31:41.907" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20210619 01:31:41.896" endtime="20210619 01:31:41.907"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:31:41.910" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:31:45.542" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:31:45.542" level="INFO">${output} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210619 01:31:41.908" endtime="20210619 01:31:45.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:45.543" level="INFO">ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210619 01:31:45.542" endtime="20210619 01:31:45.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:31:45.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:31:45.543" endtime="20210619 01:31:45.544"/>
</kw>
<msg timestamp="20210619 01:31:45.544" level="INFO">${result} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210619 01:31:41.907" endtime="20210619 01:31:45.545"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:31:45.545" endtime="20210619 01:31:45.546"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:31:41.896" endtime="20210619 01:31:45.546"/>
</test>
<test id="s1-s3-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:31:45.551" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:31:49.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:31:49.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:31:45.549" endtime="20210619 01:31:49.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:49.098" level="INFO"/>
<status status="PASS" starttime="20210619 01:31:49.097" endtime="20210619 01:31:49.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:31:49.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:31:49.099" endtime="20210619 01:31:49.099"/>
</kw>
<status status="PASS" starttime="20210619 01:31:45.548" endtime="20210619 01:31:49.100"/>
</kw>
<msg timestamp="20210619 01:31:49.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:31:45.548" endtime="20210619 01:31:49.100"/>
</kw>
<status status="PASS" starttime="20210619 01:31:45.547" endtime="20210619 01:31:49.100"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:31:49.104" level="INFO">Running command 'ozone sh key list fstest1/05318-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:31:52.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:31:52.907" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210619 01:31:49.102" endtime="20210619 01:31:52.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:52.908" level="INFO">test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210619 01:31:52.907" endtime="20210619 01:31:52.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:31:52.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:31:52.909" endtime="20210619 01:31:52.909"/>
</kw>
<status status="PASS" starttime="20210619 01:31:49.101" endtime="20210619 01:31:52.910"/>
</kw>
<msg timestamp="20210619 01:31:52.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:31:49.101" endtime="20210619 01:31:52.910"/>
</kw>
<msg timestamp="20210619 01:31:52.910" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210619 01:31:49.100" endtime="20210619 01:31:52.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:31:52.910" endtime="20210619 01:31:52.911"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:31:45.547" endtime="20210619 01:31:52.911"/>
</test>
<test id="s1-s3-t5" name="Copy from local">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:31:52.916" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:31:58.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:31:58.460" level="INFO">${output} = 2021-06-19 01:31:56,550 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:31:56,626 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:31:52.914" endtime="20210619 01:31:58.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:58.461" level="INFO">2021-06-19 01:31:56,550 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:31:56,626 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:31:56,626 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:31:56,918 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:31:56,919 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-ADEFF7FE0CF2-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:31:56,920 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:31:58.461" endtime="20210619 01:31:58.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:31:58.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:31:58.462" endtime="20210619 01:31:58.462"/>
</kw>
<status status="PASS" starttime="20210619 01:31:52.914" endtime="20210619 01:31:58.463"/>
</kw>
<msg timestamp="20210619 01:31:58.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:31:52.913" endtime="20210619 01:31:58.463"/>
</kw>
<status status="PASS" starttime="20210619 01:31:52.913" endtime="20210619 01:31:58.463"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:31:58.467" level="INFO">Running command 'ozone sh key list fstest1/05318-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:02.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:02.368" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:31:58.465" endtime="20210619 01:32:02.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:02.370" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:32:02.369" endtime="20210619 01:32:02.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:02.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:02.370" endtime="20210619 01:32:02.371"/>
</kw>
<status status="PASS" starttime="20210619 01:31:58.465" endtime="20210619 01:32:02.371"/>
</kw>
<msg timestamp="20210619 01:32:02.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:31:58.464" endtime="20210619 01:32:02.372"/>
</kw>
<msg timestamp="20210619 01:32:02.372" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:31:58.463" endtime="20210619 01:32:02.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:32:02.372" endtime="20210619 01:32:02.372"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:02.376" level="INFO">Running command 'ozone sh key info fstest1/05318-bucket1-ofs/test/ofs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:06.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:06.262" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20210619 01:32:02.374" endtime="20210619 01:32:06.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:06.264" level="INFO">3</msg>
<status status="PASS" starttime="20210619 01:32:06.263" endtime="20210619 01:32:06.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:06.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:06.264" endtime="20210619 01:32:06.265"/>
</kw>
<status status="PASS" starttime="20210619 01:32:02.374" endtime="20210619 01:32:06.265"/>
</kw>
<msg timestamp="20210619 01:32:06.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:02.374" endtime="20210619 01:32:06.265"/>
</kw>
<msg timestamp="20210619 01:32:06.265" level="INFO">${result} = 3</msg>
<status status="PASS" starttime="20210619 01:32:02.373" endtime="20210619 01:32:06.265"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:32:06.266" endtime="20210619 01:32:06.266"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:31:52.912" endtime="20210619 01:32:06.266"/>
</test>
<test id="s1-s3-t6" name="Put">
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:06.272" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:11.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:11.544" level="INFO">${output} = 2021-06-19 01:32:09,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:32:10,036 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:32:06.270" endtime="20210619 01:32:11.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:11.546" level="INFO">2021-06-19 01:32:09,963 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:32:10,036 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:32:10,036 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:32:10,275 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:32:10,275 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-E1C1716E5580-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:32:10,276 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:32:11.545" endtime="20210619 01:32:11.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:11.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:11.546" endtime="20210619 01:32:11.547"/>
</kw>
<status status="PASS" starttime="20210619 01:32:06.269" endtime="20210619 01:32:11.547"/>
</kw>
<msg timestamp="20210619 01:32:11.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:06.269" endtime="20210619 01:32:11.547"/>
</kw>
<status status="PASS" starttime="20210619 01:32:06.268" endtime="20210619 01:32:11.547"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:11.551" level="INFO">Running command 'ozone sh key list fstest1/05318-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:15.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:15.289" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:32:11.549" endtime="20210619 01:32:15.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:15.290" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:32:15.289" endtime="20210619 01:32:15.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:15.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:15.290" endtime="20210619 01:32:15.291"/>
</kw>
<status status="PASS" starttime="20210619 01:32:11.549" endtime="20210619 01:32:15.291"/>
</kw>
<msg timestamp="20210619 01:32:15.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:11.548" endtime="20210619 01:32:15.292"/>
</kw>
<msg timestamp="20210619 01:32:15.292" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:32:11.548" endtime="20210619 01:32:15.292"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:32:15.292" endtime="20210619 01:32:15.293"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:32:06.267" endtime="20210619 01:32:15.293"/>
</test>
<test id="s1-s3-t7" name="List">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:15.299" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:18.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:18.826" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:31 ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-19 01:32 ofs://om/fstest1/0531...</msg>
<status status="PASS" starttime="20210619 01:32:15.296" endtime="20210619 01:32:18.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:18.828" level="INFO">Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:31 ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-19 01:32 ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:32:18.827" endtime="20210619 01:32:18.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:18.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:18.828" endtime="20210619 01:32:18.829"/>
</kw>
<status status="PASS" starttime="20210619 01:32:15.295" endtime="20210619 01:32:18.829"/>
</kw>
<msg timestamp="20210619 01:32:18.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:15.295" endtime="20210619 01:32:18.829"/>
</kw>
<msg timestamp="20210619 01:32:18.830" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:31 ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-19 01:32 ofs://om/fstest1/0531...</msg>
<status status="PASS" starttime="20210619 01:32:15.294" endtime="20210619 01:32:18.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:32:18.830" endtime="20210619 01:32:18.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:32:18.831" endtime="20210619 01:32:18.831"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:32:15.294" endtime="20210619 01:32:18.831"/>
</test>
<test id="s1-s3-t8" name="Move">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:18.836" level="INFO">Running command 'ozone fs -mv ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/NOTICE.txt ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:22.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:22.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:32:18.834" endtime="20210619 01:32:22.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:22.378" level="INFO"/>
<status status="PASS" starttime="20210619 01:32:22.377" endtime="20210619 01:32:22.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:22.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:22.378" endtime="20210619 01:32:22.379"/>
</kw>
<status status="PASS" starttime="20210619 01:32:18.834" endtime="20210619 01:32:22.379"/>
</kw>
<msg timestamp="20210619 01:32:22.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:18.833" endtime="20210619 01:32:22.379"/>
</kw>
<status status="PASS" starttime="20210619 01:32:18.833" endtime="20210619 01:32:22.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:22.383" level="INFO">Running command 'ozone sh key list fstest1/05318-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:26.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:26.248" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:32:22.381" endtime="20210619 01:32:26.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:26.249" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:32:26.248" endtime="20210619 01:32:26.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:26.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:26.249" endtime="20210619 01:32:26.250"/>
</kw>
<status status="PASS" starttime="20210619 01:32:22.381" endtime="20210619 01:32:26.250"/>
</kw>
<msg timestamp="20210619 01:32:26.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:22.381" endtime="20210619 01:32:26.251"/>
</kw>
<msg timestamp="20210619 01:32:26.251" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:32:22.380" endtime="20210619 01:32:26.251"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:32:26.251" endtime="20210619 01:32:26.252"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:32:26.252" endtime="20210619 01:32:26.252"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:32:18.832" endtime="20210619 01:32:26.252"/>
</test>
<test id="s1-s3-t9" name="Copy within FS">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:26.258" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:29.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:29.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:32:26.256" endtime="20210619 01:32:29.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:29.711" level="INFO"/>
<status status="PASS" starttime="20210619 01:32:29.710" endtime="20210619 01:32:29.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:29.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:29.711" endtime="20210619 01:32:29.712"/>
</kw>
<status status="PASS" starttime="20210619 01:32:26.255" endtime="20210619 01:32:29.712"/>
</kw>
<msg timestamp="20210619 01:32:29.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:26.255" endtime="20210619 01:32:29.712"/>
</kw>
<status status="PASS" starttime="20210619 01:32:26.254" endtime="20210619 01:32:29.712"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:29.716" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/MOVED.TXT ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:35.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:35.386" level="INFO">${output} = 2021-06-19 01:32:33,524 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:32:33,597 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:32:29.714" endtime="20210619 01:32:35.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:35.387" level="INFO">2021-06-19 01:32:33,524 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:32:33,597 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:32:33,597 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:32:34,717 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:32:34,718 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-D4D79029C889-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:32:34,719 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:32:35.386" endtime="20210619 01:32:35.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:35.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:35.387" endtime="20210619 01:32:35.388"/>
</kw>
<status status="PASS" starttime="20210619 01:32:29.714" endtime="20210619 01:32:35.388"/>
</kw>
<msg timestamp="20210619 01:32:35.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:29.713" endtime="20210619 01:32:35.388"/>
</kw>
<status status="PASS" starttime="20210619 01:32:29.713" endtime="20210619 01:32:35.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:35.392" level="INFO">Running command 'ozone sh key list fstest1/05318-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:38.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:38.977" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:32:35.390" endtime="20210619 01:32:38.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:38.978" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:32:38.977" endtime="20210619 01:32:38.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:38.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:38.979" endtime="20210619 01:32:38.979"/>
</kw>
<status status="PASS" starttime="20210619 01:32:35.390" endtime="20210619 01:32:38.980"/>
</kw>
<msg timestamp="20210619 01:32:38.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:35.390" endtime="20210619 01:32:38.980"/>
</kw>
<msg timestamp="20210619 01:32:38.980" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:32:35.389" endtime="20210619 01:32:38.980"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:32:38.980" endtime="20210619 01:32:38.981"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:38.985" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:42.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:42.514" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:32 ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:32:38.983" endtime="20210619 01:32:42.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:42.515" level="INFO">Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:32 ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:32:42.514" endtime="20210619 01:32:42.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:42.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:42.515" endtime="20210619 01:32:42.516"/>
</kw>
<status status="PASS" starttime="20210619 01:32:38.982" endtime="20210619 01:32:42.516"/>
</kw>
<msg timestamp="20210619 01:32:42.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:38.982" endtime="20210619 01:32:42.516"/>
</kw>
<msg timestamp="20210619 01:32:42.517" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:32 ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:32:38.981" endtime="20210619 01:32:42.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:32:42.517" endtime="20210619 01:32:42.518"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:32:42.518" endtime="20210619 01:32:42.518"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:32:26.253" endtime="20210619 01:32:42.519"/>
</test>
<test id="s1-s3-t10" name="Cat file">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:42.525" level="INFO">Running command 'ozone fs -cat ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:47.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:47.788" level="INFO">${output} = 2021-06-19 01:32:46,103 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:32:46,181 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:32:42.523" endtime="20210619 01:32:47.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:47.789" level="INFO">2021-06-19 01:32:46,103 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:32:46,181 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:32:46,181 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Ozone
Copyright 2021 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20210619 01:32:47.788" endtime="20210619 01:32:47.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:47.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:47.789" endtime="20210619 01:32:47.790"/>
</kw>
<status status="PASS" starttime="20210619 01:32:42.522" endtime="20210619 01:32:47.790"/>
</kw>
<msg timestamp="20210619 01:32:47.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:42.521" endtime="20210619 01:32:47.791"/>
</kw>
<status status="PASS" starttime="20210619 01:32:42.521" endtime="20210619 01:32:47.792"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:32:42.520" endtime="20210619 01:32:47.792"/>
</test>
<test id="s1-s3-t11" name="Delete file">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:47.798" level="INFO">Running command 'ozone fs -rm -skipTrash ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:51.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:51.413" level="INFO">${output} = Deleted ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:32:47.796" endtime="20210619 01:32:51.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:51.415" level="INFO">Deleted ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:32:51.414" endtime="20210619 01:32:51.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:51.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:51.415" endtime="20210619 01:32:51.415"/>
</kw>
<status status="PASS" starttime="20210619 01:32:47.795" endtime="20210619 01:32:51.416"/>
</kw>
<msg timestamp="20210619 01:32:51.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:47.795" endtime="20210619 01:32:51.416"/>
</kw>
<status status="PASS" starttime="20210619 01:32:47.794" endtime="20210619 01:32:51.416"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:51.420" level="INFO">Running command 'ozone sh key list fstest1/05318-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:55.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:55.401" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210619 01:32:51.418" endtime="20210619 01:32:55.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:55.402" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210619 01:32:55.401" endtime="20210619 01:32:55.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:55.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:55.402" endtime="20210619 01:32:55.403"/>
</kw>
<status status="PASS" starttime="20210619 01:32:51.418" endtime="20210619 01:32:55.403"/>
</kw>
<msg timestamp="20210619 01:32:55.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:51.417" endtime="20210619 01:32:55.404"/>
</kw>
<msg timestamp="20210619 01:32:55.404" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210619 01:32:51.416" endtime="20210619 01:32:55.404"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:32:55.404" endtime="20210619 01:32:55.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:32:47.793" endtime="20210619 01:32:55.405"/>
</test>
<test id="s1-s3-t12" name="Delete dir">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:55.410" level="INFO">Running command 'ozone fs -rmdir ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:32:58.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:32:58.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:32:55.408" endtime="20210619 01:32:58.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:32:58.923" level="INFO"/>
<status status="PASS" starttime="20210619 01:32:58.923" endtime="20210619 01:32:58.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:32:58.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:32:58.924" endtime="20210619 01:32:58.924"/>
</kw>
<status status="PASS" starttime="20210619 01:32:55.407" endtime="20210619 01:32:58.924"/>
</kw>
<msg timestamp="20210619 01:32:58.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:55.407" endtime="20210619 01:32:58.925"/>
</kw>
<msg timestamp="20210619 01:32:58.925" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:32:55.406" endtime="20210619 01:32:58.925"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:32:58.930" level="INFO">Running command 'ozone sh key list fstest1/05318-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:02.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:02.740" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:32:58.928" endtime="20210619 01:33:02.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:02.741" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:33:02.740" endtime="20210619 01:33:02.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:02.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:02.741" endtime="20210619 01:33:02.742"/>
</kw>
<status status="PASS" starttime="20210619 01:32:58.926" endtime="20210619 01:33:02.742"/>
</kw>
<msg timestamp="20210619 01:33:02.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:32:58.926" endtime="20210619 01:33:02.743"/>
</kw>
<msg timestamp="20210619 01:33:02.743" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:32:58.925" endtime="20210619 01:33:02.743"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:33:02.743" endtime="20210619 01:33:02.744"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:32:55.405" endtime="20210619 01:33:02.744"/>
</test>
<test id="s1-s3-t13" name="Touch file">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:02.749" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:06.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:06.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:33:02.747" endtime="20210619 01:33:06.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:06.389" level="INFO"/>
<status status="PASS" starttime="20210619 01:33:06.388" endtime="20210619 01:33:06.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:06.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:06.389" endtime="20210619 01:33:06.390"/>
</kw>
<status status="PASS" starttime="20210619 01:33:02.747" endtime="20210619 01:33:06.390"/>
</kw>
<msg timestamp="20210619 01:33:06.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:02.746" endtime="20210619 01:33:06.390"/>
</kw>
<status status="PASS" starttime="20210619 01:33:02.746" endtime="20210619 01:33:06.390"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:06.395" level="INFO">Running command 'ozone sh key list fstest1/05318-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:10.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:10.270" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210619 01:33:06.392" endtime="20210619 01:33:10.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:10.271" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210619 01:33:10.271" endtime="20210619 01:33:10.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:10.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:10.272" endtime="20210619 01:33:10.272"/>
</kw>
<status status="PASS" starttime="20210619 01:33:06.392" endtime="20210619 01:33:10.273"/>
</kw>
<msg timestamp="20210619 01:33:10.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:06.391" endtime="20210619 01:33:10.273"/>
</kw>
<msg timestamp="20210619 01:33:10.273" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210619 01:33:06.391" endtime="20210619 01:33:10.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:33:10.274" endtime="20210619 01:33:10.274"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:33:02.745" endtime="20210619 01:33:10.275"/>
</test>
<test id="s1-s3-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:10.282" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:14.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:14.006" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:33:10.279" endtime="20210619 01:33:14.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:14.007" level="INFO"/>
<status status="PASS" starttime="20210619 01:33:14.007" endtime="20210619 01:33:14.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:14.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:14.008" endtime="20210619 01:33:14.009"/>
</kw>
<status status="PASS" starttime="20210619 01:33:10.279" endtime="20210619 01:33:14.009"/>
</kw>
<msg timestamp="20210619 01:33:14.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:10.278" endtime="20210619 01:33:14.009"/>
</kw>
<status status="PASS" starttime="20210619 01:33:10.278" endtime="20210619 01:33:14.009"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:14.013" level="INFO">Running command 'ozone fs -rm ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:17.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:17.630" level="INFO">${output} = 2021-06-19 01:33:17,320 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:33:17,432 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210619 01:33:14.011" endtime="20210619 01:33:17.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:17.632" level="INFO">2021-06-19 01:33:17,320 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:33:17,432 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/testFile.txt' to trash at: ofs://om/fstest1/05318-bucket1-ofs/.Trash/root/Current/fstest1/05318-bucket1-ofs/test/ofs/dir/testFile.txt</msg>
<status status="PASS" starttime="20210619 01:33:17.631" endtime="20210619 01:33:17.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:17.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:17.632" endtime="20210619 01:33:17.632"/>
</kw>
<status status="PASS" starttime="20210619 01:33:14.011" endtime="20210619 01:33:17.633"/>
</kw>
<msg timestamp="20210619 01:33:17.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:14.010" endtime="20210619 01:33:17.633"/>
</kw>
<status status="PASS" starttime="20210619 01:33:14.010" endtime="20210619 01:33:17.633"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:17.637" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/05318-bucket1-ofs// 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:21.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:21.154" level="INFO">${output} = drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/.Trash
drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/.Trash/root
drwxr...</msg>
<status status="PASS" starttime="20210619 01:33:17.635" endtime="20210619 01:33:21.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:21.155" level="INFO">drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/.Trash
drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/.Trash/root
drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/.Trash/root/Current
drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/.Trash/root/Current/fstest1
drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/.Trash/root/Current/fstest1/05318-bucket1-ofs
drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/.Trash/root/Current/fstest1/05318-bucket1-ofs/test
drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/.Trash/root/Current/fstest1/05318-bucket1-ofs/test/ofs
drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/.Trash/root/Current/fstest1/05318-bucket1-ofs/test/ofs/dir
-rw-rw-rw-   3 root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/.Trash/root/Current/fstest1/05318-bucket1-ofs/test/ofs/dir/testFile.txt
drwxrwxrwx   - root root          0 2021-06-19 01:31 ofs://om/fstest1/05318-bucket1-ofs/test
drwxrwxrwx   - root root          0 2021-06-19 01:31 ofs://om/fstest1/05318-bucket1-ofs/test/ofs
drwxrwxrwx   - root root          0 2021-06-19 01:31 ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir
-rw-rw-rw-   3 root root      17526 2021-06-19 01:32 ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/MOVED.TXT
-rw-rw-rw-   3 root root      17526 2021-06-19 01:32 ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210619 01:33:21.154" endtime="20210619 01:33:21.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:21.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:21.155" endtime="20210619 01:33:21.156"/>
</kw>
<status status="PASS" starttime="20210619 01:33:17.634" endtime="20210619 01:33:21.156"/>
</kw>
<msg timestamp="20210619 01:33:21.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:17.634" endtime="20210619 01:33:21.156"/>
</kw>
<msg timestamp="20210619 01:33:21.157" level="INFO">${result} = drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/.Trash
drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/.Trash/root
drwxr...</msg>
<status status="PASS" starttime="20210619 01:33:17.633" endtime="20210619 01:33:21.157"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:33:21.157" endtime="20210619 01:33:21.158"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20210619 01:33:21.158" endtime="20210619 01:33:21.158"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:33:21.159" endtime="20210619 01:33:21.159"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:33:10.277" endtime="20210619 01:33:21.159"/>
</test>
<test id="s1-s3-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:21.165" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:24.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:24.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:33:21.163" endtime="20210619 01:33:24.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:24.577" level="INFO"/>
<status status="PASS" starttime="20210619 01:33:24.577" endtime="20210619 01:33:24.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:24.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:24.578" endtime="20210619 01:33:24.578"/>
</kw>
<status status="PASS" starttime="20210619 01:33:21.162" endtime="20210619 01:33:24.579"/>
</kw>
<msg timestamp="20210619 01:33:24.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:21.162" endtime="20210619 01:33:24.579"/>
</kw>
<status status="PASS" starttime="20210619 01:33:21.161" endtime="20210619 01:33:24.579"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:24.583" level="INFO">Running command 'ozone fs -rm -skipTrash -r ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:28.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:28.213" level="INFO">${output} = Deleted ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20210619 01:33:24.581" endtime="20210619 01:33:28.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:28.214" level="INFO">Deleted ofs://om/fstest1/05318-bucket1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20210619 01:33:28.213" endtime="20210619 01:33:28.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:28.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:28.214" endtime="20210619 01:33:28.215"/>
</kw>
<status status="PASS" starttime="20210619 01:33:24.580" endtime="20210619 01:33:28.215"/>
</kw>
<msg timestamp="20210619 01:33:28.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:24.580" endtime="20210619 01:33:28.215"/>
</kw>
<status status="PASS" starttime="20210619 01:33:24.579" endtime="20210619 01:33:28.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:28.219" level="INFO">Running command 'ozone sh key list fstest1/05318-bucket1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:31.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:31.902" level="INFO">${output} = .Trash/
.Trash/root/
.Trash/root/Current/
.Trash/root/Current/fstest1/
.Trash/root/Current/fstest1/05318-bucket1-ofs/
.Trash/root/Current/fstest1/05318-bucket1-ofs/test/
.Trash/root/Current/fstest1/05...</msg>
<status status="PASS" starttime="20210619 01:33:28.218" endtime="20210619 01:33:31.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:31.903" level="INFO">.Trash/
.Trash/root/
.Trash/root/Current/
.Trash/root/Current/fstest1/
.Trash/root/Current/fstest1/05318-bucket1-ofs/
.Trash/root/Current/fstest1/05318-bucket1-ofs/test/
.Trash/root/Current/fstest1/05318-bucket1-ofs/test/ofs/
.Trash/root/Current/fstest1/05318-bucket1-ofs/test/ofs/dir/
.Trash/root/Current/fstest1/05318-bucket1-ofs/test/ofs/dir/testFile.txt
test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210619 01:33:31.903" endtime="20210619 01:33:31.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:31.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:31.904" endtime="20210619 01:33:31.904"/>
</kw>
<status status="PASS" starttime="20210619 01:33:28.217" endtime="20210619 01:33:31.905"/>
</kw>
<msg timestamp="20210619 01:33:31.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:28.216" endtime="20210619 01:33:31.905"/>
</kw>
<msg timestamp="20210619 01:33:31.905" level="INFO">${result} = .Trash/
.Trash/root/
.Trash/root/Current/
.Trash/root/Current/fstest1/
.Trash/root/Current/fstest1/05318-bucket1-ofs/
.Trash/root/Current/fstest1/05318-bucket1-ofs/test/
.Trash/root/Current/fstest1/05...</msg>
<status status="PASS" starttime="20210619 01:33:28.216" endtime="20210619 01:33:31.905"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:33:31.906" endtime="20210619 01:33:31.906"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:33:21.160" endtime="20210619 01:33:31.906"/>
</test>
<test id="s1-s3-t16" name="List recursively">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:31.912" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:31.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:31.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:33:31.910" endtime="20210619 01:33:31.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:31.915" level="INFO"/>
<status status="PASS" starttime="20210619 01:33:31.915" endtime="20210619 01:33:31.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:31.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:31.916" endtime="20210619 01:33:31.916"/>
</kw>
<status status="PASS" starttime="20210619 01:33:31.909" endtime="20210619 01:33:31.916"/>
</kw>
<msg timestamp="20210619 01:33:31.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:31.909" endtime="20210619 01:33:31.917"/>
</kw>
<status status="PASS" starttime="20210619 01:33:31.908" endtime="20210619 01:33:31.917"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:31.921" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:31.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:31.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:33:31.919" endtime="20210619 01:33:31.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:31.924" level="INFO"/>
<status status="PASS" starttime="20210619 01:33:31.923" endtime="20210619 01:33:31.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:31.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:31.924" endtime="20210619 01:33:31.925"/>
</kw>
<status status="PASS" starttime="20210619 01:33:31.918" endtime="20210619 01:33:31.925"/>
</kw>
<msg timestamp="20210619 01:33:31.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:31.918" endtime="20210619 01:33:31.925"/>
</kw>
<status status="PASS" starttime="20210619 01:33:31.917" endtime="20210619 01:33:31.926"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:31.929" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:31.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:31.932" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:33:31.928" endtime="20210619 01:33:31.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:31.933" level="INFO"/>
<status status="PASS" starttime="20210619 01:33:31.933" endtime="20210619 01:33:31.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:31.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:31.933" endtime="20210619 01:33:31.934"/>
</kw>
<status status="PASS" starttime="20210619 01:33:31.927" endtime="20210619 01:33:31.934"/>
</kw>
<msg timestamp="20210619 01:33:31.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:31.926" endtime="20210619 01:33:31.935"/>
</kw>
<status status="PASS" starttime="20210619 01:33:31.926" endtime="20210619 01:33:31.935"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:31.939" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/05318-bucket1-ofs/testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:35.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:35.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:33:31.937" endtime="20210619 01:33:35.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:35.541" level="INFO"/>
<status status="PASS" starttime="20210619 01:33:35.540" endtime="20210619 01:33:35.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:35.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:35.542" endtime="20210619 01:33:35.542"/>
</kw>
<status status="PASS" starttime="20210619 01:33:31.936" endtime="20210619 01:33:35.542"/>
</kw>
<msg timestamp="20210619 01:33:35.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:31.936" endtime="20210619 01:33:35.543"/>
</kw>
<status status="PASS" starttime="20210619 01:33:31.935" endtime="20210619 01:33:35.543"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:35.547" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 ofs://om/fstest1/05318-bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:40.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:40.854" level="INFO">${output} = 2021-06-19 01:33:39,039 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:33:39,165 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:33:35.545" endtime="20210619 01:33:40.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:40.856" level="INFO">2021-06-19 01:33:39,039 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:33:39,165 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:33:39,165 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:33:39,425 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:33:39,426 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-8675913DE029-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:33:39,427 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:33:40.855" endtime="20210619 01:33:40.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:40.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:40.856" endtime="20210619 01:33:40.856"/>
</kw>
<status status="PASS" starttime="20210619 01:33:35.544" endtime="20210619 01:33:40.857"/>
</kw>
<msg timestamp="20210619 01:33:40.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:35.544" endtime="20210619 01:33:40.857"/>
</kw>
<status status="PASS" starttime="20210619 01:33:35.543" endtime="20210619 01:33:40.857"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:40.861" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/05318-bucket1-ofs/testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:46.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:46.141" level="INFO">${output} = 2021-06-19 01:33:44,349 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:33:44,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:33:40.859" endtime="20210619 01:33:46.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:46.143" level="INFO">2021-06-19 01:33:44,349 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:33:44,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:33:44,482 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:33:44,772 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:33:44,773 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-8594D836C212-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:33:44,774 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:33:46.142" endtime="20210619 01:33:46.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:46.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:46.144" endtime="20210619 01:33:46.144"/>
</kw>
<status status="PASS" starttime="20210619 01:33:40.859" endtime="20210619 01:33:46.145"/>
</kw>
<msg timestamp="20210619 01:33:46.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:40.858" endtime="20210619 01:33:46.145"/>
</kw>
<status status="PASS" starttime="20210619 01:33:40.858" endtime="20210619 01:33:46.145"/>
</kw>
<status status="PASS" starttime="20210619 01:33:31.908" endtime="20210619 01:33:46.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:46.149" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/05318-bucket1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:49.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:49.683" level="INFO">${output} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/test...</msg>
<status status="PASS" starttime="20210619 01:33:46.147" endtime="20210619 01:33:49.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:49.685" level="INFO">-rw-rw-rw-   3 root root      17526 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/testdir1/localdir1
-rw-rw-rw-   3 root root      17526 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20210619 01:33:49.684" endtime="20210619 01:33:49.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:49.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:49.685" endtime="20210619 01:33:49.686"/>
</kw>
<status status="PASS" starttime="20210619 01:33:46.147" endtime="20210619 01:33:49.686"/>
</kw>
<msg timestamp="20210619 01:33:49.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:46.146" endtime="20210619 01:33:49.686"/>
</kw>
<msg timestamp="20210619 01:33:49.686" level="INFO">${result} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-19 01:33 ofs://om/fstest1/05318-bucket1-ofs/test...</msg>
<status status="PASS" starttime="20210619 01:33:46.146" endtime="20210619 01:33:49.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:33:49.687" endtime="20210619 01:33:49.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:33:49.687" endtime="20210619 01:33:49.688"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:33:31.907" endtime="20210619 01:33:49.688"/>
</test>
<test id="s1-s3-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:33:49.694" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:33:49.694" endtime="20210619 01:33:49.694"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:33:49.695" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:33:49.695" endtime="20210619 01:33:49.695"/>
</kw>
<status status="PASS" starttime="20210619 01:33:49.693" endtime="20210619 01:33:49.695"/>
</kw>
<msg timestamp="20210619 01:33:49.696" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:33:49.692" endtime="20210619 01:33:49.696"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:33:49.698" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20210619 01:33:49.698" endtime="20210619 01:33:49.698"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:33:49.699" level="INFO">${result} = /testdir2</msg>
<status status="PASS" starttime="20210619 01:33:49.698" endtime="20210619 01:33:49.699"/>
</kw>
<status status="PASS" starttime="20210619 01:33:49.697" endtime="20210619 01:33:49.699"/>
</kw>
<msg timestamp="20210619 01:33:49.699" level="INFO">${path_with_leading} = /testdir2</msg>
<status status="PASS" starttime="20210619 01:33:49.696" endtime="20210619 01:33:49.699"/>
</kw>
<status status="PASS" starttime="20210619 01:33:49.691" endtime="20210619 01:33:49.700"/>
</kw>
<msg timestamp="20210619 01:33:49.700" level="INFO">${url} = ofs://om/fstest1/05318-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20210619 01:33:49.690" endtime="20210619 01:33:49.700"/>
</kw>
<msg timestamp="20210619 01:33:49.700" level="INFO">${target} = ofs://om/fstest1/05318-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20210619 01:33:49.689" endtime="20210619 01:33:49.700"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:49.704" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/05318-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:53.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:53.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:33:49.702" endtime="20210619 01:33:53.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:53.075" level="INFO"/>
<status status="PASS" starttime="20210619 01:33:53.074" endtime="20210619 01:33:53.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:53.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:53.075" endtime="20210619 01:33:53.076"/>
</kw>
<status status="PASS" starttime="20210619 01:33:49.701" endtime="20210619 01:33:53.076"/>
</kw>
<msg timestamp="20210619 01:33:53.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:49.701" endtime="20210619 01:33:53.076"/>
</kw>
<status status="PASS" starttime="20210619 01:33:49.701" endtime="20210619 01:33:53.076"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:53.080" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/05318-bucket1-ofs//testdir1/localdir1 ofs://om/fstest1/05318-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:33:58.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:33:58.730" level="INFO">${output} = 2021-06-19 01:33:56,778 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:33:56,901 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:33:53.078" endtime="20210619 01:33:58.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:33:58.732" level="INFO">2021-06-19 01:33:56,778 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:33:56,901 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:33:56,901 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:33:58,060 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:33:58,061 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-7C09267669BE-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:33:58,062 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:33:58.731" endtime="20210619 01:33:58.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:33:58.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:33:58.732" endtime="20210619 01:33:58.733"/>
</kw>
<status status="PASS" starttime="20210619 01:33:53.078" endtime="20210619 01:33:58.733"/>
</kw>
<msg timestamp="20210619 01:33:58.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:53.077" endtime="20210619 01:33:58.733"/>
</kw>
<status status="PASS" starttime="20210619 01:33:53.077" endtime="20210619 01:33:58.734"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:33:58.738" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest1/05318-bucket2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:02.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:34:02.409" level="INFO">${output} = 2021-06-19 01:34:02,195 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:34:02,307 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210619 01:33:58.736" endtime="20210619 01:34:02.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:02.410" level="INFO">2021-06-19 01:34:02,195 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:34:02,307 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/05318-bucket2-ofs/testdir2' to trash at: ofs://om/fstest1/05318-bucket2-ofs/.Trash/root/Current/fstest1/05318-bucket2-ofs/testdir2</msg>
<status status="PASS" starttime="20210619 01:34:02.410" endtime="20210619 01:34:02.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:34:02.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:34:02.411" endtime="20210619 01:34:02.411"/>
</kw>
<status status="PASS" starttime="20210619 01:33:58.735" endtime="20210619 01:34:02.412"/>
</kw>
<msg timestamp="20210619 01:34:02.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:33:58.735" endtime="20210619 01:34:02.412"/>
</kw>
<status status="PASS" starttime="20210619 01:33:58.734" endtime="20210619 01:34:02.412"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:33:49.688" endtime="20210619 01:34:02.412"/>
</test>
<test id="s1-s3-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:34:02.419" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:34:02.419" endtime="20210619 01:34:02.419"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:34:02.420" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:34:02.419" endtime="20210619 01:34:02.420"/>
</kw>
<status status="PASS" starttime="20210619 01:34:02.418" endtime="20210619 01:34:02.420"/>
</kw>
<msg timestamp="20210619 01:34:02.420" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:34:02.416" endtime="20210619 01:34:02.421"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:34:02.423" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20210619 01:34:02.422" endtime="20210619 01:34:02.423"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:34:02.424" level="INFO">${result} = /testdir3</msg>
<status status="PASS" starttime="20210619 01:34:02.423" endtime="20210619 01:34:02.424"/>
</kw>
<status status="PASS" starttime="20210619 01:34:02.422" endtime="20210619 01:34:02.424"/>
</kw>
<msg timestamp="20210619 01:34:02.424" level="INFO">${path_with_leading} = /testdir3</msg>
<status status="PASS" starttime="20210619 01:34:02.421" endtime="20210619 01:34:02.424"/>
</kw>
<status status="PASS" starttime="20210619 01:34:02.416" endtime="20210619 01:34:02.425"/>
</kw>
<msg timestamp="20210619 01:34:02.425" level="INFO">${url} = ofs://om/fstest2/05318-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20210619 01:34:02.415" endtime="20210619 01:34:02.425"/>
</kw>
<msg timestamp="20210619 01:34:02.425" level="INFO">${target} = ofs://om/fstest2/05318-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20210619 01:34:02.414" endtime="20210619 01:34:02.426"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:02.429" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest2/05318-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:05.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:34:05.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:34:02.427" endtime="20210619 01:34:05.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:05.758" level="INFO"/>
<status status="PASS" starttime="20210619 01:34:05.757" endtime="20210619 01:34:05.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:34:05.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:34:05.759" endtime="20210619 01:34:05.760"/>
</kw>
<status status="PASS" starttime="20210619 01:34:02.426" endtime="20210619 01:34:05.760"/>
</kw>
<msg timestamp="20210619 01:34:05.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:34:02.426" endtime="20210619 01:34:05.760"/>
</kw>
<status status="PASS" starttime="20210619 01:34:02.426" endtime="20210619 01:34:05.760"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:05.764" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/05318-bucket1-ofs//testdir1/localdir1 ofs://om/fstest2/05318-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:11.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:34:11.491" level="INFO">${output} = 2021-06-19 01:34:09,549 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:34:09,665 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:34:05.762" endtime="20210619 01:34:11.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:11.493" level="INFO">2021-06-19 01:34:09,549 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:34:09,665 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:34:09,665 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:34:10,789 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:34:10,789 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-844EFC5EFC67-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:34:10,790 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:34:11.492" endtime="20210619 01:34:11.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:34:11.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:34:11.493" endtime="20210619 01:34:11.494"/>
</kw>
<status status="PASS" starttime="20210619 01:34:05.762" endtime="20210619 01:34:11.494"/>
</kw>
<msg timestamp="20210619 01:34:11.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:34:05.761" endtime="20210619 01:34:11.494"/>
</kw>
<status status="PASS" starttime="20210619 01:34:05.761" endtime="20210619 01:34:11.494"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:11.498" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest2/05318-bucket3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:15.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:34:15.051" level="INFO">${output} = 2021-06-19 01:34:14,701 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:34:14,829 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210619 01:34:11.496" endtime="20210619 01:34:15.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:15.052" level="INFO">2021-06-19 01:34:14,701 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:34:14,829 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest2/05318-bucket3-ofs/testdir3' to trash at: ofs://om/fstest2/05318-bucket3-ofs/.Trash/root/Current/fstest2/05318-bucket3-ofs/testdir3</msg>
<status status="PASS" starttime="20210619 01:34:15.052" endtime="20210619 01:34:15.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:34:15.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:34:15.053" endtime="20210619 01:34:15.053"/>
</kw>
<status status="PASS" starttime="20210619 01:34:11.496" endtime="20210619 01:34:15.054"/>
</kw>
<msg timestamp="20210619 01:34:15.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:34:11.495" endtime="20210619 01:34:15.054"/>
</kw>
<status status="PASS" starttime="20210619 01:34:11.495" endtime="20210619 01:34:15.054"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:34:02.413" endtime="20210619 01:34:15.055"/>
</test>
<test id="s1-s3-t19" name="List file created via shell">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:15.060" level="INFO">Running command 'ozone sh key put fstest1/05318-bucket1-ofs/ofs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:20.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:34:20.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:34:15.058" endtime="20210619 01:34:20.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:20.941" level="INFO"/>
<status status="PASS" starttime="20210619 01:34:20.940" endtime="20210619 01:34:20.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:34:20.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:34:20.941" endtime="20210619 01:34:20.942"/>
</kw>
<status status="PASS" starttime="20210619 01:34:15.057" endtime="20210619 01:34:20.942"/>
</kw>
<msg timestamp="20210619 01:34:20.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:34:15.057" endtime="20210619 01:34:20.943"/>
</kw>
<status status="PASS" starttime="20210619 01:34:15.056" endtime="20210619 01:34:20.943"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:20.947" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/05318-bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:24.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:34:24.511" level="INFO">${output} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:34 ofs://om/fstest1/05318-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210619 01:34:20.945" endtime="20210619 01:34:24.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:24.512" level="INFO">-rw-rw-rw-   3 root root      17526 2021-06-19 01:34 ofs://om/fstest1/05318-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210619 01:34:24.512" endtime="20210619 01:34:24.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:34:24.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:34:24.513" endtime="20210619 01:34:24.513"/>
</kw>
<status status="PASS" starttime="20210619 01:34:20.944" endtime="20210619 01:34:24.514"/>
</kw>
<msg timestamp="20210619 01:34:24.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:34:20.944" endtime="20210619 01:34:24.514"/>
</kw>
<msg timestamp="20210619 01:34:24.514" level="INFO">${result} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:34 ofs://om/fstest1/05318-bucket1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210619 01:34:20.943" endtime="20210619 01:34:24.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:34:24.515" endtime="20210619 01:34:24.515"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:34:15.055" endtime="20210619 01:34:24.515"/>
</test>
<test id="s1-s3-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:24.519" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/05318-bucket1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:28.243" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:34:28.243" level="INFO">${output} = copyFromLocal: `ofs://om/fstest1/05318-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210619 01:34:24.518" endtime="20210619 01:34:28.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:28.244" level="INFO">copyFromLocal: `ofs://om/fstest1/05318-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210619 01:34:28.243" endtime="20210619 01:34:28.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:34:28.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:34:28.244" endtime="20210619 01:34:28.245"/>
</kw>
<msg timestamp="20210619 01:34:28.245" level="INFO">${result} = copyFromLocal: `ofs://om/fstest1/05318-bucket1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210619 01:34:24.517" endtime="20210619 01:34:28.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:34:28.246" endtime="20210619 01:34:28.246"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:34:24.516" endtime="20210619 01:34:28.246"/>
</test>
<test id="s1-s3-t21" name="Get file">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:28.252" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:28.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:34:28.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:34:28.250" endtime="20210619 01:34:28.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:28.256" level="INFO"/>
<status status="PASS" starttime="20210619 01:34:28.255" endtime="20210619 01:34:28.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:34:28.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:34:28.256" endtime="20210619 01:34:28.256"/>
</kw>
<status status="PASS" starttime="20210619 01:34:28.249" endtime="20210619 01:34:28.257"/>
</kw>
<msg timestamp="20210619 01:34:28.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:34:28.249" endtime="20210619 01:34:28.257"/>
</kw>
<status status="PASS" starttime="20210619 01:34:28.248" endtime="20210619 01:34:28.257"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:28.261" level="INFO">Running command 'ozone fs -get ofs://om/fstest1/05318-bucket1-ofs/ofs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:33.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:34:33.266" level="INFO">${output} = 2021-06-19 01:34:31,627 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:34:31,700 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:34:28.259" endtime="20210619 01:34:33.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:33.268" level="INFO">2021-06-19 01:34:31,627 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:34:31,700 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:34:31,700 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20210619 01:34:33.267" endtime="20210619 01:34:33.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:34:33.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:34:33.268" endtime="20210619 01:34:33.269"/>
</kw>
<status status="PASS" starttime="20210619 01:34:28.259" endtime="20210619 01:34:33.269"/>
</kw>
<msg timestamp="20210619 01:34:33.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:34:28.258" endtime="20210619 01:34:33.269"/>
</kw>
<status status="PASS" starttime="20210619 01:34:28.257" endtime="20210619 01:34:33.270"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210619 01:34:33.270" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210619 01:34:33.270" endtime="20210619 01:34:33.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:34:28.247" endtime="20210619 01:34:33.271"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20210619 01:31:09.702" endtime="20210619 01:34:33.273"/>
</suite>
<suite id="s1-s4" name="ozonefs-o3fs-link" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:34:38.236" level="INFO">${random} = 36948</msg>
<status status="PASS" starttime="20210619 01:34:38.236" endtime="20210619 01:34:38.236"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:34:38.237" level="INFO">${BUCKET} = 36948-link1-o3fs</msg>
<status status="PASS" starttime="20210619 01:34:38.237" endtime="20210619 01:34:38.237"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:34:38.238" level="INFO">${BUCKET2} = 36948-link2-o3fs</msg>
<status status="PASS" starttime="20210619 01:34:38.238" endtime="20210619 01:34:38.238"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:34:38.239" level="INFO">${BUCKET_IN_VOL2} = 36948-link3-o3fs</msg>
<status status="PASS" starttime="20210619 01:34:38.238" endtime="20210619 01:34:38.239"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:34:38.244" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:34:38.243" endtime="20210619 01:34:38.244"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:34:38.244" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:34:38.244" endtime="20210619 01:34:38.244"/>
</kw>
<status status="PASS" starttime="20210619 01:34:38.243" endtime="20210619 01:34:38.245"/>
</kw>
<msg timestamp="20210619 01:34:38.245" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:34:38.241" endtime="20210619 01:34:38.245"/>
</kw>
<status status="PASS" starttime="20210619 01:34:38.241" endtime="20210619 01:34:38.245"/>
</kw>
<msg timestamp="20210619 01:34:38.245" level="INFO">${url} = o3fs://36948-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210619 01:34:38.240" endtime="20210619 01:34:38.246"/>
</kw>
<msg timestamp="20210619 01:34:38.246" level="INFO">${BASE_URL} = o3fs://36948-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210619 01:34:38.239" endtime="20210619 01:34:38.246"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:34:38.246" level="INFO">${BASE_URL} = o3fs://36948-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210619 01:34:38.246" endtime="20210619 01:34:38.247"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:34:38.248" level="INFO">${DEEP_URL} = o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir</msg>
<status status="PASS" starttime="20210619 01:34:38.247" endtime="20210619 01:34:38.249"/>
</kw>
<status status="PASS" starttime="20210619 01:34:38.236" endtime="20210619 01:34:38.249"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:38.253" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:41.574" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:34:41.574" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:34:38.250" endtime="20210619 01:34:41.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:41.576" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:34:41.575" endtime="20210619 01:34:41.576"/>
</kw>
<status status="PASS" starttime="20210619 01:34:38.249" endtime="20210619 01:34:41.576"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:41.579" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:45.036" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:34:45.036" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:34:41.577" endtime="20210619 01:34:45.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:45.037" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:34:45.037" endtime="20210619 01:34:45.037"/>
</kw>
<status status="PASS" starttime="20210619 01:34:41.576" endtime="20210619 01:34:45.038"/>
</kw>
<status status="PASS" starttime="20210619 01:34:38.249" endtime="20210619 01:34:45.038"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:45.041" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:48.472" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:34:48.472" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:34:45.039" endtime="20210619 01:34:48.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:48.473" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:34:48.472" endtime="20210619 01:34:48.473"/>
</kw>
<status status="PASS" starttime="20210619 01:34:45.039" endtime="20210619 01:34:48.473"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:48.477" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:51.940" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:34:51.940" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:34:48.474" endtime="20210619 01:34:51.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:51.941" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:34:51.941" endtime="20210619 01:34:51.941"/>
</kw>
<status status="PASS" starttime="20210619 01:34:48.474" endtime="20210619 01:34:51.942"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:51.946" level="INFO">Running command 'ozone sh bucket create fstest1-src/36948-link1-o3fs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:55.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:34:55.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:34:51.944" endtime="20210619 01:34:55.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:55.570" level="INFO"/>
<status status="PASS" starttime="20210619 01:34:55.569" endtime="20210619 01:34:55.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:34:55.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:34:55.570" endtime="20210619 01:34:55.571"/>
</kw>
<status status="PASS" starttime="20210619 01:34:51.943" endtime="20210619 01:34:55.571"/>
</kw>
<msg timestamp="20210619 01:34:55.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:34:51.943" endtime="20210619 01:34:55.571"/>
</kw>
<status status="PASS" starttime="20210619 01:34:51.942" endtime="20210619 01:34:55.571"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:55.575" level="INFO">Running command 'ozone sh bucket create fstest1-src/36948-link2-o3fs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:34:59.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:34:59.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:34:55.573" endtime="20210619 01:34:59.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:34:59.254" level="INFO"/>
<status status="PASS" starttime="20210619 01:34:59.253" endtime="20210619 01:34:59.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:34:59.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:34:59.254" endtime="20210619 01:34:59.255"/>
</kw>
<status status="PASS" starttime="20210619 01:34:55.572" endtime="20210619 01:34:59.255"/>
</kw>
<msg timestamp="20210619 01:34:59.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:34:55.572" endtime="20210619 01:34:59.255"/>
</kw>
<status status="PASS" starttime="20210619 01:34:55.572" endtime="20210619 01:34:59.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:34:59.260" level="INFO">Running command 'ozone sh bucket create fstest2-src/36948-link3-o3fs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:02.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:35:02.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:34:59.257" endtime="20210619 01:35:02.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:02.846" level="INFO"/>
<status status="PASS" starttime="20210619 01:35:02.846" endtime="20210619 01:35:02.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:02.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:02.847" endtime="20210619 01:35:02.847"/>
</kw>
<status status="PASS" starttime="20210619 01:34:59.257" endtime="20210619 01:35:02.848"/>
</kw>
<msg timestamp="20210619 01:35:02.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:34:59.256" endtime="20210619 01:35:02.848"/>
</kw>
<status status="PASS" starttime="20210619 01:34:59.256" endtime="20210619 01:35:02.848"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:02.852" level="INFO">Running command 'ozone sh bucket link fstest1-src/36948-link1-o3fs-src fstest1/36948-link1-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:06.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:35:06.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:35:02.850" endtime="20210619 01:35:06.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:06.372" level="INFO"/>
<status status="PASS" starttime="20210619 01:35:06.371" endtime="20210619 01:35:06.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:06.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:06.372" endtime="20210619 01:35:06.373"/>
</kw>
<status status="PASS" starttime="20210619 01:35:02.849" endtime="20210619 01:35:06.373"/>
</kw>
<msg timestamp="20210619 01:35:06.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:35:02.849" endtime="20210619 01:35:06.373"/>
</kw>
<status status="PASS" starttime="20210619 01:35:02.848" endtime="20210619 01:35:06.374"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:06.377" level="INFO">Running command 'ozone sh bucket link fstest1-src/36948-link2-o3fs-src fstest1/36948-link2-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:09.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:35:09.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:35:06.375" endtime="20210619 01:35:09.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:09.976" level="INFO"/>
<status status="PASS" starttime="20210619 01:35:09.975" endtime="20210619 01:35:09.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:09.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:09.976" endtime="20210619 01:35:09.977"/>
</kw>
<status status="PASS" starttime="20210619 01:35:06.375" endtime="20210619 01:35:09.977"/>
</kw>
<msg timestamp="20210619 01:35:09.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:35:06.374" endtime="20210619 01:35:09.977"/>
</kw>
<status status="PASS" starttime="20210619 01:35:06.374" endtime="20210619 01:35:09.978"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:09.981" level="INFO">Running command 'ozone sh bucket link fstest2-src/36948-link3-o3fs-src fstest2/36948-link3-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:13.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:35:13.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:35:09.979" endtime="20210619 01:35:13.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:13.607" level="INFO"/>
<status status="PASS" starttime="20210619 01:35:13.606" endtime="20210619 01:35:13.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:13.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:13.607" endtime="20210619 01:35:13.608"/>
</kw>
<status status="PASS" starttime="20210619 01:35:09.979" endtime="20210619 01:35:13.608"/>
</kw>
<msg timestamp="20210619 01:35:13.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:35:09.979" endtime="20210619 01:35:13.608"/>
</kw>
<status status="PASS" starttime="20210619 01:35:09.978" endtime="20210619 01:35:13.608"/>
</kw>
<status status="PASS" starttime="20210619 01:34:45.039" endtime="20210619 01:35:13.609"/>
</kw>
<status status="PASS" starttime="20210619 01:34:45.038" endtime="20210619 01:35:13.609"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:13.612" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:17.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:35:17.347" level="INFO">${output} = {
  "metadata" : { },
  "name" : "20221-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210619 01:35:13.611" endtime="20210619 01:35:17.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:17.348" level="INFO">{
  "metadata" : { },
  "name" : "20221-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:14:15.343Z",
  "modificationTime" : "2021-06-19T01:14:37.274Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "48644-source",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2021-06-19T01:04:25.872Z",
  "modificationTime" : "2021-06-19T01:05:00.663Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ]
}
{
  "metadata" : { },
  "name" : "48644-target",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 10,
  "creationTime" : "2021-06-19T01:04:29.436Z",
  "modificationTime" : "2021-06-19T01:04:57.068Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 6,
  "creationTime" : "2021-06-19T01:27:26.826Z",
  "modificationTime" : "2021-06-19T01:27:26.826Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-06-19T01:27:34.366Z",
  "modificationTime" : "2021-06-19T01:27:34.366Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2021-06-19T01:27:30.689Z",
  "modificationTime" : "2021-06-19T01:27:30.689Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-19T01:27:37.810Z",
  "modificationTime" : "2021-06-19T01:27:37.810Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest254",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:23:59.214Z",
  "modificationTime" : "2021-06-19T01:23:59.214Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest354",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:24:16.679Z",
  "modificationTime" : "2021-06-19T01:26:05.936Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest479",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:23:32.141Z",
  "modificationTime" : "2021-06-19T01:23:32.141Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest54",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-19T01:23:55.783Z",
  "modificationTime" : "2021-06-19T01:23:55.783Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "root",
  "owner" : "root",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-19T01:02:38.598Z",
  "modificationTime" : "2021-06-19T01:02:38.598Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-51285",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.180Z",
  "modificationTime" : "2021-06-19T01:03:21.180Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-1-76499",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.388Z",
  "modificationTime" : "2021-06-19T01:03:21.388Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-31975",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.399Z",
  "modificationTime" : "2021-06-19T01:03:21.399Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-25085",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.407Z",
  "modificationTime" : "2021-06-19T01:03:21.407Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-24180",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.418Z",
  "modificationTime" : "2021-06-19T01:03:21.418Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-tgjpg",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:23:01.631Z",
  "modificationTime" : "2021-06-19T01:23:01.631Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" starttime="20210619 01:35:17.347" endtime="20210619 01:35:17.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:17.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:17.348" endtime="20210619 01:35:17.349"/>
</kw>
<status status="PASS" starttime="20210619 01:35:13.610" endtime="20210619 01:35:17.349"/>
</kw>
<msg timestamp="20210619 01:35:17.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:35:13.610" endtime="20210619 01:35:17.350"/>
</kw>
<msg timestamp="20210619 01:35:17.350" level="INFO">${result} = {
  "metadata" : { },
  "name" : "20221-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210619 01:35:13.609" endtime="20210619 01:35:17.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:35:17.350" endtime="20210619 01:35:17.351"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:35:17.351" endtime="20210619 01:35:17.352"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm[^@]*@EXAMPLE\.COM)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:35:17.352" endtime="20210619 01:35:17.353"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:17.357" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:21.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:35:21.131" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05318-bucket1-ofs",
  "storageType" : "DISK"...</msg>
<status status="PASS" starttime="20210619 01:35:17.354" endtime="20210619 01:35:21.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:21.133" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05318-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 262890,
  "usedNamespace" : -2,
  "creationTime" : "2021-06-19T01:31:20.287Z",
  "modificationTime" : "2021-06-19T01:31:20.287Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05318-bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52578,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:31:23.877Z",
  "modificationTime" : "2021-06-19T01:31:23.877Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "36948-link1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:35:06.174Z",
  "modificationTime" : "2021-06-19T01:35:06.174Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "36948-link1-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "36948-link2-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:35:09.799Z",
  "modificationTime" : "2021-06-19T01:35:09.799Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "36948-link2-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "88666-link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:27:51.837Z",
  "modificationTime" : "2021-06-19T01:27:51.837Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "88666-link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "88666-link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:27:55.254Z",
  "modificationTime" : "2021-06-19T01:27:55.254Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "88666-link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210619 01:35:21.132" endtime="20210619 01:35:21.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:21.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:21.133" endtime="20210619 01:35:21.133"/>
</kw>
<status status="PASS" starttime="20210619 01:35:17.354" endtime="20210619 01:35:21.134"/>
</kw>
<msg timestamp="20210619 01:35:21.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:35:17.353" endtime="20210619 01:35:21.134"/>
</kw>
<msg timestamp="20210619 01:35:21.134" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05318-bucket1-ofs",
  "storageType" : "DISK"...</msg>
<status status="PASS" starttime="20210619 01:35:17.353" endtime="20210619 01:35:21.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:35:21.135" endtime="20210619 01:35:21.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:35:21.135" endtime="20210619 01:35:21.135"/>
</kw>
<status status="PASS" starttime="20210619 01:35:13.609" endtime="20210619 01:35:21.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:21.137" level="INFO">Completed setup for o3fs tests with links in fstest1/36948-link1-o3fs using FS base URL: o3fs://36948-link1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210619 01:35:21.136" endtime="20210619 01:35:21.137"/>
</kw>
<status status="PASS" starttime="20210619 01:34:38.235" endtime="20210619 01:35:21.137"/>
</kw>
<test id="s1-s4-t1" name="List root">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:35:21.144" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:35:21.143" endtime="20210619 01:35:21.144"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:35:21.145" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:35:21.144" endtime="20210619 01:35:21.145"/>
</kw>
<status status="PASS" starttime="20210619 01:35:21.143" endtime="20210619 01:35:21.145"/>
</kw>
<msg timestamp="20210619 01:35:21.145" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:35:21.141" endtime="20210619 01:35:21.145"/>
</kw>
<status status="PASS" starttime="20210619 01:35:21.140" endtime="20210619 01:35:21.145"/>
</kw>
<msg timestamp="20210619 01:35:21.146" level="INFO">${url} = o3fs://36948-link1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20210619 01:35:21.140" endtime="20210619 01:35:21.146"/>
</kw>
<msg timestamp="20210619 01:35:21.146" level="INFO">${root} = o3fs://36948-link1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20210619 01:35:21.138" endtime="20210619 01:35:21.146"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:21.150" level="INFO">Running command 'ozone fs -ls o3fs://36948-link1-o3fs.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:24.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:35:24.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:35:21.148" endtime="20210619 01:35:24.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:24.635" level="INFO"/>
<status status="PASS" starttime="20210619 01:35:24.634" endtime="20210619 01:35:24.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:24.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:24.635" endtime="20210619 01:35:24.636"/>
</kw>
<status status="PASS" starttime="20210619 01:35:21.147" endtime="20210619 01:35:24.636"/>
</kw>
<msg timestamp="20210619 01:35:24.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:35:21.147" endtime="20210619 01:35:24.636"/>
</kw>
<status status="PASS" starttime="20210619 01:35:21.146" endtime="20210619 01:35:24.636"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:35:21.137" endtime="20210619 01:35:24.637"/>
</test>
<test id="s1-s4-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:35:24.644" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:35:24.643" endtime="20210619 01:35:24.644"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:35:24.645" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:35:24.644" endtime="20210619 01:35:24.645"/>
</kw>
<status status="PASS" starttime="20210619 01:35:24.642" endtime="20210619 01:35:24.645"/>
</kw>
<msg timestamp="20210619 01:35:24.645" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:35:24.641" endtime="20210619 01:35:24.645"/>
</kw>
<status status="PASS" starttime="20210619 01:35:24.640" endtime="20210619 01:35:24.646"/>
</kw>
<msg timestamp="20210619 01:35:24.646" level="INFO">${url} = o3fs://36948-link1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20210619 01:35:24.640" endtime="20210619 01:35:24.646"/>
</kw>
<msg timestamp="20210619 01:35:24.646" level="INFO">${url} = o3fs://36948-link1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20210619 01:35:24.638" endtime="20210619 01:35:24.647"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:24.649" level="INFO">Running command 'ozone fs -ls o3fs://36948-link1-o3fs.no-such-volume.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:27.911" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:35:27.912" level="INFO">${output} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210619 01:35:24.647" endtime="20210619 01:35:27.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:27.913" level="INFO">ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210619 01:35:27.912" endtime="20210619 01:35:27.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:27.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:27.913" endtime="20210619 01:35:27.914"/>
</kw>
<msg timestamp="20210619 01:35:27.914" level="INFO">${result} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210619 01:35:24.647" endtime="20210619 01:35:27.914"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:35:27.914" endtime="20210619 01:35:27.915"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:35:24.637" endtime="20210619 01:35:27.915"/>
</test>
<test id="s1-s4-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:35:27.923" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:35:27.922" endtime="20210619 01:35:27.923"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:35:27.923" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:35:27.923" endtime="20210619 01:35:27.923"/>
</kw>
<status status="PASS" starttime="20210619 01:35:27.922" endtime="20210619 01:35:27.924"/>
</kw>
<msg timestamp="20210619 01:35:27.924" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:35:27.920" endtime="20210619 01:35:27.924"/>
</kw>
<status status="PASS" starttime="20210619 01:35:27.919" endtime="20210619 01:35:27.924"/>
</kw>
<msg timestamp="20210619 01:35:27.924" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20210619 01:35:27.919" endtime="20210619 01:35:27.924"/>
</kw>
<msg timestamp="20210619 01:35:27.925" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20210619 01:35:27.917" endtime="20210619 01:35:27.925"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:27.927" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:31.367" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:35:31.367" level="INFO">${output} = ls: Bucket not found</msg>
<status status="PASS" starttime="20210619 01:35:27.926" endtime="20210619 01:35:31.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:31.369" level="INFO">ls: Bucket not found</msg>
<status status="PASS" starttime="20210619 01:35:31.368" endtime="20210619 01:35:31.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:31.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:31.369" endtime="20210619 01:35:31.370"/>
</kw>
<msg timestamp="20210619 01:35:31.370" level="INFO">${result} = ls: Bucket not found</msg>
<status status="PASS" starttime="20210619 01:35:27.925" endtime="20210619 01:35:31.370"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:35:31.370" endtime="20210619 01:35:31.371"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:35:27.916" endtime="20210619 01:35:31.371"/>
</test>
<test id="s1-s4-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:31.376" level="INFO">Running command 'ozone fs -mkdir -p o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:34.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:35:34.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:35:31.374" endtime="20210619 01:35:34.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:34.694" level="INFO"/>
<status status="PASS" starttime="20210619 01:35:34.693" endtime="20210619 01:35:34.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:34.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:34.694" endtime="20210619 01:35:34.695"/>
</kw>
<status status="PASS" starttime="20210619 01:35:31.374" endtime="20210619 01:35:34.695"/>
</kw>
<msg timestamp="20210619 01:35:34.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:35:31.373" endtime="20210619 01:35:34.696"/>
</kw>
<status status="PASS" starttime="20210619 01:35:31.373" endtime="20210619 01:35:34.696"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:34.700" level="INFO">Running command 'ozone sh key list fstest1/36948-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:38.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:35:38.351" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210619 01:35:34.698" endtime="20210619 01:35:38.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:38.352" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210619 01:35:38.351" endtime="20210619 01:35:38.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:38.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:38.352" endtime="20210619 01:35:38.353"/>
</kw>
<status status="PASS" starttime="20210619 01:35:34.697" endtime="20210619 01:35:38.353"/>
</kw>
<msg timestamp="20210619 01:35:38.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:35:34.697" endtime="20210619 01:35:38.353"/>
</kw>
<msg timestamp="20210619 01:35:38.354" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210619 01:35:34.696" endtime="20210619 01:35:38.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:35:38.354" endtime="20210619 01:35:38.354"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:35:31.372" endtime="20210619 01:35:38.355"/>
</test>
<test id="s1-s4-t5" name="Copy from local">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:38.360" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:43.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:35:43.792" level="INFO">${output} = 2021-06-19 01:35:41,876 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:35:41,985 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:35:38.358" endtime="20210619 01:35:43.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:43.793" level="INFO">2021-06-19 01:35:41,876 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:35:41,985 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:35:41,985 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:35:42,269 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:35:42,270 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-708DB5AA3602-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:35:42,273 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:35:43.792" endtime="20210619 01:35:43.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:43.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:43.793" endtime="20210619 01:35:43.794"/>
</kw>
<status status="PASS" starttime="20210619 01:35:38.357" endtime="20210619 01:35:43.794"/>
</kw>
<msg timestamp="20210619 01:35:43.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:35:38.357" endtime="20210619 01:35:43.794"/>
</kw>
<status status="PASS" starttime="20210619 01:35:38.356" endtime="20210619 01:35:43.795"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:43.798" level="INFO">Running command 'ozone sh key list fstest1/36948-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:47.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:35:47.473" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:35:43.796" endtime="20210619 01:35:47.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:47.474" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:35:47.474" endtime="20210619 01:35:47.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:47.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:47.475" endtime="20210619 01:35:47.476"/>
</kw>
<status status="PASS" starttime="20210619 01:35:43.796" endtime="20210619 01:35:47.477"/>
</kw>
<msg timestamp="20210619 01:35:47.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:35:43.795" endtime="20210619 01:35:47.477"/>
</kw>
<msg timestamp="20210619 01:35:47.478" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:35:43.795" endtime="20210619 01:35:47.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:35:47.478" endtime="20210619 01:35:47.479"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:47.484" level="INFO">Running command 'ozone sh key info fstest1/36948-link1-o3fs/test/o3fs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:51.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:35:51.008" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20210619 01:35:47.481" endtime="20210619 01:35:51.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:51.009" level="INFO">3</msg>
<status status="PASS" starttime="20210619 01:35:51.008" endtime="20210619 01:35:51.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:51.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:51.009" endtime="20210619 01:35:51.010"/>
</kw>
<status status="PASS" starttime="20210619 01:35:47.480" endtime="20210619 01:35:51.010"/>
</kw>
<msg timestamp="20210619 01:35:51.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:35:47.480" endtime="20210619 01:35:51.010"/>
</kw>
<msg timestamp="20210619 01:35:51.011" level="INFO">${result} = 3</msg>
<status status="PASS" starttime="20210619 01:35:47.479" endtime="20210619 01:35:51.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:35:51.011" endtime="20210619 01:35:51.011"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:35:38.355" endtime="20210619 01:35:51.012"/>
</test>
<test id="s1-s4-t6" name="Put">
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:51.017" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:35:56.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:35:56.637" level="INFO">${output} = 2021-06-19 01:35:54,837 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:35:54,917 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:35:51.015" endtime="20210619 01:35:56.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:35:56.639" level="INFO">2021-06-19 01:35:54,837 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:35:54,917 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:35:54,917 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:35:55,200 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:35:55,200 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-1CA431E2EC18-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:35:55,201 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:35:56.638" endtime="20210619 01:35:56.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:35:56.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:35:56.639" endtime="20210619 01:35:56.640"/>
</kw>
<status status="PASS" starttime="20210619 01:35:51.014" endtime="20210619 01:35:56.640"/>
</kw>
<msg timestamp="20210619 01:35:56.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:35:51.014" endtime="20210619 01:35:56.640"/>
</kw>
<status status="PASS" starttime="20210619 01:35:51.013" endtime="20210619 01:35:56.640"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:35:56.644" level="INFO">Running command 'ozone sh key list fstest1/36948-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:00.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:00.634" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:35:56.642" endtime="20210619 01:36:00.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:00.635" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:36:00.635" endtime="20210619 01:36:00.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:00.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:00.636" endtime="20210619 01:36:00.636"/>
</kw>
<status status="PASS" starttime="20210619 01:35:56.642" endtime="20210619 01:36:00.637"/>
</kw>
<msg timestamp="20210619 01:36:00.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:35:56.641" endtime="20210619 01:36:00.637"/>
</kw>
<msg timestamp="20210619 01:36:00.637" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:35:56.641" endtime="20210619 01:36:00.637"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:36:00.637" endtime="20210619 01:36:00.638"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:35:51.012" endtime="20210619 01:36:00.638"/>
</test>
<test id="s1-s4-t7" name="List">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:00.643" level="INFO">Running command 'ozone fs -ls o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:04.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:04.178" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:35 o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-19 01:35 o3fs://36948-link1-o...</msg>
<status status="PASS" starttime="20210619 01:36:00.641" endtime="20210619 01:36:04.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:04.179" level="INFO">Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:35 o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-19 01:35 o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:36:04.179" endtime="20210619 01:36:04.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:04.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:04.180" endtime="20210619 01:36:04.180"/>
</kw>
<status status="PASS" starttime="20210619 01:36:00.641" endtime="20210619 01:36:04.181"/>
</kw>
<msg timestamp="20210619 01:36:04.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:00.640" endtime="20210619 01:36:04.181"/>
</kw>
<msg timestamp="20210619 01:36:04.181" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:35 o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-19 01:35 o3fs://36948-link1-o...</msg>
<status status="PASS" starttime="20210619 01:36:00.640" endtime="20210619 01:36:04.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:36:04.181" endtime="20210619 01:36:04.182"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:36:04.182" endtime="20210619 01:36:04.183"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:36:00.639" endtime="20210619 01:36:04.183"/>
</test>
<test id="s1-s4-t8" name="Move">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:04.188" level="INFO">Running command 'ozone fs -mv o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/NOTICE.txt o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:07.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:07.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:36:04.186" endtime="20210619 01:36:07.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:07.745" level="INFO"/>
<status status="PASS" starttime="20210619 01:36:07.744" endtime="20210619 01:36:07.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:07.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:07.746" endtime="20210619 01:36:07.746"/>
</kw>
<status status="PASS" starttime="20210619 01:36:04.185" endtime="20210619 01:36:07.747"/>
</kw>
<msg timestamp="20210619 01:36:07.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:04.185" endtime="20210619 01:36:07.747"/>
</kw>
<status status="PASS" starttime="20210619 01:36:04.184" endtime="20210619 01:36:07.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:07.751" level="INFO">Running command 'ozone sh key list fstest1/36948-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:11.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:11.441" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:36:07.749" endtime="20210619 01:36:11.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:11.442" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:36:11.441" endtime="20210619 01:36:11.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:11.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:11.442" endtime="20210619 01:36:11.443"/>
</kw>
<status status="PASS" starttime="20210619 01:36:07.748" endtime="20210619 01:36:11.443"/>
</kw>
<msg timestamp="20210619 01:36:11.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:07.748" endtime="20210619 01:36:11.444"/>
</kw>
<msg timestamp="20210619 01:36:11.444" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:36:07.747" endtime="20210619 01:36:11.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:36:11.444" endtime="20210619 01:36:11.445"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:36:11.445" endtime="20210619 01:36:11.445"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:36:04.183" endtime="20210619 01:36:11.446"/>
</test>
<test id="s1-s4-t9" name="Copy within FS">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:11.450" level="INFO">Running command 'ozone fs -mkdir -p o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:14.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:14.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:36:11.449" endtime="20210619 01:36:14.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:14.925" level="INFO"/>
<status status="PASS" starttime="20210619 01:36:14.924" endtime="20210619 01:36:14.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:14.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:14.925" endtime="20210619 01:36:14.926"/>
</kw>
<status status="PASS" starttime="20210619 01:36:11.448" endtime="20210619 01:36:14.926"/>
</kw>
<msg timestamp="20210619 01:36:14.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:11.448" endtime="20210619 01:36:14.926"/>
</kw>
<status status="PASS" starttime="20210619 01:36:11.447" endtime="20210619 01:36:14.926"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:14.930" level="INFO">Running command 'ozone fs -cp o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:20.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:20.589" level="INFO">${output} = 2021-06-19 01:36:18,623 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:36:18,737 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:36:14.928" endtime="20210619 01:36:20.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:20.590" level="INFO">2021-06-19 01:36:18,623 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:36:18,737 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:36:18,737 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:36:19,870 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:36:19,871 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-4C4929F8C797-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:36:19,871 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:36:20.589" endtime="20210619 01:36:20.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:20.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:20.590" endtime="20210619 01:36:20.591"/>
</kw>
<status status="PASS" starttime="20210619 01:36:14.928" endtime="20210619 01:36:20.591"/>
</kw>
<msg timestamp="20210619 01:36:20.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:14.927" endtime="20210619 01:36:20.592"/>
</kw>
<status status="PASS" starttime="20210619 01:36:14.927" endtime="20210619 01:36:20.592"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:20.596" level="INFO">Running command 'ozone sh key list fstest1/36948-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:24.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:24.146" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:36:20.594" endtime="20210619 01:36:24.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:24.148" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:36:24.147" endtime="20210619 01:36:24.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:24.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:24.148" endtime="20210619 01:36:24.149"/>
</kw>
<status status="PASS" starttime="20210619 01:36:20.593" endtime="20210619 01:36:24.149"/>
</kw>
<msg timestamp="20210619 01:36:24.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:20.593" endtime="20210619 01:36:24.149"/>
</kw>
<msg timestamp="20210619 01:36:24.150" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:36:20.592" endtime="20210619 01:36:24.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:36:24.150" endtime="20210619 01:36:24.150"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:24.154" level="INFO">Running command 'ozone fs -ls o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:27.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:27.685" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:36 o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:36:24.152" endtime="20210619 01:36:27.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:27.686" level="INFO">Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:36 o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:36:27.686" endtime="20210619 01:36:27.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:27.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:27.687" endtime="20210619 01:36:27.688"/>
</kw>
<status status="PASS" starttime="20210619 01:36:24.152" endtime="20210619 01:36:27.688"/>
</kw>
<msg timestamp="20210619 01:36:27.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:24.151" endtime="20210619 01:36:27.688"/>
</kw>
<msg timestamp="20210619 01:36:27.688" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:36 o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:36:24.151" endtime="20210619 01:36:27.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:36:27.689" endtime="20210619 01:36:27.689"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:36:27.689" endtime="20210619 01:36:27.690"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:36:11.446" endtime="20210619 01:36:27.690"/>
</test>
<test id="s1-s4-t10" name="Cat file">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:27.695" level="INFO">Running command 'ozone fs -cat o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:32.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:32.741" level="INFO">${output} = 2021-06-19 01:36:31,147 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:36:31,219 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:36:27.693" endtime="20210619 01:36:32.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:32.743" level="INFO">2021-06-19 01:36:31,147 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:36:31,219 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:36:31,219 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Ozone
Copyright 2021 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20210619 01:36:32.742" endtime="20210619 01:36:32.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:32.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:32.743" endtime="20210619 01:36:32.744"/>
</kw>
<status status="PASS" starttime="20210619 01:36:27.692" endtime="20210619 01:36:32.744"/>
</kw>
<msg timestamp="20210619 01:36:32.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:27.692" endtime="20210619 01:36:32.744"/>
</kw>
<status status="PASS" starttime="20210619 01:36:27.691" endtime="20210619 01:36:32.746"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:36:27.691" endtime="20210619 01:36:32.746"/>
</test>
<test id="s1-s4-t11" name="Delete file">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:32.751" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:36.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:36.198" level="INFO">${output} = Deleted o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:36:32.749" endtime="20210619 01:36:36.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:36.199" level="INFO">Deleted o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:36:36.198" endtime="20210619 01:36:36.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:36.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:36.199" endtime="20210619 01:36:36.200"/>
</kw>
<status status="PASS" starttime="20210619 01:36:32.748" endtime="20210619 01:36:36.200"/>
</kw>
<msg timestamp="20210619 01:36:36.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:32.748" endtime="20210619 01:36:36.200"/>
</kw>
<status status="PASS" starttime="20210619 01:36:32.747" endtime="20210619 01:36:36.201"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:36.206" level="INFO">Running command 'ozone sh key list fstest1/36948-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:40.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:40.023" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210619 01:36:36.204" endtime="20210619 01:36:40.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:40.025" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210619 01:36:40.024" endtime="20210619 01:36:40.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:40.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:40.025" endtime="20210619 01:36:40.026"/>
</kw>
<status status="PASS" starttime="20210619 01:36:36.202" endtime="20210619 01:36:40.026"/>
</kw>
<msg timestamp="20210619 01:36:40.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:36.202" endtime="20210619 01:36:40.026"/>
</kw>
<msg timestamp="20210619 01:36:40.026" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210619 01:36:36.201" endtime="20210619 01:36:40.026"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:36:40.027" endtime="20210619 01:36:40.027"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:36:32.747" endtime="20210619 01:36:40.027"/>
</test>
<test id="s1-s4-t12" name="Delete dir">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:40.034" level="INFO">Running command 'ozone fs -rmdir o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:43.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:43.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:36:40.032" endtime="20210619 01:36:43.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:43.490" level="INFO"/>
<status status="PASS" starttime="20210619 01:36:43.489" endtime="20210619 01:36:43.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:43.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:43.490" endtime="20210619 01:36:43.491"/>
</kw>
<status status="PASS" starttime="20210619 01:36:40.031" endtime="20210619 01:36:43.491"/>
</kw>
<msg timestamp="20210619 01:36:43.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:40.031" endtime="20210619 01:36:43.491"/>
</kw>
<msg timestamp="20210619 01:36:43.492" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:36:40.030" endtime="20210619 01:36:43.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:43.496" level="INFO">Running command 'ozone sh key list fstest1/36948-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:47.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:47.274" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:36:43.494" endtime="20210619 01:36:47.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:47.276" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:36:47.275" endtime="20210619 01:36:47.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:47.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:47.276" endtime="20210619 01:36:47.277"/>
</kw>
<status status="PASS" starttime="20210619 01:36:43.493" endtime="20210619 01:36:47.277"/>
</kw>
<msg timestamp="20210619 01:36:47.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:43.493" endtime="20210619 01:36:47.277"/>
</kw>
<msg timestamp="20210619 01:36:47.278" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:36:43.492" endtime="20210619 01:36:47.278"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:36:47.278" endtime="20210619 01:36:47.278"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:36:40.029" endtime="20210619 01:36:47.279"/>
</test>
<test id="s1-s4-t13" name="Touch file">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:47.284" level="INFO">Running command 'ozone fs -touch o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:50.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:50.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:36:47.282" endtime="20210619 01:36:50.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:50.859" level="INFO"/>
<status status="PASS" starttime="20210619 01:36:50.858" endtime="20210619 01:36:50.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:50.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:50.859" endtime="20210619 01:36:50.860"/>
</kw>
<status status="PASS" starttime="20210619 01:36:47.281" endtime="20210619 01:36:50.860"/>
</kw>
<msg timestamp="20210619 01:36:50.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:47.281" endtime="20210619 01:36:50.860"/>
</kw>
<status status="PASS" starttime="20210619 01:36:47.280" endtime="20210619 01:36:50.861"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:50.865" level="INFO">Running command 'ozone sh key list fstest1/36948-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:54.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:54.557" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:36:50.863" endtime="20210619 01:36:54.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:54.559" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:36:54.558" endtime="20210619 01:36:54.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:54.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:54.559" endtime="20210619 01:36:54.560"/>
</kw>
<status status="PASS" starttime="20210619 01:36:50.862" endtime="20210619 01:36:54.560"/>
</kw>
<msg timestamp="20210619 01:36:54.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:50.862" endtime="20210619 01:36:54.560"/>
</kw>
<msg timestamp="20210619 01:36:54.561" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:36:50.861" endtime="20210619 01:36:54.561"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:36:54.561" endtime="20210619 01:36:54.562"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:36:47.279" endtime="20210619 01:36:54.562"/>
</test>
<test id="s1-s4-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:54.567" level="INFO">Running command 'ozone fs -touch o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:36:58.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:36:58.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:36:54.565" endtime="20210619 01:36:58.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:36:58.182" level="INFO"/>
<status status="PASS" starttime="20210619 01:36:58.182" endtime="20210619 01:36:58.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:36:58.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:36:58.183" endtime="20210619 01:36:58.183"/>
</kw>
<status status="PASS" starttime="20210619 01:36:54.564" endtime="20210619 01:36:58.183"/>
</kw>
<msg timestamp="20210619 01:36:58.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:54.564" endtime="20210619 01:36:58.184"/>
</kw>
<status status="PASS" starttime="20210619 01:36:54.563" endtime="20210619 01:36:58.184"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:36:58.188" level="INFO">Running command 'ozone fs -rm o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:01.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:01.613" level="INFO">${output} = 2021-06-19 01:37:01,460 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:37:01,530 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210619 01:36:58.186" endtime="20210619 01:37:01.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:01.614" level="INFO">2021-06-19 01:37:01,460 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:37:01,530 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/testFile.txt' to trash at: /.Trash/root/Current/test/o3fs/dir/testFile.txt</msg>
<status status="PASS" starttime="20210619 01:37:01.613" endtime="20210619 01:37:01.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:01.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:01.614" endtime="20210619 01:37:01.615"/>
</kw>
<status status="PASS" starttime="20210619 01:36:58.185" endtime="20210619 01:37:01.615"/>
</kw>
<msg timestamp="20210619 01:37:01.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:36:58.185" endtime="20210619 01:37:01.616"/>
</kw>
<status status="PASS" starttime="20210619 01:36:58.184" endtime="20210619 01:37:01.616"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:01.621" level="INFO">Running command 'ozone fs -ls -R o3fs://36948-link1-o3fs.fstest1.om/// 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:05.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:05.276" level="INFO">${output} = drwxrwxrwx   - root root          0 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - root root          0 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/.Trash/root
drwxr...</msg>
<status status="PASS" starttime="20210619 01:37:01.618" endtime="20210619 01:37:05.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:05.277" level="INFO">drwxrwxrwx   - root root          0 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - root root          0 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/.Trash/root
drwxrwxrwx   - root root          0 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/.Trash/root/Current
drwxrwxrwx   - root root          0 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/.Trash/root/Current/test
drwxrwxrwx   - root root          0 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/.Trash/root/Current/test/o3fs
drwxrwxrwx   - root root          0 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/.Trash/root/Current/test/o3fs/dir
-rw-rw-rw-   3 root root          0 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/.Trash/root/Current/test/o3fs/dir/testFile.txt
drwxrwxrwx   - root root          0 2021-06-19 01:35 o3fs://36948-link1-o3fs.fstest1.om/test
drwxrwxrwx   - root root          0 2021-06-19 01:35 o3fs://36948-link1-o3fs.fstest1.om/test/o3fs
drwxrwxrwx   - root root          0 2021-06-19 01:35 o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir
-rw-rw-rw-   3 root root      17526 2021-06-19 01:36 o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/MOVED.TXT
-rw-rw-rw-   3 root root      17526 2021-06-19 01:35 o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 root root          0 2021-06-19 01:36 o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:37:05.277" endtime="20210619 01:37:05.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:05.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:05.278" endtime="20210619 01:37:05.278"/>
</kw>
<status status="PASS" starttime="20210619 01:37:01.618" endtime="20210619 01:37:05.279"/>
</kw>
<msg timestamp="20210619 01:37:05.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:01.617" endtime="20210619 01:37:05.279"/>
</kw>
<msg timestamp="20210619 01:37:05.279" level="INFO">${result} = drwxrwxrwx   - root root          0 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - root root          0 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/.Trash/root
drwxr...</msg>
<status status="PASS" starttime="20210619 01:37:01.616" endtime="20210619 01:37:05.279"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:37:05.279" endtime="20210619 01:37:05.280"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20210619 01:37:05.280" endtime="20210619 01:37:05.281"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:37:05.281" endtime="20210619 01:37:05.281"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:36:54.563" endtime="20210619 01:37:05.282"/>
</test>
<test id="s1-s4-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:05.287" level="INFO">Running command 'ozone fs -mkdir -p o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:08.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:08.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:37:05.285" endtime="20210619 01:37:08.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:08.654" level="INFO"/>
<status status="PASS" starttime="20210619 01:37:08.653" endtime="20210619 01:37:08.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:08.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:08.654" endtime="20210619 01:37:08.655"/>
</kw>
<status status="PASS" starttime="20210619 01:37:05.284" endtime="20210619 01:37:08.655"/>
</kw>
<msg timestamp="20210619 01:37:08.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:05.284" endtime="20210619 01:37:08.655"/>
</kw>
<status status="PASS" starttime="20210619 01:37:05.283" endtime="20210619 01:37:08.655"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:08.659" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://36948-link1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:12.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:12.116" level="INFO">${output} = Deleted o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20210619 01:37:08.657" endtime="20210619 01:37:12.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:12.117" level="INFO">Deleted o3fs://36948-link1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20210619 01:37:12.117" endtime="20210619 01:37:12.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:12.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:12.118" endtime="20210619 01:37:12.118"/>
</kw>
<status status="PASS" starttime="20210619 01:37:08.657" endtime="20210619 01:37:12.119"/>
</kw>
<msg timestamp="20210619 01:37:12.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:08.656" endtime="20210619 01:37:12.119"/>
</kw>
<status status="PASS" starttime="20210619 01:37:08.656" endtime="20210619 01:37:12.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:12.123" level="INFO">Running command 'ozone sh key list fstest1/36948-link1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:16.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:16.013" level="INFO">${output} = .Trash/
.Trash/root/
.Trash/root/Current/
.Trash/root/Current/test/
.Trash/root/Current/test/o3fs/
.Trash/root/Current/test/o3fs/dir/
.Trash/root/Current/test/o3fs/dir/testFile.txt
test/
test/o3fs/
te...</msg>
<status status="PASS" starttime="20210619 01:37:12.121" endtime="20210619 01:37:16.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:16.014" level="INFO">.Trash/
.Trash/root/
.Trash/root/Current/
.Trash/root/Current/test/
.Trash/root/Current/test/o3fs/
.Trash/root/Current/test/o3fs/dir/
.Trash/root/Current/test/o3fs/dir/testFile.txt
test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:37:16.013" endtime="20210619 01:37:16.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:16.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:16.015" endtime="20210619 01:37:16.015"/>
</kw>
<status status="PASS" starttime="20210619 01:37:12.120" endtime="20210619 01:37:16.016"/>
</kw>
<msg timestamp="20210619 01:37:16.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:12.120" endtime="20210619 01:37:16.016"/>
</kw>
<msg timestamp="20210619 01:37:16.016" level="INFO">${result} = .Trash/
.Trash/root/
.Trash/root/Current/
.Trash/root/Current/test/
.Trash/root/Current/test/o3fs/
.Trash/root/Current/test/o3fs/dir/
.Trash/root/Current/test/o3fs/dir/testFile.txt
test/
test/o3fs/
te...</msg>
<status status="PASS" starttime="20210619 01:37:12.119" endtime="20210619 01:37:16.016"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:37:16.016" endtime="20210619 01:37:16.017"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:37:05.282" endtime="20210619 01:37:16.017"/>
</test>
<test id="s1-s4-t16" name="List recursively">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:16.022" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:16.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:16.025" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:37:16.021" endtime="20210619 01:37:16.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:16.027" level="INFO"/>
<status status="PASS" starttime="20210619 01:37:16.026" endtime="20210619 01:37:16.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:16.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:16.027" endtime="20210619 01:37:16.027"/>
</kw>
<status status="PASS" starttime="20210619 01:37:16.020" endtime="20210619 01:37:16.028"/>
</kw>
<msg timestamp="20210619 01:37:16.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:16.020" endtime="20210619 01:37:16.028"/>
</kw>
<status status="PASS" starttime="20210619 01:37:16.019" endtime="20210619 01:37:16.028"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:16.031" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:16.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:16.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:37:16.030" endtime="20210619 01:37:16.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:16.035" level="INFO"/>
<status status="PASS" starttime="20210619 01:37:16.034" endtime="20210619 01:37:16.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:16.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:16.035" endtime="20210619 01:37:16.036"/>
</kw>
<status status="PASS" starttime="20210619 01:37:16.029" endtime="20210619 01:37:16.036"/>
</kw>
<msg timestamp="20210619 01:37:16.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:16.029" endtime="20210619 01:37:16.037"/>
</kw>
<status status="PASS" starttime="20210619 01:37:16.028" endtime="20210619 01:37:16.037"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:16.040" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:16.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:16.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:37:16.039" endtime="20210619 01:37:16.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:16.044" level="INFO"/>
<status status="PASS" starttime="20210619 01:37:16.043" endtime="20210619 01:37:16.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:16.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:16.044" endtime="20210619 01:37:16.045"/>
</kw>
<status status="PASS" starttime="20210619 01:37:16.038" endtime="20210619 01:37:16.045"/>
</kw>
<msg timestamp="20210619 01:37:16.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:16.038" endtime="20210619 01:37:16.046"/>
</kw>
<status status="PASS" starttime="20210619 01:37:16.037" endtime="20210619 01:37:16.046"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:16.049" level="INFO">Running command 'ozone fs -mkdir -p o3fs://36948-link1-o3fs.fstest1.om//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:19.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:19.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:37:16.048" endtime="20210619 01:37:19.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:19.620" level="INFO"/>
<status status="PASS" starttime="20210619 01:37:19.619" endtime="20210619 01:37:19.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:19.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:19.620" endtime="20210619 01:37:19.621"/>
</kw>
<status status="PASS" starttime="20210619 01:37:16.047" endtime="20210619 01:37:19.621"/>
</kw>
<msg timestamp="20210619 01:37:19.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:16.047" endtime="20210619 01:37:19.621"/>
</kw>
<status status="PASS" starttime="20210619 01:37:16.046" endtime="20210619 01:37:19.622"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:19.626" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://36948-link1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:24.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:24.761" level="INFO">${output} = 2021-06-19 01:37:23,153 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:37:23,236 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:37:19.624" endtime="20210619 01:37:24.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:24.762" level="INFO">2021-06-19 01:37:23,153 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:37:23,236 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:37:23,236 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:37:23,488 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:37:23,488 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-F36BC847DD52-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:37:23,489 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:37:24.762" endtime="20210619 01:37:24.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:24.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:24.763" endtime="20210619 01:37:24.763"/>
</kw>
<status status="PASS" starttime="20210619 01:37:19.623" endtime="20210619 01:37:24.764"/>
</kw>
<msg timestamp="20210619 01:37:24.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:19.623" endtime="20210619 01:37:24.764"/>
</kw>
<status status="PASS" starttime="20210619 01:37:19.622" endtime="20210619 01:37:24.764"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:24.768" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://36948-link1-o3fs.fstest1.om//testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:29.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:29.771" level="INFO">${output} = 2021-06-19 01:37:28,088 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:37:28,165 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:37:24.766" endtime="20210619 01:37:29.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:29.773" level="INFO">2021-06-19 01:37:28,088 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:37:28,165 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:37:28,165 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:37:28,419 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:37:28,420 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-2AA97036543D-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:37:28,421 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:37:29.772" endtime="20210619 01:37:29.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:29.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:29.773" endtime="20210619 01:37:29.774"/>
</kw>
<status status="PASS" starttime="20210619 01:37:24.765" endtime="20210619 01:37:29.774"/>
</kw>
<msg timestamp="20210619 01:37:29.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:24.765" endtime="20210619 01:37:29.774"/>
</kw>
<status status="PASS" starttime="20210619 01:37:24.764" endtime="20210619 01:37:29.774"/>
</kw>
<status status="PASS" starttime="20210619 01:37:16.019" endtime="20210619 01:37:29.775"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:29.779" level="INFO">Running command 'ozone fs -ls -R o3fs://36948-link1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:33.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:33.449" level="INFO">${output} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/test...</msg>
<status status="PASS" starttime="20210619 01:37:29.777" endtime="20210619 01:37:33.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:33.450" level="INFO">-rw-rw-rw-   3 root root      17526 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/testdir1/localdir1
-rw-rw-rw-   3 root root      17526 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20210619 01:37:33.449" endtime="20210619 01:37:33.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:33.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:33.450" endtime="20210619 01:37:33.451"/>
</kw>
<status status="PASS" starttime="20210619 01:37:29.776" endtime="20210619 01:37:33.451"/>
</kw>
<msg timestamp="20210619 01:37:33.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:29.776" endtime="20210619 01:37:33.452"/>
</kw>
<msg timestamp="20210619 01:37:33.452" level="INFO">${result} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-19 01:37 o3fs://36948-link1-o3fs.fstest1.om/test...</msg>
<status status="PASS" starttime="20210619 01:37:29.775" endtime="20210619 01:37:33.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:37:33.452" endtime="20210619 01:37:33.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:37:33.453" endtime="20210619 01:37:33.453"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:37:16.018" endtime="20210619 01:37:33.453"/>
</test>
<test id="s1-s4-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:37:33.460" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:37:33.459" endtime="20210619 01:37:33.460"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:37:33.461" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:37:33.460" endtime="20210619 01:37:33.461"/>
</kw>
<status status="PASS" starttime="20210619 01:37:33.459" endtime="20210619 01:37:33.462"/>
</kw>
<msg timestamp="20210619 01:37:33.462" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:37:33.458" endtime="20210619 01:37:33.462"/>
</kw>
<status status="PASS" starttime="20210619 01:37:33.457" endtime="20210619 01:37:33.462"/>
</kw>
<msg timestamp="20210619 01:37:33.462" level="INFO">${url} = o3fs://36948-link2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20210619 01:37:33.456" endtime="20210619 01:37:33.462"/>
</kw>
<msg timestamp="20210619 01:37:33.463" level="INFO">${target} = o3fs://36948-link2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20210619 01:37:33.455" endtime="20210619 01:37:33.463"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:33.466" level="INFO">Running command 'ozone fs -mkdir -p o3fs://36948-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:36.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:36.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:37:33.464" endtime="20210619 01:37:36.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:36.855" level="INFO"/>
<status status="PASS" starttime="20210619 01:37:36.854" endtime="20210619 01:37:36.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:36.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:36.855" endtime="20210619 01:37:36.856"/>
</kw>
<status status="PASS" starttime="20210619 01:37:33.464" endtime="20210619 01:37:36.856"/>
</kw>
<msg timestamp="20210619 01:37:36.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:33.463" endtime="20210619 01:37:36.856"/>
</kw>
<status status="PASS" starttime="20210619 01:37:33.463" endtime="20210619 01:37:36.857"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:36.860" level="INFO">Running command 'ozone fs -cp o3fs://36948-link1-o3fs.fstest1.om///testdir1/localdir1 o3fs://36948-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:42.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:42.352" level="INFO">${output} = 2021-06-19 01:37:40,462 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:37:40,532 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:37:36.859" endtime="20210619 01:37:42.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:42.353" level="INFO">2021-06-19 01:37:40,462 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:37:40,532 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:37:40,532 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:37:41,713 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:37:41,714 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-834576D457E1-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:37:41,714 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:37:42.352" endtime="20210619 01:37:42.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:42.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:42.353" endtime="20210619 01:37:42.354"/>
</kw>
<status status="PASS" starttime="20210619 01:37:36.858" endtime="20210619 01:37:42.355"/>
</kw>
<msg timestamp="20210619 01:37:42.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:36.858" endtime="20210619 01:37:42.355"/>
</kw>
<status status="PASS" starttime="20210619 01:37:36.857" endtime="20210619 01:37:42.355"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:42.359" level="INFO">Running command 'ozone fs -rm -r o3fs://36948-link2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:45.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:45.822" level="INFO">${output} = 2021-06-19 01:37:45,651 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:37:45,743 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210619 01:37:42.357" endtime="20210619 01:37:45.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:45.823" level="INFO">2021-06-19 01:37:45,651 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:37:45,743 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://36948-link2-o3fs.fstest1.om/testdir2' to trash at: /.Trash/root/Current/testdir2</msg>
<status status="PASS" starttime="20210619 01:37:45.822" endtime="20210619 01:37:45.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:45.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:45.823" endtime="20210619 01:37:45.824"/>
</kw>
<status status="PASS" starttime="20210619 01:37:42.357" endtime="20210619 01:37:45.824"/>
</kw>
<msg timestamp="20210619 01:37:45.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:42.356" endtime="20210619 01:37:45.824"/>
</kw>
<status status="PASS" starttime="20210619 01:37:42.356" endtime="20210619 01:37:45.825"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:37:33.454" endtime="20210619 01:37:45.825"/>
</test>
<test id="s1-s4-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:37:45.832" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:37:45.831" endtime="20210619 01:37:45.832"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:37:45.832" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:37:45.832" endtime="20210619 01:37:45.832"/>
</kw>
<status status="PASS" starttime="20210619 01:37:45.830" endtime="20210619 01:37:45.833"/>
</kw>
<msg timestamp="20210619 01:37:45.833" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:37:45.829" endtime="20210619 01:37:45.833"/>
</kw>
<status status="PASS" starttime="20210619 01:37:45.828" endtime="20210619 01:37:45.833"/>
</kw>
<msg timestamp="20210619 01:37:45.833" level="INFO">${url} = o3fs://36948-link3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20210619 01:37:45.827" endtime="20210619 01:37:45.833"/>
</kw>
<msg timestamp="20210619 01:37:45.834" level="INFO">${target} = o3fs://36948-link3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20210619 01:37:45.827" endtime="20210619 01:37:45.834"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:45.837" level="INFO">Running command 'ozone fs -mkdir -p o3fs://36948-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:49.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:49.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:37:45.835" endtime="20210619 01:37:49.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:49.487" level="INFO"/>
<status status="PASS" starttime="20210619 01:37:49.487" endtime="20210619 01:37:49.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:49.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:49.488" endtime="20210619 01:37:49.488"/>
</kw>
<status status="PASS" starttime="20210619 01:37:45.835" endtime="20210619 01:37:49.489"/>
</kw>
<msg timestamp="20210619 01:37:49.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:45.835" endtime="20210619 01:37:49.489"/>
</kw>
<status status="PASS" starttime="20210619 01:37:45.834" endtime="20210619 01:37:49.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:49.493" level="INFO">Running command 'ozone fs -cp o3fs://36948-link1-o3fs.fstest1.om///testdir1/localdir1 o3fs://36948-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:55.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:55.030" level="INFO">${output} = 2021-06-19 01:37:52,972 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:37:53,065 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:37:49.491" endtime="20210619 01:37:55.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:55.031" level="INFO">2021-06-19 01:37:52,972 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:37:53,065 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:37:53,065 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:37:54,272 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:37:54,272 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-907B5F44F03F-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:37:54,273 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:37:55.030" endtime="20210619 01:37:55.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:55.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:55.032" endtime="20210619 01:37:55.032"/>
</kw>
<status status="PASS" starttime="20210619 01:37:49.491" endtime="20210619 01:37:55.033"/>
</kw>
<msg timestamp="20210619 01:37:55.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:49.490" endtime="20210619 01:37:55.033"/>
</kw>
<status status="PASS" starttime="20210619 01:37:49.490" endtime="20210619 01:37:55.033"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:55.037" level="INFO">Running command 'ozone fs -rm -r o3fs://36948-link3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:37:58.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:37:58.669" level="INFO">${output} = 2021-06-19 01:37:58,463 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:37:58,540 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210619 01:37:55.035" endtime="20210619 01:37:58.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:37:58.670" level="INFO">2021-06-19 01:37:58,463 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:37:58,540 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://36948-link3-o3fs.fstest2.om/testdir3' to trash at: /.Trash/root/Current/testdir3</msg>
<status status="PASS" starttime="20210619 01:37:58.669" endtime="20210619 01:37:58.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:37:58.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:37:58.670" endtime="20210619 01:37:58.671"/>
</kw>
<status status="PASS" starttime="20210619 01:37:55.035" endtime="20210619 01:37:58.671"/>
</kw>
<msg timestamp="20210619 01:37:58.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:55.034" endtime="20210619 01:37:58.672"/>
</kw>
<status status="PASS" starttime="20210619 01:37:55.033" endtime="20210619 01:37:58.672"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:37:45.826" endtime="20210619 01:37:58.672"/>
</test>
<test id="s1-s4-t19" name="List file created via shell">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:37:58.677" level="INFO">Running command 'ozone sh key put fstest1/36948-link1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:04.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:38:04.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:37:58.675" endtime="20210619 01:38:04.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:04.414" level="INFO"/>
<status status="PASS" starttime="20210619 01:38:04.414" endtime="20210619 01:38:04.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:38:04.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:38:04.415" endtime="20210619 01:38:04.415"/>
</kw>
<status status="PASS" starttime="20210619 01:37:58.674" endtime="20210619 01:38:04.416"/>
</kw>
<msg timestamp="20210619 01:38:04.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:37:58.674" endtime="20210619 01:38:04.416"/>
</kw>
<status status="PASS" starttime="20210619 01:37:58.673" endtime="20210619 01:38:04.416"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:04.420" level="INFO">Running command 'ozone fs -ls o3fs://36948-link1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:07.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:38:07.871" level="INFO">${output} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:38 o3fs://36948-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:38:04.418" endtime="20210619 01:38:07.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:07.872" level="INFO">-rw-rw-rw-   3 root root      17526 2021-06-19 01:38 o3fs://36948-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:38:07.872" endtime="20210619 01:38:07.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:38:07.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:38:07.873" endtime="20210619 01:38:07.873"/>
</kw>
<status status="PASS" starttime="20210619 01:38:04.418" endtime="20210619 01:38:07.874"/>
</kw>
<msg timestamp="20210619 01:38:07.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:38:04.417" endtime="20210619 01:38:07.874"/>
</kw>
<msg timestamp="20210619 01:38:07.874" level="INFO">${result} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:38 o3fs://36948-link1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:38:04.416" endtime="20210619 01:38:07.874"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:38:07.874" endtime="20210619 01:38:07.875"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:37:58.673" endtime="20210619 01:38:07.875"/>
</test>
<test id="s1-s4-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:07.879" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://36948-link1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:11.352" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:38:11.353" level="INFO">${output} = copyFromLocal: `o3fs://36948-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210619 01:38:07.877" endtime="20210619 01:38:11.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:11.354" level="INFO">copyFromLocal: `o3fs://36948-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210619 01:38:11.353" endtime="20210619 01:38:11.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:38:11.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:38:11.354" endtime="20210619 01:38:11.355"/>
</kw>
<msg timestamp="20210619 01:38:11.355" level="INFO">${result} = copyFromLocal: `o3fs://36948-link1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210619 01:38:07.877" endtime="20210619 01:38:11.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:38:11.356" endtime="20210619 01:38:11.356"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:38:07.876" endtime="20210619 01:38:11.356"/>
</test>
<test id="s1-s4-t21" name="Get file">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:11.361" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:11.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:38:11.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:38:11.359" endtime="20210619 01:38:11.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:11.365" level="INFO"/>
<status status="PASS" starttime="20210619 01:38:11.364" endtime="20210619 01:38:11.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:38:11.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:38:11.365" endtime="20210619 01:38:11.366"/>
</kw>
<status status="PASS" starttime="20210619 01:38:11.359" endtime="20210619 01:38:11.366"/>
</kw>
<msg timestamp="20210619 01:38:11.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:38:11.358" endtime="20210619 01:38:11.366"/>
</kw>
<status status="PASS" starttime="20210619 01:38:11.358" endtime="20210619 01:38:11.367"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:11.370" level="INFO">Running command 'ozone fs -get o3fs://36948-link1-o3fs.fstest1.om//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:16.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:38:16.518" level="INFO">${output} = 2021-06-19 01:38:14,813 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:38:14,937 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:38:11.369" endtime="20210619 01:38:16.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:16.519" level="INFO">2021-06-19 01:38:14,813 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:38:14,937 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:38:14,937 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20210619 01:38:16.519" endtime="20210619 01:38:16.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:38:16.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:38:16.521" endtime="20210619 01:38:16.522"/>
</kw>
<status status="PASS" starttime="20210619 01:38:11.368" endtime="20210619 01:38:16.522"/>
</kw>
<msg timestamp="20210619 01:38:16.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:38:11.368" endtime="20210619 01:38:16.523"/>
</kw>
<status status="PASS" starttime="20210619 01:38:11.367" endtime="20210619 01:38:16.523"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210619 01:38:16.523" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210619 01:38:16.523" endtime="20210619 01:38:16.523"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:38:11.357" endtime="20210619 01:38:16.524"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20210619 01:34:38.164" endtime="20210619 01:38:16.527"/>
</suite>
<suite id="s1-s5" name="ozonefs-o3fs-bucket" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:38:21.541" level="INFO">${random} = 95482</msg>
<status status="PASS" starttime="20210619 01:38:21.540" endtime="20210619 01:38:21.541"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:38:21.542" level="INFO">${BUCKET} = 95482-bucket1-o3fs</msg>
<status status="PASS" starttime="20210619 01:38:21.541" endtime="20210619 01:38:21.542"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:38:21.543" level="INFO">${BUCKET2} = 95482-bucket2-o3fs</msg>
<status status="PASS" starttime="20210619 01:38:21.542" endtime="20210619 01:38:21.543"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:38:21.543" level="INFO">${BUCKET_IN_VOL2} = 95482-bucket3-o3fs</msg>
<status status="PASS" starttime="20210619 01:38:21.543" endtime="20210619 01:38:21.544"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:38:21.548" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:38:21.547" endtime="20210619 01:38:21.548"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:38:21.549" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:38:21.548" endtime="20210619 01:38:21.549"/>
</kw>
<status status="PASS" starttime="20210619 01:38:21.547" endtime="20210619 01:38:21.549"/>
</kw>
<msg timestamp="20210619 01:38:21.549" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:38:21.546" endtime="20210619 01:38:21.549"/>
</kw>
<status status="PASS" starttime="20210619 01:38:21.545" endtime="20210619 01:38:21.550"/>
</kw>
<msg timestamp="20210619 01:38:21.550" level="INFO">${url} = o3fs://95482-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210619 01:38:21.544" endtime="20210619 01:38:21.550"/>
</kw>
<msg timestamp="20210619 01:38:21.550" level="INFO">${BASE_URL} = o3fs://95482-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210619 01:38:21.544" endtime="20210619 01:38:21.550"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:38:21.551" level="INFO">${BASE_URL} = o3fs://95482-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210619 01:38:21.550" endtime="20210619 01:38:21.551"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:38:21.553" level="INFO">${DEEP_URL} = o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir</msg>
<status status="PASS" starttime="20210619 01:38:21.551" endtime="20210619 01:38:21.553"/>
</kw>
<status status="PASS" starttime="20210619 01:38:21.540" endtime="20210619 01:38:21.553"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:21.557" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:25.144" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:38:25.144" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:38:21.554" endtime="20210619 01:38:25.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:25.145" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:38:25.144" endtime="20210619 01:38:25.145"/>
</kw>
<status status="PASS" starttime="20210619 01:38:21.554" endtime="20210619 01:38:25.145"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:25.148" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:28.714" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:38:28.714" level="INFO">${output} = VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:38:25.146" endtime="20210619 01:38:28.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:28.715" level="INFO">VOLUME_ALREADY_EXISTS Volume already exists</msg>
<status status="PASS" starttime="20210619 01:38:28.715" endtime="20210619 01:38:28.715"/>
</kw>
<status status="PASS" starttime="20210619 01:38:25.146" endtime="20210619 01:38:28.716"/>
</kw>
<status status="PASS" starttime="20210619 01:38:21.553" endtime="20210619 01:38:28.716"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create buckets for FS test" library="setup">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:28.721" level="INFO">Running command 'ozone sh bucket create fstest1/95482-bucket1-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:32.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:38:32.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:38:28.719" endtime="20210619 01:38:32.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:32.422" level="INFO"/>
<status status="PASS" starttime="20210619 01:38:32.422" endtime="20210619 01:38:32.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:38:32.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:38:32.423" endtime="20210619 01:38:32.423"/>
</kw>
<status status="PASS" starttime="20210619 01:38:28.718" endtime="20210619 01:38:32.423"/>
</kw>
<msg timestamp="20210619 01:38:32.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:38:28.718" endtime="20210619 01:38:32.424"/>
</kw>
<status status="PASS" starttime="20210619 01:38:28.717" endtime="20210619 01:38:32.424"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:32.427" level="INFO">Running command 'ozone sh bucket create fstest1/95482-bucket2-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:35.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:38:35.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:38:32.426" endtime="20210619 01:38:35.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:35.884" level="INFO"/>
<status status="PASS" starttime="20210619 01:38:35.883" endtime="20210619 01:38:35.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:38:35.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:38:35.884" endtime="20210619 01:38:35.885"/>
</kw>
<status status="PASS" starttime="20210619 01:38:32.425" endtime="20210619 01:38:35.885"/>
</kw>
<msg timestamp="20210619 01:38:35.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:38:32.425" endtime="20210619 01:38:35.885"/>
</kw>
<status status="PASS" starttime="20210619 01:38:32.424" endtime="20210619 01:38:35.886"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:35.889" level="INFO">Running command 'ozone sh bucket create fstest2/95482-bucket3-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:39.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:38:39.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:38:35.887" endtime="20210619 01:38:39.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:39.610" level="INFO"/>
<status status="PASS" starttime="20210619 01:38:39.609" endtime="20210619 01:38:39.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:38:39.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:38:39.610" endtime="20210619 01:38:39.611"/>
</kw>
<status status="PASS" starttime="20210619 01:38:35.887" endtime="20210619 01:38:39.611"/>
</kw>
<msg timestamp="20210619 01:38:39.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:38:35.887" endtime="20210619 01:38:39.611"/>
</kw>
<status status="PASS" starttime="20210619 01:38:35.886" endtime="20210619 01:38:39.611"/>
</kw>
<status status="PASS" starttime="20210619 01:38:28.717" endtime="20210619 01:38:39.612"/>
</kw>
<status status="PASS" starttime="20210619 01:38:28.716" endtime="20210619 01:38:39.612"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:39.615" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:43.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:38:43.010" level="INFO">${output} = {
  "metadata" : { },
  "name" : "20221-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210619 01:38:39.613" endtime="20210619 01:38:43.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:43.011" level="INFO">{
  "metadata" : { },
  "name" : "20221-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:14:15.343Z",
  "modificationTime" : "2021-06-19T01:14:37.274Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "48644-source",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2021-06-19T01:04:25.872Z",
  "modificationTime" : "2021-06-19T01:05:00.663Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ]
}
{
  "metadata" : { },
  "name" : "48644-target",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 10,
  "creationTime" : "2021-06-19T01:04:29.436Z",
  "modificationTime" : "2021-06-19T01:04:57.068Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 8,
  "creationTime" : "2021-06-19T01:27:26.826Z",
  "modificationTime" : "2021-06-19T01:27:26.826Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-06-19T01:27:34.366Z",
  "modificationTime" : "2021-06-19T01:27:34.366Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 4,
  "creationTime" : "2021-06-19T01:27:30.689Z",
  "modificationTime" : "2021-06-19T01:27:30.689Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-19T01:27:37.810Z",
  "modificationTime" : "2021-06-19T01:27:37.810Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest254",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:23:59.214Z",
  "modificationTime" : "2021-06-19T01:23:59.214Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest354",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:24:16.679Z",
  "modificationTime" : "2021-06-19T01:26:05.936Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest479",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:23:32.141Z",
  "modificationTime" : "2021-06-19T01:23:32.141Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest54",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-19T01:23:55.783Z",
  "modificationTime" : "2021-06-19T01:23:55.783Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "root",
  "owner" : "root",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-19T01:02:38.598Z",
  "modificationTime" : "2021-06-19T01:02:38.598Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-51285",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.180Z",
  "modificationTime" : "2021-06-19T01:03:21.180Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-1-76499",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.388Z",
  "modificationTime" : "2021-06-19T01:03:21.388Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-31975",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.399Z",
  "modificationTime" : "2021-06-19T01:03:21.399Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-25085",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.407Z",
  "modificationTime" : "2021-06-19T01:03:21.407Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-24180",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.418Z",
  "modificationTime" : "2021-06-19T01:03:21.418Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-tgjpg",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:23:01.631Z",
  "modificationTime" : "2021-06-19T01:23:01.631Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" starttime="20210619 01:38:43.010" endtime="20210619 01:38:43.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:38:43.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:38:43.011" endtime="20210619 01:38:43.012"/>
</kw>
<status status="PASS" starttime="20210619 01:38:39.613" endtime="20210619 01:38:43.012"/>
</kw>
<msg timestamp="20210619 01:38:43.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:38:39.613" endtime="20210619 01:38:43.012"/>
</kw>
<msg timestamp="20210619 01:38:43.013" level="INFO">${result} = {
  "metadata" : { },
  "name" : "20221-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210619 01:38:39.612" endtime="20210619 01:38:43.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:38:43.013" endtime="20210619 01:38:43.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:38:43.014" endtime="20210619 01:38:43.014"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm[^@]*@EXAMPLE\.COM)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:38:43.014" endtime="20210619 01:38:43.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:43.019" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:46.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:38:46.726" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05318-bucket1-ofs",
  "storageType" : "DISK"...</msg>
<status status="PASS" starttime="20210619 01:38:43.017" endtime="20210619 01:38:46.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:46.727" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05318-bucket1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 262890,
  "usedNamespace" : -2,
  "creationTime" : "2021-06-19T01:31:20.287Z",
  "modificationTime" : "2021-06-19T01:31:20.287Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05318-bucket2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : -5,
  "creationTime" : "2021-06-19T01:31:23.877Z",
  "modificationTime" : "2021-06-19T01:31:23.877Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "36948-link1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:35:06.174Z",
  "modificationTime" : "2021-06-19T01:35:06.174Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "36948-link1-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "36948-link2-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:35:09.799Z",
  "modificationTime" : "2021-06-19T01:35:09.799Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "36948-link2-o3fs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "88666-link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:27:51.837Z",
  "modificationTime" : "2021-06-19T01:27:51.837Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "88666-link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "88666-link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:27:55.254Z",
  "modificationTime" : "2021-06-19T01:27:55.254Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "88666-link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "95482-bucket1-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:38:32.229Z",
  "modificationTime" : "2021-06-19T01:38:32.229Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "95482-bucket2-o3fs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:38:35.691Z",
  "modificationTime" : "2021-06-19T01:38:35.691Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210619 01:38:46.727" endtime="20210619 01:38:46.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:38:46.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:38:46.728" endtime="20210619 01:38:46.728"/>
</kw>
<status status="PASS" starttime="20210619 01:38:43.016" endtime="20210619 01:38:46.729"/>
</kw>
<msg timestamp="20210619 01:38:46.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:38:43.016" endtime="20210619 01:38:46.729"/>
</kw>
<msg timestamp="20210619 01:38:46.729" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "05318-bucket1-ofs",
  "storageType" : "DISK"...</msg>
<status status="PASS" starttime="20210619 01:38:43.015" endtime="20210619 01:38:46.729"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:38:46.730" endtime="20210619 01:38:46.730"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:38:46.730" endtime="20210619 01:38:46.731"/>
</kw>
<status status="PASS" starttime="20210619 01:38:39.612" endtime="20210619 01:38:46.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:46.731" level="INFO">Completed setup for o3fs tests with buckets in fstest1/95482-bucket1-o3fs using FS base URL: o3fs://95482-bucket1-o3fs.fstest1.om//</msg>
<status status="PASS" starttime="20210619 01:38:46.731" endtime="20210619 01:38:46.732"/>
</kw>
<status status="PASS" starttime="20210619 01:38:21.540" endtime="20210619 01:38:46.732"/>
</kw>
<test id="s1-s5-t1" name="List root">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:38:46.739" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:38:46.738" endtime="20210619 01:38:46.739"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:38:46.739" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:38:46.739" endtime="20210619 01:38:46.739"/>
</kw>
<status status="PASS" starttime="20210619 01:38:46.737" endtime="20210619 01:38:46.740"/>
</kw>
<msg timestamp="20210619 01:38:46.740" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:38:46.736" endtime="20210619 01:38:46.740"/>
</kw>
<status status="PASS" starttime="20210619 01:38:46.735" endtime="20210619 01:38:46.740"/>
</kw>
<msg timestamp="20210619 01:38:46.740" level="INFO">${url} = o3fs://95482-bucket1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20210619 01:38:46.734" endtime="20210619 01:38:46.741"/>
</kw>
<msg timestamp="20210619 01:38:46.741" level="INFO">${root} = o3fs://95482-bucket1-o3fs.fstest1.om/</msg>
<status status="PASS" starttime="20210619 01:38:46.733" endtime="20210619 01:38:46.741"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:46.744" level="INFO">Running command 'ozone fs -ls o3fs://95482-bucket1-o3fs.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:50.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:38:50.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:38:46.743" endtime="20210619 01:38:50.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:50.178" level="INFO"/>
<status status="PASS" starttime="20210619 01:38:50.177" endtime="20210619 01:38:50.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:38:50.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:38:50.178" endtime="20210619 01:38:50.179"/>
</kw>
<status status="PASS" starttime="20210619 01:38:46.742" endtime="20210619 01:38:50.179"/>
</kw>
<msg timestamp="20210619 01:38:50.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:38:46.742" endtime="20210619 01:38:50.179"/>
</kw>
<status status="PASS" starttime="20210619 01:38:46.741" endtime="20210619 01:38:50.179"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:38:46.732" endtime="20210619 01:38:50.180"/>
</test>
<test id="s1-s5-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:38:50.187" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:38:50.186" endtime="20210619 01:38:50.187"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:38:50.188" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:38:50.187" endtime="20210619 01:38:50.188"/>
</kw>
<status status="PASS" starttime="20210619 01:38:50.186" endtime="20210619 01:38:50.188"/>
</kw>
<msg timestamp="20210619 01:38:50.188" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:38:50.185" endtime="20210619 01:38:50.188"/>
</kw>
<status status="PASS" starttime="20210619 01:38:50.184" endtime="20210619 01:38:50.189"/>
</kw>
<msg timestamp="20210619 01:38:50.189" level="INFO">${url} = o3fs://95482-bucket1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20210619 01:38:50.183" endtime="20210619 01:38:50.189"/>
</kw>
<msg timestamp="20210619 01:38:50.189" level="INFO">${url} = o3fs://95482-bucket1-o3fs.no-such-volume.om/</msg>
<status status="PASS" starttime="20210619 01:38:50.181" endtime="20210619 01:38:50.189"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:50.192" level="INFO">Running command 'ozone fs -ls o3fs://95482-bucket1-o3fs.no-such-volume.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:53.576" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:38:53.576" level="INFO">${output} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210619 01:38:50.190" endtime="20210619 01:38:53.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:53.577" level="INFO">ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210619 01:38:53.577" endtime="20210619 01:38:53.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:38:53.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:38:53.578" endtime="20210619 01:38:53.578"/>
</kw>
<msg timestamp="20210619 01:38:53.579" level="INFO">${result} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20210619 01:38:50.190" endtime="20210619 01:38:53.579"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:38:53.579" endtime="20210619 01:38:53.580"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:38:50.180" endtime="20210619 01:38:53.580"/>
</test>
<test id="s1-s5-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:38:53.587" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:38:53.587" endtime="20210619 01:38:53.587"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:38:53.588" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:38:53.587" endtime="20210619 01:38:53.588"/>
</kw>
<status status="PASS" starttime="20210619 01:38:53.586" endtime="20210619 01:38:53.588"/>
</kw>
<msg timestamp="20210619 01:38:53.588" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:38:53.585" endtime="20210619 01:38:53.588"/>
</kw>
<status status="PASS" starttime="20210619 01:38:53.584" endtime="20210619 01:38:53.589"/>
</kw>
<msg timestamp="20210619 01:38:53.589" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20210619 01:38:53.583" endtime="20210619 01:38:53.589"/>
</kw>
<msg timestamp="20210619 01:38:53.589" level="INFO">${url} = o3fs://no-such-bucket.fstest1.om/</msg>
<status status="PASS" starttime="20210619 01:38:53.582" endtime="20210619 01:38:53.590"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:53.592" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:38:57.037" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:38:57.037" level="INFO">${output} = ls: Bucket not found</msg>
<status status="PASS" starttime="20210619 01:38:53.590" endtime="20210619 01:38:57.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:38:57.038" level="INFO">ls: Bucket not found</msg>
<status status="PASS" starttime="20210619 01:38:57.037" endtime="20210619 01:38:57.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:38:57.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:38:57.038" endtime="20210619 01:38:57.039"/>
</kw>
<msg timestamp="20210619 01:38:57.039" level="INFO">${result} = ls: Bucket not found</msg>
<status status="PASS" starttime="20210619 01:38:53.590" endtime="20210619 01:38:57.039"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:38:57.040" endtime="20210619 01:38:57.041"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:38:53.581" endtime="20210619 01:38:57.041"/>
</test>
<test id="s1-s5-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:38:57.046" level="INFO">Running command 'ozone fs -mkdir -p o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:00.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:00.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:38:57.045" endtime="20210619 01:39:00.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:00.703" level="INFO"/>
<status status="PASS" starttime="20210619 01:39:00.702" endtime="20210619 01:39:00.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:00.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:00.704" endtime="20210619 01:39:00.705"/>
</kw>
<status status="PASS" starttime="20210619 01:38:57.044" endtime="20210619 01:39:00.705"/>
</kw>
<msg timestamp="20210619 01:39:00.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:38:57.044" endtime="20210619 01:39:00.705"/>
</kw>
<status status="PASS" starttime="20210619 01:38:57.043" endtime="20210619 01:39:00.705"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:00.709" level="INFO">Running command 'ozone sh key list fstest1/95482-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:04.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:04.382" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210619 01:39:00.707" endtime="20210619 01:39:04.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:04.383" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210619 01:39:04.383" endtime="20210619 01:39:04.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:04.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:04.384" endtime="20210619 01:39:04.384"/>
</kw>
<status status="PASS" starttime="20210619 01:39:00.707" endtime="20210619 01:39:04.385"/>
</kw>
<msg timestamp="20210619 01:39:04.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:00.706" endtime="20210619 01:39:04.385"/>
</kw>
<msg timestamp="20210619 01:39:04.385" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20210619 01:39:00.706" endtime="20210619 01:39:04.385"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:39:04.386" endtime="20210619 01:39:04.386"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:38:57.042" endtime="20210619 01:39:04.387"/>
</test>
<test id="s1-s5-t5" name="Copy from local">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:04.391" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:10.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:10.200" level="INFO">${output} = 2021-06-19 01:39:08,420 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:39:08,491 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:39:04.390" endtime="20210619 01:39:10.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:10.201" level="INFO">2021-06-19 01:39:08,420 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:39:08,491 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:39:08,491 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:39:08,739 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:39:08,740 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-6536996F7829-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:39:08,743 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:39:10.200" endtime="20210619 01:39:10.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:10.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:10.201" endtime="20210619 01:39:10.202"/>
</kw>
<status status="PASS" starttime="20210619 01:39:04.389" endtime="20210619 01:39:10.202"/>
</kw>
<msg timestamp="20210619 01:39:10.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:04.389" endtime="20210619 01:39:10.203"/>
</kw>
<status status="PASS" starttime="20210619 01:39:04.388" endtime="20210619 01:39:10.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:10.207" level="INFO">Running command 'ozone sh key list fstest1/95482-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:13.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:13.663" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:39:10.205" endtime="20210619 01:39:13.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:13.664" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:39:13.663" endtime="20210619 01:39:13.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:13.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:13.664" endtime="20210619 01:39:13.665"/>
</kw>
<status status="PASS" starttime="20210619 01:39:10.204" endtime="20210619 01:39:13.665"/>
</kw>
<msg timestamp="20210619 01:39:13.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:10.204" endtime="20210619 01:39:13.666"/>
</kw>
<msg timestamp="20210619 01:39:13.666" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:39:10.203" endtime="20210619 01:39:13.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:39:13.666" endtime="20210619 01:39:13.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:13.670" level="INFO">Running command 'ozone sh key info fstest1/95482-bucket1-o3fs/test/o3fs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:17.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:17.347" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20210619 01:39:13.668" endtime="20210619 01:39:17.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:17.348" level="INFO">3</msg>
<status status="PASS" starttime="20210619 01:39:17.348" endtime="20210619 01:39:17.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:17.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:17.349" endtime="20210619 01:39:17.349"/>
</kw>
<status status="PASS" starttime="20210619 01:39:13.668" endtime="20210619 01:39:17.350"/>
</kw>
<msg timestamp="20210619 01:39:17.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:13.668" endtime="20210619 01:39:17.350"/>
</kw>
<msg timestamp="20210619 01:39:17.350" level="INFO">${result} = 3</msg>
<status status="PASS" starttime="20210619 01:39:13.667" endtime="20210619 01:39:17.350"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:39:17.350" endtime="20210619 01:39:17.351"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:39:04.387" endtime="20210619 01:39:17.351"/>
</test>
<test id="s1-s5-t6" name="Put">
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:17.356" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:22.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:22.404" level="INFO">${output} = 2021-06-19 01:39:20,799 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:39:20,880 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:39:17.354" endtime="20210619 01:39:22.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:22.406" level="INFO">2021-06-19 01:39:20,799 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:39:20,880 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:39:20,880 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:39:21,128 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:39:21,128 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-909CD7484C06-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:39:21,129 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:39:22.405" endtime="20210619 01:39:22.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:22.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:22.406" endtime="20210619 01:39:22.407"/>
</kw>
<status status="PASS" starttime="20210619 01:39:17.354" endtime="20210619 01:39:22.407"/>
</kw>
<msg timestamp="20210619 01:39:22.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:17.353" endtime="20210619 01:39:22.407"/>
</kw>
<status status="PASS" starttime="20210619 01:39:17.352" endtime="20210619 01:39:22.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:22.411" level="INFO">Running command 'ozone sh key list fstest1/95482-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:26.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:26.309" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:39:22.410" endtime="20210619 01:39:26.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:26.310" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:39:26.309" endtime="20210619 01:39:26.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:26.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:26.310" endtime="20210619 01:39:26.311"/>
</kw>
<status status="PASS" starttime="20210619 01:39:22.409" endtime="20210619 01:39:26.311"/>
</kw>
<msg timestamp="20210619 01:39:26.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:22.409" endtime="20210619 01:39:26.311"/>
</kw>
<msg timestamp="20210619 01:39:26.312" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:39:22.408" endtime="20210619 01:39:26.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:39:26.312" endtime="20210619 01:39:26.312"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:39:17.352" endtime="20210619 01:39:26.313"/>
</test>
<test id="s1-s5-t7" name="List">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:26.317" level="INFO">Running command 'ozone fs -ls o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:29.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:29.937" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:39 o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-19 01:39 o3fs://95482-bucke...</msg>
<status status="PASS" starttime="20210619 01:39:26.316" endtime="20210619 01:39:29.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:29.938" level="INFO">Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:39 o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-19 01:39 o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:39:29.937" endtime="20210619 01:39:29.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:29.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:29.938" endtime="20210619 01:39:29.939"/>
</kw>
<status status="PASS" starttime="20210619 01:39:26.315" endtime="20210619 01:39:29.939"/>
</kw>
<msg timestamp="20210619 01:39:29.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:26.315" endtime="20210619 01:39:29.940"/>
</kw>
<msg timestamp="20210619 01:39:29.940" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:39 o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-19 01:39 o3fs://95482-bucke...</msg>
<status status="PASS" starttime="20210619 01:39:26.314" endtime="20210619 01:39:29.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:39:29.940" endtime="20210619 01:39:29.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:39:29.941" endtime="20210619 01:39:29.941"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:39:26.313" endtime="20210619 01:39:29.941"/>
</test>
<test id="s1-s5-t8" name="Move">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:29.947" level="INFO">Running command 'ozone fs -mv o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/NOTICE.txt o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:33.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:33.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:39:29.945" endtime="20210619 01:39:33.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:33.561" level="INFO"/>
<status status="PASS" starttime="20210619 01:39:33.560" endtime="20210619 01:39:33.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:33.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:33.561" endtime="20210619 01:39:33.562"/>
</kw>
<status status="PASS" starttime="20210619 01:39:29.944" endtime="20210619 01:39:33.562"/>
</kw>
<msg timestamp="20210619 01:39:33.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:29.944" endtime="20210619 01:39:33.562"/>
</kw>
<status status="PASS" starttime="20210619 01:39:29.943" endtime="20210619 01:39:33.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:33.566" level="INFO">Running command 'ozone sh key list fstest1/95482-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:37.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:37.394" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:39:33.564" endtime="20210619 01:39:37.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:37.395" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:39:37.395" endtime="20210619 01:39:37.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:37.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:37.396" endtime="20210619 01:39:37.396"/>
</kw>
<status status="PASS" starttime="20210619 01:39:33.564" endtime="20210619 01:39:37.397"/>
</kw>
<msg timestamp="20210619 01:39:37.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:33.563" endtime="20210619 01:39:37.397"/>
</kw>
<msg timestamp="20210619 01:39:37.397" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:39:33.563" endtime="20210619 01:39:37.397"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:39:37.397" endtime="20210619 01:39:37.398"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:39:37.398" endtime="20210619 01:39:37.399"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:39:29.942" endtime="20210619 01:39:37.399"/>
</test>
<test id="s1-s5-t9" name="Copy within FS">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:37.404" level="INFO">Running command 'ozone fs -mkdir -p o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:40.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:40.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:39:37.402" endtime="20210619 01:39:40.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:40.897" level="INFO"/>
<status status="PASS" starttime="20210619 01:39:40.896" endtime="20210619 01:39:40.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:40.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:40.897" endtime="20210619 01:39:40.898"/>
</kw>
<status status="PASS" starttime="20210619 01:39:37.402" endtime="20210619 01:39:40.898"/>
</kw>
<msg timestamp="20210619 01:39:40.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:37.401" endtime="20210619 01:39:40.898"/>
</kw>
<status status="PASS" starttime="20210619 01:39:37.401" endtime="20210619 01:39:40.899"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:40.903" level="INFO">Running command 'ozone fs -cp o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/MOVED.TXT o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:46.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:46.586" level="INFO">${output} = 2021-06-19 01:39:44,576 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:39:44,664 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:39:40.901" endtime="20210619 01:39:46.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:46.587" level="INFO">2021-06-19 01:39:44,576 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:39:44,664 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:39:44,664 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:39:45,747 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:39:45,747 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-863CF4F9D442-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:39:45,748 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:39:46.587" endtime="20210619 01:39:46.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:46.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:46.588" endtime="20210619 01:39:46.588"/>
</kw>
<status status="PASS" starttime="20210619 01:39:40.900" endtime="20210619 01:39:46.589"/>
</kw>
<msg timestamp="20210619 01:39:46.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:40.900" endtime="20210619 01:39:46.589"/>
</kw>
<status status="PASS" starttime="20210619 01:39:40.899" endtime="20210619 01:39:46.589"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:46.593" level="INFO">Running command 'ozone sh key list fstest1/95482-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:50.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:50.326" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:39:46.591" endtime="20210619 01:39:50.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:50.327" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:39:50.326" endtime="20210619 01:39:50.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:50.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:50.327" endtime="20210619 01:39:50.328"/>
</kw>
<status status="PASS" starttime="20210619 01:39:46.591" endtime="20210619 01:39:50.328"/>
</kw>
<msg timestamp="20210619 01:39:50.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:46.590" endtime="20210619 01:39:50.329"/>
</kw>
<msg timestamp="20210619 01:39:50.329" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:39:46.590" endtime="20210619 01:39:50.329"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:39:50.329" endtime="20210619 01:39:50.330"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:50.333" level="INFO">Running command 'ozone fs -ls o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:53.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:53.726" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:39 o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:39:50.331" endtime="20210619 01:39:53.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:53.727" level="INFO">Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:39 o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:39:53.727" endtime="20210619 01:39:53.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:53.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:53.728" endtime="20210619 01:39:53.728"/>
</kw>
<status status="PASS" starttime="20210619 01:39:50.331" endtime="20210619 01:39:53.729"/>
</kw>
<msg timestamp="20210619 01:39:53.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:50.330" endtime="20210619 01:39:53.729"/>
</kw>
<msg timestamp="20210619 01:39:53.729" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:39 o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:39:50.330" endtime="20210619 01:39:53.730"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:39:53.730" endtime="20210619 01:39:53.730"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:39:53.730" endtime="20210619 01:39:53.731"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:39:37.400" endtime="20210619 01:39:53.731"/>
</test>
<test id="s1-s5-t10" name="Cat file">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:53.737" level="INFO">Running command 'ozone fs -cat o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:39:58.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:39:58.824" level="INFO">${output} = 2021-06-19 01:39:57,217 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:39:57,341 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:39:53.735" endtime="20210619 01:39:58.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:39:58.825" level="INFO">2021-06-19 01:39:57,217 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:39:57,341 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:39:57,341 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Ozone
Copyright 2021 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20210619 01:39:58.825" endtime="20210619 01:39:58.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:39:58.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:39:58.826" endtime="20210619 01:39:58.827"/>
</kw>
<status status="PASS" starttime="20210619 01:39:53.734" endtime="20210619 01:39:58.827"/>
</kw>
<msg timestamp="20210619 01:39:58.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:53.734" endtime="20210619 01:39:58.827"/>
</kw>
<status status="PASS" starttime="20210619 01:39:53.733" endtime="20210619 01:39:58.829"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:39:53.732" endtime="20210619 01:39:58.829"/>
</test>
<test id="s1-s5-t11" name="Delete file">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:39:58.834" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:02.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:02.409" level="INFO">${output} = Deleted o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:39:58.832" endtime="20210619 01:40:02.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:02.411" level="INFO">Deleted o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:40:02.410" endtime="20210619 01:40:02.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:02.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:02.411" endtime="20210619 01:40:02.412"/>
</kw>
<status status="PASS" starttime="20210619 01:39:58.831" endtime="20210619 01:40:02.412"/>
</kw>
<msg timestamp="20210619 01:40:02.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:39:58.831" endtime="20210619 01:40:02.412"/>
</kw>
<status status="PASS" starttime="20210619 01:39:58.830" endtime="20210619 01:40:02.413"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:02.417" level="INFO">Running command 'ozone sh key list fstest1/95482-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:06.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:06.008" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210619 01:40:02.415" endtime="20210619 01:40:06.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:06.009" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210619 01:40:06.009" endtime="20210619 01:40:06.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:06.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:06.010" endtime="20210619 01:40:06.010"/>
</kw>
<status status="PASS" starttime="20210619 01:40:02.414" endtime="20210619 01:40:06.011"/>
</kw>
<msg timestamp="20210619 01:40:06.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:02.414" endtime="20210619 01:40:06.011"/>
</kw>
<msg timestamp="20210619 01:40:06.011" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20210619 01:40:02.413" endtime="20210619 01:40:06.011"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:40:06.012" endtime="20210619 01:40:06.012"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:39:58.829" endtime="20210619 01:40:06.012"/>
</test>
<test id="s1-s5-t12" name="Delete dir">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:06.017" level="INFO">Running command 'ozone fs -rmdir o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:09.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:09.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:40:06.016" endtime="20210619 01:40:09.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:09.416" level="INFO"/>
<status status="PASS" starttime="20210619 01:40:09.415" endtime="20210619 01:40:09.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:09.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:09.416" endtime="20210619 01:40:09.417"/>
</kw>
<status status="PASS" starttime="20210619 01:40:06.015" endtime="20210619 01:40:09.417"/>
</kw>
<msg timestamp="20210619 01:40:09.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:06.015" endtime="20210619 01:40:09.418"/>
</kw>
<msg timestamp="20210619 01:40:09.418" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:40:06.014" endtime="20210619 01:40:09.418"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:09.422" level="INFO">Running command 'ozone sh key list fstest1/95482-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:13.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:13.231" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:40:09.420" endtime="20210619 01:40:13.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:13.232" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:40:13.232" endtime="20210619 01:40:13.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:13.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:13.233" endtime="20210619 01:40:13.233"/>
</kw>
<status status="PASS" starttime="20210619 01:40:09.419" endtime="20210619 01:40:13.234"/>
</kw>
<msg timestamp="20210619 01:40:13.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:09.419" endtime="20210619 01:40:13.234"/>
</kw>
<msg timestamp="20210619 01:40:13.234" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:40:09.418" endtime="20210619 01:40:13.234"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:40:13.234" endtime="20210619 01:40:13.235"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:40:06.013" endtime="20210619 01:40:13.235"/>
</test>
<test id="s1-s5-t13" name="Touch file">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:13.240" level="INFO">Running command 'ozone fs -touch o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:16.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:16.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:40:13.239" endtime="20210619 01:40:16.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:16.916" level="INFO"/>
<status status="PASS" starttime="20210619 01:40:16.915" endtime="20210619 01:40:16.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:16.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:16.916" endtime="20210619 01:40:16.917"/>
</kw>
<status status="PASS" starttime="20210619 01:40:13.238" endtime="20210619 01:40:16.917"/>
</kw>
<msg timestamp="20210619 01:40:16.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:13.238" endtime="20210619 01:40:16.917"/>
</kw>
<status status="PASS" starttime="20210619 01:40:13.237" endtime="20210619 01:40:16.918"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:16.922" level="INFO">Running command 'ozone sh key list fstest1/95482-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:20.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:20.817" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:40:16.921" endtime="20210619 01:40:20.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:20.818" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:40:20.818" endtime="20210619 01:40:20.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:20.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:20.819" endtime="20210619 01:40:20.819"/>
</kw>
<status status="PASS" starttime="20210619 01:40:16.920" endtime="20210619 01:40:20.820"/>
</kw>
<msg timestamp="20210619 01:40:20.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:16.919" endtime="20210619 01:40:20.820"/>
</kw>
<msg timestamp="20210619 01:40:20.820" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:40:16.918" endtime="20210619 01:40:20.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:40:20.820" endtime="20210619 01:40:20.821"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:40:13.236" endtime="20210619 01:40:20.821"/>
</test>
<test id="s1-s5-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:20.826" level="INFO">Running command 'ozone fs -touch o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:24.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:24.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:40:20.824" endtime="20210619 01:40:24.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:24.530" level="INFO"/>
<status status="PASS" starttime="20210619 01:40:24.530" endtime="20210619 01:40:24.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:24.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:24.531" endtime="20210619 01:40:24.531"/>
</kw>
<status status="PASS" starttime="20210619 01:40:20.824" endtime="20210619 01:40:24.531"/>
</kw>
<msg timestamp="20210619 01:40:24.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:20.823" endtime="20210619 01:40:24.532"/>
</kw>
<status status="PASS" starttime="20210619 01:40:20.823" endtime="20210619 01:40:24.532"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:24.536" level="INFO">Running command 'ozone fs -rm o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:28.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:28.235" level="INFO">${output} = 2021-06-19 01:40:27,948 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:40:28,028 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210619 01:40:24.534" endtime="20210619 01:40:28.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:28.236" level="INFO">2021-06-19 01:40:27,948 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:40:28,028 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/testFile.txt' to trash at: /.Trash/root/Current/test/o3fs/dir/testFile.txt</msg>
<status status="PASS" starttime="20210619 01:40:28.235" endtime="20210619 01:40:28.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:28.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:28.236" endtime="20210619 01:40:28.237"/>
</kw>
<status status="PASS" starttime="20210619 01:40:24.533" endtime="20210619 01:40:28.237"/>
</kw>
<msg timestamp="20210619 01:40:28.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:24.533" endtime="20210619 01:40:28.238"/>
</kw>
<status status="PASS" starttime="20210619 01:40:24.532" endtime="20210619 01:40:28.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:28.242" level="INFO">Running command 'ozone fs -ls -R o3fs://95482-bucket1-o3fs.fstest1.om/// 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:31.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:31.800" level="INFO">${output} = drwxrwxrwx   - root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/.Trash/root
d...</msg>
<status status="PASS" starttime="20210619 01:40:28.240" endtime="20210619 01:40:31.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:31.801" level="INFO">drwxrwxrwx   - root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/.Trash/root
drwxrwxrwx   - root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/.Trash/root/Current
drwxrwxrwx   - root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/.Trash/root/Current/test
drwxrwxrwx   - root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/.Trash/root/Current/test/o3fs
drwxrwxrwx   - root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/.Trash/root/Current/test/o3fs/dir
-rw-rw-rw-   3 root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/.Trash/root/Current/test/o3fs/dir/testFile.txt
drwxrwxrwx   - root root          0 2021-06-19 01:39 o3fs://95482-bucket1-o3fs.fstest1.om/test
drwxrwxrwx   - root root          0 2021-06-19 01:39 o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs
drwxrwxrwx   - root root          0 2021-06-19 01:39 o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir
-rw-rw-rw-   3 root root      17526 2021-06-19 01:39 o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/MOVED.TXT
-rw-rw-rw-   3 root root      17526 2021-06-19 01:39 o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:40:31.800" endtime="20210619 01:40:31.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:31.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:31.802" endtime="20210619 01:40:31.802"/>
</kw>
<status status="PASS" starttime="20210619 01:40:28.239" endtime="20210619 01:40:31.803"/>
</kw>
<msg timestamp="20210619 01:40:31.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:28.239" endtime="20210619 01:40:31.803"/>
</kw>
<msg timestamp="20210619 01:40:31.803" level="INFO">${result} = drwxrwxrwx   - root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/.Trash
drwxrwxrwx   - root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/.Trash/root
d...</msg>
<status status="PASS" starttime="20210619 01:40:28.238" endtime="20210619 01:40:31.803"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:40:31.803" endtime="20210619 01:40:31.804"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20210619 01:40:31.804" endtime="20210619 01:40:31.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:40:31.805" endtime="20210619 01:40:31.805"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:40:20.822" endtime="20210619 01:40:31.806"/>
</test>
<test id="s1-s5-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:31.811" level="INFO">Running command 'ozone fs -mkdir -p o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:35.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:35.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:40:31.809" endtime="20210619 01:40:35.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:35.231" level="INFO"/>
<status status="PASS" starttime="20210619 01:40:35.230" endtime="20210619 01:40:35.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:35.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:35.231" endtime="20210619 01:40:35.232"/>
</kw>
<status status="PASS" starttime="20210619 01:40:31.808" endtime="20210619 01:40:35.232"/>
</kw>
<msg timestamp="20210619 01:40:35.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:31.808" endtime="20210619 01:40:35.232"/>
</kw>
<status status="PASS" starttime="20210619 01:40:31.807" endtime="20210619 01:40:35.232"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:35.236" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://95482-bucket1-o3fs.fstest1.om//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:38.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:38.826" level="INFO">${output} = Deleted o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20210619 01:40:35.234" endtime="20210619 01:40:38.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:38.827" level="INFO">Deleted o3fs://95482-bucket1-o3fs.fstest1.om/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20210619 01:40:38.826" endtime="20210619 01:40:38.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:38.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:38.827" endtime="20210619 01:40:38.828"/>
</kw>
<status status="PASS" starttime="20210619 01:40:35.234" endtime="20210619 01:40:38.828"/>
</kw>
<msg timestamp="20210619 01:40:38.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:35.233" endtime="20210619 01:40:38.828"/>
</kw>
<status status="PASS" starttime="20210619 01:40:35.233" endtime="20210619 01:40:38.829"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:38.832" level="INFO">Running command 'ozone sh key list fstest1/95482-bucket1-o3fs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:42.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:42.469" level="INFO">${output} = .Trash/
.Trash/root/
.Trash/root/Current/
.Trash/root/Current/test/
.Trash/root/Current/test/o3fs/
.Trash/root/Current/test/o3fs/dir/
.Trash/root/Current/test/o3fs/dir/testFile.txt
test/
test/o3fs/
te...</msg>
<status status="PASS" starttime="20210619 01:40:38.830" endtime="20210619 01:40:42.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:42.471" level="INFO">.Trash/
.Trash/root/
.Trash/root/Current/
.Trash/root/Current/test/
.Trash/root/Current/test/o3fs/
.Trash/root/Current/test/o3fs/dir/
.Trash/root/Current/test/o3fs/dir/testFile.txt
test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:40:42.470" endtime="20210619 01:40:42.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:42.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:42.471" endtime="20210619 01:40:42.472"/>
</kw>
<status status="PASS" starttime="20210619 01:40:38.830" endtime="20210619 01:40:42.472"/>
</kw>
<msg timestamp="20210619 01:40:42.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:38.830" endtime="20210619 01:40:42.472"/>
</kw>
<msg timestamp="20210619 01:40:42.473" level="INFO">${result} = .Trash/
.Trash/root/
.Trash/root/Current/
.Trash/root/Current/test/
.Trash/root/Current/test/o3fs/
.Trash/root/Current/test/o3fs/dir/
.Trash/root/Current/test/o3fs/dir/testFile.txt
test/
test/o3fs/
te...</msg>
<status status="PASS" starttime="20210619 01:40:38.829" endtime="20210619 01:40:42.473"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:40:42.473" endtime="20210619 01:40:42.473"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:40:31.806" endtime="20210619 01:40:42.474"/>
</test>
<test id="s1-s5-t16" name="List recursively">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:42.479" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:42.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:42.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:40:42.477" endtime="20210619 01:40:42.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:42.483" level="INFO"/>
<status status="PASS" starttime="20210619 01:40:42.482" endtime="20210619 01:40:42.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:42.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:42.483" endtime="20210619 01:40:42.484"/>
</kw>
<status status="PASS" starttime="20210619 01:40:42.476" endtime="20210619 01:40:42.484"/>
</kw>
<msg timestamp="20210619 01:40:42.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:42.476" endtime="20210619 01:40:42.484"/>
</kw>
<status status="PASS" starttime="20210619 01:40:42.476" endtime="20210619 01:40:42.484"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:42.488" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:42.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:42.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:40:42.486" endtime="20210619 01:40:42.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:42.491" level="INFO"/>
<status status="PASS" starttime="20210619 01:40:42.491" endtime="20210619 01:40:42.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:42.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:42.492" endtime="20210619 01:40:42.492"/>
</kw>
<status status="PASS" starttime="20210619 01:40:42.485" endtime="20210619 01:40:42.493"/>
</kw>
<msg timestamp="20210619 01:40:42.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:42.485" endtime="20210619 01:40:42.493"/>
</kw>
<status status="PASS" starttime="20210619 01:40:42.485" endtime="20210619 01:40:42.493"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:42.496" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:42.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:42.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:40:42.495" endtime="20210619 01:40:42.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:42.500" level="INFO"/>
<status status="PASS" starttime="20210619 01:40:42.499" endtime="20210619 01:40:42.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:42.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:42.500" endtime="20210619 01:40:42.501"/>
</kw>
<status status="PASS" starttime="20210619 01:40:42.494" endtime="20210619 01:40:42.501"/>
</kw>
<msg timestamp="20210619 01:40:42.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:42.494" endtime="20210619 01:40:42.502"/>
</kw>
<status status="PASS" starttime="20210619 01:40:42.493" endtime="20210619 01:40:42.502"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:42.505" level="INFO">Running command 'ozone fs -mkdir -p o3fs://95482-bucket1-o3fs.fstest1.om//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:46.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:46.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:40:42.504" endtime="20210619 01:40:46.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:46.071" level="INFO"/>
<status status="PASS" starttime="20210619 01:40:46.070" endtime="20210619 01:40:46.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:46.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:46.071" endtime="20210619 01:40:46.072"/>
</kw>
<status status="PASS" starttime="20210619 01:40:42.503" endtime="20210619 01:40:46.072"/>
</kw>
<msg timestamp="20210619 01:40:46.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:42.503" endtime="20210619 01:40:46.072"/>
</kw>
<status status="PASS" starttime="20210619 01:40:42.502" endtime="20210619 01:40:46.072"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:46.076" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://95482-bucket1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:51.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:51.397" level="INFO">${output} = 2021-06-19 01:40:49,714 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:40:49,833 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:40:46.074" endtime="20210619 01:40:51.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:51.398" level="INFO">2021-06-19 01:40:49,714 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:40:49,833 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:40:49,833 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:40:50,076 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:40:50,076 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-9D834E367E53-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:40:50,077 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:40:51.397" endtime="20210619 01:40:51.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:51.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:51.398" endtime="20210619 01:40:51.399"/>
</kw>
<status status="PASS" starttime="20210619 01:40:46.074" endtime="20210619 01:40:51.399"/>
</kw>
<msg timestamp="20210619 01:40:51.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:46.073" endtime="20210619 01:40:51.400"/>
</kw>
<status status="PASS" starttime="20210619 01:40:46.072" endtime="20210619 01:40:51.400"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:51.404" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://95482-bucket1-o3fs.fstest1.om//testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:40:56.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:40:56.592" level="INFO">${output} = 2021-06-19 01:40:54,849 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:40:54,927 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:40:51.402" endtime="20210619 01:40:56.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:40:56.594" level="INFO">2021-06-19 01:40:54,849 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:40:54,927 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:40:54,927 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:40:55,176 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:40:55,177 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-89134334A27D-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:40:55,178 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:40:56.594" endtime="20210619 01:40:56.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:40:56.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:40:56.595" endtime="20210619 01:40:56.595"/>
</kw>
<status status="PASS" starttime="20210619 01:40:51.401" endtime="20210619 01:40:56.596"/>
</kw>
<msg timestamp="20210619 01:40:56.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:51.401" endtime="20210619 01:40:56.596"/>
</kw>
<status status="PASS" starttime="20210619 01:40:51.400" endtime="20210619 01:40:56.596"/>
</kw>
<status status="PASS" starttime="20210619 01:40:42.475" endtime="20210619 01:40:56.597"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:40:56.601" level="INFO">Running command 'ozone fs -ls -R o3fs://95482-bucket1-o3fs.fstest1.om//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:00.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:00.202" level="INFO">${output} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/...</msg>
<status status="PASS" starttime="20210619 01:40:56.599" endtime="20210619 01:41:00.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:00.203" level="INFO">-rw-rw-rw-   3 root root      17526 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/testdir1/localdir1
-rw-rw-rw-   3 root root      17526 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20210619 01:41:00.203" endtime="20210619 01:41:00.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:00.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:00.204" endtime="20210619 01:41:00.204"/>
</kw>
<status status="PASS" starttime="20210619 01:40:56.598" endtime="20210619 01:41:00.205"/>
</kw>
<msg timestamp="20210619 01:41:00.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:40:56.598" endtime="20210619 01:41:00.205"/>
</kw>
<msg timestamp="20210619 01:41:00.205" level="INFO">${result} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-19 01:40 o3fs://95482-bucket1-o3fs.fstest1.om/...</msg>
<status status="PASS" starttime="20210619 01:40:56.597" endtime="20210619 01:41:00.205"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:41:00.206" endtime="20210619 01:41:00.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:41:00.206" endtime="20210619 01:41:00.207"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:40:42.474" endtime="20210619 01:41:00.207"/>
</test>
<test id="s1-s5-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:41:00.213" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:41:00.213" endtime="20210619 01:41:00.213"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:41:00.214" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:41:00.213" endtime="20210619 01:41:00.214"/>
</kw>
<status status="PASS" starttime="20210619 01:41:00.212" endtime="20210619 01:41:00.214"/>
</kw>
<msg timestamp="20210619 01:41:00.215" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:41:00.211" endtime="20210619 01:41:00.215"/>
</kw>
<status status="PASS" starttime="20210619 01:41:00.210" endtime="20210619 01:41:00.215"/>
</kw>
<msg timestamp="20210619 01:41:00.215" level="INFO">${url} = o3fs://95482-bucket2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20210619 01:41:00.209" endtime="20210619 01:41:00.215"/>
</kw>
<msg timestamp="20210619 01:41:00.215" level="INFO">${target} = o3fs://95482-bucket2-o3fs.fstest1.om/testdir2</msg>
<status status="PASS" starttime="20210619 01:41:00.208" endtime="20210619 01:41:00.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:00.219" level="INFO">Running command 'ozone fs -mkdir -p o3fs://95482-bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:03.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:03.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:41:00.217" endtime="20210619 01:41:03.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:03.619" level="INFO"/>
<status status="PASS" starttime="20210619 01:41:03.618" endtime="20210619 01:41:03.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:03.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:03.619" endtime="20210619 01:41:03.620"/>
</kw>
<status status="PASS" starttime="20210619 01:41:00.217" endtime="20210619 01:41:03.620"/>
</kw>
<msg timestamp="20210619 01:41:03.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:00.216" endtime="20210619 01:41:03.620"/>
</kw>
<status status="PASS" starttime="20210619 01:41:00.216" endtime="20210619 01:41:03.620"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:03.624" level="INFO">Running command 'ozone fs -cp o3fs://95482-bucket1-o3fs.fstest1.om///testdir1/localdir1 o3fs://95482-bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:09.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:09.351" level="INFO">${output} = 2021-06-19 01:41:07,342 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:41:07,420 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:41:03.622" endtime="20210619 01:41:09.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:09.352" level="INFO">2021-06-19 01:41:07,342 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:41:07,420 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:41:07,420 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:41:08,656 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:41:08,657 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-E7875B97261C-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:41:08,658 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:41:09.352" endtime="20210619 01:41:09.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:09.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:09.353" endtime="20210619 01:41:09.354"/>
</kw>
<status status="PASS" starttime="20210619 01:41:03.622" endtime="20210619 01:41:09.354"/>
</kw>
<msg timestamp="20210619 01:41:09.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:03.621" endtime="20210619 01:41:09.355"/>
</kw>
<status status="PASS" starttime="20210619 01:41:03.621" endtime="20210619 01:41:09.355"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:09.359" level="INFO">Running command 'ozone fs -rm -r o3fs://95482-bucket2-o3fs.fstest1.om/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:13.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:13.027" level="INFO">${output} = 2021-06-19 01:41:12,723 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:41:12,799 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210619 01:41:09.357" endtime="20210619 01:41:13.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:13.028" level="INFO">2021-06-19 01:41:12,723 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:41:12,799 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://95482-bucket2-o3fs.fstest1.om/testdir2' to trash at: /.Trash/root/Current/testdir2</msg>
<status status="PASS" starttime="20210619 01:41:13.028" endtime="20210619 01:41:13.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:13.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:13.029" endtime="20210619 01:41:13.029"/>
</kw>
<status status="PASS" starttime="20210619 01:41:09.356" endtime="20210619 01:41:13.030"/>
</kw>
<msg timestamp="20210619 01:41:13.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:09.356" endtime="20210619 01:41:13.030"/>
</kw>
<status status="PASS" starttime="20210619 01:41:09.355" endtime="20210619 01:41:13.030"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:41:00.207" endtime="20210619 01:41:13.030"/>
</test>
<test id="s1-s5-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:41:13.037" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:41:13.036" endtime="20210619 01:41:13.037"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:41:13.038" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:41:13.037" endtime="20210619 01:41:13.038"/>
</kw>
<status status="PASS" starttime="20210619 01:41:13.036" endtime="20210619 01:41:13.038"/>
</kw>
<msg timestamp="20210619 01:41:13.038" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:41:13.034" endtime="20210619 01:41:13.038"/>
</kw>
<status status="PASS" starttime="20210619 01:41:13.033" endtime="20210619 01:41:13.039"/>
</kw>
<msg timestamp="20210619 01:41:13.039" level="INFO">${url} = o3fs://95482-bucket3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20210619 01:41:13.033" endtime="20210619 01:41:13.039"/>
</kw>
<msg timestamp="20210619 01:41:13.039" level="INFO">${target} = o3fs://95482-bucket3-o3fs.fstest2.om/testdir3</msg>
<status status="PASS" starttime="20210619 01:41:13.032" endtime="20210619 01:41:13.039"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:13.043" level="INFO">Running command 'ozone fs -mkdir -p o3fs://95482-bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:16.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:16.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:41:13.041" endtime="20210619 01:41:16.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:16.580" level="INFO"/>
<status status="PASS" starttime="20210619 01:41:16.579" endtime="20210619 01:41:16.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:16.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:16.580" endtime="20210619 01:41:16.581"/>
</kw>
<status status="PASS" starttime="20210619 01:41:13.040" endtime="20210619 01:41:16.581"/>
</kw>
<msg timestamp="20210619 01:41:16.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:13.040" endtime="20210619 01:41:16.581"/>
</kw>
<status status="PASS" starttime="20210619 01:41:13.039" endtime="20210619 01:41:16.582"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:16.586" level="INFO">Running command 'ozone fs -cp o3fs://95482-bucket1-o3fs.fstest1.om///testdir1/localdir1 o3fs://95482-bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:22.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:22.154" level="INFO">${output} = 2021-06-19 01:41:20,167 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:41:20,289 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:41:16.584" endtime="20210619 01:41:22.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:22.155" level="INFO">2021-06-19 01:41:20,167 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:41:20,289 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:41:20,289 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:41:21,521 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:41:21,521 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-527DE8566AD8-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:41:21,522 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:41:22.154" endtime="20210619 01:41:22.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:22.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:22.155" endtime="20210619 01:41:22.156"/>
</kw>
<status status="PASS" starttime="20210619 01:41:16.583" endtime="20210619 01:41:22.156"/>
</kw>
<msg timestamp="20210619 01:41:22.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:16.583" endtime="20210619 01:41:22.157"/>
</kw>
<status status="PASS" starttime="20210619 01:41:16.582" endtime="20210619 01:41:22.157"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:22.161" level="INFO">Running command 'ozone fs -rm -r o3fs://95482-bucket3-o3fs.fstest2.om/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:25.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:25.556" level="INFO">${output} = 2021-06-19 01:41:25,390 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:41:25,463 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210619 01:41:22.159" endtime="20210619 01:41:25.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:25.557" level="INFO">2021-06-19 01:41:25,390 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:41:25,463 [main] INFO fs.TrashPolicyDefault: Moved: 'o3fs://95482-bucket3-o3fs.fstest2.om/testdir3' to trash at: /.Trash/root/Current/testdir3</msg>
<status status="PASS" starttime="20210619 01:41:25.556" endtime="20210619 01:41:25.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:25.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:25.557" endtime="20210619 01:41:25.558"/>
</kw>
<status status="PASS" starttime="20210619 01:41:22.158" endtime="20210619 01:41:25.558"/>
</kw>
<msg timestamp="20210619 01:41:25.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:22.158" endtime="20210619 01:41:25.558"/>
</kw>
<status status="PASS" starttime="20210619 01:41:22.157" endtime="20210619 01:41:25.559"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:41:13.031" endtime="20210619 01:41:25.559"/>
</test>
<test id="s1-s5-t19" name="List file created via shell">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:25.564" level="INFO">Running command 'ozone sh key put fstest1/95482-bucket1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:32.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:32.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:41:25.562" endtime="20210619 01:41:32.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:32.181" level="INFO"/>
<status status="PASS" starttime="20210619 01:41:32.180" endtime="20210619 01:41:32.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:32.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:32.181" endtime="20210619 01:41:32.182"/>
</kw>
<status status="PASS" starttime="20210619 01:41:25.562" endtime="20210619 01:41:32.182"/>
</kw>
<msg timestamp="20210619 01:41:32.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:25.562" endtime="20210619 01:41:32.182"/>
</kw>
<status status="PASS" starttime="20210619 01:41:25.561" endtime="20210619 01:41:32.183"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:32.187" level="INFO">Running command 'ozone fs -ls o3fs://95482-bucket1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:35.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:35.528" level="INFO">${output} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:41 o3fs://95482-bucket1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:41:32.185" endtime="20210619 01:41:35.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:35.530" level="INFO">-rw-rw-rw-   3 root root      17526 2021-06-19 01:41 o3fs://95482-bucket1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:41:35.529" endtime="20210619 01:41:35.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:35.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:35.530" endtime="20210619 01:41:35.531"/>
</kw>
<status status="PASS" starttime="20210619 01:41:32.184" endtime="20210619 01:41:35.531"/>
</kw>
<msg timestamp="20210619 01:41:35.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:32.184" endtime="20210619 01:41:35.531"/>
</kw>
<msg timestamp="20210619 01:41:35.531" level="INFO">${result} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:41 o3fs://95482-bucket1-o3fs.fstest1.om/o3fs.txt</msg>
<status status="PASS" starttime="20210619 01:41:32.183" endtime="20210619 01:41:35.532"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:41:35.532" endtime="20210619 01:41:35.532"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:41:25.560" endtime="20210619 01:41:35.532"/>
</test>
<test id="s1-s5-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:35.537" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://95482-bucket1-o3fs.fstest1.om//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:39.179" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:41:39.179" level="INFO">${output} = copyFromLocal: `o3fs://95482-bucket1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210619 01:41:35.535" endtime="20210619 01:41:39.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:39.181" level="INFO">copyFromLocal: `o3fs://95482-bucket1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210619 01:41:39.180" endtime="20210619 01:41:39.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:39.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:39.181" endtime="20210619 01:41:39.182"/>
</kw>
<msg timestamp="20210619 01:41:39.182" level="INFO">${result} = copyFromLocal: `o3fs://95482-bucket1-o3fs.fstest1.om/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20210619 01:41:35.534" endtime="20210619 01:41:39.182"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:41:39.182" endtime="20210619 01:41:39.183"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:41:35.533" endtime="20210619 01:41:39.183"/>
</test>
<test id="s1-s5-t21" name="Get file">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:39.188" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:39.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:39.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:41:39.186" endtime="20210619 01:41:39.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:39.192" level="INFO"/>
<status status="PASS" starttime="20210619 01:41:39.191" endtime="20210619 01:41:39.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:39.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:39.192" endtime="20210619 01:41:39.192"/>
</kw>
<status status="PASS" starttime="20210619 01:41:39.185" endtime="20210619 01:41:39.193"/>
</kw>
<msg timestamp="20210619 01:41:39.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:39.185" endtime="20210619 01:41:39.193"/>
</kw>
<status status="PASS" starttime="20210619 01:41:39.184" endtime="20210619 01:41:39.193"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:39.197" level="INFO">Running command 'ozone fs -get o3fs://95482-bucket1-o3fs.fstest1.om//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:44.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:44.435" level="INFO">${output} = 2021-06-19 01:41:42,785 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:41:42,900 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:41:39.195" endtime="20210619 01:41:44.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:44.436" level="INFO">2021-06-19 01:41:42,785 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:41:42,900 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:41:42,900 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20210619 01:41:44.435" endtime="20210619 01:41:44.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:44.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:44.437" endtime="20210619 01:41:44.437"/>
</kw>
<status status="PASS" starttime="20210619 01:41:39.195" endtime="20210619 01:41:44.438"/>
</kw>
<msg timestamp="20210619 01:41:44.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:39.194" endtime="20210619 01:41:44.438"/>
</kw>
<status status="PASS" starttime="20210619 01:41:39.194" endtime="20210619 01:41:44.438"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210619 01:41:44.439" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210619 01:41:44.438" endtime="20210619 01:41:44.439"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:41:39.184" endtime="20210619 01:41:44.439"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20210619 01:38:21.471" endtime="20210619 01:41:44.442"/>
</suite>
<suite id="s1-s6" name="ozonefs-ofs-link" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:27:23.369" level="INFO">${random} = 88666</msg>
<status status="PASS" starttime="20210619 01:27:23.369" endtime="20210619 01:27:23.369"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:27:23.370" level="INFO">${BUCKET} = 88666-link1-ofs</msg>
<status status="PASS" starttime="20210619 01:27:23.369" endtime="20210619 01:27:23.370"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:27:23.371" level="INFO">${BUCKET2} = 88666-link2-ofs</msg>
<status status="PASS" starttime="20210619 01:27:23.370" endtime="20210619 01:27:23.371"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:27:23.372" level="INFO">${BUCKET_IN_VOL2} = 88666-link3-ofs</msg>
<status status="PASS" starttime="20210619 01:27:23.371" endtime="20210619 01:27:23.372"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:27:23.376" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:27:23.376" endtime="20210619 01:27:23.376"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:27:23.377" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:27:23.376" endtime="20210619 01:27:23.377"/>
</kw>
<status status="PASS" starttime="20210619 01:27:23.375" endtime="20210619 01:27:23.377"/>
</kw>
<msg timestamp="20210619 01:27:23.377" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:27:23.374" endtime="20210619 01:27:23.377"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:27:23.380" level="INFO">${first} = /</msg>
<status status="PASS" starttime="20210619 01:27:23.379" endtime="20210619 01:27:23.380"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:27:23.381" level="INFO">${result} = /</msg>
<status status="PASS" starttime="20210619 01:27:23.381" endtime="20210619 01:27:23.381"/>
</kw>
<status status="PASS" starttime="20210619 01:27:23.379" endtime="20210619 01:27:23.381"/>
</kw>
<msg timestamp="20210619 01:27:23.382" level="INFO">${path_with_leading} = /</msg>
<status status="PASS" starttime="20210619 01:27:23.378" endtime="20210619 01:27:23.382"/>
</kw>
<status status="PASS" starttime="20210619 01:27:23.373" endtime="20210619 01:27:23.382"/>
</kw>
<msg timestamp="20210619 01:27:23.382" level="INFO">${url} = ofs://om/fstest1/88666-link1-ofs/</msg>
<status status="PASS" starttime="20210619 01:27:23.372" endtime="20210619 01:27:23.382"/>
</kw>
<msg timestamp="20210619 01:27:23.383" level="INFO">${BASE_URL} = ofs://om/fstest1/88666-link1-ofs/</msg>
<status status="PASS" starttime="20210619 01:27:23.372" endtime="20210619 01:27:23.383"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:27:23.383" level="INFO">${BASE_URL} = ofs://om/fstest1/88666-link1-ofs/</msg>
<status status="PASS" starttime="20210619 01:27:23.383" endtime="20210619 01:27:23.383"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:27:23.385" level="INFO">${DEEP_URL} = ofs://om/fstest1/88666-link1-ofs/test/ofs/dir</msg>
<status status="PASS" starttime="20210619 01:27:23.383" endtime="20210619 01:27:23.385"/>
</kw>
<status status="PASS" starttime="20210619 01:27:23.368" endtime="20210619 01:27:23.386"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:23.390" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:27.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:27.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:27:23.387" endtime="20210619 01:27:27.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:27.107" level="INFO"/>
<status status="PASS" starttime="20210619 01:27:27.107" endtime="20210619 01:27:27.108"/>
</kw>
<status status="PASS" starttime="20210619 01:27:23.386" endtime="20210619 01:27:27.108"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:27.110" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:30.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:30.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:27:27.109" endtime="20210619 01:27:30.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:30.887" level="INFO"/>
<status status="PASS" starttime="20210619 01:27:30.887" endtime="20210619 01:27:30.887"/>
</kw>
<status status="PASS" starttime="20210619 01:27:27.108" endtime="20210619 01:27:30.888"/>
</kw>
<status status="PASS" starttime="20210619 01:27:23.386" endtime="20210619 01:27:30.888"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:30.891" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:34.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:34.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:27:30.889" endtime="20210619 01:27:34.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:34.454" level="INFO"/>
<status status="PASS" starttime="20210619 01:27:34.453" endtime="20210619 01:27:34.454"/>
</kw>
<status status="PASS" starttime="20210619 01:27:30.889" endtime="20210619 01:27:34.454"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:34.458" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:37.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:37.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:27:34.455" endtime="20210619 01:27:37.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:37.879" level="INFO"/>
<status status="PASS" starttime="20210619 01:27:37.878" endtime="20210619 01:27:37.879"/>
</kw>
<status status="PASS" starttime="20210619 01:27:34.454" endtime="20210619 01:27:37.879"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:37.883" level="INFO">Running command 'ozone sh bucket create fstest1-src/88666-link1-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:41.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:41.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:27:37.881" endtime="20210619 01:27:41.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:41.374" level="INFO"/>
<status status="PASS" starttime="20210619 01:27:41.373" endtime="20210619 01:27:41.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:41.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:41.374" endtime="20210619 01:27:41.375"/>
</kw>
<status status="PASS" starttime="20210619 01:27:37.881" endtime="20210619 01:27:41.375"/>
</kw>
<msg timestamp="20210619 01:27:41.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:37.880" endtime="20210619 01:27:41.376"/>
</kw>
<status status="PASS" starttime="20210619 01:27:37.880" endtime="20210619 01:27:41.376"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:41.379" level="INFO">Running command 'ozone sh bucket create fstest1-src/88666-link2-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:44.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:44.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:27:41.377" endtime="20210619 01:27:44.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:44.853" level="INFO"/>
<status status="PASS" starttime="20210619 01:27:44.853" endtime="20210619 01:27:44.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:44.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:44.854" endtime="20210619 01:27:44.854"/>
</kw>
<status status="PASS" starttime="20210619 01:27:41.377" endtime="20210619 01:27:44.855"/>
</kw>
<msg timestamp="20210619 01:27:44.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:41.377" endtime="20210619 01:27:44.855"/>
</kw>
<status status="PASS" starttime="20210619 01:27:41.376" endtime="20210619 01:27:44.855"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:44.859" level="INFO">Running command 'ozone sh bucket create fstest2-src/88666-link3-ofs-src 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:48.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:48.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:27:44.857" endtime="20210619 01:27:48.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:48.418" level="INFO"/>
<status status="PASS" starttime="20210619 01:27:48.417" endtime="20210619 01:27:48.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:48.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:48.418" endtime="20210619 01:27:48.418"/>
</kw>
<status status="PASS" starttime="20210619 01:27:44.856" endtime="20210619 01:27:48.419"/>
</kw>
<msg timestamp="20210619 01:27:48.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:44.856" endtime="20210619 01:27:48.419"/>
</kw>
<status status="PASS" starttime="20210619 01:27:44.855" endtime="20210619 01:27:48.419"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:48.423" level="INFO">Running command 'ozone sh bucket link fstest1-src/88666-link1-ofs-src fstest1/88666-link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:51.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:51.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:27:48.421" endtime="20210619 01:27:51.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:51.909" level="INFO"/>
<status status="PASS" starttime="20210619 01:27:51.908" endtime="20210619 01:27:51.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:51.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:51.909" endtime="20210619 01:27:51.909"/>
</kw>
<status status="PASS" starttime="20210619 01:27:48.420" endtime="20210619 01:27:51.910"/>
</kw>
<msg timestamp="20210619 01:27:51.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:48.420" endtime="20210619 01:27:51.910"/>
</kw>
<status status="PASS" starttime="20210619 01:27:48.419" endtime="20210619 01:27:51.910"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:51.914" level="INFO">Running command 'ozone sh bucket link fstest1-src/88666-link2-ofs-src fstest1/88666-link2-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:55.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:55.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:27:51.912" endtime="20210619 01:27:55.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:55.437" level="INFO"/>
<status status="PASS" starttime="20210619 01:27:55.436" endtime="20210619 01:27:55.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:55.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:55.437" endtime="20210619 01:27:55.437"/>
</kw>
<status status="PASS" starttime="20210619 01:27:51.911" endtime="20210619 01:27:55.438"/>
</kw>
<msg timestamp="20210619 01:27:55.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:51.911" endtime="20210619 01:27:55.438"/>
</kw>
<status status="PASS" starttime="20210619 01:27:51.910" endtime="20210619 01:27:55.438"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:55.442" level="INFO">Running command 'ozone sh bucket link fstest2-src/88666-link3-ofs-src fstest2/88666-link3-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:58.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:58.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:27:55.440" endtime="20210619 01:27:58.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:58.979" level="INFO"/>
<status status="PASS" starttime="20210619 01:27:58.978" endtime="20210619 01:27:58.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:58.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:58.979" endtime="20210619 01:27:58.980"/>
</kw>
<status status="PASS" starttime="20210619 01:27:55.440" endtime="20210619 01:27:58.980"/>
</kw>
<msg timestamp="20210619 01:27:58.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:55.439" endtime="20210619 01:27:58.980"/>
</kw>
<status status="PASS" starttime="20210619 01:27:55.438" endtime="20210619 01:27:58.981"/>
</kw>
<status status="PASS" starttime="20210619 01:27:30.889" endtime="20210619 01:27:58.981"/>
</kw>
<status status="PASS" starttime="20210619 01:27:30.888" endtime="20210619 01:27:58.981"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:58.986" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:02.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:28:02.671" level="INFO">${output} = {
  "metadata" : { },
  "name" : "20221-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210619 01:27:58.983" endtime="20210619 01:28:02.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:02.672" level="INFO">{
  "metadata" : { },
  "name" : "20221-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:14:15.343Z",
  "modificationTime" : "2021-06-19T01:14:37.274Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "48644-source",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 3,
  "creationTime" : "2021-06-19T01:04:25.872Z",
  "modificationTime" : "2021-06-19T01:05:00.663Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "LIST" ]
  } ]
}
{
  "metadata" : { },
  "name" : "48644-target",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 10,
  "creationTime" : "2021-06-19T01:04:29.436Z",
  "modificationTime" : "2021-06-19T01:04:57.068Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-19T01:27:26.826Z",
  "modificationTime" : "2021-06-19T01:27:26.826Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-19T01:27:34.366Z",
  "modificationTime" : "2021-06-19T01:27:34.366Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:27:30.689Z",
  "modificationTime" : "2021-06-19T01:27:30.689Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:27:37.810Z",
  "modificationTime" : "2021-06-19T01:27:37.810Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest254",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:23:59.214Z",
  "modificationTime" : "2021-06-19T01:23:59.214Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest354",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:24:16.679Z",
  "modificationTime" : "2021-06-19T01:26:05.936Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "superuser1",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
  }, {
    "type" : "GROUP",
    "name" : "superuser1",
    "aclScope" : "DEFAULT",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "USER",
    "name" : "testuser2/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest479",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:23:32.141Z",
  "modificationTime" : "2021-06-19T01:23:32.141Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser2",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "fstest54",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-19T01:23:55.783Z",
  "modificationTime" : "2021-06-19T01:23:55.783Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "s3v",
  "admin" : "root",
  "owner" : "root",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2021-06-19T01:02:38.598Z",
  "modificationTime" : "2021-06-19T01:02:38.598Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-0-51285",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.180Z",
  "modificationTime" : "2021-06-19T01:03:21.180Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-1-76499",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.388Z",
  "modificationTime" : "2021-06-19T01:03:21.388Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-2-31975",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.399Z",
  "modificationTime" : "2021-06-19T01:03:21.399Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-3-25085",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.407Z",
  "modificationTime" : "2021-06-19T01:03:21.407Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-4-24180",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 5,
  "creationTime" : "2021-06-19T01:03:21.418Z",
  "modificationTime" : "2021-06-19T01:03:21.418Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}
{
  "metadata" : { },
  "name" : "vol-tgjpg",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:23:01.631Z",
  "modificationTime" : "2021-06-19T01:23:01.631Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" starttime="20210619 01:28:02.672" endtime="20210619 01:28:02.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:02.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:02.673" endtime="20210619 01:28:02.673"/>
</kw>
<status status="PASS" starttime="20210619 01:27:58.983" endtime="20210619 01:28:02.674"/>
</kw>
<msg timestamp="20210619 01:28:02.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:58.982" endtime="20210619 01:28:02.674"/>
</kw>
<msg timestamp="20210619 01:28:02.674" level="INFO">${result} = {
  "metadata" : { },
  "name" : "20221-rpcwoport2",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace"...</msg>
<status status="PASS" starttime="20210619 01:27:58.982" endtime="20210619 01:28:02.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:28:02.675" endtime="20210619 01:28:02.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:28:02.675" endtime="20210619 01:28:02.676"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser\/scm[^@]*@EXAMPLE\.COM)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:28:02.676" endtime="20210619 01:28:02.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:02.680" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:06.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:28:06.246" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "88666-link1-ofs",
  "storageType" : "DISK",
...</msg>
<status status="PASS" starttime="20210619 01:28:02.679" endtime="20210619 01:28:06.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:06.247" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "88666-link1-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:27:51.837Z",
  "modificationTime" : "2021-06-19T01:27:51.837Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "88666-link1-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "88666-link2-ofs",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:27:55.254Z",
  "modificationTime" : "2021-06-19T01:27:55.254Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "88666-link2-ofs-src",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210619 01:28:06.246" endtime="20210619 01:28:06.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:06.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:06.247" endtime="20210619 01:28:06.248"/>
</kw>
<status status="PASS" starttime="20210619 01:28:02.678" endtime="20210619 01:28:06.248"/>
</kw>
<msg timestamp="20210619 01:28:06.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:28:02.677" endtime="20210619 01:28:06.248"/>
</kw>
<msg timestamp="20210619 01:28:06.249" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest1",
  "name" : "88666-link1-ofs",
  "storageType" : "DISK",
...</msg>
<status status="PASS" starttime="20210619 01:28:02.677" endtime="20210619 01:28:06.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:28:06.249" endtime="20210619 01:28:06.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:28:06.250" endtime="20210619 01:28:06.250"/>
</kw>
<status status="PASS" starttime="20210619 01:27:58.982" endtime="20210619 01:28:06.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:06.251" level="INFO">Completed setup for ofs tests with links in fstest1/88666-link1-ofs using FS base URL: ofs://om/fstest1/88666-link1-ofs/</msg>
<status status="PASS" starttime="20210619 01:28:06.250" endtime="20210619 01:28:06.251"/>
</kw>
<status status="PASS" starttime="20210619 01:27:23.368" endtime="20210619 01:28:06.251"/>
</kw>
<test id="s1-s6-t1" name="List root">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:28:06.258" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:28:06.258" endtime="20210619 01:28:06.258"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:28:06.259" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:28:06.258" endtime="20210619 01:28:06.259"/>
</kw>
<status status="PASS" starttime="20210619 01:28:06.257" endtime="20210619 01:28:06.259"/>
</kw>
<msg timestamp="20210619 01:28:06.259" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:28:06.256" endtime="20210619 01:28:06.260"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:28:06.261" endtime="20210619 01:28:06.262"/>
</kw>
<msg timestamp="20210619 01:28:06.262" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210619 01:28:06.260" endtime="20210619 01:28:06.262"/>
</kw>
<status status="PASS" starttime="20210619 01:28:06.255" endtime="20210619 01:28:06.263"/>
</kw>
<msg timestamp="20210619 01:28:06.263" level="INFO">${url} = ofs://om/fstest1/88666-link1-ofs</msg>
<status status="PASS" starttime="20210619 01:28:06.254" endtime="20210619 01:28:06.263"/>
</kw>
<msg timestamp="20210619 01:28:06.263" level="INFO">${root} = ofs://om/fstest1/88666-link1-ofs</msg>
<status status="PASS" starttime="20210619 01:28:06.252" endtime="20210619 01:28:06.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:06.267" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/88666-link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:09.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:28:09.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:28:06.265" endtime="20210619 01:28:09.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:09.845" level="INFO"/>
<status status="PASS" starttime="20210619 01:28:09.844" endtime="20210619 01:28:09.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:09.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:09.846" endtime="20210619 01:28:09.846"/>
</kw>
<status status="PASS" starttime="20210619 01:28:06.265" endtime="20210619 01:28:09.847"/>
</kw>
<msg timestamp="20210619 01:28:09.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:28:06.264" endtime="20210619 01:28:09.847"/>
</kw>
<status status="PASS" starttime="20210619 01:28:06.263" endtime="20210619 01:28:09.847"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:28:06.251" endtime="20210619 01:28:09.847"/>
</test>
<test id="s1-s6-t2" name="List non-existent volume">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:28:09.855" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:28:09.855" endtime="20210619 01:28:09.855"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:28:09.856" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:28:09.855" endtime="20210619 01:28:09.856"/>
</kw>
<status status="PASS" starttime="20210619 01:28:09.854" endtime="20210619 01:28:09.856"/>
</kw>
<msg timestamp="20210619 01:28:09.857" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:28:09.853" endtime="20210619 01:28:09.857"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:28:09.858" endtime="20210619 01:28:09.859"/>
</kw>
<msg timestamp="20210619 01:28:09.859" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210619 01:28:09.857" endtime="20210619 01:28:09.860"/>
</kw>
<status status="PASS" starttime="20210619 01:28:09.852" endtime="20210619 01:28:09.860"/>
</kw>
<msg timestamp="20210619 01:28:09.860" level="INFO">${url} = ofs://om/no-such-volume/88666-link1-ofs</msg>
<status status="PASS" starttime="20210619 01:28:09.851" endtime="20210619 01:28:09.860"/>
</kw>
<msg timestamp="20210619 01:28:09.860" level="INFO">${url} = ofs://om/no-such-volume/88666-link1-ofs</msg>
<status status="PASS" starttime="20210619 01:28:09.849" endtime="20210619 01:28:09.860"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:09.864" level="INFO">Running command 'ozone fs -ls ofs://om/no-such-volume/88666-link1-ofs 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:13.295" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:28:13.295" level="INFO">${output} = ls: `ofs://om/no-such-volume/88666-link1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210619 01:28:09.861" endtime="20210619 01:28:13.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:13.296" level="INFO">ls: `ofs://om/no-such-volume/88666-link1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210619 01:28:13.296" endtime="20210619 01:28:13.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:13.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:13.297" endtime="20210619 01:28:13.298"/>
</kw>
<msg timestamp="20210619 01:28:13.298" level="INFO">${result} = ls: `ofs://om/no-such-volume/88666-link1-ofs': No such file or directory</msg>
<status status="PASS" starttime="20210619 01:28:09.861" endtime="20210619 01:28:13.298"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:28:13.298" endtime="20210619 01:28:13.299"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:28:09.848" endtime="20210619 01:28:13.299"/>
</test>
<test id="s1-s6-t3" name="List non-existent bucket">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:28:13.306" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:28:13.306" endtime="20210619 01:28:13.307"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:28:13.307" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:28:13.307" endtime="20210619 01:28:13.307"/>
</kw>
<status status="PASS" starttime="20210619 01:28:13.305" endtime="20210619 01:28:13.308"/>
</kw>
<msg timestamp="20210619 01:28:13.308" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:28:13.304" endtime="20210619 01:28:13.308"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:28:13.309" endtime="20210619 01:28:13.310"/>
</kw>
<msg timestamp="20210619 01:28:13.311" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210619 01:28:13.308" endtime="20210619 01:28:13.311"/>
</kw>
<status status="PASS" starttime="20210619 01:28:13.303" endtime="20210619 01:28:13.311"/>
</kw>
<msg timestamp="20210619 01:28:13.311" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20210619 01:28:13.302" endtime="20210619 01:28:13.311"/>
</kw>
<msg timestamp="20210619 01:28:13.312" level="INFO">${url} = ofs://om/fstest1/no-such-bucket</msg>
<status status="PASS" starttime="20210619 01:28:13.301" endtime="20210619 01:28:13.312"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:13.314" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/no-such-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:16.790" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:28:16.790" level="INFO">${output} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210619 01:28:13.312" endtime="20210619 01:28:16.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:16.791" level="INFO">ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210619 01:28:16.791" endtime="20210619 01:28:16.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:16.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:16.792" endtime="20210619 01:28:16.792"/>
</kw>
<msg timestamp="20210619 01:28:16.793" level="INFO">${result} = ls: `ofs://om/fstest1/no-such-bucket': No such file or directory</msg>
<status status="PASS" starttime="20210619 01:28:13.312" endtime="20210619 01:28:16.793"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:28:16.793" endtime="20210619 01:28:16.794"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:28:13.300" endtime="20210619 01:28:16.794"/>
</test>
<test id="s1-s6-t4" name="Create dir with parents">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:16.800" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/88666-link1-ofs/test/ofs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:20.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:28:20.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:28:16.798" endtime="20210619 01:28:20.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:20.443" level="INFO"/>
<status status="PASS" starttime="20210619 01:28:20.442" endtime="20210619 01:28:20.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:20.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:20.443" endtime="20210619 01:28:20.444"/>
</kw>
<status status="PASS" starttime="20210619 01:28:16.797" endtime="20210619 01:28:20.445"/>
</kw>
<msg timestamp="20210619 01:28:20.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:28:16.797" endtime="20210619 01:28:20.445"/>
</kw>
<status status="PASS" starttime="20210619 01:28:16.796" endtime="20210619 01:28:20.445"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:20.449" level="INFO">Running command 'ozone sh key list fstest1/88666-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:24.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:28:24.142" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210619 01:28:20.447" endtime="20210619 01:28:24.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:24.143" level="INFO">test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210619 01:28:24.142" endtime="20210619 01:28:24.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:24.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:24.143" endtime="20210619 01:28:24.144"/>
</kw>
<status status="PASS" starttime="20210619 01:28:20.446" endtime="20210619 01:28:24.144"/>
</kw>
<msg timestamp="20210619 01:28:24.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:28:20.446" endtime="20210619 01:28:24.145"/>
</kw>
<msg timestamp="20210619 01:28:24.145" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/</msg>
<status status="PASS" starttime="20210619 01:28:20.445" endtime="20210619 01:28:24.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:28:24.145" endtime="20210619 01:28:24.147"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:28:16.795" endtime="20210619 01:28:24.148"/>
</test>
<test id="s1-s6-t5" name="Copy from local">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:24.153" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:29.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:28:29.685" level="INFO">${output} = 2021-06-19 01:28:27,778 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:28:27,911 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:28:24.151" endtime="20210619 01:28:29.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:29.686" level="INFO">2021-06-19 01:28:27,778 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:28:27,911 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:28:27,911 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:28:28,228 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:28:28,229 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-09D0CC79CB22-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:28:28,230 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:28:29.685" endtime="20210619 01:28:29.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:29.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:29.686" endtime="20210619 01:28:29.687"/>
</kw>
<status status="PASS" starttime="20210619 01:28:24.150" endtime="20210619 01:28:29.687"/>
</kw>
<msg timestamp="20210619 01:28:29.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:28:24.150" endtime="20210619 01:28:29.688"/>
</kw>
<status status="PASS" starttime="20210619 01:28:24.149" endtime="20210619 01:28:29.688"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:29.692" level="INFO">Running command 'ozone sh key list fstest1/88666-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:33.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:28:33.527" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:28:29.690" endtime="20210619 01:28:33.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:33.529" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:28:33.528" endtime="20210619 01:28:33.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:33.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:33.529" endtime="20210619 01:28:33.530"/>
</kw>
<status status="PASS" starttime="20210619 01:28:29.689" endtime="20210619 01:28:33.530"/>
</kw>
<msg timestamp="20210619 01:28:33.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:28:29.689" endtime="20210619 01:28:33.530"/>
</kw>
<msg timestamp="20210619 01:28:33.531" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:28:29.688" endtime="20210619 01:28:33.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:28:33.531" endtime="20210619 01:28:33.531"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:33.535" level="INFO">Running command 'ozone sh key info fstest1/88666-link1-ofs/test/ofs/dir/NOTICE.txt | jq -r '.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:37.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:28:37.168" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20210619 01:28:33.533" endtime="20210619 01:28:37.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:37.169" level="INFO">3</msg>
<status status="PASS" starttime="20210619 01:28:37.168" endtime="20210619 01:28:37.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:37.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:37.169" endtime="20210619 01:28:37.170"/>
</kw>
<status status="PASS" starttime="20210619 01:28:33.533" endtime="20210619 01:28:37.171"/>
</kw>
<msg timestamp="20210619 01:28:37.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:28:33.532" endtime="20210619 01:28:37.171"/>
</kw>
<msg timestamp="20210619 01:28:37.171" level="INFO">${result} = 3</msg>
<status status="PASS" starttime="20210619 01:28:33.532" endtime="20210619 01:28:37.171"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:28:37.171" endtime="20210619 01:28:37.172"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:28:24.149" endtime="20210619 01:28:37.172"/>
</test>
<test id="s1-s6-t6" name="Put">
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:37.177" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:42.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:28:42.345" level="INFO">${output} = 2021-06-19 01:28:40,508 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:28:40,582 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:28:37.175" endtime="20210619 01:28:42.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:42.347" level="INFO">2021-06-19 01:28:40,508 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:28:40,582 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:28:40,582 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:28:40,869 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:28:40,869 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-69019B3A118F-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:28:40,870 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:28:42.346" endtime="20210619 01:28:42.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:42.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:42.347" endtime="20210619 01:28:42.348"/>
</kw>
<status status="PASS" starttime="20210619 01:28:37.175" endtime="20210619 01:28:42.348"/>
</kw>
<msg timestamp="20210619 01:28:42.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:28:37.174" endtime="20210619 01:28:42.348"/>
</kw>
<status status="PASS" starttime="20210619 01:28:37.174" endtime="20210619 01:28:42.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:42.352" level="INFO">Running command 'ozone sh key list fstest1/88666-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:46.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:28:46.256" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:28:42.350" endtime="20210619 01:28:46.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:46.258" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:28:46.257" endtime="20210619 01:28:46.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:46.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:46.258" endtime="20210619 01:28:46.259"/>
</kw>
<status status="PASS" starttime="20210619 01:28:42.350" endtime="20210619 01:28:46.259"/>
</kw>
<msg timestamp="20210619 01:28:46.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:28:42.350" endtime="20210619 01:28:46.259"/>
</kw>
<msg timestamp="20210619 01:28:46.260" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/NOTICE.txt
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:28:42.349" endtime="20210619 01:28:46.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:28:46.260" endtime="20210619 01:28:46.260"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:28:37.173" endtime="20210619 01:28:46.261"/>
</test>
<test id="s1-s6-t7" name="List">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:46.267" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:49.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:28:49.813" level="INFO">${output} = Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:28 ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-19 01:28 ofs://om/fstest1/88666-...</msg>
<status status="PASS" starttime="20210619 01:28:46.265" endtime="20210619 01:28:49.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:49.814" level="INFO">Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:28 ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-19 01:28 ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:28:49.813" endtime="20210619 01:28:49.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:49.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:49.814" endtime="20210619 01:28:49.815"/>
</kw>
<status status="PASS" starttime="20210619 01:28:46.264" endtime="20210619 01:28:49.815"/>
</kw>
<msg timestamp="20210619 01:28:49.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:28:46.264" endtime="20210619 01:28:49.816"/>
</kw>
<msg timestamp="20210619 01:28:49.816" level="INFO">${result} = Found 2 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:28 ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/NOTICE.txt
-rw-rw-rw-   3 root root      17526 2021-06-19 01:28 ofs://om/fstest1/88666-...</msg>
<status status="PASS" starttime="20210619 01:28:46.263" endtime="20210619 01:28:49.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:28:49.816" endtime="20210619 01:28:49.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:28:49.817" endtime="20210619 01:28:49.817"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:28:46.261" endtime="20210619 01:28:49.818"/>
</test>
<test id="s1-s6-t8" name="Move">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:49.823" level="INFO">Running command 'ozone fs -mv ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/NOTICE.txt ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:53.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:28:53.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:28:49.821" endtime="20210619 01:28:53.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:53.376" level="INFO"/>
<status status="PASS" starttime="20210619 01:28:53.376" endtime="20210619 01:28:53.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:53.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:53.377" endtime="20210619 01:28:53.377"/>
</kw>
<status status="PASS" starttime="20210619 01:28:49.820" endtime="20210619 01:28:53.378"/>
</kw>
<msg timestamp="20210619 01:28:53.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:28:49.820" endtime="20210619 01:28:53.378"/>
</kw>
<status status="PASS" starttime="20210619 01:28:49.819" endtime="20210619 01:28:53.378"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:53.382" level="INFO">Running command 'ozone sh key list fstest1/88666-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:28:57.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:28:57.132" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:28:53.380" endtime="20210619 01:28:57.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:28:57.133" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:28:57.132" endtime="20210619 01:28:57.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:28:57.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:28:57.133" endtime="20210619 01:28:57.134"/>
</kw>
<status status="PASS" starttime="20210619 01:28:53.380" endtime="20210619 01:28:57.134"/>
</kw>
<msg timestamp="20210619 01:28:57.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:28:53.379" endtime="20210619 01:28:57.134"/>
</kw>
<msg timestamp="20210619 01:28:57.135" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:28:53.378" endtime="20210619 01:28:57.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:28:57.135" endtime="20210619 01:28:57.135"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:28:57.136" endtime="20210619 01:28:57.136"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:28:49.818" endtime="20210619 01:28:57.136"/>
</test>
<test id="s1-s6-t9" name="Copy within FS">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:28:57.141" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:00.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:00.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:28:57.139" endtime="20210619 01:29:00.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:00.761" level="INFO"/>
<status status="PASS" starttime="20210619 01:29:00.761" endtime="20210619 01:29:00.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:00.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:00.762" endtime="20210619 01:29:00.762"/>
</kw>
<status status="PASS" starttime="20210619 01:28:57.138" endtime="20210619 01:29:00.763"/>
</kw>
<msg timestamp="20210619 01:29:00.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:28:57.138" endtime="20210619 01:29:00.763"/>
</kw>
<status status="PASS" starttime="20210619 01:28:57.137" endtime="20210619 01:29:00.763"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:00.768" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/MOVED.TXT ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:06.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:06.366" level="INFO">${output} = 2021-06-19 01:29:04,207 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:29:04,325 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:29:00.766" endtime="20210619 01:29:06.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:06.368" level="INFO">2021-06-19 01:29:04,207 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:29:04,325 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:29:04,325 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:29:05,588 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:29:05,589 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-D5F759193600-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:29:05,590 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:29:06.367" endtime="20210619 01:29:06.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:06.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:06.368" endtime="20210619 01:29:06.369"/>
</kw>
<status status="PASS" starttime="20210619 01:29:00.765" endtime="20210619 01:29:06.369"/>
</kw>
<msg timestamp="20210619 01:29:06.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:00.765" endtime="20210619 01:29:06.370"/>
</kw>
<status status="PASS" starttime="20210619 01:29:00.764" endtime="20210619 01:29:06.370"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:06.374" level="INFO">Running command 'ozone sh key list fstest1/88666-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:10.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:10.041" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:29:06.372" endtime="20210619 01:29:10.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:10.042" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:29:10.042" endtime="20210619 01:29:10.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:10.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:10.043" endtime="20210619 01:29:10.043"/>
</kw>
<status status="PASS" starttime="20210619 01:29:06.371" endtime="20210619 01:29:10.044"/>
</kw>
<msg timestamp="20210619 01:29:10.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:06.371" endtime="20210619 01:29:10.044"/>
</kw>
<msg timestamp="20210619 01:29:10.044" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/
test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:29:06.370" endtime="20210619 01:29:10.044"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:29:10.044" endtime="20210619 01:29:10.045"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:10.049" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:13.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:13.372" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:29:10.047" endtime="20210619 01:29:13.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:13.373" level="INFO">Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:29:13.373" endtime="20210619 01:29:13.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:13.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:13.374" endtime="20210619 01:29:13.374"/>
</kw>
<status status="PASS" starttime="20210619 01:29:10.046" endtime="20210619 01:29:13.375"/>
</kw>
<msg timestamp="20210619 01:29:13.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:10.046" endtime="20210619 01:29:13.375"/>
</kw>
<msg timestamp="20210619 01:29:13.375" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 root root      17526 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:29:10.045" endtime="20210619 01:29:13.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:29:13.375" endtime="20210619 01:29:13.376"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:29:13.376" endtime="20210619 01:29:13.377"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:28:57.137" endtime="20210619 01:29:13.377"/>
</test>
<test id="s1-s6-t10" name="Cat file">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:13.382" level="INFO">Running command 'ozone fs -cat ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:18.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:18.655" level="INFO">${output} = 2021-06-19 01:29:16,922 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:29:17,018 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:29:13.380" endtime="20210619 01:29:18.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:18.656" level="INFO">2021-06-19 01:29:16,922 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:29:17,018 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:29:17,018 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
Apache Ozone
Copyright 2021 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

log4j:log4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

com.google.inject.extensions:guice-multibindings
====================


Google Guice - Extensions - MultiBindings
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20210619 01:29:18.655" endtime="20210619 01:29:18.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:18.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:18.657" endtime="20210619 01:29:18.658"/>
</kw>
<status status="PASS" starttime="20210619 01:29:13.379" endtime="20210619 01:29:18.658"/>
</kw>
<msg timestamp="20210619 01:29:18.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:13.379" endtime="20210619 01:29:18.658"/>
</kw>
<status status="PASS" starttime="20210619 01:29:13.378" endtime="20210619 01:29:18.659"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:29:13.377" endtime="20210619 01:29:18.660"/>
</test>
<test id="s1-s6-t11" name="Delete file">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:18.665" level="INFO">Running command 'ozone fs -rm -skipTrash ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:22.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:22.142" level="INFO">${output} = Deleted ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:29:18.663" endtime="20210619 01:29:22.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:22.143" level="INFO">Deleted ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:29:22.142" endtime="20210619 01:29:22.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:22.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:22.144" endtime="20210619 01:29:22.144"/>
</kw>
<status status="PASS" starttime="20210619 01:29:18.662" endtime="20210619 01:29:22.145"/>
</kw>
<msg timestamp="20210619 01:29:22.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:18.662" endtime="20210619 01:29:22.145"/>
</kw>
<status status="PASS" starttime="20210619 01:29:18.661" endtime="20210619 01:29:22.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:22.150" level="INFO">Running command 'ozone sh key list fstest1/88666-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:26.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:26.022" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210619 01:29:22.148" endtime="20210619 01:29:26.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:26.023" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210619 01:29:26.022" endtime="20210619 01:29:26.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:26.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:26.023" endtime="20210619 01:29:26.024"/>
</kw>
<status status="PASS" starttime="20210619 01:29:22.146" endtime="20210619 01:29:26.024"/>
</kw>
<msg timestamp="20210619 01:29:26.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:22.146" endtime="20210619 01:29:26.025"/>
</kw>
<msg timestamp="20210619 01:29:26.025" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/subdir1/</msg>
<status status="PASS" starttime="20210619 01:29:22.145" endtime="20210619 01:29:26.025"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:29:26.025" endtime="20210619 01:29:26.026"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:29:18.661" endtime="20210619 01:29:26.026"/>
</test>
<test id="s1-s6-t12" name="Delete dir">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:26.031" level="INFO">Running command 'ozone fs -rmdir ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:29.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:29.681" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:29:26.029" endtime="20210619 01:29:29.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:29.683" level="INFO"/>
<status status="PASS" starttime="20210619 01:29:29.682" endtime="20210619 01:29:29.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:29.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:29.683" endtime="20210619 01:29:29.684"/>
</kw>
<status status="PASS" starttime="20210619 01:29:26.028" endtime="20210619 01:29:29.684"/>
</kw>
<msg timestamp="20210619 01:29:29.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:26.028" endtime="20210619 01:29:29.684"/>
</kw>
<msg timestamp="20210619 01:29:29.685" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:29:26.028" endtime="20210619 01:29:29.685"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:29.689" level="INFO">Running command 'ozone sh key list fstest1/88666-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:33.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:33.389" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:29:29.687" endtime="20210619 01:29:33.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:33.390" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:29:33.389" endtime="20210619 01:29:33.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:33.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:33.390" endtime="20210619 01:29:33.391"/>
</kw>
<status status="PASS" starttime="20210619 01:29:29.686" endtime="20210619 01:29:33.391"/>
</kw>
<msg timestamp="20210619 01:29:33.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:29.686" endtime="20210619 01:29:33.391"/>
</kw>
<msg timestamp="20210619 01:29:33.392" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20210619 01:29:29.685" endtime="20210619 01:29:33.392"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:29:33.392" endtime="20210619 01:29:33.392"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:29:26.027" endtime="20210619 01:29:33.393"/>
</test>
<test id="s1-s6-t13" name="Touch file">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:33.398" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:37.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:37.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:29:33.396" endtime="20210619 01:29:37.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:37.103" level="INFO"/>
<status status="PASS" starttime="20210619 01:29:37.102" endtime="20210619 01:29:37.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:37.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:37.103" endtime="20210619 01:29:37.104"/>
</kw>
<status status="PASS" starttime="20210619 01:29:33.395" endtime="20210619 01:29:37.104"/>
</kw>
<msg timestamp="20210619 01:29:37.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:33.395" endtime="20210619 01:29:37.105"/>
</kw>
<status status="PASS" starttime="20210619 01:29:33.394" endtime="20210619 01:29:37.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:37.111" level="INFO">Running command 'ozone sh key list fstest1/88666-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:40.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:40.769" level="INFO">${output} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210619 01:29:37.107" endtime="20210619 01:29:40.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:40.771" level="INFO">test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210619 01:29:40.770" endtime="20210619 01:29:40.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:40.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:40.771" endtime="20210619 01:29:40.772"/>
</kw>
<status status="PASS" starttime="20210619 01:29:37.106" endtime="20210619 01:29:40.772"/>
</kw>
<msg timestamp="20210619 01:29:40.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:37.106" endtime="20210619 01:29:40.773"/>
</kw>
<msg timestamp="20210619 01:29:40.773" level="INFO">${result} = test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210619 01:29:37.105" endtime="20210619 01:29:40.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:29:40.773" endtime="20210619 01:29:40.774"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:29:33.393" endtime="20210619 01:29:40.774"/>
</test>
<test id="s1-s6-t14" name="Delete file with Trash">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:40.780" level="INFO">Running command 'ozone fs -touch ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:44.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:44.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:29:40.777" endtime="20210619 01:29:44.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:44.357" level="INFO"/>
<status status="PASS" starttime="20210619 01:29:44.357" endtime="20210619 01:29:44.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:44.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:44.358" endtime="20210619 01:29:44.358"/>
</kw>
<status status="PASS" starttime="20210619 01:29:40.776" endtime="20210619 01:29:44.359"/>
</kw>
<msg timestamp="20210619 01:29:44.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:40.776" endtime="20210619 01:29:44.359"/>
</kw>
<status status="PASS" starttime="20210619 01:29:40.776" endtime="20210619 01:29:44.359"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:44.363" level="INFO">Running command 'ozone fs -rm ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:47.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:47.954" level="INFO">${output} = 2021-06-19 01:29:47,674 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:29:47,778 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210619 01:29:44.361" endtime="20210619 01:29:47.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:47.955" level="INFO">2021-06-19 01:29:47,674 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:29:47,778 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/testFile.txt' to trash at: ofs://om/fstest1/88666-link1-ofs/.Trash/root/Current/fstest1/88666-link1-ofs/test/ofs/dir/testFile.txt</msg>
<status status="PASS" starttime="20210619 01:29:47.955" endtime="20210619 01:29:47.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:47.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:47.956" endtime="20210619 01:29:47.956"/>
</kw>
<status status="PASS" starttime="20210619 01:29:44.360" endtime="20210619 01:29:47.957"/>
</kw>
<msg timestamp="20210619 01:29:47.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:44.360" endtime="20210619 01:29:47.957"/>
</kw>
<status status="PASS" starttime="20210619 01:29:44.359" endtime="20210619 01:29:47.957"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:47.961" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/88666-link1-ofs// 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:51.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:51.415" level="INFO">${output} = drwxrwxrwx   - root root          0 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/.Trash
drwxrwxrwx   - root root          0 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/.Trash/root
drwxrwxrw...</msg>
<status status="PASS" starttime="20210619 01:29:47.959" endtime="20210619 01:29:51.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:51.416" level="INFO">drwxrwxrwx   - root root          0 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/.Trash
drwxrwxrwx   - root root          0 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/.Trash/root
drwxrwxrwx   - root root          0 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/.Trash/root/Current
drwxrwxrwx   - root root          0 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/.Trash/root/Current/fstest1
drwxrwxrwx   - root root          0 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/.Trash/root/Current/fstest1/88666-link1-ofs
drwxrwxrwx   - root root          0 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/.Trash/root/Current/fstest1/88666-link1-ofs/test
drwxrwxrwx   - root root          0 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/.Trash/root/Current/fstest1/88666-link1-ofs/test/ofs
drwxrwxrwx   - root root          0 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/.Trash/root/Current/fstest1/88666-link1-ofs/test/ofs/dir
-rw-rw-rw-   3 root root          0 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/.Trash/root/Current/fstest1/88666-link1-ofs/test/ofs/dir/testFile.txt
drwxrwxrwx   - root root          0 2021-06-19 01:28 ofs://om/fstest1/88666-link1-ofs/test
drwxrwxrwx   - root root          0 2021-06-19 01:28 ofs://om/fstest1/88666-link1-ofs/test/ofs
drwxrwxrwx   - root root          0 2021-06-19 01:28 ofs://om/fstest1/88666-link1-ofs/test/ofs/dir
-rw-rw-rw-   3 root root      17526 2021-06-19 01:28 ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/MOVED.TXT
-rw-rw-rw-   3 root root      17526 2021-06-19 01:28 ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/PUTFILE.txt
-rw-rw-rw-   3 root root          0 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210619 01:29:51.415" endtime="20210619 01:29:51.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:51.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:51.416" endtime="20210619 01:29:51.417"/>
</kw>
<status status="PASS" starttime="20210619 01:29:47.958" endtime="20210619 01:29:51.417"/>
</kw>
<msg timestamp="20210619 01:29:51.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:47.958" endtime="20210619 01:29:51.418"/>
</kw>
<msg timestamp="20210619 01:29:51.418" level="INFO">${result} = drwxrwxrwx   - root root          0 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/.Trash
drwxrwxrwx   - root root          0 2021-06-19 01:29 ofs://om/fstest1/88666-link1-ofs/.Trash/root
drwxrwxrw...</msg>
<status status="PASS" starttime="20210619 01:29:47.957" endtime="20210619 01:29:51.418"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:29:51.418" endtime="20210619 01:29:51.419"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20210619 01:29:51.419" endtime="20210619 01:29:51.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:29:51.420" endtime="20210619 01:29:51.420"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:29:40.775" endtime="20210619 01:29:51.420"/>
</test>
<test id="s1-s6-t15" name="Delete recursively">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:51.426" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:54.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:54.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:29:51.424" endtime="20210619 01:29:54.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:54.774" level="INFO"/>
<status status="PASS" starttime="20210619 01:29:54.773" endtime="20210619 01:29:54.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:54.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:54.774" endtime="20210619 01:29:54.775"/>
</kw>
<status status="PASS" starttime="20210619 01:29:51.424" endtime="20210619 01:29:54.775"/>
</kw>
<msg timestamp="20210619 01:29:54.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:51.423" endtime="20210619 01:29:54.776"/>
</kw>
<status status="PASS" starttime="20210619 01:29:51.422" endtime="20210619 01:29:54.776"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:54.780" level="INFO">Running command 'ozone fs -rm -skipTrash -r ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:29:58.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:29:58.444" level="INFO">${output} = Deleted ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20210619 01:29:54.778" endtime="20210619 01:29:58.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:29:58.447" level="INFO">Deleted ofs://om/fstest1/88666-link1-ofs/test/ofs/dir/subdir2</msg>
<status status="PASS" starttime="20210619 01:29:58.445" endtime="20210619 01:29:58.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:29:58.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:29:58.447" endtime="20210619 01:29:58.448"/>
</kw>
<status status="PASS" starttime="20210619 01:29:54.777" endtime="20210619 01:29:58.448"/>
</kw>
<msg timestamp="20210619 01:29:58.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:54.777" endtime="20210619 01:29:58.448"/>
</kw>
<status status="PASS" starttime="20210619 01:29:54.776" endtime="20210619 01:29:58.449"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:29:58.452" level="INFO">Running command 'ozone sh key list fstest1/88666-link1-ofs | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:02.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:02.340" level="INFO">${output} = .Trash/
.Trash/root/
.Trash/root/210619013000/
.Trash/root/210619013000/fstest1/
.Trash/root/210619013000/fstest1/88666-link1-ofs/
.Trash/root/210619013000/fstest1/88666-link1-ofs/test/
.Trash/root/21...</msg>
<status status="PASS" starttime="20210619 01:29:58.451" endtime="20210619 01:30:02.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:02.341" level="INFO">.Trash/
.Trash/root/
.Trash/root/210619013000/
.Trash/root/210619013000/fstest1/
.Trash/root/210619013000/fstest1/88666-link1-ofs/
.Trash/root/210619013000/fstest1/88666-link1-ofs/test/
.Trash/root/210619013000/fstest1/88666-link1-ofs/test/ofs/
.Trash/root/210619013000/fstest1/88666-link1-ofs/test/ofs/dir/
.Trash/root/210619013000/fstest1/88666-link1-ofs/test/ofs/dir/testFile.txt
test/
test/ofs/
test/ofs/dir/
test/ofs/dir/MOVED.TXT
test/ofs/dir/PUTFILE.txt
test/ofs/dir/TOUCHFILE-ofs.txt</msg>
<status status="PASS" starttime="20210619 01:30:02.340" endtime="20210619 01:30:02.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:02.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:02.341" endtime="20210619 01:30:02.342"/>
</kw>
<status status="PASS" starttime="20210619 01:29:58.450" endtime="20210619 01:30:02.342"/>
</kw>
<msg timestamp="20210619 01:30:02.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:29:58.450" endtime="20210619 01:30:02.342"/>
</kw>
<msg timestamp="20210619 01:30:02.343" level="INFO">${result} = .Trash/
.Trash/root/
.Trash/root/210619013000/
.Trash/root/210619013000/fstest1/
.Trash/root/210619013000/fstest1/88666-link1-ofs/
.Trash/root/210619013000/fstest1/88666-link1-ofs/test/
.Trash/root/21...</msg>
<status status="PASS" starttime="20210619 01:29:58.449" endtime="20210619 01:30:02.343"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:30:02.343" endtime="20210619 01:30:02.344"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:29:51.421" endtime="20210619 01:30:02.344"/>
</test>
<test id="s1-s6-t16" name="List recursively">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:02.349" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:02.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:02.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:30:02.347" endtime="20210619 01:30:02.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:02.353" level="INFO"/>
<status status="PASS" starttime="20210619 01:30:02.352" endtime="20210619 01:30:02.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:02.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:02.353" endtime="20210619 01:30:02.354"/>
</kw>
<status status="PASS" starttime="20210619 01:30:02.347" endtime="20210619 01:30:02.354"/>
</kw>
<msg timestamp="20210619 01:30:02.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:02.346" endtime="20210619 01:30:02.354"/>
</kw>
<status status="PASS" starttime="20210619 01:30:02.346" endtime="20210619 01:30:02.355"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:02.358" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:02.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:02.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:30:02.356" endtime="20210619 01:30:02.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:02.362" level="INFO"/>
<status status="PASS" starttime="20210619 01:30:02.361" endtime="20210619 01:30:02.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:02.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:02.362" endtime="20210619 01:30:02.363"/>
</kw>
<status status="PASS" starttime="20210619 01:30:02.356" endtime="20210619 01:30:02.363"/>
</kw>
<msg timestamp="20210619 01:30:02.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:02.355" endtime="20210619 01:30:02.363"/>
</kw>
<status status="PASS" starttime="20210619 01:30:02.355" endtime="20210619 01:30:02.363"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:02.366" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:02.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:02.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:30:02.365" endtime="20210619 01:30:02.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:02.371" level="INFO"/>
<status status="PASS" starttime="20210619 01:30:02.370" endtime="20210619 01:30:02.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:02.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:02.371" endtime="20210619 01:30:02.372"/>
</kw>
<status status="PASS" starttime="20210619 01:30:02.364" endtime="20210619 01:30:02.372"/>
</kw>
<msg timestamp="20210619 01:30:02.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:02.364" endtime="20210619 01:30:02.372"/>
</kw>
<status status="PASS" starttime="20210619 01:30:02.363" endtime="20210619 01:30:02.372"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:02.376" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/88666-link1-ofs/testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:05.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:05.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:30:02.374" endtime="20210619 01:30:05.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:05.739" level="INFO"/>
<status status="PASS" starttime="20210619 01:30:05.737" endtime="20210619 01:30:05.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:05.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:05.739" endtime="20210619 01:30:05.740"/>
</kw>
<status status="PASS" starttime="20210619 01:30:02.373" endtime="20210619 01:30:05.740"/>
</kw>
<msg timestamp="20210619 01:30:05.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:02.373" endtime="20210619 01:30:05.740"/>
</kw>
<status status="PASS" starttime="20210619 01:30:02.372" endtime="20210619 01:30:05.741"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:05.745" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 ofs://om/fstest1/88666-link1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:10.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:10.961" level="INFO">${output} = 2021-06-19 01:30:09,129 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:30:09,263 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:30:05.743" endtime="20210619 01:30:10.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:10.963" level="INFO">2021-06-19 01:30:09,129 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:30:09,263 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:30:09,263 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:30:09,583 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:30:09,583 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-83222445EB33-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:30:09,584 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:30:10.962" endtime="20210619 01:30:10.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:10.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:10.963" endtime="20210619 01:30:10.963"/>
</kw>
<status status="PASS" starttime="20210619 01:30:05.742" endtime="20210619 01:30:10.964"/>
</kw>
<msg timestamp="20210619 01:30:10.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:05.742" endtime="20210619 01:30:10.964"/>
</kw>
<status status="PASS" starttime="20210619 01:30:05.741" endtime="20210619 01:30:10.964"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:10.968" level="INFO">Running command 'ozone fs -put NOTICE.txt ofs://om/fstest1/88666-link1-ofs/testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:16.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:16.460" level="INFO">${output} = 2021-06-19 01:30:14,536 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:30:14,661 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:30:10.967" endtime="20210619 01:30:16.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:16.461" level="INFO">2021-06-19 01:30:14,536 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:30:14,661 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:30:14,661 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:30:14,948 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:30:14,948 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-13A5893498CB-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:30:14,949 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:30:16.461" endtime="20210619 01:30:16.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:16.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:16.462" endtime="20210619 01:30:16.462"/>
</kw>
<status status="PASS" starttime="20210619 01:30:10.966" endtime="20210619 01:30:16.463"/>
</kw>
<msg timestamp="20210619 01:30:16.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:10.965" endtime="20210619 01:30:16.463"/>
</kw>
<status status="PASS" starttime="20210619 01:30:10.965" endtime="20210619 01:30:16.463"/>
</kw>
<status status="PASS" starttime="20210619 01:30:02.345" endtime="20210619 01:30:16.463"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:16.467" level="INFO">Running command 'ozone fs -ls -R ofs://om/fstest1/88666-link1-ofs/testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:19.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:19.775" level="INFO">${output} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:30 ofs://om/fstest1/88666-link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-19 01:30 ofs://om/fstest1/88666-link1-ofs/testdir1...</msg>
<status status="PASS" starttime="20210619 01:30:16.465" endtime="20210619 01:30:19.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:19.776" level="INFO">-rw-rw-rw-   3 root root      17526 2021-06-19 01:30 ofs://om/fstest1/88666-link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-19 01:30 ofs://om/fstest1/88666-link1-ofs/testdir1/localdir1
-rw-rw-rw-   3 root root      17526 2021-06-19 01:30 ofs://om/fstest1/88666-link1-ofs/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20210619 01:30:19.775" endtime="20210619 01:30:19.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:19.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:19.776" endtime="20210619 01:30:19.777"/>
</kw>
<status status="PASS" starttime="20210619 01:30:16.465" endtime="20210619 01:30:19.777"/>
</kw>
<msg timestamp="20210619 01:30:19.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:16.464" endtime="20210619 01:30:19.778"/>
</kw>
<msg timestamp="20210619 01:30:19.778" level="INFO">${result} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:30 ofs://om/fstest1/88666-link1-ofs/testdir1/NOTICE.txt
drwxrwxrwx   - root root          0 2021-06-19 01:30 ofs://om/fstest1/88666-link1-ofs/testdir1...</msg>
<status status="PASS" starttime="20210619 01:30:16.463" endtime="20210619 01:30:19.778"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:30:19.778" endtime="20210619 01:30:19.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:30:19.779" endtime="20210619 01:30:19.779"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:30:02.345" endtime="20210619 01:30:19.780"/>
</test>
<test id="s1-s6-t17" name="Copy to other bucket">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:30:19.786" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:30:19.786" endtime="20210619 01:30:19.786"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:30:19.787" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:30:19.787" endtime="20210619 01:30:19.787"/>
</kw>
<status status="PASS" starttime="20210619 01:30:19.785" endtime="20210619 01:30:19.787"/>
</kw>
<msg timestamp="20210619 01:30:19.788" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:30:19.784" endtime="20210619 01:30:19.788"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:30:19.790" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20210619 01:30:19.790" endtime="20210619 01:30:19.790"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:30:19.791" level="INFO">${result} = /testdir2</msg>
<status status="PASS" starttime="20210619 01:30:19.791" endtime="20210619 01:30:19.791"/>
</kw>
<status status="PASS" starttime="20210619 01:30:19.789" endtime="20210619 01:30:19.791"/>
</kw>
<msg timestamp="20210619 01:30:19.792" level="INFO">${path_with_leading} = /testdir2</msg>
<status status="PASS" starttime="20210619 01:30:19.788" endtime="20210619 01:30:19.792"/>
</kw>
<status status="PASS" starttime="20210619 01:30:19.783" endtime="20210619 01:30:19.793"/>
</kw>
<msg timestamp="20210619 01:30:19.793" level="INFO">${url} = ofs://om/fstest1/88666-link2-ofs/testdir2</msg>
<status status="PASS" starttime="20210619 01:30:19.782" endtime="20210619 01:30:19.793"/>
</kw>
<msg timestamp="20210619 01:30:19.794" level="INFO">${target} = ofs://om/fstest1/88666-link2-ofs/testdir2</msg>
<status status="PASS" starttime="20210619 01:30:19.781" endtime="20210619 01:30:19.794"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:19.800" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest1/88666-link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:23.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:23.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:30:19.796" endtime="20210619 01:30:23.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:23.377" level="INFO"/>
<status status="PASS" starttime="20210619 01:30:23.377" endtime="20210619 01:30:23.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:23.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:23.378" endtime="20210619 01:30:23.378"/>
</kw>
<status status="PASS" starttime="20210619 01:30:19.795" endtime="20210619 01:30:23.379"/>
</kw>
<msg timestamp="20210619 01:30:23.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:19.795" endtime="20210619 01:30:23.379"/>
</kw>
<status status="PASS" starttime="20210619 01:30:19.794" endtime="20210619 01:30:23.379"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:23.383" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/88666-link1-ofs//testdir1/localdir1 ofs://om/fstest1/88666-link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:29.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:29.154" level="INFO">${output} = 2021-06-19 01:30:27,141 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:30:27,217 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:30:23.381" endtime="20210619 01:30:29.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:29.155" level="INFO">2021-06-19 01:30:27,141 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:30:27,217 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:30:27,217 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:30:28,397 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:30:28,398 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-C9D0C3B120EF-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:30:28,399 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:30:29.154" endtime="20210619 01:30:29.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:29.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:29.155" endtime="20210619 01:30:29.156"/>
</kw>
<status status="PASS" starttime="20210619 01:30:23.381" endtime="20210619 01:30:29.156"/>
</kw>
<msg timestamp="20210619 01:30:29.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:23.380" endtime="20210619 01:30:29.157"/>
</kw>
<status status="PASS" starttime="20210619 01:30:23.379" endtime="20210619 01:30:29.157"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:29.161" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest1/88666-link2-ofs/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:32.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:32.993" level="INFO">${output} = 2021-06-19 01:30:32,611 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:30:32,737 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210619 01:30:29.159" endtime="20210619 01:30:32.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:32.994" level="INFO">2021-06-19 01:30:32,611 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:30:32,737 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest1/88666-link2-ofs/testdir2' to trash at: ofs://om/fstest1/88666-link2-ofs/.Trash/root/Current/fstest1/88666-link2-ofs/testdir2</msg>
<status status="PASS" starttime="20210619 01:30:32.993" endtime="20210619 01:30:32.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:32.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:32.994" endtime="20210619 01:30:32.995"/>
</kw>
<status status="PASS" starttime="20210619 01:30:29.158" endtime="20210619 01:30:32.995"/>
</kw>
<msg timestamp="20210619 01:30:32.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:29.158" endtime="20210619 01:30:32.996"/>
</kw>
<status status="PASS" starttime="20210619 01:30:29.157" endtime="20210619 01:30:32.996"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:30:19.780" endtime="20210619 01:30:32.996"/>
</test>
<test id="s1-s6-t18" name="Copy to other volume">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:30:33.003" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:30:33.002" endtime="20210619 01:30:33.003"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:30:33.004" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:30:33.003" endtime="20210619 01:30:33.004"/>
</kw>
<status status="PASS" starttime="20210619 01:30:33.002" endtime="20210619 01:30:33.004"/>
</kw>
<msg timestamp="20210619 01:30:33.004" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:30:33.000" endtime="20210619 01:30:33.004"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:30:33.007" level="INFO">${first} = t</msg>
<status status="PASS" starttime="20210619 01:30:33.006" endtime="20210619 01:30:33.007"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:30:33.008" level="INFO">${result} = /testdir3</msg>
<status status="PASS" starttime="20210619 01:30:33.007" endtime="20210619 01:30:33.008"/>
</kw>
<status status="PASS" starttime="20210619 01:30:33.006" endtime="20210619 01:30:33.008"/>
</kw>
<msg timestamp="20210619 01:30:33.008" level="INFO">${path_with_leading} = /testdir3</msg>
<status status="PASS" starttime="20210619 01:30:33.004" endtime="20210619 01:30:33.008"/>
</kw>
<status status="PASS" starttime="20210619 01:30:33.000" endtime="20210619 01:30:33.009"/>
</kw>
<msg timestamp="20210619 01:30:33.009" level="INFO">${url} = ofs://om/fstest2/88666-link3-ofs/testdir3</msg>
<status status="PASS" starttime="20210619 01:30:32.999" endtime="20210619 01:30:33.009"/>
</kw>
<msg timestamp="20210619 01:30:33.009" level="INFO">${target} = ofs://om/fstest2/88666-link3-ofs/testdir3</msg>
<status status="PASS" starttime="20210619 01:30:32.998" endtime="20210619 01:30:33.009"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:33.013" level="INFO">Running command 'ozone fs -mkdir -p ofs://om/fstest2/88666-link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:36.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:36.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:30:33.011" endtime="20210619 01:30:36.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:36.625" level="INFO"/>
<status status="PASS" starttime="20210619 01:30:36.624" endtime="20210619 01:30:36.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:36.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:36.625" endtime="20210619 01:30:36.626"/>
</kw>
<status status="PASS" starttime="20210619 01:30:33.011" endtime="20210619 01:30:36.626"/>
</kw>
<msg timestamp="20210619 01:30:36.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:33.010" endtime="20210619 01:30:36.627"/>
</kw>
<status status="PASS" starttime="20210619 01:30:33.010" endtime="20210619 01:30:36.627"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:36.631" level="INFO">Running command 'ozone fs -cp ofs://om/fstest1/88666-link1-ofs//testdir1/localdir1 ofs://om/fstest2/88666-link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:42.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:42.579" level="INFO">${output} = 2021-06-19 01:30:40,364 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:30:40,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:30:36.629" endtime="20210619 01:30:42.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:42.581" level="INFO">2021-06-19 01:30:40,364 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:30:40,482 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:30:40,483 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2021-06-19 01:30:41,698 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:30:41,698 [main] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-6E6B580E822E-&gt;a411567d-d83f-4a11-aecf-22afb055f4a7
2021-06-19 01:30:41,699 [main] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:30:42.580" endtime="20210619 01:30:42.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:42.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:42.581" endtime="20210619 01:30:42.582"/>
</kw>
<status status="PASS" starttime="20210619 01:30:36.628" endtime="20210619 01:30:42.582"/>
</kw>
<msg timestamp="20210619 01:30:42.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:36.628" endtime="20210619 01:30:42.583"/>
</kw>
<status status="PASS" starttime="20210619 01:30:36.627" endtime="20210619 01:30:42.583"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:42.587" level="INFO">Running command 'ozone fs -rm -r ofs://om/fstest2/88666-link3-ofs/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:46.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:46.356" level="INFO">${output} = 2021-06-19 01:30:46,005 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:30:46,158 [main] INFO fs.TrashPolicyDefault: Moved...</msg>
<status status="PASS" starttime="20210619 01:30:42.585" endtime="20210619 01:30:46.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:46.357" level="INFO">2021-06-19 01:30:46,005 [main] INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum
2021-06-19 01:30:46,158 [main] INFO fs.TrashPolicyDefault: Moved: 'ofs://om/fstest2/88666-link3-ofs/testdir3' to trash at: ofs://om/fstest2/88666-link3-ofs/.Trash/root/Current/fstest2/88666-link3-ofs/testdir3</msg>
<status status="PASS" starttime="20210619 01:30:46.356" endtime="20210619 01:30:46.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:46.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:46.357" endtime="20210619 01:30:46.358"/>
</kw>
<status status="PASS" starttime="20210619 01:30:42.585" endtime="20210619 01:30:46.358"/>
</kw>
<msg timestamp="20210619 01:30:46.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:42.584" endtime="20210619 01:30:46.359"/>
</kw>
<status status="PASS" starttime="20210619 01:30:42.583" endtime="20210619 01:30:46.359"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:30:32.997" endtime="20210619 01:30:46.359"/>
</test>
<test id="s1-s6-t19" name="List file created via shell">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:46.365" level="INFO">Running command 'ozone sh key put fstest1/88666-link1-ofs/ofs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:52.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:52.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:30:46.363" endtime="20210619 01:30:52.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:52.399" level="INFO"/>
<status status="PASS" starttime="20210619 01:30:52.399" endtime="20210619 01:30:52.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:52.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:52.400" endtime="20210619 01:30:52.400"/>
</kw>
<status status="PASS" starttime="20210619 01:30:46.362" endtime="20210619 01:30:52.401"/>
</kw>
<msg timestamp="20210619 01:30:52.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:46.362" endtime="20210619 01:30:52.401"/>
</kw>
<status status="PASS" starttime="20210619 01:30:46.361" endtime="20210619 01:30:52.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:52.405" level="INFO">Running command 'ozone fs -ls ofs://om/fstest1/88666-link1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:55.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:55.819" level="INFO">${output} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:30 ofs://om/fstest1/88666-link1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210619 01:30:52.403" endtime="20210619 01:30:55.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:55.821" level="INFO">-rw-rw-rw-   3 root root      17526 2021-06-19 01:30 ofs://om/fstest1/88666-link1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210619 01:30:55.820" endtime="20210619 01:30:55.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:55.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:55.821" endtime="20210619 01:30:55.822"/>
</kw>
<status status="PASS" starttime="20210619 01:30:52.403" endtime="20210619 01:30:55.822"/>
</kw>
<msg timestamp="20210619 01:30:55.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:52.402" endtime="20210619 01:30:55.822"/>
</kw>
<msg timestamp="20210619 01:30:55.823" level="INFO">${result} = -rw-rw-rw-   3 root root      17526 2021-06-19 01:30 ofs://om/fstest1/88666-link1-ofs/ofs.txt</msg>
<status status="PASS" starttime="20210619 01:30:52.401" endtime="20210619 01:30:55.823"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:30:55.823" endtime="20210619 01:30:55.823"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:30:46.360" endtime="20210619 01:30:55.824"/>
</test>
<test id="s1-s6-t20" name="Reject overwrite existing">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:55.828" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt ofs://om/fstest1/88666-link1-ofs/ofs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:59.554" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:30:59.554" level="INFO">${output} = copyFromLocal: `ofs://om/fstest1/88666-link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210619 01:30:55.826" endtime="20210619 01:30:59.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:59.555" level="INFO">copyFromLocal: `ofs://om/fstest1/88666-link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210619 01:30:59.555" endtime="20210619 01:30:59.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:59.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:59.556" endtime="20210619 01:30:59.556"/>
</kw>
<msg timestamp="20210619 01:30:59.557" level="INFO">${result} = copyFromLocal: `ofs://om/fstest1/88666-link1-ofs/ofs.txt': File exists</msg>
<status status="PASS" starttime="20210619 01:30:55.826" endtime="20210619 01:30:59.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:30:59.557" endtime="20210619 01:30:59.558"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:30:55.825" endtime="20210619 01:30:59.558"/>
</test>
<test id="s1-s6-t21" name="Get file">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:59.564" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:30:59.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:30:59.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:30:59.562" endtime="20210619 01:30:59.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:30:59.567" level="INFO"/>
<status status="PASS" starttime="20210619 01:30:59.567" endtime="20210619 01:30:59.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:30:59.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:30:59.567" endtime="20210619 01:30:59.568"/>
</kw>
<status status="PASS" starttime="20210619 01:30:59.561" endtime="20210619 01:30:59.568"/>
</kw>
<msg timestamp="20210619 01:30:59.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:59.560" endtime="20210619 01:30:59.569"/>
</kw>
<status status="PASS" starttime="20210619 01:30:59.559" endtime="20210619 01:30:59.569"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:30:59.573" level="INFO">Running command 'ozone fs -get ofs://om/fstest1/88666-link1-ofs/ofs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:31:04.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:31:04.715" level="INFO">${output} = 2021-06-19 01:31:03,135 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:31:03,221 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210619 01:30:59.571" endtime="20210619 01:31:04.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:31:04.716" level="INFO">2021-06-19 01:31:03,135 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-19 01:31:03,221 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:31:03,221 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20210619 01:31:04.716" endtime="20210619 01:31:04.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:31:04.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:31:04.717" endtime="20210619 01:31:04.717"/>
</kw>
<status status="PASS" starttime="20210619 01:30:59.570" endtime="20210619 01:31:04.718"/>
</kw>
<msg timestamp="20210619 01:31:04.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:30:59.570" endtime="20210619 01:31:04.718"/>
</kw>
<status status="PASS" starttime="20210619 01:30:59.569" endtime="20210619 01:31:04.718"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210619 01:31:04.719" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210619 01:31:04.718" endtime="20210619 01:31:04.719"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:30:59.558" endtime="20210619 01:31:04.719"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20210619 01:27:23.299" endtime="20210619 01:31:04.722"/>
</suite>
<suite id="s1-s7" name="s3-link" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:41:49.511" level="INFO">${random} = 71237</msg>
<status status="PASS" starttime="20210619 01:41:49.511" endtime="20210619 01:41:49.511"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:41:49.513" level="INFO">${PREFIX} = 71237</msg>
<status status="PASS" starttime="20210619 01:41:49.511" endtime="20210619 01:41:49.513"/>
</kw>
<status status="PASS" starttime="20210619 01:41:49.510" endtime="20210619 01:41:49.513"/>
</kw>
<status status="PASS" starttime="20210619 01:41:49.510" endtime="20210619 01:41:49.513"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:49.517" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:49.520" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:41:49.520" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210619 01:41:49.514" endtime="20210619 01:41:49.520"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:41:49.520" endtime="20210619 01:41:49.521"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:49.522" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:49.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:49.692" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.003'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210619 01:41:49.521" endtime="20210619 01:41:49.692"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:49.696" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:55.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:55.667" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
Pac...</msg>
<status status="PASS" starttime="20210619 01:41:49.695" endtime="20210619 01:41:55.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:55.668" level="INFO">Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210619 01:41:55.668" endtime="20210619 01:41:55.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:55.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:55.669" endtime="20210619 01:41:55.669"/>
</kw>
<status status="PASS" starttime="20210619 01:41:49.694" endtime="20210619 01:41:55.670"/>
</kw>
<msg timestamp="20210619 01:41:55.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:49.694" endtime="20210619 01:41:55.670"/>
</kw>
<status status="PASS" starttime="20210619 01:41:49.693" endtime="20210619 01:41:55.670"/>
</kw>
<status status="PASS" starttime="20210619 01:41:49.693" endtime="20210619 01:41:55.671"/>
</kw>
<status status="PASS" starttime="20210619 01:41:49.692" endtime="20210619 01:41:55.671"/>
</kw>
<status status="PASS" starttime="20210619 01:41:49.514" endtime="20210619 01:41:55.671"/>
</kw>
<status status="PASS" starttime="20210619 01:41:49.513" endtime="20210619 01:41:55.671"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:55.687" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:55.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:55.690" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20210619 01:41:55.685" endtime="20210619 01:41:55.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:55.691" level="INFO">s3g</msg>
<status status="PASS" starttime="20210619 01:41:55.691" endtime="20210619 01:41:55.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:55.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:55.691" endtime="20210619 01:41:55.692"/>
</kw>
<status status="PASS" starttime="20210619 01:41:55.684" endtime="20210619 01:41:55.692"/>
</kw>
<msg timestamp="20210619 01:41:55.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:55.684" endtime="20210619 01:41:55.693"/>
</kw>
<msg timestamp="20210619 01:41:55.693" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20210619 01:41:55.684" endtime="20210619 01:41:55.693"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:41:55.695" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:41:55.693" endtime="20210619 01:41:55.695"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:55.699" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:55.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:55.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:41:55.697" endtime="20210619 01:41:55.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:55.751" level="INFO"/>
<status status="PASS" starttime="20210619 01:41:55.750" endtime="20210619 01:41:55.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:55.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:55.751" endtime="20210619 01:41:55.751"/>
</kw>
<status status="PASS" starttime="20210619 01:41:55.697" endtime="20210619 01:41:55.752"/>
</kw>
<msg timestamp="20210619 01:41:55.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:55.696" endtime="20210619 01:41:55.752"/>
</kw>
<status status="PASS" starttime="20210619 01:41:55.696" endtime="20210619 01:41:55.752"/>
</kw>
<status status="PASS" starttime="20210619 01:41:55.695" endtime="20210619 01:41:55.752"/>
</kw>
<status status="PASS" starttime="20210619 01:41:55.683" endtime="20210619 01:41:55.753"/>
</kw>
<status status="PASS" starttime="20210619 01:41:55.676" endtime="20210619 01:41:55.753"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:55.758" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:58.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:58.895" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:41:55.755" endtime="20210619 01:41:58.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:58.896" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:41:58.896" endtime="20210619 01:41:58.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:58.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:58.896" endtime="20210619 01:41:58.897"/>
</kw>
<status status="PASS" starttime="20210619 01:41:55.755" endtime="20210619 01:41:58.897"/>
</kw>
<msg timestamp="20210619 01:41:58.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:55.754" endtime="20210619 01:41:58.898"/>
</kw>
<msg timestamp="20210619 01:41:58.898" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:41:55.754" endtime="20210619 01:41:58.898"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:41:58.899" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:41:58.898" endtime="20210619 01:41:58.899"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210619 01:41:58.900" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:41:58.899" endtime="20210619 01:41:58.900"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:41:58.901" level="INFO">${secret} = ['3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08']</msg>
<status status="PASS" starttime="20210619 01:41:58.900" endtime="20210619 01:41:58.901"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:41:58.902" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:41:58.901" endtime="20210619 01:41:58.902"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:41:58.903" level="INFO">${secret} = 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:41:58.902" endtime="20210619 01:41:58.904"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:58.908" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:59.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:59.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:41:58.906" endtime="20210619 01:41:59.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:59.248" level="INFO"/>
<status status="PASS" starttime="20210619 01:41:59.247" endtime="20210619 01:41:59.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:59.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:59.248" endtime="20210619 01:41:59.248"/>
</kw>
<status status="PASS" starttime="20210619 01:41:58.906" endtime="20210619 01:41:59.249"/>
</kw>
<msg timestamp="20210619 01:41:59.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:58.905" endtime="20210619 01:41:59.249"/>
</kw>
<status status="PASS" starttime="20210619 01:41:58.904" endtime="20210619 01:41:59.249"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:59.254" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:59.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:59.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:41:59.251" endtime="20210619 01:41:59.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:59.576" level="INFO"/>
<status status="PASS" starttime="20210619 01:41:59.576" endtime="20210619 01:41:59.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:59.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:59.577" endtime="20210619 01:41:59.577"/>
</kw>
<status status="PASS" starttime="20210619 01:41:59.250" endtime="20210619 01:41:59.578"/>
</kw>
<msg timestamp="20210619 01:41:59.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:59.250" endtime="20210619 01:41:59.578"/>
</kw>
<status status="PASS" starttime="20210619 01:41:59.249" endtime="20210619 01:41:59.578"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:59.582" level="INFO">Running command 'aws configure set aws_secret_access_key 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:41:59.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:41:59.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:41:59.580" endtime="20210619 01:41:59.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:41:59.902" level="INFO"/>
<status status="PASS" starttime="20210619 01:41:59.901" endtime="20210619 01:41:59.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:41:59.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:41:59.902" endtime="20210619 01:41:59.903"/>
</kw>
<status status="PASS" starttime="20210619 01:41:59.580" endtime="20210619 01:41:59.903"/>
</kw>
<msg timestamp="20210619 01:41:59.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:59.579" endtime="20210619 01:41:59.903"/>
</kw>
<status status="PASS" starttime="20210619 01:41:59.579" endtime="20210619 01:41:59.903"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:41:59.907" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:00.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:00.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:41:59.905" endtime="20210619 01:42:00.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:42:00.243" level="INFO"/>
<status status="PASS" starttime="20210619 01:42:00.243" endtime="20210619 01:42:00.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:42:00.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:42:00.243" endtime="20210619 01:42:00.244"/>
</kw>
<status status="PASS" starttime="20210619 01:41:59.905" endtime="20210619 01:42:00.244"/>
</kw>
<msg timestamp="20210619 01:42:00.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:41:59.904" endtime="20210619 01:42:00.245"/>
</kw>
<status status="PASS" starttime="20210619 01:41:59.904" endtime="20210619 01:42:00.245"/>
</kw>
<status status="PASS" starttime="20210619 01:41:55.753" endtime="20210619 01:42:00.245"/>
</kw>
<status status="PASS" starttime="20210619 01:41:55.753" endtime="20210619 01:42:00.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:42:00.245" endtime="20210619 01:42:00.246"/>
</kw>
<status status="PASS" starttime="20210619 01:41:55.672" endtime="20210619 01:42:00.246"/>
</kw>
<status status="PASS" starttime="20210619 01:41:55.671" endtime="20210619 01:42:00.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:42:00.247" endtime="20210619 01:42:00.247"/>
</kw>
<msg timestamp="20210619 01:42:00.247" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:42:00.246" endtime="20210619 01:42:00.247"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:42:00.248" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:42:00.247" endtime="20210619 01:42:00.248"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:00.252" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:03.969" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:42:03.971" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210619 01:42:00.249" endtime="20210619 01:42:03.971"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210619 01:42:03.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:42:03.972" endtime="20210619 01:42:03.973"/>
</kw>
<msg timestamp="20210619 01:42:03.973" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20210619 01:42:00.249" endtime="20210619 01:42:03.973"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:42:03.974" endtime="20210619 01:42:03.974"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:03.978" level="INFO">Running command 'ozone sh volume create o3://om/legacy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:07.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:07.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:42:03.976" endtime="20210619 01:42:07.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:42:07.400" level="INFO"/>
<status status="PASS" starttime="20210619 01:42:07.399" endtime="20210619 01:42:07.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:42:07.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:42:07.400" endtime="20210619 01:42:07.401"/>
</kw>
<status status="PASS" starttime="20210619 01:42:03.975" endtime="20210619 01:42:07.401"/>
</kw>
<msg timestamp="20210619 01:42:07.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:42:03.975" endtime="20210619 01:42:07.401"/>
</kw>
<status status="PASS" starttime="20210619 01:42:03.974" endtime="20210619 01:42:07.402"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:07.405" level="INFO">Running command 'ozone sh bucket create o3://om/legacy/source-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:11.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:11.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:42:07.403" endtime="20210619 01:42:11.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:42:11.042" level="INFO"/>
<status status="PASS" starttime="20210619 01:42:11.041" endtime="20210619 01:42:11.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:42:11.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:42:11.042" endtime="20210619 01:42:11.043"/>
</kw>
<status status="PASS" starttime="20210619 01:42:07.403" endtime="20210619 01:42:11.043"/>
</kw>
<msg timestamp="20210619 01:42:11.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:42:07.402" endtime="20210619 01:42:11.043"/>
</kw>
<status status="PASS" starttime="20210619 01:42:07.402" endtime="20210619 01:42:11.044"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket link o3://${OM_SERVICE_ID}/legacy/source-bucket o3://${OM_SERVICE_ID}/s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:11.048" level="INFO">Running command 'ozone sh bucket link o3://om/legacy/source-bucket o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:14.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:14.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:42:11.046" endtime="20210619 01:42:14.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:42:14.462" level="INFO"/>
<status status="PASS" starttime="20210619 01:42:14.462" endtime="20210619 01:42:14.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:42:14.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:42:14.462" endtime="20210619 01:42:14.463"/>
</kw>
<status status="PASS" starttime="20210619 01:42:11.045" endtime="20210619 01:42:14.463"/>
</kw>
<msg timestamp="20210619 01:42:14.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:42:11.045" endtime="20210619 01:42:14.464"/>
</kw>
<status status="PASS" starttime="20210619 01:42:11.044" endtime="20210619 01:42:14.464"/>
</kw>
<status status="PASS" starttime="20210619 01:42:11.044" endtime="20210619 01:42:14.464"/>
</kw>
<status status="PASS" starttime="20210619 01:42:00.249" endtime="20210619 01:42:14.464"/>
</kw>
<status status="PASS" starttime="20210619 01:42:00.248" endtime="20210619 01:42:14.464"/>
</kw>
<status status="PASS" starttime="20210619 01:41:49.509" endtime="20210619 01:42:14.465"/>
</kw>
<suite id="s1-s7-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:42:14.476" level="INFO">${random} = 16820</msg>
<status status="PASS" starttime="20210619 01:42:14.476" endtime="20210619 01:42:14.477"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:42:14.479" level="INFO">${PREFIX} = 16820</msg>
<status status="PASS" starttime="20210619 01:42:14.477" endtime="20210619 01:42:14.479"/>
</kw>
<status status="PASS" starttime="20210619 01:42:14.475" endtime="20210619 01:42:14.479"/>
</kw>
<status status="PASS" starttime="20210619 01:42:14.475" endtime="20210619 01:42:14.479"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:14.481" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:14.483" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:42:14.483" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210619 01:42:14.480" endtime="20210619 01:42:14.484"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:42:14.484" endtime="20210619 01:42:14.485"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:14.486" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:14.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:14.622" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.003'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210619 01:42:14.485" endtime="20210619 01:42:14.622"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:14.627" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:15.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:15.027" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.c...</msg>
<status status="PASS" starttime="20210619 01:42:14.625" endtime="20210619 01:42:15.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:42:15.028" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210619 01:42:15.028" endtime="20210619 01:42:15.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:42:15.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:42:15.028" endtime="20210619 01:42:15.029"/>
</kw>
<status status="PASS" starttime="20210619 01:42:14.625" endtime="20210619 01:42:15.030"/>
</kw>
<msg timestamp="20210619 01:42:15.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:42:14.624" endtime="20210619 01:42:15.030"/>
</kw>
<status status="PASS" starttime="20210619 01:42:14.624" endtime="20210619 01:42:15.030"/>
</kw>
<status status="PASS" starttime="20210619 01:42:14.624" endtime="20210619 01:42:15.030"/>
</kw>
<status status="PASS" starttime="20210619 01:42:14.623" endtime="20210619 01:42:15.030"/>
</kw>
<status status="PASS" starttime="20210619 01:42:14.479" endtime="20210619 01:42:15.030"/>
</kw>
<status status="PASS" starttime="20210619 01:42:14.479" endtime="20210619 01:42:15.031"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:15.036" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:15.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:15.039" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20210619 01:42:15.034" endtime="20210619 01:42:15.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:42:15.040" level="INFO">s3g</msg>
<status status="PASS" starttime="20210619 01:42:15.039" endtime="20210619 01:42:15.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:42:15.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:42:15.041" endtime="20210619 01:42:15.041"/>
</kw>
<status status="PASS" starttime="20210619 01:42:15.034" endtime="20210619 01:42:15.042"/>
</kw>
<msg timestamp="20210619 01:42:15.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:42:15.033" endtime="20210619 01:42:15.042"/>
</kw>
<msg timestamp="20210619 01:42:15.042" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20210619 01:42:15.033" endtime="20210619 01:42:15.042"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:42:15.044" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:42:15.042" endtime="20210619 01:42:15.044"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:15.048" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:15.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:15.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:42:15.046" endtime="20210619 01:42:15.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:42:15.055" level="INFO"/>
<status status="PASS" starttime="20210619 01:42:15.055" endtime="20210619 01:42:15.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:42:15.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:42:15.056" endtime="20210619 01:42:15.056"/>
</kw>
<status status="PASS" starttime="20210619 01:42:15.046" endtime="20210619 01:42:15.057"/>
</kw>
<msg timestamp="20210619 01:42:15.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:42:15.046" endtime="20210619 01:42:15.057"/>
</kw>
<status status="PASS" starttime="20210619 01:42:15.045" endtime="20210619 01:42:15.057"/>
</kw>
<status status="PASS" starttime="20210619 01:42:15.045" endtime="20210619 01:42:15.057"/>
</kw>
<status status="PASS" starttime="20210619 01:42:15.032" endtime="20210619 01:42:15.057"/>
</kw>
<status status="PASS" starttime="20210619 01:42:15.032" endtime="20210619 01:42:15.058"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:15.063" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:18.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:18.089" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:42:15.060" endtime="20210619 01:42:18.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:42:18.090" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:42:18.090" endtime="20210619 01:42:18.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:42:18.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:42:18.091" endtime="20210619 01:42:18.091"/>
</kw>
<status status="PASS" starttime="20210619 01:42:15.060" endtime="20210619 01:42:18.092"/>
</kw>
<msg timestamp="20210619 01:42:18.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:42:15.059" endtime="20210619 01:42:18.092"/>
</kw>
<msg timestamp="20210619 01:42:18.092" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:42:15.059" endtime="20210619 01:42:18.092"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:42:18.093" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:42:18.092" endtime="20210619 01:42:18.093"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210619 01:42:18.094" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:42:18.093" endtime="20210619 01:42:18.094"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:42:18.094" level="INFO">${secret} = ['3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08']</msg>
<status status="PASS" starttime="20210619 01:42:18.094" endtime="20210619 01:42:18.094"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:42:18.096" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:42:18.094" endtime="20210619 01:42:18.096"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:42:18.097" level="INFO">${secret} = 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:42:18.096" endtime="20210619 01:42:18.097"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:18.100" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:18.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:18.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:42:18.098" endtime="20210619 01:42:18.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:42:18.434" level="INFO"/>
<status status="PASS" starttime="20210619 01:42:18.433" endtime="20210619 01:42:18.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:42:18.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:42:18.434" endtime="20210619 01:42:18.435"/>
</kw>
<status status="PASS" starttime="20210619 01:42:18.098" endtime="20210619 01:42:18.435"/>
</kw>
<msg timestamp="20210619 01:42:18.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:42:18.098" endtime="20210619 01:42:18.435"/>
</kw>
<status status="PASS" starttime="20210619 01:42:18.097" endtime="20210619 01:42:18.436"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:18.439" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:18.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:18.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:42:18.437" endtime="20210619 01:42:18.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:42:18.757" level="INFO"/>
<status status="PASS" starttime="20210619 01:42:18.756" endtime="20210619 01:42:18.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:42:18.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:42:18.757" endtime="20210619 01:42:18.758"/>
</kw>
<status status="PASS" starttime="20210619 01:42:18.437" endtime="20210619 01:42:18.758"/>
</kw>
<msg timestamp="20210619 01:42:18.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:42:18.436" endtime="20210619 01:42:18.758"/>
</kw>
<status status="PASS" starttime="20210619 01:42:18.436" endtime="20210619 01:42:18.759"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:18.762" level="INFO">Running command 'aws configure set aws_secret_access_key 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:19.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:19.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:42:18.760" endtime="20210619 01:42:19.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:42:19.094" level="INFO"/>
<status status="PASS" starttime="20210619 01:42:19.093" endtime="20210619 01:42:19.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:42:19.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:42:19.094" endtime="20210619 01:42:19.095"/>
</kw>
<status status="PASS" starttime="20210619 01:42:18.760" endtime="20210619 01:42:19.095"/>
</kw>
<msg timestamp="20210619 01:42:19.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:42:18.759" endtime="20210619 01:42:19.096"/>
</kw>
<status status="PASS" starttime="20210619 01:42:18.759" endtime="20210619 01:42:19.096"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:19.099" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:19.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:19.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:42:19.098" endtime="20210619 01:42:19.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:42:19.417" level="INFO"/>
<status status="PASS" starttime="20210619 01:42:19.416" endtime="20210619 01:42:19.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:42:19.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:42:19.417" endtime="20210619 01:42:19.418"/>
</kw>
<status status="PASS" starttime="20210619 01:42:19.097" endtime="20210619 01:42:19.418"/>
</kw>
<msg timestamp="20210619 01:42:19.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:42:19.097" endtime="20210619 01:42:19.418"/>
</kw>
<status status="PASS" starttime="20210619 01:42:19.096" endtime="20210619 01:42:19.419"/>
</kw>
<status status="PASS" starttime="20210619 01:42:15.058" endtime="20210619 01:42:19.419"/>
</kw>
<status status="PASS" starttime="20210619 01:42:15.058" endtime="20210619 01:42:19.419"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:42:19.419" endtime="20210619 01:42:19.420"/>
</kw>
<status status="PASS" starttime="20210619 01:42:15.031" endtime="20210619 01:42:19.420"/>
</kw>
<status status="PASS" starttime="20210619 01:42:15.031" endtime="20210619 01:42:19.420"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:42:19.421" endtime="20210619 01:42:19.421"/>
</kw>
<msg timestamp="20210619 01:42:19.421" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:42:19.420" endtime="20210619 01:42:19.421"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:42:19.422" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:42:19.421" endtime="20210619 01:42:19.422"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:19.425" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:42:23.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:23.737" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210619 01:42:19.423" endtime="20210619 01:42:23.738"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:42:23.738" endtime="20210619 01:42:23.739"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:42:23.739" endtime="20210619 01:42:23.739"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:42:23.739" endtime="20210619 01:42:23.740"/>
</kw>
<msg timestamp="20210619 01:42:23.740" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210619 01:42:19.423" endtime="20210619 01:42:23.740"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210619 01:42:23.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:42:23.740" endtime="20210619 01:42:23.741"/>
</kw>
<status status="PASS" starttime="20210619 01:42:19.423" endtime="20210619 01:42:23.741"/>
</kw>
<status status="PASS" starttime="20210619 01:42:19.422" endtime="20210619 01:42:23.741"/>
</kw>
<status status="PASS" starttime="20210619 01:42:14.475" endtime="20210619 01:42:23.741"/>
</kw>
<test id="s1-s7-s1-t1" name="File upload and directory list">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:23.746" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210619 01:42:23.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:42:23.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:42:23.744" endtime="20210619 01:42:23.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:42:23.751" level="INFO"/>
<status status="PASS" starttime="20210619 01:42:23.750" endtime="20210619 01:42:23.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:42:23.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:42:23.751" endtime="20210619 01:42:23.752"/>
</kw>
<status status="PASS" starttime="20210619 01:42:23.744" endtime="20210619 01:42:23.752"/>
</kw>
<msg timestamp="20210619 01:42:23.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:42:23.743" endtime="20210619 01:42:23.753"/>
</kw>
<status status="PASS" starttime="20210619 01:42:23.743" endtime="20210619 01:42:23.753"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:42:23.757" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:25.052" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:44:25.052" level="INFO">${output} = Completed 29 Bytes/29 Bytes (0 Bytes/s) with 1 file(s) remaining
upload failed: ../../tmp/testfile to s3://link/testfile An error occurred (500) when calling the PutObject operation (reached max retri...</msg>
<status status="PASS" starttime="20210619 01:42:23.755" endtime="20210619 01:44:25.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:44:25.053" level="INFO">Completed 29 Bytes/29 Bytes (0 Bytes/s) with 1 file(s) remaining
upload failed: ../../tmp/testfile to s3://link/testfile An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:44:25.052" endtime="20210619 01:44:25.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:44:25.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:44:25.054" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210619 01:44:25.054" endtime="20210619 01:44:25.054"/>
</kw>
<status status="FAIL" starttime="20210619 01:42:23.755" endtime="20210619 01:44:25.055"/>
</kw>
<msg timestamp="20210619 01:44:25.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:42:23.754" endtime="20210619 01:44:25.055"/>
</kw>
<status status="FAIL" starttime="20210619 01:42:23.754" endtime="20210619 01:44:25.055"/>
</kw>
<status status="FAIL" starttime="20210619 01:42:23.753" endtime="20210619 01:44:25.055"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:44:25.056" endtime="20210619 01:44:25.056"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<status status="NOT RUN" starttime="20210619 01:44:25.056" endtime="20210619 01:44:25.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:44:25.056" endtime="20210619 01:44:25.056"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<status status="NOT RUN" starttime="20210619 01:44:25.056" endtime="20210619 01:44:25.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:44:25.057" endtime="20210619 01:44:25.057"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:44:25.057" endtime="20210619 01:44:25.057"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:44:25.057" endtime="20210619 01:44:25.057"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<status status="NOT RUN" starttime="20210619 01:44:25.057" endtime="20210619 01:44:25.057"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:44:25.058" endtime="20210619 01:44:25.058"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:44:25.058" endtime="20210619 01:44:25.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:44:25.059" endtime="20210619 01:44:25.059"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<status status="NOT RUN" starttime="20210619 01:44:25.059" endtime="20210619 01:44:25.059"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:44:25.059" endtime="20210619 01:44:25.059"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:44:25.059" endtime="20210619 01:44:25.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:44:25.060" endtime="20210619 01:44:25.060"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:42:23.742" endtime="20210619 01:44:25.060">1 != 0</status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20210619 01:42:14.465" endtime="20210619 01:44:25.061"/>
</suite>
<suite id="s1-s7-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:44:25.079" level="INFO">${random} = 88393</msg>
<status status="PASS" starttime="20210619 01:44:25.079" endtime="20210619 01:44:25.079"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:44:25.081" level="INFO">${PREFIX} = 88393</msg>
<status status="PASS" starttime="20210619 01:44:25.079" endtime="20210619 01:44:25.081"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.078" endtime="20210619 01:44:25.081"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.078" endtime="20210619 01:44:25.081"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:25.084" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:25.086" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:44:25.086" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210619 01:44:25.082" endtime="20210619 01:44:25.086"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:44:25.087" endtime="20210619 01:44:25.087"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:25.090" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:25.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:44:25.228" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.003'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210619 01:44:25.087" endtime="20210619 01:44:25.228"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:25.233" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:25.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:44:25.633" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.c...</msg>
<status status="PASS" starttime="20210619 01:44:25.232" endtime="20210619 01:44:25.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:44:25.634" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210619 01:44:25.634" endtime="20210619 01:44:25.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:44:25.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:44:25.634" endtime="20210619 01:44:25.635"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.231" endtime="20210619 01:44:25.635"/>
</kw>
<msg timestamp="20210619 01:44:25.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:44:25.231" endtime="20210619 01:44:25.636"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.230" endtime="20210619 01:44:25.636"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.230" endtime="20210619 01:44:25.636"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.229" endtime="20210619 01:44:25.636"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.082" endtime="20210619 01:44:25.636"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.082" endtime="20210619 01:44:25.636"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:25.641" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:25.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:44:25.644" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20210619 01:44:25.640" endtime="20210619 01:44:25.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:44:25.645" level="INFO">s3g</msg>
<status status="PASS" starttime="20210619 01:44:25.645" endtime="20210619 01:44:25.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:44:25.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:44:25.646" endtime="20210619 01:44:25.646"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.639" endtime="20210619 01:44:25.647"/>
</kw>
<msg timestamp="20210619 01:44:25.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:44:25.639" endtime="20210619 01:44:25.647"/>
</kw>
<msg timestamp="20210619 01:44:25.647" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20210619 01:44:25.638" endtime="20210619 01:44:25.647"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:44:25.649" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:44:25.647" endtime="20210619 01:44:25.649"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:25.654" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:25.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:44:25.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:44:25.652" endtime="20210619 01:44:25.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:44:25.662" level="INFO"/>
<status status="PASS" starttime="20210619 01:44:25.661" endtime="20210619 01:44:25.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:44:25.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:44:25.662" endtime="20210619 01:44:25.662"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.651" endtime="20210619 01:44:25.663"/>
</kw>
<msg timestamp="20210619 01:44:25.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:44:25.651" endtime="20210619 01:44:25.663"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.650" endtime="20210619 01:44:25.663"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.650" endtime="20210619 01:44:25.663"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.638" endtime="20210619 01:44:25.664"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.638" endtime="20210619 01:44:25.664"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:25.667" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:28.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:44:28.924" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:44:25.666" endtime="20210619 01:44:28.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:44:28.925" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:44:28.924" endtime="20210619 01:44:28.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:44:28.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:44:28.925" endtime="20210619 01:44:28.926"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.665" endtime="20210619 01:44:28.926"/>
</kw>
<msg timestamp="20210619 01:44:28.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:44:25.665" endtime="20210619 01:44:28.926"/>
</kw>
<msg timestamp="20210619 01:44:28.927" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:44:25.665" endtime="20210619 01:44:28.927"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:44:28.927" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:44:28.927" endtime="20210619 01:44:28.928"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210619 01:44:28.928" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:44:28.928" endtime="20210619 01:44:28.928"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:44:28.929" level="INFO">${secret} = ['3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08']</msg>
<status status="PASS" starttime="20210619 01:44:28.928" endtime="20210619 01:44:28.929"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:44:28.930" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:44:28.929" endtime="20210619 01:44:28.930"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:44:28.932" level="INFO">${secret} = 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:44:28.931" endtime="20210619 01:44:28.932"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:28.935" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:29.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:44:29.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:44:28.933" endtime="20210619 01:44:29.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:44:29.266" level="INFO"/>
<status status="PASS" starttime="20210619 01:44:29.265" endtime="20210619 01:44:29.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:44:29.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:44:29.266" endtime="20210619 01:44:29.267"/>
</kw>
<status status="PASS" starttime="20210619 01:44:28.933" endtime="20210619 01:44:29.267"/>
</kw>
<msg timestamp="20210619 01:44:29.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:44:28.933" endtime="20210619 01:44:29.267"/>
</kw>
<status status="PASS" starttime="20210619 01:44:28.932" endtime="20210619 01:44:29.268"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:29.271" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:29.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:44:29.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:44:29.269" endtime="20210619 01:44:29.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:44:29.611" level="INFO"/>
<status status="PASS" starttime="20210619 01:44:29.610" endtime="20210619 01:44:29.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:44:29.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:44:29.611" endtime="20210619 01:44:29.612"/>
</kw>
<status status="PASS" starttime="20210619 01:44:29.269" endtime="20210619 01:44:29.612"/>
</kw>
<msg timestamp="20210619 01:44:29.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:44:29.268" endtime="20210619 01:44:29.613"/>
</kw>
<status status="PASS" starttime="20210619 01:44:29.268" endtime="20210619 01:44:29.613"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:29.616" level="INFO">Running command 'aws configure set aws_secret_access_key 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:29.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:44:29.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:44:29.615" endtime="20210619 01:44:29.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:44:29.937" level="INFO"/>
<status status="PASS" starttime="20210619 01:44:29.937" endtime="20210619 01:44:29.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:44:29.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:44:29.938" endtime="20210619 01:44:29.938"/>
</kw>
<status status="PASS" starttime="20210619 01:44:29.614" endtime="20210619 01:44:29.939"/>
</kw>
<msg timestamp="20210619 01:44:29.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:44:29.614" endtime="20210619 01:44:29.939"/>
</kw>
<status status="PASS" starttime="20210619 01:44:29.613" endtime="20210619 01:44:29.939"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:29.942" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:30.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:44:30.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:44:29.941" endtime="20210619 01:44:30.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:44:30.270" level="INFO"/>
<status status="PASS" starttime="20210619 01:44:30.269" endtime="20210619 01:44:30.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:44:30.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:44:30.270" endtime="20210619 01:44:30.271"/>
</kw>
<status status="PASS" starttime="20210619 01:44:29.940" endtime="20210619 01:44:30.271"/>
</kw>
<msg timestamp="20210619 01:44:30.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:44:29.940" endtime="20210619 01:44:30.271"/>
</kw>
<status status="PASS" starttime="20210619 01:44:29.939" endtime="20210619 01:44:30.271"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.664" endtime="20210619 01:44:30.272"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.664" endtime="20210619 01:44:30.272"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:44:30.272" endtime="20210619 01:44:30.272"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.637" endtime="20210619 01:44:30.273"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.637" endtime="20210619 01:44:30.273"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:44:30.273" endtime="20210619 01:44:30.274"/>
</kw>
<msg timestamp="20210619 01:44:30.274" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:44:30.273" endtime="20210619 01:44:30.274"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:44:30.274" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:44:30.274" endtime="20210619 01:44:30.275"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:30.278" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:34.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:44:34.014" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210619 01:44:30.276" endtime="20210619 01:44:34.014"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:44:34.015" endtime="20210619 01:44:34.015"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:44:34.015" endtime="20210619 01:44:34.016"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:44:34.016" endtime="20210619 01:44:34.017"/>
</kw>
<msg timestamp="20210619 01:44:34.017" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210619 01:44:30.276" endtime="20210619 01:44:34.017"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210619 01:44:34.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:44:34.017" endtime="20210619 01:44:34.018"/>
</kw>
<status status="PASS" starttime="20210619 01:44:30.275" endtime="20210619 01:44:34.018"/>
</kw>
<status status="PASS" starttime="20210619 01:44:30.275" endtime="20210619 01:44:34.018"/>
</kw>
<status status="PASS" starttime="20210619 01:44:25.078" endtime="20210619 01:44:34.018"/>
</kw>
<test id="s1-s7-s2-t1" name="Bobo3 Client Test">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 /opt/hadoop/smoketest/s3/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:34.025" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:57.095" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:44:57.095" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... ERROR
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ...</msg>
<status status="PASS" starttime="20210619 01:44:34.021" endtime="20210619 01:44:57.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:44:57.096" level="INFO">test_create_bucket (__main__.TestBotoClient) ... ERROR
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ERROR
test_download_file (__main__.TestBotoClient) ... ERROR:root:An error occurred (404) when calling the HeadObject operation: Not Found
ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ERROR:root:An error occurred (404) when calling the HeadObject operation: Not Found
ok
test_multi_uploads (__main__.TestBotoClient) ... ERROR:root:An error occurred (500) when calling the UploadPartCopy operation (reached max retries: 4): Internal Server Error
ok

======================================================================
ERROR: test_create_bucket (__main__.TestBotoClient)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/boto3/s3/transfer.py", line 279, in upload_file
    future.result()
  File "/usr/local/lib/python3.6/site-packages/s3transfer/futures.py", line 106, in result
    return self._coordinator.result()
  File "/usr/local/lib/python3.6/site-packages/s3transfer/futures.py", line 265, in result
    raise self._exception
  File "/usr/local/lib/python3.6/site-packages/s3transfer/tasks.py", line 126, in __call__
    return self._execute_main(kwargs)
  File "/usr/local/lib/python3.6/site-packages/s3transfer/tasks.py", line 150, in _execute_main
    return_value = self._main(**kwargs)
  File "/usr/local/lib/python3.6/site-packages/s3transfer/upload.py", line 692, in _main
    client.put_object(Bucket=bucket, Key=key, Body=body, **extra_args)
  File "/usr/local/lib/python3.6/site-packages/botocore/client.py", line 357, in _api_call
    return self._make_api_call(operation_name, kwargs)
  File "/usr/local/lib/python3.6/site-packages/botocore/client.py", line 676, in _make_api_call
    raise error_class(parsed_response, operation_name)
botocore.exceptions.ClientError: An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/hadoop/smoketest/s3/boto_client.py", line 59, in setUp
    response = self.s3_client.upload_file("README.md", str(self.target_bucket), "README3.md")
  File "/usr/local/lib/python3.6/site-packages/boto3/s3/inject.py", line 131, in upload_file
    extra_args=ExtraArgs, callback=Callback)
  File "/usr/local/lib/python3.6/site-packages/boto3/s3/transfer.py", line 287, in upload_file
    filename, '/'.join([bucket, key]), e))
boto3.exceptions.S3UploadFailedError: Failed to upload README.md to link/README3.md: An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error

======================================================================
ERROR: test_upload_file (__main__.TestBotoClient)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/boto3/s3/transfer.py", line 279, in upload_file
    future.result()
  File "/usr/local/lib/python3.6/site-packages/s3transfer/futures.py", line 106, in result
    return self._coordinator.result()
  File "/usr/local/lib/python3.6/site-packages/s3transfer/futures.py", line 265, in result
    raise self._exception
  File "/usr/local/lib/python3.6/site-packages/s3transfer/tasks.py", line 126, in __call__
    return self._execute_main(kwargs)
  File "/usr/local/lib/python3.6/site-packages/s3transfer/tasks.py", line 150, in _execute_main
    return_value = self._main(**kwargs)
  File "/usr/local/lib/python3.6/site-packages/s3transfer/upload.py", line 692, in _main
    client.put_object(Bucket=bucket, Key=key, Body=body, **extra_args)
  File "/usr/local/lib/python3.6/site-packages/botocore/client.py", line 357, in _api_call
    return self._make_api_call(operation_name, kwargs)
  File "/usr/local/lib/python3.6/site-packages/botocore/client.py", line 676, in _make_api_call
    raise error_class(parsed_response, operation_name)
botocore.exceptions.ClientError: An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/hadoop/smoketest/s3/boto_client.py", line 131, in test_upload_file
    self.s3.Bucket(str(self.target_bucket)).upload_file('./README.md','README1.md')
  File "/usr/local/lib/python3.6/site-packages/boto3/s3/inject.py", line 209, in bucket_upload_file
    ExtraArgs=ExtraArgs, Callback=Callback, Config=Config)
  File "/usr/local/lib/python3.6/site-packages/boto3/s3/inject.py", line 131, in upload_file
    extra_args=ExtraArgs, callback=Callback)
  File "/usr/local/lib/python3.6/site-packages/boto3/s3/transfer.py", line 287, in upload_file
    filename, '/'.join([bucket, key]), e))
boto3.exceptions.S3UploadFailedError: Failed to upload ./README.md to link/README1.md: An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error

----------------------------------------------------------------------
Ran 9 tests in 22.777s

FAILED (errors=2)
{'ResponseMetadata': {'RequestId': '271f3814-7acd-4392-9210-d7e86a0a00d2', 'HostId': 'vKCfHuGYUy', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sat, 19 Jun 2021 01:44:34 GMT, Sat, 19 Jun 2021 01:44:34 GMT', 'cache-control': 'no-cache', 'expires': 'Sat, 19 Jun 2021 01:44:34 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'location': 'http://s3g:9878/boto-bucket999', 'server': 'Ozone', 'x-amz-id-2': 'vKCfHuGYUy', 'x-amz-request-id': '271f3814-7acd-4392-9210-d7e86a0a00d2', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/boto-bucket999'}
{'ResponseMetadata': {'RequestId': '371fd607-9a88-41a8-9d6d-8fa2205a9a0d', 'HostId': 'tT74lB7gWNseM', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sat, 19 Jun 2021 01:44:38 GMT, Sat, 19 Jun 2021 01:44:38 GMT', 'cache-control': 'no-cache', 'expires': 'Sat, 19 Jun 2021 01:44:38 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'tT74lB7gWNseM', 'x-amz-request-id': '371fd607-9a88-41a8-9d6d-8fa2205a9a0d', 'content-length': '547'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'boto-bucket999', 'CreationDate': datetime.datetime(2021, 6, 19, 1, 44, 34, 434000, tzinfo=tzlocal())}, {'Name': 'bucket-25225', 'CreationDate': datetime.datetime(2021, 6, 19, 1, 26, 43, 451000, tzinfo=tzlocal())}, {'Name': 'bucket-test123', 'CreationDate': datetime.datetime(2021, 6, 19, 1, 26, 43, 986000, tzinfo=tzlocal())}, {'Name': 'link', 'CreationDate': datetime.datetime(2021, 6, 19, 1, 42, 14, 401000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': 'fcda7428-51a7-49d3-bbef-77c3ca2f5d74', 'HostId': 'a3jdc5FRlHE', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sat, 19 Jun 2021 01:44:38 GMT, Sat, 19 Jun 2021 01:44:38 GMT', 'cache-control': 'no-cache', 'expires': 'Sat, 19 Jun 2021 01:44:38 GMT', 'pragma': 'no-cache', 'content-type': 'application/x-www-form-urlencoded', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'a3jdc5FRlHE', 'x-amz-request-id': 'fcda7428-51a7-49d3-bbef-77c3ca2f5d74', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'e19ea2d0-0e76-40e2-88ef-e957b6a843ca', 'HostId': 'ZMUf2aoM', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Sat, 19 Jun 2021 01:44:38 GMT, Sat, 19 Jun 2021 01:44:38 GMT', 'cache-control': 'no-cache', 'expires': 'Sat, 19 Jun 2021 01:44:38 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'ZMUf2aoM', 'x-amz-request-id': 'e19ea2d0-0e76-40e2-88ef-e957b6a843ca'}, 'RetryAttempts': 0}}
An error occurred (404) when calling the HeadObject operation: Not Found
{'ResponseMetadata': {'RequestId': '714536ef-efdd-474e-8f25-56e477f5935f', 'HostId': 'SmzakYtu9', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sat, 19 Jun 2021 01:44:49 GMT, Sat, 19 Jun 2021 01:44:49 GMT', 'cache-control': 'no-cache', 'expires': 'Sat, 19 Jun 2021 01:44:49 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'SmzakYtu9', 'x-amz-request-id': '714536ef-efdd-474e-8f25-56e477f5935f', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
An error occurred (404) when calling the HeadObject operation: Not Found
{'ResponseMetadata': {'RequestId': '7d974b1b-d2a9-4bed-92c7-c0b9b276e836', 'HostId': 'lC87XwDnDW7', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sat, 19 Jun 2021 01:44:49 GMT, Sat, 19 Jun 2021 01:44:49 GMT', 'cache-control': 'no-cache', 'expires': 'Sat, 19 Jun 2021 01:44:49 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'Ozone', 'x-amz-id-2': 'lC87XwDnDW7', 'x-amz-request-id': '7d974b1b-d2a9-4bed-92c7-c0b9b276e836', 'content-length': '284'}, 'RetryAttempts': 0}, 'Bucket': 'link', 'Key': 'irhvwdukyp', 'UploadId': 'dd211182-fc34-4027-9a92-3125d7b02afb-106434860802179263'}
An error occurred (500) when calling the UploadPartCopy operation (reached max retries: 4): Internal Server Error
Boto3 Client Test FAILED!</msg>
<status status="PASS" starttime="20210619 01:44:57.095" endtime="20210619 01:44:57.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:44:57.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:44:57.100" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210619 01:44:57.097" endtime="20210619 01:44:57.100"/>
</kw>
<status status="FAIL" starttime="20210619 01:44:34.021" endtime="20210619 01:44:57.100"/>
</kw>
<msg timestamp="20210619 01:44:57.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:44:34.020" endtime="20210619 01:44:57.101"/>
</kw>
<status status="FAIL" starttime="20210619 01:44:34.020" endtime="20210619 01:44:57.101"/>
</kw>
<timeout value="15 minutes"/>
<status status="FAIL" starttime="20210619 01:44:34.019" endtime="20210619 01:44:57.102">1 != 0</status>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="FAIL" starttime="20210619 01:44:25.063" endtime="20210619 01:44:57.104"/>
</suite>
<suite id="s1-s7-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:44:57.122" level="INFO">${random} = 62973</msg>
<status status="PASS" starttime="20210619 01:44:57.121" endtime="20210619 01:44:57.122"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:44:57.127" level="INFO">${PREFIX} = 62973</msg>
<status status="PASS" starttime="20210619 01:44:57.122" endtime="20210619 01:44:57.127"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.121" endtime="20210619 01:44:57.127"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.121" endtime="20210619 01:44:57.127"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:57.130" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:57.134" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:44:57.134" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210619 01:44:57.128" endtime="20210619 01:44:57.134"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:44:57.135" endtime="20210619 01:44:57.135"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:57.139" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:57.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:44:57.284" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.003'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210619 01:44:57.135" endtime="20210619 01:44:57.284"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:57.289" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:57.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:44:57.717" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.c...</msg>
<status status="PASS" starttime="20210619 01:44:57.287" endtime="20210619 01:44:57.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:44:57.718" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210619 01:44:57.718" endtime="20210619 01:44:57.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:44:57.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:44:57.719" endtime="20210619 01:44:57.720"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.287" endtime="20210619 01:44:57.721"/>
</kw>
<msg timestamp="20210619 01:44:57.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:44:57.286" endtime="20210619 01:44:57.721"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.286" endtime="20210619 01:44:57.721"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.285" endtime="20210619 01:44:57.721"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.285" endtime="20210619 01:44:57.721"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.128" endtime="20210619 01:44:57.722"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.128" endtime="20210619 01:44:57.722"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:57.730" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:57.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:44:57.735" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20210619 01:44:57.727" endtime="20210619 01:44:57.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:44:57.736" level="INFO">s3g</msg>
<status status="PASS" starttime="20210619 01:44:57.735" endtime="20210619 01:44:57.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:44:57.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:44:57.736" endtime="20210619 01:44:57.736"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.727" endtime="20210619 01:44:57.737"/>
</kw>
<msg timestamp="20210619 01:44:57.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:44:57.726" endtime="20210619 01:44:57.737"/>
</kw>
<msg timestamp="20210619 01:44:57.737" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20210619 01:44:57.724" endtime="20210619 01:44:57.737"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:44:57.740" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:44:57.738" endtime="20210619 01:44:57.740"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:57.744" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:44:57.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:44:57.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:44:57.742" endtime="20210619 01:44:57.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:44:57.752" level="INFO"/>
<status status="PASS" starttime="20210619 01:44:57.752" endtime="20210619 01:44:57.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:44:57.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:44:57.752" endtime="20210619 01:44:57.753"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.741" endtime="20210619 01:44:57.753"/>
</kw>
<msg timestamp="20210619 01:44:57.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:44:57.741" endtime="20210619 01:44:57.754"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.740" endtime="20210619 01:44:57.754"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.740" endtime="20210619 01:44:57.754"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.723" endtime="20210619 01:44:57.754"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.723" endtime="20210619 01:44:57.754"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:44:57.759" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:00.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:00.756" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:44:57.757" endtime="20210619 01:45:00.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:00.758" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:00.757" endtime="20210619 01:45:00.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:00.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:00.758" endtime="20210619 01:45:00.758"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.756" endtime="20210619 01:45:00.759"/>
</kw>
<msg timestamp="20210619 01:45:00.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:44:57.756" endtime="20210619 01:45:00.759"/>
</kw>
<msg timestamp="20210619 01:45:00.759" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:44:57.755" endtime="20210619 01:45:00.759"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:45:00.760" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:45:00.760" endtime="20210619 01:45:00.760"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210619 01:45:00.761" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:45:00.760" endtime="20210619 01:45:00.761"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:45:00.762" level="INFO">${secret} = ['3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08']</msg>
<status status="PASS" starttime="20210619 01:45:00.761" endtime="20210619 01:45:00.762"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:45:00.763" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:45:00.762" endtime="20210619 01:45:00.763"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:45:00.764" level="INFO">${secret} = 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:00.763" endtime="20210619 01:45:00.764"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:00.768" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:01.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:01.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:00.766" endtime="20210619 01:45:01.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:01.110" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:01.109" endtime="20210619 01:45:01.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:01.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:01.110" endtime="20210619 01:45:01.111"/>
</kw>
<status status="PASS" starttime="20210619 01:45:00.765" endtime="20210619 01:45:01.111"/>
</kw>
<msg timestamp="20210619 01:45:01.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:00.765" endtime="20210619 01:45:01.111"/>
</kw>
<status status="PASS" starttime="20210619 01:45:00.764" endtime="20210619 01:45:01.111"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:01.115" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:01.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:01.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:01.113" endtime="20210619 01:45:01.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:01.443" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:01.443" endtime="20210619 01:45:01.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:01.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:01.444" endtime="20210619 01:45:01.444"/>
</kw>
<status status="PASS" starttime="20210619 01:45:01.113" endtime="20210619 01:45:01.445"/>
</kw>
<msg timestamp="20210619 01:45:01.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:01.112" endtime="20210619 01:45:01.445"/>
</kw>
<status status="PASS" starttime="20210619 01:45:01.112" endtime="20210619 01:45:01.445"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:01.449" level="INFO">Running command 'aws configure set aws_secret_access_key 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:01.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:01.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:01.447" endtime="20210619 01:45:01.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:01.786" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:01.786" endtime="20210619 01:45:01.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:01.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:01.786" endtime="20210619 01:45:01.787"/>
</kw>
<status status="PASS" starttime="20210619 01:45:01.446" endtime="20210619 01:45:01.788"/>
</kw>
<msg timestamp="20210619 01:45:01.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:01.446" endtime="20210619 01:45:01.788"/>
</kw>
<status status="PASS" starttime="20210619 01:45:01.445" endtime="20210619 01:45:01.788"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:01.791" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:02.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:02.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:01.790" endtime="20210619 01:45:02.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:02.127" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:02.126" endtime="20210619 01:45:02.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:02.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:02.127" endtime="20210619 01:45:02.127"/>
</kw>
<status status="PASS" starttime="20210619 01:45:01.789" endtime="20210619 01:45:02.128"/>
</kw>
<msg timestamp="20210619 01:45:02.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:01.789" endtime="20210619 01:45:02.128"/>
</kw>
<status status="PASS" starttime="20210619 01:45:01.788" endtime="20210619 01:45:02.128"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.755" endtime="20210619 01:45:02.128"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.754" endtime="20210619 01:45:02.129"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:02.129" endtime="20210619 01:45:02.129"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.722" endtime="20210619 01:45:02.129"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.722" endtime="20210619 01:45:02.130"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:45:02.130" endtime="20210619 01:45:02.131"/>
</kw>
<msg timestamp="20210619 01:45:02.131" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:45:02.130" endtime="20210619 01:45:02.131"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:02.131" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:45:02.131" endtime="20210619 01:45:02.131"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:02.135" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:05.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:05.866" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210619 01:45:02.133" endtime="20210619 01:45:05.866"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:05.867" endtime="20210619 01:45:05.868"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:05.868" endtime="20210619 01:45:05.868"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:05.868" endtime="20210619 01:45:05.869"/>
</kw>
<msg timestamp="20210619 01:45:05.869" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210619 01:45:02.132" endtime="20210619 01:45:05.869"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210619 01:45:05.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:05.870" endtime="20210619 01:45:05.870"/>
</kw>
<status status="PASS" starttime="20210619 01:45:02.132" endtime="20210619 01:45:05.870"/>
</kw>
<status status="PASS" starttime="20210619 01:45:02.132" endtime="20210619 01:45:05.870"/>
</kw>
<status status="PASS" starttime="20210619 01:44:57.120" endtime="20210619 01:45:05.871"/>
</kw>
<test id="s1-s7-s3-t1" name="Create new bucket">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:45:05.873" level="INFO">${postfix} = 63979</msg>
<status status="PASS" starttime="20210619 01:45:05.872" endtime="20210619 01:45:05.873"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:45:05.874" level="INFO">${bucket} = bucket-63979</msg>
<status status="PASS" starttime="20210619 01:45:05.873" endtime="20210619 01:45:05.874"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:05.879" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-63979 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:06.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:06.324" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-63979"
}</msg>
<status status="PASS" starttime="20210619 01:45:05.877" endtime="20210619 01:45:06.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:06.325" level="INFO">{
    "Location": "http://s3g:9878/bucket-63979"
}</msg>
<status status="PASS" starttime="20210619 01:45:06.324" endtime="20210619 01:45:06.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:06.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:06.325" endtime="20210619 01:45:06.326"/>
</kw>
<status status="PASS" starttime="20210619 01:45:05.876" endtime="20210619 01:45:06.327"/>
</kw>
<msg timestamp="20210619 01:45:06.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:05.876" endtime="20210619 01:45:06.327"/>
</kw>
<msg timestamp="20210619 01:45:06.327" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-63979"
}</msg>
<status status="PASS" starttime="20210619 01:45:05.875" endtime="20210619 01:45:06.327"/>
</kw>
<msg timestamp="20210619 01:45:06.327" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-63979"
}</msg>
<status status="PASS" starttime="20210619 01:45:05.875" endtime="20210619 01:45:06.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:06.328" endtime="20210619 01:45:06.328"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:06.328" endtime="20210619 01:45:06.329"/>
</kw>
<status status="PASS" starttime="20210619 01:45:05.874" endtime="20210619 01:45:06.329"/>
</kw>
<status status="PASS" starttime="20210619 01:45:05.872" endtime="20210619 01:45:06.329"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:45:05.871" endtime="20210619 01:45:06.330"/>
</test>
<test id="s1-s7-s3-t2" name="Create bucket which already exists">
<kw name="Create bucket with name" library="commonawslib">
<arg>${BUCKET}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:06.336" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:06.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:06.782" level="INFO">${output} = {
    "Location": "http://s3g:9878/link"
}</msg>
<status status="PASS" starttime="20210619 01:45:06.334" endtime="20210619 01:45:06.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:06.784" level="INFO">{
    "Location": "http://s3g:9878/link"
}</msg>
<status status="PASS" starttime="20210619 01:45:06.783" endtime="20210619 01:45:06.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:06.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:06.784" endtime="20210619 01:45:06.785"/>
</kw>
<status status="PASS" starttime="20210619 01:45:06.333" endtime="20210619 01:45:06.785"/>
</kw>
<msg timestamp="20210619 01:45:06.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:06.333" endtime="20210619 01:45:06.785"/>
</kw>
<msg timestamp="20210619 01:45:06.786" level="INFO">${output} = {
    "Location": "http://s3g:9878/link"
}</msg>
<status status="PASS" starttime="20210619 01:45:06.332" endtime="20210619 01:45:06.786"/>
</kw>
<msg timestamp="20210619 01:45:06.786" level="INFO">${result} = {
    "Location": "http://s3g:9878/link"
}</msg>
<status status="PASS" starttime="20210619 01:45:06.332" endtime="20210619 01:45:06.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:06.786" endtime="20210619 01:45:06.787"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:06.787" endtime="20210619 01:45:06.787"/>
</kw>
<status status="PASS" starttime="20210619 01:45:06.331" endtime="20210619 01:45:06.788"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:45:06.330" endtime="20210619 01:45:06.788"/>
</test>
<test id="s1-s7-s3-t3" name="Create bucket with invalid bucket name">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket bucket_1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:06.793" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket_1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:07.304" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:45:07.304" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210619 01:45:06.791" endtime="20210619 01:45:07.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:07.306" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210619 01:45:07.305" endtime="20210619 01:45:07.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:07.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:07.306" endtime="20210619 01:45:07.307"/>
</kw>
<msg timestamp="20210619 01:45:07.307" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210619 01:45:06.790" endtime="20210619 01:45:07.307"/>
</kw>
<msg timestamp="20210619 01:45:07.308" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20210619 01:45:06.789" endtime="20210619 01:45:07.308"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:07.308" endtime="20210619 01:45:07.308"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:45:06.788" endtime="20210619 01:45:07.309"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210619 01:44:57.108" endtime="20210619 01:45:07.311"/>
</suite>
<suite id="s1-s7-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:45:07.326" level="INFO">${random} = 90101</msg>
<status status="PASS" starttime="20210619 01:45:07.325" endtime="20210619 01:45:07.326"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:07.328" level="INFO">${PREFIX} = 90101</msg>
<status status="PASS" starttime="20210619 01:45:07.326" endtime="20210619 01:45:07.328"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.325" endtime="20210619 01:45:07.328"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.325" endtime="20210619 01:45:07.328"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:07.331" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:07.333" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:45:07.334" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210619 01:45:07.329" endtime="20210619 01:45:07.334"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:07.334" endtime="20210619 01:45:07.335"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:07.336" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:07.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:07.476" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.003'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210619 01:45:07.335" endtime="20210619 01:45:07.476"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:07.481" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:07.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:07.892" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.c...</msg>
<status status="PASS" starttime="20210619 01:45:07.479" endtime="20210619 01:45:07.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:07.893" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210619 01:45:07.893" endtime="20210619 01:45:07.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:07.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:07.894" endtime="20210619 01:45:07.894"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.479" endtime="20210619 01:45:07.895"/>
</kw>
<msg timestamp="20210619 01:45:07.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:07.478" endtime="20210619 01:45:07.895"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.478" endtime="20210619 01:45:07.895"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.477" endtime="20210619 01:45:07.895"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.476" endtime="20210619 01:45:07.895"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.329" endtime="20210619 01:45:07.896"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.328" endtime="20210619 01:45:07.896"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:07.901" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:07.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:07.904" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20210619 01:45:07.899" endtime="20210619 01:45:07.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:07.905" level="INFO">s3g</msg>
<status status="PASS" starttime="20210619 01:45:07.904" endtime="20210619 01:45:07.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:07.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:07.905" endtime="20210619 01:45:07.906"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.899" endtime="20210619 01:45:07.906"/>
</kw>
<msg timestamp="20210619 01:45:07.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:07.898" endtime="20210619 01:45:07.907"/>
</kw>
<msg timestamp="20210619 01:45:07.907" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20210619 01:45:07.898" endtime="20210619 01:45:07.907"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:07.910" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:45:07.907" endtime="20210619 01:45:07.911"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:07.914" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:07.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:07.921" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:07.913" endtime="20210619 01:45:07.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:07.922" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:07.922" endtime="20210619 01:45:07.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:07.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:07.922" endtime="20210619 01:45:07.923"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.912" endtime="20210619 01:45:07.923"/>
</kw>
<msg timestamp="20210619 01:45:07.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:07.912" endtime="20210619 01:45:07.923"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.911" endtime="20210619 01:45:07.924"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.911" endtime="20210619 01:45:07.924"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.897" endtime="20210619 01:45:07.924"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.897" endtime="20210619 01:45:07.924"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:07.928" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:10.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:10.983" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:07.926" endtime="20210619 01:45:10.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:10.984" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:10.984" endtime="20210619 01:45:10.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:10.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:10.985" endtime="20210619 01:45:10.985"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.926" endtime="20210619 01:45:10.986"/>
</kw>
<msg timestamp="20210619 01:45:10.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:07.926" endtime="20210619 01:45:10.986"/>
</kw>
<msg timestamp="20210619 01:45:10.986" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:07.925" endtime="20210619 01:45:10.986"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:45:10.987" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:45:10.986" endtime="20210619 01:45:10.987"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210619 01:45:10.988" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:45:10.987" endtime="20210619 01:45:10.988"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:45:10.988" level="INFO">${secret} = ['3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08']</msg>
<status status="PASS" starttime="20210619 01:45:10.988" endtime="20210619 01:45:10.988"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:45:10.990" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:45:10.989" endtime="20210619 01:45:10.990"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:45:10.991" level="INFO">${secret} = 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:10.990" endtime="20210619 01:45:10.991"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:10.995" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:11.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:11.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:10.993" endtime="20210619 01:45:11.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:11.321" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:11.320" endtime="20210619 01:45:11.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:11.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:11.321" endtime="20210619 01:45:11.322"/>
</kw>
<status status="PASS" starttime="20210619 01:45:10.992" endtime="20210619 01:45:11.322"/>
</kw>
<msg timestamp="20210619 01:45:11.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:10.992" endtime="20210619 01:45:11.322"/>
</kw>
<status status="PASS" starttime="20210619 01:45:10.991" endtime="20210619 01:45:11.322"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:11.326" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:11.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:11.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:11.324" endtime="20210619 01:45:11.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:11.657" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:11.657" endtime="20210619 01:45:11.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:11.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:11.658" endtime="20210619 01:45:11.658"/>
</kw>
<status status="PASS" starttime="20210619 01:45:11.323" endtime="20210619 01:45:11.658"/>
</kw>
<msg timestamp="20210619 01:45:11.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:11.323" endtime="20210619 01:45:11.659"/>
</kw>
<status status="PASS" starttime="20210619 01:45:11.323" endtime="20210619 01:45:11.659"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:11.663" level="INFO">Running command 'aws configure set aws_secret_access_key 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:11.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:11.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:11.661" endtime="20210619 01:45:11.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:11.983" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:11.982" endtime="20210619 01:45:11.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:11.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:11.983" endtime="20210619 01:45:11.983"/>
</kw>
<status status="PASS" starttime="20210619 01:45:11.660" endtime="20210619 01:45:11.984"/>
</kw>
<msg timestamp="20210619 01:45:11.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:11.660" endtime="20210619 01:45:11.984"/>
</kw>
<status status="PASS" starttime="20210619 01:45:11.659" endtime="20210619 01:45:11.984"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:11.988" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:12.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:12.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:11.986" endtime="20210619 01:45:12.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:12.313" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:12.312" endtime="20210619 01:45:12.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:12.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:12.313" endtime="20210619 01:45:12.313"/>
</kw>
<status status="PASS" starttime="20210619 01:45:11.985" endtime="20210619 01:45:12.314"/>
</kw>
<msg timestamp="20210619 01:45:12.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:11.985" endtime="20210619 01:45:12.314"/>
</kw>
<status status="PASS" starttime="20210619 01:45:11.984" endtime="20210619 01:45:12.314"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.925" endtime="20210619 01:45:12.315"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.924" endtime="20210619 01:45:12.315"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:12.315" endtime="20210619 01:45:12.315"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.896" endtime="20210619 01:45:12.316"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.896" endtime="20210619 01:45:12.316"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:45:12.317" endtime="20210619 01:45:12.317"/>
</kw>
<msg timestamp="20210619 01:45:12.317" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:45:12.316" endtime="20210619 01:45:12.317"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:12.318" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:45:12.317" endtime="20210619 01:45:12.318"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:12.321" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:16.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:16.231" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210619 01:45:12.319" endtime="20210619 01:45:16.231"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:16.232" endtime="20210619 01:45:16.232"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:16.232" endtime="20210619 01:45:16.233"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:16.233" endtime="20210619 01:45:16.233"/>
</kw>
<msg timestamp="20210619 01:45:16.234" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210619 01:45:12.319" endtime="20210619 01:45:16.234"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210619 01:45:16.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:16.234" endtime="20210619 01:45:16.234"/>
</kw>
<status status="PASS" starttime="20210619 01:45:12.318" endtime="20210619 01:45:16.234"/>
</kw>
<status status="PASS" starttime="20210619 01:45:12.318" endtime="20210619 01:45:16.235"/>
</kw>
<status status="PASS" starttime="20210619 01:45:07.324" endtime="20210619 01:45:16.235"/>
</kw>
<test id="s1-s7-s4-t1" name="Delete existing bucket">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create link" library="commonawslib">
<arg>to-be-deleted</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket link o3://${OM_SERVICE_ID}/legacy/source-bucket o3://${OM_SERVICE_ID}/s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:16.241" level="INFO">Running command 'ozone sh bucket link o3://om/legacy/source-bucket o3://om/s3v/to-be-deleted 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:19.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:19.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:16.239" endtime="20210619 01:45:19.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:19.584" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:19.583" endtime="20210619 01:45:19.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:19.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:19.584" endtime="20210619 01:45:19.584"/>
</kw>
<status status="PASS" starttime="20210619 01:45:16.239" endtime="20210619 01:45:19.585"/>
</kw>
<msg timestamp="20210619 01:45:19.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:16.239" endtime="20210619 01:45:19.585"/>
</kw>
<status status="PASS" starttime="20210619 01:45:16.238" endtime="20210619 01:45:19.585"/>
</kw>
<status status="PASS" starttime="20210619 01:45:16.237" endtime="20210619 01:45:19.586"/>
</kw>
<msg timestamp="20210619 01:45:19.586" level="INFO">${bucket} = to-be-deleted</msg>
<status status="PASS" starttime="20210619 01:45:16.237" endtime="20210619 01:45:19.586"/>
</kw>
<msg timestamp="20210619 01:45:19.586" level="INFO">${bucket} = to-be-deleted</msg>
<status status="PASS" starttime="20210619 01:45:16.236" endtime="20210619 01:45:19.586"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:19.591" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket to-be-deleted 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:20.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:20.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:19.589" endtime="20210619 01:45:20.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:20.073" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:20.072" endtime="20210619 01:45:20.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:20.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:20.073" endtime="20210619 01:45:20.074"/>
</kw>
<status status="PASS" starttime="20210619 01:45:19.588" endtime="20210619 01:45:20.074"/>
</kw>
<msg timestamp="20210619 01:45:20.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:19.588" endtime="20210619 01:45:20.075"/>
</kw>
<msg timestamp="20210619 01:45:20.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:19.587" endtime="20210619 01:45:20.075"/>
</kw>
<status status="PASS" starttime="20210619 01:45:19.587" endtime="20210619 01:45:20.075"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:45:16.235" endtime="20210619 01:45:20.076"/>
</test>
<test id="s1-s7-s4-t2" name="Delete non-existent bucket">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:20.081" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:20.537" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:45:20.538" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:45:20.079" endtime="20210619 01:45:20.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:20.539" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:45:20.539" endtime="20210619 01:45:20.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:20.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:20.540" endtime="20210619 01:45:20.540"/>
</kw>
<msg timestamp="20210619 01:45:20.541" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:45:20.078" endtime="20210619 01:45:20.541"/>
</kw>
<msg timestamp="20210619 01:45:20.541" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:45:20.077" endtime="20210619 01:45:20.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:20.541" endtime="20210619 01:45:20.542"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:45:20.076" endtime="20210619 01:45:20.543"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210619 01:45:07.314" endtime="20210619 01:45:20.544"/>
</suite>
<suite id="s1-s7-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:45:20.556" level="INFO">${random} = 30372</msg>
<status status="PASS" starttime="20210619 01:45:20.556" endtime="20210619 01:45:20.556"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:20.558" level="INFO">${PREFIX} = 30372</msg>
<status status="PASS" starttime="20210619 01:45:20.557" endtime="20210619 01:45:20.558"/>
</kw>
<status status="PASS" starttime="20210619 01:45:20.555" endtime="20210619 01:45:20.558"/>
</kw>
<status status="PASS" starttime="20210619 01:45:20.555" endtime="20210619 01:45:20.558"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:20.561" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:20.563" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:45:20.563" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210619 01:45:20.559" endtime="20210619 01:45:20.563"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:20.564" endtime="20210619 01:45:20.564"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:20.566" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:20.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:20.713" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.003'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210619 01:45:20.565" endtime="20210619 01:45:20.713"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:20.718" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:21.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:21.129" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.c...</msg>
<status status="PASS" starttime="20210619 01:45:20.716" endtime="20210619 01:45:21.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:21.130" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210619 01:45:21.130" endtime="20210619 01:45:21.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:21.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:21.131" endtime="20210619 01:45:21.131"/>
</kw>
<status status="PASS" starttime="20210619 01:45:20.716" endtime="20210619 01:45:21.132"/>
</kw>
<msg timestamp="20210619 01:45:21.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:20.715" endtime="20210619 01:45:21.132"/>
</kw>
<status status="PASS" starttime="20210619 01:45:20.715" endtime="20210619 01:45:21.132"/>
</kw>
<status status="PASS" starttime="20210619 01:45:20.714" endtime="20210619 01:45:21.132"/>
</kw>
<status status="PASS" starttime="20210619 01:45:20.714" endtime="20210619 01:45:21.132"/>
</kw>
<status status="PASS" starttime="20210619 01:45:20.559" endtime="20210619 01:45:21.133"/>
</kw>
<status status="PASS" starttime="20210619 01:45:20.559" endtime="20210619 01:45:21.133"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:21.138" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:21.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:21.141" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20210619 01:45:21.136" endtime="20210619 01:45:21.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:21.142" level="INFO">s3g</msg>
<status status="PASS" starttime="20210619 01:45:21.142" endtime="20210619 01:45:21.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:21.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:21.142" endtime="20210619 01:45:21.145"/>
</kw>
<status status="PASS" starttime="20210619 01:45:21.136" endtime="20210619 01:45:21.145"/>
</kw>
<msg timestamp="20210619 01:45:21.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:21.135" endtime="20210619 01:45:21.145"/>
</kw>
<msg timestamp="20210619 01:45:21.146" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20210619 01:45:21.135" endtime="20210619 01:45:21.146"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:21.148" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:45:21.146" endtime="20210619 01:45:21.148"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:21.152" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:21.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:21.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:21.150" endtime="20210619 01:45:21.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:21.160" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:21.159" endtime="20210619 01:45:21.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:21.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:21.160" endtime="20210619 01:45:21.161"/>
</kw>
<status status="PASS" starttime="20210619 01:45:21.150" endtime="20210619 01:45:21.161"/>
</kw>
<msg timestamp="20210619 01:45:21.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:21.149" endtime="20210619 01:45:21.162"/>
</kw>
<status status="PASS" starttime="20210619 01:45:21.149" endtime="20210619 01:45:21.162"/>
</kw>
<status status="PASS" starttime="20210619 01:45:21.148" endtime="20210619 01:45:21.162"/>
</kw>
<status status="PASS" starttime="20210619 01:45:21.134" endtime="20210619 01:45:21.162"/>
</kw>
<status status="PASS" starttime="20210619 01:45:21.134" endtime="20210619 01:45:21.162"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:21.166" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:24.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:24.258" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:21.165" endtime="20210619 01:45:24.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:24.259" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:24.259" endtime="20210619 01:45:24.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:24.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:24.259" endtime="20210619 01:45:24.260"/>
</kw>
<status status="PASS" starttime="20210619 01:45:21.164" endtime="20210619 01:45:24.260"/>
</kw>
<msg timestamp="20210619 01:45:24.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:21.164" endtime="20210619 01:45:24.261"/>
</kw>
<msg timestamp="20210619 01:45:24.261" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:21.163" endtime="20210619 01:45:24.261"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:45:24.262" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:45:24.261" endtime="20210619 01:45:24.262"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210619 01:45:24.262" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:45:24.262" endtime="20210619 01:45:24.262"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:45:24.263" level="INFO">${secret} = ['3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08']</msg>
<status status="PASS" starttime="20210619 01:45:24.262" endtime="20210619 01:45:24.263"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:45:24.264" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:45:24.263" endtime="20210619 01:45:24.264"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:45:24.266" level="INFO">${secret} = 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:24.264" endtime="20210619 01:45:24.266"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:24.269" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:24.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:24.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:24.267" endtime="20210619 01:45:24.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:24.600" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:24.599" endtime="20210619 01:45:24.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:24.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:24.600" endtime="20210619 01:45:24.601"/>
</kw>
<status status="PASS" starttime="20210619 01:45:24.267" endtime="20210619 01:45:24.601"/>
</kw>
<msg timestamp="20210619 01:45:24.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:24.266" endtime="20210619 01:45:24.601"/>
</kw>
<status status="PASS" starttime="20210619 01:45:24.266" endtime="20210619 01:45:24.602"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:24.606" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:24.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:24.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:24.604" endtime="20210619 01:45:24.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:24.940" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:24.940" endtime="20210619 01:45:24.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:24.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:24.941" endtime="20210619 01:45:24.941"/>
</kw>
<status status="PASS" starttime="20210619 01:45:24.603" endtime="20210619 01:45:24.942"/>
</kw>
<msg timestamp="20210619 01:45:24.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:24.603" endtime="20210619 01:45:24.942"/>
</kw>
<status status="PASS" starttime="20210619 01:45:24.602" endtime="20210619 01:45:24.942"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:24.949" level="INFO">Running command 'aws configure set aws_secret_access_key 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:25.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:25.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:24.944" endtime="20210619 01:45:25.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:25.296" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:25.295" endtime="20210619 01:45:25.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:25.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:25.296" endtime="20210619 01:45:25.298"/>
</kw>
<status status="PASS" starttime="20210619 01:45:24.943" endtime="20210619 01:45:25.298"/>
</kw>
<msg timestamp="20210619 01:45:25.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:24.943" endtime="20210619 01:45:25.298"/>
</kw>
<status status="PASS" starttime="20210619 01:45:24.942" endtime="20210619 01:45:25.299"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:25.303" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:25.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:25.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:25.300" endtime="20210619 01:45:25.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:25.635" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:25.634" endtime="20210619 01:45:25.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:25.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:25.635" endtime="20210619 01:45:25.636"/>
</kw>
<status status="PASS" starttime="20210619 01:45:25.300" endtime="20210619 01:45:25.636"/>
</kw>
<msg timestamp="20210619 01:45:25.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:25.300" endtime="20210619 01:45:25.636"/>
</kw>
<status status="PASS" starttime="20210619 01:45:25.299" endtime="20210619 01:45:25.637"/>
</kw>
<status status="PASS" starttime="20210619 01:45:21.163" endtime="20210619 01:45:25.637"/>
</kw>
<status status="PASS" starttime="20210619 01:45:21.162" endtime="20210619 01:45:25.637"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:25.637" endtime="20210619 01:45:25.638"/>
</kw>
<status status="PASS" starttime="20210619 01:45:21.133" endtime="20210619 01:45:25.644"/>
</kw>
<status status="PASS" starttime="20210619 01:45:21.133" endtime="20210619 01:45:25.644"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:45:25.644" endtime="20210619 01:45:25.645"/>
</kw>
<msg timestamp="20210619 01:45:25.645" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:45:25.644" endtime="20210619 01:45:25.645"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:25.645" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:45:25.645" endtime="20210619 01:45:25.646"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:25.649" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:29.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:29.453" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210619 01:45:25.647" endtime="20210619 01:45:29.454"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:29.454" endtime="20210619 01:45:29.455"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:29.455" endtime="20210619 01:45:29.456"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:29.456" endtime="20210619 01:45:29.456"/>
</kw>
<msg timestamp="20210619 01:45:29.457" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210619 01:45:25.647" endtime="20210619 01:45:29.457"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210619 01:45:29.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:29.457" endtime="20210619 01:45:29.457"/>
</kw>
<status status="PASS" starttime="20210619 01:45:25.646" endtime="20210619 01:45:29.458"/>
</kw>
<status status="PASS" starttime="20210619 01:45:25.646" endtime="20210619 01:45:29.458"/>
</kw>
<status status="PASS" starttime="20210619 01:45:20.555" endtime="20210619 01:45:29.458"/>
</kw>
<test id="s1-s7-s5-t1" name="Head Bucket not existent">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:29.464" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:29.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:29.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:29.462" endtime="20210619 01:45:29.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:29.909" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:29.908" endtime="20210619 01:45:29.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:29.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:29.909" endtime="20210619 01:45:29.909"/>
</kw>
<status status="PASS" starttime="20210619 01:45:29.461" endtime="20210619 01:45:29.910"/>
</kw>
<msg timestamp="20210619 01:45:29.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:29.461" endtime="20210619 01:45:29.910"/>
</kw>
<msg timestamp="20210619 01:45:29.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:29.460" endtime="20210619 01:45:29.910"/>
</kw>
<msg timestamp="20210619 01:45:29.911" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:45:29.459" endtime="20210619 01:45:29.911"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:29.914" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:30.362" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:45:30.362" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210619 01:45:29.912" endtime="20210619 01:45:30.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:30.364" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210619 01:45:30.363" endtime="20210619 01:45:30.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:30.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:30.364" endtime="20210619 01:45:30.365"/>
</kw>
<msg timestamp="20210619 01:45:30.365" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210619 01:45:29.912" endtime="20210619 01:45:30.365"/>
</kw>
<msg timestamp="20210619 01:45:30.365" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20210619 01:45:29.911" endtime="20210619 01:45:30.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:30.366" endtime="20210619 01:45:30.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:30.366" endtime="20210619 01:45:30.367"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:45:29.458" endtime="20210619 01:45:30.367"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210619 01:45:20.545" endtime="20210619 01:45:30.368"/>
</suite>
<suite id="s1-s7-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:45:30.381" level="INFO">${random} = 79416</msg>
<status status="PASS" starttime="20210619 01:45:30.381" endtime="20210619 01:45:30.381"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:30.383" level="INFO">${PREFIX} = 79416</msg>
<status status="PASS" starttime="20210619 01:45:30.381" endtime="20210619 01:45:30.383"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.380" endtime="20210619 01:45:30.383"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.380" endtime="20210619 01:45:30.383"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:30.386" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:30.388" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:45:30.388" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210619 01:45:30.384" endtime="20210619 01:45:30.388"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:30.389" endtime="20210619 01:45:30.389"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:30.393" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:30.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:30.525" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.003'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210619 01:45:30.390" endtime="20210619 01:45:30.525"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:30.530" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:30.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:30.950" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.c...</msg>
<status status="PASS" starttime="20210619 01:45:30.528" endtime="20210619 01:45:30.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:30.951" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210619 01:45:30.950" endtime="20210619 01:45:30.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:30.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:30.951" endtime="20210619 01:45:30.952"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.527" endtime="20210619 01:45:30.952"/>
</kw>
<msg timestamp="20210619 01:45:30.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:30.527" endtime="20210619 01:45:30.952"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.526" endtime="20210619 01:45:30.953"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.526" endtime="20210619 01:45:30.953"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.525" endtime="20210619 01:45:30.953"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.384" endtime="20210619 01:45:30.953"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.383" endtime="20210619 01:45:30.953"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:30.959" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:30.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:30.962" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20210619 01:45:30.957" endtime="20210619 01:45:30.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:30.963" level="INFO">s3g</msg>
<status status="PASS" starttime="20210619 01:45:30.962" endtime="20210619 01:45:30.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:30.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:30.963" endtime="20210619 01:45:30.963"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.956" endtime="20210619 01:45:30.964"/>
</kw>
<msg timestamp="20210619 01:45:30.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:30.956" endtime="20210619 01:45:30.964"/>
</kw>
<msg timestamp="20210619 01:45:30.964" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20210619 01:45:30.955" endtime="20210619 01:45:30.964"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:30.966" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:45:30.965" endtime="20210619 01:45:30.967"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:30.971" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:30.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:30.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:30.969" endtime="20210619 01:45:30.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:30.978" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:30.978" endtime="20210619 01:45:30.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:30.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:30.978" endtime="20210619 01:45:30.979"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.968" endtime="20210619 01:45:30.979"/>
</kw>
<msg timestamp="20210619 01:45:30.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:30.968" endtime="20210619 01:45:30.980"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.967" endtime="20210619 01:45:30.980"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.967" endtime="20210619 01:45:30.980"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.955" endtime="20210619 01:45:30.980"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.954" endtime="20210619 01:45:30.980"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:30.984" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:33.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:33.951" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:30.983" endtime="20210619 01:45:33.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:33.953" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:33.952" endtime="20210619 01:45:33.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:33.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:33.953" endtime="20210619 01:45:33.953"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.982" endtime="20210619 01:45:33.954"/>
</kw>
<msg timestamp="20210619 01:45:33.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:30.982" endtime="20210619 01:45:33.954"/>
</kw>
<msg timestamp="20210619 01:45:33.954" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:30.981" endtime="20210619 01:45:33.954"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:45:33.955" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:45:33.955" endtime="20210619 01:45:33.955"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210619 01:45:33.956" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:45:33.955" endtime="20210619 01:45:33.956"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:45:33.957" level="INFO">${secret} = ['3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08']</msg>
<status status="PASS" starttime="20210619 01:45:33.956" endtime="20210619 01:45:33.957"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:45:33.958" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:45:33.957" endtime="20210619 01:45:33.958"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:45:33.959" level="INFO">${secret} = 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:33.958" endtime="20210619 01:45:33.959"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:33.963" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:34.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:34.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:33.961" endtime="20210619 01:45:34.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:34.291" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:34.291" endtime="20210619 01:45:34.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:34.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:34.292" endtime="20210619 01:45:34.292"/>
</kw>
<status status="PASS" starttime="20210619 01:45:33.960" endtime="20210619 01:45:34.293"/>
</kw>
<msg timestamp="20210619 01:45:34.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:33.960" endtime="20210619 01:45:34.293"/>
</kw>
<status status="PASS" starttime="20210619 01:45:33.960" endtime="20210619 01:45:34.293"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:34.297" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:34.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:34.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:34.295" endtime="20210619 01:45:34.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:34.625" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:34.625" endtime="20210619 01:45:34.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:34.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:34.626" endtime="20210619 01:45:34.626"/>
</kw>
<status status="PASS" starttime="20210619 01:45:34.294" endtime="20210619 01:45:34.627"/>
</kw>
<msg timestamp="20210619 01:45:34.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:34.294" endtime="20210619 01:45:34.627"/>
</kw>
<status status="PASS" starttime="20210619 01:45:34.293" endtime="20210619 01:45:34.627"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:34.630" level="INFO">Running command 'aws configure set aws_secret_access_key 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:34.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:34.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:34.629" endtime="20210619 01:45:34.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:34.968" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:34.967" endtime="20210619 01:45:34.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:34.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:34.968" endtime="20210619 01:45:34.969"/>
</kw>
<status status="PASS" starttime="20210619 01:45:34.628" endtime="20210619 01:45:34.969"/>
</kw>
<msg timestamp="20210619 01:45:34.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:34.628" endtime="20210619 01:45:34.969"/>
</kw>
<status status="PASS" starttime="20210619 01:45:34.627" endtime="20210619 01:45:34.970"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:34.973" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:35.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:35.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:34.971" endtime="20210619 01:45:35.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:35.295" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:35.295" endtime="20210619 01:45:35.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:35.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:35.295" endtime="20210619 01:45:35.296"/>
</kw>
<status status="PASS" starttime="20210619 01:45:34.971" endtime="20210619 01:45:35.296"/>
</kw>
<msg timestamp="20210619 01:45:35.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:34.970" endtime="20210619 01:45:35.297"/>
</kw>
<status status="PASS" starttime="20210619 01:45:34.970" endtime="20210619 01:45:35.297"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.981" endtime="20210619 01:45:35.298"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.980" endtime="20210619 01:45:35.298"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:35.298" endtime="20210619 01:45:35.298"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.954" endtime="20210619 01:45:35.298"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.953" endtime="20210619 01:45:35.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:45:35.299" endtime="20210619 01:45:35.300"/>
</kw>
<msg timestamp="20210619 01:45:35.300" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:45:35.299" endtime="20210619 01:45:35.300"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:35.300" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:45:35.300" endtime="20210619 01:45:35.301"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:35.304" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:39.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:39.121" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210619 01:45:35.302" endtime="20210619 01:45:39.121"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:39.122" endtime="20210619 01:45:39.122"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:39.122" endtime="20210619 01:45:39.123"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:39.123" endtime="20210619 01:45:39.123"/>
</kw>
<msg timestamp="20210619 01:45:39.124" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210619 01:45:35.302" endtime="20210619 01:45:39.124"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210619 01:45:39.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:39.124" endtime="20210619 01:45:39.124"/>
</kw>
<status status="PASS" starttime="20210619 01:45:35.301" endtime="20210619 01:45:39.125"/>
</kw>
<status status="PASS" starttime="20210619 01:45:35.301" endtime="20210619 01:45:39.125"/>
</kw>
<status status="PASS" starttime="20210619 01:45:30.380" endtime="20210619 01:45:39.125"/>
</kw>
<test id="s1-s7-s6-t1" name="List buckets">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:39.131" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:39.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:39.604" level="INFO">${output} = bucket-25225
bucket-63979
bucket-test123
link</msg>
<status status="PASS" starttime="20210619 01:45:39.129" endtime="20210619 01:45:39.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:39.605" level="INFO">bucket-25225
bucket-63979
bucket-test123
link</msg>
<status status="PASS" starttime="20210619 01:45:39.604" endtime="20210619 01:45:39.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:39.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:39.605" endtime="20210619 01:45:39.606"/>
</kw>
<status status="PASS" starttime="20210619 01:45:39.128" endtime="20210619 01:45:39.606"/>
</kw>
<msg timestamp="20210619 01:45:39.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:39.128" endtime="20210619 01:45:39.607"/>
</kw>
<msg timestamp="20210619 01:45:39.607" level="INFO">${output} = bucket-25225
bucket-63979
bucket-test123
link</msg>
<status status="PASS" starttime="20210619 01:45:39.127" endtime="20210619 01:45:39.607"/>
</kw>
<msg timestamp="20210619 01:45:39.607" level="INFO">${result} = bucket-25225
bucket-63979
bucket-test123
link</msg>
<status status="PASS" starttime="20210619 01:45:39.127" endtime="20210619 01:45:39.607"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:39.608" endtime="20210619 01:45:39.608"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:45:39.125" endtime="20210619 01:45:39.608"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20210619 01:45:30.370" endtime="20210619 01:45:39.609"/>
</suite>
<suite id="s1-s7-s7" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:45:39.624" level="INFO">${random} = 76003</msg>
<status status="PASS" starttime="20210619 01:45:39.624" endtime="20210619 01:45:39.624"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:39.626" level="INFO">${PREFIX} = 76003</msg>
<status status="PASS" starttime="20210619 01:45:39.624" endtime="20210619 01:45:39.626"/>
</kw>
<status status="PASS" starttime="20210619 01:45:39.624" endtime="20210619 01:45:39.626"/>
</kw>
<status status="PASS" starttime="20210619 01:45:39.623" endtime="20210619 01:45:39.626"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:39.629" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:39.631" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:45:39.631" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210619 01:45:39.627" endtime="20210619 01:45:39.631"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:39.632" endtime="20210619 01:45:39.632"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:39.634" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:39.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:39.770" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.003'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210619 01:45:39.632" endtime="20210619 01:45:39.770"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:39.775" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:40.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:40.197" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.c...</msg>
<status status="PASS" starttime="20210619 01:45:39.773" endtime="20210619 01:45:40.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:40.199" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210619 01:45:40.198" endtime="20210619 01:45:40.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:40.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:40.199" endtime="20210619 01:45:40.200"/>
</kw>
<status status="PASS" starttime="20210619 01:45:39.773" endtime="20210619 01:45:40.200"/>
</kw>
<msg timestamp="20210619 01:45:40.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:39.773" endtime="20210619 01:45:40.200"/>
</kw>
<status status="PASS" starttime="20210619 01:45:39.772" endtime="20210619 01:45:40.200"/>
</kw>
<status status="PASS" starttime="20210619 01:45:39.771" endtime="20210619 01:45:40.201"/>
</kw>
<status status="PASS" starttime="20210619 01:45:39.771" endtime="20210619 01:45:40.201"/>
</kw>
<status status="PASS" starttime="20210619 01:45:39.627" endtime="20210619 01:45:40.202"/>
</kw>
<status status="PASS" starttime="20210619 01:45:39.627" endtime="20210619 01:45:40.202"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:40.208" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:40.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:40.211" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20210619 01:45:40.206" endtime="20210619 01:45:40.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:40.212" level="INFO">s3g</msg>
<status status="PASS" starttime="20210619 01:45:40.212" endtime="20210619 01:45:40.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:40.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:40.213" endtime="20210619 01:45:40.213"/>
</kw>
<status status="PASS" starttime="20210619 01:45:40.205" endtime="20210619 01:45:40.214"/>
</kw>
<msg timestamp="20210619 01:45:40.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:40.204" endtime="20210619 01:45:40.214"/>
</kw>
<msg timestamp="20210619 01:45:40.214" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20210619 01:45:40.204" endtime="20210619 01:45:40.215"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:40.217" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:45:40.215" endtime="20210619 01:45:40.217"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:40.221" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:40.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:40.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:40.219" endtime="20210619 01:45:40.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:40.230" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:40.229" endtime="20210619 01:45:40.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:40.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:40.231" endtime="20210619 01:45:40.231"/>
</kw>
<status status="PASS" starttime="20210619 01:45:40.219" endtime="20210619 01:45:40.232"/>
</kw>
<msg timestamp="20210619 01:45:40.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:40.218" endtime="20210619 01:45:40.232"/>
</kw>
<status status="PASS" starttime="20210619 01:45:40.218" endtime="20210619 01:45:40.232"/>
</kw>
<status status="PASS" starttime="20210619 01:45:40.217" endtime="20210619 01:45:40.232"/>
</kw>
<status status="PASS" starttime="20210619 01:45:40.203" endtime="20210619 01:45:40.232"/>
</kw>
<status status="PASS" starttime="20210619 01:45:40.203" endtime="20210619 01:45:40.232"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:40.237" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:43.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:43.209" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:40.236" endtime="20210619 01:45:43.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:43.212" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:43.211" endtime="20210619 01:45:43.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:43.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:43.213" endtime="20210619 01:45:43.213"/>
</kw>
<status status="PASS" starttime="20210619 01:45:40.235" endtime="20210619 01:45:43.214"/>
</kw>
<msg timestamp="20210619 01:45:43.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:40.235" endtime="20210619 01:45:43.214"/>
</kw>
<msg timestamp="20210619 01:45:43.214" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:40.233" endtime="20210619 01:45:43.214"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:45:43.215" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:45:43.214" endtime="20210619 01:45:43.215"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210619 01:45:43.216" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:45:43.215" endtime="20210619 01:45:43.217"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:45:43.218" level="INFO">${secret} = ['3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08']</msg>
<status status="PASS" starttime="20210619 01:45:43.217" endtime="20210619 01:45:43.219"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:45:43.223" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:45:43.219" endtime="20210619 01:45:43.223"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:45:43.224" level="INFO">${secret} = 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:45:43.223" endtime="20210619 01:45:43.224"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:43.231" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:43.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:43.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:43.227" endtime="20210619 01:45:43.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:43.566" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:43.565" endtime="20210619 01:45:43.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:43.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:43.566" endtime="20210619 01:45:43.567"/>
</kw>
<status status="PASS" starttime="20210619 01:45:43.226" endtime="20210619 01:45:43.567"/>
</kw>
<msg timestamp="20210619 01:45:43.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:43.225" endtime="20210619 01:45:43.567"/>
</kw>
<status status="PASS" starttime="20210619 01:45:43.224" endtime="20210619 01:45:43.568"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:43.571" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:43.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:43.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:43.569" endtime="20210619 01:45:43.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:43.910" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:43.910" endtime="20210619 01:45:43.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:43.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:43.910" endtime="20210619 01:45:43.911"/>
</kw>
<status status="PASS" starttime="20210619 01:45:43.569" endtime="20210619 01:45:43.911"/>
</kw>
<msg timestamp="20210619 01:45:43.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:43.568" endtime="20210619 01:45:43.912"/>
</kw>
<status status="PASS" starttime="20210619 01:45:43.568" endtime="20210619 01:45:43.912"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:43.915" level="INFO">Running command 'aws configure set aws_secret_access_key 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:44.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:44.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:43.914" endtime="20210619 01:45:44.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:44.237" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:44.237" endtime="20210619 01:45:44.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:44.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:44.238" endtime="20210619 01:45:44.239"/>
</kw>
<status status="PASS" starttime="20210619 01:45:43.913" endtime="20210619 01:45:44.239"/>
</kw>
<msg timestamp="20210619 01:45:44.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:43.913" endtime="20210619 01:45:44.239"/>
</kw>
<status status="PASS" starttime="20210619 01:45:43.912" endtime="20210619 01:45:44.239"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:44.243" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:44.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:44.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:45:44.241" endtime="20210619 01:45:44.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:44.566" level="INFO"/>
<status status="PASS" starttime="20210619 01:45:44.565" endtime="20210619 01:45:44.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:44.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:44.566" endtime="20210619 01:45:44.567"/>
</kw>
<status status="PASS" starttime="20210619 01:45:44.241" endtime="20210619 01:45:44.567"/>
</kw>
<msg timestamp="20210619 01:45:44.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:44.240" endtime="20210619 01:45:44.567"/>
</kw>
<status status="PASS" starttime="20210619 01:45:44.240" endtime="20210619 01:45:44.567"/>
</kw>
<status status="PASS" starttime="20210619 01:45:40.233" endtime="20210619 01:45:44.568"/>
</kw>
<status status="PASS" starttime="20210619 01:45:40.233" endtime="20210619 01:45:44.568"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:44.568" endtime="20210619 01:45:44.568"/>
</kw>
<status status="PASS" starttime="20210619 01:45:40.203" endtime="20210619 01:45:44.569"/>
</kw>
<status status="PASS" starttime="20210619 01:45:40.202" endtime="20210619 01:45:44.569"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:45:44.569" endtime="20210619 01:45:44.570"/>
</kw>
<msg timestamp="20210619 01:45:44.570" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:45:44.569" endtime="20210619 01:45:44.570"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:44.570" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:45:44.570" endtime="20210619 01:45:44.571"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:44.575" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:48.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:48.281" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210619 01:45:44.572" endtime="20210619 01:45:48.281"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:48.282" endtime="20210619 01:45:48.282"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:48.283" endtime="20210619 01:45:48.283"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:45:48.283" endtime="20210619 01:45:48.283"/>
</kw>
<msg timestamp="20210619 01:45:48.284" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210619 01:45:44.572" endtime="20210619 01:45:48.284"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210619 01:45:48.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:48.284" endtime="20210619 01:45:48.285"/>
</kw>
<status status="PASS" starttime="20210619 01:45:44.571" endtime="20210619 01:45:48.285"/>
</kw>
<status status="PASS" starttime="20210619 01:45:44.571" endtime="20210619 01:45:48.285"/>
</kw>
<status status="PASS" starttime="20210619 01:45:39.623" endtime="20210619 01:45:48.285"/>
</kw>
<test id="s1-s7-s7-t1" name="Test Multipart Upload">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:45:48.288" level="INFO">${random} = 93577</msg>
<status status="PASS" starttime="20210619 01:45:48.287" endtime="20210619 01:45:48.288"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:48.288" level="INFO">${PREFIX} = 93577</msg>
<status status="PASS" starttime="20210619 01:45:48.288" endtime="20210619 01:45:48.288"/>
</kw>
<status status="PASS" starttime="20210619 01:45:48.286" endtime="20210619 01:45:48.289"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:48.293" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 93577/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:48.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:48.761" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "de869356-3536-4549-b943-8af8008b1978-106434864658383045", 
    "Key": "93577/multipartKey"
}</msg>
<status status="PASS" starttime="20210619 01:45:48.291" endtime="20210619 01:45:48.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:48.762" level="INFO">{
    "Bucket": "link", 
    "UploadId": "de869356-3536-4549-b943-8af8008b1978-106434864658383045", 
    "Key": "93577/multipartKey"
}</msg>
<status status="PASS" starttime="20210619 01:45:48.761" endtime="20210619 01:45:48.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:48.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:48.762" endtime="20210619 01:45:48.763"/>
</kw>
<status status="PASS" starttime="20210619 01:45:48.290" endtime="20210619 01:45:48.763"/>
</kw>
<msg timestamp="20210619 01:45:48.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:48.290" endtime="20210619 01:45:48.764"/>
</kw>
<msg timestamp="20210619 01:45:48.764" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "de869356-3536-4549-b943-8af8008b1978-106434864658383045", 
    "Key": "93577/multipartKey"
}</msg>
<status status="PASS" starttime="20210619 01:45:48.289" endtime="20210619 01:45:48.764"/>
</kw>
<msg timestamp="20210619 01:45:48.764" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "de869356-3536-4549-b943-8af8008b1978-106434864658383045", 
    "Key": "93577/multipartKey"
}</msg>
<status status="PASS" starttime="20210619 01:45:48.289" endtime="20210619 01:45:48.764"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:48.768" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "de869356-3536-4549-b943-8af8008b1978-106434864658383045", 
    "Key": "93577/multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:48.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:48.812" level="INFO">${output} = de869356-3536-4549-b943-8af8008b1978-106434864658383045</msg>
<status status="PASS" starttime="20210619 01:45:48.765" endtime="20210619 01:45:48.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:48.813" level="INFO">de869356-3536-4549-b943-8af8008b1978-106434864658383045</msg>
<status status="PASS" starttime="20210619 01:45:48.813" endtime="20210619 01:45:48.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:48.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:48.814" endtime="20210619 01:45:48.814"/>
</kw>
<msg timestamp="20210619 01:45:48.815" level="INFO">${uploadID} = de869356-3536-4549-b943-8af8008b1978-106434864658383045</msg>
<status status="PASS" starttime="20210619 01:45:48.765" endtime="20210619 01:45:48.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:48.815" endtime="20210619 01:45:48.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:48.816" endtime="20210619 01:45:48.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:48.817" endtime="20210619 01:45:48.817"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:48.821" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 93577/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:49.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:49.281" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "82a9c5c6-690e-4438-aa43-17bc64a9ad4e-106434864692789446", 
    "Key": "93577/multipartKey"
}</msg>
<status status="PASS" starttime="20210619 01:45:48.820" endtime="20210619 01:45:49.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:49.282" level="INFO">{
    "Bucket": "link", 
    "UploadId": "82a9c5c6-690e-4438-aa43-17bc64a9ad4e-106434864692789446", 
    "Key": "93577/multipartKey"
}</msg>
<status status="PASS" starttime="20210619 01:45:49.282" endtime="20210619 01:45:49.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:49.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:49.283" endtime="20210619 01:45:49.283"/>
</kw>
<status status="PASS" starttime="20210619 01:45:48.819" endtime="20210619 01:45:49.284"/>
</kw>
<msg timestamp="20210619 01:45:49.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:48.819" endtime="20210619 01:45:49.284"/>
</kw>
<msg timestamp="20210619 01:45:49.284" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "82a9c5c6-690e-4438-aa43-17bc64a9ad4e-106434864692789446", 
    "Key": "93577/multipartKey"
}</msg>
<status status="PASS" starttime="20210619 01:45:48.818" endtime="20210619 01:45:49.284"/>
</kw>
<msg timestamp="20210619 01:45:49.285" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "82a9c5c6-690e-4438-aa43-17bc64a9ad4e-106434864692789446", 
    "Key": "93577/multipartKey"
}</msg>
<status status="PASS" starttime="20210619 01:45:48.817" endtime="20210619 01:45:49.285"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:49.288" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "82a9c5c6-690e-4438-aa43-17bc64a9ad4e-106434864692789446", 
    "Key": "93577/multipartKey"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:49.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:49.332" level="INFO">${output} = 82a9c5c6-690e-4438-aa43-17bc64a9ad4e-106434864692789446</msg>
<status status="PASS" starttime="20210619 01:45:49.286" endtime="20210619 01:45:49.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:49.333" level="INFO">82a9c5c6-690e-4438-aa43-17bc64a9ad4e-106434864692789446</msg>
<status status="PASS" starttime="20210619 01:45:49.332" endtime="20210619 01:45:49.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:49.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:49.333" endtime="20210619 01:45:49.334"/>
</kw>
<msg timestamp="20210619 01:45:49.334" level="INFO">${nextUploadID} = 82a9c5c6-690e-4438-aa43-17bc64a9ad4e-106434864692789446</msg>
<status status="PASS" starttime="20210619 01:45:49.285" endtime="20210619 01:45:49.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:49.334" endtime="20210619 01:45:49.335"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:49.335" endtime="20210619 01:45:49.335"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:49.336" endtime="20210619 01:45:49.336"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20210619 01:45:49.336" endtime="20210619 01:45:49.337"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:49.341" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:49.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:49.376" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0318219 s, 165 MB/s</msg>
<status status="PASS" starttime="20210619 01:45:49.339" endtime="20210619 01:45:49.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:49.378" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0318219 s, 165 MB/s</msg>
<status status="PASS" starttime="20210619 01:45:49.377" endtime="20210619 01:45:49.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:49.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:49.378" endtime="20210619 01:45:49.379"/>
</kw>
<status status="PASS" starttime="20210619 01:45:49.339" endtime="20210619 01:45:49.379"/>
</kw>
<msg timestamp="20210619 01:45:49.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:49.339" endtime="20210619 01:45:49.379"/>
</kw>
<status status="PASS" starttime="20210619 01:45:49.338" endtime="20210619 01:45:49.379"/>
</kw>
<status status="PASS" starttime="20210619 01:45:49.337" endtime="20210619 01:45:49.380"/>
</kw>
<status status="PASS" starttime="20210619 01:45:49.337" endtime="20210619 01:45:49.380"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:49.385" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 93577/multipartKey --part-number 1 --body /tmp/part1 --upload-id 82a9c5c6-690e-4438-aa43-17bc64a9ad4e-106434864692789446 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:57.537" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:45:57.537" level="INFO">${output} = 
An error occurred (500) when calling the UploadPart operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:45:49.383" endtime="20210619 01:45:57.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:57.538" level="INFO">
An error occurred (500) when calling the UploadPart operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:45:57.537" endtime="20210619 01:45:57.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:57.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:45:57.539" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:45:57.538" endtime="20210619 01:45:57.539"/>
</kw>
<status status="FAIL" starttime="20210619 01:45:49.383" endtime="20210619 01:45:57.540"/>
</kw>
<msg timestamp="20210619 01:45:57.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:45:49.381" endtime="20210619 01:45:57.540"/>
</kw>
<status status="FAIL" starttime="20210619 01:45:49.381" endtime="20210619 01:45:57.540"/>
</kw>
<status status="FAIL" starttime="20210619 01:45:49.380" endtime="20210619 01:45:57.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:45:57.541" endtime="20210619 01:45:57.541"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20210619 01:45:57.541" endtime="20210619 01:45:57.541"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<status status="NOT RUN" starttime="20210619 01:45:57.541" endtime="20210619 01:45:57.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:45:57.542" endtime="20210619 01:45:57.542"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:45:48.285" endtime="20210619 01:45:57.542">255 != 0</status>
</test>
<test id="s1-s7-s7-t2" name="Test Multipart Upload Complete">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:45:57.546" level="INFO">${random} = 75066</msg>
<status status="PASS" starttime="20210619 01:45:57.546" endtime="20210619 01:45:57.546"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:45:57.547" level="INFO">${PREFIX} = 75066</msg>
<status status="PASS" starttime="20210619 01:45:57.547" endtime="20210619 01:45:57.547"/>
</kw>
<status status="PASS" starttime="20210619 01:45:57.545" endtime="20210619 01:45:57.547"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:57.552" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 75066/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:58.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:58.039" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "2a458017-e2af-4fc2-bcdc-10ba99f4792f-106434865266884812", 
    "Key": "75066/multipartKey1"
}</msg>
<status status="PASS" starttime="20210619 01:45:57.550" endtime="20210619 01:45:58.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:58.040" level="INFO">{
    "Bucket": "link", 
    "UploadId": "2a458017-e2af-4fc2-bcdc-10ba99f4792f-106434865266884812", 
    "Key": "75066/multipartKey1"
}</msg>
<status status="PASS" starttime="20210619 01:45:58.040" endtime="20210619 01:45:58.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:58.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:58.041" endtime="20210619 01:45:58.044"/>
</kw>
<status status="PASS" starttime="20210619 01:45:57.549" endtime="20210619 01:45:58.044"/>
</kw>
<msg timestamp="20210619 01:45:58.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:57.549" endtime="20210619 01:45:58.044"/>
</kw>
<msg timestamp="20210619 01:45:58.044" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "2a458017-e2af-4fc2-bcdc-10ba99f4792f-106434865266884812", 
    "Key": "75066/multipartKey1"
}</msg>
<status status="PASS" starttime="20210619 01:45:57.548" endtime="20210619 01:45:58.045"/>
</kw>
<msg timestamp="20210619 01:45:58.045" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "2a458017-e2af-4fc2-bcdc-10ba99f4792f-106434865266884812", 
    "Key": "75066/multipartKey1"
}</msg>
<status status="PASS" starttime="20210619 01:45:57.548" endtime="20210619 01:45:58.045"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:58.048" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "2a458017-e2af-4fc2-bcdc-10ba99f4792f-106434865266884812", 
    "Key": "75066/multipartKey1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:58.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:58.090" level="INFO">${output} = 2a458017-e2af-4fc2-bcdc-10ba99f4792f-106434865266884812</msg>
<status status="PASS" starttime="20210619 01:45:58.046" endtime="20210619 01:45:58.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:58.091" level="INFO">2a458017-e2af-4fc2-bcdc-10ba99f4792f-106434865266884812</msg>
<status status="PASS" starttime="20210619 01:45:58.091" endtime="20210619 01:45:58.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:58.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:58.092" endtime="20210619 01:45:58.092"/>
</kw>
<msg timestamp="20210619 01:45:58.093" level="INFO">${uploadID} = 2a458017-e2af-4fc2-bcdc-10ba99f4792f-106434865266884812</msg>
<status status="PASS" starttime="20210619 01:45:58.045" endtime="20210619 01:45:58.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:58.093" endtime="20210619 01:45:58.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:58.094" endtime="20210619 01:45:58.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:45:58.094" endtime="20210619 01:45:58.095"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:58.108" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:45:58.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:45:58.142" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0309138 s, 170 MB/s</msg>
<status status="PASS" starttime="20210619 01:45:58.106" endtime="20210619 01:45:58.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:45:58.144" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0309138 s, 170 MB/s</msg>
<status status="PASS" starttime="20210619 01:45:58.143" endtime="20210619 01:45:58.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:45:58.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:45:58.144" endtime="20210619 01:45:58.145"/>
</kw>
<status status="PASS" starttime="20210619 01:45:58.106" endtime="20210619 01:45:58.146"/>
</kw>
<msg timestamp="20210619 01:45:58.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:45:58.105" endtime="20210619 01:45:58.146"/>
</kw>
<status status="PASS" starttime="20210619 01:45:58.096" endtime="20210619 01:45:58.146"/>
</kw>
<status status="PASS" starttime="20210619 01:45:58.095" endtime="20210619 01:45:58.147"/>
</kw>
<status status="PASS" starttime="20210619 01:45:58.095" endtime="20210619 01:45:58.147"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:45:58.151" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 75066/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 2a458017-e2af-4fc2-bcdc-10ba99f4792f-106434865266884812 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:02.160" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:46:02.160" level="INFO">${output} = 
An error occurred (500) when calling the UploadPart operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:45:58.149" endtime="20210619 01:46:02.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:02.162" level="INFO">
An error occurred (500) when calling the UploadPart operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:46:02.161" endtime="20210619 01:46:02.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:02.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:46:02.163" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:46:02.162" endtime="20210619 01:46:02.163"/>
</kw>
<status status="FAIL" starttime="20210619 01:45:58.149" endtime="20210619 01:46:02.163"/>
</kw>
<msg timestamp="20210619 01:46:02.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:45:58.148" endtime="20210619 01:46:02.164"/>
</kw>
<status status="FAIL" starttime="20210619 01:45:58.148" endtime="20210619 01:46:02.164"/>
</kw>
<status status="FAIL" starttime="20210619 01:45:58.147" endtime="20210619 01:46:02.164"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:02.164" endtime="20210619 01:46:02.164"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:02.165" endtime="20210619 01:46:02.165"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<status status="NOT RUN" starttime="20210619 01:46:02.165" endtime="20210619 01:46:02.165"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<status status="NOT RUN" starttime="20210619 01:46:02.165" endtime="20210619 01:46:02.165"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:02.165" endtime="20210619 01:46:02.165"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:02.166" endtime="20210619 01:46:02.166"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<status status="NOT RUN" starttime="20210619 01:46:02.166" endtime="20210619 01:46:02.166"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:02.166" endtime="20210619 01:46:02.166"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:02.166" endtime="20210619 01:46:02.166"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:02.166" endtime="20210619 01:46:02.167"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<status status="NOT RUN" starttime="20210619 01:46:02.167" endtime="20210619 01:46:02.167"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<status status="NOT RUN" starttime="20210619 01:46:02.167" endtime="20210619 01:46:02.167"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<status status="NOT RUN" starttime="20210619 01:46:02.167" endtime="20210619 01:46:02.167"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:45:57.544" endtime="20210619 01:46:02.168">255 != 0</status>
</test>
<test id="s1-s7-s7-t3" name="Test Multipart Upload Complete Entity too small">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:46:02.171" level="INFO">${random} = 11234</msg>
<status status="PASS" starttime="20210619 01:46:02.170" endtime="20210619 01:46:02.171"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:46:02.171" level="INFO">${PREFIX} = 11234</msg>
<status status="PASS" starttime="20210619 01:46:02.171" endtime="20210619 01:46:02.172"/>
</kw>
<status status="PASS" starttime="20210619 01:46:02.170" endtime="20210619 01:46:02.172"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:02.176" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 11234/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:02.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:02.636" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "2a6ac96e-e027-4a82-b051-1a85b1e97e17-106434865567957202", 
    "Key": "11234/multipartKey2"
}</msg>
<status status="PASS" starttime="20210619 01:46:02.174" endtime="20210619 01:46:02.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:02.637" level="INFO">{
    "Bucket": "link", 
    "UploadId": "2a6ac96e-e027-4a82-b051-1a85b1e97e17-106434865567957202", 
    "Key": "11234/multipartKey2"
}</msg>
<status status="PASS" starttime="20210619 01:46:02.637" endtime="20210619 01:46:02.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:02.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:02.638" endtime="20210619 01:46:02.638"/>
</kw>
<status status="PASS" starttime="20210619 01:46:02.174" endtime="20210619 01:46:02.639"/>
</kw>
<msg timestamp="20210619 01:46:02.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:46:02.173" endtime="20210619 01:46:02.639"/>
</kw>
<msg timestamp="20210619 01:46:02.639" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "2a6ac96e-e027-4a82-b051-1a85b1e97e17-106434865567957202", 
    "Key": "11234/multipartKey2"
}</msg>
<status status="PASS" starttime="20210619 01:46:02.172" endtime="20210619 01:46:02.639"/>
</kw>
<msg timestamp="20210619 01:46:02.640" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "2a6ac96e-e027-4a82-b051-1a85b1e97e17-106434865567957202", 
    "Key": "11234/multipartKey2"
}</msg>
<status status="PASS" starttime="20210619 01:46:02.172" endtime="20210619 01:46:02.640"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:02.643" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "2a6ac96e-e027-4a82-b051-1a85b1e97e17-106434865567957202", 
    "Key": "11234/multipartKey2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:02.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:02.686" level="INFO">${output} = 2a6ac96e-e027-4a82-b051-1a85b1e97e17-106434865567957202</msg>
<status status="PASS" starttime="20210619 01:46:02.641" endtime="20210619 01:46:02.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:02.687" level="INFO">2a6ac96e-e027-4a82-b051-1a85b1e97e17-106434865567957202</msg>
<status status="PASS" starttime="20210619 01:46:02.686" endtime="20210619 01:46:02.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:02.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:02.687" endtime="20210619 01:46:02.688"/>
</kw>
<msg timestamp="20210619 01:46:02.688" level="INFO">${uploadID} = 2a6ac96e-e027-4a82-b051-1a85b1e97e17-106434865567957202</msg>
<status status="PASS" starttime="20210619 01:46:02.640" endtime="20210619 01:46:02.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:02.688" endtime="20210619 01:46:02.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:02.689" endtime="20210619 01:46:02.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:02.690" endtime="20210619 01:46:02.690"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part1" &gt; /tmp/part1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:02.694" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20210619 01:46:02.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:02.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:46:02.692" endtime="20210619 01:46:02.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:02.697" level="INFO"/>
<status status="PASS" starttime="20210619 01:46:02.696" endtime="20210619 01:46:02.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:02.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:02.697" endtime="20210619 01:46:02.698"/>
</kw>
<status status="PASS" starttime="20210619 01:46:02.691" endtime="20210619 01:46:02.698"/>
</kw>
<msg timestamp="20210619 01:46:02.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:46:02.691" endtime="20210619 01:46:02.698"/>
</kw>
<status status="PASS" starttime="20210619 01:46:02.690" endtime="20210619 01:46:02.699"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:02.703" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 11234/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id 2a6ac96e-e027-4a82-b051-1a85b1e97e17-106434865567957202 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:12.275" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:46:12.275" level="INFO">${output} = 
An error occurred (500) when calling the UploadPart operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:46:02.701" endtime="20210619 01:46:12.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:12.277" level="INFO">
An error occurred (500) when calling the UploadPart operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:46:12.276" endtime="20210619 01:46:12.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:12.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:46:12.278" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:46:12.277" endtime="20210619 01:46:12.278"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:02.701" endtime="20210619 01:46:12.278"/>
</kw>
<msg timestamp="20210619 01:46:12.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:46:02.700" endtime="20210619 01:46:12.279"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:02.700" endtime="20210619 01:46:12.279"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:02.699" endtime="20210619 01:46:12.279"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:12.279" endtime="20210619 01:46:12.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:12.279" endtime="20210619 01:46:12.280"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<status status="NOT RUN" starttime="20210619 01:46:12.280" endtime="20210619 01:46:12.280"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<status status="NOT RUN" starttime="20210619 01:46:12.280" endtime="20210619 01:46:12.280"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:12.280" endtime="20210619 01:46:12.280"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:12.281" endtime="20210619 01:46:12.281"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20210619 01:46:12.281" endtime="20210619 01:46:12.281"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:12.281" endtime="20210619 01:46:12.281"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:46:02.169" endtime="20210619 01:46:12.281">255 != 0</status>
</test>
<test id="s1-s7-s7-t4" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:46:12.284" level="INFO">${random} = 40064</msg>
<status status="PASS" starttime="20210619 01:46:12.284" endtime="20210619 01:46:12.285"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:46:12.285" level="INFO">${PREFIX} = 40064</msg>
<status status="PASS" starttime="20210619 01:46:12.285" endtime="20210619 01:46:12.285"/>
</kw>
<status status="PASS" starttime="20210619 01:46:12.283" endtime="20210619 01:46:12.286"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:12.290" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 40064/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:12.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:12.741" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "cfa8c662-26ab-41dc-a8fb-b76425fddffe-106434866230198488", 
    "Key": "40064/multipartKey3"
}</msg>
<status status="PASS" starttime="20210619 01:46:12.288" endtime="20210619 01:46:12.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:12.743" level="INFO">{
    "Bucket": "link", 
    "UploadId": "cfa8c662-26ab-41dc-a8fb-b76425fddffe-106434866230198488", 
    "Key": "40064/multipartKey3"
}</msg>
<status status="PASS" starttime="20210619 01:46:12.742" endtime="20210619 01:46:12.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:12.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:12.743" endtime="20210619 01:46:12.744"/>
</kw>
<status status="PASS" starttime="20210619 01:46:12.287" endtime="20210619 01:46:12.744"/>
</kw>
<msg timestamp="20210619 01:46:12.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:46:12.287" endtime="20210619 01:46:12.744"/>
</kw>
<msg timestamp="20210619 01:46:12.744" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "cfa8c662-26ab-41dc-a8fb-b76425fddffe-106434866230198488", 
    "Key": "40064/multipartKey3"
}</msg>
<status status="PASS" starttime="20210619 01:46:12.286" endtime="20210619 01:46:12.744"/>
</kw>
<msg timestamp="20210619 01:46:12.745" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "cfa8c662-26ab-41dc-a8fb-b76425fddffe-106434866230198488", 
    "Key": "40064/multipartKey3"
}</msg>
<status status="PASS" starttime="20210619 01:46:12.286" endtime="20210619 01:46:12.745"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:12.748" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "cfa8c662-26ab-41dc-a8fb-b76425fddffe-106434866230198488", 
    "Key": "40064/multipartKey3"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:12.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:12.791" level="INFO">${output} = cfa8c662-26ab-41dc-a8fb-b76425fddffe-106434866230198488</msg>
<status status="PASS" starttime="20210619 01:46:12.746" endtime="20210619 01:46:12.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:12.793" level="INFO">cfa8c662-26ab-41dc-a8fb-b76425fddffe-106434866230198488</msg>
<status status="PASS" starttime="20210619 01:46:12.792" endtime="20210619 01:46:12.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:12.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:12.793" endtime="20210619 01:46:12.794"/>
</kw>
<msg timestamp="20210619 01:46:12.794" level="INFO">${uploadID} = cfa8c662-26ab-41dc-a8fb-b76425fddffe-106434866230198488</msg>
<status status="PASS" starttime="20210619 01:46:12.745" endtime="20210619 01:46:12.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:12.794" endtime="20210619 01:46:12.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:12.795" endtime="20210619 01:46:12.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:12.796" endtime="20210619 01:46:12.796"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:12.800" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id cfa8c662-26ab-41dc-a8fb-b76425fddffe-106434866230198488 --bucket link --key 40064/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:13.276" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:46:13.276" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210619 01:46:12.798" endtime="20210619 01:46:13.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:13.277" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20210619 01:46:13.277" endtime="20210619 01:46:13.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:13.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:13.278" endtime="20210619 01:46:13.278"/>
</kw>
<msg timestamp="20210619 01:46:13.279" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210619 01:46:12.797" endtime="20210619 01:46:13.279"/>
</kw>
<msg timestamp="20210619 01:46:13.279" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210619 01:46:12.796" endtime="20210619 01:46:13.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:13.279" endtime="20210619 01:46:13.280"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:13.284" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id cfa8c662-26ab-41dc-a8fb-b76425fddffe-106434866230198488 --bucket link --key 40064/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:13.757" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:46:13.757" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210619 01:46:13.282" endtime="20210619 01:46:13.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:13.759" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20210619 01:46:13.758" endtime="20210619 01:46:13.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:13.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:13.759" endtime="20210619 01:46:13.760"/>
</kw>
<msg timestamp="20210619 01:46:13.760" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210619 01:46:13.281" endtime="20210619 01:46:13.760"/>
</kw>
<msg timestamp="20210619 01:46:13.760" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20210619 01:46:13.280" endtime="20210619 01:46:13.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:13.761" endtime="20210619 01:46:13.761"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:13.766" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:13.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:13.801" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0321264 s, 163 MB/s</msg>
<status status="PASS" starttime="20210619 01:46:13.764" endtime="20210619 01:46:13.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:13.802" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0321264 s, 163 MB/s</msg>
<status status="PASS" starttime="20210619 01:46:13.802" endtime="20210619 01:46:13.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:13.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:13.803" endtime="20210619 01:46:13.804"/>
</kw>
<status status="PASS" starttime="20210619 01:46:13.763" endtime="20210619 01:46:13.804"/>
</kw>
<msg timestamp="20210619 01:46:13.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:46:13.763" endtime="20210619 01:46:13.804"/>
</kw>
<status status="PASS" starttime="20210619 01:46:13.762" endtime="20210619 01:46:13.804"/>
</kw>
<status status="PASS" starttime="20210619 01:46:13.762" endtime="20210619 01:46:13.805"/>
</kw>
<status status="PASS" starttime="20210619 01:46:13.761" endtime="20210619 01:46:13.805"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:13.812" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 40064/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id cfa8c662-26ab-41dc-a8fb-b76425fddffe-106434866230198488 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:18.491" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:46:18.491" level="INFO">${output} = 
An error occurred (500) when calling the UploadPart operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:46:13.810" endtime="20210619 01:46:18.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:18.493" level="INFO">
An error occurred (500) when calling the UploadPart operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:46:18.492" endtime="20210619 01:46:18.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:18.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:46:18.494" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:46:18.493" endtime="20210619 01:46:18.494"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:13.807" endtime="20210619 01:46:18.494"/>
</kw>
<msg timestamp="20210619 01:46:18.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:46:13.806" endtime="20210619 01:46:18.495"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:13.806" endtime="20210619 01:46:18.495"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:13.805" endtime="20210619 01:46:18.495"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:18.496" endtime="20210619 01:46:18.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:18.496" endtime="20210619 01:46:18.496"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<status status="NOT RUN" starttime="20210619 01:46:18.496" endtime="20210619 01:46:18.496"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:18.496" endtime="20210619 01:46:18.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:18.497" endtime="20210619 01:46:18.497"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<status status="NOT RUN" starttime="20210619 01:46:18.497" endtime="20210619 01:46:18.497"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<status status="NOT RUN" starttime="20210619 01:46:18.497" endtime="20210619 01:46:18.497"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:18.497" endtime="20210619 01:46:18.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:18.498" endtime="20210619 01:46:18.498"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20210619 01:46:18.498" endtime="20210619 01:46:18.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:18.498" endtime="20210619 01:46:18.498"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20210619 01:46:18.498" endtime="20210619 01:46:18.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:18.498" endtime="20210619 01:46:18.499"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20210619 01:46:18.499" endtime="20210619 01:46:18.499"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:18.499" endtime="20210619 01:46:18.499"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<status status="NOT RUN" starttime="20210619 01:46:18.499" endtime="20210619 01:46:18.499"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:18.499" endtime="20210619 01:46:18.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:18.500" endtime="20210619 01:46:18.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:18.500" endtime="20210619 01:46:18.500"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<status status="NOT RUN" starttime="20210619 01:46:18.500" endtime="20210619 01:46:18.500"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<status status="NOT RUN" starttime="20210619 01:46:18.500" endtime="20210619 01:46:18.500"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<status status="NOT RUN" starttime="20210619 01:46:18.501" endtime="20210619 01:46:18.501"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:46:12.282" endtime="20210619 01:46:18.501">255 != 0</status>
</test>
<test id="s1-s7-s7-t5" name="Test abort Multipart upload">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:46:18.504" level="INFO">${random} = 64176</msg>
<status status="PASS" starttime="20210619 01:46:18.503" endtime="20210619 01:46:18.504"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:46:18.504" level="INFO">${PREFIX} = 64176</msg>
<status status="PASS" starttime="20210619 01:46:18.504" endtime="20210619 01:46:18.504"/>
</kw>
<status status="PASS" starttime="20210619 01:46:18.503" endtime="20210619 01:46:18.505"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:18.509" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 64176/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:18.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:18.963" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "4fe15181-7671-45c9-98ab-1d5a1ec1ac90-106434866638094558", 
    "Key": "64176/multipartKey4"
}</msg>
<status status="PASS" starttime="20210619 01:46:18.507" endtime="20210619 01:46:18.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:18.965" level="INFO">{
    "Bucket": "link", 
    "UploadId": "4fe15181-7671-45c9-98ab-1d5a1ec1ac90-106434866638094558", 
    "Key": "64176/multipartKey4"
}</msg>
<status status="PASS" starttime="20210619 01:46:18.964" endtime="20210619 01:46:18.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:18.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:18.965" endtime="20210619 01:46:18.966"/>
</kw>
<status status="PASS" starttime="20210619 01:46:18.506" endtime="20210619 01:46:18.966"/>
</kw>
<msg timestamp="20210619 01:46:18.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:46:18.506" endtime="20210619 01:46:18.966"/>
</kw>
<msg timestamp="20210619 01:46:18.967" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "4fe15181-7671-45c9-98ab-1d5a1ec1ac90-106434866638094558", 
    "Key": "64176/multipartKey4"
}</msg>
<status status="PASS" starttime="20210619 01:46:18.505" endtime="20210619 01:46:18.967"/>
</kw>
<msg timestamp="20210619 01:46:18.967" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "4fe15181-7671-45c9-98ab-1d5a1ec1ac90-106434866638094558", 
    "Key": "64176/multipartKey4"
}</msg>
<status status="PASS" starttime="20210619 01:46:18.505" endtime="20210619 01:46:18.967"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:18.970" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "4fe15181-7671-45c9-98ab-1d5a1ec1ac90-106434866638094558", 
    "Key": "64176/multipartKey4"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:19.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:19.014" level="INFO">${output} = 4fe15181-7671-45c9-98ab-1d5a1ec1ac90-106434866638094558</msg>
<status status="PASS" starttime="20210619 01:46:18.968" endtime="20210619 01:46:19.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:19.015" level="INFO">4fe15181-7671-45c9-98ab-1d5a1ec1ac90-106434866638094558</msg>
<status status="PASS" starttime="20210619 01:46:19.015" endtime="20210619 01:46:19.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:19.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:19.016" endtime="20210619 01:46:19.016"/>
</kw>
<msg timestamp="20210619 01:46:19.017" level="INFO">${uploadID} = 4fe15181-7671-45c9-98ab-1d5a1ec1ac90-106434866638094558</msg>
<status status="PASS" starttime="20210619 01:46:18.967" endtime="20210619 01:46:19.017"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:19.017" endtime="20210619 01:46:19.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:19.018" endtime="20210619 01:46:19.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:19.018" endtime="20210619 01:46:19.019"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:19.023" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key 64176/multipartKey4 --upload-id 4fe15181-7671-45c9-98ab-1d5a1ec1ac90-106434866638094558 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:19.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:19.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:46:19.021" endtime="20210619 01:46:19.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:19.484" level="INFO"/>
<status status="PASS" starttime="20210619 01:46:19.483" endtime="20210619 01:46:19.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:19.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:19.484" endtime="20210619 01:46:19.484"/>
</kw>
<msg timestamp="20210619 01:46:19.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:46:19.020" endtime="20210619 01:46:19.485"/>
</kw>
<msg timestamp="20210619 01:46:19.485" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:46:19.019" endtime="20210619 01:46:19.485"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:46:18.502" endtime="20210619 01:46:19.486"/>
</test>
<test id="s1-s7-s7-t6" name="Test abort Multipart upload with invalid uploadId">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:46:19.489" level="INFO">${random} = 81408</msg>
<status status="PASS" starttime="20210619 01:46:19.489" endtime="20210619 01:46:19.489"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:46:19.490" level="INFO">${PREFIX} = 81408</msg>
<status status="PASS" starttime="20210619 01:46:19.490" endtime="20210619 01:46:19.490"/>
</kw>
<status status="PASS" starttime="20210619 01:46:19.488" endtime="20210619 01:46:19.490"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:19.494" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key 81408/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:20.014" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:46:20.015" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20210619 01:46:19.492" endtime="20210619 01:46:20.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:20.016" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20210619 01:46:20.015" endtime="20210619 01:46:20.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:20.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:20.016" endtime="20210619 01:46:20.017"/>
</kw>
<msg timestamp="20210619 01:46:20.017" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20210619 01:46:19.491" endtime="20210619 01:46:20.017"/>
</kw>
<msg timestamp="20210619 01:46:20.018" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20210619 01:46:19.491" endtime="20210619 01:46:20.018"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:46:19.487" endtime="20210619 01:46:20.018"/>
</test>
<test id="s1-s7-s7-t7" name="Upload part with Incorrect uploadID">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:46:20.021" level="INFO">${random} = 55820</msg>
<status status="PASS" starttime="20210619 01:46:20.020" endtime="20210619 01:46:20.021"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:46:20.022" level="INFO">${PREFIX} = 55820</msg>
<status status="PASS" starttime="20210619 01:46:20.021" endtime="20210619 01:46:20.022"/>
</kw>
<status status="PASS" starttime="20210619 01:46:20.020" endtime="20210619 01:46:20.022"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:20.025" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20210619 01:46:20.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:20.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:46:20.024" endtime="20210619 01:46:20.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:20.028" level="INFO"/>
<status status="PASS" starttime="20210619 01:46:20.028" endtime="20210619 01:46:20.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:20.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:20.029" endtime="20210619 01:46:20.029"/>
</kw>
<status status="PASS" starttime="20210619 01:46:20.023" endtime="20210619 01:46:20.030"/>
</kw>
<msg timestamp="20210619 01:46:20.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:46:20.023" endtime="20210619 01:46:20.030"/>
</kw>
<status status="PASS" starttime="20210619 01:46:20.022" endtime="20210619 01:46:20.030"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:20.034" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 55820/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:20.490" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:46:20.490" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20210619 01:46:20.032" endtime="20210619 01:46:20.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:20.492" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20210619 01:46:20.491" endtime="20210619 01:46:20.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:20.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:20.492" endtime="20210619 01:46:20.493"/>
</kw>
<msg timestamp="20210619 01:46:20.493" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20210619 01:46:20.031" endtime="20210619 01:46:20.493"/>
</kw>
<msg timestamp="20210619 01:46:20.493" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20210619 01:46:20.030" endtime="20210619 01:46:20.494"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:20.494" endtime="20210619 01:46:20.494"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:46:20.019" endtime="20210619 01:46:20.495"/>
</test>
<test id="s1-s7-s7-t8" name="Test list parts">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:46:20.497" level="INFO">${random} = 98632</msg>
<status status="PASS" starttime="20210619 01:46:20.497" endtime="20210619 01:46:20.497"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:46:20.498" level="INFO">${PREFIX} = 98632</msg>
<status status="PASS" starttime="20210619 01:46:20.497" endtime="20210619 01:46:20.498"/>
</kw>
<status status="PASS" starttime="20210619 01:46:20.496" endtime="20210619 01:46:20.498"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:20.503" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 98632/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:20.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:20.969" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "728b1bea-7df4-4281-9502-0b17b17267d3-106434866769232096", 
    "Key": "98632/multipartKey5"
}</msg>
<status status="PASS" starttime="20210619 01:46:20.501" endtime="20210619 01:46:20.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:20.971" level="INFO">{
    "Bucket": "link", 
    "UploadId": "728b1bea-7df4-4281-9502-0b17b17267d3-106434866769232096", 
    "Key": "98632/multipartKey5"
}</msg>
<status status="PASS" starttime="20210619 01:46:20.970" endtime="20210619 01:46:20.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:20.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:20.971" endtime="20210619 01:46:20.972"/>
</kw>
<status status="PASS" starttime="20210619 01:46:20.500" endtime="20210619 01:46:20.972"/>
</kw>
<msg timestamp="20210619 01:46:20.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:46:20.500" endtime="20210619 01:46:20.972"/>
</kw>
<msg timestamp="20210619 01:46:20.973" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "728b1bea-7df4-4281-9502-0b17b17267d3-106434866769232096", 
    "Key": "98632/multipartKey5"
}</msg>
<status status="PASS" starttime="20210619 01:46:20.499" endtime="20210619 01:46:20.973"/>
</kw>
<msg timestamp="20210619 01:46:20.973" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "728b1bea-7df4-4281-9502-0b17b17267d3-106434866769232096", 
    "Key": "98632/multipartKey5"
}</msg>
<status status="PASS" starttime="20210619 01:46:20.498" endtime="20210619 01:46:20.973"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:20.978" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "728b1bea-7df4-4281-9502-0b17b17267d3-106434866769232096", 
    "Key": "98632/multipartKey5"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:21.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:21.021" level="INFO">${output} = 728b1bea-7df4-4281-9502-0b17b17267d3-106434866769232096</msg>
<status status="PASS" starttime="20210619 01:46:20.974" endtime="20210619 01:46:21.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:21.022" level="INFO">728b1bea-7df4-4281-9502-0b17b17267d3-106434866769232096</msg>
<status status="PASS" starttime="20210619 01:46:21.021" endtime="20210619 01:46:21.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:21.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:21.022" endtime="20210619 01:46:21.023"/>
</kw>
<msg timestamp="20210619 01:46:21.023" level="INFO">${uploadID} = 728b1bea-7df4-4281-9502-0b17b17267d3-106434866769232096</msg>
<status status="PASS" starttime="20210619 01:46:20.973" endtime="20210619 01:46:21.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:21.024" endtime="20210619 01:46:21.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:21.024" endtime="20210619 01:46:21.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:46:21.025" endtime="20210619 01:46:21.026"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:21.030" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:21.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:21.066" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0326167 s, 161 MB/s</msg>
<status status="PASS" starttime="20210619 01:46:21.028" endtime="20210619 01:46:21.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:21.068" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0326167 s, 161 MB/s</msg>
<status status="PASS" starttime="20210619 01:46:21.067" endtime="20210619 01:46:21.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:21.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:21.068" endtime="20210619 01:46:21.069"/>
</kw>
<status status="PASS" starttime="20210619 01:46:21.028" endtime="20210619 01:46:21.069"/>
</kw>
<msg timestamp="20210619 01:46:21.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:46:21.027" endtime="20210619 01:46:21.069"/>
</kw>
<status status="PASS" starttime="20210619 01:46:21.027" endtime="20210619 01:46:21.070"/>
</kw>
<status status="PASS" starttime="20210619 01:46:21.026" endtime="20210619 01:46:21.070"/>
</kw>
<status status="PASS" starttime="20210619 01:46:21.026" endtime="20210619 01:46:21.070"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:21.075" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key 98632/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 728b1bea-7df4-4281-9502-0b17b17267d3-106434866769232096 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:29.444" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:46:29.444" level="INFO">${output} = 
An error occurred (500) when calling the UploadPart operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:46:21.072" endtime="20210619 01:46:29.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:29.446" level="INFO">
An error occurred (500) when calling the UploadPart operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:46:29.445" endtime="20210619 01:46:29.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:29.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:46:29.447" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:46:29.446" endtime="20210619 01:46:29.447"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:21.072" endtime="20210619 01:46:29.447"/>
</kw>
<msg timestamp="20210619 01:46:29.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:46:21.071" endtime="20210619 01:46:29.447"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:21.071" endtime="20210619 01:46:29.448"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:21.070" endtime="20210619 01:46:29.448"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:29.448" endtime="20210619 01:46:29.448"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:29.449" endtime="20210619 01:46:29.449"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<status status="NOT RUN" starttime="20210619 01:46:29.449" endtime="20210619 01:46:29.449"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<status status="NOT RUN" starttime="20210619 01:46:29.449" endtime="20210619 01:46:29.449"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:29.449" endtime="20210619 01:46:29.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:29.450" endtime="20210619 01:46:29.450"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<status status="NOT RUN" starttime="20210619 01:46:29.450" endtime="20210619 01:46:29.450"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:29.450" endtime="20210619 01:46:29.450"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:29.450" endtime="20210619 01:46:29.450"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210619 01:46:29.451" endtime="20210619 01:46:29.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:29.451" endtime="20210619 01:46:29.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:29.451" endtime="20210619 01:46:29.451"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<status status="NOT RUN" starttime="20210619 01:46:29.451" endtime="20210619 01:46:29.451"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:29.452" endtime="20210619 01:46:29.452"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:29.452" endtime="20210619 01:46:29.452"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210619 01:46:29.452" endtime="20210619 01:46:29.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:29.452" endtime="20210619 01:46:29.452"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<status status="NOT RUN" starttime="20210619 01:46:29.453" endtime="20210619 01:46:29.453"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:29.453" endtime="20210619 01:46:29.453"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210619 01:46:29.453" endtime="20210619 01:46:29.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:29.453" endtime="20210619 01:46:29.453"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:29.454" endtime="20210619 01:46:29.454"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:46:20.495" endtime="20210619 01:46:29.454">255 != 0</status>
</test>
<test id="s1-s7-s7-t9" name="Test Multipart Upload with the simplified aws s3 cp API">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:46:29.458" level="INFO">${random} = 70388</msg>
<status status="PASS" starttime="20210619 01:46:29.457" endtime="20210619 01:46:29.458"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:46:29.459" level="INFO">${PREFIX} = 70388</msg>
<status status="PASS" starttime="20210619 01:46:29.458" endtime="20210619 01:46:29.459"/>
</kw>
<status status="PASS" starttime="20210619 01:46:29.456" endtime="20210619 01:46:29.459"/>
</kw>
<kw name="Create Random file">
<arg>22</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:29.465" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:29.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:29.626" level="INFO">${output} = 22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.155958 s, 148 MB/s</msg>
<status status="PASS" starttime="20210619 01:46:29.462" endtime="20210619 01:46:29.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:29.628" level="INFO">22+0 records in
22+0 records out
23068672 bytes (23 MB) copied, 0.155958 s, 148 MB/s</msg>
<status status="PASS" starttime="20210619 01:46:29.627" endtime="20210619 01:46:29.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:29.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:29.628" endtime="20210619 01:46:29.629"/>
</kw>
<status status="PASS" starttime="20210619 01:46:29.461" endtime="20210619 01:46:29.630"/>
</kw>
<msg timestamp="20210619 01:46:29.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:46:29.461" endtime="20210619 01:46:29.630"/>
</kw>
<status status="PASS" starttime="20210619 01:46:29.460" endtime="20210619 01:46:29.630"/>
</kw>
<status status="PASS" starttime="20210619 01:46:29.459" endtime="20210619 01:46:29.630"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:29.635" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://link/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:41.965" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:46:41.965" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.8 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20210619 01:46:29.633" endtime="20210619 01:46:41.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:41.966" level="INFO">Completed 256.0 KiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.8 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (11.3 MiB/s) with 1 file(s) remaining 
Completed 1.2 MiB/22.0 MiB (14.1 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/22.0 MiB (16.7 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (14.9 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (16.9 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (18.8 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (20.8 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (22.9 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (24.7 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (24.8 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (25.8 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (27.4 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (27.3 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (28.9 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (30.4 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (32.0 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (33.6 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (35.2 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (35.5 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (36.7 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (37.9 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (39.2 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (39.9 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (41.1 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (42.4 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (43.5 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (45.0 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (45.5 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (46.8 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (47.9 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (49.0 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (50.1 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (51.3 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (51.4 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (50.5 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (51.7 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (52.8 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (53.9 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (55.1 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (56.2 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (57.0 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (57.7 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (58.2 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (57.8 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (57.1 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (56.2 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (56.6 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (57.1 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (58.1 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (59.1 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (60.1 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (61.1 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (62.1 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (62.8 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (63.6 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (64.3 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (64.7 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (65.3 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (65.2 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (65.4 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (65.0 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (65.3 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (65.6 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (65.7 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (66.1 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (66.8 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (67.5 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (68.2 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (68.8 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (69.5 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (70.1 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (70.5 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (70.9 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (70.3 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (71.2 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (70.7 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (71.6 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (71.1 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (72.0 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (71.8 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (72.6 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (72.5 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (72.8 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (73.4 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (74.0 MiB/s) with 1 file(s) remaining
upload failed: ../../tmp/part1 to s3://link/mpyawscli An error occurred (500) when calling the UploadPart operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:46:41.966" endtime="20210619 01:46:41.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:41.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:46:41.968" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210619 01:46:41.967" endtime="20210619 01:46:41.968"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:29.632" endtime="20210619 01:46:41.968"/>
</kw>
<msg timestamp="20210619 01:46:41.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:46:29.632" endtime="20210619 01:46:41.968"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:29.631" endtime="20210619 01:46:41.968"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:29.631" endtime="20210619 01:46:41.969"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
<status status="NOT RUN" starttime="20210619 01:46:41.969" endtime="20210619 01:46:41.969"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<status status="NOT RUN" starttime="20210619 01:46:41.969" endtime="20210619 01:46:41.969"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
<status status="NOT RUN" starttime="20210619 01:46:41.969" endtime="20210619 01:46:41.969"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:46:29.455" endtime="20210619 01:46:41.970">1 != 0</status>
</test>
<test id="s1-s7-s7-t10" name="Test Multipart Upload Put With Copy">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:46:41.973" level="INFO">${random} = 49027</msg>
<status status="PASS" starttime="20210619 01:46:41.972" endtime="20210619 01:46:41.973"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:46:41.974" level="INFO">${PREFIX} = 49027</msg>
<status status="PASS" starttime="20210619 01:46:41.973" endtime="20210619 01:46:41.974"/>
</kw>
<status status="PASS" starttime="20210619 01:46:41.972" endtime="20210619 01:46:41.974"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:41.979" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:42.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:42.022" level="INFO">${output} = 5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0315355 s, 166 MB/s</msg>
<status status="PASS" starttime="20210619 01:46:41.977" endtime="20210619 01:46:42.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:42.023" level="INFO">5+0 records in
5+0 records out
5242880 bytes (5.2 MB) copied, 0.0315355 s, 166 MB/s</msg>
<status status="PASS" starttime="20210619 01:46:42.023" endtime="20210619 01:46:42.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:42.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:42.024" endtime="20210619 01:46:42.024"/>
</kw>
<status status="PASS" starttime="20210619 01:46:41.976" endtime="20210619 01:46:42.025"/>
</kw>
<msg timestamp="20210619 01:46:42.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:46:41.976" endtime="20210619 01:46:42.025"/>
</kw>
<status status="PASS" starttime="20210619 01:46:41.975" endtime="20210619 01:46:42.025"/>
</kw>
<status status="PASS" starttime="20210619 01:46:41.975" endtime="20210619 01:46:42.025"/>
</kw>
<status status="PASS" starttime="20210619 01:46:41.974" endtime="20210619 01:46:42.025"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:42.030" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 49027/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:54.242" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:46:54.242" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:46:42.028" endtime="20210619 01:46:54.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:54.243" level="INFO">
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:46:54.242" endtime="20210619 01:46:54.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:54.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:46:54.245" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:46:54.243" endtime="20210619 01:46:54.245"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:42.027" endtime="20210619 01:46:54.245"/>
</kw>
<msg timestamp="20210619 01:46:54.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:46:42.027" endtime="20210619 01:46:54.245"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:42.026" endtime="20210619 01:46:54.245"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:42.026" endtime="20210619 01:46:54.246"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<status status="NOT RUN" starttime="20210619 01:46:54.246" endtime="20210619 01:46:54.246"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:54.246" endtime="20210619 01:46:54.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:54.246" endtime="20210619 01:46:54.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:54.247" endtime="20210619 01:46:54.247"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<status status="NOT RUN" starttime="20210619 01:46:54.247" endtime="20210619 01:46:54.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:54.247" endtime="20210619 01:46:54.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:46:54.247" endtime="20210619 01:46:54.247"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:46:54.248" endtime="20210619 01:46:54.248"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<status status="NOT RUN" starttime="20210619 01:46:54.248" endtime="20210619 01:46:54.248"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<status status="NOT RUN" starttime="20210619 01:46:54.248" endtime="20210619 01:46:54.248"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<status status="NOT RUN" starttime="20210619 01:46:54.248" endtime="20210619 01:46:54.248"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:46:41.971" endtime="20210619 01:46:54.249">255 != 0</status>
</test>
<test id="s1-s7-s7-t11" name="Test Multipart Upload Put With Copy and range">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:46:54.252" level="INFO">${random} = 67667</msg>
<status status="PASS" starttime="20210619 01:46:54.251" endtime="20210619 01:46:54.252"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:46:54.252" level="INFO">${PREFIX} = 67667</msg>
<status status="PASS" starttime="20210619 01:46:54.252" endtime="20210619 01:46:54.252"/>
</kw>
<status status="PASS" starttime="20210619 01:46:54.251" endtime="20210619 01:46:54.253"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:54.257" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:46:54.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:46:54.339" level="INFO">${output} = 10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0766417 s, 137 MB/s</msg>
<status status="PASS" starttime="20210619 01:46:54.255" endtime="20210619 01:46:54.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:46:54.340" level="INFO">10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0766417 s, 137 MB/s</msg>
<status status="PASS" starttime="20210619 01:46:54.340" endtime="20210619 01:46:54.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:46:54.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:46:54.341" endtime="20210619 01:46:54.341"/>
</kw>
<status status="PASS" starttime="20210619 01:46:54.255" endtime="20210619 01:46:54.342"/>
</kw>
<msg timestamp="20210619 01:46:54.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:46:54.254" endtime="20210619 01:46:54.342"/>
</kw>
<status status="PASS" starttime="20210619 01:46:54.254" endtime="20210619 01:46:54.342"/>
</kw>
<status status="PASS" starttime="20210619 01:46:54.253" endtime="20210619 01:46:54.343"/>
</kw>
<status status="PASS" starttime="20210619 01:46:54.253" endtime="20210619 01:46:54.343"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:46:54.347" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 67667/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:03.378" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:47:03.379" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:46:54.345" endtime="20210619 01:47:03.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:03.380" level="INFO">
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:47:03.379" endtime="20210619 01:47:03.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:03.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:47:03.381" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:47:03.381" endtime="20210619 01:47:03.381"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:54.345" endtime="20210619 01:47:03.382"/>
</kw>
<msg timestamp="20210619 01:47:03.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:46:54.344" endtime="20210619 01:47:03.382"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:54.344" endtime="20210619 01:47:03.382"/>
</kw>
<status status="FAIL" starttime="20210619 01:46:54.343" endtime="20210619 01:47:03.383"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<status status="NOT RUN" starttime="20210619 01:47:03.383" endtime="20210619 01:47:03.383"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:47:03.383" endtime="20210619 01:47:03.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:03.383" endtime="20210619 01:47:03.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:03.384" endtime="20210619 01:47:03.384"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<status status="NOT RUN" starttime="20210619 01:47:03.384" endtime="20210619 01:47:03.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:03.385" endtime="20210619 01:47:03.385"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:03.385" endtime="20210619 01:47:03.385"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:47:03.385" endtime="20210619 01:47:03.385"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<status status="NOT RUN" starttime="20210619 01:47:03.386" endtime="20210619 01:47:03.386"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:03.386" endtime="20210619 01:47:03.386"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:03.386" endtime="20210619 01:47:03.386"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:47:03.386" endtime="20210619 01:47:03.386"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<status status="NOT RUN" starttime="20210619 01:47:03.387" endtime="20210619 01:47:03.387"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<status status="NOT RUN" starttime="20210619 01:47:03.387" endtime="20210619 01:47:03.387"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<status status="NOT RUN" starttime="20210619 01:47:03.387" endtime="20210619 01:47:03.387"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:46:54.250" endtime="20210619 01:47:03.387">255 != 0</status>
</test>
<test id="s1-s7-s7-t12" name="Test Multipart Upload Put With Copy and range with IfModifiedSince">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:47:03.390" level="INFO">${random} = 37203</msg>
<status status="PASS" starttime="20210619 01:47:03.390" endtime="20210619 01:47:03.390"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:47:03.391" level="INFO">${PREFIX} = 37203</msg>
<status status="PASS" starttime="20210619 01:47:03.391" endtime="20210619 01:47:03.391"/>
</kw>
<status status="PASS" starttime="20210619 01:47:03.389" endtime="20210619 01:47:03.391"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:03.396" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:03.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:03.473" level="INFO">${output} = 10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0721413 s, 145 MB/s</msg>
<status status="PASS" starttime="20210619 01:47:03.394" endtime="20210619 01:47:03.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:03.475" level="INFO">10+0 records in
10+0 records out
10485760 bytes (10 MB) copied, 0.0721413 s, 145 MB/s</msg>
<status status="PASS" starttime="20210619 01:47:03.474" endtime="20210619 01:47:03.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:03.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:03.475" endtime="20210619 01:47:03.476"/>
</kw>
<status status="PASS" starttime="20210619 01:47:03.393" endtime="20210619 01:47:03.476"/>
</kw>
<msg timestamp="20210619 01:47:03.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:03.393" endtime="20210619 01:47:03.476"/>
</kw>
<status status="PASS" starttime="20210619 01:47:03.392" endtime="20210619 01:47:03.477"/>
</kw>
<status status="PASS" starttime="20210619 01:47:03.392" endtime="20210619 01:47:03.477"/>
</kw>
<status status="PASS" starttime="20210619 01:47:03.391" endtime="20210619 01:47:03.477"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20210619 01:47:03.478" level="INFO">${curDate} = 2021-06-19 01:47:03.478</msg>
<status status="PASS" starttime="20210619 01:47:03.477" endtime="20210619 01:47:03.478"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20210619 01:47:03.483" level="INFO">${beforeCreate} = 2021-06-18 01:47:03.478</msg>
<status status="PASS" starttime="20210619 01:47:03.478" endtime="20210619 01:47:03.483"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20210619 01:47:03.483" level="INFO">${afterCreate} = 2021-06-20 01:47:03.478</msg>
<status status="PASS" starttime="20210619 01:47:03.483" endtime="20210619 01:47:03.483"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:03.488" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 37203/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:06.733" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:47:06.733" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:47:03.486" endtime="20210619 01:47:06.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:06.735" level="INFO">
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:47:06.734" endtime="20210619 01:47:06.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:06.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:47:06.736" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:47:06.735" endtime="20210619 01:47:06.736"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:03.485" endtime="20210619 01:47:06.736"/>
</kw>
<msg timestamp="20210619 01:47:06.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:47:03.485" endtime="20210619 01:47:06.737"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:03.484" endtime="20210619 01:47:06.737"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:03.484" endtime="20210619 01:47:06.737"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<status status="NOT RUN" starttime="20210619 01:47:06.737" endtime="20210619 01:47:06.737"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:47:06.738" endtime="20210619 01:47:06.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:06.738" endtime="20210619 01:47:06.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:06.738" endtime="20210619 01:47:06.738"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20210619 01:47:06.738" endtime="20210619 01:47:06.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:06.739" endtime="20210619 01:47:06.739"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20210619 01:47:06.739" endtime="20210619 01:47:06.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:06.739" endtime="20210619 01:47:06.739"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:47:06.739" endtime="20210619 01:47:06.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:06.740" endtime="20210619 01:47:06.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:06.740" endtime="20210619 01:47:06.740"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:47:06.740" endtime="20210619 01:47:06.740"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:47:06.740" endtime="20210619 01:47:06.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:06.740" endtime="20210619 01:47:06.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:06.741" endtime="20210619 01:47:06.741"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20210619 01:47:06.741" endtime="20210619 01:47:06.741"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<status status="NOT RUN" starttime="20210619 01:47:06.741" endtime="20210619 01:47:06.741"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<status status="NOT RUN" starttime="20210619 01:47:06.741" endtime="20210619 01:47:06.741"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<status status="NOT RUN" starttime="20210619 01:47:06.742" endtime="20210619 01:47:06.742"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:47:03.388" endtime="20210619 01:47:06.742">255 != 0</status>
</test>
<test id="s1-s7-s7-t13" name="Test Multipart Upload list">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:47:06.745" level="INFO">${random} = 27103</msg>
<status status="PASS" starttime="20210619 01:47:06.744" endtime="20210619 01:47:06.745"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:47:06.746" level="INFO">${PREFIX} = 27103</msg>
<status status="PASS" starttime="20210619 01:47:06.745" endtime="20210619 01:47:06.746"/>
</kw>
<status status="PASS" starttime="20210619 01:47:06.744" endtime="20210619 01:47:06.746"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:06.751" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 27103/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:07.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:07.201" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "68ec8176-68e9-40f9-adea-471090eafc8e-106434869799223540", 
    "Key": "27103/listtest/key1"
}</msg>
<status status="PASS" starttime="20210619 01:47:06.749" endtime="20210619 01:47:07.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:07.203" level="INFO">{
    "Bucket": "link", 
    "UploadId": "68ec8176-68e9-40f9-adea-471090eafc8e-106434869799223540", 
    "Key": "27103/listtest/key1"
}</msg>
<status status="PASS" starttime="20210619 01:47:07.202" endtime="20210619 01:47:07.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:07.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:07.203" endtime="20210619 01:47:07.203"/>
</kw>
<status status="PASS" starttime="20210619 01:47:06.749" endtime="20210619 01:47:07.204"/>
</kw>
<msg timestamp="20210619 01:47:07.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:06.748" endtime="20210619 01:47:07.204"/>
</kw>
<msg timestamp="20210619 01:47:07.204" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "68ec8176-68e9-40f9-adea-471090eafc8e-106434869799223540", 
    "Key": "27103/listtest/key1"
}</msg>
<status status="PASS" starttime="20210619 01:47:06.747" endtime="20210619 01:47:07.204"/>
</kw>
<msg timestamp="20210619 01:47:07.205" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "68ec8176-68e9-40f9-adea-471090eafc8e-106434869799223540", 
    "Key": "27103/listtest/key1"
}</msg>
<status status="PASS" starttime="20210619 01:47:06.746" endtime="20210619 01:47:07.205"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:07.208" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "68ec8176-68e9-40f9-adea-471090eafc8e-106434869799223540", 
    "Key": "27103/listtest/key1"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:07.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:07.258" level="INFO">${output} = 68ec8176-68e9-40f9-adea-471090eafc8e-106434869799223540</msg>
<status status="PASS" starttime="20210619 01:47:07.206" endtime="20210619 01:47:07.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:07.259" level="INFO">68ec8176-68e9-40f9-adea-471090eafc8e-106434869799223540</msg>
<status status="PASS" starttime="20210619 01:47:07.258" endtime="20210619 01:47:07.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:07.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:07.259" endtime="20210619 01:47:07.260"/>
</kw>
<msg timestamp="20210619 01:47:07.260" level="INFO">${uploadID1} = 68ec8176-68e9-40f9-adea-471090eafc8e-106434869799223540</msg>
<status status="PASS" starttime="20210619 01:47:07.205" endtime="20210619 01:47:07.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:47:07.261" endtime="20210619 01:47:07.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:47:07.261" endtime="20210619 01:47:07.262"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:47:07.262" endtime="20210619 01:47:07.262"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:07.267" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key 27103/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:07.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:07.736" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "3cc53513-7247-4f07-953a-bea423cf3415-106434869834154229", 
    "Key": "27103/listtest/key2"
}</msg>
<status status="PASS" starttime="20210619 01:47:07.265" endtime="20210619 01:47:07.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:07.737" level="INFO">{
    "Bucket": "link", 
    "UploadId": "3cc53513-7247-4f07-953a-bea423cf3415-106434869834154229", 
    "Key": "27103/listtest/key2"
}</msg>
<status status="PASS" starttime="20210619 01:47:07.737" endtime="20210619 01:47:07.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:07.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:07.738" endtime="20210619 01:47:07.738"/>
</kw>
<status status="PASS" starttime="20210619 01:47:07.264" endtime="20210619 01:47:07.739"/>
</kw>
<msg timestamp="20210619 01:47:07.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:07.264" endtime="20210619 01:47:07.739"/>
</kw>
<msg timestamp="20210619 01:47:07.739" level="INFO">${output} = {
    "Bucket": "link", 
    "UploadId": "3cc53513-7247-4f07-953a-bea423cf3415-106434869834154229", 
    "Key": "27103/listtest/key2"
}</msg>
<status status="PASS" starttime="20210619 01:47:07.263" endtime="20210619 01:47:07.739"/>
</kw>
<msg timestamp="20210619 01:47:07.740" level="INFO">${result} = {
    "Bucket": "link", 
    "UploadId": "3cc53513-7247-4f07-953a-bea423cf3415-106434869834154229", 
    "Key": "27103/listtest/key2"
}</msg>
<status status="PASS" starttime="20210619 01:47:07.262" endtime="20210619 01:47:07.740"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:07.743" level="INFO">Running command 'echo '{
    "Bucket": "link", 
    "UploadId": "3cc53513-7247-4f07-953a-bea423cf3415-106434869834154229", 
    "Key": "27103/listtest/key2"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:07.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:07.786" level="INFO">${output} = 3cc53513-7247-4f07-953a-bea423cf3415-106434869834154229</msg>
<status status="PASS" starttime="20210619 01:47:07.741" endtime="20210619 01:47:07.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:07.787" level="INFO">3cc53513-7247-4f07-953a-bea423cf3415-106434869834154229</msg>
<status status="PASS" starttime="20210619 01:47:07.787" endtime="20210619 01:47:07.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:07.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:07.788" endtime="20210619 01:47:07.788"/>
</kw>
<msg timestamp="20210619 01:47:07.789" level="INFO">${uploadID2} = 3cc53513-7247-4f07-953a-bea423cf3415-106434869834154229</msg>
<status status="PASS" starttime="20210619 01:47:07.740" endtime="20210619 01:47:07.789"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:47:07.789" endtime="20210619 01:47:07.789"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:47:07.789" endtime="20210619 01:47:07.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:47:07.790" endtime="20210619 01:47:07.791"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:07.795" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket link --prefix 27103/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:08.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:08.291" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-06-19T01:4...</msg>
<status status="PASS" starttime="20210619 01:47:07.793" endtime="20210619 01:47:08.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:08.292" level="INFO">{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-06-19T01:47:07.161Z", 
            "UploadId": "68ec8176-68e9-40f9-adea-471090eafc8e-106434869799223540", 
            "StorageClass": "STANDARD", 
            "Key": "27103/listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-06-19T01:47:07.694Z", 
            "UploadId": "3cc53513-7247-4f07-953a-bea423cf3415-106434869834154229", 
            "StorageClass": "STANDARD", 
            "Key": "27103/listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20210619 01:47:08.292" endtime="20210619 01:47:08.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:08.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:08.293" endtime="20210619 01:47:08.294"/>
</kw>
<status status="PASS" starttime="20210619 01:47:07.793" endtime="20210619 01:47:08.294"/>
</kw>
<msg timestamp="20210619 01:47:08.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:07.792" endtime="20210619 01:47:08.294"/>
</kw>
<msg timestamp="20210619 01:47:08.295" level="INFO">${output} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-06-19T01:4...</msg>
<status status="PASS" starttime="20210619 01:47:07.791" endtime="20210619 01:47:08.295"/>
</kw>
<msg timestamp="20210619 01:47:08.295" level="INFO">${result} = {
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-06-19T01:4...</msg>
<status status="PASS" starttime="20210619 01:47:07.791" endtime="20210619 01:47:08.295"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:47:08.295" endtime="20210619 01:47:08.296"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:47:08.296" endtime="20210619 01:47:08.296"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:08.299" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-06-19T01:47:07.161Z", 
            "UploadId": "68ec8176-68e9-40f9-adea-471090eafc8e-106434869799223540", 
            "StorageClass": "STANDARD", 
            "Key": "27103/listtest/key1", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }, 
        {
            "Initiator": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }, 
            "Initiated": "2021-06-19T01:47:07.694Z", 
            "UploadId": "3cc53513-7247-4f07-953a-bea423cf3415-106434869834154229", 
            "StorageClass": "STANDARD", 
            "Key": "27103/listtest/key2", 
            "Owner": {
                "DisplayName": "Not Supported", 
                "ID": "NOT-SUPPORTED"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:08.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:08.342" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20210619 01:47:08.297" endtime="20210619 01:47:08.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:08.343" level="INFO">2</msg>
<status status="PASS" starttime="20210619 01:47:08.343" endtime="20210619 01:47:08.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:08.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:08.344" endtime="20210619 01:47:08.344"/>
</kw>
<msg timestamp="20210619 01:47:08.345" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20210619 01:47:08.297" endtime="20210619 01:47:08.345"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210619 01:47:08.345" endtime="20210619 01:47:08.346"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:47:06.743" endtime="20210619 01:47:08.346"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20210619 01:45:39.611" endtime="20210619 01:47:08.348"/>
</suite>
<suite id="s1-s7-s8" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:47:08.362" level="INFO">${random} = 15932</msg>
<status status="PASS" starttime="20210619 01:47:08.362" endtime="20210619 01:47:08.362"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:47:08.364" level="INFO">${PREFIX} = 15932</msg>
<status status="PASS" starttime="20210619 01:47:08.362" endtime="20210619 01:47:08.364"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.361" endtime="20210619 01:47:08.364"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.361" endtime="20210619 01:47:08.364"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:08.367" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:08.369" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:47:08.369" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210619 01:47:08.365" endtime="20210619 01:47:08.369"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:47:08.369" endtime="20210619 01:47:08.370"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:08.372" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:08.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:08.507" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.003'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210619 01:47:08.370" endtime="20210619 01:47:08.507"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:08.512" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:08.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:08.919" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.c...</msg>
<status status="PASS" starttime="20210619 01:47:08.510" endtime="20210619 01:47:08.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:08.920" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210619 01:47:08.920" endtime="20210619 01:47:08.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:08.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:08.921" endtime="20210619 01:47:08.921"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.510" endtime="20210619 01:47:08.922"/>
</kw>
<msg timestamp="20210619 01:47:08.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:08.510" endtime="20210619 01:47:08.922"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.509" endtime="20210619 01:47:08.922"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.509" endtime="20210619 01:47:08.922"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.508" endtime="20210619 01:47:08.922"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.365" endtime="20210619 01:47:08.923"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.364" endtime="20210619 01:47:08.923"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:08.929" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:08.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:08.932" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20210619 01:47:08.926" endtime="20210619 01:47:08.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:08.933" level="INFO">s3g</msg>
<status status="PASS" starttime="20210619 01:47:08.932" endtime="20210619 01:47:08.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:08.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:08.933" endtime="20210619 01:47:08.934"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.926" endtime="20210619 01:47:08.934"/>
</kw>
<msg timestamp="20210619 01:47:08.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:08.925" endtime="20210619 01:47:08.934"/>
</kw>
<msg timestamp="20210619 01:47:08.935" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20210619 01:47:08.925" endtime="20210619 01:47:08.935"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:47:08.937" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:47:08.935" endtime="20210619 01:47:08.937"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:08.941" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:08.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:08.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:08.939" endtime="20210619 01:47:08.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:08.972" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:08.971" endtime="20210619 01:47:08.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:08.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:08.972" endtime="20210619 01:47:08.973"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.938" endtime="20210619 01:47:08.973"/>
</kw>
<msg timestamp="20210619 01:47:08.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:08.938" endtime="20210619 01:47:08.973"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.937" endtime="20210619 01:47:08.974"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.937" endtime="20210619 01:47:08.974"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.924" endtime="20210619 01:47:08.974"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.924" endtime="20210619 01:47:08.974"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:08.979" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:11.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:11.979" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:47:08.977" endtime="20210619 01:47:11.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:11.980" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:47:11.979" endtime="20210619 01:47:11.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:11.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:11.980" endtime="20210619 01:47:11.981"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.976" endtime="20210619 01:47:11.981"/>
</kw>
<msg timestamp="20210619 01:47:11.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:08.976" endtime="20210619 01:47:11.982"/>
</kw>
<msg timestamp="20210619 01:47:11.982" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:47:08.975" endtime="20210619 01:47:11.982"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:47:11.983" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:47:11.982" endtime="20210619 01:47:11.983"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210619 01:47:11.983" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:47:11.983" endtime="20210619 01:47:11.983"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:47:11.984" level="INFO">${secret} = ['3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08']</msg>
<status status="PASS" starttime="20210619 01:47:11.983" endtime="20210619 01:47:11.984"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:47:11.985" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:47:11.984" endtime="20210619 01:47:11.986"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:47:11.987" level="INFO">${secret} = 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:47:11.986" endtime="20210619 01:47:11.987"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:11.991" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:12.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:12.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:11.989" endtime="20210619 01:47:12.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:12.322" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:12.321" endtime="20210619 01:47:12.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:12.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:12.322" endtime="20210619 01:47:12.322"/>
</kw>
<status status="PASS" starttime="20210619 01:47:11.988" endtime="20210619 01:47:12.323"/>
</kw>
<msg timestamp="20210619 01:47:12.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:11.988" endtime="20210619 01:47:12.323"/>
</kw>
<status status="PASS" starttime="20210619 01:47:11.987" endtime="20210619 01:47:12.323"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:12.327" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:12.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:12.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:12.325" endtime="20210619 01:47:12.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:12.649" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:12.649" endtime="20210619 01:47:12.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:12.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:12.650" endtime="20210619 01:47:12.650"/>
</kw>
<status status="PASS" starttime="20210619 01:47:12.324" endtime="20210619 01:47:12.651"/>
</kw>
<msg timestamp="20210619 01:47:12.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:12.324" endtime="20210619 01:47:12.651"/>
</kw>
<status status="PASS" starttime="20210619 01:47:12.323" endtime="20210619 01:47:12.651"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:12.655" level="INFO">Running command 'aws configure set aws_secret_access_key 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:12.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:12.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:12.653" endtime="20210619 01:47:12.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:12.977" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:12.976" endtime="20210619 01:47:12.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:12.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:12.977" endtime="20210619 01:47:12.978"/>
</kw>
<status status="PASS" starttime="20210619 01:47:12.652" endtime="20210619 01:47:12.978"/>
</kw>
<msg timestamp="20210619 01:47:12.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:12.652" endtime="20210619 01:47:12.978"/>
</kw>
<status status="PASS" starttime="20210619 01:47:12.651" endtime="20210619 01:47:12.979"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:12.982" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:13.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:13.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:12.980" endtime="20210619 01:47:13.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:13.318" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:13.318" endtime="20210619 01:47:13.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:13.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:13.319" endtime="20210619 01:47:13.320"/>
</kw>
<status status="PASS" starttime="20210619 01:47:12.980" endtime="20210619 01:47:13.320"/>
</kw>
<msg timestamp="20210619 01:47:13.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:12.979" endtime="20210619 01:47:13.321"/>
</kw>
<status status="PASS" starttime="20210619 01:47:12.979" endtime="20210619 01:47:13.321"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.975" endtime="20210619 01:47:13.321"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.974" endtime="20210619 01:47:13.321"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:47:13.321" endtime="20210619 01:47:13.322"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.923" endtime="20210619 01:47:13.322"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.923" endtime="20210619 01:47:13.322"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:47:13.323" endtime="20210619 01:47:13.323"/>
</kw>
<msg timestamp="20210619 01:47:13.323" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:47:13.322" endtime="20210619 01:47:13.323"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:47:13.324" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:47:13.324" endtime="20210619 01:47:13.324"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:13.327" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:16.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:16.861" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210619 01:47:13.325" endtime="20210619 01:47:16.861"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:47:16.862" endtime="20210619 01:47:16.862"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:47:16.863" endtime="20210619 01:47:16.863"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:47:16.863" endtime="20210619 01:47:16.864"/>
</kw>
<msg timestamp="20210619 01:47:16.864" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210619 01:47:13.325" endtime="20210619 01:47:16.864"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210619 01:47:16.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:16.864" endtime="20210619 01:47:16.865"/>
</kw>
<status status="PASS" starttime="20210619 01:47:13.325" endtime="20210619 01:47:16.865"/>
</kw>
<status status="PASS" starttime="20210619 01:47:13.324" endtime="20210619 01:47:16.865"/>
</kw>
<status status="PASS" starttime="20210619 01:47:08.361" endtime="20210619 01:47:16.865"/>
</kw>
<test id="s1-s7-s8-t1" name="Copy Object Happy Scenario">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:47:16.868" level="INFO">${postfix} = 64957</msg>
<status status="PASS" starttime="20210619 01:47:16.868" endtime="20210619 01:47:16.869"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:47:16.870" level="INFO">${DESTBUCKET} = destbucket-64957</msg>
<status status="PASS" starttime="20210619 01:47:16.869" endtime="20210619 01:47:16.870"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:16.874" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-64957 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:17.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:17.320" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-64957"
}</msg>
<status status="PASS" starttime="20210619 01:47:16.872" endtime="20210619 01:47:17.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:17.322" level="INFO">{
    "Location": "http://s3g:9878/destbucket-64957"
}</msg>
<status status="PASS" starttime="20210619 01:47:17.321" endtime="20210619 01:47:17.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:17.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:17.322" endtime="20210619 01:47:17.322"/>
</kw>
<status status="PASS" starttime="20210619 01:47:16.871" endtime="20210619 01:47:17.323"/>
</kw>
<msg timestamp="20210619 01:47:17.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:16.871" endtime="20210619 01:47:17.323"/>
</kw>
<msg timestamp="20210619 01:47:17.323" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-64957"
}</msg>
<status status="PASS" starttime="20210619 01:47:16.870" endtime="20210619 01:47:17.323"/>
</kw>
<status status="PASS" starttime="20210619 01:47:16.870" endtime="20210619 01:47:17.324"/>
</kw>
<status status="PASS" starttime="20210619 01:47:16.867" endtime="20210619 01:47:17.324"/>
</kw>
<status status="PASS" starttime="20210619 01:47:16.867" endtime="20210619 01:47:17.324"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:17.328" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20210619 01:47:17.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:17.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:17.326" endtime="20210619 01:47:17.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:17.331" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:17.330" endtime="20210619 01:47:17.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:17.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:17.332" endtime="20210619 01:47:17.332"/>
</kw>
<status status="PASS" starttime="20210619 01:47:17.325" endtime="20210619 01:47:17.333"/>
</kw>
<msg timestamp="20210619 01:47:17.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:17.325" endtime="20210619 01:47:17.333"/>
</kw>
<status status="PASS" starttime="20210619 01:47:17.324" endtime="20210619 01:47:17.333"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/f1 --body /tmp/copyfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:17.338" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 15932/copyobject/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:28.854" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:47:28.854" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:47:17.335" endtime="20210619 01:47:28.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:28.856" level="INFO">
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:47:28.855" endtime="20210619 01:47:28.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:28.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:47:28.857" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:47:28.856" endtime="20210619 01:47:28.857"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:17.335" endtime="20210619 01:47:28.857"/>
</kw>
<msg timestamp="20210619 01:47:28.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:47:17.334" endtime="20210619 01:47:28.858"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:17.334" endtime="20210619 01:47:28.858"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:17.333" endtime="20210619 01:47:28.858"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/</arg>
<status status="NOT RUN" starttime="20210619 01:47:28.858" endtime="20210619 01:47:28.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:28.859" endtime="20210619 01:47:28.859"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<status status="NOT RUN" starttime="20210619 01:47:28.859" endtime="20210619 01:47:28.859"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/</arg>
<status status="NOT RUN" starttime="20210619 01:47:28.860" endtime="20210619 01:47:28.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:28.860" endtime="20210619 01:47:28.860"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<status status="NOT RUN" starttime="20210619 01:47:28.860" endtime="20210619 01:47:28.860"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/</arg>
<status status="NOT RUN" starttime="20210619 01:47:28.860" endtime="20210619 01:47:28.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:28.860" endtime="20210619 01:47:28.861"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:47:16.865" endtime="20210619 01:47:28.861">255 != 0</status>
</test>
<test id="s1-s7-s8-t2" name="Copy Object Where Bucket is not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:28.866" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key 15932/copyobject/f1 --copy-source link/15932/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:29.335" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:47:29.336" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:47:28.864" endtime="20210619 01:47:29.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:29.337" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:47:29.336" endtime="20210619 01:47:29.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:29.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:29.337" endtime="20210619 01:47:29.338"/>
</kw>
<msg timestamp="20210619 01:47:29.338" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:47:28.863" endtime="20210619 01:47:29.338"/>
</kw>
<msg timestamp="20210619 01:47:29.339" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:47:28.862" endtime="20210619 01:47:29.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:47:29.339" endtime="20210619 01:47:29.339"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:29.343" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-64957 --key 15932/copyobject/f1 --copy-source dfdfdfdfdfnonexistent/15932/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:29.795" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:47:29.795" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:47:29.341" endtime="20210619 01:47:29.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:29.796" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:47:29.795" endtime="20210619 01:47:29.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:29.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:29.796" endtime="20210619 01:47:29.797"/>
</kw>
<msg timestamp="20210619 01:47:29.797" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:47:29.340" endtime="20210619 01:47:29.797"/>
</kw>
<msg timestamp="20210619 01:47:29.798" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:47:29.340" endtime="20210619 01:47:29.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:47:29.798" endtime="20210619 01:47:29.799"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:47:28.861" endtime="20210619 01:47:29.799"/>
</test>
<test id="s1-s7-s8-t3" name="Copy Object Where both source and dest are same with change to storageclass">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:29.806" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-64957 --key 15932/copyobject/f1 --copy-source destbucket-64957/15932/copyobject/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:30.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:30.272" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-06-19T01:47:30.237Z", 
        "ETag": "8c447a27-1e53-4068-b29c-b2530faec821"
    }
}</msg>
<status status="PASS" starttime="20210619 01:47:29.803" endtime="20210619 01:47:30.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:30.274" level="INFO">{
    "CopyObjectResult": {
        "LastModified": "2021-06-19T01:47:30.237Z", 
        "ETag": "8c447a27-1e53-4068-b29c-b2530faec821"
    }
}</msg>
<status status="PASS" starttime="20210619 01:47:30.273" endtime="20210619 01:47:30.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:30.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:30.274" endtime="20210619 01:47:30.275"/>
</kw>
<status status="PASS" starttime="20210619 01:47:29.803" endtime="20210619 01:47:30.275"/>
</kw>
<msg timestamp="20210619 01:47:30.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:29.802" endtime="20210619 01:47:30.275"/>
</kw>
<msg timestamp="20210619 01:47:30.276" level="INFO">${output} = {
    "CopyObjectResult": {
        "LastModified": "2021-06-19T01:47:30.237Z", 
        "ETag": "8c447a27-1e53-4068-b29c-b2530faec821"
    }
}</msg>
<status status="PASS" starttime="20210619 01:47:29.802" endtime="20210619 01:47:30.276"/>
</kw>
<msg timestamp="20210619 01:47:30.276" level="INFO">${result} = {
    "CopyObjectResult": {
        "LastModified": "2021-06-19T01:47:30.237Z", 
        "ETag": "8c447a27-1e53-4068-b29c-b2530faec821"
    }
}</msg>
<status status="PASS" starttime="20210619 01:47:29.801" endtime="20210619 01:47:30.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:47:30.276" endtime="20210619 01:47:30.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:47:29.800" endtime="20210619 01:47:30.277"/>
</test>
<test id="s1-s7-s8-t4" name="Copy Object Where Key not available">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:30.282" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-64957 --key 15932/copyobject/f1 --copy-source link/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:30.731" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:47:30.731" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:47:30.280" endtime="20210619 01:47:30.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:30.733" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:47:30.732" endtime="20210619 01:47:30.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:30.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:30.733" endtime="20210619 01:47:30.734"/>
</kw>
<msg timestamp="20210619 01:47:30.734" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:47:30.279" endtime="20210619 01:47:30.734"/>
</kw>
<msg timestamp="20210619 01:47:30.734" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:47:30.278" endtime="20210619 01:47:30.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:47:30.735" endtime="20210619 01:47:30.735"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:47:30.277" endtime="20210619 01:47:30.735"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20210619 01:47:08.351" endtime="20210619 01:47:30.736"/>
</suite>
<suite id="s1-s7-s9" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:47:30.749" level="INFO">${random} = 50364</msg>
<status status="PASS" starttime="20210619 01:47:30.749" endtime="20210619 01:47:30.749"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:47:30.751" level="INFO">${PREFIX} = 50364</msg>
<status status="PASS" starttime="20210619 01:47:30.749" endtime="20210619 01:47:30.751"/>
</kw>
<status status="PASS" starttime="20210619 01:47:30.748" endtime="20210619 01:47:30.751"/>
</kw>
<status status="PASS" starttime="20210619 01:47:30.748" endtime="20210619 01:47:30.751"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:30.754" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:30.756" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:47:30.756" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210619 01:47:30.752" endtime="20210619 01:47:30.756"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:47:30.757" endtime="20210619 01:47:30.757"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:30.759" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:30.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:30.893" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.003'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210619 01:47:30.757" endtime="20210619 01:47:30.893"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:30.898" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:31.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:31.301" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.c...</msg>
<status status="PASS" starttime="20210619 01:47:30.896" endtime="20210619 01:47:31.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:31.302" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210619 01:47:31.302" endtime="20210619 01:47:31.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:31.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:31.303" endtime="20210619 01:47:31.303"/>
</kw>
<status status="PASS" starttime="20210619 01:47:30.896" endtime="20210619 01:47:31.304"/>
</kw>
<msg timestamp="20210619 01:47:31.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:30.896" endtime="20210619 01:47:31.304"/>
</kw>
<status status="PASS" starttime="20210619 01:47:30.895" endtime="20210619 01:47:31.304"/>
</kw>
<status status="PASS" starttime="20210619 01:47:30.895" endtime="20210619 01:47:31.304"/>
</kw>
<status status="PASS" starttime="20210619 01:47:30.894" endtime="20210619 01:47:31.305"/>
</kw>
<status status="PASS" starttime="20210619 01:47:30.752" endtime="20210619 01:47:31.305"/>
</kw>
<status status="PASS" starttime="20210619 01:47:30.752" endtime="20210619 01:47:31.305"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:31.310" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:31.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:31.313" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20210619 01:47:31.308" endtime="20210619 01:47:31.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:31.314" level="INFO">s3g</msg>
<status status="PASS" starttime="20210619 01:47:31.314" endtime="20210619 01:47:31.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:31.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:31.315" endtime="20210619 01:47:31.315"/>
</kw>
<status status="PASS" starttime="20210619 01:47:31.308" endtime="20210619 01:47:31.315"/>
</kw>
<msg timestamp="20210619 01:47:31.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:31.307" endtime="20210619 01:47:31.316"/>
</kw>
<msg timestamp="20210619 01:47:31.316" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20210619 01:47:31.307" endtime="20210619 01:47:31.316"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:47:31.318" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:47:31.316" endtime="20210619 01:47:31.318"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:31.322" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:31.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:31.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:31.320" endtime="20210619 01:47:31.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:31.329" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:31.329" endtime="20210619 01:47:31.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:31.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:31.330" endtime="20210619 01:47:31.330"/>
</kw>
<status status="PASS" starttime="20210619 01:47:31.320" endtime="20210619 01:47:31.330"/>
</kw>
<msg timestamp="20210619 01:47:31.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:31.320" endtime="20210619 01:47:31.331"/>
</kw>
<status status="PASS" starttime="20210619 01:47:31.319" endtime="20210619 01:47:31.331"/>
</kw>
<status status="PASS" starttime="20210619 01:47:31.318" endtime="20210619 01:47:31.331"/>
</kw>
<status status="PASS" starttime="20210619 01:47:31.306" endtime="20210619 01:47:31.331"/>
</kw>
<status status="PASS" starttime="20210619 01:47:31.306" endtime="20210619 01:47:31.331"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:31.335" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:34.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:34.443" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:47:31.334" endtime="20210619 01:47:34.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:34.444" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:47:34.444" endtime="20210619 01:47:34.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:34.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:34.445" endtime="20210619 01:47:34.445"/>
</kw>
<status status="PASS" starttime="20210619 01:47:31.333" endtime="20210619 01:47:34.446"/>
</kw>
<msg timestamp="20210619 01:47:34.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:31.333" endtime="20210619 01:47:34.446"/>
</kw>
<msg timestamp="20210619 01:47:34.446" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:47:31.332" endtime="20210619 01:47:34.446"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:47:34.448" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:47:34.447" endtime="20210619 01:47:34.448"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210619 01:47:34.452" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:47:34.448" endtime="20210619 01:47:34.452"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:47:34.453" level="INFO">${secret} = ['3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08']</msg>
<status status="PASS" starttime="20210619 01:47:34.452" endtime="20210619 01:47:34.453"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:47:34.455" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:47:34.453" endtime="20210619 01:47:34.455"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:47:34.456" level="INFO">${secret} = 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:47:34.455" endtime="20210619 01:47:34.456"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:34.460" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:34.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:34.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:34.458" endtime="20210619 01:47:34.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:34.784" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:34.783" endtime="20210619 01:47:34.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:34.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:34.784" endtime="20210619 01:47:34.785"/>
</kw>
<status status="PASS" starttime="20210619 01:47:34.457" endtime="20210619 01:47:34.785"/>
</kw>
<msg timestamp="20210619 01:47:34.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:34.457" endtime="20210619 01:47:34.786"/>
</kw>
<status status="PASS" starttime="20210619 01:47:34.456" endtime="20210619 01:47:34.786"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:34.789" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:35.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:35.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:34.788" endtime="20210619 01:47:35.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:35.115" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:35.114" endtime="20210619 01:47:35.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:35.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:35.115" endtime="20210619 01:47:35.116"/>
</kw>
<status status="PASS" starttime="20210619 01:47:34.787" endtime="20210619 01:47:35.116"/>
</kw>
<msg timestamp="20210619 01:47:35.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:34.787" endtime="20210619 01:47:35.116"/>
</kw>
<status status="PASS" starttime="20210619 01:47:34.786" endtime="20210619 01:47:35.117"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:35.120" level="INFO">Running command 'aws configure set aws_secret_access_key 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:35.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:35.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:35.118" endtime="20210619 01:47:35.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:35.450" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:35.450" endtime="20210619 01:47:35.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:35.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:35.450" endtime="20210619 01:47:35.451"/>
</kw>
<status status="PASS" starttime="20210619 01:47:35.118" endtime="20210619 01:47:35.452"/>
</kw>
<msg timestamp="20210619 01:47:35.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:35.117" endtime="20210619 01:47:35.452"/>
</kw>
<status status="PASS" starttime="20210619 01:47:35.117" endtime="20210619 01:47:35.452"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:35.455" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:35.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:35.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:35.454" endtime="20210619 01:47:35.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:35.774" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:35.774" endtime="20210619 01:47:35.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:35.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:35.775" endtime="20210619 01:47:35.775"/>
</kw>
<status status="PASS" starttime="20210619 01:47:35.453" endtime="20210619 01:47:35.776"/>
</kw>
<msg timestamp="20210619 01:47:35.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:35.453" endtime="20210619 01:47:35.776"/>
</kw>
<status status="PASS" starttime="20210619 01:47:35.452" endtime="20210619 01:47:35.776"/>
</kw>
<status status="PASS" starttime="20210619 01:47:31.332" endtime="20210619 01:47:35.776"/>
</kw>
<status status="PASS" starttime="20210619 01:47:31.331" endtime="20210619 01:47:35.776"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:47:35.777" endtime="20210619 01:47:35.777"/>
</kw>
<status status="PASS" starttime="20210619 01:47:31.306" endtime="20210619 01:47:35.777"/>
</kw>
<status status="PASS" starttime="20210619 01:47:31.305" endtime="20210619 01:47:35.778"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:47:35.778" endtime="20210619 01:47:35.779"/>
</kw>
<msg timestamp="20210619 01:47:35.779" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:47:35.778" endtime="20210619 01:47:35.779"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:47:35.779" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:47:35.779" endtime="20210619 01:47:35.779"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:35.783" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:39.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:39.372" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210619 01:47:35.781" endtime="20210619 01:47:39.372"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:47:39.372" endtime="20210619 01:47:39.373"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:47:39.373" endtime="20210619 01:47:39.374"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:47:39.374" endtime="20210619 01:47:39.374"/>
</kw>
<msg timestamp="20210619 01:47:39.375" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210619 01:47:35.780" endtime="20210619 01:47:39.375"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210619 01:47:39.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:39.375" endtime="20210619 01:47:39.375"/>
</kw>
<status status="PASS" starttime="20210619 01:47:35.780" endtime="20210619 01:47:39.376"/>
</kw>
<status status="PASS" starttime="20210619 01:47:35.780" endtime="20210619 01:47:39.376"/>
</kw>
<status status="PASS" starttime="20210619 01:47:30.748" endtime="20210619 01:47:39.376"/>
</kw>
<test id="s1-s7-s9-t1" name="Delete file with s3api">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:39.381" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210619 01:47:39.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:39.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:39.379" endtime="20210619 01:47:39.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:39.385" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:39.384" endtime="20210619 01:47:39.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:39.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:39.385" endtime="20210619 01:47:39.386"/>
</kw>
<status status="PASS" starttime="20210619 01:47:39.378" endtime="20210619 01:47:39.386"/>
</kw>
<msg timestamp="20210619 01:47:39.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:39.378" endtime="20210619 01:47:39.386"/>
</kw>
<status status="PASS" starttime="20210619 01:47:39.377" endtime="20210619 01:47:39.387"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:39.391" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 50364/deletetestapi/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:45.605" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:47:45.606" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:47:39.389" endtime="20210619 01:47:45.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:45.607" level="INFO">
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:47:45.606" endtime="20210619 01:47:45.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:45.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:47:45.608" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:47:45.607" endtime="20210619 01:47:45.608"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:39.388" endtime="20210619 01:47:45.609"/>
</kw>
<msg timestamp="20210619 01:47:45.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:47:39.388" endtime="20210619 01:47:45.609"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:39.387" endtime="20210619 01:47:45.609"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:39.387" endtime="20210619 01:47:45.609"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
<status status="NOT RUN" starttime="20210619 01:47:45.610" endtime="20210619 01:47:45.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:45.610" endtime="20210619 01:47:45.610"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/f1</arg>
<status status="NOT RUN" starttime="20210619 01:47:45.610" endtime="20210619 01:47:45.610"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/</arg>
<status status="NOT RUN" starttime="20210619 01:47:45.610" endtime="20210619 01:47:45.610"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:45.610" endtime="20210619 01:47:45.611"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>500</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:45.611" endtime="20210619 01:47:45.611"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:47:39.376" endtime="20210619 01:47:45.611">255 != 0</status>
</test>
<test id="s1-s7-s9-t2" name="Delete file with s3api, file doesn't exist">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:45.617" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:46.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:46.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:45.615" endtime="20210619 01:47:46.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:46.062" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:46.059" endtime="20210619 01:47:46.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:46.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:46.062" endtime="20210619 01:47:46.063"/>
</kw>
<status status="PASS" starttime="20210619 01:47:45.615" endtime="20210619 01:47:46.063"/>
</kw>
<msg timestamp="20210619 01:47:46.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:45.614" endtime="20210619 01:47:46.063"/>
</kw>
<msg timestamp="20210619 01:47:46.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:45.614" endtime="20210619 01:47:46.063"/>
</kw>
<msg timestamp="20210619 01:47:46.064" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:47:45.613" endtime="20210619 01:47:46.064"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:47:46.064" endtime="20210619 01:47:46.064"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:46.069" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:46.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:46.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:46.067" endtime="20210619 01:47:46.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:46.518" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:46.517" endtime="20210619 01:47:46.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:46.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:46.518" endtime="20210619 01:47:46.519"/>
</kw>
<status status="PASS" starttime="20210619 01:47:46.066" endtime="20210619 01:47:46.519"/>
</kw>
<msg timestamp="20210619 01:47:46.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:46.066" endtime="20210619 01:47:46.519"/>
</kw>
<msg timestamp="20210619 01:47:46.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:46.065" endtime="20210619 01:47:46.520"/>
</kw>
<msg timestamp="20210619 01:47:46.520" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:47:46.065" endtime="20210619 01:47:46.520"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:46.525" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:46.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:46.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:46.523" endtime="20210619 01:47:46.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:46.957" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:46.957" endtime="20210619 01:47:46.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:46.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:46.958" endtime="20210619 01:47:46.958"/>
</kw>
<status status="PASS" starttime="20210619 01:47:46.522" endtime="20210619 01:47:46.959"/>
</kw>
<msg timestamp="20210619 01:47:46.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:46.522" endtime="20210619 01:47:46.959"/>
</kw>
<msg timestamp="20210619 01:47:46.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:46.521" endtime="20210619 01:47:46.959"/>
</kw>
<msg timestamp="20210619 01:47:46.960" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:47:46.520" endtime="20210619 01:47:46.960"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:47:46.960" endtime="20210619 01:47:46.960"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:47:45.612" endtime="20210619 01:47:46.960"/>
</test>
<test id="s1-s7-s9-t3" name="Delete dir with s3api">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:46.966" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210619 01:47:46.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:46.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:46.964" endtime="20210619 01:47:46.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:46.970" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:46.970" endtime="20210619 01:47:46.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:46.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:46.971" endtime="20210619 01:47:46.972"/>
</kw>
<status status="PASS" starttime="20210619 01:47:46.964" endtime="20210619 01:47:46.972"/>
</kw>
<msg timestamp="20210619 01:47:46.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:46.963" endtime="20210619 01:47:46.972"/>
</kw>
<status status="PASS" starttime="20210619 01:47:46.963" endtime="20210619 01:47:46.972"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:46.977" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/50364/deletetestapidir/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:47:56.882" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:47:56.882" level="INFO">${output} = Completed 29 Bytes/29 Bytes (3 Bytes/s) with 1 file(s) remaining
upload failed: ../../tmp/testfile to s3://link/50364/deletetestapidir/f1 An error occurred (500) when calling the PutObject operation (...</msg>
<status status="PASS" starttime="20210619 01:47:46.975" endtime="20210619 01:47:56.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:56.883" level="INFO">Completed 29 Bytes/29 Bytes (3 Bytes/s) with 1 file(s) remaining
upload failed: ../../tmp/testfile to s3://link/50364/deletetestapidir/f1 An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:47:56.883" endtime="20210619 01:47:56.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:56.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:47:56.884" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210619 01:47:56.884" endtime="20210619 01:47:56.885"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:46.974" endtime="20210619 01:47:56.885"/>
</kw>
<msg timestamp="20210619 01:47:56.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:47:46.974" endtime="20210619 01:47:56.885"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:46.973" endtime="20210619 01:47:56.885"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:46.973" endtime="20210619 01:47:56.886"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
<status status="NOT RUN" starttime="20210619 01:47:56.886" endtime="20210619 01:47:56.886"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:56.886" endtime="20210619 01:47:56.886"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/</arg>
<status status="NOT RUN" starttime="20210619 01:47:56.886" endtime="20210619 01:47:56.886"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/</arg>
<status status="NOT RUN" starttime="20210619 01:47:56.887" endtime="20210619 01:47:56.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:47:56.887" endtime="20210619 01:47:56.887"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/f1</arg>
<status status="NOT RUN" starttime="20210619 01:47:56.887" endtime="20210619 01:47:56.887"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:47:46.962" endtime="20210619 01:47:56.888">1 != 0</status>
</test>
<test id="s1-s7-s9-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:56.893" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210619 01:47:56.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:47:56.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:47:56.891" endtime="20210619 01:47:56.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:47:56.896" level="INFO"/>
<status status="PASS" starttime="20210619 01:47:56.896" endtime="20210619 01:47:56.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:47:56.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:47:56.897" endtime="20210619 01:47:56.898"/>
</kw>
<status status="PASS" starttime="20210619 01:47:56.890" endtime="20210619 01:47:56.898"/>
</kw>
<msg timestamp="20210619 01:47:56.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:47:56.890" endtime="20210619 01:47:56.898"/>
</kw>
<status status="PASS" starttime="20210619 01:47:56.889" endtime="20210619 01:47:56.898"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:47:56.902" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/50364/deletetestapiprefix/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:08.215" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:48:08.215" level="INFO">${output} = Completed 29 Bytes/29 Bytes (2 Bytes/s) with 1 file(s) remaining
upload failed: ../../tmp/testfile to s3://link/50364/deletetestapiprefix/filefile An error occurred (500) when calling the PutObject op...</msg>
<status status="PASS" starttime="20210619 01:47:56.901" endtime="20210619 01:48:08.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:08.216" level="INFO">Completed 29 Bytes/29 Bytes (2 Bytes/s) with 1 file(s) remaining
upload failed: ../../tmp/testfile to s3://link/50364/deletetestapiprefix/filefile An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:48:08.215" endtime="20210619 01:48:08.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:08.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:48:08.217" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210619 01:48:08.216" endtime="20210619 01:48:08.217"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:56.900" endtime="20210619 01:48:08.218"/>
</kw>
<msg timestamp="20210619 01:48:08.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:47:56.900" endtime="20210619 01:48:08.218"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:56.899" endtime="20210619 01:48:08.218"/>
</kw>
<status status="FAIL" starttime="20210619 01:47:56.899" endtime="20210619 01:48:08.218"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
<status status="NOT RUN" starttime="20210619 01:48:08.219" endtime="20210619 01:48:08.219"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:08.219" endtime="20210619 01:48:08.219"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/file</arg>
<status status="NOT RUN" starttime="20210619 01:48:08.219" endtime="20210619 01:48:08.219"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/</arg>
<status status="NOT RUN" starttime="20210619 01:48:08.219" endtime="20210619 01:48:08.219"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:08.220" endtime="20210619 01:48:08.220"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/filefile</arg>
<status status="NOT RUN" starttime="20210619 01:48:08.220" endtime="20210619 01:48:08.220"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:47:56.888" endtime="20210619 01:48:08.220">1 != 0</status>
</test>
<test id="s1-s7-s9-t5" name="Delete file with s3api, bucket doesn't exist">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:08.226" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:08.678" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:48:08.678" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:48:08.224" endtime="20210619 01:48:08.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:08.680" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:48:08.679" endtime="20210619 01:48:08.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:08.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:08.680" endtime="20210619 01:48:08.681"/>
</kw>
<msg timestamp="20210619 01:48:08.681" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:48:08.223" endtime="20210619 01:48:08.681"/>
</kw>
<msg timestamp="20210619 01:48:08.682" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20210619 01:48:08.223" endtime="20210619 01:48:08.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:48:08.682" endtime="20210619 01:48:08.682"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:48:08.221" endtime="20210619 01:48:08.683"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20210619 01:47:30.738" endtime="20210619 01:48:08.684"/>
</suite>
<suite id="s1-s7-s10" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:48:08.697" level="INFO">${random} = 60723</msg>
<status status="PASS" starttime="20210619 01:48:08.696" endtime="20210619 01:48:08.697"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:48:08.699" level="INFO">${PREFIX} = 60723</msg>
<status status="PASS" starttime="20210619 01:48:08.697" endtime="20210619 01:48:08.699"/>
</kw>
<status status="PASS" starttime="20210619 01:48:08.696" endtime="20210619 01:48:08.699"/>
</kw>
<status status="PASS" starttime="20210619 01:48:08.696" endtime="20210619 01:48:08.699"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:08.701" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:08.704" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:48:08.704" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210619 01:48:08.700" endtime="20210619 01:48:08.704"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:48:08.704" endtime="20210619 01:48:08.705"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:08.707" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:08.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:08.840" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.003'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210619 01:48:08.705" endtime="20210619 01:48:08.840"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:08.845" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:09.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:09.253" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.c...</msg>
<status status="PASS" starttime="20210619 01:48:08.843" endtime="20210619 01:48:09.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:09.254" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210619 01:48:09.254" endtime="20210619 01:48:09.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:09.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:09.254" endtime="20210619 01:48:09.255"/>
</kw>
<status status="PASS" starttime="20210619 01:48:08.843" endtime="20210619 01:48:09.255"/>
</kw>
<msg timestamp="20210619 01:48:09.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:08.843" endtime="20210619 01:48:09.256"/>
</kw>
<status status="PASS" starttime="20210619 01:48:08.842" endtime="20210619 01:48:09.256"/>
</kw>
<status status="PASS" starttime="20210619 01:48:08.842" endtime="20210619 01:48:09.256"/>
</kw>
<status status="PASS" starttime="20210619 01:48:08.841" endtime="20210619 01:48:09.256"/>
</kw>
<status status="PASS" starttime="20210619 01:48:08.699" endtime="20210619 01:48:09.256"/>
</kw>
<status status="PASS" starttime="20210619 01:48:08.699" endtime="20210619 01:48:09.256"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:09.262" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:09.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:09.265" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20210619 01:48:09.260" endtime="20210619 01:48:09.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:09.266" level="INFO">s3g</msg>
<status status="PASS" starttime="20210619 01:48:09.265" endtime="20210619 01:48:09.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:09.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:09.266" endtime="20210619 01:48:09.267"/>
</kw>
<status status="PASS" starttime="20210619 01:48:09.260" endtime="20210619 01:48:09.267"/>
</kw>
<msg timestamp="20210619 01:48:09.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:09.259" endtime="20210619 01:48:09.268"/>
</kw>
<msg timestamp="20210619 01:48:09.268" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20210619 01:48:09.259" endtime="20210619 01:48:09.268"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:48:09.270" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:48:09.268" endtime="20210619 01:48:09.270"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:09.274" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:09.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:09.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:09.272" endtime="20210619 01:48:09.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:09.281" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:09.281" endtime="20210619 01:48:09.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:09.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:09.281" endtime="20210619 01:48:09.282"/>
</kw>
<status status="PASS" starttime="20210619 01:48:09.272" endtime="20210619 01:48:09.282"/>
</kw>
<msg timestamp="20210619 01:48:09.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:09.271" endtime="20210619 01:48:09.282"/>
</kw>
<status status="PASS" starttime="20210619 01:48:09.271" endtime="20210619 01:48:09.283"/>
</kw>
<status status="PASS" starttime="20210619 01:48:09.270" endtime="20210619 01:48:09.283"/>
</kw>
<status status="PASS" starttime="20210619 01:48:09.258" endtime="20210619 01:48:09.283"/>
</kw>
<status status="PASS" starttime="20210619 01:48:09.258" endtime="20210619 01:48:09.283"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:09.287" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:12.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:12.292" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:48:09.286" endtime="20210619 01:48:12.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:12.293" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:48:12.292" endtime="20210619 01:48:12.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:12.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:12.293" endtime="20210619 01:48:12.294"/>
</kw>
<status status="PASS" starttime="20210619 01:48:09.285" endtime="20210619 01:48:12.294"/>
</kw>
<msg timestamp="20210619 01:48:12.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:09.285" endtime="20210619 01:48:12.295"/>
</kw>
<msg timestamp="20210619 01:48:12.295" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:48:09.284" endtime="20210619 01:48:12.295"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:48:12.296" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:48:12.295" endtime="20210619 01:48:12.296"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210619 01:48:12.297" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:48:12.296" endtime="20210619 01:48:12.297"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:48:12.297" level="INFO">${secret} = ['3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08']</msg>
<status status="PASS" starttime="20210619 01:48:12.297" endtime="20210619 01:48:12.297"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:48:12.299" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:48:12.298" endtime="20210619 01:48:12.299"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:48:12.300" level="INFO">${secret} = 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:48:12.299" endtime="20210619 01:48:12.300"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:12.304" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:12.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:12.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:12.302" endtime="20210619 01:48:12.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:12.628" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:12.627" endtime="20210619 01:48:12.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:12.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:12.628" endtime="20210619 01:48:12.629"/>
</kw>
<status status="PASS" starttime="20210619 01:48:12.301" endtime="20210619 01:48:12.629"/>
</kw>
<msg timestamp="20210619 01:48:12.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:12.301" endtime="20210619 01:48:12.629"/>
</kw>
<status status="PASS" starttime="20210619 01:48:12.300" endtime="20210619 01:48:12.630"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:12.633" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:12.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:12.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:12.631" endtime="20210619 01:48:12.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:12.954" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:12.953" endtime="20210619 01:48:12.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:12.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:12.954" endtime="20210619 01:48:12.954"/>
</kw>
<status status="PASS" starttime="20210619 01:48:12.631" endtime="20210619 01:48:12.955"/>
</kw>
<msg timestamp="20210619 01:48:12.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:12.630" endtime="20210619 01:48:12.955"/>
</kw>
<status status="PASS" starttime="20210619 01:48:12.630" endtime="20210619 01:48:12.955"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:12.959" level="INFO">Running command 'aws configure set aws_secret_access_key 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:13.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:13.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:12.957" endtime="20210619 01:48:13.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:13.293" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:13.293" endtime="20210619 01:48:13.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:13.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:13.294" endtime="20210619 01:48:13.294"/>
</kw>
<status status="PASS" starttime="20210619 01:48:12.956" endtime="20210619 01:48:13.295"/>
</kw>
<msg timestamp="20210619 01:48:13.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:12.956" endtime="20210619 01:48:13.295"/>
</kw>
<status status="PASS" starttime="20210619 01:48:12.956" endtime="20210619 01:48:13.295"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:13.299" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:13.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:13.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:13.297" endtime="20210619 01:48:13.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:13.629" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:13.628" endtime="20210619 01:48:13.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:13.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:13.629" endtime="20210619 01:48:13.630"/>
</kw>
<status status="PASS" starttime="20210619 01:48:13.296" endtime="20210619 01:48:13.631"/>
</kw>
<msg timestamp="20210619 01:48:13.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:13.296" endtime="20210619 01:48:13.631"/>
</kw>
<status status="PASS" starttime="20210619 01:48:13.295" endtime="20210619 01:48:13.631"/>
</kw>
<status status="PASS" starttime="20210619 01:48:09.284" endtime="20210619 01:48:13.631"/>
</kw>
<status status="PASS" starttime="20210619 01:48:09.283" endtime="20210619 01:48:13.631"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:48:13.632" endtime="20210619 01:48:13.632"/>
</kw>
<status status="PASS" starttime="20210619 01:48:09.257" endtime="20210619 01:48:13.632"/>
</kw>
<status status="PASS" starttime="20210619 01:48:09.257" endtime="20210619 01:48:13.632"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:48:13.633" endtime="20210619 01:48:13.633"/>
</kw>
<msg timestamp="20210619 01:48:13.634" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:48:13.633" endtime="20210619 01:48:13.634"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:48:13.634" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:48:13.634" endtime="20210619 01:48:13.634"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:13.638" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:17.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:17.503" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210619 01:48:13.636" endtime="20210619 01:48:17.503"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:48:17.503" endtime="20210619 01:48:17.504"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:48:17.504" endtime="20210619 01:48:17.505"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:48:17.505" endtime="20210619 01:48:17.505"/>
</kw>
<msg timestamp="20210619 01:48:17.506" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210619 01:48:13.635" endtime="20210619 01:48:17.506"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210619 01:48:17.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:17.506" endtime="20210619 01:48:17.506"/>
</kw>
<status status="PASS" starttime="20210619 01:48:13.635" endtime="20210619 01:48:17.507"/>
</kw>
<status status="PASS" starttime="20210619 01:48:13.635" endtime="20210619 01:48:17.507"/>
</kw>
<status status="PASS" starttime="20210619 01:48:08.695" endtime="20210619 01:48:17.507"/>
</kw>
<test id="s1-s7-s10-t1" name="Delete file with multi delete">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:17.512" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20210619 01:48:17.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:17.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:17.510" endtime="20210619 01:48:17.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:17.516" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:17.516" endtime="20210619 01:48:17.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:17.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:17.516" endtime="20210619 01:48:17.517"/>
</kw>
<status status="PASS" starttime="20210619 01:48:17.509" endtime="20210619 01:48:17.517"/>
</kw>
<msg timestamp="20210619 01:48:17.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:17.509" endtime="20210619 01:48:17.518"/>
</kw>
<status status="PASS" starttime="20210619 01:48:17.508" endtime="20210619 01:48:17.518"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:17.522" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 60723/multidelete/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:30.792" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:48:30.792" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:48:17.521" endtime="20210619 01:48:30.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:30.794" level="INFO">
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:48:30.793" endtime="20210619 01:48:30.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:30.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:48:30.795" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:48:30.794" endtime="20210619 01:48:30.795"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:17.520" endtime="20210619 01:48:30.795"/>
</kw>
<msg timestamp="20210619 01:48:30.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:48:17.520" endtime="20210619 01:48:30.796"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:17.519" endtime="20210619 01:48:30.796"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:17.518" endtime="20210619 01:48:30.796"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f2 --body /tmp/testfile</arg>
<status status="NOT RUN" starttime="20210619 01:48:30.796" endtime="20210619 01:48:30.796"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/f3 --body /tmp/testfile</arg>
<status status="NOT RUN" starttime="20210619 01:48:30.797" endtime="20210619 01:48:30.797"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/</arg>
<status status="NOT RUN" starttime="20210619 01:48:30.797" endtime="20210619 01:48:30.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:30.797" endtime="20210619 01:48:30.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:30.797" endtime="20210619 01:48:30.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:30.798" endtime="20210619 01:48:30.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:30.798" endtime="20210619 01:48:30.798"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:30.798" endtime="20210619 01:48:30.798"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/f1},{Key=${PREFIX}/multidelete/f2},{Key=${PREFIX}/multidelete/f4}]'</arg>
<status status="NOT RUN" starttime="20210619 01:48:30.798" endtime="20210619 01:48:30.798"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:30.798" endtime="20210619 01:48:30.799"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/</arg>
<status status="NOT RUN" starttime="20210619 01:48:30.799" endtime="20210619 01:48:30.799"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:30.799" endtime="20210619 01:48:30.799"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:30.799" endtime="20210619 01:48:30.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:30.799" endtime="20210619 01:48:30.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:30.800" endtime="20210619 01:48:30.800"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:30.800" endtime="20210619 01:48:30.800"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:48:17.507" endtime="20210619 01:48:30.800">255 != 0</status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20210619 01:48:08.686" endtime="20210619 01:48:30.802"/>
</suite>
<suite id="s1-s7-s11" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:48:30.815" level="INFO">${random} = 96542</msg>
<status status="PASS" starttime="20210619 01:48:30.815" endtime="20210619 01:48:30.815"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:48:30.817" level="INFO">${PREFIX} = 96542</msg>
<status status="PASS" starttime="20210619 01:48:30.815" endtime="20210619 01:48:30.817"/>
</kw>
<status status="PASS" starttime="20210619 01:48:30.814" endtime="20210619 01:48:30.817"/>
</kw>
<status status="PASS" starttime="20210619 01:48:30.814" endtime="20210619 01:48:30.818"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:30.820" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:30.822" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:48:30.822" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210619 01:48:30.818" endtime="20210619 01:48:30.822"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:48:30.823" endtime="20210619 01:48:30.823"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:30.825" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:30.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:30.961" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.003'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210619 01:48:30.824" endtime="20210619 01:48:30.961"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:30.966" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:31.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:31.372" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.c...</msg>
<status status="PASS" starttime="20210619 01:48:30.964" endtime="20210619 01:48:31.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:31.373" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210619 01:48:31.373" endtime="20210619 01:48:31.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:31.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:31.373" endtime="20210619 01:48:31.374"/>
</kw>
<status status="PASS" starttime="20210619 01:48:30.963" endtime="20210619 01:48:31.374"/>
</kw>
<msg timestamp="20210619 01:48:31.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:30.963" endtime="20210619 01:48:31.375"/>
</kw>
<status status="PASS" starttime="20210619 01:48:30.963" endtime="20210619 01:48:31.375"/>
</kw>
<status status="PASS" starttime="20210619 01:48:30.962" endtime="20210619 01:48:31.375"/>
</kw>
<status status="PASS" starttime="20210619 01:48:30.961" endtime="20210619 01:48:31.375"/>
</kw>
<status status="PASS" starttime="20210619 01:48:30.818" endtime="20210619 01:48:31.375"/>
</kw>
<status status="PASS" starttime="20210619 01:48:30.818" endtime="20210619 01:48:31.376"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:31.381" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:31.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:31.384" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20210619 01:48:31.379" endtime="20210619 01:48:31.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:31.384" level="INFO">s3g</msg>
<status status="PASS" starttime="20210619 01:48:31.384" endtime="20210619 01:48:31.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:31.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:31.385" endtime="20210619 01:48:31.385"/>
</kw>
<status status="PASS" starttime="20210619 01:48:31.378" endtime="20210619 01:48:31.386"/>
</kw>
<msg timestamp="20210619 01:48:31.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:31.378" endtime="20210619 01:48:31.386"/>
</kw>
<msg timestamp="20210619 01:48:31.386" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20210619 01:48:31.378" endtime="20210619 01:48:31.386"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:48:31.389" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:48:31.387" endtime="20210619 01:48:31.389"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:31.393" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:31.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:31.399" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:31.391" endtime="20210619 01:48:31.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:31.400" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:31.400" endtime="20210619 01:48:31.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:31.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:31.400" endtime="20210619 01:48:31.401"/>
</kw>
<status status="PASS" starttime="20210619 01:48:31.391" endtime="20210619 01:48:31.401"/>
</kw>
<msg timestamp="20210619 01:48:31.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:31.390" endtime="20210619 01:48:31.401"/>
</kw>
<status status="PASS" starttime="20210619 01:48:31.389" endtime="20210619 01:48:31.402"/>
</kw>
<status status="PASS" starttime="20210619 01:48:31.389" endtime="20210619 01:48:31.402"/>
</kw>
<status status="PASS" starttime="20210619 01:48:31.377" endtime="20210619 01:48:31.402"/>
</kw>
<status status="PASS" starttime="20210619 01:48:31.377" endtime="20210619 01:48:31.402"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:31.406" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:34.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:34.274" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:48:31.404" endtime="20210619 01:48:34.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:34.276" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:48:34.275" endtime="20210619 01:48:34.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:34.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:34.276" endtime="20210619 01:48:34.276"/>
</kw>
<status status="PASS" starttime="20210619 01:48:31.404" endtime="20210619 01:48:34.277"/>
</kw>
<msg timestamp="20210619 01:48:34.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:31.404" endtime="20210619 01:48:34.277"/>
</kw>
<msg timestamp="20210619 01:48:34.277" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:48:31.403" endtime="20210619 01:48:34.277"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:48:34.278" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:48:34.278" endtime="20210619 01:48:34.278"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210619 01:48:34.279" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:48:34.278" endtime="20210619 01:48:34.279"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:48:34.279" level="INFO">${secret} = ['3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08']</msg>
<status status="PASS" starttime="20210619 01:48:34.279" endtime="20210619 01:48:34.280"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:48:34.281" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:48:34.280" endtime="20210619 01:48:34.281"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:48:34.282" level="INFO">${secret} = 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:48:34.281" endtime="20210619 01:48:34.282"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:34.286" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:34.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:34.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:34.284" endtime="20210619 01:48:34.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:34.628" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:34.628" endtime="20210619 01:48:34.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:34.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:34.628" endtime="20210619 01:48:34.629"/>
</kw>
<status status="PASS" starttime="20210619 01:48:34.283" endtime="20210619 01:48:34.629"/>
</kw>
<msg timestamp="20210619 01:48:34.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:34.283" endtime="20210619 01:48:34.630"/>
</kw>
<status status="PASS" starttime="20210619 01:48:34.282" endtime="20210619 01:48:34.630"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:34.634" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:34.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:34.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:34.632" endtime="20210619 01:48:34.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:34.959" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:34.959" endtime="20210619 01:48:34.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:34.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:34.960" endtime="20210619 01:48:34.961"/>
</kw>
<status status="PASS" starttime="20210619 01:48:34.631" endtime="20210619 01:48:34.961"/>
</kw>
<msg timestamp="20210619 01:48:34.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:34.631" endtime="20210619 01:48:34.961"/>
</kw>
<status status="PASS" starttime="20210619 01:48:34.630" endtime="20210619 01:48:34.962"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:34.965" level="INFO">Running command 'aws configure set aws_secret_access_key 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:35.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:35.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:34.963" endtime="20210619 01:48:35.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:35.299" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:35.299" endtime="20210619 01:48:35.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:35.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:35.299" endtime="20210619 01:48:35.300"/>
</kw>
<status status="PASS" starttime="20210619 01:48:34.963" endtime="20210619 01:48:35.300"/>
</kw>
<msg timestamp="20210619 01:48:35.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:34.962" endtime="20210619 01:48:35.301"/>
</kw>
<status status="PASS" starttime="20210619 01:48:34.962" endtime="20210619 01:48:35.301"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:35.305" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:35.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:35.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:35.302" endtime="20210619 01:48:35.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:35.629" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:35.628" endtime="20210619 01:48:35.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:35.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:35.629" endtime="20210619 01:48:35.630"/>
</kw>
<status status="PASS" starttime="20210619 01:48:35.302" endtime="20210619 01:48:35.630"/>
</kw>
<msg timestamp="20210619 01:48:35.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:35.302" endtime="20210619 01:48:35.630"/>
</kw>
<status status="PASS" starttime="20210619 01:48:35.301" endtime="20210619 01:48:35.631"/>
</kw>
<status status="PASS" starttime="20210619 01:48:31.403" endtime="20210619 01:48:35.631"/>
</kw>
<status status="PASS" starttime="20210619 01:48:31.402" endtime="20210619 01:48:35.631"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:48:35.631" endtime="20210619 01:48:35.632"/>
</kw>
<status status="PASS" starttime="20210619 01:48:31.376" endtime="20210619 01:48:35.632"/>
</kw>
<status status="PASS" starttime="20210619 01:48:31.376" endtime="20210619 01:48:35.632"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:48:35.633" endtime="20210619 01:48:35.633"/>
</kw>
<msg timestamp="20210619 01:48:35.633" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:48:35.632" endtime="20210619 01:48:35.633"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:48:35.634" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:48:35.633" endtime="20210619 01:48:35.634"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:35.638" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:39.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:39.060" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210619 01:48:35.635" endtime="20210619 01:48:39.060"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:48:39.061" endtime="20210619 01:48:39.061"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:48:39.062" endtime="20210619 01:48:39.062"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:48:39.062" endtime="20210619 01:48:39.063"/>
</kw>
<msg timestamp="20210619 01:48:39.063" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210619 01:48:35.635" endtime="20210619 01:48:39.063"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210619 01:48:39.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:39.063" endtime="20210619 01:48:39.064"/>
</kw>
<status status="PASS" starttime="20210619 01:48:35.634" endtime="20210619 01:48:39.064"/>
</kw>
<status status="PASS" starttime="20210619 01:48:35.634" endtime="20210619 01:48:39.064"/>
</kw>
<status status="PASS" starttime="20210619 01:48:30.814" endtime="20210619 01:48:39.064"/>
</kw>
<test id="s1-s7-s11-t1" name="Put object to s3">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:39.069" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20210619 01:48:39.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:39.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:39.067" endtime="20210619 01:48:39.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:39.072" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:39.071" endtime="20210619 01:48:39.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:39.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:39.072" endtime="20210619 01:48:39.073"/>
</kw>
<status status="PASS" starttime="20210619 01:48:39.066" endtime="20210619 01:48:39.073"/>
</kw>
<msg timestamp="20210619 01:48:39.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:39.066" endtime="20210619 01:48:39.073"/>
</kw>
<status status="PASS" starttime="20210619 01:48:39.065" endtime="20210619 01:48:39.074"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:39.078" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key 96542/putobject/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:49.038" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:48:49.038" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:48:39.076" endtime="20210619 01:48:49.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:49.040" level="INFO">
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:48:49.039" endtime="20210619 01:48:49.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:49.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:48:49.041" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:48:49.040" endtime="20210619 01:48:49.041"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:39.076" endtime="20210619 01:48:49.041"/>
</kw>
<msg timestamp="20210619 01:48:49.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:48:39.075" endtime="20210619 01:48:49.042"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:39.075" endtime="20210619 01:48:49.042"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:39.074" endtime="20210619 01:48:49.042"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
<status status="NOT RUN" starttime="20210619 01:48:49.043" endtime="20210619 01:48:49.043"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:49.043" endtime="20210619 01:48:49.043"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<status status="NOT RUN" starttime="20210619 01:48:49.044" endtime="20210619 01:48:49.044"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --body /tmp/zerobyte</arg>
<status status="NOT RUN" starttime="20210619 01:48:49.045" endtime="20210619 01:48:49.045"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/</arg>
<status status="NOT RUN" starttime="20210619 01:48:49.045" endtime="20210619 01:48:49.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:49.046" endtime="20210619 01:48:49.046"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:48:39.064" endtime="20210619 01:48:49.046">255 != 0</status>
</test>
<test id="s1-s7-s11-t2" name="Get object from s3">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:49.054" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 96542/putobject/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:49.510" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:48:49.510" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:49.051" endtime="20210619 01:48:49.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:49.512" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:49.511" endtime="20210619 01:48:49.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:49.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:48:49.513" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:48:49.512" endtime="20210619 01:48:49.513"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:49.051" endtime="20210619 01:48:49.513"/>
</kw>
<msg timestamp="20210619 01:48:49.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:48:49.050" endtime="20210619 01:48:49.513"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:49.050" endtime="20210619 01:48:49.514"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:49.049" endtime="20210619 01:48:49.514"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<status status="NOT RUN" starttime="20210619 01:48:49.514" endtime="20210619 01:48:49.514"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:48:49.048" endtime="20210619 01:48:49.514">255 != 0</status>
</test>
<test id="s1-s7-s11-t3" name="Get Partial object from s3 with both start and endoffset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:49.522" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 96542/putobject/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:49.978" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:48:49.978" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:49.520" endtime="20210619 01:48:49.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:49.980" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:49.979" endtime="20210619 01:48:49.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:49.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:48:49.981" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:48:49.980" endtime="20210619 01:48:49.981"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:49.520" endtime="20210619 01:48:49.981"/>
</kw>
<msg timestamp="20210619 01:48:49.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:48:49.519" endtime="20210619 01:48:49.982"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:49.519" endtime="20210619 01:48:49.982"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:49.516" endtime="20210619 01:48:49.982"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:49.982" endtime="20210619 01:48:49.982"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:49.983" endtime="20210619 01:48:49.983"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:49.983" endtime="20210619 01:48:49.983"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<status status="NOT RUN" starttime="20210619 01:48:49.983" endtime="20210619 01:48:49.983"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<status status="NOT RUN" starttime="20210619 01:48:49.984" endtime="20210619 01:48:49.984"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210619 01:48:49.984" endtime="20210619 01:48:49.984"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<status status="NOT RUN" starttime="20210619 01:48:49.984" endtime="20210619 01:48:49.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:49.984" endtime="20210619 01:48:49.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:49.985" endtime="20210619 01:48:49.985"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:49.985" endtime="20210619 01:48:49.985"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<status status="NOT RUN" starttime="20210619 01:48:49.985" endtime="20210619 01:48:49.985"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<status status="NOT RUN" starttime="20210619 01:48:49.985" endtime="20210619 01:48:49.985"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210619 01:48:49.985" endtime="20210619 01:48:49.986"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<status status="NOT RUN" starttime="20210619 01:48:49.986" endtime="20210619 01:48:49.986"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:49.986" endtime="20210619 01:48:49.986"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:49.986" endtime="20210619 01:48:49.986"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:49.986" endtime="20210619 01:48:49.986"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<status status="NOT RUN" starttime="20210619 01:48:49.987" endtime="20210619 01:48:49.987"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<status status="NOT RUN" starttime="20210619 01:48:49.987" endtime="20210619 01:48:49.987"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210619 01:48:49.987" endtime="20210619 01:48:49.987"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:48:49.515" endtime="20210619 01:48:49.988">255 != 0</status>
</test>
<test id="s1-s7-s11-t4" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:49.993" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 96542/putobject/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:50.449" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:48:50.449" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:49.991" endtime="20210619 01:48:50.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:50.450" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:50.449" endtime="20210619 01:48:50.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:50.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:50.450" endtime="20210619 01:48:50.451"/>
</kw>
<msg timestamp="20210619 01:48:50.452" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:49.990" endtime="20210619 01:48:50.452"/>
</kw>
<msg timestamp="20210619 01:48:50.452" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:49.990" endtime="20210619 01:48:50.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210619 01:48:50.453" level="FAIL">'
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist' does not contain 'InvalidRange'</msg>
<status status="FAIL" starttime="20210619 01:48:50.452" endtime="20210619 01:48:50.453"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:48:49.988" endtime="20210619 01:48:50.453">'
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist' does not contain 'InvalidRange'</status>
</test>
<test id="s1-s7-s11-t5" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:50.460" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 96542/putobject/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:50.913" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:48:50.913" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:50.458" endtime="20210619 01:48:50.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:50.915" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:50.914" endtime="20210619 01:48:50.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:50.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:48:50.916" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:48:50.915" endtime="20210619 01:48:50.916"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:50.458" endtime="20210619 01:48:50.916"/>
</kw>
<msg timestamp="20210619 01:48:50.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:48:50.457" endtime="20210619 01:48:50.916"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:50.456" endtime="20210619 01:48:50.917"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:50.455" endtime="20210619 01:48:50.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:50.917" endtime="20210619 01:48:50.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:50.917" endtime="20210619 01:48:50.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:50.917" endtime="20210619 01:48:50.918"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<status status="NOT RUN" starttime="20210619 01:48:50.918" endtime="20210619 01:48:50.918"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<status status="NOT RUN" starttime="20210619 01:48:50.918" endtime="20210619 01:48:50.918"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210619 01:48:50.918" endtime="20210619 01:48:50.918"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:48:50.454" endtime="20210619 01:48:50.919">255 != 0</status>
</test>
<test id="s1-s7-s11-t6" name="Get Partial object from s3 with only start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:50.925" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 96542/putobject/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:51.365" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:48:51.365" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:50.923" endtime="20210619 01:48:51.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:51.366" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:51.366" endtime="20210619 01:48:51.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:51.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:48:51.367" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:48:51.367" endtime="20210619 01:48:51.367"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:50.922" endtime="20210619 01:48:51.368"/>
</kw>
<msg timestamp="20210619 01:48:51.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:48:50.922" endtime="20210619 01:48:51.368"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:50.921" endtime="20210619 01:48:51.368"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:50.920" endtime="20210619 01:48:51.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:51.369" endtime="20210619 01:48:51.369"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:51.369" endtime="20210619 01:48:51.369"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:51.369" endtime="20210619 01:48:51.369"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<status status="NOT RUN" starttime="20210619 01:48:51.369" endtime="20210619 01:48:51.369"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<status status="NOT RUN" starttime="20210619 01:48:51.370" endtime="20210619 01:48:51.370"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210619 01:48:51.370" endtime="20210619 01:48:51.370"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:48:50.919" endtime="20210619 01:48:51.370">255 != 0</status>
</test>
<test id="s1-s7-s11-t7" name="Get Partial object from s3 with both start and endoffset which are equal">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:51.377" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 96542/putobject/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:51.834" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:48:51.834" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:51.375" endtime="20210619 01:48:51.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:51.836" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:51.835" endtime="20210619 01:48:51.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:51.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:48:51.837" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:48:51.836" endtime="20210619 01:48:51.837"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:51.374" endtime="20210619 01:48:51.837"/>
</kw>
<msg timestamp="20210619 01:48:51.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:48:51.373" endtime="20210619 01:48:51.838"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:51.373" endtime="20210619 01:48:51.838"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:51.372" endtime="20210619 01:48:51.838"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:51.838" endtime="20210619 01:48:51.838"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:51.838" endtime="20210619 01:48:51.839"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:51.839" endtime="20210619 01:48:51.839"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<status status="NOT RUN" starttime="20210619 01:48:51.839" endtime="20210619 01:48:51.839"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<status status="NOT RUN" starttime="20210619 01:48:51.839" endtime="20210619 01:48:51.839"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210619 01:48:51.839" endtime="20210619 01:48:51.839"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<status status="NOT RUN" starttime="20210619 01:48:51.840" endtime="20210619 01:48:51.840"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:51.840" endtime="20210619 01:48:51.840"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:51.840" endtime="20210619 01:48:51.840"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:51.840" endtime="20210619 01:48:51.840"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<status status="NOT RUN" starttime="20210619 01:48:51.841" endtime="20210619 01:48:51.841"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<status status="NOT RUN" starttime="20210619 01:48:51.841" endtime="20210619 01:48:51.841"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210619 01:48:51.841" endtime="20210619 01:48:51.841"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:48:51.371" endtime="20210619 01:48:51.841">255 != 0</status>
</test>
<test id="s1-s7-s11-t8" name="Get Partial object from s3 to get last n bytes">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:51.848" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 96542/putobject/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:52.316" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:48:52.316" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:51.846" endtime="20210619 01:48:52.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:52.317" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:52.317" endtime="20210619 01:48:52.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:52.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:48:52.318" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:48:52.318" endtime="20210619 01:48:52.319"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:51.845" endtime="20210619 01:48:52.319"/>
</kw>
<msg timestamp="20210619 01:48:52.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:48:51.845" endtime="20210619 01:48:52.319"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:51.844" endtime="20210619 01:48:52.319"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:51.843" endtime="20210619 01:48:52.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:52.320" endtime="20210619 01:48:52.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:52.320" endtime="20210619 01:48:52.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:52.320" endtime="20210619 01:48:52.320"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<status status="NOT RUN" starttime="20210619 01:48:52.321" endtime="20210619 01:48:52.321"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<status status="NOT RUN" starttime="20210619 01:48:52.321" endtime="20210619 01:48:52.321"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210619 01:48:52.321" endtime="20210619 01:48:52.321"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<status status="NOT RUN" starttime="20210619 01:48:52.321" endtime="20210619 01:48:52.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:52.322" endtime="20210619 01:48:52.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:52.322" endtime="20210619 01:48:52.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:52.322" endtime="20210619 01:48:52.322"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<status status="NOT RUN" starttime="20210619 01:48:52.322" endtime="20210619 01:48:52.322"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<status status="NOT RUN" starttime="20210619 01:48:52.323" endtime="20210619 01:48:52.323"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210619 01:48:52.323" endtime="20210619 01:48:52.323"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:48:51.842" endtime="20210619 01:48:52.323">255 != 0</status>
</test>
<test id="s1-s7-s11-t9" name="Incorrect values for end and start offset">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:52.330" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 96542/putobject/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:52.777" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:48:52.777" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:52.328" endtime="20210619 01:48:52.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:52.778" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:52.778" endtime="20210619 01:48:52.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:52.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210619 01:48:52.779" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210619 01:48:52.779" endtime="20210619 01:48:52.779"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:52.327" endtime="20210619 01:48:52.780"/>
</kw>
<msg timestamp="20210619 01:48:52.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210619 01:48:52.327" endtime="20210619 01:48:52.780"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:52.326" endtime="20210619 01:48:52.780"/>
</kw>
<status status="FAIL" starttime="20210619 01:48:52.325" endtime="20210619 01:48:52.780"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:52.781" endtime="20210619 01:48:52.781"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:52.781" endtime="20210619 01:48:52.781"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<status status="NOT RUN" starttime="20210619 01:48:52.781" endtime="20210619 01:48:52.781"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<status status="NOT RUN" starttime="20210619 01:48:52.782" endtime="20210619 01:48:52.782"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210619 01:48:52.782" endtime="20210619 01:48:52.782"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<status status="NOT RUN" starttime="20210619 01:48:52.782" endtime="20210619 01:48:52.782"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:52.782" endtime="20210619 01:48:52.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:52.783" endtime="20210619 01:48:52.783"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<status status="NOT RUN" starttime="20210619 01:48:52.783" endtime="20210619 01:48:52.783"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<status status="NOT RUN" starttime="20210619 01:48:52.783" endtime="20210619 01:48:52.783"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210619 01:48:52.783" endtime="20210619 01:48:52.783"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:48:52.324" endtime="20210619 01:48:52.784">255 != 0</status>
</test>
<test id="s1-s7-s11-t10" name="Zero byte file">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:52.789" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key 96542/putobject/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:53.245" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:48:53.245" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:52.787" endtime="20210619 01:48:53.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:53.246" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:53.246" endtime="20210619 01:48:53.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:53.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:53.247" endtime="20210619 01:48:53.247"/>
</kw>
<msg timestamp="20210619 01:48:53.248" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:52.786" endtime="20210619 01:48:53.248"/>
</kw>
<msg timestamp="20210619 01:48:53.248" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20210619 01:48:52.785" endtime="20210619 01:48:53.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210619 01:48:53.249" level="FAIL">'
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist' does not contain 'InvalidRange'</msg>
<status status="FAIL" starttime="20210619 01:48:53.248" endtime="20210619 01:48:53.249"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20210619 01:48:53.249" endtime="20210619 01:48:53.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:53.249" endtime="20210619 01:48:53.249"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20210619 01:48:53.250" endtime="20210619 01:48:53.250"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210619 01:48:53.250" endtime="20210619 01:48:53.250"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210619 01:48:52.784" endtime="20210619 01:48:53.250">'
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist' does not contain 'InvalidRange'</status>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="FAIL" starttime="20210619 01:48:30.804" endtime="20210619 01:48:53.252"/>
</suite>
<suite id="s1-s7-s12" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:48:53.266" level="INFO">${random} = 72905</msg>
<status status="PASS" starttime="20210619 01:48:53.266" endtime="20210619 01:48:53.266"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:48:53.268" level="INFO">${PREFIX} = 72905</msg>
<status status="PASS" starttime="20210619 01:48:53.266" endtime="20210619 01:48:53.268"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.265" endtime="20210619 01:48:53.268"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.265" endtime="20210619 01:48:53.268"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:53.271" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:53.273" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:48:53.273" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210619 01:48:53.269" endtime="20210619 01:48:53.273"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:48:53.273" endtime="20210619 01:48:53.274"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:53.276" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:53.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:53.410" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.003'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210619 01:48:53.274" endtime="20210619 01:48:53.411"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:53.416" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:53.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:53.818" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.c...</msg>
<status status="PASS" starttime="20210619 01:48:53.414" endtime="20210619 01:48:53.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:53.819" level="INFO">Loaded plugins: fastestmirror, ovl
Loading mirror speeds from cached hostfile
 * base: mirrors.advancedhosters.com
 * epel: dl.fedoraproject.org
 * extras: mirror.ash.fastserv.com
 * updates: mirror.cogentco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210619 01:48:53.818" endtime="20210619 01:48:53.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:53.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:53.819" endtime="20210619 01:48:53.820"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.413" endtime="20210619 01:48:53.820"/>
</kw>
<msg timestamp="20210619 01:48:53.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:53.413" endtime="20210619 01:48:53.820"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.412" endtime="20210619 01:48:53.821"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.412" endtime="20210619 01:48:53.821"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.411" endtime="20210619 01:48:53.821"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.269" endtime="20210619 01:48:53.821"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.268" endtime="20210619 01:48:53.821"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:53.827" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:53.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:53.830" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20210619 01:48:53.825" endtime="20210619 01:48:53.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:53.831" level="INFO">s3g</msg>
<status status="PASS" starttime="20210619 01:48:53.830" endtime="20210619 01:48:53.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:53.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:53.831" endtime="20210619 01:48:53.832"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.824" endtime="20210619 01:48:53.832"/>
</kw>
<msg timestamp="20210619 01:48:53.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:53.824" endtime="20210619 01:48:53.832"/>
</kw>
<msg timestamp="20210619 01:48:53.832" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20210619 01:48:53.823" endtime="20210619 01:48:53.833"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:48:53.835" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:48:53.833" endtime="20210619 01:48:53.835"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:53.839" level="INFO">Running command 'kinit -k testuser/s3g@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:53.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:53.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:53.837" endtime="20210619 01:48:53.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:53.846" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:53.846" endtime="20210619 01:48:53.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:53.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:53.846" endtime="20210619 01:48:53.847"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.837" endtime="20210619 01:48:53.847"/>
</kw>
<msg timestamp="20210619 01:48:53.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:53.836" endtime="20210619 01:48:53.848"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.835" endtime="20210619 01:48:53.848"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.835" endtime="20210619 01:48:53.848"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.823" endtime="20210619 01:48:53.848"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.823" endtime="20210619 01:48:53.848"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:53.852" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:56.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:56.969" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:48:53.851" endtime="20210619 01:48:56.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:56.970" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:48:56.970" endtime="20210619 01:48:56.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:56.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:56.970" endtime="20210619 01:48:56.971"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.850" endtime="20210619 01:48:56.971"/>
</kw>
<msg timestamp="20210619 01:48:56.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:53.850" endtime="20210619 01:48:56.972"/>
</kw>
<msg timestamp="20210619 01:48:56.972" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:48:53.849" endtime="20210619 01:48:56.972"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:48:56.973" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:48:56.972" endtime="20210619 01:48:56.973"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210619 01:48:56.973" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:48:56.973" endtime="20210619 01:48:56.973"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:48:56.974" level="INFO">${secret} = ['3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08']</msg>
<status status="PASS" starttime="20210619 01:48:56.974" endtime="20210619 01:48:56.974"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:48:56.975" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:48:56.974" endtime="20210619 01:48:56.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:48:56.977" level="INFO">${secret} = 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08</msg>
<status status="PASS" starttime="20210619 01:48:56.976" endtime="20210619 01:48:56.977"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:56.980" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:57.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:57.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:56.979" endtime="20210619 01:48:57.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:57.312" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:57.312" endtime="20210619 01:48:57.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:57.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:57.312" endtime="20210619 01:48:57.313"/>
</kw>
<status status="PASS" starttime="20210619 01:48:56.978" endtime="20210619 01:48:57.313"/>
</kw>
<msg timestamp="20210619 01:48:57.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:56.978" endtime="20210619 01:48:57.314"/>
</kw>
<status status="PASS" starttime="20210619 01:48:56.977" endtime="20210619 01:48:57.314"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:57.317" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:57.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:57.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:57.316" endtime="20210619 01:48:57.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:57.652" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:57.651" endtime="20210619 01:48:57.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:57.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:57.652" endtime="20210619 01:48:57.653"/>
</kw>
<status status="PASS" starttime="20210619 01:48:57.315" endtime="20210619 01:48:57.653"/>
</kw>
<msg timestamp="20210619 01:48:57.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:57.315" endtime="20210619 01:48:57.653"/>
</kw>
<status status="PASS" starttime="20210619 01:48:57.314" endtime="20210619 01:48:57.654"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:57.657" level="INFO">Running command 'aws configure set aws_secret_access_key 3b5bb13d5dabf59f9f5aecb68ef9ad3d18b099603125a8720b66b13de541db08 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:57.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:57.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:57.655" endtime="20210619 01:48:57.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:57.986" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:57.985" endtime="20210619 01:48:57.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:57.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:57.986" endtime="20210619 01:48:57.987"/>
</kw>
<status status="PASS" starttime="20210619 01:48:57.655" endtime="20210619 01:48:57.987"/>
</kw>
<msg timestamp="20210619 01:48:57.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:57.654" endtime="20210619 01:48:57.987"/>
</kw>
<status status="PASS" starttime="20210619 01:48:57.654" endtime="20210619 01:48:57.988"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:57.992" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:48:58.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:48:58.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:48:57.990" endtime="20210619 01:48:58.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:48:58.312" level="INFO"/>
<status status="PASS" starttime="20210619 01:48:58.311" endtime="20210619 01:48:58.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:48:58.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:48:58.312" endtime="20210619 01:48:58.313"/>
</kw>
<status status="PASS" starttime="20210619 01:48:57.989" endtime="20210619 01:48:58.313"/>
</kw>
<msg timestamp="20210619 01:48:58.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:48:57.989" endtime="20210619 01:48:58.314"/>
</kw>
<status status="PASS" starttime="20210619 01:48:57.988" endtime="20210619 01:48:58.314"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.849" endtime="20210619 01:48:58.314"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.848" endtime="20210619 01:48:58.314"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:48:58.314" endtime="20210619 01:48:58.315"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.822" endtime="20210619 01:48:58.315"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.822" endtime="20210619 01:48:58.315"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:48:58.316" endtime="20210619 01:48:58.316"/>
</kw>
<msg timestamp="20210619 01:48:58.316" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:48:58.315" endtime="20210619 01:48:58.316"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:48:58.317" level="INFO">${BUCKET} = link</msg>
<status status="PASS" starttime="20210619 01:48:58.317" endtime="20210619 01:48:58.317"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:48:58.320" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:49:01.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:49:01.891" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "s3v",
  "name" : "link",
  "storageType" : "DISK",
  "versioning" ...</msg>
<status status="PASS" starttime="20210619 01:48:58.319" endtime="20210619 01:49:01.891"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:49:01.892" endtime="20210619 01:49:01.892"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:49:01.892" endtime="20210619 01:49:01.893"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:49:01.893" endtime="20210619 01:49:01.893"/>
</kw>
<msg timestamp="20210619 01:49:01.894" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20210619 01:48:58.318" endtime="20210619 01:49:01.894"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20210619 01:49:01.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:49:01.894" endtime="20210619 01:49:01.895"/>
</kw>
<status status="PASS" starttime="20210619 01:48:58.318" endtime="20210619 01:49:01.895"/>
</kw>
<status status="PASS" starttime="20210619 01:48:58.317" endtime="20210619 01:49:01.895"/>
</kw>
<status status="PASS" starttime="20210619 01:48:53.264" endtime="20210619 01:49:01.895"/>
</kw>
<test id="s1-s7-s12-t1" name="S3 Gateway Web UI">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:49:01.901" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:49:01.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:49:01.904" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20210619 01:49:01.899" endtime="20210619 01:49:01.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:49:01.906" level="INFO">s3g</msg>
<status status="PASS" starttime="20210619 01:49:01.905" endtime="20210619 01:49:01.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:49:01.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:49:01.906" endtime="20210619 01:49:01.907"/>
</kw>
<status status="PASS" starttime="20210619 01:49:01.898" endtime="20210619 01:49:01.907"/>
</kw>
<msg timestamp="20210619 01:49:01.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:49:01.898" endtime="20210619 01:49:01.907"/>
</kw>
<msg timestamp="20210619 01:49:01.907" level="INFO">${hostname} = s3g</msg>
<status status="PASS" starttime="20210619 01:49:01.897" endtime="20210619 01:49:01.908"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:49:01.912" level="INFO">Running command 'kinit -k HTTP/s3g@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:49:01.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:49:01.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:49:01.910" endtime="20210619 01:49:01.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:49:01.920" level="INFO"/>
<status status="PASS" starttime="20210619 01:49:01.919" endtime="20210619 01:49:01.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:49:01.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:49:01.920" endtime="20210619 01:49:01.921"/>
</kw>
<status status="PASS" starttime="20210619 01:49:01.909" endtime="20210619 01:49:01.922"/>
</kw>
<msg timestamp="20210619 01:49:01.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:49:01.909" endtime="20210619 01:49:01.922"/>
</kw>
<status status="PASS" starttime="20210619 01:49:01.908" endtime="20210619 01:49:01.922"/>
</kw>
<status status="PASS" starttime="20210619 01:49:01.908" endtime="20210619 01:49:01.922"/>
</kw>
<status status="PASS" starttime="20210619 01:49:01.897" endtime="20210619 01:49:01.922"/>
</kw>
<status status="PASS" starttime="20210619 01:49:01.896" endtime="20210619 01:49:01.922"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:49:01.927" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:49:01.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:49:01.937" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210619 01:49:01.924" endtime="20210619 01:49:01.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:49:01.938" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.8...
* Connected to s3g (172.18.0.8) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Sat, 19 Jun 2021 01:49:01 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Sat, 19 Jun 2021 01:49:01 GMT
&lt; Date: Sat, 19 Jun 2021 01:49:01 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20210619 01:49:01.937" endtime="20210619 01:49:01.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:49:01.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:49:01.938" endtime="20210619 01:49:01.939"/>
</kw>
<status status="PASS" starttime="20210619 01:49:01.924" endtime="20210619 01:49:01.940"/>
</kw>
<msg timestamp="20210619 01:49:01.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:49:01.923" endtime="20210619 01:49:01.940"/>
</kw>
<msg timestamp="20210619 01:49:01.941" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210619 01:49:01.923" endtime="20210619 01:49:01.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:49:01.941" endtime="20210619 01:49:01.942"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>/static/</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:49:01.942" endtime="20210619 01:49:01.942"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:49:01.947" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:49:02.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:49:02.023" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210619 01:49:01.945" endtime="20210619 01:49:02.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:49:02.025" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.8...
* Connected to s3g (172.18.0.8) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Unauthorized
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 459
&lt; 
* Ignoring the response-body
{ [data not shown]

100   459  100   459    0     0  49169      0 --:--:-- --:--:-- --:--:-- 51000
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/static/index.html'
* Found bundle for host s3g: 0x1777f50
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.18.0.8) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET /static/index.html HTTP/1.1
&gt; Authorization: Negotiate YIICUQYJKoZIhvcSAQICAQBuggJAMIICPKADAgEFoQMCAQ6iBwMFACAAAACjggFQYYIBTDCCAUigAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARgwggEUoAMCARKhAwIBAaKCAQYEggECuvwoBwWzRK/3vBikr3o5GBnB8NIMcdR8561Obm/LdFH2IlATNTCzA7Snq10hSlJHqiXRSoyeebdWQYwZpzWbfzji6wNxg/SsOZqnKWzS8LJw4sjBIEU+PQ8ynMk+/pn52Pg8VcZ4cN/IfpSfwOY8nVqlDHDORMjZ4TPHCaNPaF5EvlVGPwKAvERT9BWVb7zCcVC7eqRn1SwUHP9EA/+shLMQoNbHAXLk50gdUUaSANJTQDKZZ/rCGLz7I7zDh4srMWetR/8KxE/qRuIAlzxZItxEsjagD4lGC2MigCFEb/Ep6J87h0rCl2d6Ov85vgvAyiYvIsU9uCzVi6qGor/Fz10ApIHSMIHPoAMCARKigccEgcQjsU31AH9M1D1Ha99+Dk9f45tloY6yHSmDfZhn1SxQyj1MurLiylphVW5ibTWADMNrNL35rdF5LFg1bGuP4an3Mgr0v1FaOdKwIZr8wk1UYY9OgrW3rgeQzikm+SFod2NT2FKHvoy3FYnfJ65DO5+YA8xbIX1/nbEdAGwpTFR8bKGhImtv4mhComHfXgKcJuc1Gb6jNjsGPrC2vI8crRKGyU233aiTllsobdC+GGQ8dcztJMP8cTAWt0SHRKzE95tDtU6X
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Sat, 19 Jun 2021 01:49:01 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; X-XSS-Protection: 1; mode=block
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCCbeAcNcNnHeqBpjkFAa4M2/6r+BhTAFUzotZGolnakC/sWild115hdmfWpS0p407M0h8NfDm5AK3CpMBx/a5ZOWF
&lt; Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1624103342017&amp;s=fcSISIiT2uwO+ffEW7k3mMLABgu7iFvm20oPFe6yFho="; Path=/; HttpOnly
&lt; Last-Modified: Sat, 19 Jun 2021 00:55:16 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3106
&lt; 
{ [data not shown]

100  3106  100  3106    0     0  45081      0 --:--:-- --:--:-- --:--:-- 45081
* Closing connection 0
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20210619 01:49:02.024" endtime="20210619 01:49:02.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:49:02.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:49:02.025" endtime="20210619 01:49:02.026"/>
</kw>
<status status="PASS" starttime="20210619 01:49:01.944" endtime="20210619 01:49:02.026"/>
</kw>
<msg timestamp="20210619 01:49:02.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:49:01.943" endtime="20210619 01:49:02.027"/>
</kw>
<msg timestamp="20210619 01:49:02.027" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20210619 01:49:01.942" endtime="20210619 01:49:02.027"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:49:02.028" endtime="20210619 01:49:02.028"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:49:01.895" endtime="20210619 01:49:02.028"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20210619 01:48:53.255" endtime="20210619 01:49:02.030"/>
</suite>
<status status="FAIL" starttime="20210619 01:41:49.439" endtime="20210619 01:49:02.034"/>
</suite>
<suite id="s1-s8" name="Security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s8-s1" name="Admin-Cert" source="/opt/hadoop/smoketest/security/admin-cert.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:46.022" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:46.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:46.026" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:22:46.019" endtime="20210619 01:22:46.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:46.027" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:22:46.027" endtime="20210619 01:22:46.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:46.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:46.027" endtime="20210619 01:22:46.028"/>
</kw>
<status status="PASS" starttime="20210619 01:22:46.018" endtime="20210619 01:22:46.028"/>
</kw>
<msg timestamp="20210619 01:22:46.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:46.018" endtime="20210619 01:22:46.028"/>
</kw>
<msg timestamp="20210619 01:22:46.029" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:22:46.018" endtime="20210619 01:22:46.029"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:22:46.031" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:22:46.029" endtime="20210619 01:22:46.031"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:46.034" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:46.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:46.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:22:46.033" endtime="20210619 01:22:46.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:46.042" level="INFO"/>
<status status="PASS" starttime="20210619 01:22:46.042" endtime="20210619 01:22:46.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:46.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:46.043" endtime="20210619 01:22:46.044"/>
</kw>
<status status="PASS" starttime="20210619 01:22:46.032" endtime="20210619 01:22:46.044"/>
</kw>
<msg timestamp="20210619 01:22:46.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:46.032" endtime="20210619 01:22:46.045"/>
</kw>
<status status="PASS" starttime="20210619 01:22:46.031" endtime="20210619 01:22:46.045"/>
</kw>
<status status="PASS" starttime="20210619 01:22:46.031" endtime="20210619 01:22:46.045"/>
</kw>
<status status="PASS" starttime="20210619 01:22:46.017" endtime="20210619 01:22:46.045"/>
</kw>
<status status="PASS" starttime="20210619 01:22:46.017" endtime="20210619 01:22:46.045"/>
</kw>
<status status="PASS" starttime="20210619 01:22:46.016" endtime="20210619 01:22:46.045"/>
</kw>
<test id="s1-s8-s1-t1" name="List valid certificates">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:46.051" level="INFO">Running command 'ozone admin cert list 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:49.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:49.117" level="INFO">${output} = Total 6 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20210619 01:22:46.048" endtime="20210619 01:22:49.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:49.118" level="INFO">Total 6 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       
1                 Sat Jun 19 00:00:00 UTC 2021   Tue Jul 28 23:59:59 UTC 2026   O=CID-0df4f56f-a6a4-403f-9ee9-4fee9941ea87, OU=10ede817-4e86-4b6f-b472-6a4cf8c70ada, CN=scm@scm               
183115573598      Sat Jun 19 00:00:00 UTC 2021   Tue Jul 28 00:00:00 UTC 2026   O=CID-0df4f56f-a6a4-403f-9ee9-4fee9941ea87, OU=10ede817-4e86-4b6f-b472-6a4cf8c70ada, CN=scm-sub@scm           
191477104332      Sat Jun 19 00:00:00 UTC 2021   Sun Jun 19 00:00:00 UTC 2022   O=CID-0df4f56f-a6a4-403f-9ee9-4fee9941ea87, OU=10ede817-4e86-4b6f-b472-6a4cf8c70ada, CN=root@d355f67044aa     
191687551650      Sat Jun 19 00:00:00 UTC 2021   Sun Jun 19 00:00:00 UTC 2022   O=CID-0df4f56f-a6a4-403f-9ee9-4fee9941ea87, OU=10ede817-4e86-4b6f-b472-6a4cf8c70ada, CN=root@b05cc4bc8d87     
191856617747      Sat Jun 19 00:00:00 UTC 2021   Sun Jun 19 00:00:00 UTC 2022   O=CID-0df4f56f-a6a4-403f-9ee9-4fee9941ea87, OU=10ede817-4e86-4b6f-b472-6a4cf8c70ada, CN=root@957bee4d41f1     
198219296785      Sat Jun 19 00:00:00 UTC 2021   Sun Jun 19 00:00:00 UTC 2022   O=CID-0df4f56f-a6a4-403f-9ee9-4fee9941ea87, OU=10ede817-4e86-4b6f-b472-6a4cf8c70ada, CN=om                    </msg>
<status status="PASS" starttime="20210619 01:22:49.117" endtime="20210619 01:22:49.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:49.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:49.118" endtime="20210619 01:22:49.119"/>
</kw>
<status status="PASS" starttime="20210619 01:22:46.048" endtime="20210619 01:22:49.119"/>
</kw>
<msg timestamp="20210619 01:22:49.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:46.047" endtime="20210619 01:22:49.120"/>
</kw>
<msg timestamp="20210619 01:22:49.120" level="INFO">${output} = Total 6 valid certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                    ...</msg>
<status status="PASS" starttime="20210619 01:22:46.047" endtime="20210619 01:22:49.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>valid certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:22:49.120" endtime="20210619 01:22:49.121"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:22:46.046" endtime="20210619 01:22:49.121"/>
</test>
<test id="s1-s8-s1-t2" name="List revoked certificates">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -t revoked</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:49.126" level="INFO">Running command 'ozone admin cert list -t revoked 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:51.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:51.916" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20210619 01:22:49.124" endtime="20210619 01:22:51.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:51.917" level="INFO">Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                                       </msg>
<status status="PASS" starttime="20210619 01:22:51.917" endtime="20210619 01:22:51.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:51.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:51.918" endtime="20210619 01:22:51.918"/>
</kw>
<status status="PASS" starttime="20210619 01:22:49.124" endtime="20210619 01:22:51.919"/>
</kw>
<msg timestamp="20210619 01:22:51.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:49.123" endtime="20210619 01:22:51.919"/>
</kw>
<msg timestamp="20210619 01:22:51.919" level="INFO">${output} = Total 0 revoked certificates: 
SerialNumber      Valid From                     Expiry                         Subject                                                                                  ...</msg>
<status status="PASS" starttime="20210619 01:22:49.123" endtime="20210619 01:22:51.919"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Total 0 revoked certificates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:22:51.919" endtime="20210619 01:22:51.920"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:22:49.122" endtime="20210619 01:22:51.920"/>
</test>
<test id="s1-s8-s1-t3" name="Info of the cert">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:51.925" level="INFO">Running command 'for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:22:58.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:22:58.167" level="INFO">${output} = Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-0df4f56f-a6a4-403f-9ee9-4fee9941ea87, OU=10ede817-4e86-4b6f-b472-6a4cf8c70ada, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.11354...</msg>
<status status="PASS" starttime="20210619 01:22:51.923" endtime="20210619 01:22:58.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:22:58.168" level="INFO">Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-0df4f56f-a6a4-403f-9ee9-4fee9941ea87, OU=10ede817-4e86-4b6f-b472-6a4cf8c70ada, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.113549.1.1.11

  Key:  Sun RSA public key, 2048 bits
  params: null
  modulus: 27475079107973474121039081329376588896393882136480044281198974836774072493379041610899905157131496481410728238487088995743950372249915794064089408184583243201579677559719992417205917842263310215121382372566044462932368387458269991079321206025015660121728798542076303233828763550559757385151250152807178868520790488647682183322724930621609074480018826658019246220070032191807690408429279758305978286989144543244195116345068621183814912481444926142018320449542143034073955688290189476442509513073776764208627559152497406297987664789389370197096990645529561492856359722400053348219550425985027317897575485823504474889593
  public exponent: 65537
  Validity: [From: Sat Jun 19 00:00:00 UTC 2021,
               To: Tue Jul 28 23:59:59 UTC 2026]
  Issuer: O=CID-0df4f56f-a6a4-403f-9ee9-4fee9941ea87, OU=10ede817-4e86-4b6f-b472-6a4cf8c70ada, CN=scm@scm
  SerialNumber: [    01]

Certificate Extensions: 3
[1]: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

[2]: ObjectId: 2.5.29.15 Criticality=true
KeyUsage [
  Key_CertSign
  Crl_Sign
]

[3]: ObjectId: 2.5.29.17 Criticality=false
SubjectAlternativeName [
  IPAddress: 172.18.0.3
]

]
  Algorithm: [SHA256withRSA]
  Signature:
0000: 21 84 14 AD 83 0B D5 55   C4 15 B6 35 20 FC 3C 31  !......U...5 .&lt;1
0010: 2C C3 7C 16 CB DB 1A 55   2D 55 F2 AD 81 26 0B 42  ,......U-U...&amp;.B
0020: 62 A7 C3 DC 0F 4F AB F1   8C 1F E7 CC A7 C1 91 BB  b....O..........
0030: FB 80 C9 79 ED D5 4A B8   64 FC 33 64 E2 42 80 80  ...y..J.d.3d.B..
0040: 63 03 46 B3 C7 19 9A 86   60 EF 3A 14 3C E1 D1 2E  c.F.....`.:.&lt;...
0050: 8A 05 5B 75 D7 27 4A 98   C8 5D 83 FD 42 64 1C F1  ..[u.'J..]..Bd..
0060: 24 2A C6 04 F1 C7 10 DB   27 21 24 CE 3B 23 FF 45  $*......'!$.;#.E
0070: CC F6 88 7D 4B A1 46 F6   0F 1A 80 95 72 7D 5E 24  ....K.F.....r.^$
0080: 87 65 54 11 77 05 24 9E   65 6D A0 20 4B 81 5B 06  .eT.w.$.em. K.[.
0090: EE 22 02 24 97 08 0D C2   A8 3D 8C 1F 44 00 9C A7  .".$.....=..D...
00A0: 34 66 19 52 2F 2C 03 34   08 92 1E 48 89 BC 8B 28  4f.R/,.4...H...(
00B0: 65 C4 DF 8A 6B 69 C4 41   5A C9 D0 76 17 47 B8 C2  e...ki.AZ..v.G..
00C0: D5 77 82 C7 A6 98 1D 73   C9 21 E0 67 C6 97 63 2E  .w.....s.!.g..c.
00D0: 6E 49 11 12 DF A8 8D 00   9C 57 92 79 1E 79 C4 C0  nI.......W.y.y..
00E0: 20 93 20 5A AA 8B 7E 4F   5A B4 E6 A0 69 A2 F9 35   . Z...OZ...i..5
00F0: 72 F7 6C 1D E9 27 7A C4   97 C1 28 2E BD 2D 5A C2  r.l..'z...(..-Z.

]</msg>
<status status="PASS" starttime="20210619 01:22:58.167" endtime="20210619 01:22:58.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:22:58.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:22:58.168" endtime="20210619 01:22:58.169"/>
</kw>
<status status="PASS" starttime="20210619 01:22:51.923" endtime="20210619 01:22:58.169"/>
</kw>
<msg timestamp="20210619 01:22:58.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:51.922" endtime="20210619 01:22:58.170"/>
</kw>
<msg timestamp="20210619 01:22:58.170" level="INFO">${output} = Certificate id: 1
[
[
  Version: V3
  Subject: O=CID-0df4f56f-a6a4-403f-9ee9-4fee9941ea87, OU=10ede817-4e86-4b6f-b472-6a4cf8c70ada, CN=scm@scm
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.11354...</msg>
<status status="PASS" starttime="20210619 01:22:51.922" endtime="20210619 01:22:58.170"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate not found</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:22:58.170" endtime="20210619 01:22:58.171"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:22:51.921" endtime="20210619 01:22:58.171"/>
</test>
<doc>Test for ozone admin cert command</doc>
<status status="PASS" starttime="20210619 01:22:45.981" endtime="20210619 01:22:58.173"/>
</suite>
<suite id="s1-s8-s2" name="Bucket-Encryption" source="/opt/hadoop/smoketest/security/bucket-encryption.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Create Random Volume" library="shell">
<var>${volume}</var>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:22:58.184" level="INFO">${random} = tgjpg</msg>
<status status="PASS" starttime="20210619 01:22:58.184" endtime="20210619 01:22:58.184"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/vol-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:22:58.188" level="INFO">Running command 'ozone sh volume create o3://om/vol-tgjpg 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:01.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:01.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:22:58.186" endtime="20210619 01:23:01.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:01.799" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:01.798" endtime="20210619 01:23:01.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:01.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:01.799" endtime="20210619 01:23:01.800"/>
</kw>
<status status="PASS" starttime="20210619 01:22:58.185" endtime="20210619 01:23:01.800"/>
</kw>
<msg timestamp="20210619 01:23:01.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:22:58.185" endtime="20210619 01:23:01.800"/>
</kw>
<status status="PASS" starttime="20210619 01:22:58.184" endtime="20210619 01:23:01.801"/>
</kw>
<msg timestamp="20210619 01:23:01.801" level="INFO">${volume} = vol-tgjpg</msg>
<status status="PASS" starttime="20210619 01:22:58.183" endtime="20210619 01:23:01.801"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:23:01.802" level="INFO">${VOLUME} = vol-tgjpg</msg>
<status status="PASS" starttime="20210619 01:23:01.801" endtime="20210619 01:23:01.802"/>
</kw>
<status status="PASS" starttime="20210619 01:22:58.183" endtime="20210619 01:23:01.802"/>
</kw>
<test id="s1-s8-s2-t1" name="Create Encrypted Bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:01.807" level="INFO">Running command 'ozone sh bucket create -k key1 o3://om/vol-tgjpg/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:05.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:05.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:01.805" endtime="20210619 01:23:05.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:05.705" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:05.704" endtime="20210619 01:23:05.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:05.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:05.705" endtime="20210619 01:23:05.706"/>
</kw>
<status status="PASS" starttime="20210619 01:23:01.804" endtime="20210619 01:23:05.706"/>
</kw>
<msg timestamp="20210619 01:23:05.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:01.804" endtime="20210619 01:23:05.706"/>
</kw>
<msg timestamp="20210619 01:23:05.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:01.803" endtime="20210619 01:23:05.706"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>INVALID_REQUEST</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:23:05.707" endtime="20210619 01:23:05.707"/>
</kw>
<kw name="Bucket Exists" library="shell">
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:05.710" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/vol-tgjpg/encrypted-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:09.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:09.528" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "vol-tgjpg",
  "name" : "encrypted-bucket",
  "storageType" : "DISK...</msg>
<status status="PASS" starttime="20210619 01:23:05.708" endtime="20210619 01:23:09.528"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:23:09.529" endtime="20210619 01:23:09.530"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:23:09.530" endtime="20210619 01:23:09.530"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:23:09.530" endtime="20210619 01:23:09.531"/>
</kw>
<status status="PASS" starttime="20210619 01:23:05.707" endtime="20210619 01:23:09.531"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:23:01.802" endtime="20210619 01:23:09.531"/>
</test>
<test id="s1-s8-s2-t2" name="Create Key in Encrypted Bucket">
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>o3://${OM_SERVICE_ID}/${VOLUME}/encrypted-bucket/passwd</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:23:09.533" level="INFO">${key} = o3://om/vol-tgjpg/encrypted-bucket/passwd</msg>
<status status="PASS" starttime="20210619 01:23:09.533" endtime="20210619 01:23:09.533"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${key} /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:09.537" level="INFO">Running command 'ozone sh key put o3://om/vol-tgjpg/encrypted-bucket/passwd /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:15.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:15.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:09.535" endtime="20210619 01:23:15.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:15.838" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:15.838" endtime="20210619 01:23:15.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:15.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:15.839" endtime="20210619 01:23:15.839"/>
</kw>
<status status="PASS" starttime="20210619 01:23:09.535" endtime="20210619 01:23:15.840"/>
</kw>
<msg timestamp="20210619 01:23:15.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:09.534" endtime="20210619 01:23:15.840"/>
</kw>
<msg timestamp="20210619 01:23:15.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:09.533" endtime="20210619 01:23:15.840"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:23:15.843" level="INFO">${postfix} = 17455</msg>
<status status="PASS" starttime="20210619 01:23:15.842" endtime="20210619 01:23:15.843"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:23:15.844" level="INFO">${tmpfile} = /tmp/tempkey-17455</msg>
<status status="PASS" starttime="20210619 01:23:15.843" endtime="20210619 01:23:15.844"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:15.848" level="INFO">Running command 'ozone sh key get o3://om/vol-tgjpg/encrypted-bucket/passwd /tmp/tempkey-17455 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:21.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:21.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:15.846" endtime="20210619 01:23:21.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:21.872" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:21.871" endtime="20210619 01:23:21.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:21.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:21.872" endtime="20210619 01:23:21.873"/>
</kw>
<status status="PASS" starttime="20210619 01:23:15.845" endtime="20210619 01:23:21.873"/>
</kw>
<msg timestamp="20210619 01:23:21.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:15.844" endtime="20210619 01:23:21.874"/>
</kw>
<status status="PASS" starttime="20210619 01:23:15.844" endtime="20210619 01:23:21.874"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20210619 01:23:21.876" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-17455 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:21.878" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20210619 01:23:21.874" endtime="20210619 01:23:21.878"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:21.882" level="INFO">Running command 'rm -f /tmp/tempkey-17455 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:21.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:21.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:21.880" endtime="20210619 01:23:21.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:21.886" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:21.885" endtime="20210619 01:23:21.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:21.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:21.886" endtime="20210619 01:23:21.887"/>
</kw>
<status status="PASS" starttime="20210619 01:23:21.880" endtime="20210619 01:23:21.887"/>
</kw>
<msg timestamp="20210619 01:23:21.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:21.880" endtime="20210619 01:23:21.887"/>
</kw>
<status status="PASS" starttime="20210619 01:23:21.879" endtime="20210619 01:23:21.888"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:23:21.888" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210619 01:23:21.888" endtime="20210619 01:23:21.888"/>
</kw>
<msg timestamp="20210619 01:23:21.889" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20210619 01:23:15.842" endtime="20210619 01:23:21.889"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210619 01:23:21.889" endtime="20210619 01:23:21.889"/>
</kw>
<status status="PASS" starttime="20210619 01:23:15.841" endtime="20210619 01:23:21.890"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:23:09.532" endtime="20210619 01:23:21.890"/>
</test>
<doc>Test for bucket encryption</doc>
<status status="PASS" starttime="20210619 01:22:58.175" endtime="20210619 01:23:21.891"/>
</suite>
<suite id="s1-s8-s3" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s8-s3-t1" name="Create volume bucket with wrong credentials">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:21.905" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:21.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:21.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:21.903" endtime="20210619 01:23:21.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:21.910" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:21.909" endtime="20210619 01:23:21.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:21.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:21.910" endtime="20210619 01:23:21.910"/>
</kw>
<status status="PASS" starttime="20210619 01:23:21.903" endtime="20210619 01:23:21.911"/>
</kw>
<msg timestamp="20210619 01:23:21.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:21.902" endtime="20210619 01:23:21.911"/>
</kw>
<status status="PASS" starttime="20210619 01:23:21.902" endtime="20210619 01:23:21.911"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:21.913" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:24.974" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:23:24.975" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20210619 01:23:21.911" endtime="20210619 01:23:24.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:23:24.975" endtime="20210619 01:23:24.976"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:23:21.901" endtime="20210619 01:23:24.976"/>
</test>
<test id="s1-s8-s3-t2" name="Create volume with non-admin user">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:24.982" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:24.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:24.985" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:23:24.980" endtime="20210619 01:23:24.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:24.986" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:23:24.985" endtime="20210619 01:23:24.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:24.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:24.986" endtime="20210619 01:23:24.987"/>
</kw>
<status status="PASS" starttime="20210619 01:23:24.979" endtime="20210619 01:23:24.987"/>
</kw>
<msg timestamp="20210619 01:23:24.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:24.979" endtime="20210619 01:23:24.987"/>
</kw>
<msg timestamp="20210619 01:23:24.988" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:23:24.978" endtime="20210619 01:23:24.988"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:23:24.990" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:23:24.988" endtime="20210619 01:23:24.990"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:24.994" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:25.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:25.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:24.992" endtime="20210619 01:23:25.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:25.002" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:25.001" endtime="20210619 01:23:25.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:25.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:25.002" endtime="20210619 01:23:25.003"/>
</kw>
<status status="PASS" starttime="20210619 01:23:24.991" endtime="20210619 01:23:25.003"/>
</kw>
<msg timestamp="20210619 01:23:25.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:24.991" endtime="20210619 01:23:25.004"/>
</kw>
<status status="PASS" starttime="20210619 01:23:24.990" endtime="20210619 01:23:25.004"/>
</kw>
<status status="PASS" starttime="20210619 01:23:24.990" endtime="20210619 01:23:25.004"/>
</kw>
<status status="PASS" starttime="20210619 01:23:24.978" endtime="20210619 01:23:25.004"/>
</kw>
<status status="PASS" starttime="20210619 01:23:24.978" endtime="20210619 01:23:25.004"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:25.006" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:28.691" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:23:28.691" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have CREATE permission to access volume fstest null null</msg>
<status status="PASS" starttime="20210619 01:23:25.004" endtime="20210619 01:23:28.691"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:23:28.692" endtime="20210619 01:23:28.693"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:23:24.977" endtime="20210619 01:23:28.693"/>
</test>
<test id="s1-s8-s3-t3" name="Create bucket with non-admin owner(testuser2)">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:28.699" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:28.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:28.702" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:23:28.697" endtime="20210619 01:23:28.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:28.703" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:23:28.703" endtime="20210619 01:23:28.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:28.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:28.704" endtime="20210619 01:23:28.704"/>
</kw>
<status status="PASS" starttime="20210619 01:23:28.697" endtime="20210619 01:23:28.705"/>
</kw>
<msg timestamp="20210619 01:23:28.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:28.696" endtime="20210619 01:23:28.705"/>
</kw>
<msg timestamp="20210619 01:23:28.705" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:23:28.696" endtime="20210619 01:23:28.705"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:23:28.706" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:23:28.706" endtime="20210619 01:23:28.706"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:28.710" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:28.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:28.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:28.709" endtime="20210619 01:23:28.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:28.719" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:28.718" endtime="20210619 01:23:28.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:28.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:28.719" endtime="20210619 01:23:28.720"/>
</kw>
<status status="PASS" starttime="20210619 01:23:28.708" endtime="20210619 01:23:28.720"/>
</kw>
<msg timestamp="20210619 01:23:28.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:28.708" endtime="20210619 01:23:28.720"/>
</kw>
<status status="PASS" starttime="20210619 01:23:28.707" endtime="20210619 01:23:28.720"/>
</kw>
<status status="PASS" starttime="20210619 01:23:28.706" endtime="20210619 01:23:28.721"/>
</kw>
<status status="PASS" starttime="20210619 01:23:28.695" endtime="20210619 01:23:28.721"/>
</kw>
<status status="PASS" starttime="20210619 01:23:28.695" endtime="20210619 01:23:28.721"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:23:28.722" level="INFO">${random} = 79</msg>
<status status="PASS" starttime="20210619 01:23:28.722" endtime="20210619 01:23:28.722"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:23:28.724" level="INFO">${volume1} = fstest79</msg>
<status status="PASS" starttime="20210619 01:23:28.723" endtime="20210619 01:23:28.724"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:23:28.726" level="INFO">${volume2} = fstest279</msg>
<status status="PASS" starttime="20210619 01:23:28.724" endtime="20210619 01:23:28.726"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:23:28.728" level="INFO">${volume3} = fstest379</msg>
<status status="PASS" starttime="20210619 01:23:28.726" endtime="20210619 01:23:28.728"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:23:28.730" level="INFO">${volume4} = fstest479</msg>
<status status="PASS" starttime="20210619 01:23:28.728" endtime="20210619 01:23:28.730"/>
</kw>
<status status="PASS" starttime="20210619 01:23:28.721" endtime="20210619 01:23:28.731"/>
</kw>
<status status="PASS" starttime="20210619 01:23:28.721" endtime="20210619 01:23:28.731"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume4} -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:28.736" level="INFO">Running command 'ozone sh volume create o3://om/fstest479 -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:32.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:32.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:28.734" endtime="20210619 01:23:32.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:32.209" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:32.208" endtime="20210619 01:23:32.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:32.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:32.209" endtime="20210619 01:23:32.210"/>
</kw>
<status status="PASS" starttime="20210619 01:23:28.732" endtime="20210619 01:23:32.210"/>
</kw>
<msg timestamp="20210619 01:23:32.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:28.731" endtime="20210619 01:23:32.210"/>
</kw>
<status status="PASS" starttime="20210619 01:23:28.731" endtime="20210619 01:23:32.211"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:32.215" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:32.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:32.218" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:23:32.213" endtime="20210619 01:23:32.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:32.219" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:23:32.219" endtime="20210619 01:23:32.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:32.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:32.219" endtime="20210619 01:23:32.220"/>
</kw>
<status status="PASS" starttime="20210619 01:23:32.213" endtime="20210619 01:23:32.220"/>
</kw>
<msg timestamp="20210619 01:23:32.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:32.212" endtime="20210619 01:23:32.221"/>
</kw>
<msg timestamp="20210619 01:23:32.221" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:23:32.212" endtime="20210619 01:23:32.221"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:23:32.222" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:23:32.221" endtime="20210619 01:23:32.222"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:32.226" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:32.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:32.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:32.224" endtime="20210619 01:23:32.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:32.233" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:32.233" endtime="20210619 01:23:32.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:32.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:32.234" endtime="20210619 01:23:32.234"/>
</kw>
<status status="PASS" starttime="20210619 01:23:32.224" endtime="20210619 01:23:32.235"/>
</kw>
<msg timestamp="20210619 01:23:32.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:32.223" endtime="20210619 01:23:32.235"/>
</kw>
<status status="PASS" starttime="20210619 01:23:32.222" endtime="20210619 01:23:32.235"/>
</kw>
<status status="PASS" starttime="20210619 01:23:32.222" endtime="20210619 01:23:32.235"/>
</kw>
<status status="PASS" starttime="20210619 01:23:32.211" endtime="20210619 01:23:32.235"/>
</kw>
<status status="PASS" starttime="20210619 01:23:32.211" endtime="20210619 01:23:32.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create o3://om/${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:32.239" level="INFO">Running command 'ozone sh bucket create o3://om/fstest479/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:35.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:35.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:32.237" endtime="20210619 01:23:35.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:35.814" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:35.813" endtime="20210619 01:23:35.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:35.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:35.814" endtime="20210619 01:23:35.815"/>
</kw>
<status status="PASS" starttime="20210619 01:23:32.237" endtime="20210619 01:23:35.815"/>
</kw>
<msg timestamp="20210619 01:23:35.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:32.236" endtime="20210619 01:23:35.816"/>
</kw>
<msg timestamp="20210619 01:23:35.816" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:23:32.236" endtime="20210619 01:23:35.816"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:23:35.816" endtime="20210619 01:23:35.816"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume4}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:35.821" level="INFO">Running command 'ozone sh key put fstest479/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:41.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:41.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:35.819" endtime="20210619 01:23:41.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:41.431" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:41.430" endtime="20210619 01:23:41.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:41.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:41.431" endtime="20210619 01:23:41.432"/>
</kw>
<status status="PASS" starttime="20210619 01:23:35.818" endtime="20210619 01:23:41.432"/>
</kw>
<msg timestamp="20210619 01:23:41.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:35.817" endtime="20210619 01:23:41.432"/>
</kw>
<msg timestamp="20210619 01:23:41.432" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:23:35.817" endtime="20210619 01:23:41.432"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:23:41.433" endtime="20210619 01:23:41.433"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:41.437" level="INFO">Running command 'ozone sh key list fstest479/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:45.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:45.183" level="INFO">${output} = {
  "volumeName" : "fstest479",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-06-19T01:23:39.156Z",
  "modificationTime" : "2021-06-19T01:23:41.043Z",
 ...</msg>
<status status="PASS" starttime="20210619 01:23:41.435" endtime="20210619 01:23:45.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:45.185" level="INFO">{
  "volumeName" : "fstest479",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-06-19T01:23:39.156Z",
  "modificationTime" : "2021-06-19T01:23:41.043Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20210619 01:23:45.184" endtime="20210619 01:23:45.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:45.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:45.185" endtime="20210619 01:23:45.186"/>
</kw>
<status status="PASS" starttime="20210619 01:23:41.434" endtime="20210619 01:23:45.186"/>
</kw>
<msg timestamp="20210619 01:23:45.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:41.434" endtime="20210619 01:23:45.186"/>
</kw>
<msg timestamp="20210619 01:23:45.187" level="INFO">${result} = {
  "volumeName" : "fstest479",
  "bucketName" : "bucket1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-06-19T01:23:39.156Z",
  "modificationTime" : "2021-06-19T01:23:41.043Z",
 ...</msg>
<status status="PASS" starttime="20210619 01:23:41.433" endtime="20210619 01:23:45.187"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:23:45.187" endtime="20210619 01:23:45.187"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key delete ${volume4}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:45.191" level="INFO">Running command 'ozone sh key delete fstest479/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:48.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:48.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:45.189" endtime="20210619 01:23:48.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:48.723" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:48.722" endtime="20210619 01:23:48.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:48.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:48.723" endtime="20210619 01:23:48.724"/>
</kw>
<status status="PASS" starttime="20210619 01:23:45.189" endtime="20210619 01:23:48.724"/>
</kw>
<msg timestamp="20210619 01:23:48.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:45.188" endtime="20210619 01:23:48.725"/>
</kw>
<msg timestamp="20210619 01:23:48.725" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:23:45.188" endtime="20210619 01:23:48.725"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:23:48.725" endtime="20210619 01:23:48.726"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket delete ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:48.730" level="INFO">Running command 'ozone sh bucket delete fstest479/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:52.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:52.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:48.728" endtime="20210619 01:23:52.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:52.277" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:52.276" endtime="20210619 01:23:52.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:52.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:52.277" endtime="20210619 01:23:52.278"/>
</kw>
<status status="PASS" starttime="20210619 01:23:48.728" endtime="20210619 01:23:52.278"/>
</kw>
<msg timestamp="20210619 01:23:52.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:48.727" endtime="20210619 01:23:52.279"/>
</kw>
<msg timestamp="20210619 01:23:52.279" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:23:48.726" endtime="20210619 01:23:52.279"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:23:52.279" endtime="20210619 01:23:52.280"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:23:28.694" endtime="20210619 01:23:52.280"/>
</test>
<test id="s1-s8-s3-t4" name="Create volume bucket with credentials">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:52.286" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:52.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:52.289" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:23:52.284" endtime="20210619 01:23:52.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:52.290" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:23:52.289" endtime="20210619 01:23:52.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:52.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:52.290" endtime="20210619 01:23:52.291"/>
</kw>
<status status="PASS" starttime="20210619 01:23:52.283" endtime="20210619 01:23:52.291"/>
</kw>
<msg timestamp="20210619 01:23:52.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:52.283" endtime="20210619 01:23:52.292"/>
</kw>
<msg timestamp="20210619 01:23:52.292" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:23:52.282" endtime="20210619 01:23:52.292"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:23:52.293" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:23:52.292" endtime="20210619 01:23:52.293"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:52.297" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:52.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:52.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:52.295" endtime="20210619 01:23:52.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:52.304" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:52.304" endtime="20210619 01:23:52.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:52.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:52.304" endtime="20210619 01:23:52.305"/>
</kw>
<status status="PASS" starttime="20210619 01:23:52.294" endtime="20210619 01:23:52.305"/>
</kw>
<msg timestamp="20210619 01:23:52.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:52.294" endtime="20210619 01:23:52.306"/>
</kw>
<status status="PASS" starttime="20210619 01:23:52.293" endtime="20210619 01:23:52.306"/>
</kw>
<status status="PASS" starttime="20210619 01:23:52.293" endtime="20210619 01:23:52.306"/>
</kw>
<status status="PASS" starttime="20210619 01:23:52.282" endtime="20210619 01:23:52.306"/>
</kw>
<status status="PASS" starttime="20210619 01:23:52.281" endtime="20210619 01:23:52.306"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:23:52.308" level="INFO">${random} = 54</msg>
<status status="PASS" starttime="20210619 01:23:52.307" endtime="20210619 01:23:52.308"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:23:52.308" level="INFO">${volume1} = fstest54</msg>
<status status="PASS" starttime="20210619 01:23:52.308" endtime="20210619 01:23:52.309"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:23:52.309" level="INFO">${volume2} = fstest254</msg>
<status status="PASS" starttime="20210619 01:23:52.309" endtime="20210619 01:23:52.309"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:23:52.310" level="INFO">${volume3} = fstest354</msg>
<status status="PASS" starttime="20210619 01:23:52.309" endtime="20210619 01:23:52.310"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:23:52.311" level="INFO">${volume4} = fstest454</msg>
<status status="PASS" starttime="20210619 01:23:52.310" endtime="20210619 01:23:52.311"/>
</kw>
<status status="PASS" starttime="20210619 01:23:52.307" endtime="20210619 01:23:52.311"/>
</kw>
<status status="PASS" starttime="20210619 01:23:52.306" endtime="20210619 01:23:52.311"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:52.315" level="INFO">Running command 'ozone sh volume create o3://om/fstest54 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:55.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:55.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:52.314" endtime="20210619 01:23:55.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:55.861" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:55.860" endtime="20210619 01:23:55.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:55.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:55.861" endtime="20210619 01:23:55.862"/>
</kw>
<status status="PASS" starttime="20210619 01:23:52.313" endtime="20210619 01:23:55.862"/>
</kw>
<msg timestamp="20210619 01:23:55.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:52.312" endtime="20210619 01:23:55.863"/>
</kw>
<status status="PASS" starttime="20210619 01:23:52.311" endtime="20210619 01:23:55.863"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:55.867" level="INFO">Running command 'ozone sh volume create o3://om/fstest254 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:23:59.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:23:59.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:55.865" endtime="20210619 01:23:59.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:23:59.273" level="INFO"/>
<status status="PASS" starttime="20210619 01:23:59.273" endtime="20210619 01:23:59.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:23:59.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:23:59.274" endtime="20210619 01:23:59.275"/>
</kw>
<status status="PASS" starttime="20210619 01:23:55.864" endtime="20210619 01:23:59.275"/>
</kw>
<msg timestamp="20210619 01:23:59.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:55.864" endtime="20210619 01:23:59.275"/>
</kw>
<status status="PASS" starttime="20210619 01:23:55.863" endtime="20210619 01:23:59.276"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:23:59.279" level="INFO">Running command 'ozone sh bucket create o3://om/fstest54/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:02.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:02.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:23:59.277" endtime="20210619 01:24:02.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:02.807" level="INFO"/>
<status status="PASS" starttime="20210619 01:24:02.807" endtime="20210619 01:24:02.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:02.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:02.808" endtime="20210619 01:24:02.808"/>
</kw>
<status status="PASS" starttime="20210619 01:23:59.277" endtime="20210619 01:24:02.808"/>
</kw>
<msg timestamp="20210619 01:24:02.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:23:59.276" endtime="20210619 01:24:02.809"/>
</kw>
<status status="PASS" starttime="20210619 01:23:59.276" endtime="20210619 01:24:02.809"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:02.813" level="INFO">Running command 'ozone sh bucket create o3://om/fstest54/bucket2 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:06.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:06.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:24:02.811" endtime="20210619 01:24:06.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:06.385" level="INFO"/>
<status status="PASS" starttime="20210619 01:24:06.385" endtime="20210619 01:24:06.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:06.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:06.386" endtime="20210619 01:24:06.386"/>
</kw>
<status status="PASS" starttime="20210619 01:24:02.810" endtime="20210619 01:24:06.387"/>
</kw>
<msg timestamp="20210619 01:24:06.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:02.810" endtime="20210619 01:24:06.387"/>
</kw>
<status status="PASS" starttime="20210619 01:24:02.809" endtime="20210619 01:24:06.387"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume2}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:06.391" level="INFO">Running command 'ozone sh bucket create o3://om/fstest254/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:09.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:09.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:24:06.389" endtime="20210619 01:24:09.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:09.844" level="INFO"/>
<status status="PASS" starttime="20210619 01:24:09.843" endtime="20210619 01:24:09.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:09.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:09.844" endtime="20210619 01:24:09.845"/>
</kw>
<status status="PASS" starttime="20210619 01:24:06.388" endtime="20210619 01:24:09.845"/>
</kw>
<msg timestamp="20210619 01:24:09.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:06.388" endtime="20210619 01:24:09.845"/>
</kw>
<status status="PASS" starttime="20210619 01:24:06.387" endtime="20210619 01:24:09.846"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:23:52.280" endtime="20210619 01:24:09.846"/>
</test>
<test id="s1-s8-s3-t5" name="Check volume from ozonefs">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:09.851" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest54/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:13.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:13.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:24:09.849" endtime="20210619 01:24:13.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:13.248" level="INFO"/>
<status status="PASS" starttime="20210619 01:24:13.248" endtime="20210619 01:24:13.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:13.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:13.249" endtime="20210619 01:24:13.249"/>
</kw>
<status status="PASS" starttime="20210619 01:24:09.848" endtime="20210619 01:24:13.250"/>
</kw>
<msg timestamp="20210619 01:24:13.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:09.848" endtime="20210619 01:24:13.250"/>
</kw>
<msg timestamp="20210619 01:24:13.250" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:24:09.847" endtime="20210619 01:24:13.250"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:24:09.846" endtime="20210619 01:24:13.251"/>
</test>
<test id="s1-s8-s3-t6" name="Test Volume Acls">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:13.256" level="INFO">Running command 'ozone sh volume create fstest354 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:16.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:16.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:24:13.254" endtime="20210619 01:24:16.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:16.757" level="INFO"/>
<status status="PASS" starttime="20210619 01:24:16.756" endtime="20210619 01:24:16.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:16.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:16.757" endtime="20210619 01:24:16.757"/>
</kw>
<status status="PASS" starttime="20210619 01:24:13.253" endtime="20210619 01:24:16.758"/>
</kw>
<msg timestamp="20210619 01:24:16.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:13.253" endtime="20210619 01:24:16.758"/>
</kw>
<msg timestamp="20210619 01:24:16.758" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:24:13.252" endtime="20210619 01:24:16.758"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:24:16.759" endtime="20210619 01:24:16.759"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:16.763" level="INFO">Running command 'ozone sh volume getacl fstest354 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:20.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:20.401" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:24:16.761" endtime="20210619 01:24:20.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:20.402" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:24:20.402" endtime="20210619 01:24:20.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:20.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:20.403" endtime="20210619 01:24:20.403"/>
</kw>
<status status="PASS" starttime="20210619 01:24:16.760" endtime="20210619 01:24:20.403"/>
</kw>
<msg timestamp="20210619 01:24:20.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:16.760" endtime="20210619 01:24:20.404"/>
</kw>
<msg timestamp="20210619 01:24:20.404" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:24:16.759" endtime="20210619 01:24:20.404"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:24:20.404" endtime="20210619 01:24:20.405"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:20.409" level="INFO">Running command 'ozone sh volume addacl fstest354 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:23.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:23.855" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210619 01:24:20.407" endtime="20210619 01:24:23.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:23.856" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210619 01:24:23.856" endtime="20210619 01:24:23.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:23.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:23.857" endtime="20210619 01:24:23.857"/>
</kw>
<status status="PASS" starttime="20210619 01:24:20.406" endtime="20210619 01:24:23.858"/>
</kw>
<msg timestamp="20210619 01:24:23.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:20.406" endtime="20210619 01:24:23.858"/>
</kw>
<msg timestamp="20210619 01:24:23.858" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210619 01:24:20.405" endtime="20210619 01:24:23.858"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:23.862" level="INFO">Running command 'ozone sh volume getacl fstest354 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:27.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:27.581" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:24:23.860" endtime="20210619 01:24:27.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:27.582" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:24:27.581" endtime="20210619 01:24:27.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:27.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:27.583" endtime="20210619 01:24:27.583"/>
</kw>
<status status="PASS" starttime="20210619 01:24:23.859" endtime="20210619 01:24:27.584"/>
</kw>
<msg timestamp="20210619 01:24:27.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:23.859" endtime="20210619 01:24:27.584"/>
</kw>
<msg timestamp="20210619 01:24:27.584" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:24:23.858" endtime="20210619 01:24:27.584"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:24:27.584" endtime="20210619 01:24:27.585"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${volume3} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:27.589" level="INFO">Running command 'ozone sh volume removeacl fstest354 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:31.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:31.056" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:24:27.587" endtime="20210619 01:24:31.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:31.057" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:24:31.056" endtime="20210619 01:24:31.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:31.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:31.057" endtime="20210619 01:24:31.058"/>
</kw>
<status status="PASS" starttime="20210619 01:24:27.586" endtime="20210619 01:24:31.058"/>
</kw>
<msg timestamp="20210619 01:24:31.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:27.586" endtime="20210619 01:24:31.059"/>
</kw>
<msg timestamp="20210619 01:24:31.059" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:24:27.585" endtime="20210619 01:24:31.059"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:31.062" level="INFO">Running command 'ozone sh volume getacl fstest354 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:34.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:34.877" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:24:31.061" endtime="20210619 01:24:34.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:34.878" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:24:34.878" endtime="20210619 01:24:34.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:34.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:34.879" endtime="20210619 01:24:34.879"/>
</kw>
<status status="PASS" starttime="20210619 01:24:31.060" endtime="20210619 01:24:34.880"/>
</kw>
<msg timestamp="20210619 01:24:34.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:31.060" endtime="20210619 01:24:34.880"/>
</kw>
<msg timestamp="20210619 01:24:34.880" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:24:31.059" endtime="20210619 01:24:34.880"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:24:34.881" endtime="20210619 01:24:34.881"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${volume3} -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:34.885" level="INFO">Running command 'ozone sh volume setacl fstest354 -al user:superuser1:rwxy,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:38.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:38.445" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:24:34.883" endtime="20210619 01:24:38.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:38.447" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:24:38.446" endtime="20210619 01:24:38.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:38.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:38.447" endtime="20210619 01:24:38.448"/>
</kw>
<status status="PASS" starttime="20210619 01:24:34.883" endtime="20210619 01:24:38.448"/>
</kw>
<msg timestamp="20210619 01:24:38.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:34.882" endtime="20210619 01:24:38.448"/>
</kw>
<msg timestamp="20210619 01:24:38.449" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:24:34.882" endtime="20210619 01:24:38.449"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${volume3}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:38.452" level="INFO">Running command 'ozone sh volume getacl fstest354 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:42.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:42.069" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20210619 01:24:38.450" endtime="20210619 01:24:42.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:42.070" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:24:42.069" endtime="20210619 01:24:42.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:42.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:42.071" endtime="20210619 01:24:42.071"/>
</kw>
<status status="PASS" starttime="20210619 01:24:38.450" endtime="20210619 01:24:42.072"/>
</kw>
<msg timestamp="20210619 01:24:42.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:38.449" endtime="20210619 01:24:42.072"/>
</kw>
<msg timestamp="20210619 01:24:42.072" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20210619 01:24:38.449" endtime="20210619 01:24:42.072"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:24:42.072" endtime="20210619 01:24:42.074"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:24:42.074" endtime="20210619 01:24:42.074"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:24:13.251" endtime="20210619 01:24:42.075"/>
</test>
<test id="s1-s8-s3-t7" name="Test Bucket Acls">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:42.080" level="INFO">Running command 'ozone sh bucket create fstest354/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:45.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:45.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:24:42.078" endtime="20210619 01:24:45.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:45.449" level="INFO"/>
<status status="PASS" starttime="20210619 01:24:45.448" endtime="20210619 01:24:45.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:45.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:45.449" endtime="20210619 01:24:45.450"/>
</kw>
<status status="PASS" starttime="20210619 01:24:42.078" endtime="20210619 01:24:45.450"/>
</kw>
<msg timestamp="20210619 01:24:45.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:42.077" endtime="20210619 01:24:45.450"/>
</kw>
<msg timestamp="20210619 01:24:45.451" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:24:42.076" endtime="20210619 01:24:45.451"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:24:45.451" endtime="20210619 01:24:45.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:45.455" level="INFO">Running command 'ozone sh bucket getacl fstest354/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:49.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:49.238" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:24:45.453" endtime="20210619 01:24:49.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:49.239" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:24:49.238" endtime="20210619 01:24:49.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:49.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:49.239" endtime="20210619 01:24:49.240"/>
</kw>
<status status="PASS" starttime="20210619 01:24:45.453" endtime="20210619 01:24:49.240"/>
</kw>
<msg timestamp="20210619 01:24:49.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:45.452" endtime="20210619 01:24:49.240"/>
</kw>
<msg timestamp="20210619 01:24:49.241" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:24:45.451" endtime="20210619 01:24:49.241"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:24:49.241" endtime="20210619 01:24:49.242"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:49.245" level="INFO">Running command 'ozone sh bucket addacl fstest354/bk1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:52.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:52.579" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:24:49.243" endtime="20210619 01:24:52.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:52.580" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:24:52.579" endtime="20210619 01:24:52.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:52.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:52.580" endtime="20210619 01:24:52.581"/>
</kw>
<status status="PASS" starttime="20210619 01:24:49.243" endtime="20210619 01:24:52.581"/>
</kw>
<msg timestamp="20210619 01:24:52.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:49.242" endtime="20210619 01:24:52.582"/>
</kw>
<msg timestamp="20210619 01:24:52.582" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:24:49.242" endtime="20210619 01:24:52.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:52.586" level="INFO">Running command 'ozone sh bucket getacl fstest354/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:24:56.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:24:56.453" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:24:52.584" endtime="20210619 01:24:56.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:24:56.454" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:24:56.453" endtime="20210619 01:24:56.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:24:56.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:24:56.454" endtime="20210619 01:24:56.455"/>
</kw>
<status status="PASS" starttime="20210619 01:24:52.583" endtime="20210619 01:24:56.455"/>
</kw>
<msg timestamp="20210619 01:24:56.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:52.583" endtime="20210619 01:24:56.456"/>
</kw>
<msg timestamp="20210619 01:24:56.456" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:24:52.582" endtime="20210619 01:24:56.456"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:24:56.456" endtime="20210619 01:24:56.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${volume3}/bk1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:24:56.460" level="INFO">Running command 'ozone sh bucket removeacl fstest354/bk1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:00.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:00.056" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:24:56.459" endtime="20210619 01:25:00.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:00.057" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:25:00.056" endtime="20210619 01:25:00.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:00.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:00.057" endtime="20210619 01:25:00.058"/>
</kw>
<status status="PASS" starttime="20210619 01:24:56.458" endtime="20210619 01:25:00.058"/>
</kw>
<msg timestamp="20210619 01:25:00.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:24:56.458" endtime="20210619 01:25:00.059"/>
</kw>
<msg timestamp="20210619 01:25:00.059" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:24:56.457" endtime="20210619 01:25:00.059"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:00.063" level="INFO">Running command 'ozone sh bucket getacl fstest354/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:03.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:03.691" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:25:00.061" endtime="20210619 01:25:03.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:03.692" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:25:03.692" endtime="20210619 01:25:03.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:03.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:03.693" endtime="20210619 01:25:03.693"/>
</kw>
<status status="PASS" starttime="20210619 01:25:00.060" endtime="20210619 01:25:03.694"/>
</kw>
<msg timestamp="20210619 01:25:03.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:00.060" endtime="20210619 01:25:03.694"/>
</kw>
<msg timestamp="20210619 01:25:03.694" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:25:00.059" endtime="20210619 01:25:03.694"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:25:03.695" endtime="20210619 01:25:03.695"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${volume3}/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:03.699" level="INFO">Running command 'ozone sh bucket setacl fstest354/bk1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:06.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:06.888" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:25:03.697" endtime="20210619 01:25:06.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:06.889" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:25:06.889" endtime="20210619 01:25:06.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:06.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:06.890" endtime="20210619 01:25:06.890"/>
</kw>
<status status="PASS" starttime="20210619 01:25:03.697" endtime="20210619 01:25:06.891"/>
</kw>
<msg timestamp="20210619 01:25:06.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:03.696" endtime="20210619 01:25:06.891"/>
</kw>
<msg timestamp="20210619 01:25:06.891" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:25:03.696" endtime="20210619 01:25:06.891"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:06.895" level="INFO">Running command 'ozone sh bucket getacl fstest354/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:10.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:10.497" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210619 01:25:06.893" endtime="20210619 01:25:10.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:10.498" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:25:10.497" endtime="20210619 01:25:10.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:10.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:10.498" endtime="20210619 01:25:10.500"/>
</kw>
<status status="PASS" starttime="20210619 01:25:06.893" endtime="20210619 01:25:10.500"/>
</kw>
<msg timestamp="20210619 01:25:10.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:06.892" endtime="20210619 01:25:10.501"/>
</kw>
<msg timestamp="20210619 01:25:10.501" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210619 01:25:06.892" endtime="20210619 01:25:10.501"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:25:10.501" endtime="20210619 01:25:10.502"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:25:10.502" endtime="20210619 01:25:10.503"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:24:42.076" endtime="20210619 01:25:10.503"/>
</test>
<test id="s1-s8-s3-t8" name="Test key Acls">
<kw name="Execute" library="os">
<arg>ozone sh key put ${volume3}/bk1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:10.508" level="INFO">Running command 'ozone sh key put fstest354/bk1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:16.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:16.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:25:10.506" endtime="20210619 01:25:16.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:16.262" level="INFO"/>
<status status="PASS" starttime="20210619 01:25:16.261" endtime="20210619 01:25:16.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:16.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:16.262" endtime="20210619 01:25:16.263"/>
</kw>
<status status="PASS" starttime="20210619 01:25:10.505" endtime="20210619 01:25:16.263"/>
</kw>
<msg timestamp="20210619 01:25:16.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:10.505" endtime="20210619 01:25:16.263"/>
</kw>
<status status="PASS" starttime="20210619 01:25:10.504" endtime="20210619 01:25:16.264"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:16.267" level="INFO">Running command 'ozone sh key getacl fstest354/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:19.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:19.941" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:25:16.265" endtime="20210619 01:25:19.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:19.942" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:25:19.941" endtime="20210619 01:25:19.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:19.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:19.942" endtime="20210619 01:25:19.943"/>
</kw>
<status status="PASS" starttime="20210619 01:25:16.265" endtime="20210619 01:25:19.943"/>
</kw>
<msg timestamp="20210619 01:25:19.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:16.264" endtime="20210619 01:25:19.943"/>
</kw>
<msg timestamp="20210619 01:25:19.944" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:25:16.264" endtime="20210619 01:25:19.944"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:25:19.944" endtime="20210619 01:25:19.944"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${volume3}/bk1/key1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:19.948" level="INFO">Running command 'ozone sh key addacl fstest354/bk1/key1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:23.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:23.528" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:25:19.946" endtime="20210619 01:25:23.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:23.529" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:25:23.528" endtime="20210619 01:25:23.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:23.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:23.529" endtime="20210619 01:25:23.530"/>
</kw>
<status status="PASS" starttime="20210619 01:25:19.946" endtime="20210619 01:25:23.530"/>
</kw>
<msg timestamp="20210619 01:25:23.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:19.945" endtime="20210619 01:25:23.530"/>
</kw>
<msg timestamp="20210619 01:25:23.531" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:25:19.945" endtime="20210619 01:25:23.531"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:23.535" level="INFO">Running command 'ozone sh key getacl fstest354/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:27.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:27.362" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:25:23.532" endtime="20210619 01:25:27.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:27.364" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:25:27.363" endtime="20210619 01:25:27.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:27.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:27.364" endtime="20210619 01:25:27.365"/>
</kw>
<status status="PASS" starttime="20210619 01:25:23.532" endtime="20210619 01:25:27.365"/>
</kw>
<msg timestamp="20210619 01:25:27.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:23.532" endtime="20210619 01:25:27.365"/>
</kw>
<msg timestamp="20210619 01:25:27.366" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:25:23.531" endtime="20210619 01:25:27.366"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:25:27.366" endtime="20210619 01:25:27.367"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${volume3}/bk1/key1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:27.370" level="INFO">Running command 'ozone sh key removeacl fstest354/bk1/key1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:30.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:30.887" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:25:27.368" endtime="20210619 01:25:30.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:30.889" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:25:30.888" endtime="20210619 01:25:30.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:30.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:30.889" endtime="20210619 01:25:30.890"/>
</kw>
<status status="PASS" starttime="20210619 01:25:27.368" endtime="20210619 01:25:30.890"/>
</kw>
<msg timestamp="20210619 01:25:30.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:27.368" endtime="20210619 01:25:30.890"/>
</kw>
<msg timestamp="20210619 01:25:30.890" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:25:27.367" endtime="20210619 01:25:30.890"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:30.894" level="INFO">Running command 'ozone sh key getacl fstest354/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:34.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:34.703" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:25:30.892" endtime="20210619 01:25:34.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:34.705" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:25:34.704" endtime="20210619 01:25:34.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:34.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:34.705" endtime="20210619 01:25:34.706"/>
</kw>
<status status="PASS" starttime="20210619 01:25:30.892" endtime="20210619 01:25:34.706"/>
</kw>
<msg timestamp="20210619 01:25:34.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:30.891" endtime="20210619 01:25:34.706"/>
</kw>
<msg timestamp="20210619 01:25:34.706" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210619 01:25:30.891" endtime="20210619 01:25:34.707"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:25:34.707" endtime="20210619 01:25:34.707"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${volume3}/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:34.711" level="INFO">Running command 'ozone sh key setacl fstest354/bk1/key1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:38.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:38.168" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:25:34.709" endtime="20210619 01:25:38.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:38.170" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:25:38.169" endtime="20210619 01:25:38.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:38.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:38.170" endtime="20210619 01:25:38.170"/>
</kw>
<status status="PASS" starttime="20210619 01:25:34.708" endtime="20210619 01:25:38.171"/>
</kw>
<msg timestamp="20210619 01:25:38.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:34.708" endtime="20210619 01:25:38.171"/>
</kw>
<msg timestamp="20210619 01:25:38.171" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210619 01:25:34.707" endtime="20210619 01:25:38.171"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${volume3}/bk1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:38.175" level="INFO">Running command 'ozone sh key getacl fstest354/bk1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:41.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:41.756" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210619 01:25:38.173" endtime="20210619 01:25:41.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:41.757" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:25:41.757" endtime="20210619 01:25:41.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:41.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:41.758" endtime="20210619 01:25:41.759"/>
</kw>
<status status="PASS" starttime="20210619 01:25:38.173" endtime="20210619 01:25:41.759"/>
</kw>
<msg timestamp="20210619 01:25:41.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:38.172" endtime="20210619 01:25:41.759"/>
</kw>
<msg timestamp="20210619 01:25:41.760" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210619 01:25:38.172" endtime="20210619 01:25:41.760"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:25:41.760" endtime="20210619 01:25:41.760"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210619 01:25:41.761" endtime="20210619 01:25:41.761"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:25:10.503" endtime="20210619 01:25:41.761"/>
</test>
<test id="s1-s8-s3-t9" name="Test native authorizer">
<kw name="Execute" library="os">
<arg>ozone sh volume removeacl ${volume3} -a group:root:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:41.766" level="INFO">Running command 'ozone sh volume removeacl fstest354 -a group:root:a 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:45.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:45.295" level="INFO">${output} = ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:25:41.764" endtime="20210619 01:25:45.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:45.296" level="INFO">ACL group:root:a[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210619 01:25:45.295" endtime="20210619 01:25:45.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:45.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:45.296" endtime="20210619 01:25:45.297"/>
</kw>
<status status="PASS" starttime="20210619 01:25:41.764" endtime="20210619 01:25:45.297"/>
</kw>
<msg timestamp="20210619 01:25:45.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:41.763" endtime="20210619 01:25:45.297"/>
</kw>
<status status="PASS" starttime="20210619 01:25:41.763" endtime="20210619 01:25:45.298"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:45.301" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:45.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:45.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:25:45.299" endtime="20210619 01:25:45.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:45.306" level="INFO"/>
<status status="PASS" starttime="20210619 01:25:45.305" endtime="20210619 01:25:45.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:45.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:45.306" endtime="20210619 01:25:45.307"/>
</kw>
<status status="PASS" starttime="20210619 01:25:45.299" endtime="20210619 01:25:45.307"/>
</kw>
<msg timestamp="20210619 01:25:45.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:45.298" endtime="20210619 01:25:45.307"/>
</kw>
<status status="PASS" starttime="20210619 01:25:45.298" endtime="20210619 01:25:45.308"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:45.312" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:45.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:45.315" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:25:45.310" endtime="20210619 01:25:45.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:45.316" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:25:45.316" endtime="20210619 01:25:45.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:45.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:45.316" endtime="20210619 01:25:45.317"/>
</kw>
<status status="PASS" starttime="20210619 01:25:45.310" endtime="20210619 01:25:45.317"/>
</kw>
<msg timestamp="20210619 01:25:45.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:45.309" endtime="20210619 01:25:45.318"/>
</kw>
<msg timestamp="20210619 01:25:45.318" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:25:45.309" endtime="20210619 01:25:45.318"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:25:45.319" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:25:45.318" endtime="20210619 01:25:45.319"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:45.323" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:45.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:45.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:25:45.321" endtime="20210619 01:25:45.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:45.351" level="INFO"/>
<status status="PASS" starttime="20210619 01:25:45.350" endtime="20210619 01:25:45.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:45.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:45.351" endtime="20210619 01:25:45.352"/>
</kw>
<status status="PASS" starttime="20210619 01:25:45.321" endtime="20210619 01:25:45.352"/>
</kw>
<msg timestamp="20210619 01:25:45.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:45.320" endtime="20210619 01:25:45.353"/>
</kw>
<status status="PASS" starttime="20210619 01:25:45.319" endtime="20210619 01:25:45.353"/>
</kw>
<status status="PASS" starttime="20210619 01:25:45.319" endtime="20210619 01:25:45.353"/>
</kw>
<status status="PASS" starttime="20210619 01:25:45.308" endtime="20210619 01:25:45.353"/>
</kw>
<status status="PASS" starttime="20210619 01:25:45.308" endtime="20210619 01:25:45.353"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:45.356" level="INFO">Running command 'ozone sh bucket list /fstest354/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:48.697" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:25:48.697" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume fstest354 null null</msg>
<status status="PASS" starttime="20210619 01:25:45.354" endtime="20210619 01:25:48.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:48.698" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume fstest354 null null</msg>
<status status="PASS" starttime="20210619 01:25:48.697" endtime="20210619 01:25:48.698"/>
</kw>
<msg timestamp="20210619 01:25:48.699" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume fstest354 null null</msg>
<status status="PASS" starttime="20210619 01:25:45.353" endtime="20210619 01:25:48.699"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:25:48.699" endtime="20210619 01:25:48.699"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:48.702" level="INFO">Running command 'ozone sh key list /fstest354/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:52.202" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:25:52.202" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume fstest354 null null</msg>
<status status="PASS" starttime="20210619 01:25:48.700" endtime="20210619 01:25:52.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:52.204" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume fstest354 null null</msg>
<status status="PASS" starttime="20210619 01:25:52.203" endtime="20210619 01:25:52.204"/>
</kw>
<msg timestamp="20210619 01:25:52.204" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access volume fstest354 null null</msg>
<status status="PASS" starttime="20210619 01:25:48.699" endtime="20210619 01:25:52.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:25:52.205" endtime="20210619 01:25:52.205"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xy</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:52.208" level="INFO">Running command 'ozone sh volume addacl fstest354 -a user:testuser2/scm@EXAMPLE.COM:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:55.783" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:25:55.783" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume fstest354 null null</msg>
<status status="PASS" starttime="20210619 01:25:52.206" endtime="20210619 01:25:55.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:55.784" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume fstest354 null null</msg>
<status status="PASS" starttime="20210619 01:25:55.783" endtime="20210619 01:25:55.785"/>
</kw>
<msg timestamp="20210619 01:25:55.785" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume fstest354 null null</msg>
<status status="PASS" starttime="20210619 01:25:52.205" endtime="20210619 01:25:55.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have WRITE_ACL permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:25:55.785" endtime="20210619 01:25:55.786"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:55.795" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:55.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:55.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:25:55.788" endtime="20210619 01:25:55.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:55.800" level="INFO"/>
<status status="PASS" starttime="20210619 01:25:55.799" endtime="20210619 01:25:55.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:55.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:55.800" endtime="20210619 01:25:55.801"/>
</kw>
<status status="PASS" starttime="20210619 01:25:55.787" endtime="20210619 01:25:55.802"/>
</kw>
<msg timestamp="20210619 01:25:55.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:55.787" endtime="20210619 01:25:55.802"/>
</kw>
<status status="PASS" starttime="20210619 01:25:55.786" endtime="20210619 01:25:55.802"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:55.811" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:55.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:55.814" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:25:55.805" endtime="20210619 01:25:55.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:55.815" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:25:55.815" endtime="20210619 01:25:55.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:55.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:55.816" endtime="20210619 01:25:55.816"/>
</kw>
<status status="PASS" starttime="20210619 01:25:55.804" endtime="20210619 01:25:55.816"/>
</kw>
<msg timestamp="20210619 01:25:55.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:55.804" endtime="20210619 01:25:55.817"/>
</kw>
<msg timestamp="20210619 01:25:55.817" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:25:55.803" endtime="20210619 01:25:55.817"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:25:55.818" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:25:55.817" endtime="20210619 01:25:55.818"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:55.822" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:55.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:55.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:25:55.820" endtime="20210619 01:25:55.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:55.830" level="INFO"/>
<status status="PASS" starttime="20210619 01:25:55.830" endtime="20210619 01:25:55.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:55.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:55.831" endtime="20210619 01:25:55.831"/>
</kw>
<status status="PASS" starttime="20210619 01:25:55.820" endtime="20210619 01:25:55.832"/>
</kw>
<msg timestamp="20210619 01:25:55.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:55.819" endtime="20210619 01:25:55.832"/>
</kw>
<status status="PASS" starttime="20210619 01:25:55.819" endtime="20210619 01:25:55.832"/>
</kw>
<status status="PASS" starttime="20210619 01:25:55.818" endtime="20210619 01:25:55.832"/>
</kw>
<status status="PASS" starttime="20210619 01:25:55.803" endtime="20210619 01:25:55.832"/>
</kw>
<status status="PASS" starttime="20210619 01:25:55.802" endtime="20210619 01:25:55.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:xyrw</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:55.836" level="INFO">Running command 'ozone sh volume addacl fstest354 -a user:testuser2/scm@EXAMPLE.COM:xyrw 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:59.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:59.043" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:25:55.834" endtime="20210619 01:25:59.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:59.044" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:25:59.043" endtime="20210619 01:25:59.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:59.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:59.045" endtime="20210619 01:25:59.045"/>
</kw>
<status status="PASS" starttime="20210619 01:25:55.833" endtime="20210619 01:25:59.046"/>
</kw>
<msg timestamp="20210619 01:25:59.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:55.833" endtime="20210619 01:25:59.046"/>
</kw>
<status status="PASS" starttime="20210619 01:25:55.833" endtime="20210619 01:25:59.046"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:59.050" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:59.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:59.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:25:59.048" endtime="20210619 01:25:59.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:59.054" level="INFO"/>
<status status="PASS" starttime="20210619 01:25:59.054" endtime="20210619 01:25:59.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:59.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:59.055" endtime="20210619 01:25:59.055"/>
</kw>
<status status="PASS" starttime="20210619 01:25:59.047" endtime="20210619 01:25:59.055"/>
</kw>
<msg timestamp="20210619 01:25:59.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:59.047" endtime="20210619 01:25:59.056"/>
</kw>
<status status="PASS" starttime="20210619 01:25:59.046" endtime="20210619 01:25:59.056"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:59.060" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:59.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:59.063" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:25:59.058" endtime="20210619 01:25:59.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:59.065" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:25:59.064" endtime="20210619 01:25:59.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:59.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:59.065" endtime="20210619 01:25:59.066"/>
</kw>
<status status="PASS" starttime="20210619 01:25:59.058" endtime="20210619 01:25:59.066"/>
</kw>
<msg timestamp="20210619 01:25:59.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:59.058" endtime="20210619 01:25:59.066"/>
</kw>
<msg timestamp="20210619 01:25:59.066" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:25:59.057" endtime="20210619 01:25:59.066"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:25:59.067" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:25:59.067" endtime="20210619 01:25:59.067"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:59.071" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:25:59.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:25:59.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:25:59.070" endtime="20210619 01:25:59.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:25:59.079" level="INFO"/>
<status status="PASS" starttime="20210619 01:25:59.078" endtime="20210619 01:25:59.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:25:59.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:25:59.079" endtime="20210619 01:25:59.080"/>
</kw>
<status status="PASS" starttime="20210619 01:25:59.069" endtime="20210619 01:25:59.080"/>
</kw>
<msg timestamp="20210619 01:25:59.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:25:59.069" endtime="20210619 01:25:59.080"/>
</kw>
<status status="PASS" starttime="20210619 01:25:59.068" endtime="20210619 01:25:59.081"/>
</kw>
<status status="PASS" starttime="20210619 01:25:59.068" endtime="20210619 01:25:59.081"/>
</kw>
<status status="PASS" starttime="20210619 01:25:59.056" endtime="20210619 01:25:59.081"/>
</kw>
<status status="PASS" starttime="20210619 01:25:59.056" endtime="20210619 01:25:59.081"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:25:59.084" level="INFO">Running command 'ozone sh bucket list /fstest354/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:02.661" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:26:02.661" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume fstest354 null null</msg>
<status status="PASS" starttime="20210619 01:25:59.082" endtime="20210619 01:26:02.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:02.662" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume fstest354 null null</msg>
<status status="PASS" starttime="20210619 01:26:02.662" endtime="20210619 01:26:02.662"/>
</kw>
<msg timestamp="20210619 01:26:02.663" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume fstest354 null null</msg>
<status status="PASS" starttime="20210619 01:25:59.082" endtime="20210619 01:26:02.663"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:26:02.663" endtime="20210619 01:26:02.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl ${volume3} -a user:testuser2/scm@EXAMPLE.COM:l</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:02.667" level="INFO">Running command 'ozone sh volume addacl fstest354 -a user:testuser2/scm@EXAMPLE.COM:l 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:06.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:06.102" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:26:02.665" endtime="20210619 01:26:06.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:06.103" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:l[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:26:06.102" endtime="20210619 01:26:06.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:06.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:06.103" endtime="20210619 01:26:06.104"/>
</kw>
<status status="PASS" starttime="20210619 01:26:02.665" endtime="20210619 01:26:06.104"/>
</kw>
<msg timestamp="20210619 01:26:06.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:02.664" endtime="20210619 01:26:06.105"/>
</kw>
<status status="PASS" starttime="20210619 01:26:02.664" endtime="20210619 01:26:06.105"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket list /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:06.109" level="INFO">Running command 'ozone sh bucket list /fstest354/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:09.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:09.879" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest354",
  "name" : "bk1",
  "storageType" : "DISK",
  "version...</msg>
<status status="PASS" starttime="20210619 01:26:06.107" endtime="20210619 01:26:09.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:09.880" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "fstest354",
  "name" : "bk1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 52578,
  "usedNamespace" : 1,
  "creationTime" : "2021-06-19T01:24:45.393Z",
  "modificationTime" : "2021-06-19T01:25:06.694Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210619 01:26:09.879" endtime="20210619 01:26:09.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:09.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:09.881" endtime="20210619 01:26:09.882"/>
</kw>
<status status="PASS" starttime="20210619 01:26:06.106" endtime="20210619 01:26:09.882"/>
</kw>
<msg timestamp="20210619 01:26:09.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:06.106" endtime="20210619 01:26:09.882"/>
</kw>
<status status="PASS" starttime="20210619 01:26:06.105" endtime="20210619 01:26:09.882"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume getacl /${volume3}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:09.886" level="INFO">Running command 'ozone sh volume getacl /fstest354/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:13.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:13.120" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20210619 01:26:09.884" endtime="20210619 01:26:13.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:13.121" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "LIST", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:26:13.120" endtime="20210619 01:26:13.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:13.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:13.122" endtime="20210619 01:26:13.122"/>
</kw>
<status status="PASS" starttime="20210619 01:26:09.884" endtime="20210619 01:26:13.123"/>
</kw>
<msg timestamp="20210619 01:26:13.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:09.883" endtime="20210619 01:26:13.123"/>
</kw>
<status status="PASS" starttime="20210619 01:26:09.883" endtime="20210619 01:26:13.123"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:13.126" level="INFO">Running command 'ozone sh key list /fstest354/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:16.607" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:26:16.608" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket fstest354 bk1 null</msg>
<status status="PASS" starttime="20210619 01:26:13.124" endtime="20210619 01:26:16.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:16.609" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket fstest354 bk1 null</msg>
<status status="PASS" starttime="20210619 01:26:16.608" endtime="20210619 01:26:16.609"/>
</kw>
<msg timestamp="20210619 01:26:16.610" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket fstest354 bk1 null</msg>
<status status="PASS" starttime="20210619 01:26:13.123" endtime="20210619 01:26:16.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:26:16.610" endtime="20210619 01:26:16.610"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:16.614" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:16.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:16.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:16.612" endtime="20210619 01:26:16.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:16.618" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:16.617" endtime="20210619 01:26:16.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:16.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:16.618" endtime="20210619 01:26:16.619"/>
</kw>
<status status="PASS" starttime="20210619 01:26:16.611" endtime="20210619 01:26:16.619"/>
</kw>
<msg timestamp="20210619 01:26:16.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:16.611" endtime="20210619 01:26:16.620"/>
</kw>
<status status="PASS" starttime="20210619 01:26:16.610" endtime="20210619 01:26:16.620"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:16.624" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:16.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:16.627" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:26:16.623" endtime="20210619 01:26:16.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:16.628" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:26:16.628" endtime="20210619 01:26:16.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:16.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:16.629" endtime="20210619 01:26:16.630"/>
</kw>
<status status="PASS" starttime="20210619 01:26:16.622" endtime="20210619 01:26:16.630"/>
</kw>
<msg timestamp="20210619 01:26:16.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:16.622" endtime="20210619 01:26:16.630"/>
</kw>
<msg timestamp="20210619 01:26:16.630" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:26:16.621" endtime="20210619 01:26:16.630"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:26:16.631" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:26:16.631" endtime="20210619 01:26:16.631"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:16.635" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:16.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:16.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:16.634" endtime="20210619 01:26:16.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:16.644" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:16.643" endtime="20210619 01:26:16.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:16.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:16.644" endtime="20210619 01:26:16.645"/>
</kw>
<status status="PASS" starttime="20210619 01:26:16.633" endtime="20210619 01:26:16.645"/>
</kw>
<msg timestamp="20210619 01:26:16.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:16.633" endtime="20210619 01:26:16.645"/>
</kw>
<status status="PASS" starttime="20210619 01:26:16.632" endtime="20210619 01:26:16.645"/>
</kw>
<status status="PASS" starttime="20210619 01:26:16.631" endtime="20210619 01:26:16.645"/>
</kw>
<status status="PASS" starttime="20210619 01:26:16.620" endtime="20210619 01:26:16.646"/>
</kw>
<status status="PASS" starttime="20210619 01:26:16.620" endtime="20210619 01:26:16.646"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl ${volume3}/bk1 -a user:testuser2/scm@EXAMPLE.COM:a</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:16.651" level="INFO">Running command 'ozone sh bucket addacl fstest354/bk1 -a user:testuser2/scm@EXAMPLE.COM:a 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:19.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:19.944" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:26:16.648" endtime="20210619 01:26:19.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:19.945" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:a[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210619 01:26:19.944" endtime="20210619 01:26:19.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:19.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:19.945" endtime="20210619 01:26:19.946"/>
</kw>
<status status="PASS" starttime="20210619 01:26:16.647" endtime="20210619 01:26:19.946"/>
</kw>
<msg timestamp="20210619 01:26:19.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:16.647" endtime="20210619 01:26:19.947"/>
</kw>
<status status="PASS" starttime="20210619 01:26:16.646" endtime="20210619 01:26:19.947"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:19.951" level="INFO">Running command 'ozone sh bucket getacl /fstest354/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:23.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:23.593" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210619 01:26:19.949" endtime="20210619 01:26:23.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:23.595" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:26:23.594" endtime="20210619 01:26:23.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:23.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:23.595" endtime="20210619 01:26:23.596"/>
</kw>
<status status="PASS" starttime="20210619 01:26:19.948" endtime="20210619 01:26:23.596"/>
</kw>
<msg timestamp="20210619 01:26:23.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:19.948" endtime="20210619 01:26:23.596"/>
</kw>
<status status="PASS" starttime="20210619 01:26:19.947" endtime="20210619 01:26:23.597"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:23.600" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:23.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:23.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:23.598" endtime="20210619 01:26:23.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:23.605" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:23.604" endtime="20210619 01:26:23.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:23.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:23.605" endtime="20210619 01:26:23.605"/>
</kw>
<status status="PASS" starttime="20210619 01:26:23.598" endtime="20210619 01:26:23.606"/>
</kw>
<msg timestamp="20210619 01:26:23.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:23.597" endtime="20210619 01:26:23.606"/>
</kw>
<status status="PASS" starttime="20210619 01:26:23.597" endtime="20210619 01:26:23.606"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:23.611" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:23.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:23.614" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:26:23.609" endtime="20210619 01:26:23.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:23.615" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:26:23.614" endtime="20210619 01:26:23.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:23.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:23.615" endtime="20210619 01:26:23.616"/>
</kw>
<status status="PASS" starttime="20210619 01:26:23.608" endtime="20210619 01:26:23.616"/>
</kw>
<msg timestamp="20210619 01:26:23.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:23.608" endtime="20210619 01:26:23.616"/>
</kw>
<msg timestamp="20210619 01:26:23.617" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:26:23.607" endtime="20210619 01:26:23.617"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:26:23.617" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:26:23.617" endtime="20210619 01:26:23.618"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:23.622" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:23.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:23.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:23.620" endtime="20210619 01:26:23.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:23.629" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:23.629" endtime="20210619 01:26:23.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:23.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:23.630" endtime="20210619 01:26:23.630"/>
</kw>
<status status="PASS" starttime="20210619 01:26:23.619" endtime="20210619 01:26:23.631"/>
</kw>
<msg timestamp="20210619 01:26:23.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:23.619" endtime="20210619 01:26:23.631"/>
</kw>
<status status="PASS" starttime="20210619 01:26:23.618" endtime="20210619 01:26:23.631"/>
</kw>
<status status="PASS" starttime="20210619 01:26:23.618" endtime="20210619 01:26:23.631"/>
</kw>
<status status="PASS" starttime="20210619 01:26:23.607" endtime="20210619 01:26:23.631"/>
</kw>
<status status="PASS" starttime="20210619 01:26:23.607" endtime="20210619 01:26:23.631"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket getacl /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:23.635" level="INFO">Running command 'ozone sh bucket getacl /fstest354/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:27.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:27.458" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210619 01:26:23.633" endtime="20210619 01:26:27.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:27.460" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser2/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210619 01:26:27.459" endtime="20210619 01:26:27.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:27.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:27.460" endtime="20210619 01:26:27.461"/>
</kw>
<status status="PASS" starttime="20210619 01:26:23.633" endtime="20210619 01:26:27.461"/>
</kw>
<msg timestamp="20210619 01:26:27.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:23.632" endtime="20210619 01:26:27.461"/>
</kw>
<status status="PASS" starttime="20210619 01:26:23.632" endtime="20210619 01:26:27.462"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key list /${volume3}/bk1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:27.465" level="INFO">Running command 'ozone sh key list /fstest354/bk1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:31.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:31.465" level="INFO">${output} = {
  "volumeName" : "fstest354",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-06-19T01:25:13.743Z",
  "modificationTime" : "2021-06-19T01:25:38.043Z",
  "re...</msg>
<status status="PASS" starttime="20210619 01:26:27.464" endtime="20210619 01:26:31.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:31.466" level="INFO">{
  "volumeName" : "fstest354",
  "bucketName" : "bk1",
  "name" : "key1",
  "dataSize" : 17526,
  "creationTime" : "2021-06-19T01:25:13.743Z",
  "modificationTime" : "2021-06-19T01:25:38.043Z",
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210619 01:26:31.466" endtime="20210619 01:26:31.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:31.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:31.467" endtime="20210619 01:26:31.467"/>
</kw>
<status status="PASS" starttime="20210619 01:26:27.463" endtime="20210619 01:26:31.468"/>
</kw>
<msg timestamp="20210619 01:26:31.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:27.463" endtime="20210619 01:26:31.468"/>
</kw>
<status status="PASS" starttime="20210619 01:26:27.462" endtime="20210619 01:26:31.468"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:31.472" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:31.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:31.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:31.470" endtime="20210619 01:26:31.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:31.476" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:31.476" endtime="20210619 01:26:31.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:31.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:31.476" endtime="20210619 01:26:31.477"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.469" endtime="20210619 01:26:31.477"/>
</kw>
<msg timestamp="20210619 01:26:31.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:31.469" endtime="20210619 01:26:31.478"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.468" endtime="20210619 01:26:31.478"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:31.482" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:31.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:31.486" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:26:31.480" endtime="20210619 01:26:31.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:31.487" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:26:31.486" endtime="20210619 01:26:31.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:31.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:31.487" endtime="20210619 01:26:31.488"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.480" endtime="20210619 01:26:31.488"/>
</kw>
<msg timestamp="20210619 01:26:31.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:31.479" endtime="20210619 01:26:31.488"/>
</kw>
<msg timestamp="20210619 01:26:31.489" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:26:31.479" endtime="20210619 01:26:31.489"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:26:31.490" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:26:31.489" endtime="20210619 01:26:31.490"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:31.493" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:31.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:31.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:31.492" endtime="20210619 01:26:31.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:31.501" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:31.501" endtime="20210619 01:26:31.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:31.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:31.502" endtime="20210619 01:26:31.502"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.491" endtime="20210619 01:26:31.503"/>
</kw>
<msg timestamp="20210619 01:26:31.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:31.491" endtime="20210619 01:26:31.503"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.490" endtime="20210619 01:26:31.503"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.490" endtime="20210619 01:26:31.503"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.478" endtime="20210619 01:26:31.504"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.478" endtime="20210619 01:26:31.504"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:25:41.762" endtime="20210619 01:26:31.504"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20210619 01:23:21.893" endtime="20210619 01:26:31.505"/>
</suite>
<suite id="s1-s8-s4" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s8-s4-t1" name="Secure S3 test Success">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup s3 tests</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:26:31.528" level="INFO">${random} = 02959</msg>
<status status="PASS" starttime="20210619 01:26:31.528" endtime="20210619 01:26:31.528"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:26:31.530" level="INFO">${PREFIX} = 02959</msg>
<status status="PASS" starttime="20210619 01:26:31.528" endtime="20210619 01:26:31.530"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.527" endtime="20210619 01:26:31.530"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.527" endtime="20210619 01:26:31.530"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:31.533" level="INFO">Running command 'which apt-get 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:31.535" level="INFO">${rc} = 1</msg>
<msg timestamp="20210619 01:26:31.535" level="INFO">${output} = which: no apt-get in (/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin)</msg>
<status status="PASS" starttime="20210619 01:26:31.531" endtime="20210619 01:26:31.535"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:26:31.536" endtime="20210619 01:26:31.536"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:31.538" level="INFO">Running command 'yum --help 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:31.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:31.793" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
ovl: Error while doing RPMdb copy-up:
[Errno 13] Permission denied: '/var/lib/rpm/__db.003'
Usage: yum [options] COMMAND

List of Commands:

check          Check for...</msg>
<status status="PASS" starttime="20210619 01:26:31.536" endtime="20210619 01:26:31.793"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Install aws cli s3 centos" library="commonawslib">
<kw name="Execute" library="os">
<arg>sudo -E yum install -y awscli</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:31.799" level="INFO">Running command 'sudo -E yum install -y awscli 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:37.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:37.542" level="INFO">${output} = Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.cogentco.com
 * epel: dl.fedoraproject.org
 * extras: mirrors.liquidweb.com
 * updates: mirror.cogentco.com
Package awscl...</msg>
<status status="PASS" starttime="20210619 01:26:31.797" endtime="20210619 01:26:37.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:37.543" level="INFO">Loaded plugins: fastestmirror, ovl
Determining fastest mirrors
 * base: mirror.cogentco.com
 * epel: dl.fedoraproject.org
 * extras: mirrors.liquidweb.com
 * updates: mirror.cogentco.com
Package awscli-1.14.28-5.el7_5.1.noarch already installed and latest version
Nothing to do</msg>
<status status="PASS" starttime="20210619 01:26:37.543" endtime="20210619 01:26:37.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:37.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:37.544" endtime="20210619 01:26:37.544"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.797" endtime="20210619 01:26:37.545"/>
</kw>
<msg timestamp="20210619 01:26:37.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:31.796" endtime="20210619 01:26:37.545"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.795" endtime="20210619 01:26:37.545"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.795" endtime="20210619 01:26:37.545"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.794" endtime="20210619 01:26:37.545"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.531" endtime="20210619 01:26:37.546"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.530" endtime="20210619 01:26:37.546"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:37.551" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:37.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:37.554" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:26:37.549" endtime="20210619 01:26:37.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:37.555" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:26:37.555" endtime="20210619 01:26:37.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:37.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:37.556" endtime="20210619 01:26:37.556"/>
</kw>
<status status="PASS" starttime="20210619 01:26:37.549" endtime="20210619 01:26:37.557"/>
</kw>
<msg timestamp="20210619 01:26:37.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:37.549" endtime="20210619 01:26:37.557"/>
</kw>
<msg timestamp="20210619 01:26:37.557" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:26:37.548" endtime="20210619 01:26:37.557"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:26:37.559" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:26:37.557" endtime="20210619 01:26:37.560"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:37.564" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:37.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:37.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:37.562" endtime="20210619 01:26:37.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:37.572" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:37.571" endtime="20210619 01:26:37.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:37.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:37.572" endtime="20210619 01:26:37.573"/>
</kw>
<status status="PASS" starttime="20210619 01:26:37.562" endtime="20210619 01:26:37.573"/>
</kw>
<msg timestamp="20210619 01:26:37.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:37.561" endtime="20210619 01:26:37.573"/>
</kw>
<status status="PASS" starttime="20210619 01:26:37.560" endtime="20210619 01:26:37.574"/>
</kw>
<status status="PASS" starttime="20210619 01:26:37.560" endtime="20210619 01:26:37.574"/>
</kw>
<status status="PASS" starttime="20210619 01:26:37.548" endtime="20210619 01:26:37.574"/>
</kw>
<status status="PASS" starttime="20210619 01:26:37.547" endtime="20210619 01:26:37.574"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:37.579" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:40.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:40.295" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cdf880f04e908f726cb61cd6e282b0d8fa97ee996ea39efbe76e9fb96d5cae35</msg>
<status status="PASS" starttime="20210619 01:26:37.577" endtime="20210619 01:26:40.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:40.296" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cdf880f04e908f726cb61cd6e282b0d8fa97ee996ea39efbe76e9fb96d5cae35</msg>
<status status="PASS" starttime="20210619 01:26:40.295" endtime="20210619 01:26:40.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:40.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:40.296" endtime="20210619 01:26:40.297"/>
</kw>
<status status="PASS" starttime="20210619 01:26:37.576" endtime="20210619 01:26:40.298"/>
</kw>
<msg timestamp="20210619 01:26:40.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:37.576" endtime="20210619 01:26:40.298"/>
</kw>
<msg timestamp="20210619 01:26:40.298" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=cdf880f04e908f726cb61cd6e282b0d8fa97ee996ea39efbe76e9fb96d5cae35</msg>
<status status="PASS" starttime="20210619 01:26:37.575" endtime="20210619 01:26:40.298"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:26:40.299" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:26:40.298" endtime="20210619 01:26:40.299"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>sdsdasaasdasd</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20210619 01:26:40.300" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20210619 01:26:40.299" endtime="20210619 01:26:40.300"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210619 01:26:40.301" level="INFO">${secret} = ['cdf880f04e908f726cb61cd6e282b0d8fa97ee996ea39efbe76e9fb96d5cae35']</msg>
<status status="PASS" starttime="20210619 01:26:40.300" endtime="20210619 01:26:40.301"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:26:40.302" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:26:40.301" endtime="20210619 01:26:40.302"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:26:40.304" level="INFO">${secret} = cdf880f04e908f726cb61cd6e282b0d8fa97ee996ea39efbe76e9fb96d5cae35</msg>
<status status="PASS" starttime="20210619 01:26:40.303" endtime="20210619 01:26:40.304"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:40.307" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:40.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:40.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:40.305" endtime="20210619 01:26:40.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:40.689" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:40.688" endtime="20210619 01:26:40.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:40.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:40.689" endtime="20210619 01:26:40.690"/>
</kw>
<status status="PASS" starttime="20210619 01:26:40.305" endtime="20210619 01:26:40.690"/>
</kw>
<msg timestamp="20210619 01:26:40.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:40.305" endtime="20210619 01:26:40.691"/>
</kw>
<status status="PASS" starttime="20210619 01:26:40.304" endtime="20210619 01:26:40.691"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:40.694" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:41.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:41.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:40.692" endtime="20210619 01:26:41.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:41.018" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:41.017" endtime="20210619 01:26:41.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:41.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:41.018" endtime="20210619 01:26:41.019"/>
</kw>
<status status="PASS" starttime="20210619 01:26:40.692" endtime="20210619 01:26:41.019"/>
</kw>
<msg timestamp="20210619 01:26:41.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:40.692" endtime="20210619 01:26:41.020"/>
</kw>
<status status="PASS" starttime="20210619 01:26:40.691" endtime="20210619 01:26:41.020"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:41.024" level="INFO">Running command 'aws configure set aws_secret_access_key cdf880f04e908f726cb61cd6e282b0d8fa97ee996ea39efbe76e9fb96d5cae35 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:41.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:41.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:41.022" endtime="20210619 01:26:41.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:41.353" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:41.352" endtime="20210619 01:26:41.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:41.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:41.353" endtime="20210619 01:26:41.354"/>
</kw>
<status status="PASS" starttime="20210619 01:26:41.022" endtime="20210619 01:26:41.354"/>
</kw>
<msg timestamp="20210619 01:26:41.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:41.021" endtime="20210619 01:26:41.354"/>
</kw>
<status status="PASS" starttime="20210619 01:26:41.021" endtime="20210619 01:26:41.354"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:41.358" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:41.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:41.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:41.356" endtime="20210619 01:26:41.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:41.684" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:41.683" endtime="20210619 01:26:41.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:41.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:41.684" endtime="20210619 01:26:41.685"/>
</kw>
<status status="PASS" starttime="20210619 01:26:41.355" endtime="20210619 01:26:41.685"/>
</kw>
<msg timestamp="20210619 01:26:41.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:41.355" endtime="20210619 01:26:41.685"/>
</kw>
<status status="PASS" starttime="20210619 01:26:41.355" endtime="20210619 01:26:41.686"/>
</kw>
<status status="PASS" starttime="20210619 01:26:37.575" endtime="20210619 01:26:41.686"/>
</kw>
<status status="PASS" starttime="20210619 01:26:37.574" endtime="20210619 01:26:41.686"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:26:41.686" endtime="20210619 01:26:41.687"/>
</kw>
<status status="PASS" starttime="20210619 01:26:37.546" endtime="20210619 01:26:41.687"/>
</kw>
<status status="PASS" starttime="20210619 01:26:37.546" endtime="20210619 01:26:41.687"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${BUCKET}</var>
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create bucket</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${BUCKET}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:26:41.689" level="INFO">${postfix} = 25225</msg>
<status status="PASS" starttime="20210619 01:26:41.688" endtime="20210619 01:26:41.689"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:26:41.689" level="INFO">${bucket} = bucket-25225</msg>
<status status="PASS" starttime="20210619 01:26:41.689" endtime="20210619 01:26:41.689"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:41.694" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-25225 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:43.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:43.511" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-25225"
}</msg>
<status status="PASS" starttime="20210619 01:26:41.692" endtime="20210619 01:26:43.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:43.512" level="INFO">{
    "Location": "http://s3g:9878/bucket-25225"
}</msg>
<status status="PASS" starttime="20210619 01:26:43.511" endtime="20210619 01:26:43.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:43.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:43.512" endtime="20210619 01:26:43.513"/>
</kw>
<status status="PASS" starttime="20210619 01:26:41.692" endtime="20210619 01:26:43.513"/>
</kw>
<msg timestamp="20210619 01:26:43.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:41.691" endtime="20210619 01:26:43.514"/>
</kw>
<msg timestamp="20210619 01:26:43.514" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-25225"
}</msg>
<status status="PASS" starttime="20210619 01:26:41.691" endtime="20210619 01:26:43.514"/>
</kw>
<msg timestamp="20210619 01:26:43.514" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-25225"
}</msg>
<status status="PASS" starttime="20210619 01:26:41.690" endtime="20210619 01:26:43.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:26:43.515" endtime="20210619 01:26:43.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${ENDPOINT_URL}/${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:26:43.515" endtime="20210619 01:26:43.516"/>
</kw>
<status status="PASS" starttime="20210619 01:26:41.690" endtime="20210619 01:26:43.516"/>
</kw>
<status status="PASS" starttime="20210619 01:26:41.688" endtime="20210619 01:26:43.516"/>
</kw>
<msg timestamp="20210619 01:26:43.516" level="INFO">${BUCKET} = bucket-25225</msg>
<status status="PASS" starttime="20210619 01:26:41.687" endtime="20210619 01:26:43.516"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:26:43.517" level="INFO">${BUCKET} = bucket-25225</msg>
<status status="PASS" starttime="20210619 01:26:43.517" endtime="20210619 01:26:43.517"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:26:43.517" endtime="20210619 01:26:43.518"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.526" endtime="20210619 01:26:43.518"/>
</kw>
<status status="PASS" starttime="20210619 01:26:31.526" endtime="20210619 01:26:43.518"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:43.522" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:44.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:44.024" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20210619 01:26:43.520" endtime="20210619 01:26:44.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:44.026" level="INFO">{
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20210619 01:26:44.025" endtime="20210619 01:26:44.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:44.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:44.026" endtime="20210619 01:26:44.027"/>
</kw>
<status status="PASS" starttime="20210619 01:26:43.519" endtime="20210619 01:26:44.027"/>
</kw>
<msg timestamp="20210619 01:26:44.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:43.519" endtime="20210619 01:26:44.027"/>
</kw>
<msg timestamp="20210619 01:26:44.028" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20210619 01:26:43.518" endtime="20210619 01:26:44.028"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:44.031" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:44.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:44.536" level="INFO">${output} = {
    "Buckets": [
        {
            "CreationDate": "2021-06-19T01:26:43.451Z", 
            "Name": "bucket-25225"
        }, 
        {
            "CreationDate": "2021-06-19T01:26:43.986Z", 
...</msg>
<status status="PASS" starttime="20210619 01:26:44.029" endtime="20210619 01:26:44.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:44.538" level="INFO">{
    "Buckets": [
        {
            "CreationDate": "2021-06-19T01:26:43.451Z", 
            "Name": "bucket-25225"
        }, 
        {
            "CreationDate": "2021-06-19T01:26:43.986Z", 
            "Name": "bucket-test123"
        }
    ]
}</msg>
<status status="PASS" starttime="20210619 01:26:44.537" endtime="20210619 01:26:44.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:44.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:44.538" endtime="20210619 01:26:44.539"/>
</kw>
<status status="PASS" starttime="20210619 01:26:44.029" endtime="20210619 01:26:44.539"/>
</kw>
<msg timestamp="20210619 01:26:44.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:44.028" endtime="20210619 01:26:44.539"/>
</kw>
<msg timestamp="20210619 01:26:44.540" level="INFO">${output} = {
    "Buckets": [
        {
            "CreationDate": "2021-06-19T01:26:43.451Z", 
            "Name": "bucket-25225"
        }, 
        {
            "CreationDate": "2021-06-19T01:26:43.986Z", 
...</msg>
<status status="PASS" starttime="20210619 01:26:44.028" endtime="20210619 01:26:44.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test123</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:26:44.540" endtime="20210619 01:26:44.540"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:26:31.525" endtime="20210619 01:26:44.541"/>
</test>
<test id="s1-s8-s4-t2" name="Secure S3 put-object test">
<kw name="Set Variable" library="BuiltIn">
<var>${testFilePath}</var>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210619 01:26:44.543" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20210619 01:26:44.542" endtime="20210619 01:26:44.543"/>
</kw>
<kw name="Copy File" library="OperatingSystem">
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20210619 01:26:44.545" level="INFO" html="true">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20210619 01:26:44.544" endtime="20210619 01:26:44.546"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:44.549" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:46.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:46.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:44.547" endtime="20210619 01:26:46.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:46.863" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:46.863" endtime="20210619 01:26:46.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:46.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:46.864" endtime="20210619 01:26:46.864"/>
</kw>
<status status="PASS" starttime="20210619 01:26:44.547" endtime="20210619 01:26:46.864"/>
</kw>
<msg timestamp="20210619 01:26:46.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:44.547" endtime="20210619 01:26:46.865"/>
</kw>
<msg timestamp="20210619 01:26:46.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:44.546" endtime="20210619 01:26:46.865"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:46.869" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:47.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:47.382" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-06-19T01:26:46.792Z", 
            "ETag": "2021-06-19T01:26:46.792Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20210619 01:26:46.867" endtime="20210619 01:26:47.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:47.383" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-06-19T01:26:46.792Z", 
            "ETag": "2021-06-19T01:26:46.792Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp1/tmp2/NOTICE.txt", 
            "Size": 17526
        }
    ]
}</msg>
<status status="PASS" starttime="20210619 01:26:47.382" endtime="20210619 01:26:47.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:47.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:47.383" endtime="20210619 01:26:47.384"/>
</kw>
<status status="PASS" starttime="20210619 01:26:46.867" endtime="20210619 01:26:47.384"/>
</kw>
<msg timestamp="20210619 01:26:47.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:46.866" endtime="20210619 01:26:47.385"/>
</kw>
<msg timestamp="20210619 01:26:47.385" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-06-19T01:26:46.792Z", 
            "ETag": "2021-06-19T01:26:46.792Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20210619 01:26:46.865" endtime="20210619 01:26:47.385"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:26:47.385" endtime="20210619 01:26:47.386"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:47.391" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:47.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:47.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:47.389" endtime="20210619 01:26:47.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:47.953" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:47.952" endtime="20210619 01:26:47.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:47.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:47.953" endtime="20210619 01:26:47.954"/>
</kw>
<status status="PASS" starttime="20210619 01:26:47.387" endtime="20210619 01:26:47.954"/>
</kw>
<msg timestamp="20210619 01:26:47.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:47.387" endtime="20210619 01:26:47.954"/>
</kw>
<msg timestamp="20210619 01:26:47.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:47.386" endtime="20210619 01:26:47.955"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:47.959" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:48.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:48.428" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-06-19T01:26:46.792Z", 
            "ETag": "2021-06-19T01:26:46.792Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20210619 01:26:47.957" endtime="20210619 01:26:48.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:48.429" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-06-19T01:26:46.792Z", 
            "ETag": "2021-06-19T01:26:46.792Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp1/tmp2/NOTICE.txt", 
            "Size": 17526
        }, 
        {
            "LastModified": "2021-06-19T01:26:47.904Z", 
            "ETag": "2021-06-19T01:26:47.904Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp3//tmp4/NOTICE.txt", 
            "Size": 17526
        }
    ]
}</msg>
<status status="PASS" starttime="20210619 01:26:48.428" endtime="20210619 01:26:48.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:48.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:48.429" endtime="20210619 01:26:48.430"/>
</kw>
<status status="PASS" starttime="20210619 01:26:47.956" endtime="20210619 01:26:48.430"/>
</kw>
<msg timestamp="20210619 01:26:48.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:47.956" endtime="20210619 01:26:48.430"/>
</kw>
<msg timestamp="20210619 01:26:48.431" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-06-19T01:26:46.792Z", 
            "ETag": "2021-06-19T01:26:46.792Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp...</msg>
<status status="PASS" starttime="20210619 01:26:47.955" endtime="20210619 01:26:48.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:26:48.431" endtime="20210619 01:26:48.431"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:48.436" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:48.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:48.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:48.434" endtime="20210619 01:26:48.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:48.993" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:48.992" endtime="20210619 01:26:48.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:48.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:48.993" endtime="20210619 01:26:48.994"/>
</kw>
<status status="PASS" starttime="20210619 01:26:48.433" endtime="20210619 01:26:48.994"/>
</kw>
<msg timestamp="20210619 01:26:48.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:48.432" endtime="20210619 01:26:48.994"/>
</kw>
<msg timestamp="20210619 01:26:48.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:48.432" endtime="20210619 01:26:48.994"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:48.998" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:49.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:49.483" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-06-19T01:26:48.939Z", 
            "ETag": "2021-06-19T01:26:48.939Z", 
            "StorageClass": "STANDARD", 
            "Key": "//t...</msg>
<status status="PASS" starttime="20210619 01:26:48.996" endtime="20210619 01:26:49.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:49.485" level="INFO">{
    "Contents": [
        {
            "LastModified": "2021-06-19T01:26:48.939Z", 
            "ETag": "2021-06-19T01:26:48.939Z", 
            "StorageClass": "STANDARD", 
            "Key": "//tmp5/tmp6/NOTICE.txt", 
            "Size": 17526
        }, 
        {
            "LastModified": "2021-06-19T01:26:46.792Z", 
            "ETag": "2021-06-19T01:26:46.792Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp1/tmp2/NOTICE.txt", 
            "Size": 17526
        }, 
        {
            "LastModified": "2021-06-19T01:26:47.904Z", 
            "ETag": "2021-06-19T01:26:47.904Z", 
            "StorageClass": "STANDARD", 
            "Key": "tmp3//tmp4/NOTICE.txt", 
            "Size": 17526
        }
    ]
}</msg>
<status status="PASS" starttime="20210619 01:26:49.484" endtime="20210619 01:26:49.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:49.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:49.485" endtime="20210619 01:26:49.486"/>
</kw>
<status status="PASS" starttime="20210619 01:26:48.996" endtime="20210619 01:26:49.486"/>
</kw>
<msg timestamp="20210619 01:26:49.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:48.996" endtime="20210619 01:26:49.487"/>
</kw>
<msg timestamp="20210619 01:26:49.487" level="INFO">${output} = {
    "Contents": [
        {
            "LastModified": "2021-06-19T01:26:48.939Z", 
            "ETag": "2021-06-19T01:26:48.939Z", 
            "StorageClass": "STANDARD", 
            "Key": "//t...</msg>
<status status="PASS" starttime="20210619 01:26:48.995" endtime="20210619 01:26:49.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:26:49.487" endtime="20210619 01:26:49.488"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:26:44.542" endtime="20210619 01:26:49.488"/>
</test>
<test id="s1-s8-s4-t3" name="Secure S3 test Failure">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:49.494" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:49.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:49.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:49.492" endtime="20210619 01:26:49.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:49.830" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:49.829" endtime="20210619 01:26:49.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:49.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:49.831" endtime="20210619 01:26:49.831"/>
</kw>
<status status="PASS" starttime="20210619 01:26:49.491" endtime="20210619 01:26:49.832"/>
</kw>
<msg timestamp="20210619 01:26:49.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:49.491" endtime="20210619 01:26:49.832"/>
</kw>
<status status="PASS" starttime="20210619 01:26:49.490" endtime="20210619 01:26:49.832"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:49.836" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:50.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:50.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:49.834" endtime="20210619 01:26:50.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:50.166" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:50.165" endtime="20210619 01:26:50.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:50.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:50.166" endtime="20210619 01:26:50.167"/>
</kw>
<status status="PASS" starttime="20210619 01:26:49.833" endtime="20210619 01:26:50.167"/>
</kw>
<msg timestamp="20210619 01:26:50.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:49.833" endtime="20210619 01:26:50.167"/>
</kw>
<status status="PASS" starttime="20210619 01:26:49.832" endtime="20210619 01:26:50.167"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:50.171" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:50.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:50.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:50.169" endtime="20210619 01:26:50.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:50.495" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:50.494" endtime="20210619 01:26:50.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:50.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:50.495" endtime="20210619 01:26:50.495"/>
</kw>
<status status="PASS" starttime="20210619 01:26:50.168" endtime="20210619 01:26:50.496"/>
</kw>
<msg timestamp="20210619 01:26:50.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:50.168" endtime="20210619 01:26:50.496"/>
</kw>
<status status="PASS" starttime="20210619 01:26:50.168" endtime="20210619 01:26:50.496"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:50.500" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:50.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:26:50.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:26:50.498" endtime="20210619 01:26:50.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:26:50.827" level="INFO"/>
<status status="PASS" starttime="20210619 01:26:50.826" endtime="20210619 01:26:50.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:26:50.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:26:50.827" endtime="20210619 01:26:50.828"/>
</kw>
<status status="PASS" starttime="20210619 01:26:50.497" endtime="20210619 01:26:50.828"/>
</kw>
<msg timestamp="20210619 01:26:50.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:50.497" endtime="20210619 01:26:50.829"/>
</kw>
<status status="PASS" starttime="20210619 01:26:50.496" endtime="20210619 01:26:50.829"/>
</kw>
<status status="PASS" starttime="20210619 01:26:49.490" endtime="20210619 01:26:50.829"/>
</kw>
<status status="PASS" starttime="20210619 01:26:49.489" endtime="20210619 01:26:50.829"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${result}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:50.831" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:26:58.125" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:26:58.125" level="INFO">${result} = 
An error occurred (500) when calling the CreateBucket operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20210619 01:26:50.829" endtime="20210619 01:26:58.125"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210619 01:26:58.126" endtime="20210619 01:26:58.127"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:26:49.488" endtime="20210619 01:26:58.127"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20210619 01:26:31.509" endtime="20210619 01:26:58.128"/>
</suite>
<suite id="s1-s8-s5" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s8-s5-t1" name="Token Test">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:26:58.140" endtime="20210619 01:26:58.141"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Secure Cluster">
<kw name="Get and use Token in Secure Cluster">
<kw name="Execute" library="os">
<arg>ozone sh token get -t /tmp/ozone.token</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:26:58.146" level="INFO">Running command 'ozone sh token get -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:01.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:01.657" level="INFO">${output} = Successfully get token for service 172.18.0.5:9862
Kind: OzoneToken, Service: 172.18.0.5:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=root, realUser=, issueDate=2021-06-19T01:27:01...</msg>
<status status="PASS" starttime="20210619 01:26:58.144" endtime="20210619 01:27:01.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:01.659" level="INFO">Successfully get token for service 172.18.0.5:9862
Kind: OzoneToken, Service: 172.18.0.5:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=root, realUser=, issueDate=2021-06-19T01:27:01.469Z, maxDate=2021-06-26T01:27:01.469Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault)
Token persisted to /tmp/ozone.token successfully!</msg>
<status status="PASS" starttime="20210619 01:27:01.658" endtime="20210619 01:27:01.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:01.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:01.659" endtime="20210619 01:27:01.660"/>
</kw>
<status status="PASS" starttime="20210619 01:26:58.143" endtime="20210619 01:27:01.660"/>
</kw>
<msg timestamp="20210619 01:27:01.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:26:58.143" endtime="20210619 01:27:01.660"/>
</kw>
<status status="PASS" starttime="20210619 01:26:58.142" endtime="20210619 01:27:01.661"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>/tmp/ozone.token</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210619 01:27:01.661" level="INFO" html="true">File '&lt;a href="file:///tmp/ozone.token"&gt;/tmp/ozone.token&lt;/a&gt;' contains 398 bytes.</msg>
<status status="PASS" starttime="20210619 01:27:01.661" endtime="20210619 01:27:01.661"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:01.665" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:01.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:01.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:27:01.663" endtime="20210619 01:27:01.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:01.670" level="INFO"/>
<status status="PASS" starttime="20210619 01:27:01.670" endtime="20210619 01:27:01.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:01.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:01.671" endtime="20210619 01:27:01.671"/>
</kw>
<status status="PASS" starttime="20210619 01:27:01.662" endtime="20210619 01:27:01.672"/>
</kw>
<msg timestamp="20210619 01:27:01.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:01.662" endtime="20210619 01:27:01.672"/>
</kw>
<status status="PASS" starttime="20210619 01:27:01.661" endtime="20210619 01:27:01.672"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<arg>/tmp/ozone.token</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20210619 01:27:01.673" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' set to value '/tmp/ozone.token'.</msg>
<status status="PASS" starttime="20210619 01:27:01.672" endtime="20210619 01:27:01.673"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:01.676" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:04.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:04.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:27:01.675" endtime="20210619 01:27:04.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:04.950" level="INFO"/>
<status status="PASS" starttime="20210619 01:27:04.949" endtime="20210619 01:27:04.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:04.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:04.950" endtime="20210619 01:27:04.951"/>
</kw>
<status status="PASS" starttime="20210619 01:27:01.674" endtime="20210619 01:27:04.951"/>
</kw>
<msg timestamp="20210619 01:27:04.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:01.674" endtime="20210619 01:27:04.951"/>
</kw>
<msg timestamp="20210619 01:27:04.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:27:01.673" endtime="20210619 01:27:04.952"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:27:04.952" endtime="20210619 01:27:04.952"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20210619 01:27:04.953" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' deleted.</msg>
<status status="PASS" starttime="20210619 01:27:04.952" endtime="20210619 01:27:04.953"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:04.955" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:07.681" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:27:07.681" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20210619 01:27:04.953" endtime="20210619 01:27:07.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:07.683" level="INFO">org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20210619 01:27:07.682" endtime="20210619 01:27:07.683"/>
</kw>
<msg timestamp="20210619 01:27:07.683" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20210619 01:27:04.953" endtime="20210619 01:27:07.683"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:27:07.683" endtime="20210619 01:27:07.684"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:07.689" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:07.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:07.692" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210619 01:27:07.687" endtime="20210619 01:27:07.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:07.693" level="INFO">scm</msg>
<status status="PASS" starttime="20210619 01:27:07.693" endtime="20210619 01:27:07.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:07.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:07.694" endtime="20210619 01:27:07.694"/>
</kw>
<status status="PASS" starttime="20210619 01:27:07.686" endtime="20210619 01:27:07.695"/>
</kw>
<msg timestamp="20210619 01:27:07.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:07.686" endtime="20210619 01:27:07.695"/>
</kw>
<msg timestamp="20210619 01:27:07.695" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210619 01:27:07.685" endtime="20210619 01:27:07.695"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:27:07.697" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:27:07.695" endtime="20210619 01:27:07.697"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:07.702" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:07.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:07.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:27:07.700" endtime="20210619 01:27:07.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:07.710" level="INFO"/>
<status status="PASS" starttime="20210619 01:27:07.710" endtime="20210619 01:27:07.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:07.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:07.710" endtime="20210619 01:27:07.712"/>
</kw>
<status status="PASS" starttime="20210619 01:27:07.699" endtime="20210619 01:27:07.712"/>
</kw>
<msg timestamp="20210619 01:27:07.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:07.699" endtime="20210619 01:27:07.712"/>
</kw>
<status status="PASS" starttime="20210619 01:27:07.698" endtime="20210619 01:27:07.713"/>
</kw>
<status status="PASS" starttime="20210619 01:27:07.698" endtime="20210619 01:27:07.713"/>
</kw>
<status status="PASS" starttime="20210619 01:27:07.685" endtime="20210619 01:27:07.713"/>
</kw>
<status status="PASS" starttime="20210619 01:27:07.684" endtime="20210619 01:27:07.713"/>
</kw>
<status status="PASS" starttime="20210619 01:26:58.142" endtime="20210619 01:27:07.713"/>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:07.718" level="INFO">Running command 'ozone sh token print 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:09.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:09.570" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.5:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=root, realUser=, issueDate=2021-06-19T01:27:01.469Z, maxDate=2021-06-26T01:27:01.469Z, sequenceNu...</msg>
<status status="PASS" starttime="20210619 01:27:07.716" endtime="20210619 01:27:09.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:09.572" level="INFO">Kind: OzoneToken, Service: 172.18.0.5:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=root, realUser=, issueDate=2021-06-19T01:27:01.469Z, maxDate=2021-06-26T01:27:01.469Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault)</msg>
<status status="PASS" starttime="20210619 01:27:09.571" endtime="20210619 01:27:09.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:09.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:09.572" endtime="20210619 01:27:09.573"/>
</kw>
<status status="PASS" starttime="20210619 01:27:07.715" endtime="20210619 01:27:09.573"/>
</kw>
<msg timestamp="20210619 01:27:09.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:07.714" endtime="20210619 01:27:09.573"/>
</kw>
<msg timestamp="20210619 01:27:09.573" level="INFO">${output} = Kind: OzoneToken, Service: 172.18.0.5:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=root, realUser=, issueDate=2021-06-19T01:27:01.469Z, maxDate=2021-06-26T01:27:01.469Z, sequenceNu...</msg>
<status status="PASS" starttime="20210619 01:27:07.714" endtime="20210619 01:27:09.574"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210619 01:27:09.574" level="INFO">Length is 307</msg>
<status status="PASS" starttime="20210619 01:27:09.574" endtime="20210619 01:27:09.574"/>
</kw>
<status status="PASS" starttime="20210619 01:27:07.713" endtime="20210619 01:27:09.574"/>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:09.578" level="INFO">Running command 'ozone sh token renew 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:12.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:12.953" level="INFO">${output} = Token renewed successfully, expiry time: 2021-06-20T01:27:12.884Z.</msg>
<status status="PASS" starttime="20210619 01:27:09.576" endtime="20210619 01:27:12.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:12.955" level="INFO">Token renewed successfully, expiry time: 2021-06-20T01:27:12.884Z.</msg>
<status status="PASS" starttime="20210619 01:27:12.954" endtime="20210619 01:27:12.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:12.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:12.955" endtime="20210619 01:27:12.956"/>
</kw>
<status status="PASS" starttime="20210619 01:27:09.576" endtime="20210619 01:27:12.956"/>
</kw>
<msg timestamp="20210619 01:27:12.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:09.575" endtime="20210619 01:27:12.956"/>
</kw>
<msg timestamp="20210619 01:27:12.956" level="INFO">${output} = Token renewed successfully, expiry time: 2021-06-20T01:27:12.884Z.</msg>
<status status="PASS" starttime="20210619 01:27:09.575" endtime="20210619 01:27:12.956"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:27:12.957" endtime="20210619 01:27:12.957"/>
</kw>
<status status="PASS" starttime="20210619 01:27:09.575" endtime="20210619 01:27:12.957"/>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:12.962" level="INFO">Running command 'ozone sh token cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:16.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:16.402" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20210619 01:27:12.960" endtime="20210619 01:27:16.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:16.403" level="INFO">Token canceled successfully.</msg>
<status status="PASS" starttime="20210619 01:27:16.402" endtime="20210619 01:27:16.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:16.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:16.404" endtime="20210619 01:27:16.404"/>
</kw>
<status status="PASS" starttime="20210619 01:27:12.959" endtime="20210619 01:27:16.405"/>
</kw>
<msg timestamp="20210619 01:27:16.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:12.958" endtime="20210619 01:27:16.405"/>
</kw>
<msg timestamp="20210619 01:27:16.405" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20210619 01:27:12.958" endtime="20210619 01:27:16.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:27:16.405" endtime="20210619 01:27:16.406"/>
</kw>
<status status="PASS" starttime="20210619 01:27:12.958" endtime="20210619 01:27:16.406"/>
</kw>
<status status="PASS" starttime="20210619 01:26:58.141" endtime="20210619 01:27:16.406"/>
</kw>
<status status="PASS" starttime="20210619 01:26:58.141" endtime="20210619 01:27:16.406"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:27:16.410" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:27:18.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:27:18.385" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20210619 01:27:16.408" endtime="20210619 01:27:18.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:27:18.386" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20210619 01:27:18.386" endtime="20210619 01:27:18.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:27:18.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:27:18.387" endtime="20210619 01:27:18.387"/>
</kw>
<status status="PASS" starttime="20210619 01:27:16.408" endtime="20210619 01:27:18.388"/>
</kw>
<msg timestamp="20210619 01:27:18.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:27:16.407" endtime="20210619 01:27:18.388"/>
</kw>
<msg timestamp="20210619 01:27:18.388" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20210619 01:27:16.407" endtime="20210619 01:27:18.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:27:18.388" endtime="20210619 01:27:18.389"/>
</kw>
<status status="PASS" starttime="20210619 01:27:16.406" endtime="20210619 01:27:18.389"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:26:58.139" endtime="20210619 01:27:18.389"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20210619 01:26:58.131" endtime="20210619 01:27:18.390"/>
</suite>
<status status="PASS" starttime="20210619 01:22:45.949" endtime="20210619 01:27:18.396"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2715142"/>
</suite>
<statistics>
<total>
<stat pass="149" fail="26" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="149" fail="26" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="29" fail="0" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
<stat pass="21" fail="0" skip="0" id="s1-s3" name="ozonefs-ofs-bucket">ozonesecure.ozonefs-ofs-bucket</stat>
<stat pass="21" fail="0" skip="0" id="s1-s4" name="ozonefs-o3fs-link">ozonesecure.ozonefs-o3fs-link</stat>
<stat pass="21" fail="0" skip="0" id="s1-s5" name="ozonefs-o3fs-bucket">ozonesecure.ozonefs-o3fs-bucket</stat>
<stat pass="21" fail="0" skip="0" id="s1-s6" name="ozonefs-ofs-link">ozonesecure.ozonefs-ofs-link</stat>
<stat pass="17" fail="26" skip="0" id="s1-s7" name="s3-link">ozonesecure.s3-link</stat>
<stat pass="0" fail="1" skip="0" id="s1-s7-s1" name="Awss3">ozonesecure.s3-link.Awss3</stat>
<stat pass="0" fail="1" skip="0" id="s1-s7-s2" name="Boto3">ozonesecure.s3-link.Boto3</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7-s3" name="Bucketcreate">ozonesecure.s3-link.Bucketcreate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7-s4" name="Bucketdelete">ozonesecure.s3-link.Bucketdelete</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7-s5" name="Buckethead">ozonesecure.s3-link.Buckethead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7-s6" name="Bucketlist">ozonesecure.s3-link.Bucketlist</stat>
<stat pass="4" fail="9" skip="0" id="s1-s7-s7" name="MultipartUpload">ozonesecure.s3-link.MultipartUpload</stat>
<stat pass="3" fail="1" skip="0" id="s1-s7-s8" name="Objectcopy">ozonesecure.s3-link.Objectcopy</stat>
<stat pass="2" fail="3" skip="0" id="s1-s7-s9" name="Objectdelete">ozonesecure.s3-link.Objectdelete</stat>
<stat pass="0" fail="1" skip="0" id="s1-s7-s10" name="Objectmultidelete">ozonesecure.s3-link.Objectmultidelete</stat>
<stat pass="0" fail="10" skip="0" id="s1-s7-s11" name="Objectputget">ozonesecure.s3-link.Objectputget</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7-s12" name="Webui">ozonesecure.s3-link.Webui</stat>
<stat pass="18" fail="0" skip="0" id="s1-s8" name="Security">ozonesecure.Security</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8-s1" name="Admin-Cert">ozonesecure.Security.Admin-Cert</stat>
<stat pass="2" fail="0" skip="0" id="s1-s8-s2" name="Bucket-Encryption">ozonesecure.Security.Bucket-Encryption</stat>
<stat pass="9" fail="0" skip="0" id="s1-s8-s3" name="Ozone-Secure-Fs">ozonesecure.Security.Ozone-Secure-Fs</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8-s4" name="Ozone-Secure-S3">ozonesecure.Security.Ozone-Secure-S3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8-s5" name="Ozone-Secure-Token">ozonesecure.Security.Ozone-Secure-Token</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
