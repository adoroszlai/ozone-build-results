<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210619 01:59:22.897" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:55:08.843" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:55:13.301" level="INFO">${rc} = 255</msg>
<msg timestamp="20210619 01:55:13.301" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210619 01:55:08.840" endtime="20210619 01:55:13.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:55:13.302" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210619 01:55:13.301" endtime="20210619 01:55:13.302"/>
</kw>
<msg timestamp="20210619 01:55:13.303" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210619 01:55:08.839" endtime="20210619 01:55:13.303"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:55:13.308" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:55:17.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:55:17.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:55:13.306" endtime="20210619 01:55:17.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:55:17.173" level="INFO"/>
<status status="PASS" starttime="20210619 01:55:17.172" endtime="20210619 01:55:17.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:55:17.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:55:17.174" endtime="20210619 01:55:17.174"/>
</kw>
<status status="PASS" starttime="20210619 01:55:13.305" endtime="20210619 01:55:17.175"/>
</kw>
<msg timestamp="20210619 01:55:17.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:55:13.305" endtime="20210619 01:55:17.175"/>
</kw>
<msg timestamp="20210619 01:55:17.175" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210619 01:55:13.304" endtime="20210619 01:55:17.175"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:55:17.176" endtime="20210619 01:55:17.176"/>
</kw>
<status status="PASS" starttime="20210619 01:55:13.304" endtime="20210619 01:55:17.176"/>
</kw>
<status status="PASS" starttime="20210619 01:55:13.303" endtime="20210619 01:55:17.176"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:55:17.181" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:55:20.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:55:20.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:55:17.179" endtime="20210619 01:55:20.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:55:20.788" level="INFO"/>
<status status="PASS" starttime="20210619 01:55:20.788" endtime="20210619 01:55:20.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:55:20.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:55:20.789" endtime="20210619 01:55:20.789"/>
</kw>
<status status="PASS" starttime="20210619 01:55:17.178" endtime="20210619 01:55:20.790"/>
</kw>
<msg timestamp="20210619 01:55:20.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:55:17.178" endtime="20210619 01:55:20.790"/>
</kw>
<status status="PASS" starttime="20210619 01:55:17.178" endtime="20210619 01:55:20.790"/>
</kw>
<status status="PASS" starttime="20210619 01:55:17.177" endtime="20210619 01:55:20.790"/>
</kw>
<status status="PASS" starttime="20210619 01:55:17.177" endtime="20210619 01:55:20.790"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210619 01:55:20.790" endtime="20210619 01:55:20.791"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:55:20.794" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:55:24.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:55:24.660" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210619 01:55:20.793" endtime="20210619 01:55:24.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:55:24.662" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-19T01:55:20.574Z",
  "modificationTime" : "2021-06-19T01:55:20.574Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210619 01:55:24.661" endtime="20210619 01:55:24.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:55:24.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:55:24.662" endtime="20210619 01:55:24.663"/>
</kw>
<status status="PASS" starttime="20210619 01:55:20.792" endtime="20210619 01:55:24.663"/>
</kw>
<msg timestamp="20210619 01:55:24.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:55:20.792" endtime="20210619 01:55:24.663"/>
</kw>
<msg timestamp="20210619 01:55:24.663" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210619 01:55:20.791" endtime="20210619 01:55:24.664"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:55:24.664" endtime="20210619 01:55:24.664"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:55:24.669" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:55:24.669" endtime="20210619 01:55:24.669"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:55:24.670" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:55:24.670" endtime="20210619 01:55:24.670"/>
</kw>
<status status="PASS" starttime="20210619 01:55:24.668" endtime="20210619 01:55:24.671"/>
</kw>
<msg timestamp="20210619 01:55:24.671" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:55:24.667" endtime="20210619 01:55:24.671"/>
</kw>
<status status="PASS" starttime="20210619 01:55:24.666" endtime="20210619 01:55:24.671"/>
</kw>
<msg timestamp="20210619 01:55:24.671" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210619 01:55:24.665" endtime="20210619 01:55:24.671"/>
</kw>
<msg timestamp="20210619 01:55:24.672" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210619 01:55:24.664" endtime="20210619 01:55:24.672"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:55:24.675" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:55:28.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:55:28.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:55:24.673" endtime="20210619 01:55:28.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:55:28.544" level="INFO"/>
<status status="PASS" starttime="20210619 01:55:28.543" endtime="20210619 01:55:28.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:55:28.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:55:28.544" endtime="20210619 01:55:28.545"/>
</kw>
<status status="PASS" starttime="20210619 01:55:24.673" endtime="20210619 01:55:28.545"/>
</kw>
<msg timestamp="20210619 01:55:28.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:55:24.672" endtime="20210619 01:55:28.546"/>
</kw>
<status status="PASS" starttime="20210619 01:55:24.672" endtime="20210619 01:55:28.546"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:55:28.549" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:55:39.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:55:39.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:55:28.548" endtime="20210619 01:55:39.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:55:39.160" level="INFO"/>
<status status="PASS" starttime="20210619 01:55:39.159" endtime="20210619 01:55:39.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:55:39.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:55:39.161" endtime="20210619 01:55:39.161"/>
</kw>
<status status="PASS" starttime="20210619 01:55:28.547" endtime="20210619 01:55:39.162"/>
</kw>
<msg timestamp="20210619 01:55:39.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:55:28.547" endtime="20210619 01:55:39.162"/>
</kw>
<status status="PASS" starttime="20210619 01:55:28.546" endtime="20210619 01:55:39.162"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:55:39.166" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:55:45.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:55:45.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:55:39.164" endtime="20210619 01:55:45.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:55:45.181" level="INFO"/>
<status status="PASS" starttime="20210619 01:55:45.180" endtime="20210619 01:55:45.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:55:45.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:55:45.181" endtime="20210619 01:55:45.182"/>
</kw>
<status status="PASS" starttime="20210619 01:55:39.163" endtime="20210619 01:55:45.182"/>
</kw>
<msg timestamp="20210619 01:55:45.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:55:39.163" endtime="20210619 01:55:45.183"/>
</kw>
<status status="PASS" starttime="20210619 01:55:39.162" endtime="20210619 01:55:45.183"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:55:45.186" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:55:51.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:55:51.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:55:45.185" endtime="20210619 01:55:51.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:55:51.194" level="INFO"/>
<status status="PASS" starttime="20210619 01:55:51.193" endtime="20210619 01:55:51.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:55:51.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:55:51.194" endtime="20210619 01:55:51.195"/>
</kw>
<status status="PASS" starttime="20210619 01:55:45.184" endtime="20210619 01:55:51.195"/>
</kw>
<msg timestamp="20210619 01:55:51.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:55:45.184" endtime="20210619 01:55:51.196"/>
</kw>
<status status="PASS" starttime="20210619 01:55:45.183" endtime="20210619 01:55:51.196"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:55:08.838" endtime="20210619 01:55:51.196"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:55:51.203" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:55:51.202" endtime="20210619 01:55:51.203"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:55:51.204" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:55:51.203" endtime="20210619 01:55:51.204"/>
</kw>
<status status="PASS" starttime="20210619 01:55:51.202" endtime="20210619 01:55:51.204"/>
</kw>
<msg timestamp="20210619 01:55:51.204" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:55:51.201" endtime="20210619 01:55:51.204"/>
</kw>
<status status="PASS" starttime="20210619 01:55:51.200" endtime="20210619 01:55:51.205"/>
</kw>
<msg timestamp="20210619 01:55:51.205" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210619 01:55:51.199" endtime="20210619 01:55:51.205"/>
</kw>
<msg timestamp="20210619 01:55:51.205" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210619 01:55:51.198" endtime="20210619 01:55:51.205"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:55:51.209" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:55:54.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:55:54.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:55:51.207" endtime="20210619 01:55:54.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:55:54.992" level="INFO"/>
<status status="PASS" starttime="20210619 01:55:54.991" endtime="20210619 01:55:54.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:55:54.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:55:54.993" endtime="20210619 01:55:54.993"/>
</kw>
<status status="PASS" starttime="20210619 01:55:51.206" endtime="20210619 01:55:54.993"/>
</kw>
<msg timestamp="20210619 01:55:54.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:55:51.206" endtime="20210619 01:55:54.994"/>
</kw>
<status status="PASS" starttime="20210619 01:55:51.206" endtime="20210619 01:55:54.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:55:54.997" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:55:58.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:55:58.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:55:54.996" endtime="20210619 01:55:58.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:55:58.767" level="INFO"/>
<status status="PASS" starttime="20210619 01:55:58.766" endtime="20210619 01:55:58.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:55:58.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:55:58.767" endtime="20210619 01:55:58.768"/>
</kw>
<status status="PASS" starttime="20210619 01:55:54.995" endtime="20210619 01:55:58.768"/>
</kw>
<msg timestamp="20210619 01:55:58.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:55:54.995" endtime="20210619 01:55:58.769"/>
</kw>
<status status="PASS" starttime="20210619 01:55:54.994" endtime="20210619 01:55:58.769"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:55:51.197" endtime="20210619 01:55:58.769"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210619 01:55:08.775" endtime="20210619 01:55:58.771"/>
</suite>
<suite id="s1-s2" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:58:02.304" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:58:02.304" endtime="20210619 01:58:02.304"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:58:02.305" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:58:02.304" endtime="20210619 01:58:02.305"/>
</kw>
<status status="PASS" starttime="20210619 01:58:02.303" endtime="20210619 01:58:02.305"/>
</kw>
<msg timestamp="20210619 01:58:02.305" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:58:02.303" endtime="20210619 01:58:02.305"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:58:02.306" endtime="20210619 01:58:02.306"/>
</kw>
<msg timestamp="20210619 01:58:02.307" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210619 01:58:02.305" endtime="20210619 01:58:02.307"/>
</kw>
<status status="PASS" starttime="20210619 01:58:02.302" endtime="20210619 01:58:02.307"/>
</kw>
<msg timestamp="20210619 01:58:02.307" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210619 01:58:02.301" endtime="20210619 01:58:02.307"/>
</kw>
<msg timestamp="20210619 01:58:02.307" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210619 01:58:02.300" endtime="20210619 01:58:02.307"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:58:02.308" level="INFO">${random} = 85931</msg>
<status status="PASS" starttime="20210619 01:58:02.307" endtime="20210619 01:58:02.308"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:58:02.313" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-85931 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:58:06.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:58:06.045" level="INFO">${output} = 2021-06-19 01:58:04 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-19 01:58:04 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210619 01:58:02.310" endtime="20210619 01:58:06.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:58:06.047" level="INFO">2021-06-19 01:58:04 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-19 01:58:04 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:58:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-19 01:58:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:58:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2A5EABB7819E-&gt;2fe09673-28e0-4a21-a29e-1d04014b8da4
2021-06-19 01:58:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:58:06.046" endtime="20210619 01:58:06.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:58:06.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:58:06.047" endtime="20210619 01:58:06.047"/>
</kw>
<status status="PASS" starttime="20210619 01:58:02.309" endtime="20210619 01:58:06.048"/>
</kw>
<msg timestamp="20210619 01:58:06.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:58:02.309" endtime="20210619 01:58:06.048"/>
</kw>
<msg timestamp="20210619 01:58:06.048" level="INFO">${result} = 2021-06-19 01:58:04 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-19 01:58:04 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210619 01:58:02.308" endtime="20210619 01:58:06.048"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:58:06.054" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:58:08.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:58:08.019" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-19 01:55 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-19 01:56 ofs://om/volume1/bucket1/ozone-57113
-rw-...</msg>
<status status="PASS" starttime="20210619 01:58:06.050" endtime="20210619 01:58:08.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:58:08.020" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-19 01:55 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-19 01:56 ofs://om/volume1/bucket1/ozone-57113
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-19 01:58 ofs://om/volume1/bucket1/ozone-85931
drwxrwxrwx   - hadoop hadoop          0 2021-06-19 01:55 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-06-19 01:57 ofs://om/volume1/bucket1/wordcount-d8J3tpPs.txt</msg>
<status status="PASS" starttime="20210619 01:58:08.019" endtime="20210619 01:58:08.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:58:08.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:58:08.020" endtime="20210619 01:58:08.021"/>
</kw>
<status status="PASS" starttime="20210619 01:58:06.049" endtime="20210619 01:58:08.021"/>
</kw>
<msg timestamp="20210619 01:58:08.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:58:06.049" endtime="20210619 01:58:08.021"/>
</kw>
<msg timestamp="20210619 01:58:08.022" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-19 01:55 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-19 01:56 ofs://om/volume1/bucket1/ozone-57113
-rw-...</msg>
<status status="PASS" starttime="20210619 01:58:06.048" endtime="20210619 01:58:08.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:58:08.022" endtime="20210619 01:58:08.022"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:58:02.299" endtime="20210619 01:58:08.023"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210619 01:58:02.238" endtime="20210619 01:58:08.024"/>
</suite>
<suite id="s1-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:56:25.240" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:56:25.240" endtime="20210619 01:56:25.240"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:56:25.241" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:56:25.240" endtime="20210619 01:56:25.241"/>
</kw>
<status status="PASS" starttime="20210619 01:56:25.239" endtime="20210619 01:56:25.241"/>
</kw>
<msg timestamp="20210619 01:56:25.241" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:56:25.239" endtime="20210619 01:56:25.241"/>
</kw>
<status status="PASS" starttime="20210619 01:56:25.238" endtime="20210619 01:56:25.242"/>
</kw>
<msg timestamp="20210619 01:56:25.242" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210619 01:56:25.237" endtime="20210619 01:56:25.242"/>
</kw>
<msg timestamp="20210619 01:56:25.242" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210619 01:56:25.236" endtime="20210619 01:56:25.242"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:56:25.243" level="INFO">${random} = 57113</msg>
<status status="PASS" starttime="20210619 01:56:25.242" endtime="20210619 01:56:25.243"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:56:25.248" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-57113 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:56:29.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:56:29.512" level="INFO">${output} = 2021-06-19 01:56:27 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-19 01:56:27 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210619 01:56:25.244" endtime="20210619 01:56:29.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:56:29.513" level="INFO">2021-06-19 01:56:27 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-19 01:56:27 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:56:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-19 01:56:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:56:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9F3F3CCDA96B-&gt;d998e568-3665-4b2f-a704-b9bc6c6e297d
2021-06-19 01:56:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210619 01:56:29.512" endtime="20210619 01:56:29.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:56:29.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:56:29.513" endtime="20210619 01:56:29.514"/>
</kw>
<status status="PASS" starttime="20210619 01:56:25.244" endtime="20210619 01:56:29.514"/>
</kw>
<msg timestamp="20210619 01:56:29.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:56:25.243" endtime="20210619 01:56:29.514"/>
</kw>
<msg timestamp="20210619 01:56:29.514" level="INFO">${result} = 2021-06-19 01:56:27 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-19 01:56:27 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210619 01:56:25.243" endtime="20210619 01:56:29.515"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:56:29.518" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:56:31.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:56:31.481" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-19 01:55 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-19 01:56 o3fs://bucket1.volume1.om/ozone-57113
dr...</msg>
<status status="PASS" starttime="20210619 01:56:29.516" endtime="20210619 01:56:31.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:56:31.482" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-19 01:55 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-19 01:56 o3fs://bucket1.volume1.om/ozone-57113
drwxrwxrwx   - hadoop hadoop          0 2021-06-19 01:55 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210619 01:56:31.481" endtime="20210619 01:56:31.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:56:31.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:56:31.482" endtime="20210619 01:56:31.483"/>
</kw>
<status status="PASS" starttime="20210619 01:56:29.516" endtime="20210619 01:56:31.483"/>
</kw>
<msg timestamp="20210619 01:56:31.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:56:29.515" endtime="20210619 01:56:31.483"/>
</kw>
<msg timestamp="20210619 01:56:31.484" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-19 01:55 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-19 01:56 o3fs://bucket1.volume1.om/ozone-57113
dr...</msg>
<status status="PASS" starttime="20210619 01:56:29.515" endtime="20210619 01:56:31.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:56:31.484" endtime="20210619 01:56:31.484"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210619 01:56:25.236" endtime="20210619 01:56:31.485"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210619 01:56:25.174" endtime="20210619 01:56:31.486"/>
</suite>
<suite id="s1-s4" name="Kinit-Hadoop" source="/opt/ozone/smoketest/kinit-hadoop.robot">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:56:19.684" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:56:19.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:56:19.689" level="INFO">${output} = rm</msg>
<status status="PASS" starttime="20210619 01:56:19.680" endtime="20210619 01:56:19.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:56:19.690" level="INFO">rm</msg>
<status status="PASS" starttime="20210619 01:56:19.689" endtime="20210619 01:56:19.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:56:19.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:56:19.690" endtime="20210619 01:56:19.691"/>
</kw>
<status status="PASS" starttime="20210619 01:56:19.679" endtime="20210619 01:56:19.691"/>
</kw>
<msg timestamp="20210619 01:56:19.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:56:19.679" endtime="20210619 01:56:19.691"/>
</kw>
<msg timestamp="20210619 01:56:19.691" level="INFO">${instance} = rm</msg>
<status status="PASS" starttime="20210619 01:56:19.679" endtime="20210619 01:56:19.691"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:56:19.693" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:56:19.692" endtime="20210619 01:56:19.693"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:56:19.698" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:56:19.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:56:19.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:56:19.696" endtime="20210619 01:56:19.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:56:19.707" level="INFO"/>
<status status="PASS" starttime="20210619 01:56:19.707" endtime="20210619 01:56:19.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:56:19.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:56:19.708" endtime="20210619 01:56:19.708"/>
</kw>
<status status="PASS" starttime="20210619 01:56:19.696" endtime="20210619 01:56:19.709"/>
</kw>
<msg timestamp="20210619 01:56:19.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:56:19.695" endtime="20210619 01:56:19.709"/>
</kw>
<status status="PASS" starttime="20210619 01:56:19.693" endtime="20210619 01:56:19.709"/>
</kw>
<status status="PASS" starttime="20210619 01:56:19.693" endtime="20210619 01:56:19.709"/>
</kw>
<status status="PASS" starttime="20210619 01:56:19.678" endtime="20210619 01:56:19.709"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:56:19.677" endtime="20210619 01:56:19.710"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210619 01:56:19.615" endtime="20210619 01:56:19.711"/>
</suite>
<suite id="s1-s5" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:55:03.235" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:55:03.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:55:03.239" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210619 01:55:03.232" endtime="20210619 01:55:03.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:55:03.240" level="INFO">om</msg>
<status status="PASS" starttime="20210619 01:55:03.239" endtime="20210619 01:55:03.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:55:03.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:55:03.240" endtime="20210619 01:55:03.241"/>
</kw>
<status status="PASS" starttime="20210619 01:55:03.231" endtime="20210619 01:55:03.241"/>
</kw>
<msg timestamp="20210619 01:55:03.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:55:03.231" endtime="20210619 01:55:03.241"/>
</kw>
<msg timestamp="20210619 01:55:03.242" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20210619 01:55:03.231" endtime="20210619 01:55:03.242"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210619 01:55:03.242" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210619 01:55:03.242" endtime="20210619 01:55:03.242"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:55:03.246" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:55:03.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:55:03.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210619 01:55:03.245" endtime="20210619 01:55:03.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:55:03.254" level="INFO"/>
<status status="PASS" starttime="20210619 01:55:03.254" endtime="20210619 01:55:03.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:55:03.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:55:03.255" endtime="20210619 01:55:03.255"/>
</kw>
<status status="PASS" starttime="20210619 01:55:03.244" endtime="20210619 01:55:03.256"/>
</kw>
<msg timestamp="20210619 01:55:03.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:55:03.244" endtime="20210619 01:55:03.256"/>
</kw>
<status status="PASS" starttime="20210619 01:55:03.243" endtime="20210619 01:55:03.256"/>
</kw>
<status status="PASS" starttime="20210619 01:55:03.243" endtime="20210619 01:55:03.256"/>
</kw>
<status status="PASS" starttime="20210619 01:55:03.230" endtime="20210619 01:55:03.256"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210619 01:55:03.229" endtime="20210619 01:55:03.257"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210619 01:55:03.169" endtime="20210619 01:55:03.258"/>
</suite>
<suite id="s1-s6" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:58:13.528" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:58:13.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:58:13.533" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:58:13.525" endtime="20210619 01:58:13.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:58:13.534" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:58:13.534" endtime="20210619 01:58:13.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:58:13.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:58:13.535" endtime="20210619 01:58:13.535"/>
</kw>
<status status="PASS" starttime="20210619 01:58:13.524" endtime="20210619 01:58:13.536"/>
</kw>
<msg timestamp="20210619 01:58:13.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:58:13.524" endtime="20210619 01:58:13.536"/>
</kw>
<msg timestamp="20210619 01:58:13.536" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:58:13.523" endtime="20210619 01:58:13.537"/>
</kw>
<msg timestamp="20210619 01:58:13.537" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:58:13.523" endtime="20210619 01:58:13.537"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:58:13.542" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:58:13.541" endtime="20210619 01:58:13.542"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:58:13.542" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:58:13.542" endtime="20210619 01:58:13.542"/>
</kw>
<status status="PASS" starttime="20210619 01:58:13.540" endtime="20210619 01:58:13.543"/>
</kw>
<msg timestamp="20210619 01:58:13.543" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:58:13.540" endtime="20210619 01:58:13.543"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:58:13.544" endtime="20210619 01:58:13.544"/>
</kw>
<msg timestamp="20210619 01:58:13.544" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210619 01:58:13.543" endtime="20210619 01:58:13.544"/>
</kw>
<status status="PASS" starttime="20210619 01:58:13.539" endtime="20210619 01:58:13.545"/>
</kw>
<msg timestamp="20210619 01:58:13.545" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210619 01:58:13.538" endtime="20210619 01:58:13.545"/>
</kw>
<msg timestamp="20210619 01:58:13.545" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210619 01:58:13.538" endtime="20210619 01:58:13.545"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:58:13.548" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:58:44.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:58:44.456" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-19 01:58:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-19 01:58:15 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210619 01:58:13.547" endtime="20210619 01:58:44.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:58:44.457" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-19 01:58:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-19 01:58:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:58:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-19 01:58:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:58:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0FB35A0EF917-&gt;d998e568-3665-4b2f-a704-b9bc6c6e297d
2021-06-19 01:58:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-19 01:58:17 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-19 01:58:17 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
2021-06-19 01:58:17 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1624067897499, maxDate=1624672697499, sequenceNumber=3, masterKeyId=2))
2021-06-19 01:58:17 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 be f0 f5 8f a2 2f 38 be f8 a7 b0 a4 2f 40 03 48 01 5a 0d 33 36 39 36 34 36 39 36 34 31 36 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-19 01:58:17 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1624067897499, maxDate=1624672697499, sequenceNumber=3, masterKeyId=2)
2021-06-19 01:58:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-19 01:58:17 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-19 01:58:18 INFO  JobSubmitter:202 - number of splits:3
2021-06-19 01:58:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3CA5D90EF63E-&gt;2fe09673-28e0-4a21-a29e-1d04014b8da4
2021-06-19 01:58:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-19 01:58:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1624067646732_0003
2021-06-19 01:58:18 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1624067897499, maxDate=1624672697499, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 be f0 f5 8f a2 2f 38 be f8 a7 b0 a4 2f 40 03 48 01 5a 0d 33 36 39 36 34 36 39 36 34 31 36 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-19 01:58:18 INFO  Configuration:2795 - resource-types.xml not found
2021-06-19 01:58:18 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-19 01:58:18 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-19 01:58:19 INFO  YarnClientImpl:329 - Submitted application application_1624067646732_0003
2021-06-19 01:58:19 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1624067646732_0003/
2021-06-19 01:58:19 INFO  Job:1614 - Running job: job_1624067646732_0003
2021-06-19 01:58:26 INFO  Job:1635 - Job job_1624067646732_0003 running in uber mode : false
2021-06-19 01:58:26 INFO  Job:1642 -  map 0% reduce 0%
2021-06-19 01:58:36 INFO  Job:1642 -  map 33% reduce 0%
2021-06-19 01:58:38 INFO  Job:1642 -  map 67% reduce 0%
2021-06-19 01:58:39 INFO  Job:1642 -  map 100% reduce 0%
2021-06-19 01:58:42 INFO  Job:1642 -  map 100% reduce 100%
2021-06-19 01:58:43 INFO  Job:1653 - Job job_1624067646732_0003 completed successfully
2021-06-19 01:58:43 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1129813
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43270
		Total time spent by all reduces in occupied slots (ms)=8286
		Total time spent by all map tasks (ms)=21635
		Total time spent by all reduce tasks (ms)=4143
		Total vcore-milliseconds taken by all map tasks=21635
		Total vcore-milliseconds taken by all reduce tasks=4143
		Total megabyte-milliseconds taken by all map tasks=44308480
		Total megabyte-milliseconds taken by all reduce tasks=8484864
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=953
		CPU time spent (ms)=7320
		Physical memory (bytes) snapshot=1488977920
		Virtual memory (bytes) snapshot=14040076288
		Total committed heap usage (bytes)=1296564224
		Peak Map Physical memory (bytes)=389599232
		Peak Map Virtual memory (bytes)=3510386688
		Peak Reduce Physical memory (bytes)=338817024
		Peak Reduce Virtual memory (bytes)=3525533696
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 26.874 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210619 01:58:44.456" endtime="20210619 01:58:44.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:58:44.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:58:44.458" endtime="20210619 01:58:44.458"/>
</kw>
<status status="PASS" starttime="20210619 01:58:13.546" endtime="20210619 01:58:44.459"/>
</kw>
<msg timestamp="20210619 01:58:44.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:58:13.546" endtime="20210619 01:58:44.459"/>
</kw>
<msg timestamp="20210619 01:58:44.459" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-19 01:58:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-19 01:58:15 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210619 01:58:13.545" endtime="20210619 01:58:44.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:58:44.460" endtime="20210619 01:58:44.460"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210619 01:58:13.522" endtime="20210619 01:58:44.460"/>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:58:44.466" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:58:44.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:58:44.475" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:58:44.464" endtime="20210619 01:58:44.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:58:44.476" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:58:44.475" endtime="20210619 01:58:44.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:58:44.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:58:44.476" endtime="20210619 01:58:44.477"/>
</kw>
<status status="PASS" starttime="20210619 01:58:44.463" endtime="20210619 01:58:44.477"/>
</kw>
<msg timestamp="20210619 01:58:44.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:58:44.463" endtime="20210619 01:58:44.478"/>
</kw>
<msg timestamp="20210619 01:58:44.478" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:58:44.463" endtime="20210619 01:58:44.478"/>
</kw>
<msg timestamp="20210619 01:58:44.478" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:58:44.462" endtime="20210619 01:58:44.478"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:58:44.479" level="INFO">${random} = BWwn7qiD</msg>
<status status="PASS" starttime="20210619 01:58:44.478" endtime="20210619 01:58:44.479"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:58:44.483" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:58:44.482" endtime="20210619 01:58:44.483"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:58:44.483" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:58:44.483" endtime="20210619 01:58:44.483"/>
</kw>
<status status="PASS" starttime="20210619 01:58:44.482" endtime="20210619 01:58:44.484"/>
</kw>
<msg timestamp="20210619 01:58:44.484" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:58:44.481" endtime="20210619 01:58:44.484"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210619 01:58:44.485" endtime="20210619 01:58:44.485"/>
</kw>
<msg timestamp="20210619 01:58:44.485" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210619 01:58:44.484" endtime="20210619 01:58:44.485"/>
</kw>
<status status="PASS" starttime="20210619 01:58:44.480" endtime="20210619 01:58:44.486"/>
</kw>
<msg timestamp="20210619 01:58:44.486" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210619 01:58:44.480" endtime="20210619 01:58:44.486"/>
</kw>
<msg timestamp="20210619 01:58:44.486" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210619 01:58:44.479" endtime="20210619 01:58:44.486"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:58:44.490" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:58:44.489" endtime="20210619 01:58:44.490"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:58:44.491" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:58:44.490" endtime="20210619 01:58:44.491"/>
</kw>
<status status="PASS" starttime="20210619 01:58:44.489" endtime="20210619 01:58:44.491"/>
</kw>
<msg timestamp="20210619 01:58:44.491" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:58:44.488" endtime="20210619 01:58:44.491"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:58:44.493" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210619 01:58:44.492" endtime="20210619 01:58:44.493"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:58:44.494" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210619 01:58:44.493" endtime="20210619 01:58:44.494"/>
</kw>
<status status="PASS" starttime="20210619 01:58:44.492" endtime="20210619 01:58:44.494"/>
</kw>
<msg timestamp="20210619 01:58:44.494" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210619 01:58:44.491" endtime="20210619 01:58:44.494"/>
</kw>
<status status="PASS" starttime="20210619 01:58:44.488" endtime="20210619 01:58:44.494"/>
</kw>
<msg timestamp="20210619 01:58:44.494" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210619 01:58:44.487" endtime="20210619 01:58:44.494"/>
</kw>
<msg timestamp="20210619 01:58:44.495" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210619 01:58:44.486" endtime="20210619 01:58:44.495"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:58:44.500" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210619 01:58:44.499" endtime="20210619 01:58:44.500"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:58:44.501" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210619 01:58:44.501" endtime="20210619 01:58:44.501"/>
</kw>
<status status="PASS" starttime="20210619 01:58:44.498" endtime="20210619 01:58:44.501"/>
</kw>
<msg timestamp="20210619 01:58:44.502" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210619 01:58:44.498" endtime="20210619 01:58:44.502"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:58:44.504" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210619 01:58:44.503" endtime="20210619 01:58:44.504"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:58:44.504" level="INFO">${result} = /wordcount-BWwn7qiD.txt</msg>
<status status="PASS" starttime="20210619 01:58:44.504" endtime="20210619 01:58:44.505"/>
</kw>
<status status="PASS" starttime="20210619 01:58:44.503" endtime="20210619 01:58:44.505"/>
</kw>
<msg timestamp="20210619 01:58:44.505" level="INFO">${path_with_leading} = /wordcount-BWwn7qiD.txt</msg>
<status status="PASS" starttime="20210619 01:58:44.502" endtime="20210619 01:58:44.505"/>
</kw>
<status status="PASS" starttime="20210619 01:58:44.497" endtime="20210619 01:58:44.505"/>
</kw>
<msg timestamp="20210619 01:58:44.505" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-BWwn7qiD.txt</msg>
<status status="PASS" starttime="20210619 01:58:44.496" endtime="20210619 01:58:44.505"/>
</kw>
<msg timestamp="20210619 01:58:44.506" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-BWwn7qiD.txt</msg>
<status status="PASS" starttime="20210619 01:58:44.495" endtime="20210619 01:58:44.506"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:58:44.509" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-BWwn7qiD.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:59:14.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:59:14.938" level="INFO">${output} = 2021-06-19 01:58:46 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-19 01:58:46 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
20...</msg>
<status status="PASS" starttime="20210619 01:58:44.508" endtime="20210619 01:59:14.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:59:14.939" level="INFO">2021-06-19 01:58:46 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-19 01:58:46 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
2021-06-19 01:58:47 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1624067926927, maxDate=1624672726927, sequenceNumber=4, masterKeyId=2))
2021-06-19 01:58:47 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a3 d6 f7 8f a2 2f 38 a3 de a9 b0 a4 2f 40 04 48 01 5a 0d 33 36 39 36 34 36 39 36 34 31 36 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-19 01:58:47 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1624067926927, maxDate=1624672726927, sequenceNumber=4, masterKeyId=2)
2021-06-19 01:58:47 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-19 01:58:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-19 01:58:47 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:58:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-19 01:58:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:58:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1D15A2643505-&gt;2fe09673-28e0-4a21-a29e-1d04014b8da4
2021-06-19 01:58:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-19 01:58:48 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-19 01:58:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-83F080218FB6-&gt;d998e568-3665-4b2f-a704-b9bc6c6e297d
2021-06-19 01:58:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-19 01:58:48 INFO  JobSubmitter:202 - number of splits:3
2021-06-19 01:58:48 INFO  JobSubmitter:298 - Submitting tokens for job: job_1624067646732_0004
2021-06-19 01:58:48 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1624067926927, maxDate=1624672726927, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a3 d6 f7 8f a2 2f 38 a3 de a9 b0 a4 2f 40 04 48 01 5a 0d 33 36 39 36 34 36 39 36 34 31 36 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-19 01:58:49 INFO  Configuration:2795 - resource-types.xml not found
2021-06-19 01:58:49 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-19 01:58:49 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-19 01:58:49 INFO  YarnClientImpl:329 - Submitted application application_1624067646732_0004
2021-06-19 01:58:50 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1624067646732_0004/
2021-06-19 01:58:50 INFO  Job:1614 - Running job: job_1624067646732_0004
2021-06-19 01:58:57 INFO  Job:1635 - Job job_1624067646732_0004 running in uber mode : false
2021-06-19 01:58:57 INFO  Job:1642 -  map 0% reduce 0%
2021-06-19 01:59:07 INFO  Job:1642 -  map 33% reduce 0%
2021-06-19 01:59:09 INFO  Job:1642 -  map 67% reduce 0%
2021-06-19 01:59:10 INFO  Job:1642 -  map 100% reduce 0%
2021-06-19 01:59:13 INFO  Job:1642 -  map 100% reduce 100%
2021-06-19 01:59:14 INFO  Job:1653 - Job job_1624067646732_0004 completed successfully
2021-06-19 01:59:14 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1192487
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39729
		OFS: Number of bytes written=22209
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43884
		Total time spent by all reduces in occupied slots (ms)=8138
		Total time spent by all map tasks (ms)=21942
		Total time spent by all reduce tasks (ms)=4069
		Total vcore-milliseconds taken by all map tasks=21942
		Total vcore-milliseconds taken by all reduce tasks=4069
		Total megabyte-milliseconds taken by all map tasks=44937216
		Total megabyte-milliseconds taken by all reduce tasks=8333312
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=894
		CPU time spent (ms)=7820
		Physical memory (bytes) snapshot=1491267584
		Virtual memory (bytes) snapshot=14053588992
		Total committed heap usage (bytes)=1283981312
		Peak Map Physical memory (bytes)=391454720
		Peak Map Virtual memory (bytes)=3510915072
		Peak Reduce Physical memory (bytes)=321970176
		Peak Reduce Virtual memory (bytes)=3526524928
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209</msg>
<status status="PASS" starttime="20210619 01:59:14.938" endtime="20210619 01:59:14.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:59:14.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:59:14.939" endtime="20210619 01:59:14.940"/>
</kw>
<status status="PASS" starttime="20210619 01:58:44.507" endtime="20210619 01:59:14.940"/>
</kw>
<msg timestamp="20210619 01:59:14.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:58:44.507" endtime="20210619 01:59:14.940"/>
</kw>
<msg timestamp="20210619 01:59:14.941" level="INFO">${output} = 2021-06-19 01:58:46 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-19 01:58:46 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
20...</msg>
<status status="PASS" starttime="20210619 01:58:44.506" endtime="20210619 01:59:14.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:59:14.941" endtime="20210619 01:59:14.942"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:59:14.942" endtime="20210619 01:59:14.942"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210619 01:58:44.461" endtime="20210619 01:59:14.942"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210619 01:58:13.457" endtime="20210619 01:59:14.944"/>
</suite>
<suite id="s1-s7" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:56:37.013" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:56:37.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:56:37.018" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:56:37.010" endtime="20210619 01:56:37.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:56:37.019" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:56:37.019" endtime="20210619 01:56:37.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:56:37.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:56:37.020" endtime="20210619 01:56:37.020"/>
</kw>
<status status="PASS" starttime="20210619 01:56:37.009" endtime="20210619 01:56:37.021"/>
</kw>
<msg timestamp="20210619 01:56:37.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:56:37.009" endtime="20210619 01:56:37.021"/>
</kw>
<msg timestamp="20210619 01:56:37.021" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:56:37.008" endtime="20210619 01:56:37.022"/>
</kw>
<msg timestamp="20210619 01:56:37.022" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:56:37.008" endtime="20210619 01:56:37.022"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:56:37.026" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:56:37.025" endtime="20210619 01:56:37.026"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:56:37.027" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:56:37.026" endtime="20210619 01:56:37.027"/>
</kw>
<status status="PASS" starttime="20210619 01:56:37.025" endtime="20210619 01:56:37.027"/>
</kw>
<msg timestamp="20210619 01:56:37.027" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:56:37.024" endtime="20210619 01:56:37.027"/>
</kw>
<status status="PASS" starttime="20210619 01:56:37.024" endtime="20210619 01:56:37.027"/>
</kw>
<msg timestamp="20210619 01:56:37.027" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210619 01:56:37.023" endtime="20210619 01:56:37.027"/>
</kw>
<msg timestamp="20210619 01:56:37.028" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210619 01:56:37.022" endtime="20210619 01:56:37.028"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:56:37.031" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:57:16.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:57:16.426" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-19 01:56:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-19 01:56:39 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210619 01:56:37.030" endtime="20210619 01:57:16.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:57:16.427" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-19 01:56:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-19 01:56:39 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:56:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-19 01:56:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:56:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D774186344F9-&gt;2fe09673-28e0-4a21-a29e-1d04014b8da4
2021-06-19 01:56:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-06-19 01:56:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E742802A6298-&gt;d998e568-3665-4b2f-a704-b9bc6c6e297d
2021-06-19 01:56:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-19 01:56:43 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-19 01:56:43 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
2021-06-19 01:56:43 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1624067803674, maxDate=1624672603674, sequenceNumber=1, masterKeyId=2))
2021-06-19 01:56:43 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d8 91 f0 8f a2 2f 38 d8 99 a2 b0 a4 2f 40 01 48 01 5a 0d 33 36 39 36 34 36 39 36 34 31 36 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-19 01:56:43 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1624067803674, maxDate=1624672603674, sequenceNumber=1, masterKeyId=2)
2021-06-19 01:56:44 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-19 01:56:44 INFO  JobSubmitter:202 - number of splits:3
2021-06-19 01:56:44 INFO  JobSubmitter:298 - Submitting tokens for job: job_1624067646732_0001
2021-06-19 01:56:44 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1624067803674, maxDate=1624672603674, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d8 91 f0 8f a2 2f 38 d8 99 a2 b0 a4 2f 40 01 48 01 5a 0d 33 36 39 36 34 36 39 36 34 31 36 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-19 01:56:44 INFO  Configuration:2795 - resource-types.xml not found
2021-06-19 01:56:44 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-19 01:56:44 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-19 01:56:46 INFO  YarnClientImpl:329 - Submitted application application_1624067646732_0001
2021-06-19 01:56:46 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1624067646732_0001/
2021-06-19 01:56:46 INFO  Job:1614 - Running job: job_1624067646732_0001
2021-06-19 01:56:57 INFO  Job:1635 - Job job_1624067646732_0001 running in uber mode : false
2021-06-19 01:56:57 INFO  Job:1642 -  map 0% reduce 0%
2021-06-19 01:57:07 INFO  Job:1642 -  map 33% reduce 0%
2021-06-19 01:57:09 INFO  Job:1642 -  map 100% reduce 0%
2021-06-19 01:57:14 INFO  Job:1642 -  map 100% reduce 100%
2021-06-19 01:57:15 INFO  Job:1653 - Job job_1624067646732_0001 completed successfully
2021-06-19 01:57:15 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1130033
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48580
		Total time spent by all reduces in occupied slots (ms)=8074
		Total time spent by all map tasks (ms)=24290
		Total time spent by all reduce tasks (ms)=4037
		Total vcore-milliseconds taken by all map tasks=24290
		Total vcore-milliseconds taken by all reduce tasks=4037
		Total megabyte-milliseconds taken by all map tasks=49745920
		Total megabyte-milliseconds taken by all reduce tasks=8267776
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1029
		CPU time spent (ms)=7780
		Physical memory (bytes) snapshot=1518428160
		Virtual memory (bytes) snapshot=14059606016
		Total committed heap usage (bytes)=1296039936
		Peak Map Physical memory (bytes)=399138816
		Peak Map Virtual memory (bytes)=3513139200
		Peak Reduce Physical memory (bytes)=340439040
		Peak Reduce Virtual memory (bytes)=3528142848
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.852 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210619 01:57:16.426" endtime="20210619 01:57:16.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:57:16.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:57:16.428" endtime="20210619 01:57:16.428"/>
</kw>
<status status="PASS" starttime="20210619 01:56:37.029" endtime="20210619 01:57:16.428"/>
</kw>
<msg timestamp="20210619 01:57:16.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:56:37.029" endtime="20210619 01:57:16.429"/>
</kw>
<msg timestamp="20210619 01:57:16.429" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-19 01:56:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-19 01:56:39 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210619 01:56:37.028" endtime="20210619 01:57:16.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:57:16.429" endtime="20210619 01:57:16.430"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210619 01:56:37.007" endtime="20210619 01:57:16.430"/>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:57:16.436" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:57:16.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:57:16.442" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:57:16.434" endtime="20210619 01:57:16.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:57:16.444" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:57:16.443" endtime="20210619 01:57:16.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:57:16.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:57:16.444" endtime="20210619 01:57:16.445"/>
</kw>
<status status="PASS" starttime="20210619 01:57:16.434" endtime="20210619 01:57:16.445"/>
</kw>
<msg timestamp="20210619 01:57:16.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:57:16.433" endtime="20210619 01:57:16.445"/>
</kw>
<msg timestamp="20210619 01:57:16.446" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:57:16.433" endtime="20210619 01:57:16.446"/>
</kw>
<msg timestamp="20210619 01:57:16.446" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210619 01:57:16.432" endtime="20210619 01:57:16.447"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210619 01:57:16.447" level="INFO">${random} = d8J3tpPs</msg>
<status status="PASS" starttime="20210619 01:57:16.447" endtime="20210619 01:57:16.447"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:57:16.451" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:57:16.451" endtime="20210619 01:57:16.451"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:57:16.452" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:57:16.452" endtime="20210619 01:57:16.452"/>
</kw>
<status status="PASS" starttime="20210619 01:57:16.450" endtime="20210619 01:57:16.452"/>
</kw>
<msg timestamp="20210619 01:57:16.453" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:57:16.450" endtime="20210619 01:57:16.453"/>
</kw>
<status status="PASS" starttime="20210619 01:57:16.449" endtime="20210619 01:57:16.453"/>
</kw>
<msg timestamp="20210619 01:57:16.453" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210619 01:57:16.448" endtime="20210619 01:57:16.453"/>
</kw>
<msg timestamp="20210619 01:57:16.453" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210619 01:57:16.447" endtime="20210619 01:57:16.453"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:57:16.457" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:57:16.457" endtime="20210619 01:57:16.457"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:57:16.458" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:57:16.457" endtime="20210619 01:57:16.458"/>
</kw>
<status status="PASS" starttime="20210619 01:57:16.456" endtime="20210619 01:57:16.458"/>
</kw>
<msg timestamp="20210619 01:57:16.458" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:57:16.456" endtime="20210619 01:57:16.458"/>
</kw>
<status status="PASS" starttime="20210619 01:57:16.455" endtime="20210619 01:57:16.459"/>
</kw>
<msg timestamp="20210619 01:57:16.459" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210619 01:57:16.454" endtime="20210619 01:57:16.459"/>
</kw>
<msg timestamp="20210619 01:57:16.459" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210619 01:57:16.453" endtime="20210619 01:57:16.459"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210619 01:57:16.463" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210619 01:57:16.462" endtime="20210619 01:57:16.463"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210619 01:57:16.464" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210619 01:57:16.463" endtime="20210619 01:57:16.464"/>
</kw>
<status status="PASS" starttime="20210619 01:57:16.462" endtime="20210619 01:57:16.464"/>
</kw>
<msg timestamp="20210619 01:57:16.464" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210619 01:57:16.461" endtime="20210619 01:57:16.464"/>
</kw>
<status status="PASS" starttime="20210619 01:57:16.461" endtime="20210619 01:57:16.465"/>
</kw>
<msg timestamp="20210619 01:57:16.465" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-d8J3tpPs.txt</msg>
<status status="PASS" starttime="20210619 01:57:16.460" endtime="20210619 01:57:16.465"/>
</kw>
<msg timestamp="20210619 01:57:16.465" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-d8J3tpPs.txt</msg>
<status status="PASS" starttime="20210619 01:57:16.459" endtime="20210619 01:57:16.465"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210619 01:57:16.468" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-d8J3tpPs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210619 01:57:56.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210619 01:57:56.704" level="INFO">${output} = 2021-06-19 01:57:18 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-19 01:57:18 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
20...</msg>
<status status="PASS" starttime="20210619 01:57:16.467" endtime="20210619 01:57:56.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210619 01:57:56.705" level="INFO">2021-06-19 01:57:18 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-19 01:57:18 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
2021-06-19 01:57:18 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1624067838897, maxDate=1624672638897, sequenceNumber=2, masterKeyId=2))
2021-06-19 01:57:18 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c9 a6 f2 8f a2 2f 38 c9 ae a4 b0 a4 2f 40 02 48 01 5a 0d 33 36 39 36 34 36 39 36 34 31 36 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-19 01:57:18 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1624067838897, maxDate=1624672638897, sequenceNumber=2, masterKeyId=2)
2021-06-19 01:57:19 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-19 01:57:19 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-19 01:57:19 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-19 01:57:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-19 01:57:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-19 01:57:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AEAA2B728186-&gt;2fe09673-28e0-4a21-a29e-1d04014b8da4
2021-06-19 01:57:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-19 01:57:20 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-19 01:57:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6668C264B9FD-&gt;d998e568-3665-4b2f-a704-b9bc6c6e297d
2021-06-19 01:57:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-19 01:57:20 INFO  JobSubmitter:202 - number of splits:3
2021-06-19 01:57:21 INFO  JobSubmitter:298 - Submitting tokens for job: job_1624067646732_0002
2021-06-19 01:57:21 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1624067838897, maxDate=1624672638897, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c9 a6 f2 8f a2 2f 38 c9 ae a4 b0 a4 2f 40 02 48 01 5a 0d 33 36 39 36 34 36 39 36 34 31 36 39 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-19 01:57:21 INFO  Configuration:2795 - resource-types.xml not found
2021-06-19 01:57:21 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-19 01:57:21 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-19 01:57:22 INFO  YarnClientImpl:329 - Submitted application application_1624067646732_0002
2021-06-19 01:57:22 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1624067646732_0002/
2021-06-19 01:57:22 INFO  Job:1614 - Running job: job_1624067646732_0002
2021-06-19 01:57:31 INFO  Job:1635 - Job job_1624067646732_0002 running in uber mode : false
2021-06-19 01:57:31 INFO  Job:1642 -  map 0% reduce 0%
2021-06-19 01:57:42 INFO  Job:1642 -  map 33% reduce 0%
2021-06-19 01:57:44 INFO  Job:1642 -  map 100% reduce 0%
2021-06-19 01:57:48 INFO  Job:1642 -  map 100% reduce 100%
2021-06-19 01:57:56 INFO  Job:1653 - Job job_1624067646732_0002 completed successfully
2021-06-19 01:57:56 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1192571
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39732
		O3FS: Number of bytes written=22209
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49832
		Total time spent by all reduces in occupied slots (ms)=7906
		Total time spent by all map tasks (ms)=24916
		Total time spent by all reduce tasks (ms)=3953
		Total vcore-milliseconds taken by all map tasks=24916
		Total vcore-milliseconds taken by all reduce tasks=3953
		Total megabyte-milliseconds taken by all map tasks=51027968
		Total megabyte-milliseconds taken by all reduce tasks=8095744
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1058
		CPU time spent (ms)=7520
		Physical memory (bytes) snapshot=1459765248
		Virtual memory (bytes) snapshot=14032584704
		Total committed heap usage (bytes)=1280311296
		Peak Map Physical memory (bytes)=388632576
		Peak Map Virtual memory (bytes)=3510210560
		Peak Reduce Physical memory (bytes)=316956672
		Peak Reduce Virtual memory (bytes)=3527598080
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209</msg>
<status status="PASS" starttime="20210619 01:57:56.704" endtime="20210619 01:57:56.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210619 01:57:56.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210619 01:57:56.706" endtime="20210619 01:57:56.706"/>
</kw>
<status status="PASS" starttime="20210619 01:57:16.466" endtime="20210619 01:57:56.707"/>
</kw>
<msg timestamp="20210619 01:57:56.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210619 01:57:16.466" endtime="20210619 01:57:56.707"/>
</kw>
<msg timestamp="20210619 01:57:56.707" level="INFO">${output} = 2021-06-19 01:57:18 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.2:8032
2021-06-19 01:57:18 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
20...</msg>
<status status="PASS" starttime="20210619 01:57:16.465" endtime="20210619 01:57:56.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:57:56.708" endtime="20210619 01:57:56.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210619 01:57:56.708" endtime="20210619 01:57:56.709"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210619 01:57:16.431" endtime="20210619 01:57:56.709"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210619 01:56:36.945" endtime="20210619 01:57:56.710"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="203531"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="hadoopfs-ofs">ozonesecure-mr.hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="hadoopfs-o3fs">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Kinit-Hadoop">ozonesecure-mr.Kinit-Hadoop</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Kinit">ozonesecure-mr.Kinit</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="mapreduce-ofs">ozonesecure-mr.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="mapreduce-o3fs">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
