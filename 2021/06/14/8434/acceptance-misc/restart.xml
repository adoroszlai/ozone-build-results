<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210614 13:52:12.897" rpa="false" schemaversion="2">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:51:47.667" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:51:52.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:51:52.325" level="INFO">${output} = 2021-06-14 13:51:48,731 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:51:48,817 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:51:47.662" endtime="20210614 13:51:52.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:51:52.326" level="INFO">2021-06-14 13:51:48,731 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:51:48,817 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:51:48,817 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-14 13:51:48,942 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-06-14 13:51:48,955 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:51:49,961 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:51:50,106 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-06-14 13:51:50,250 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-14 13:51:50,250 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-BAB96D579FFF-&gt;ab76755d-6421-4439-810f-1b1eef7d3abd
2021-06-14 13:51:50,251 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-14 13:51:50,961 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:51:51,962 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-14 13:51:51,999 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1604.86425, max=1604.86425, mean=1604.86425, stddev=0.0, median=1604.86425, p75=1604.86425, p95=1604.86425, p98=1604.86425, p99=1604.86425, p999=1604.86425, mean_rate=0.38912044860943185, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-14 13:51:51,999 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-06-14 13:51:51,999 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-14 13:51:51,999 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210614 13:51:52.325" endtime="20210614 13:51:52.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:51:52.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:51:52.326" endtime="20210614 13:51:52.327"/>
</kw>
<status status="PASS" starttime="20210614 13:51:47.662" endtime="20210614 13:51:52.327"/>
</kw>
<msg timestamp="20210614 13:51:52.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:51:47.661" endtime="20210614 13:51:52.327"/>
</kw>
<msg timestamp="20210614 13:51:52.327" level="INFO">${result} = 2021-06-14 13:51:48,731 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:51:48,817 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:51:47.661" endtime="20210614 13:51:52.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:51:52.328" endtime="20210614 13:51:52.328"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210614 13:51:47.660" endtime="20210614 13:51:52.328"/>
</test>
<test id="s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:51:52.332" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:51:54.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:51:54.965" level="INFO">${output} = 2021-06-14 13:51:53,279 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:51:53,382 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:51:52.330" endtime="20210614 13:51:54.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:51:54.966" level="INFO">2021-06-14 13:51:53,279 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:51:53,382 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:51:53,382 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-14 13:51:53,525 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost
2021-06-14 13:51:53,532 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:51:54,537 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-14 13:51:54,954 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=84.079231, max=84.079231, mean=84.079231, stddev=0.0, median=84.079231, p75=84.079231, p95=84.079231, p98=84.079231, p99=84.079231, p999=84.079231, mean_rate=0.9843079045132705, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-14 13:51:54,957 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2021-06-14 13:51:54,957 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-14 13:51:54,957 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210614 13:51:54.965" endtime="20210614 13:51:54.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:51:54.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:51:54.966" endtime="20210614 13:51:54.966"/>
</kw>
<status status="PASS" starttime="20210614 13:51:52.330" endtime="20210614 13:51:54.967"/>
</kw>
<msg timestamp="20210614 13:51:54.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:51:52.330" endtime="20210614 13:51:54.967"/>
</kw>
<msg timestamp="20210614 13:51:54.967" level="INFO">${result} = 2021-06-14 13:51:53,279 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:51:53,382 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:51:52.329" endtime="20210614 13:51:54.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:51:54.967" endtime="20210614 13:51:54.968"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210614 13:51:52.328" endtime="20210614 13:51:54.968"/>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:51:54.972" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:51:57.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:51:57.857" level="INFO">${output} = 2021-06-14 13:51:56,041 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:51:56,197 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:51:54.970" endtime="20210614 13:51:57.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:51:57.858" level="INFO">2021-06-14 13:51:56,041 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:51:56,197 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:51:56,197 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-14 13:51:56,320 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost
2021-06-14 13:51:56,332 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:51:57,334 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-14 13:51:57,838 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=16.265469, max=16.265469, mean=16.265469, stddev=0.0, median=16.265469, p75=16.265469, p95=16.265469, p98=16.265469, p99=16.265469, p999=16.265469, mean_rate=0.9861227919410239, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-14 13:51:57,839 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-06-14 13:51:57,840 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-14 13:51:57,840 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210614 13:51:57.857" endtime="20210614 13:51:57.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:51:57.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:51:57.858" endtime="20210614 13:51:57.859"/>
</kw>
<status status="PASS" starttime="20210614 13:51:54.970" endtime="20210614 13:51:57.859"/>
</kw>
<msg timestamp="20210614 13:51:57.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:51:54.969" endtime="20210614 13:51:57.859"/>
</kw>
<msg timestamp="20210614 13:51:57.860" level="INFO">${result} = 2021-06-14 13:51:56,041 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:51:56,197 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:51:54.969" endtime="20210614 13:51:57.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:51:57.860" endtime="20210614 13:51:57.860"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210614 13:51:54.968" endtime="20210614 13:51:57.860"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20210614 13:51:47.619" endtime="20210614 13:51:57.861"/>
</suite>
<suite id="s1-s2" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s2-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:50:36.746" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:50:41.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:50:41.337" level="INFO">${output} = 2021-06-14 13:50:37,695 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:50:37,819 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:50:36.742" endtime="20210614 13:50:41.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:50:41.339" level="INFO">2021-06-14 13:50:37,695 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:50:37,819 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:50:37,819 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-14 13:50:37,949 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-06-14 13:50:37,964 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:50:38,750 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-06-14 13:50:38,881 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-06-14 13:50:38,971 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:50:39,591 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-06-14 13:50:39,779 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-14 13:50:39,779 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-629BC0311902-&gt;4368a4c1-0642-4a80-a450-d0322a08a3cb
2021-06-14 13:50:39,781 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-14 13:50:39,972 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:50:40,972 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-14 13:50:41,006 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=1954.428043, max=1954.428043, mean=1954.428043, stddev=0.0, median=1954.428043, p75=1954.428043, p95=1954.428043, p98=1954.428043, p99=1954.428043, p999=1954.428043, mean_rate=0.47898355543455134, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-14 13:50:41,006 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-06-14 13:50:41,007 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-14 13:50:41,007 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210614 13:50:41.338" endtime="20210614 13:50:41.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:50:41.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:50:41.339" endtime="20210614 13:50:41.339"/>
</kw>
<status status="PASS" starttime="20210614 13:50:36.742" endtime="20210614 13:50:41.340"/>
</kw>
<msg timestamp="20210614 13:50:41.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:50:36.741" endtime="20210614 13:50:41.340"/>
</kw>
<msg timestamp="20210614 13:50:41.340" level="INFO">${result} = 2021-06-14 13:50:37,695 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:50:37,819 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:50:36.740" endtime="20210614 13:50:41.340"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:50:41.340" endtime="20210614 13:50:41.341"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210614 13:50:36.740" endtime="20210614 13:50:41.341"/>
</test>
<test id="s1-s2-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:50:41.347" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:50:44.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:50:44.352" level="INFO">${output} = 2021-06-14 13:50:42,424 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:50:42,607 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:50:41.345" endtime="20210614 13:50:44.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:50:44.353" level="INFO">2021-06-14 13:50:42,424 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:50:42,607 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:50:42,607 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-14 13:50:42,750 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre
2021-06-14 13:50:42,768 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:50:43,777 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-14 13:50:44,344 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=113.26674, max=113.26674, mean=113.26674, stddev=0.0, median=113.26674, p75=113.26674, p95=113.26674, p98=113.26674, p99=113.26674, p999=113.26674, mean_rate=0.982106304023102, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-14 13:50:44,345 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-06-14 13:50:44,345 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-14 13:50:44,345 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210614 13:50:44.353" endtime="20210614 13:50:44.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:50:44.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:50:44.354" endtime="20210614 13:50:44.354"/>
</kw>
<status status="PASS" starttime="20210614 13:50:41.344" endtime="20210614 13:50:44.355"/>
</kw>
<msg timestamp="20210614 13:50:44.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:50:41.344" endtime="20210614 13:50:44.355"/>
</kw>
<msg timestamp="20210614 13:50:44.355" level="INFO">${result} = 2021-06-14 13:50:42,424 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:50:42,607 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:50:41.343" endtime="20210614 13:50:44.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:50:44.355" endtime="20210614 13:50:44.356"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210614 13:50:41.343" endtime="20210614 13:50:44.356"/>
</test>
<test id="s1-s2-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:50:44.360" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:50:47.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:50:47.201" level="INFO">${output} = 2021-06-14 13:50:45,404 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:50:45,505 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:50:44.358" endtime="20210614 13:50:47.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:50:47.202" level="INFO">2021-06-14 13:50:45,404 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:50:45,505 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:50:45,505 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-14 13:50:45,639 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre
2021-06-14 13:50:45,653 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:50:46,655 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-14 13:50:47,188 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=14.707371, max=14.707371, mean=14.707371, stddev=0.0, median=14.707371, p75=14.707371, p95=14.707371, p98=14.707371, p99=14.707371, p999=14.707371, mean_rate=0.9894720764746344, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-14 13:50:47,189 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-06-14 13:50:47,189 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-14 13:50:47,189 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210614 13:50:47.202" endtime="20210614 13:50:47.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:50:47.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:50:47.202" endtime="20210614 13:50:47.203"/>
</kw>
<status status="PASS" starttime="20210614 13:50:44.358" endtime="20210614 13:50:47.203"/>
</kw>
<msg timestamp="20210614 13:50:47.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:50:44.358" endtime="20210614 13:50:47.203"/>
</kw>
<msg timestamp="20210614 13:50:47.204" level="INFO">${result} = 2021-06-14 13:50:45,404 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:50:45,505 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:50:44.357" endtime="20210614 13:50:47.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:50:47.204" endtime="20210614 13:50:47.204"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210614 13:50:44.356" endtime="20210614 13:50:47.204"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20210614 13:50:36.705" endtime="20210614 13:50:47.206"/>
</suite>
<suite id="s1-s3" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s3-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:51:39.594" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:51:44.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:51:44.085" level="INFO">${output} = 2021-06-14 13:51:40,595 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:51:40,711 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:51:39.591" endtime="20210614 13:51:44.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:51:44.086" level="INFO">2021-06-14 13:51:40,595 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:51:40,711 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:51:40,711 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-14 13:51:40,841 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-06-14 13:51:40,852 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:51:41,868 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:51:42,120 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-06-14 13:51:42,869 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-14 13:51:43,759 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=32.444552, max=32.444552, mean=32.444552, stddev=0.0, median=32.444552, p75=32.444552, p95=32.444552, p98=32.444552, p99=32.444552, p999=32.444552, mean_rate=0.9906306961079282, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-14 13:51:43,760 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-06-14 13:51:43,760 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-14 13:51:43,760 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210614 13:51:44.085" endtime="20210614 13:51:44.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:51:44.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:51:44.086" endtime="20210614 13:51:44.086"/>
</kw>
<status status="PASS" starttime="20210614 13:51:39.590" endtime="20210614 13:51:44.086"/>
</kw>
<msg timestamp="20210614 13:51:44.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:51:39.590" endtime="20210614 13:51:44.087"/>
</kw>
<msg timestamp="20210614 13:51:44.087" level="INFO">${result} = 2021-06-14 13:51:40,595 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:51:40,711 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:51:39.590" endtime="20210614 13:51:44.087"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:51:44.087" endtime="20210614 13:51:44.087"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210614 13:51:39.589" endtime="20210614 13:51:44.088"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20210614 13:51:39.558" endtime="20210614 13:51:44.089"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s4-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:52:01.620" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:52:05.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:52:05.841" level="INFO">${output} = 2021-06-14 13:52:02,683 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:52:02,791 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:52:01.616" endtime="20210614 13:52:05.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:52:05.842" level="INFO">2021-06-14 13:52:02,683 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:52:02,791 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:52:02,791 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-14 13:52:02,918 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-06-14 13:52:02,930 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:52:03,941 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:52:03,973 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-06-14 13:52:04,941 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-14 13:52:05,514 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=38.529298, max=38.529298, mean=38.529298, stddev=0.0, median=38.529298, p75=38.529298, p95=38.529298, p98=38.529298, p99=38.529298, p999=38.529298, mean_rate=0.9887979867123745, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-14 13:52:05,515 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-06-14 13:52:05,515 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-14 13:52:05,515 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210614 13:52:05.841" endtime="20210614 13:52:05.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:52:05.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:52:05.842" endtime="20210614 13:52:05.842"/>
</kw>
<status status="PASS" starttime="20210614 13:52:01.615" endtime="20210614 13:52:05.843"/>
</kw>
<msg timestamp="20210614 13:52:05.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:52:01.615" endtime="20210614 13:52:05.843"/>
</kw>
<msg timestamp="20210614 13:52:05.843" level="INFO">${result} = 2021-06-14 13:52:02,683 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:52:02,791 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:52:01.614" endtime="20210614 13:52:05.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:52:05.843" endtime="20210614 13:52:05.844"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210614 13:52:01.614" endtime="20210614 13:52:05.844"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20210614 13:52:01.579" endtime="20210614 13:52:05.845"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s5-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:50:50.734" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:50:54.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:50:54.718" level="INFO">${output} = 2021-06-14 13:50:51,659 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:50:51,780 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:50:50.730" endtime="20210614 13:50:54.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:50:54.720" level="INFO">2021-06-14 13:50:51,659 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:50:51,780 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:50:51,780 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-06-14 13:50:51,923 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-06-14 13:50:51,944 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:50:52,865 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-06-14 13:50:52,944 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-06-14 13:50:53,945 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-06-14 13:50:54,394 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=37.958303, max=37.958303, mean=37.958303, stddev=0.0, median=37.958303, p75=37.958303, p95=37.958303, p98=37.958303, p99=37.958303, p999=37.958303, mean_rate=0.9886188790801484, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-06-14 13:50:54,394 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-06-14 13:50:54,394 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-06-14 13:50:54,394 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20210614 13:50:54.719" endtime="20210614 13:50:54.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:50:54.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:50:54.720" endtime="20210614 13:50:54.720"/>
</kw>
<status status="PASS" starttime="20210614 13:50:50.730" endtime="20210614 13:50:54.721"/>
</kw>
<msg timestamp="20210614 13:50:54.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:50:50.730" endtime="20210614 13:50:54.721"/>
</kw>
<msg timestamp="20210614 13:50:54.721" level="INFO">${result} = 2021-06-14 13:50:51,659 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-06-14 13:50:51,780 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20210614 13:50:50.729" endtime="20210614 13:50:54.721"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:50:54.721" endtime="20210614 13:50:54.722"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210614 13:50:50.728" endtime="20210614 13:50:54.722"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20210614 13:50:50.698" endtime="20210614 13:50:54.723"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="33565"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Generate">restart.Generate</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">restart.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
