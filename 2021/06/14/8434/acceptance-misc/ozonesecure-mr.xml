<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210614 13:49:51.400" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:45:50.776" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:45:54.249" level="INFO">${rc} = 255</msg>
<msg timestamp="20210614 13:45:54.250" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210614 13:45:50.773" endtime="20210614 13:45:54.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:45:54.251" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210614 13:45:54.250" endtime="20210614 13:45:54.251"/>
</kw>
<msg timestamp="20210614 13:45:54.251" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210614 13:45:50.773" endtime="20210614 13:45:54.251"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:45:54.255" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:45:57.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:45:57.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210614 13:45:54.253" endtime="20210614 13:45:57.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:45:57.091" level="INFO"/>
<status status="PASS" starttime="20210614 13:45:57.090" endtime="20210614 13:45:57.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:45:57.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:45:57.091" endtime="20210614 13:45:57.092"/>
</kw>
<status status="PASS" starttime="20210614 13:45:54.253" endtime="20210614 13:45:57.092"/>
</kw>
<msg timestamp="20210614 13:45:57.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:45:54.252" endtime="20210614 13:45:57.092"/>
</kw>
<msg timestamp="20210614 13:45:57.092" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210614 13:45:54.252" endtime="20210614 13:45:57.092"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:45:57.093" endtime="20210614 13:45:57.093"/>
</kw>
<status status="PASS" starttime="20210614 13:45:54.252" endtime="20210614 13:45:57.093"/>
</kw>
<status status="PASS" starttime="20210614 13:45:54.251" endtime="20210614 13:45:57.093"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:45:57.097" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:45:59.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:45:59.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210614 13:45:57.095" endtime="20210614 13:45:59.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:45:59.850" level="INFO"/>
<status status="PASS" starttime="20210614 13:45:59.849" endtime="20210614 13:45:59.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:45:59.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:45:59.850" endtime="20210614 13:45:59.850"/>
</kw>
<status status="PASS" starttime="20210614 13:45:57.095" endtime="20210614 13:45:59.850"/>
</kw>
<msg timestamp="20210614 13:45:59.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:45:57.095" endtime="20210614 13:45:59.851"/>
</kw>
<status status="PASS" starttime="20210614 13:45:57.094" endtime="20210614 13:45:59.851"/>
</kw>
<status status="PASS" starttime="20210614 13:45:57.094" endtime="20210614 13:45:59.851"/>
</kw>
<status status="PASS" starttime="20210614 13:45:57.093" endtime="20210614 13:45:59.851"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210614 13:45:59.851" endtime="20210614 13:45:59.851"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:45:59.856" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:46:02.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:46:02.886" level="INFO">${output} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210614 13:45:59.853" endtime="20210614 13:46:02.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:46:02.887" level="INFO">{
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-14T13:45:59.770Z",
  "modificationTime" : "2021-06-14T13:45:59.770Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210614 13:46:02.887" endtime="20210614 13:46:02.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:46:02.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:46:02.887" endtime="20210614 13:46:02.888"/>
</kw>
<status status="PASS" starttime="20210614 13:45:59.852" endtime="20210614 13:46:02.888"/>
</kw>
<msg timestamp="20210614 13:46:02.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:45:59.852" endtime="20210614 13:46:02.888"/>
</kw>
<msg timestamp="20210614 13:46:02.889" level="INFO">${result} = {
  "metadata" : {
    "ozone.om.metadata.layout" : "SIMPLE",
    "ozone.om.enable.filesystem.paths" : "false"
  },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versi...</msg>
<status status="PASS" starttime="20210614 13:45:59.852" endtime="20210614 13:46:02.889"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:46:02.889" endtime="20210614 13:46:02.889"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210614 13:46:02.893" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210614 13:46:02.892" endtime="20210614 13:46:02.893"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210614 13:46:02.893" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210614 13:46:02.893" endtime="20210614 13:46:02.893"/>
</kw>
<status status="PASS" starttime="20210614 13:46:02.892" endtime="20210614 13:46:02.893"/>
</kw>
<msg timestamp="20210614 13:46:02.893" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210614 13:46:02.891" endtime="20210614 13:46:02.893"/>
</kw>
<status status="PASS" starttime="20210614 13:46:02.890" endtime="20210614 13:46:02.894"/>
</kw>
<msg timestamp="20210614 13:46:02.894" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210614 13:46:02.890" endtime="20210614 13:46:02.894"/>
</kw>
<msg timestamp="20210614 13:46:02.894" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210614 13:46:02.889" endtime="20210614 13:46:02.894"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:46:02.897" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:46:05.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:46:05.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210614 13:46:02.895" endtime="20210614 13:46:05.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:46:05.679" level="INFO"/>
<status status="PASS" starttime="20210614 13:46:05.679" endtime="20210614 13:46:05.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:46:05.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:46:05.680" endtime="20210614 13:46:05.680"/>
</kw>
<status status="PASS" starttime="20210614 13:46:02.895" endtime="20210614 13:46:05.680"/>
</kw>
<msg timestamp="20210614 13:46:05.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:46:02.895" endtime="20210614 13:46:05.681"/>
</kw>
<status status="PASS" starttime="20210614 13:46:02.894" endtime="20210614 13:46:05.681"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:46:05.684" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:46:11.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:46:11.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210614 13:46:05.682" endtime="20210614 13:46:11.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:46:11.769" level="INFO"/>
<status status="PASS" starttime="20210614 13:46:11.768" endtime="20210614 13:46:11.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:46:11.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:46:11.769" endtime="20210614 13:46:11.770"/>
</kw>
<status status="PASS" starttime="20210614 13:46:05.682" endtime="20210614 13:46:11.770"/>
</kw>
<msg timestamp="20210614 13:46:11.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:46:05.681" endtime="20210614 13:46:11.770"/>
</kw>
<status status="PASS" starttime="20210614 13:46:05.681" endtime="20210614 13:46:11.770"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:46:11.774" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:46:16.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:46:16.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210614 13:46:11.772" endtime="20210614 13:46:16.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:46:16.463" level="INFO"/>
<status status="PASS" starttime="20210614 13:46:16.463" endtime="20210614 13:46:16.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:46:16.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:46:16.463" endtime="20210614 13:46:16.464"/>
</kw>
<status status="PASS" starttime="20210614 13:46:11.771" endtime="20210614 13:46:16.464"/>
</kw>
<msg timestamp="20210614 13:46:16.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:46:11.771" endtime="20210614 13:46:16.464"/>
</kw>
<status status="PASS" starttime="20210614 13:46:11.771" endtime="20210614 13:46:16.465"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:46:16.468" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:46:21.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:46:21.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210614 13:46:16.466" endtime="20210614 13:46:21.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:46:21.171" level="INFO"/>
<status status="PASS" starttime="20210614 13:46:21.170" endtime="20210614 13:46:21.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:46:21.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:46:21.171" endtime="20210614 13:46:21.172"/>
</kw>
<status status="PASS" starttime="20210614 13:46:16.466" endtime="20210614 13:46:21.172"/>
</kw>
<msg timestamp="20210614 13:46:21.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:46:16.465" endtime="20210614 13:46:21.172"/>
</kw>
<status status="PASS" starttime="20210614 13:46:16.465" endtime="20210614 13:46:21.172"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210614 13:45:50.772" endtime="20210614 13:46:21.173"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210614 13:46:21.177" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210614 13:46:21.177" endtime="20210614 13:46:21.177"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210614 13:46:21.178" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210614 13:46:21.177" endtime="20210614 13:46:21.178"/>
</kw>
<status status="PASS" starttime="20210614 13:46:21.176" endtime="20210614 13:46:21.178"/>
</kw>
<msg timestamp="20210614 13:46:21.178" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210614 13:46:21.176" endtime="20210614 13:46:21.178"/>
</kw>
<status status="PASS" starttime="20210614 13:46:21.175" endtime="20210614 13:46:21.178"/>
</kw>
<msg timestamp="20210614 13:46:21.178" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210614 13:46:21.174" endtime="20210614 13:46:21.179"/>
</kw>
<msg timestamp="20210614 13:46:21.179" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210614 13:46:21.174" endtime="20210614 13:46:21.179"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:46:21.182" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:46:23.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:46:23.805" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210614 13:46:21.180" endtime="20210614 13:46:23.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:46:23.807" level="INFO"/>
<status status="PASS" starttime="20210614 13:46:23.806" endtime="20210614 13:46:23.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:46:23.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:46:23.807" endtime="20210614 13:46:23.807"/>
</kw>
<status status="PASS" starttime="20210614 13:46:21.179" endtime="20210614 13:46:23.808"/>
</kw>
<msg timestamp="20210614 13:46:23.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:46:21.179" endtime="20210614 13:46:23.808"/>
</kw>
<status status="PASS" starttime="20210614 13:46:21.179" endtime="20210614 13:46:23.808"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:46:23.811" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:46:26.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:46:26.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210614 13:46:23.809" endtime="20210614 13:46:26.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:46:26.735" level="INFO"/>
<status status="PASS" starttime="20210614 13:46:26.734" endtime="20210614 13:46:26.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:46:26.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:46:26.735" endtime="20210614 13:46:26.735"/>
</kw>
<status status="PASS" starttime="20210614 13:46:23.809" endtime="20210614 13:46:26.736"/>
</kw>
<msg timestamp="20210614 13:46:26.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:46:23.809" endtime="20210614 13:46:26.736"/>
</kw>
<status status="PASS" starttime="20210614 13:46:23.808" endtime="20210614 13:46:26.736"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210614 13:46:21.173" endtime="20210614 13:46:26.736"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210614 13:45:50.728" endtime="20210614 13:46:26.737"/>
</suite>
<suite id="s1-s2" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210614 13:48:33.859" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210614 13:48:33.858" endtime="20210614 13:48:33.859"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210614 13:48:33.859" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210614 13:48:33.859" endtime="20210614 13:48:33.859"/>
</kw>
<status status="PASS" starttime="20210614 13:48:33.858" endtime="20210614 13:48:33.859"/>
</kw>
<msg timestamp="20210614 13:48:33.859" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210614 13:48:33.857" endtime="20210614 13:48:33.860"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210614 13:48:33.860" endtime="20210614 13:48:33.860"/>
</kw>
<msg timestamp="20210614 13:48:33.860" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210614 13:48:33.860" endtime="20210614 13:48:33.860"/>
</kw>
<status status="PASS" starttime="20210614 13:48:33.857" endtime="20210614 13:48:33.861"/>
</kw>
<msg timestamp="20210614 13:48:33.861" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210614 13:48:33.856" endtime="20210614 13:48:33.861"/>
</kw>
<msg timestamp="20210614 13:48:33.861" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210614 13:48:33.855" endtime="20210614 13:48:33.861"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210614 13:48:33.861" level="INFO">${random} = 04888</msg>
<status status="PASS" starttime="20210614 13:48:33.861" endtime="20210614 13:48:33.861"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:48:33.866" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-04888 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:48:37.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:48:37.022" level="INFO">${output} = 2021-06-14 13:48:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-14 13:48:35 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210614 13:48:33.863" endtime="20210614 13:48:37.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:48:37.023" level="INFO">2021-06-14 13:48:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-14 13:48:35 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:48:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-14 13:48:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-14 13:48:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BF0B124AAB26-&gt;5f3eb625-7d7a-495a-a10d-c8506f4143cc
2021-06-14 13:48:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210614 13:48:37.022" endtime="20210614 13:48:37.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:48:37.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:48:37.023" endtime="20210614 13:48:37.023"/>
</kw>
<status status="PASS" starttime="20210614 13:48:33.862" endtime="20210614 13:48:37.024"/>
</kw>
<msg timestamp="20210614 13:48:37.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:48:33.862" endtime="20210614 13:48:37.024"/>
</kw>
<msg timestamp="20210614 13:48:37.024" level="INFO">${result} = 2021-06-14 13:48:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-14 13:48:35 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210614 13:48:33.862" endtime="20210614 13:48:37.024"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:48:37.027" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:48:38.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:48:38.598" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-14 13:46 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-14 13:48 ofs://om/volume1/bucket1/ozone-04888
-rw-...</msg>
<status status="PASS" starttime="20210614 13:48:37.025" endtime="20210614 13:48:38.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:48:38.599" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-14 13:46 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-14 13:48 ofs://om/volume1/bucket1/ozone-04888
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-14 13:47 ofs://om/volume1/bucket1/ozone-14423
drwxrwxrwx   - hadoop hadoop          0 2021-06-14 13:46 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-06-14 13:48 ofs://om/volume1/bucket1/wordcount-By8gNYNq.txt</msg>
<status status="PASS" starttime="20210614 13:48:38.598" endtime="20210614 13:48:38.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:48:38.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:48:38.599" endtime="20210614 13:48:38.599"/>
</kw>
<status status="PASS" starttime="20210614 13:48:37.025" endtime="20210614 13:48:38.599"/>
</kw>
<msg timestamp="20210614 13:48:38.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:48:37.025" endtime="20210614 13:48:38.600"/>
</kw>
<msg timestamp="20210614 13:48:38.600" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-14 13:46 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-14 13:48 ofs://om/volume1/bucket1/ozone-04888
-rw-...</msg>
<status status="PASS" starttime="20210614 13:48:37.024" endtime="20210614 13:48:38.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:48:38.600" endtime="20210614 13:48:38.600"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210614 13:48:33.855" endtime="20210614 13:48:38.601"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210614 13:48:33.807" endtime="20210614 13:48:38.601"/>
</suite>
<suite id="s1-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210614 13:47:19.435" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210614 13:47:19.435" endtime="20210614 13:47:19.435"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210614 13:47:19.436" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210614 13:47:19.436" endtime="20210614 13:47:19.436"/>
</kw>
<status status="PASS" starttime="20210614 13:47:19.435" endtime="20210614 13:47:19.436"/>
</kw>
<msg timestamp="20210614 13:47:19.436" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210614 13:47:19.434" endtime="20210614 13:47:19.436"/>
</kw>
<status status="PASS" starttime="20210614 13:47:19.434" endtime="20210614 13:47:19.436"/>
</kw>
<msg timestamp="20210614 13:47:19.436" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210614 13:47:19.433" endtime="20210614 13:47:19.436"/>
</kw>
<msg timestamp="20210614 13:47:19.437" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210614 13:47:19.433" endtime="20210614 13:47:19.437"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210614 13:47:19.437" level="INFO">${random} = 14423</msg>
<status status="PASS" starttime="20210614 13:47:19.437" endtime="20210614 13:47:19.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:47:19.442" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-14423 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:47:23.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:47:23.440" level="INFO">${output} = 2021-06-14 13:47:21 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-14 13:47:21 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210614 13:47:19.438" endtime="20210614 13:47:23.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:47:23.441" level="INFO">2021-06-14 13:47:21 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-14 13:47:21 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:47:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-14 13:47:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-14 13:47:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D58C39F4FD9A-&gt;5f3eb625-7d7a-495a-a10d-c8506f4143cc
2021-06-14 13:47:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210614 13:47:23.440" endtime="20210614 13:47:23.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:47:23.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:47:23.441" endtime="20210614 13:47:23.442"/>
</kw>
<status status="PASS" starttime="20210614 13:47:19.438" endtime="20210614 13:47:23.442"/>
</kw>
<msg timestamp="20210614 13:47:23.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:47:19.438" endtime="20210614 13:47:23.442"/>
</kw>
<msg timestamp="20210614 13:47:23.442" level="INFO">${result} = 2021-06-14 13:47:21 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-14 13:47:21 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210614 13:47:19.437" endtime="20210614 13:47:23.442"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:47:23.445" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:47:25.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:47:25.100" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-14 13:46 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-14 13:47 o3fs://bucket1.volume1.om/ozone-14423
dr...</msg>
<status status="PASS" starttime="20210614 13:47:23.444" endtime="20210614 13:47:25.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:47:25.101" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-14 13:46 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-14 13:47 o3fs://bucket1.volume1.om/ozone-14423
drwxrwxrwx   - hadoop hadoop          0 2021-06-14 13:46 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210614 13:47:25.101" endtime="20210614 13:47:25.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:47:25.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:47:25.101" endtime="20210614 13:47:25.102"/>
</kw>
<status status="PASS" starttime="20210614 13:47:23.443" endtime="20210614 13:47:25.102"/>
</kw>
<msg timestamp="20210614 13:47:25.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:47:23.443" endtime="20210614 13:47:25.102"/>
</kw>
<msg timestamp="20210614 13:47:25.102" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-14 13:46 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-14 13:47 o3fs://bucket1.volume1.om/ozone-14423
dr...</msg>
<status status="PASS" starttime="20210614 13:47:23.442" endtime="20210614 13:47:25.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:47:25.103" endtime="20210614 13:47:25.103"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210614 13:47:19.432" endtime="20210614 13:47:25.103"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210614 13:47:19.391" endtime="20210614 13:47:25.104"/>
</suite>
<suite id="s1-s4" name="Kinit-Hadoop" source="/opt/ozone/smoketest/kinit-hadoop.robot">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:47:14.892" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:47:14.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:47:14.898" level="INFO">${output} = rm</msg>
<status status="PASS" starttime="20210614 13:47:14.889" endtime="20210614 13:47:14.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:47:14.899" level="INFO">rm</msg>
<status status="PASS" starttime="20210614 13:47:14.898" endtime="20210614 13:47:14.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:47:14.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:47:14.899" endtime="20210614 13:47:14.899"/>
</kw>
<status status="PASS" starttime="20210614 13:47:14.888" endtime="20210614 13:47:14.899"/>
</kw>
<msg timestamp="20210614 13:47:14.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:47:14.888" endtime="20210614 13:47:14.900"/>
</kw>
<msg timestamp="20210614 13:47:14.900" level="INFO">${instance} = rm</msg>
<status status="PASS" starttime="20210614 13:47:14.888" endtime="20210614 13:47:14.900"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210614 13:47:14.901" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210614 13:47:14.900" endtime="20210614 13:47:14.901"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:47:14.904" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:47:14.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:47:14.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210614 13:47:14.902" endtime="20210614 13:47:14.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:47:14.911" level="INFO"/>
<status status="PASS" starttime="20210614 13:47:14.911" endtime="20210614 13:47:14.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:47:14.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:47:14.912" endtime="20210614 13:47:14.912"/>
</kw>
<status status="PASS" starttime="20210614 13:47:14.902" endtime="20210614 13:47:14.912"/>
</kw>
<msg timestamp="20210614 13:47:14.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:47:14.902" endtime="20210614 13:47:14.912"/>
</kw>
<status status="PASS" starttime="20210614 13:47:14.901" endtime="20210614 13:47:14.913"/>
</kw>
<status status="PASS" starttime="20210614 13:47:14.901" endtime="20210614 13:47:14.913"/>
</kw>
<status status="PASS" starttime="20210614 13:47:14.887" endtime="20210614 13:47:14.913"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210614 13:47:14.887" endtime="20210614 13:47:14.913"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210614 13:47:14.846" endtime="20210614 13:47:14.913"/>
</suite>
<suite id="s1-s5" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:45:46.147" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:45:46.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:45:46.149" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210614 13:45:46.144" endtime="20210614 13:45:46.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:45:46.150" level="INFO">om</msg>
<status status="PASS" starttime="20210614 13:45:46.150" endtime="20210614 13:45:46.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:45:46.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:45:46.151" endtime="20210614 13:45:46.151"/>
</kw>
<status status="PASS" starttime="20210614 13:45:46.143" endtime="20210614 13:45:46.151"/>
</kw>
<msg timestamp="20210614 13:45:46.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:45:46.143" endtime="20210614 13:45:46.151"/>
</kw>
<msg timestamp="20210614 13:45:46.152" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20210614 13:45:46.142" endtime="20210614 13:45:46.152"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210614 13:45:46.152" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210614 13:45:46.152" endtime="20210614 13:45:46.152"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:45:46.156" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:45:46.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:45:46.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210614 13:45:46.154" endtime="20210614 13:45:46.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:45:46.162" level="INFO"/>
<status status="PASS" starttime="20210614 13:45:46.162" endtime="20210614 13:45:46.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:45:46.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:45:46.162" endtime="20210614 13:45:46.163"/>
</kw>
<status status="PASS" starttime="20210614 13:45:46.154" endtime="20210614 13:45:46.163"/>
</kw>
<msg timestamp="20210614 13:45:46.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:45:46.153" endtime="20210614 13:45:46.163"/>
</kw>
<status status="PASS" starttime="20210614 13:45:46.153" endtime="20210614 13:45:46.164"/>
</kw>
<status status="PASS" starttime="20210614 13:45:46.153" endtime="20210614 13:45:46.164"/>
</kw>
<status status="PASS" starttime="20210614 13:45:46.142" endtime="20210614 13:45:46.164"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210614 13:45:46.141" endtime="20210614 13:45:46.164"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210614 13:45:46.103" endtime="20210614 13:45:46.165"/>
</suite>
<suite id="s1-s6" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:48:43.089" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:48:43.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:48:43.093" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:48:43.085" endtime="20210614 13:48:43.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:48:43.095" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:48:43.094" endtime="20210614 13:48:43.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:48:43.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:48:43.095" endtime="20210614 13:48:43.095"/>
</kw>
<status status="PASS" starttime="20210614 13:48:43.084" endtime="20210614 13:48:43.096"/>
</kw>
<msg timestamp="20210614 13:48:43.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:48:43.084" endtime="20210614 13:48:43.096"/>
</kw>
<msg timestamp="20210614 13:48:43.096" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:48:43.083" endtime="20210614 13:48:43.097"/>
</kw>
<msg timestamp="20210614 13:48:43.098" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:48:43.083" endtime="20210614 13:48:43.098"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210614 13:48:43.101" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210614 13:48:43.100" endtime="20210614 13:48:43.101"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210614 13:48:43.101" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210614 13:48:43.101" endtime="20210614 13:48:43.101"/>
</kw>
<status status="PASS" starttime="20210614 13:48:43.100" endtime="20210614 13:48:43.101"/>
</kw>
<msg timestamp="20210614 13:48:43.101" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210614 13:48:43.100" endtime="20210614 13:48:43.101"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210614 13:48:43.102" endtime="20210614 13:48:43.102"/>
</kw>
<msg timestamp="20210614 13:48:43.102" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210614 13:48:43.102" endtime="20210614 13:48:43.103"/>
</kw>
<status status="PASS" starttime="20210614 13:48:43.099" endtime="20210614 13:48:43.103"/>
</kw>
<msg timestamp="20210614 13:48:43.103" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210614 13:48:43.098" endtime="20210614 13:48:43.103"/>
</kw>
<msg timestamp="20210614 13:48:43.103" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210614 13:48:43.098" endtime="20210614 13:48:43.103"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:48:43.106" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:49:16.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:49:16.323" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-14 13:48:44 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-14 13:48:44 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210614 13:48:43.105" endtime="20210614 13:49:16.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:49:16.324" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-14 13:48:44 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-14 13:48:44 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:48:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-14 13:48:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-14 13:48:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2E4FA2DACD3A-&gt;5f3eb625-7d7a-495a-a10d-c8506f4143cc
2021-06-14 13:48:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-06-14 13:48:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-480593399F66-&gt;a1a13002-e2bc-4f70-8f33-22c8e34facfe
2021-06-14 13:48:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-06-14 13:48:46 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.7:8032
2021-06-14 13:48:46 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
2021-06-14 13:48:46 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623678526354, maxDate=1624283326354, sequenceNumber=3, masterKeyId=2))
2021-06-14 13:48:46 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b7 c6 a0 d6 a0 2f 38 b7 ce d2 f6 a2 2f 40 03 48 01 5a 0d 33 30 33 35 30 35 31 32 31 33 31 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-14 13:48:46 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623678526354, maxDate=1624283326354, sequenceNumber=3, masterKeyId=2)
2021-06-14 13:48:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-14 13:48:49 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-14 13:48:49 INFO  JobSubmitter:202 - number of splits:3
2021-06-14 13:48:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1623678302528_0003
2021-06-14 13:48:49 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623678526354, maxDate=1624283326354, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b7 c6 a0 d6 a0 2f 38 b7 ce d2 f6 a2 2f 40 03 48 01 5a 0d 33 30 33 35 30 35 31 32 31 33 31 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-14 13:48:49 INFO  Configuration:2795 - resource-types.xml not found
2021-06-14 13:48:49 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-14 13:48:49 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-14 13:48:50 INFO  YarnClientImpl:329 - Submitted application application_1623678302528_0003
2021-06-14 13:48:50 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1623678302528_0003/
2021-06-14 13:48:50 INFO  Job:1614 - Running job: job_1623678302528_0003
2021-06-14 13:48:57 INFO  Job:1635 - Job job_1623678302528_0003 running in uber mode : false
2021-06-14 13:48:57 INFO  Job:1642 -  map 0% reduce 0%
2021-06-14 13:49:06 INFO  Job:1642 -  map 33% reduce 0%
2021-06-14 13:49:08 INFO  Job:1642 -  map 100% reduce 0%
2021-06-14 13:49:14 INFO  Job:1642 -  map 100% reduce 100%
2021-06-14 13:49:15 INFO  Job:1653 - Job job_1623678302528_0003 completed successfully
2021-06-14 13:49:15 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1129821
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36126
		Total time spent by all reduces in occupied slots (ms)=11522
		Total time spent by all map tasks (ms)=18063
		Total time spent by all reduce tasks (ms)=5761
		Total vcore-milliseconds taken by all map tasks=18063
		Total vcore-milliseconds taken by all reduce tasks=5761
		Total megabyte-milliseconds taken by all map tasks=36993024
		Total megabyte-milliseconds taken by all reduce tasks=11798528
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=891
		CPU time spent (ms)=6140
		Physical memory (bytes) snapshot=1467297792
		Virtual memory (bytes) snapshot=14014799872
		Total committed heap usage (bytes)=1288175616
		Peak Map Physical memory (bytes)=394149888
		Peak Map Virtual memory (bytes)=3509526528
		Peak Reduce Physical memory (bytes)=308563968
		Peak Reduce Virtual memory (bytes)=3509542912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.882 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210614 13:49:16.324" endtime="20210614 13:49:16.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:49:16.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:49:16.325" endtime="20210614 13:49:16.325"/>
</kw>
<status status="PASS" starttime="20210614 13:48:43.104" endtime="20210614 13:49:16.325"/>
</kw>
<msg timestamp="20210614 13:49:16.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:48:43.104" endtime="20210614 13:49:16.325"/>
</kw>
<msg timestamp="20210614 13:49:16.326" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-14 13:48:44 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-14 13:48:44 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210614 13:48:43.103" endtime="20210614 13:49:16.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:49:16.326" endtime="20210614 13:49:16.326"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210614 13:48:43.082" endtime="20210614 13:49:16.326"/>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:49:16.331" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:49:16.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:49:16.339" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:49:16.329" endtime="20210614 13:49:16.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:49:16.340" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:49:16.339" endtime="20210614 13:49:16.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:49:16.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:49:16.340" endtime="20210614 13:49:16.340"/>
</kw>
<status status="PASS" starttime="20210614 13:49:16.329" endtime="20210614 13:49:16.341"/>
</kw>
<msg timestamp="20210614 13:49:16.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:49:16.328" endtime="20210614 13:49:16.341"/>
</kw>
<msg timestamp="20210614 13:49:16.341" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:49:16.328" endtime="20210614 13:49:16.341"/>
</kw>
<msg timestamp="20210614 13:49:16.341" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:49:16.328" endtime="20210614 13:49:16.341"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210614 13:49:16.342" level="INFO">${random} = lu0dqR94</msg>
<status status="PASS" starttime="20210614 13:49:16.341" endtime="20210614 13:49:16.342"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210614 13:49:16.345" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210614 13:49:16.344" endtime="20210614 13:49:16.345"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210614 13:49:16.345" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210614 13:49:16.345" endtime="20210614 13:49:16.345"/>
</kw>
<status status="PASS" starttime="20210614 13:49:16.344" endtime="20210614 13:49:16.345"/>
</kw>
<msg timestamp="20210614 13:49:16.345" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210614 13:49:16.344" endtime="20210614 13:49:16.345"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210614 13:49:16.346" endtime="20210614 13:49:16.346"/>
</kw>
<msg timestamp="20210614 13:49:16.346" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210614 13:49:16.345" endtime="20210614 13:49:16.346"/>
</kw>
<status status="PASS" starttime="20210614 13:49:16.343" endtime="20210614 13:49:16.346"/>
</kw>
<msg timestamp="20210614 13:49:16.346" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210614 13:49:16.343" endtime="20210614 13:49:16.346"/>
</kw>
<msg timestamp="20210614 13:49:16.347" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210614 13:49:16.342" endtime="20210614 13:49:16.347"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210614 13:49:16.349" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210614 13:49:16.349" endtime="20210614 13:49:16.349"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210614 13:49:16.350" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210614 13:49:16.349" endtime="20210614 13:49:16.350"/>
</kw>
<status status="PASS" starttime="20210614 13:49:16.349" endtime="20210614 13:49:16.350"/>
</kw>
<msg timestamp="20210614 13:49:16.350" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210614 13:49:16.348" endtime="20210614 13:49:16.350"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210614 13:49:16.351" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210614 13:49:16.351" endtime="20210614 13:49:16.351"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210614 13:49:16.352" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210614 13:49:16.351" endtime="20210614 13:49:16.352"/>
</kw>
<status status="PASS" starttime="20210614 13:49:16.351" endtime="20210614 13:49:16.352"/>
</kw>
<msg timestamp="20210614 13:49:16.352" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210614 13:49:16.350" endtime="20210614 13:49:16.352"/>
</kw>
<status status="PASS" starttime="20210614 13:49:16.348" endtime="20210614 13:49:16.352"/>
</kw>
<msg timestamp="20210614 13:49:16.352" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210614 13:49:16.347" endtime="20210614 13:49:16.352"/>
</kw>
<msg timestamp="20210614 13:49:16.353" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210614 13:49:16.347" endtime="20210614 13:49:16.353"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210614 13:49:16.355" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210614 13:49:16.355" endtime="20210614 13:49:16.355"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210614 13:49:16.356" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210614 13:49:16.355" endtime="20210614 13:49:16.356"/>
</kw>
<status status="PASS" starttime="20210614 13:49:16.354" endtime="20210614 13:49:16.356"/>
</kw>
<msg timestamp="20210614 13:49:16.356" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210614 13:49:16.354" endtime="20210614 13:49:16.356"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210614 13:49:16.357" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210614 13:49:16.357" endtime="20210614 13:49:16.357"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210614 13:49:16.358" level="INFO">${result} = /wordcount-lu0dqR94.txt</msg>
<status status="PASS" starttime="20210614 13:49:16.357" endtime="20210614 13:49:16.358"/>
</kw>
<status status="PASS" starttime="20210614 13:49:16.356" endtime="20210614 13:49:16.358"/>
</kw>
<msg timestamp="20210614 13:49:16.358" level="INFO">${path_with_leading} = /wordcount-lu0dqR94.txt</msg>
<status status="PASS" starttime="20210614 13:49:16.356" endtime="20210614 13:49:16.358"/>
</kw>
<status status="PASS" starttime="20210614 13:49:16.354" endtime="20210614 13:49:16.358"/>
</kw>
<msg timestamp="20210614 13:49:16.358" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-lu0dqR94.txt</msg>
<status status="PASS" starttime="20210614 13:49:16.353" endtime="20210614 13:49:16.358"/>
</kw>
<msg timestamp="20210614 13:49:16.358" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-lu0dqR94.txt</msg>
<status status="PASS" starttime="20210614 13:49:16.353" endtime="20210614 13:49:16.358"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:49:16.361" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-lu0dqR94.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:49:44.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:49:44.492" level="INFO">${output} = 2021-06-14 13:49:17 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.7:8032
2021-06-14 13:49:18 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
20...</msg>
<status status="PASS" starttime="20210614 13:49:16.360" endtime="20210614 13:49:44.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:49:44.493" level="INFO">2021-06-14 13:49:17 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.7:8032
2021-06-14 13:49:18 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
2021-06-14 13:49:18 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623678558250, maxDate=1624283358250, sequenceNumber=4, masterKeyId=2))
2021-06-14 13:49:18 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d8 bf a2 d6 a0 2f 38 d8 c7 d4 f6 a2 2f 40 04 48 01 5a 0d 33 30 33 35 30 35 31 32 31 33 31 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-14 13:49:18 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623678558250, maxDate=1624283358250, sequenceNumber=4, masterKeyId=2)
2021-06-14 13:49:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-14 13:49:18 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-14 13:49:18 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:49:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-14 13:49:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-14 13:49:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8F0CEE4E4DE6-&gt;5f3eb625-7d7a-495a-a10d-c8506f4143cc
2021-06-14 13:49:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-14 13:49:19 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-14 13:49:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ABF3FC5F549A-&gt;a1a13002-e2bc-4f70-8f33-22c8e34facfe
2021-06-14 13:49:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-14 13:49:19 INFO  JobSubmitter:202 - number of splits:3
2021-06-14 13:49:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1623678302528_0004
2021-06-14 13:49:19 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623678558250, maxDate=1624283358250, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d8 bf a2 d6 a0 2f 38 d8 c7 d4 f6 a2 2f 40 04 48 01 5a 0d 33 30 33 35 30 35 31 32 31 33 31 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-14 13:49:20 INFO  Configuration:2795 - resource-types.xml not found
2021-06-14 13:49:20 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-14 13:49:20 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-14 13:49:20 INFO  YarnClientImpl:329 - Submitted application application_1623678302528_0004
2021-06-14 13:49:20 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1623678302528_0004/
2021-06-14 13:49:20 INFO  Job:1614 - Running job: job_1623678302528_0004
2021-06-14 13:49:27 INFO  Job:1635 - Job job_1623678302528_0004 running in uber mode : false
2021-06-14 13:49:27 INFO  Job:1642 -  map 0% reduce 0%
2021-06-14 13:49:36 INFO  Job:1642 -  map 33% reduce 0%
2021-06-14 13:49:38 INFO  Job:1642 -  map 100% reduce 0%
2021-06-14 13:49:43 INFO  Job:1642 -  map 100% reduce 100%
2021-06-14 13:49:44 INFO  Job:1653 - Job job_1623678302528_0004 completed successfully
2021-06-14 13:49:44 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1192487
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39729
		OFS: Number of bytes written=22209
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37700
		Total time spent by all reduces in occupied slots (ms)=6012
		Total time spent by all map tasks (ms)=18850
		Total time spent by all reduce tasks (ms)=3006
		Total vcore-milliseconds taken by all map tasks=18850
		Total vcore-milliseconds taken by all reduce tasks=3006
		Total megabyte-milliseconds taken by all map tasks=38604800
		Total megabyte-milliseconds taken by all reduce tasks=6156288
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=931
		CPU time spent (ms)=6720
		Physical memory (bytes) snapshot=1499258880
		Virtual memory (bytes) snapshot=14049026048
		Total committed heap usage (bytes)=1289224192
		Peak Map Physical memory (bytes)=388243456
		Peak Map Virtual memory (bytes)=3511279616
		Peak Reduce Physical memory (bytes)=336347136
		Peak Reduce Virtual memory (bytes)=3527385088
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209</msg>
<status status="PASS" starttime="20210614 13:49:44.493" endtime="20210614 13:49:44.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:49:44.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:49:44.493" endtime="20210614 13:49:44.494"/>
</kw>
<status status="PASS" starttime="20210614 13:49:16.359" endtime="20210614 13:49:44.494"/>
</kw>
<msg timestamp="20210614 13:49:44.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:49:16.359" endtime="20210614 13:49:44.494"/>
</kw>
<msg timestamp="20210614 13:49:44.495" level="INFO">${output} = 2021-06-14 13:49:17 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.7:8032
2021-06-14 13:49:18 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
20...</msg>
<status status="PASS" starttime="20210614 13:49:16.358" endtime="20210614 13:49:44.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:49:44.495" endtime="20210614 13:49:44.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:49:44.495" endtime="20210614 13:49:44.496"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210614 13:49:16.327" endtime="20210614 13:49:44.496"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210614 13:48:43.042" endtime="20210614 13:49:44.497"/>
</suite>
<suite id="s1-s7" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:47:29.617" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:47:29.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:47:29.623" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:47:29.614" endtime="20210614 13:47:29.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:47:29.623" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:47:29.623" endtime="20210614 13:47:29.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:47:29.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:47:29.624" endtime="20210614 13:47:29.624"/>
</kw>
<status status="PASS" starttime="20210614 13:47:29.613" endtime="20210614 13:47:29.624"/>
</kw>
<msg timestamp="20210614 13:47:29.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:47:29.613" endtime="20210614 13:47:29.624"/>
</kw>
<msg timestamp="20210614 13:47:29.624" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:47:29.613" endtime="20210614 13:47:29.625"/>
</kw>
<msg timestamp="20210614 13:47:29.625" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:47:29.612" endtime="20210614 13:47:29.626"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210614 13:47:29.628" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210614 13:47:29.628" endtime="20210614 13:47:29.628"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210614 13:47:29.629" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210614 13:47:29.628" endtime="20210614 13:47:29.629"/>
</kw>
<status status="PASS" starttime="20210614 13:47:29.628" endtime="20210614 13:47:29.629"/>
</kw>
<msg timestamp="20210614 13:47:29.629" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210614 13:47:29.627" endtime="20210614 13:47:29.629"/>
</kw>
<status status="PASS" starttime="20210614 13:47:29.627" endtime="20210614 13:47:29.629"/>
</kw>
<msg timestamp="20210614 13:47:29.629" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210614 13:47:29.626" endtime="20210614 13:47:29.629"/>
</kw>
<msg timestamp="20210614 13:47:29.630" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210614 13:47:29.626" endtime="20210614 13:47:29.630"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:47:29.632" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:48:00.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:48:00.611" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-14 13:47:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-14 13:47:31 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210614 13:47:29.631" endtime="20210614 13:48:00.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:48:00.612" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-14 13:47:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-14 13:47:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:47:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-14 13:47:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-14 13:47:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-23C117E7913C-&gt;a1a13002-e2bc-4f70-8f33-22c8e34facfe
2021-06-14 13:47:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-06-14 13:47:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D7F63C2D3C55-&gt;5f3eb625-7d7a-495a-a10d-c8506f4143cc
2021-06-14 13:47:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-14 13:47:32 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.7:8032
2021-06-14 13:47:32 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
2021-06-14 13:47:33 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623678453164, maxDate=1624283253164, sequenceNumber=1, masterKeyId=2))
2021-06-14 13:47:33 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d3 89 9c d6 a0 2f 38 d3 91 ce f6 a2 2f 40 01 48 01 5a 0d 33 30 33 35 30 35 31 32 31 33 31 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-14 13:47:33 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623678453164, maxDate=1624283253164, sequenceNumber=1, masterKeyId=2)
2021-06-14 13:47:33 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-14 13:47:33 INFO  JobSubmitter:202 - number of splits:3
2021-06-14 13:47:33 INFO  JobSubmitter:298 - Submitting tokens for job: job_1623678302528_0001
2021-06-14 13:47:33 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623678453164, maxDate=1624283253164, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d3 89 9c d6 a0 2f 38 d3 91 ce f6 a2 2f 40 01 48 01 5a 0d 33 30 33 35 30 35 31 32 31 33 31 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-14 13:47:34 INFO  Configuration:2795 - resource-types.xml not found
2021-06-14 13:47:34 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-14 13:47:34 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-14 13:47:35 INFO  YarnClientImpl:329 - Submitted application application_1623678302528_0001
2021-06-14 13:47:35 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1623678302528_0001/
2021-06-14 13:47:35 INFO  Job:1614 - Running job: job_1623678302528_0001
2021-06-14 13:47:44 INFO  Job:1635 - Job job_1623678302528_0001 running in uber mode : false
2021-06-14 13:47:44 INFO  Job:1642 -  map 0% reduce 0%
2021-06-14 13:47:52 INFO  Job:1642 -  map 33% reduce 0%
2021-06-14 13:47:53 INFO  Job:1642 -  map 67% reduce 0%
2021-06-14 13:47:54 INFO  Job:1642 -  map 100% reduce 0%
2021-06-14 13:47:58 INFO  Job:1642 -  map 100% reduce 100%
2021-06-14 13:47:59 INFO  Job:1653 - Job job_1623678302528_0001 completed successfully
2021-06-14 13:47:59 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1130033
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38548
		Total time spent by all reduces in occupied slots (ms)=6562
		Total time spent by all map tasks (ms)=19274
		Total time spent by all reduce tasks (ms)=3281
		Total vcore-milliseconds taken by all map tasks=19274
		Total vcore-milliseconds taken by all reduce tasks=3281
		Total megabyte-milliseconds taken by all map tasks=39473152
		Total megabyte-milliseconds taken by all reduce tasks=6719488
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=996
		CPU time spent (ms)=5880
		Physical memory (bytes) snapshot=1460256768
		Virtual memory (bytes) snapshot=14015909888
		Total committed heap usage (bytes)=1327497216
		Peak Map Physical memory (bytes)=397979648
		Peak Map Virtual memory (bytes)=3510231040
		Peak Reduce Physical memory (bytes)=307818496
		Peak Reduce Virtual memory (bytes)=3508887552
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 27.426 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210614 13:48:00.612" endtime="20210614 13:48:00.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:48:00.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:48:00.613" endtime="20210614 13:48:00.613"/>
</kw>
<status status="PASS" starttime="20210614 13:47:29.630" endtime="20210614 13:48:00.613"/>
</kw>
<msg timestamp="20210614 13:48:00.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:47:29.630" endtime="20210614 13:48:00.613"/>
</kw>
<msg timestamp="20210614 13:48:00.614" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-14 13:47:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-14 13:47:31 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210614 13:47:29.630" endtime="20210614 13:48:00.614"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:48:00.614" endtime="20210614 13:48:00.614"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210614 13:47:29.612" endtime="20210614 13:48:00.614"/>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:48:00.619" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:48:00.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:48:00.624" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:48:00.617" endtime="20210614 13:48:00.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:48:00.625" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:48:00.624" endtime="20210614 13:48:00.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:48:00.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:48:00.625" endtime="20210614 13:48:00.625"/>
</kw>
<status status="PASS" starttime="20210614 13:48:00.617" endtime="20210614 13:48:00.625"/>
</kw>
<msg timestamp="20210614 13:48:00.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:48:00.616" endtime="20210614 13:48:00.626"/>
</kw>
<msg timestamp="20210614 13:48:00.626" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:48:00.616" endtime="20210614 13:48:00.626"/>
</kw>
<msg timestamp="20210614 13:48:00.626" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210614 13:48:00.616" endtime="20210614 13:48:00.626"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210614 13:48:00.626" level="INFO">${random} = By8gNYNq</msg>
<status status="PASS" starttime="20210614 13:48:00.626" endtime="20210614 13:48:00.626"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210614 13:48:00.629" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210614 13:48:00.629" endtime="20210614 13:48:00.629"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210614 13:48:00.629" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210614 13:48:00.629" endtime="20210614 13:48:00.630"/>
</kw>
<status status="PASS" starttime="20210614 13:48:00.628" endtime="20210614 13:48:00.630"/>
</kw>
<msg timestamp="20210614 13:48:00.630" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210614 13:48:00.628" endtime="20210614 13:48:00.630"/>
</kw>
<status status="PASS" starttime="20210614 13:48:00.627" endtime="20210614 13:48:00.630"/>
</kw>
<msg timestamp="20210614 13:48:00.630" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210614 13:48:00.627" endtime="20210614 13:48:00.630"/>
</kw>
<msg timestamp="20210614 13:48:00.630" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210614 13:48:00.627" endtime="20210614 13:48:00.630"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210614 13:48:00.633" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210614 13:48:00.632" endtime="20210614 13:48:00.633"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210614 13:48:00.633" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210614 13:48:00.633" endtime="20210614 13:48:00.633"/>
</kw>
<status status="PASS" starttime="20210614 13:48:00.632" endtime="20210614 13:48:00.633"/>
</kw>
<msg timestamp="20210614 13:48:00.633" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210614 13:48:00.632" endtime="20210614 13:48:00.633"/>
</kw>
<status status="PASS" starttime="20210614 13:48:00.631" endtime="20210614 13:48:00.634"/>
</kw>
<msg timestamp="20210614 13:48:00.634" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210614 13:48:00.631" endtime="20210614 13:48:00.634"/>
</kw>
<msg timestamp="20210614 13:48:00.634" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210614 13:48:00.630" endtime="20210614 13:48:00.634"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210614 13:48:00.636" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210614 13:48:00.636" endtime="20210614 13:48:00.636"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210614 13:48:00.637" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210614 13:48:00.637" endtime="20210614 13:48:00.637"/>
</kw>
<status status="PASS" starttime="20210614 13:48:00.636" endtime="20210614 13:48:00.637"/>
</kw>
<msg timestamp="20210614 13:48:00.637" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210614 13:48:00.635" endtime="20210614 13:48:00.637"/>
</kw>
<status status="PASS" starttime="20210614 13:48:00.635" endtime="20210614 13:48:00.637"/>
</kw>
<msg timestamp="20210614 13:48:00.637" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-By8gNYNq.txt</msg>
<status status="PASS" starttime="20210614 13:48:00.635" endtime="20210614 13:48:00.637"/>
</kw>
<msg timestamp="20210614 13:48:00.638" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-By8gNYNq.txt</msg>
<status status="PASS" starttime="20210614 13:48:00.634" endtime="20210614 13:48:00.638"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210614 13:48:00.642" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-By8gNYNq.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210614 13:48:29.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210614 13:48:29.221" level="INFO">${output} = 2021-06-14 13:48:02 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.7:8032
2021-06-14 13:48:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
20...</msg>
<status status="PASS" starttime="20210614 13:48:00.639" endtime="20210614 13:48:29.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210614 13:48:29.222" level="INFO">2021-06-14 13:48:02 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.7:8032
2021-06-14 13:48:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
2021-06-14 13:48:02 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623678482622, maxDate=1624283282622, sequenceNumber=2, masterKeyId=2))
2021-06-14 13:48:02 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e8 f0 9d d6 a0 2f 38 e8 f8 cf f6 a2 2f 40 02 48 01 5a 0d 33 30 33 35 30 35 31 32 31 33 31 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-14 13:48:02 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623678482622, maxDate=1624283282622, sequenceNumber=2, masterKeyId=2)
2021-06-14 13:48:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-14 13:48:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-14 13:48:02 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-14 13:48:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-14 13:48:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-14 13:48:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AC6502A0119F-&gt;5f3eb625-7d7a-495a-a10d-c8506f4143cc
2021-06-14 13:48:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-14 13:48:06 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-14 13:48:06 INFO  JobSubmitter:202 - number of splits:3
2021-06-14 13:48:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2FEE668B49EE-&gt;a1a13002-e2bc-4f70-8f33-22c8e34facfe
2021-06-14 13:48:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-14 13:48:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1623678302528_0002
2021-06-14 13:48:06 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1623678482622, maxDate=1624283282622, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e8 f0 9d d6 a0 2f 38 e8 f8 cf f6 a2 2f 40 02 48 01 5a 0d 33 30 33 35 30 35 31 32 31 33 31 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-14 13:48:06 INFO  Configuration:2795 - resource-types.xml not found
2021-06-14 13:48:06 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-14 13:48:06 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-14 13:48:07 INFO  YarnClientImpl:329 - Submitted application application_1623678302528_0002
2021-06-14 13:48:07 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1623678302528_0002/
2021-06-14 13:48:07 INFO  Job:1614 - Running job: job_1623678302528_0002
2021-06-14 13:48:14 INFO  Job:1635 - Job job_1623678302528_0002 running in uber mode : false
2021-06-14 13:48:14 INFO  Job:1642 -  map 0% reduce 0%
2021-06-14 13:48:22 INFO  Job:1642 -  map 33% reduce 0%
2021-06-14 13:48:24 INFO  Job:1642 -  map 100% reduce 0%
2021-06-14 13:48:28 INFO  Job:1642 -  map 100% reduce 100%
2021-06-14 13:48:28 INFO  Job:1653 - Job job_1623678302528_0002 completed successfully
2021-06-14 13:48:28 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1192571
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39732
		O3FS: Number of bytes written=22209
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34518
		Total time spent by all reduces in occupied slots (ms)=6152
		Total time spent by all map tasks (ms)=17259
		Total time spent by all reduce tasks (ms)=3076
		Total vcore-milliseconds taken by all map tasks=17259
		Total vcore-milliseconds taken by all reduce tasks=3076
		Total megabyte-milliseconds taken by all map tasks=35346432
		Total megabyte-milliseconds taken by all reduce tasks=6299648
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=868
		CPU time spent (ms)=6120
		Physical memory (bytes) snapshot=1503920128
		Virtual memory (bytes) snapshot=14049337344
		Total committed heap usage (bytes)=1268252672
		Peak Map Physical memory (bytes)=397905920
		Peak Map Virtual memory (bytes)=3509993472
		Peak Reduce Physical memory (bytes)=335450112
		Peak Reduce Virtual memory (bytes)=3526668288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209</msg>
<status status="PASS" starttime="20210614 13:48:29.221" endtime="20210614 13:48:29.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210614 13:48:29.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210614 13:48:29.222" endtime="20210614 13:48:29.223"/>
</kw>
<status status="PASS" starttime="20210614 13:48:00.638" endtime="20210614 13:48:29.223"/>
</kw>
<msg timestamp="20210614 13:48:29.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210614 13:48:00.638" endtime="20210614 13:48:29.223"/>
</kw>
<msg timestamp="20210614 13:48:29.224" level="INFO">${output} = 2021-06-14 13:48:02 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.7:8032
2021-06-14 13:48:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.11:10200
20...</msg>
<status status="PASS" starttime="20210614 13:48:00.638" endtime="20210614 13:48:29.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:48:29.224" endtime="20210614 13:48:29.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210614 13:48:29.224" endtime="20210614 13:48:29.225"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210614 13:48:00.615" endtime="20210614 13:48:29.225"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210614 13:47:29.551" endtime="20210614 13:48:29.226"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="167775"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="hadoopfs-ofs">ozonesecure-mr.hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="hadoopfs-o3fs">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Kinit-Hadoop">ozonesecure-mr.Kinit-Hadoop</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Kinit">ozonesecure-mr.Kinit</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="mapreduce-ofs">ozonesecure-mr.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="mapreduce-o3fs">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
