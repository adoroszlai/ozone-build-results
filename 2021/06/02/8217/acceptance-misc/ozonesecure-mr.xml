<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210602 18:50:18.005" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:46:37.053" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:46:40.743" level="INFO">${rc} = 255</msg>
<msg timestamp="20210602 18:46:40.744" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210602 18:46:37.050" endtime="20210602 18:46:40.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:46:40.745" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210602 18:46:40.744" endtime="20210602 18:46:40.745"/>
</kw>
<msg timestamp="20210602 18:46:40.745" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210602 18:46:37.049" endtime="20210602 18:46:40.745"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:46:40.749" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:46:43.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:46:43.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 18:46:40.747" endtime="20210602 18:46:43.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:46:43.975" level="INFO"/>
<status status="PASS" starttime="20210602 18:46:43.974" endtime="20210602 18:46:43.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:46:43.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:46:43.975" endtime="20210602 18:46:43.976"/>
</kw>
<status status="PASS" starttime="20210602 18:46:40.747" endtime="20210602 18:46:43.976"/>
</kw>
<msg timestamp="20210602 18:46:43.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:46:40.747" endtime="20210602 18:46:43.976"/>
</kw>
<msg timestamp="20210602 18:46:43.977" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210602 18:46:40.746" endtime="20210602 18:46:43.977"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 18:46:43.977" endtime="20210602 18:46:43.977"/>
</kw>
<status status="PASS" starttime="20210602 18:46:40.746" endtime="20210602 18:46:43.978"/>
</kw>
<status status="PASS" starttime="20210602 18:46:40.745" endtime="20210602 18:46:43.978"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:46:43.982" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:46:46.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:46:46.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 18:46:43.980" endtime="20210602 18:46:46.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:46:46.915" level="INFO"/>
<status status="PASS" starttime="20210602 18:46:46.914" endtime="20210602 18:46:46.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:46:46.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:46:46.915" endtime="20210602 18:46:46.915"/>
</kw>
<status status="PASS" starttime="20210602 18:46:43.979" endtime="20210602 18:46:46.916"/>
</kw>
<msg timestamp="20210602 18:46:46.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:46:43.979" endtime="20210602 18:46:46.916"/>
</kw>
<status status="PASS" starttime="20210602 18:46:43.978" endtime="20210602 18:46:46.916"/>
</kw>
<status status="PASS" starttime="20210602 18:46:43.978" endtime="20210602 18:46:46.916"/>
</kw>
<status status="PASS" starttime="20210602 18:46:43.978" endtime="20210602 18:46:46.916"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210602 18:46:46.916" endtime="20210602 18:46:46.917"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:46:46.920" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:46:50.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:46:50.220" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-02T18:46...</msg>
<status status="PASS" starttime="20210602 18:46:46.918" endtime="20210602 18:46:50.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:46:50.222" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-02T18:46:46.809Z",
  "modificationTime" : "2021-06-02T18:46:46.809Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210602 18:46:50.221" endtime="20210602 18:46:50.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:46:50.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:46:50.222" endtime="20210602 18:46:50.223"/>
</kw>
<status status="PASS" starttime="20210602 18:46:46.918" endtime="20210602 18:46:50.223"/>
</kw>
<msg timestamp="20210602 18:46:50.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:46:46.917" endtime="20210602 18:46:50.223"/>
</kw>
<msg timestamp="20210602 18:46:50.223" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-02T18:46...</msg>
<status status="PASS" starttime="20210602 18:46:46.917" endtime="20210602 18:46:50.223"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 18:46:50.223" endtime="20210602 18:46:50.224"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 18:46:50.228" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210602 18:46:50.228" endtime="20210602 18:46:50.228"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 18:46:50.229" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210602 18:46:50.228" endtime="20210602 18:46:50.229"/>
</kw>
<status status="PASS" starttime="20210602 18:46:50.227" endtime="20210602 18:46:50.229"/>
</kw>
<msg timestamp="20210602 18:46:50.229" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210602 18:46:50.226" endtime="20210602 18:46:50.229"/>
</kw>
<status status="PASS" starttime="20210602 18:46:50.225" endtime="20210602 18:46:50.229"/>
</kw>
<msg timestamp="20210602 18:46:50.230" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210602 18:46:50.225" endtime="20210602 18:46:50.230"/>
</kw>
<msg timestamp="20210602 18:46:50.230" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210602 18:46:50.224" endtime="20210602 18:46:50.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:46:50.233" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:46:53.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:46:53.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 18:46:50.231" endtime="20210602 18:46:53.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:46:53.433" level="INFO"/>
<status status="PASS" starttime="20210602 18:46:53.432" endtime="20210602 18:46:53.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:46:53.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:46:53.433" endtime="20210602 18:46:53.433"/>
</kw>
<status status="PASS" starttime="20210602 18:46:50.231" endtime="20210602 18:46:53.434"/>
</kw>
<msg timestamp="20210602 18:46:53.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:46:50.230" endtime="20210602 18:46:53.434"/>
</kw>
<status status="PASS" starttime="20210602 18:46:50.230" endtime="20210602 18:46:53.434"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:46:53.437" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:47:00.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:47:00.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 18:46:53.435" endtime="20210602 18:47:00.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:47:00.502" level="INFO"/>
<status status="PASS" starttime="20210602 18:47:00.501" endtime="20210602 18:47:00.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:47:00.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:47:00.503" endtime="20210602 18:47:00.503"/>
</kw>
<status status="PASS" starttime="20210602 18:46:53.435" endtime="20210602 18:47:00.504"/>
</kw>
<msg timestamp="20210602 18:47:00.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:46:53.435" endtime="20210602 18:47:00.504"/>
</kw>
<status status="PASS" starttime="20210602 18:46:53.434" endtime="20210602 18:47:00.504"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:47:00.507" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:47:05.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:47:05.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 18:47:00.505" endtime="20210602 18:47:05.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:47:05.237" level="INFO"/>
<status status="PASS" starttime="20210602 18:47:05.237" endtime="20210602 18:47:05.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:47:05.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:47:05.237" endtime="20210602 18:47:05.238"/>
</kw>
<status status="PASS" starttime="20210602 18:47:00.505" endtime="20210602 18:47:05.238"/>
</kw>
<msg timestamp="20210602 18:47:05.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:47:00.505" endtime="20210602 18:47:05.238"/>
</kw>
<status status="PASS" starttime="20210602 18:47:00.504" endtime="20210602 18:47:05.239"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:47:05.242" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:47:10.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:47:10.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 18:47:05.240" endtime="20210602 18:47:10.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:47:10.190" level="INFO"/>
<status status="PASS" starttime="20210602 18:47:10.190" endtime="20210602 18:47:10.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:47:10.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:47:10.191" endtime="20210602 18:47:10.191"/>
</kw>
<status status="PASS" starttime="20210602 18:47:05.240" endtime="20210602 18:47:10.192"/>
</kw>
<msg timestamp="20210602 18:47:10.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:47:05.239" endtime="20210602 18:47:10.192"/>
</kw>
<status status="PASS" starttime="20210602 18:47:05.239" endtime="20210602 18:47:10.192"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210602 18:46:37.048" endtime="20210602 18:47:10.192"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 18:47:10.197" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210602 18:47:10.197" endtime="20210602 18:47:10.197"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 18:47:10.198" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210602 18:47:10.197" endtime="20210602 18:47:10.198"/>
</kw>
<status status="PASS" starttime="20210602 18:47:10.196" endtime="20210602 18:47:10.198"/>
</kw>
<msg timestamp="20210602 18:47:10.198" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210602 18:47:10.195" endtime="20210602 18:47:10.198"/>
</kw>
<status status="PASS" starttime="20210602 18:47:10.195" endtime="20210602 18:47:10.198"/>
</kw>
<msg timestamp="20210602 18:47:10.199" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210602 18:47:10.194" endtime="20210602 18:47:10.199"/>
</kw>
<msg timestamp="20210602 18:47:10.199" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210602 18:47:10.193" endtime="20210602 18:47:10.199"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:47:10.202" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:47:13.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:47:13.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 18:47:10.200" endtime="20210602 18:47:13.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:47:13.114" level="INFO"/>
<status status="PASS" starttime="20210602 18:47:13.113" endtime="20210602 18:47:13.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:47:13.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:47:13.114" endtime="20210602 18:47:13.115"/>
</kw>
<status status="PASS" starttime="20210602 18:47:10.200" endtime="20210602 18:47:13.115"/>
</kw>
<msg timestamp="20210602 18:47:13.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:47:10.199" endtime="20210602 18:47:13.115"/>
</kw>
<status status="PASS" starttime="20210602 18:47:10.199" endtime="20210602 18:47:13.115"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:47:13.119" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:47:16.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:47:16.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 18:47:13.117" endtime="20210602 18:47:16.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:47:16.255" level="INFO"/>
<status status="PASS" starttime="20210602 18:47:16.254" endtime="20210602 18:47:16.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:47:16.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:47:16.255" endtime="20210602 18:47:16.256"/>
</kw>
<status status="PASS" starttime="20210602 18:47:13.116" endtime="20210602 18:47:16.256"/>
</kw>
<msg timestamp="20210602 18:47:16.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:47:13.116" endtime="20210602 18:47:16.256"/>
</kw>
<status status="PASS" starttime="20210602 18:47:13.116" endtime="20210602 18:47:16.256"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210602 18:47:10.193" endtime="20210602 18:47:16.257"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210602 18:46:36.999" endtime="20210602 18:47:16.258"/>
</suite>
<suite id="s1-s2" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 18:48:53.727" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210602 18:48:53.727" endtime="20210602 18:48:53.727"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 18:48:53.727" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210602 18:48:53.727" endtime="20210602 18:48:53.728"/>
</kw>
<status status="PASS" starttime="20210602 18:48:53.726" endtime="20210602 18:48:53.728"/>
</kw>
<msg timestamp="20210602 18:48:53.728" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210602 18:48:53.726" endtime="20210602 18:48:53.728"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210602 18:48:53.728" endtime="20210602 18:48:53.729"/>
</kw>
<msg timestamp="20210602 18:48:53.729" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210602 18:48:53.728" endtime="20210602 18:48:53.729"/>
</kw>
<status status="PASS" starttime="20210602 18:48:53.725" endtime="20210602 18:48:53.729"/>
</kw>
<msg timestamp="20210602 18:48:53.729" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210602 18:48:53.725" endtime="20210602 18:48:53.729"/>
</kw>
<msg timestamp="20210602 18:48:53.729" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210602 18:48:53.724" endtime="20210602 18:48:53.729"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210602 18:48:53.730" level="INFO">${random} = 34153</msg>
<status status="PASS" starttime="20210602 18:48:53.729" endtime="20210602 18:48:53.730"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:48:53.734" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-34153 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:48:59.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:48:59.428" level="INFO">${output} = 2021-06-02 18:48:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 18:48:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210602 18:48:53.731" endtime="20210602 18:48:59.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:48:59.429" level="INFO">2021-06-02 18:48:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 18:48:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-02 18:48:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-02 18:48:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-02 18:48:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ED29F53F4E6C-&gt;4ef5fcc1-7daf-44d6-87bc-f8141df6f57c
2021-06-02 18:48:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210602 18:48:59.429" endtime="20210602 18:48:59.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:48:59.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:48:59.430" endtime="20210602 18:48:59.430"/>
</kw>
<status status="PASS" starttime="20210602 18:48:53.730" endtime="20210602 18:48:59.430"/>
</kw>
<msg timestamp="20210602 18:48:59.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:48:53.730" endtime="20210602 18:48:59.431"/>
</kw>
<msg timestamp="20210602 18:48:59.431" level="INFO">${result} = 2021-06-02 18:48:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 18:48:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210602 18:48:53.730" endtime="20210602 18:48:59.431"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:48:59.434" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:49:01.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:49:01.036" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 18:46 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-02 18:48 ofs://om/volume1/bucket1/ozone-34153
-rw-...</msg>
<status status="PASS" starttime="20210602 18:48:59.432" endtime="20210602 18:49:01.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:49:01.038" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 18:46 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-02 18:48 ofs://om/volume1/bucket1/ozone-34153
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-02 18:47 ofs://om/volume1/bucket1/ozone-79604
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 18:47 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 18:48 ofs://om/volume1/bucket1/wordcount-hBv1MUlW.txt</msg>
<status status="PASS" starttime="20210602 18:49:01.037" endtime="20210602 18:49:01.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:49:01.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:49:01.038" endtime="20210602 18:49:01.038"/>
</kw>
<status status="PASS" starttime="20210602 18:48:59.432" endtime="20210602 18:49:01.038"/>
</kw>
<msg timestamp="20210602 18:49:01.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:48:59.431" endtime="20210602 18:49:01.039"/>
</kw>
<msg timestamp="20210602 18:49:01.039" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 18:46 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-02 18:48 ofs://om/volume1/bucket1/ozone-34153
-rw-...</msg>
<status status="PASS" starttime="20210602 18:48:59.431" endtime="20210602 18:49:01.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 18:49:01.039" endtime="20210602 18:49:01.039"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210602 18:48:53.723" endtime="20210602 18:49:01.040"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210602 18:48:53.679" endtime="20210602 18:49:01.041"/>
</suite>
<suite id="s1-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 18:47:36.959" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210602 18:47:36.959" endtime="20210602 18:47:36.960"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 18:47:36.960" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210602 18:47:36.960" endtime="20210602 18:47:36.960"/>
</kw>
<status status="PASS" starttime="20210602 18:47:36.959" endtime="20210602 18:47:36.960"/>
</kw>
<msg timestamp="20210602 18:47:36.960" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210602 18:47:36.958" endtime="20210602 18:47:36.960"/>
</kw>
<status status="PASS" starttime="20210602 18:47:36.958" endtime="20210602 18:47:36.961"/>
</kw>
<msg timestamp="20210602 18:47:36.961" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210602 18:47:36.957" endtime="20210602 18:47:36.961"/>
</kw>
<msg timestamp="20210602 18:47:36.961" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210602 18:47:36.956" endtime="20210602 18:47:36.961"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210602 18:47:36.961" level="INFO">${random} = 79604</msg>
<status status="PASS" starttime="20210602 18:47:36.961" endtime="20210602 18:47:36.961"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:47:36.966" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-79604 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:47:41.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:47:41.057" level="INFO">${output} = 2021-06-02 18:47:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 18:47:38 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210602 18:47:36.963" endtime="20210602 18:47:41.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:47:41.058" level="INFO">2021-06-02 18:47:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 18:47:38 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-02 18:47:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-02 18:47:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-02 18:47:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C34D770F532C-&gt;4ef5fcc1-7daf-44d6-87bc-f8141df6f57c
2021-06-02 18:47:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210602 18:47:41.057" endtime="20210602 18:47:41.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:47:41.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:47:41.058" endtime="20210602 18:47:41.059"/>
</kw>
<status status="PASS" starttime="20210602 18:47:36.962" endtime="20210602 18:47:41.059"/>
</kw>
<msg timestamp="20210602 18:47:41.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:47:36.962" endtime="20210602 18:47:41.059"/>
</kw>
<msg timestamp="20210602 18:47:41.059" level="INFO">${result} = 2021-06-02 18:47:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 18:47:38 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210602 18:47:36.961" endtime="20210602 18:47:41.059"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:47:41.063" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:47:42.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:47:42.758" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 18:46 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-02 18:47 o3fs://bucket1.volume1.om/ozone-79604
dr...</msg>
<status status="PASS" starttime="20210602 18:47:41.061" endtime="20210602 18:47:42.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:47:42.760" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 18:46 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-02 18:47 o3fs://bucket1.volume1.om/ozone-79604
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 18:47 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210602 18:47:42.759" endtime="20210602 18:47:42.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:47:42.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:47:42.760" endtime="20210602 18:47:42.760"/>
</kw>
<status status="PASS" starttime="20210602 18:47:41.060" endtime="20210602 18:47:42.760"/>
</kw>
<msg timestamp="20210602 18:47:42.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:47:41.060" endtime="20210602 18:47:42.761"/>
</kw>
<msg timestamp="20210602 18:47:42.761" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 18:46 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-02 18:47 o3fs://bucket1.volume1.om/ozone-79604
dr...</msg>
<status status="PASS" starttime="20210602 18:47:41.060" endtime="20210602 18:47:42.761"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 18:47:42.761" endtime="20210602 18:47:42.761"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210602 18:47:36.956" endtime="20210602 18:47:42.762"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210602 18:47:36.911" endtime="20210602 18:47:42.762"/>
</suite>
<suite id="s1-s4" name="Kinit-Hadoop" source="/opt/ozone/smoketest/kinit-hadoop.robot">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:47:32.034" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:47:32.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:47:32.038" level="INFO">${output} = rm</msg>
<status status="PASS" starttime="20210602 18:47:32.030" endtime="20210602 18:47:32.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:47:32.039" level="INFO">rm</msg>
<status status="PASS" starttime="20210602 18:47:32.038" endtime="20210602 18:47:32.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:47:32.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:47:32.039" endtime="20210602 18:47:32.040"/>
</kw>
<status status="PASS" starttime="20210602 18:47:32.029" endtime="20210602 18:47:32.040"/>
</kw>
<msg timestamp="20210602 18:47:32.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:47:32.029" endtime="20210602 18:47:32.040"/>
</kw>
<msg timestamp="20210602 18:47:32.040" level="INFO">${instance} = rm</msg>
<status status="PASS" starttime="20210602 18:47:32.029" endtime="20210602 18:47:32.040"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210602 18:47:32.041" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210602 18:47:32.040" endtime="20210602 18:47:32.041"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:47:32.044" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:47:32.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:47:32.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 18:47:32.043" endtime="20210602 18:47:32.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:47:32.053" level="INFO"/>
<status status="PASS" starttime="20210602 18:47:32.052" endtime="20210602 18:47:32.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:47:32.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:47:32.053" endtime="20210602 18:47:32.054"/>
</kw>
<status status="PASS" starttime="20210602 18:47:32.042" endtime="20210602 18:47:32.054"/>
</kw>
<msg timestamp="20210602 18:47:32.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:47:32.042" endtime="20210602 18:47:32.054"/>
</kw>
<status status="PASS" starttime="20210602 18:47:32.042" endtime="20210602 18:47:32.054"/>
</kw>
<status status="PASS" starttime="20210602 18:47:32.041" endtime="20210602 18:47:32.054"/>
</kw>
<status status="PASS" starttime="20210602 18:47:32.028" endtime="20210602 18:47:32.054"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210602 18:47:32.027" endtime="20210602 18:47:32.055"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210602 18:47:31.980" endtime="20210602 18:47:32.056"/>
</suite>
<suite id="s1-s5" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:46:32.112" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:46:32.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:46:32.137" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210602 18:46:32.100" endtime="20210602 18:46:32.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:46:32.138" level="INFO">om</msg>
<status status="PASS" starttime="20210602 18:46:32.137" endtime="20210602 18:46:32.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:46:32.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:46:32.138" endtime="20210602 18:46:32.138"/>
</kw>
<status status="PASS" starttime="20210602 18:46:32.099" endtime="20210602 18:46:32.139"/>
</kw>
<msg timestamp="20210602 18:46:32.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:46:32.099" endtime="20210602 18:46:32.139"/>
</kw>
<msg timestamp="20210602 18:46:32.139" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20210602 18:46:32.099" endtime="20210602 18:46:32.139"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210602 18:46:32.140" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210602 18:46:32.139" endtime="20210602 18:46:32.140"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:46:32.150" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:46:32.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:46:32.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 18:46:32.141" endtime="20210602 18:46:32.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:46:32.157" level="INFO"/>
<status status="PASS" starttime="20210602 18:46:32.157" endtime="20210602 18:46:32.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:46:32.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:46:32.158" endtime="20210602 18:46:32.158"/>
</kw>
<status status="PASS" starttime="20210602 18:46:32.141" endtime="20210602 18:46:32.158"/>
</kw>
<msg timestamp="20210602 18:46:32.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:46:32.141" endtime="20210602 18:46:32.158"/>
</kw>
<status status="PASS" starttime="20210602 18:46:32.140" endtime="20210602 18:46:32.159"/>
</kw>
<status status="PASS" starttime="20210602 18:46:32.140" endtime="20210602 18:46:32.159"/>
</kw>
<status status="PASS" starttime="20210602 18:46:32.098" endtime="20210602 18:46:32.159"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210602 18:46:32.098" endtime="20210602 18:46:32.159"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210602 18:46:32.054" endtime="20210602 18:46:32.160"/>
</suite>
<suite id="s1-s6" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:49:05.881" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:49:05.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:49:05.887" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:49:05.878" endtime="20210602 18:49:05.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:49:05.888" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:49:05.887" endtime="20210602 18:49:05.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:49:05.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:49:05.888" endtime="20210602 18:49:05.889"/>
</kw>
<status status="PASS" starttime="20210602 18:49:05.878" endtime="20210602 18:49:05.889"/>
</kw>
<msg timestamp="20210602 18:49:05.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:49:05.878" endtime="20210602 18:49:05.889"/>
</kw>
<msg timestamp="20210602 18:49:05.889" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:49:05.877" endtime="20210602 18:49:05.890"/>
</kw>
<msg timestamp="20210602 18:49:05.890" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:49:05.877" endtime="20210602 18:49:05.890"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 18:49:05.893" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210602 18:49:05.893" endtime="20210602 18:49:05.893"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 18:49:05.894" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210602 18:49:05.893" endtime="20210602 18:49:05.894"/>
</kw>
<status status="PASS" starttime="20210602 18:49:05.892" endtime="20210602 18:49:05.894"/>
</kw>
<msg timestamp="20210602 18:49:05.894" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210602 18:49:05.892" endtime="20210602 18:49:05.894"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210602 18:49:05.895" endtime="20210602 18:49:05.895"/>
</kw>
<msg timestamp="20210602 18:49:05.895" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210602 18:49:05.894" endtime="20210602 18:49:05.895"/>
</kw>
<status status="PASS" starttime="20210602 18:49:05.891" endtime="20210602 18:49:05.895"/>
</kw>
<msg timestamp="20210602 18:49:05.895" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210602 18:49:05.891" endtime="20210602 18:49:05.895"/>
</kw>
<msg timestamp="20210602 18:49:05.896" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210602 18:49:05.890" endtime="20210602 18:49:05.896"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:49:05.898" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:49:39.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:49:39.243" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-02 18:49:07 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 18:49:07 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210602 18:49:05.897" endtime="20210602 18:49:39.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:49:39.245" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-02 18:49:07 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 18:49:07 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-02 18:49:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-02 18:49:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-02 18:49:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-136A39B4281C-&gt;65d388a5-7634-40aa-b93d-c3901a4a2071
2021-06-02 18:49:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-02 18:49:08 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-06-02 18:49:09 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
2021-06-02 18:49:09 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622659749254, maxDate=1623264549254, sequenceNumber=3, masterKeyId=2))
2021-06-02 18:49:09 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b4 aa bb f0 9c 2f 38 b4 b2 ed 90 9f 2f 40 03 48 01 5a 0d 33 34 37 33 33 37 37 36 30 31 37 35 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-02 18:49:09 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622659749254, maxDate=1623264549254, sequenceNumber=3, masterKeyId=2)
2021-06-02 18:49:09 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-02 18:49:09 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-02 18:49:12 INFO  JobSubmitter:202 - number of splits:3
2021-06-02 18:49:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3BB28E839583-&gt;4ef5fcc1-7daf-44d6-87bc-f8141df6f57c
2021-06-02 18:49:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-02 18:49:12 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622659543141_0003
2021-06-02 18:49:12 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622659749254, maxDate=1623264549254, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b4 aa bb f0 9c 2f 38 b4 b2 ed 90 9f 2f 40 03 48 01 5a 0d 33 34 37 33 33 37 37 36 30 31 37 35 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-02 18:49:12 INFO  Configuration:2795 - resource-types.xml not found
2021-06-02 18:49:12 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-02 18:49:12 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-02 18:49:13 INFO  YarnClientImpl:329 - Submitted application application_1622659543141_0003
2021-06-02 18:49:13 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622659543141_0003/
2021-06-02 18:49:13 INFO  Job:1614 - Running job: job_1622659543141_0003
2021-06-02 18:49:20 INFO  Job:1635 - Job job_1622659543141_0003 running in uber mode : false
2021-06-02 18:49:20 INFO  Job:1642 -  map 0% reduce 0%
2021-06-02 18:49:29 INFO  Job:1642 -  map 33% reduce 0%
2021-06-02 18:49:31 INFO  Job:1642 -  map 100% reduce 0%
2021-06-02 18:49:35 INFO  Job:1642 -  map 100% reduce 100%
2021-06-02 18:49:38 INFO  Job:1653 - Job job_1622659543141_0003 completed successfully
2021-06-02 18:49:38 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1126453
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38382
		Total time spent by all reduces in occupied slots (ms)=6478
		Total time spent by all map tasks (ms)=19191
		Total time spent by all reduce tasks (ms)=3239
		Total vcore-milliseconds taken by all map tasks=19191
		Total vcore-milliseconds taken by all reduce tasks=3239
		Total megabyte-milliseconds taken by all map tasks=39303168
		Total megabyte-milliseconds taken by all reduce tasks=6633472
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1022
		CPU time spent (ms)=6420
		Physical memory (bytes) snapshot=1498427392
		Virtual memory (bytes) snapshot=14058631168
		Total committed heap usage (bytes)=1270349824
		Peak Map Physical memory (bytes)=395075584
		Peak Map Virtual memory (bytes)=3510300672
		Peak Reduce Physical memory (bytes)=332099584
		Peak Reduce Virtual memory (bytes)=3529826304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.908 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210602 18:49:39.244" endtime="20210602 18:49:39.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:49:39.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:49:39.245" endtime="20210602 18:49:39.245"/>
</kw>
<status status="PASS" starttime="20210602 18:49:05.897" endtime="20210602 18:49:39.246"/>
</kw>
<msg timestamp="20210602 18:49:39.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:49:05.896" endtime="20210602 18:49:39.246"/>
</kw>
<msg timestamp="20210602 18:49:39.246" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-02 18:49:07 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 18:49:07 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210602 18:49:05.896" endtime="20210602 18:49:39.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 18:49:39.246" endtime="20210602 18:49:39.247"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210602 18:49:05.876" endtime="20210602 18:49:39.247"/>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:49:39.252" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:49:39.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:49:39.257" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:49:39.250" endtime="20210602 18:49:39.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:49:39.258" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:49:39.258" endtime="20210602 18:49:39.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:49:39.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:49:39.258" endtime="20210602 18:49:39.259"/>
</kw>
<status status="PASS" starttime="20210602 18:49:39.249" endtime="20210602 18:49:39.259"/>
</kw>
<msg timestamp="20210602 18:49:39.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:49:39.249" endtime="20210602 18:49:39.259"/>
</kw>
<msg timestamp="20210602 18:49:39.260" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:49:39.249" endtime="20210602 18:49:39.260"/>
</kw>
<msg timestamp="20210602 18:49:39.260" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:49:39.248" endtime="20210602 18:49:39.260"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210602 18:49:39.260" level="INFO">${random} = 8sj7Z99t</msg>
<status status="PASS" starttime="20210602 18:49:39.260" endtime="20210602 18:49:39.260"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 18:49:39.263" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210602 18:49:39.263" endtime="20210602 18:49:39.263"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 18:49:39.264" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210602 18:49:39.263" endtime="20210602 18:49:39.264"/>
</kw>
<status status="PASS" starttime="20210602 18:49:39.263" endtime="20210602 18:49:39.264"/>
</kw>
<msg timestamp="20210602 18:49:39.264" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210602 18:49:39.262" endtime="20210602 18:49:39.264"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210602 18:49:39.265" endtime="20210602 18:49:39.265"/>
</kw>
<msg timestamp="20210602 18:49:39.265" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210602 18:49:39.264" endtime="20210602 18:49:39.265"/>
</kw>
<status status="PASS" starttime="20210602 18:49:39.262" endtime="20210602 18:49:39.266"/>
</kw>
<msg timestamp="20210602 18:49:39.266" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210602 18:49:39.261" endtime="20210602 18:49:39.266"/>
</kw>
<msg timestamp="20210602 18:49:39.266" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210602 18:49:39.260" endtime="20210602 18:49:39.266"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 18:49:39.269" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210602 18:49:39.269" endtime="20210602 18:49:39.269"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 18:49:39.269" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210602 18:49:39.269" endtime="20210602 18:49:39.269"/>
</kw>
<status status="PASS" starttime="20210602 18:49:39.268" endtime="20210602 18:49:39.270"/>
</kw>
<msg timestamp="20210602 18:49:39.270" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210602 18:49:39.268" endtime="20210602 18:49:39.270"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 18:49:39.271" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210602 18:49:39.271" endtime="20210602 18:49:39.271"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 18:49:39.272" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210602 18:49:39.271" endtime="20210602 18:49:39.272"/>
</kw>
<status status="PASS" starttime="20210602 18:49:39.270" endtime="20210602 18:49:39.272"/>
</kw>
<msg timestamp="20210602 18:49:39.272" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210602 18:49:39.270" endtime="20210602 18:49:39.272"/>
</kw>
<status status="PASS" starttime="20210602 18:49:39.267" endtime="20210602 18:49:39.272"/>
</kw>
<msg timestamp="20210602 18:49:39.272" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210602 18:49:39.267" endtime="20210602 18:49:39.272"/>
</kw>
<msg timestamp="20210602 18:49:39.272" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210602 18:49:39.266" endtime="20210602 18:49:39.272"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 18:49:39.276" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210602 18:49:39.275" endtime="20210602 18:49:39.276"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 18:49:39.276" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210602 18:49:39.276" endtime="20210602 18:49:39.276"/>
</kw>
<status status="PASS" starttime="20210602 18:49:39.275" endtime="20210602 18:49:39.276"/>
</kw>
<msg timestamp="20210602 18:49:39.276" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210602 18:49:39.274" endtime="20210602 18:49:39.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 18:49:39.278" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210602 18:49:39.277" endtime="20210602 18:49:39.278"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 18:49:39.278" level="INFO">${result} = /wordcount-8sj7Z99t.txt</msg>
<status status="PASS" starttime="20210602 18:49:39.278" endtime="20210602 18:49:39.278"/>
</kw>
<status status="PASS" starttime="20210602 18:49:39.277" endtime="20210602 18:49:39.278"/>
</kw>
<msg timestamp="20210602 18:49:39.278" level="INFO">${path_with_leading} = /wordcount-8sj7Z99t.txt</msg>
<status status="PASS" starttime="20210602 18:49:39.277" endtime="20210602 18:49:39.278"/>
</kw>
<status status="PASS" starttime="20210602 18:49:39.274" endtime="20210602 18:49:39.279"/>
</kw>
<msg timestamp="20210602 18:49:39.279" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-8sj7Z99t.txt</msg>
<status status="PASS" starttime="20210602 18:49:39.273" endtime="20210602 18:49:39.279"/>
</kw>
<msg timestamp="20210602 18:49:39.279" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-8sj7Z99t.txt</msg>
<status status="PASS" starttime="20210602 18:49:39.273" endtime="20210602 18:49:39.279"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:49:39.282" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-8sj7Z99t.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:50:11.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:50:11.075" level="INFO">${output} = 2021-06-02 18:49:40 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-06-02 18:49:41 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
202...</msg>
<status status="PASS" starttime="20210602 18:49:39.281" endtime="20210602 18:50:11.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:50:11.076" level="INFO">2021-06-02 18:49:40 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-06-02 18:49:41 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
2021-06-02 18:49:41 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622659781285, maxDate=1623264581285, sequenceNumber=4, masterKeyId=2))
2021-06-02 18:49:41 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c2 a4 bd f0 9c 2f 38 c2 ac ef 90 9f 2f 40 04 48 01 5a 0d 33 34 37 33 33 37 37 36 30 31 37 35 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-02 18:49:41 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622659781285, maxDate=1623264581285, sequenceNumber=4, masterKeyId=2)
2021-06-02 18:49:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-02 18:49:41 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 18:49:41 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-02 18:49:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-02 18:49:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-02 18:49:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1D20FB979452-&gt;65d388a5-7634-40aa-b93d-c3901a4a2071
2021-06-02 18:49:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-02 18:49:45 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-02 18:49:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2CFEA588248C-&gt;4ef5fcc1-7daf-44d6-87bc-f8141df6f57c
2021-06-02 18:49:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-02 18:49:45 INFO  JobSubmitter:202 - number of splits:3
2021-06-02 18:49:45 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622659543141_0004
2021-06-02 18:49:45 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622659781285, maxDate=1623264581285, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c2 a4 bd f0 9c 2f 38 c2 ac ef 90 9f 2f 40 04 48 01 5a 0d 33 34 37 33 33 37 37 36 30 31 37 35 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-02 18:49:45 INFO  Configuration:2795 - resource-types.xml not found
2021-06-02 18:49:45 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-02 18:49:45 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-02 18:49:46 INFO  YarnClientImpl:329 - Submitted application application_1622659543141_0004
2021-06-02 18:49:46 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622659543141_0004/
2021-06-02 18:49:46 INFO  Job:1614 - Running job: job_1622659543141_0004
2021-06-02 18:49:53 INFO  Job:1635 - Job job_1622659543141_0004 running in uber mode : false
2021-06-02 18:49:53 INFO  Job:1642 -  map 0% reduce 0%
2021-06-02 18:50:01 INFO  Job:1642 -  map 33% reduce 0%
2021-06-02 18:50:03 INFO  Job:1642 -  map 67% reduce 0%
2021-06-02 18:50:04 INFO  Job:1642 -  map 100% reduce 0%
2021-06-02 18:50:07 INFO  Job:1642 -  map 100% reduce 100%
2021-06-02 18:50:10 INFO  Job:1653 - Job job_1622659543141_0004 completed successfully
2021-06-02 18:50:10 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1189131
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39729
		OFS: Number of bytes written=22209
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37008
		Total time spent by all reduces in occupied slots (ms)=6738
		Total time spent by all map tasks (ms)=18504
		Total time spent by all reduce tasks (ms)=3369
		Total vcore-milliseconds taken by all map tasks=18504
		Total vcore-milliseconds taken by all reduce tasks=3369
		Total megabyte-milliseconds taken by all map tasks=37896192
		Total megabyte-milliseconds taken by all reduce tasks=6899712
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=885
		CPU time spent (ms)=6800
		Physical memory (bytes) snapshot=1495269376
		Virtual memory (bytes) snapshot=14043455488
		Total committed heap usage (bytes)=1282932736
		Peak Map Physical memory (bytes)=390430720
		Peak Map Virtual memory (bytes)=3508641792
		Peak Reduce Physical memory (bytes)=331845632
		Peak Reduce Virtual memory (bytes)=3526762496
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209</msg>
<status status="PASS" starttime="20210602 18:50:11.076" endtime="20210602 18:50:11.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:50:11.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:50:11.077" endtime="20210602 18:50:11.077"/>
</kw>
<status status="PASS" starttime="20210602 18:49:39.280" endtime="20210602 18:50:11.077"/>
</kw>
<msg timestamp="20210602 18:50:11.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:49:39.280" endtime="20210602 18:50:11.078"/>
</kw>
<msg timestamp="20210602 18:50:11.078" level="INFO">${output} = 2021-06-02 18:49:40 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-06-02 18:49:41 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
202...</msg>
<status status="PASS" starttime="20210602 18:49:39.279" endtime="20210602 18:50:11.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 18:50:11.078" endtime="20210602 18:50:11.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 18:50:11.079" endtime="20210602 18:50:11.079"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210602 18:49:39.248" endtime="20210602 18:50:11.079"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210602 18:49:05.829" endtime="20210602 18:50:11.080"/>
</suite>
<suite id="s1-s7" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:47:47.688" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:47:47.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:47:47.693" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:47:47.682" endtime="20210602 18:47:47.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:47:47.694" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:47:47.694" endtime="20210602 18:47:47.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:47:47.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:47:47.694" endtime="20210602 18:47:47.695"/>
</kw>
<status status="PASS" starttime="20210602 18:47:47.681" endtime="20210602 18:47:47.695"/>
</kw>
<msg timestamp="20210602 18:47:47.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:47:47.681" endtime="20210602 18:47:47.695"/>
</kw>
<msg timestamp="20210602 18:47:47.695" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:47:47.681" endtime="20210602 18:47:47.696"/>
</kw>
<msg timestamp="20210602 18:47:47.696" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:47:47.680" endtime="20210602 18:47:47.696"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 18:47:47.700" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210602 18:47:47.699" endtime="20210602 18:47:47.700"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 18:47:47.700" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210602 18:47:47.700" endtime="20210602 18:47:47.700"/>
</kw>
<status status="PASS" starttime="20210602 18:47:47.699" endtime="20210602 18:47:47.700"/>
</kw>
<msg timestamp="20210602 18:47:47.700" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210602 18:47:47.698" endtime="20210602 18:47:47.700"/>
</kw>
<status status="PASS" starttime="20210602 18:47:47.698" endtime="20210602 18:47:47.701"/>
</kw>
<msg timestamp="20210602 18:47:47.701" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210602 18:47:47.697" endtime="20210602 18:47:47.701"/>
</kw>
<msg timestamp="20210602 18:47:47.701" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210602 18:47:47.697" endtime="20210602 18:47:47.701"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:47:47.708" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:48:19.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:48:19.896" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-02 18:47:49 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 18:47:49 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210602 18:47:47.705" endtime="20210602 18:48:19.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:48:19.897" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-02 18:47:49 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 18:47:49 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-02 18:47:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-02 18:47:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-02 18:47:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FA80DD96EBB9-&gt;65d388a5-7634-40aa-b93d-c3901a4a2071
2021-06-02 18:47:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-06-02 18:47:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DDDD5FB4FAE5-&gt;4ef5fcc1-7daf-44d6-87bc-f8141df6f57c
2021-06-02 18:47:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-02 18:47:50 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-06-02 18:47:51 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
2021-06-02 18:47:51 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622659671381, maxDate=1623264471381, sequenceNumber=1, masterKeyId=2))
2021-06-02 18:47:51 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c6 c8 b6 f0 9c 2f 38 c6 d0 e8 90 9f 2f 40 01 48 01 5a 0d 33 34 37 33 33 37 37 36 30 31 37 35 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-02 18:47:51 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622659671381, maxDate=1623264471381, sequenceNumber=1, masterKeyId=2)
2021-06-02 18:47:51 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-02 18:47:51 INFO  JobSubmitter:202 - number of splits:3
2021-06-02 18:47:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622659543141_0001
2021-06-02 18:47:52 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622659671381, maxDate=1623264471381, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c6 c8 b6 f0 9c 2f 38 c6 d0 e8 90 9f 2f 40 01 48 01 5a 0d 33 34 37 33 33 37 37 36 30 31 37 35 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-02 18:47:52 INFO  Configuration:2795 - resource-types.xml not found
2021-06-02 18:47:52 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-02 18:47:52 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-02 18:47:53 INFO  YarnClientImpl:329 - Submitted application application_1622659543141_0001
2021-06-02 18:47:53 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622659543141_0001/
2021-06-02 18:47:53 INFO  Job:1614 - Running job: job_1622659543141_0001
2021-06-02 18:48:03 INFO  Job:1635 - Job job_1622659543141_0001 running in uber mode : false
2021-06-02 18:48:03 INFO  Job:1642 -  map 0% reduce 0%
2021-06-02 18:48:12 INFO  Job:1642 -  map 33% reduce 0%
2021-06-02 18:48:13 INFO  Job:1642 -  map 67% reduce 0%
2021-06-02 18:48:15 INFO  Job:1642 -  map 100% reduce 0%
2021-06-02 18:48:18 INFO  Job:1642 -  map 100% reduce 100%
2021-06-02 18:48:19 INFO  Job:1653 - Job job_1622659543141_0001 completed successfully
2021-06-02 18:48:19 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1126665
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37312
		Total time spent by all reduces in occupied slots (ms)=7558
		Total time spent by all map tasks (ms)=18656
		Total time spent by all reduce tasks (ms)=3779
		Total vcore-milliseconds taken by all map tasks=18656
		Total vcore-milliseconds taken by all reduce tasks=3779
		Total megabyte-milliseconds taken by all map tasks=38207488
		Total megabyte-milliseconds taken by all reduce tasks=7739392
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=830
		CPU time spent (ms)=6350
		Physical memory (bytes) snapshot=1538039808
		Virtual memory (bytes) snapshot=14049624064
		Total committed heap usage (bytes)=1339555840
		Peak Map Physical memory (bytes)=402083840
		Peak Map Virtual memory (bytes)=3510456320
		Peak Reduce Physical memory (bytes)=344494080
		Peak Reduce Virtual memory (bytes)=3527225344
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.571 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210602 18:48:19.897" endtime="20210602 18:48:19.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:48:19.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:48:19.898" endtime="20210602 18:48:19.898"/>
</kw>
<status status="PASS" starttime="20210602 18:47:47.705" endtime="20210602 18:48:19.899"/>
</kw>
<msg timestamp="20210602 18:48:19.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:47:47.705" endtime="20210602 18:48:19.899"/>
</kw>
<msg timestamp="20210602 18:48:19.899" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-02 18:47:49 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 18:47:49 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210602 18:47:47.701" endtime="20210602 18:48:19.900"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 18:48:19.900" endtime="20210602 18:48:19.900"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210602 18:47:47.679" endtime="20210602 18:48:19.900"/>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:48:19.906" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:48:19.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:48:19.911" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:48:19.904" endtime="20210602 18:48:19.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:48:19.912" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:48:19.911" endtime="20210602 18:48:19.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:48:19.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:48:19.912" endtime="20210602 18:48:19.913"/>
</kw>
<status status="PASS" starttime="20210602 18:48:19.903" endtime="20210602 18:48:19.913"/>
</kw>
<msg timestamp="20210602 18:48:19.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:48:19.903" endtime="20210602 18:48:19.913"/>
</kw>
<msg timestamp="20210602 18:48:19.913" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:48:19.903" endtime="20210602 18:48:19.913"/>
</kw>
<msg timestamp="20210602 18:48:19.913" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 18:48:19.902" endtime="20210602 18:48:19.913"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210602 18:48:19.914" level="INFO">${random} = hBv1MUlW</msg>
<status status="PASS" starttime="20210602 18:48:19.914" endtime="20210602 18:48:19.914"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 18:48:19.917" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210602 18:48:19.916" endtime="20210602 18:48:19.917"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 18:48:19.917" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210602 18:48:19.917" endtime="20210602 18:48:19.917"/>
</kw>
<status status="PASS" starttime="20210602 18:48:19.916" endtime="20210602 18:48:19.918"/>
</kw>
<msg timestamp="20210602 18:48:19.918" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210602 18:48:19.916" endtime="20210602 18:48:19.918"/>
</kw>
<status status="PASS" starttime="20210602 18:48:19.915" endtime="20210602 18:48:19.918"/>
</kw>
<msg timestamp="20210602 18:48:19.918" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210602 18:48:19.915" endtime="20210602 18:48:19.918"/>
</kw>
<msg timestamp="20210602 18:48:19.918" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210602 18:48:19.914" endtime="20210602 18:48:19.918"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 18:48:19.921" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210602 18:48:19.921" endtime="20210602 18:48:19.921"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 18:48:19.922" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210602 18:48:19.921" endtime="20210602 18:48:19.922"/>
</kw>
<status status="PASS" starttime="20210602 18:48:19.920" endtime="20210602 18:48:19.922"/>
</kw>
<msg timestamp="20210602 18:48:19.922" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210602 18:48:19.920" endtime="20210602 18:48:19.922"/>
</kw>
<status status="PASS" starttime="20210602 18:48:19.919" endtime="20210602 18:48:19.922"/>
</kw>
<msg timestamp="20210602 18:48:19.922" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210602 18:48:19.919" endtime="20210602 18:48:19.922"/>
</kw>
<msg timestamp="20210602 18:48:19.923" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210602 18:48:19.918" endtime="20210602 18:48:19.923"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 18:48:19.925" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210602 18:48:19.925" endtime="20210602 18:48:19.925"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 18:48:19.926" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210602 18:48:19.926" endtime="20210602 18:48:19.926"/>
</kw>
<status status="PASS" starttime="20210602 18:48:19.925" endtime="20210602 18:48:19.926"/>
</kw>
<msg timestamp="20210602 18:48:19.926" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210602 18:48:19.924" endtime="20210602 18:48:19.926"/>
</kw>
<status status="PASS" starttime="20210602 18:48:19.924" endtime="20210602 18:48:19.926"/>
</kw>
<msg timestamp="20210602 18:48:19.927" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-hBv1MUlW.txt</msg>
<status status="PASS" starttime="20210602 18:48:19.923" endtime="20210602 18:48:19.927"/>
</kw>
<msg timestamp="20210602 18:48:19.927" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-hBv1MUlW.txt</msg>
<status status="PASS" starttime="20210602 18:48:19.923" endtime="20210602 18:48:19.927"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 18:48:19.929" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-hBv1MUlW.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 18:48:48.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 18:48:48.794" level="INFO">${output} = 2021-06-02 18:48:21 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-06-02 18:48:21 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
202...</msg>
<status status="PASS" starttime="20210602 18:48:19.928" endtime="20210602 18:48:48.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 18:48:48.795" level="INFO">2021-06-02 18:48:21 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-06-02 18:48:21 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
2021-06-02 18:48:22 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622659701985, maxDate=1623264501985, sequenceNumber=2, masterKeyId=2))
2021-06-02 18:48:22 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fb b8 b8 f0 9c 2f 38 fb c0 ea 90 9f 2f 40 02 48 01 5a 0d 33 34 37 33 33 37 37 36 30 31 37 35 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-02 18:48:22 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622659701985, maxDate=1623264501985, sequenceNumber=2, masterKeyId=2)
2021-06-02 18:48:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-02 18:48:22 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 18:48:22 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-02 18:48:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-02 18:48:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-02 18:48:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D2A867C80E95-&gt;65d388a5-7634-40aa-b93d-c3901a4a2071
2021-06-02 18:48:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-02 18:48:23 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-02 18:48:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E87FB1F9D35F-&gt;4ef5fcc1-7daf-44d6-87bc-f8141df6f57c
2021-06-02 18:48:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-02 18:48:23 INFO  JobSubmitter:202 - number of splits:3
2021-06-02 18:48:24 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622659543141_0002
2021-06-02 18:48:24 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622659701985, maxDate=1623264501985, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fb b8 b8 f0 9c 2f 38 fb c0 ea 90 9f 2f 40 02 48 01 5a 0d 33 34 37 33 33 37 37 36 30 31 37 35 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-02 18:48:24 INFO  Configuration:2795 - resource-types.xml not found
2021-06-02 18:48:24 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-02 18:48:24 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-02 18:48:24 INFO  YarnClientImpl:329 - Submitted application application_1622659543141_0002
2021-06-02 18:48:25 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622659543141_0002/
2021-06-02 18:48:25 INFO  Job:1614 - Running job: job_1622659543141_0002
2021-06-02 18:48:32 INFO  Job:1635 - Job job_1622659543141_0002 running in uber mode : false
2021-06-02 18:48:32 INFO  Job:1642 -  map 0% reduce 0%
2021-06-02 18:48:41 INFO  Job:1642 -  map 33% reduce 0%
2021-06-02 18:48:43 INFO  Job:1642 -  map 100% reduce 0%
2021-06-02 18:48:47 INFO  Job:1642 -  map 100% reduce 100%
2021-06-02 18:48:48 INFO  Job:1653 - Job job_1622659543141_0002 completed successfully
2021-06-02 18:48:48 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1189219
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39732
		O3FS: Number of bytes written=22209
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39914
		Total time spent by all reduces in occupied slots (ms)=6524
		Total time spent by all map tasks (ms)=19957
		Total time spent by all reduce tasks (ms)=3262
		Total vcore-milliseconds taken by all map tasks=19957
		Total vcore-milliseconds taken by all reduce tasks=3262
		Total megabyte-milliseconds taken by all map tasks=40871936
		Total megabyte-milliseconds taken by all reduce tasks=6680576
	Map-Reduce Framework
		Map input records=1052
		Map output records=4513
		Map output bytes=55088
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4513
		Combine output records=1802
		Reduce input groups=1538
		Reduce shuffle bytes=32035
		Reduce input records=1802
		Reduce output records=1538
		Spilled Records=3604
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=964
		CPU time spent (ms)=6590
		Physical memory (bytes) snapshot=1495216128
		Virtual memory (bytes) snapshot=14052274176
		Total committed heap usage (bytes)=1276116992
		Peak Map Physical memory (bytes)=393052160
		Peak Map Virtual memory (bytes)=3510460416
		Peak Reduce Physical memory (bytes)=330485760
		Peak Reduce Virtual memory (bytes)=3529834496
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39429
	File Output Format Counters 
		Bytes Written=22209</msg>
<status status="PASS" starttime="20210602 18:48:48.795" endtime="20210602 18:48:48.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 18:48:48.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 18:48:48.796" endtime="20210602 18:48:48.797"/>
</kw>
<status status="PASS" starttime="20210602 18:48:19.928" endtime="20210602 18:48:48.797"/>
</kw>
<msg timestamp="20210602 18:48:48.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 18:48:19.927" endtime="20210602 18:48:48.797"/>
</kw>
<msg timestamp="20210602 18:48:48.798" level="INFO">${output} = 2021-06-02 18:48:21 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-06-02 18:48:21 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
202...</msg>
<status status="PASS" starttime="20210602 18:48:19.927" endtime="20210602 18:48:48.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 18:48:48.798" endtime="20210602 18:48:48.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 18:48:48.798" endtime="20210602 18:48:48.798"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210602 18:48:19.901" endtime="20210602 18:48:48.799"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210602 18:47:47.636" endtime="20210602 18:48:48.800"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="179069"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="hadoopfs-ofs">ozonesecure-mr.hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="hadoopfs-o3fs">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Kinit-Hadoop">ozonesecure-mr.Kinit-Hadoop</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Kinit">ozonesecure-mr.Kinit</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="mapreduce-ofs">ozonesecure-mr.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="mapreduce-o3fs">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
