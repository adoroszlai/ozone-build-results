<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210602 04:02:42.674" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:58:16.753" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:58:20.920" level="INFO">${rc} = 255</msg>
<msg timestamp="20210602 03:58:20.920" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210602 03:58:16.749" endtime="20210602 03:58:20.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:58:20.922" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210602 03:58:20.921" endtime="20210602 03:58:20.922"/>
</kw>
<msg timestamp="20210602 03:58:20.923" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210602 03:58:16.748" endtime="20210602 03:58:20.923"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:58:20.928" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:58:24.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:58:24.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 03:58:20.926" endtime="20210602 03:58:24.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:58:24.803" level="INFO"/>
<status status="PASS" starttime="20210602 03:58:24.803" endtime="20210602 03:58:24.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:58:24.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:58:24.803" endtime="20210602 03:58:24.804"/>
</kw>
<status status="PASS" starttime="20210602 03:58:20.925" endtime="20210602 03:58:24.804"/>
</kw>
<msg timestamp="20210602 03:58:24.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:58:20.925" endtime="20210602 03:58:24.804"/>
</kw>
<msg timestamp="20210602 03:58:24.805" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210602 03:58:20.925" endtime="20210602 03:58:24.805"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 03:58:24.805" endtime="20210602 03:58:24.806"/>
</kw>
<status status="PASS" starttime="20210602 03:58:20.924" endtime="20210602 03:58:24.806"/>
</kw>
<status status="PASS" starttime="20210602 03:58:20.923" endtime="20210602 03:58:24.806"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:58:24.812" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:58:28.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:58:28.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 03:58:24.809" endtime="20210602 03:58:28.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:58:28.551" level="INFO"/>
<status status="PASS" starttime="20210602 03:58:28.550" endtime="20210602 03:58:28.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:58:28.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:58:28.551" endtime="20210602 03:58:28.551"/>
</kw>
<status status="PASS" starttime="20210602 03:58:24.809" endtime="20210602 03:58:28.552"/>
</kw>
<msg timestamp="20210602 03:58:28.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:58:24.808" endtime="20210602 03:58:28.552"/>
</kw>
<status status="PASS" starttime="20210602 03:58:24.807" endtime="20210602 03:58:28.552"/>
</kw>
<status status="PASS" starttime="20210602 03:58:24.807" endtime="20210602 03:58:28.552"/>
</kw>
<status status="PASS" starttime="20210602 03:58:24.806" endtime="20210602 03:58:28.553"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210602 03:58:28.553" endtime="20210602 03:58:28.553"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:58:28.557" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:58:32.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:58:32.511" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-02T03:58...</msg>
<status status="PASS" starttime="20210602 03:58:28.554" endtime="20210602 03:58:32.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:58:32.512" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-02T03:58:28.452Z",
  "modificationTime" : "2021-06-02T03:58:28.452Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210602 03:58:32.512" endtime="20210602 03:58:32.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:58:32.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:58:32.513" endtime="20210602 03:58:32.513"/>
</kw>
<status status="PASS" starttime="20210602 03:58:28.554" endtime="20210602 03:58:32.514"/>
</kw>
<msg timestamp="20210602 03:58:32.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:58:28.554" endtime="20210602 03:58:32.514"/>
</kw>
<msg timestamp="20210602 03:58:32.514" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-06-02T03:58...</msg>
<status status="PASS" starttime="20210602 03:58:28.553" endtime="20210602 03:58:32.514"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 03:58:32.514" endtime="20210602 03:58:32.515"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 03:58:32.520" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210602 03:58:32.519" endtime="20210602 03:58:32.520"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 03:58:32.521" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210602 03:58:32.520" endtime="20210602 03:58:32.521"/>
</kw>
<status status="PASS" starttime="20210602 03:58:32.519" endtime="20210602 03:58:32.521"/>
</kw>
<msg timestamp="20210602 03:58:32.522" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210602 03:58:32.517" endtime="20210602 03:58:32.522"/>
</kw>
<status status="PASS" starttime="20210602 03:58:32.517" endtime="20210602 03:58:32.522"/>
</kw>
<msg timestamp="20210602 03:58:32.522" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210602 03:58:32.516" endtime="20210602 03:58:32.522"/>
</kw>
<msg timestamp="20210602 03:58:32.523" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210602 03:58:32.515" endtime="20210602 03:58:32.523"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:58:32.526" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:58:36.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:58:36.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 03:58:32.524" endtime="20210602 03:58:36.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:58:36.490" level="INFO"/>
<status status="PASS" starttime="20210602 03:58:36.490" endtime="20210602 03:58:36.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:58:36.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:58:36.491" endtime="20210602 03:58:36.491"/>
</kw>
<status status="PASS" starttime="20210602 03:58:32.524" endtime="20210602 03:58:36.492"/>
</kw>
<msg timestamp="20210602 03:58:36.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:58:32.523" endtime="20210602 03:58:36.492"/>
</kw>
<status status="PASS" starttime="20210602 03:58:32.523" endtime="20210602 03:58:36.492"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:58:36.497" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:58:44.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:58:44.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 03:58:36.495" endtime="20210602 03:58:44.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:58:44.341" level="INFO"/>
<status status="PASS" starttime="20210602 03:58:44.340" endtime="20210602 03:58:44.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:58:44.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:58:44.342" endtime="20210602 03:58:44.342"/>
</kw>
<status status="PASS" starttime="20210602 03:58:36.494" endtime="20210602 03:58:44.343"/>
</kw>
<msg timestamp="20210602 03:58:44.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:58:36.493" endtime="20210602 03:58:44.343"/>
</kw>
<status status="PASS" starttime="20210602 03:58:36.492" endtime="20210602 03:58:44.344"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:58:44.348" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:58:50.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:58:50.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 03:58:44.346" endtime="20210602 03:58:50.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:58:50.565" level="INFO"/>
<status status="PASS" starttime="20210602 03:58:50.565" endtime="20210602 03:58:50.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:58:50.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:58:50.566" endtime="20210602 03:58:50.566"/>
</kw>
<status status="PASS" starttime="20210602 03:58:44.345" endtime="20210602 03:58:50.567"/>
</kw>
<msg timestamp="20210602 03:58:50.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:58:44.345" endtime="20210602 03:58:50.567"/>
</kw>
<status status="PASS" starttime="20210602 03:58:44.344" endtime="20210602 03:58:50.567"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:58:50.572" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:58:56.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:58:56.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 03:58:50.569" endtime="20210602 03:58:56.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:58:56.516" level="INFO"/>
<status status="PASS" starttime="20210602 03:58:56.515" endtime="20210602 03:58:56.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:58:56.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:58:56.516" endtime="20210602 03:58:56.517"/>
</kw>
<status status="PASS" starttime="20210602 03:58:50.569" endtime="20210602 03:58:56.517"/>
</kw>
<msg timestamp="20210602 03:58:56.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:58:50.568" endtime="20210602 03:58:56.517"/>
</kw>
<status status="PASS" starttime="20210602 03:58:50.567" endtime="20210602 03:58:56.518"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210602 03:58:16.747" endtime="20210602 03:58:56.518"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 03:58:56.524" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210602 03:58:56.524" endtime="20210602 03:58:56.524"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 03:58:56.525" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210602 03:58:56.525" endtime="20210602 03:58:56.525"/>
</kw>
<status status="PASS" starttime="20210602 03:58:56.523" endtime="20210602 03:58:56.526"/>
</kw>
<msg timestamp="20210602 03:58:56.526" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210602 03:58:56.522" endtime="20210602 03:58:56.526"/>
</kw>
<status status="PASS" starttime="20210602 03:58:56.521" endtime="20210602 03:58:56.526"/>
</kw>
<msg timestamp="20210602 03:58:56.526" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210602 03:58:56.520" endtime="20210602 03:58:56.526"/>
</kw>
<msg timestamp="20210602 03:58:56.527" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210602 03:58:56.520" endtime="20210602 03:58:56.527"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:58:56.531" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:59:00.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:59:00.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 03:58:56.528" endtime="20210602 03:59:00.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:59:00.194" level="INFO"/>
<status status="PASS" starttime="20210602 03:59:00.192" endtime="20210602 03:59:00.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:59:00.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:59:00.194" endtime="20210602 03:59:00.195"/>
</kw>
<status status="PASS" starttime="20210602 03:58:56.528" endtime="20210602 03:59:00.195"/>
</kw>
<msg timestamp="20210602 03:59:00.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:58:56.527" endtime="20210602 03:59:00.195"/>
</kw>
<status status="PASS" starttime="20210602 03:58:56.527" endtime="20210602 03:59:00.196"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:59:00.199" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:59:04.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:59:04.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 03:59:00.197" endtime="20210602 03:59:04.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:59:04.012" level="INFO"/>
<status status="PASS" starttime="20210602 03:59:04.011" endtime="20210602 03:59:04.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:59:04.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:59:04.012" endtime="20210602 03:59:04.013"/>
</kw>
<status status="PASS" starttime="20210602 03:59:00.197" endtime="20210602 03:59:04.013"/>
</kw>
<msg timestamp="20210602 03:59:04.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:59:00.196" endtime="20210602 03:59:04.014"/>
</kw>
<status status="PASS" starttime="20210602 03:59:00.196" endtime="20210602 03:59:04.014"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210602 03:58:56.519" endtime="20210602 03:59:04.014"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210602 03:58:16.677" endtime="20210602 03:59:04.016"/>
</suite>
<suite id="s1-s2" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 04:01:07.149" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210602 04:01:07.144" endtime="20210602 04:01:07.150"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 04:01:07.152" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210602 04:01:07.150" endtime="20210602 04:01:07.152"/>
</kw>
<status status="PASS" starttime="20210602 04:01:07.144" endtime="20210602 04:01:07.153"/>
</kw>
<msg timestamp="20210602 04:01:07.153" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210602 04:01:07.143" endtime="20210602 04:01:07.153"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210602 04:01:07.154" endtime="20210602 04:01:07.154"/>
</kw>
<msg timestamp="20210602 04:01:07.154" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210602 04:01:07.153" endtime="20210602 04:01:07.154"/>
</kw>
<status status="PASS" starttime="20210602 04:01:07.136" endtime="20210602 04:01:07.155"/>
</kw>
<msg timestamp="20210602 04:01:07.155" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210602 04:01:07.135" endtime="20210602 04:01:07.155"/>
</kw>
<msg timestamp="20210602 04:01:07.155" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210602 04:01:07.134" endtime="20210602 04:01:07.155"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210602 04:01:07.156" level="INFO">${random} = 03276</msg>
<status status="PASS" starttime="20210602 04:01:07.155" endtime="20210602 04:01:07.156"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 04:01:07.180" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-03276 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 04:01:11.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 04:01:11.091" level="INFO">${output} = 2021-06-02 04:01:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 04:01:09 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210602 04:01:07.159" endtime="20210602 04:01:11.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 04:01:11.092" level="INFO">2021-06-02 04:01:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 04:01:09 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-02 04:01:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-02 04:01:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-02 04:01:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-470283206C1F-&gt;20cf048f-5aa5-4d09-9b06-75cd85290e21
2021-06-02 04:01:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210602 04:01:11.091" endtime="20210602 04:01:11.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 04:01:11.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 04:01:11.092" endtime="20210602 04:01:11.093"/>
</kw>
<status status="PASS" starttime="20210602 04:01:07.158" endtime="20210602 04:01:11.093"/>
</kw>
<msg timestamp="20210602 04:01:11.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 04:01:07.158" endtime="20210602 04:01:11.094"/>
</kw>
<msg timestamp="20210602 04:01:11.094" level="INFO">${result} = 2021-06-02 04:01:09 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 04:01:09 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210602 04:01:07.157" endtime="20210602 04:01:11.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 04:01:11.097" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 04:01:13.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 04:01:13.116" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 03:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-02 04:01 ofs://om/volume1/bucket1/ozone-03276
-rw-...</msg>
<status status="PASS" starttime="20210602 04:01:11.096" endtime="20210602 04:01:13.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 04:01:13.117" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 03:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-02 04:01 ofs://om/volume1/bucket1/ozone-03276
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-02 03:59 ofs://om/volume1/bucket1/ozone-70283
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 03:59 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 04:00 ofs://om/volume1/bucket1/wordcount-F49lBMGa.txt</msg>
<status status="PASS" starttime="20210602 04:01:13.116" endtime="20210602 04:01:13.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 04:01:13.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 04:01:13.117" endtime="20210602 04:01:13.118"/>
</kw>
<status status="PASS" starttime="20210602 04:01:11.095" endtime="20210602 04:01:13.118"/>
</kw>
<msg timestamp="20210602 04:01:13.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 04:01:11.095" endtime="20210602 04:01:13.118"/>
</kw>
<msg timestamp="20210602 04:01:13.119" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 03:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-02 04:01 ofs://om/volume1/bucket1/ozone-03276
-rw-...</msg>
<status status="PASS" starttime="20210602 04:01:11.094" endtime="20210602 04:01:13.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 04:01:13.119" endtime="20210602 04:01:13.119"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210602 04:01:07.133" endtime="20210602 04:01:13.120"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210602 04:01:07.039" endtime="20210602 04:01:13.121"/>
</suite>
<suite id="s1-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 03:59:28.730" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210602 03:59:28.730" endtime="20210602 03:59:28.731"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 03:59:28.731" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210602 03:59:28.731" endtime="20210602 03:59:28.731"/>
</kw>
<status status="PASS" starttime="20210602 03:59:28.729" endtime="20210602 03:59:28.731"/>
</kw>
<msg timestamp="20210602 03:59:28.732" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210602 03:59:28.729" endtime="20210602 03:59:28.732"/>
</kw>
<status status="PASS" starttime="20210602 03:59:28.728" endtime="20210602 03:59:28.732"/>
</kw>
<msg timestamp="20210602 03:59:28.732" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210602 03:59:28.728" endtime="20210602 03:59:28.732"/>
</kw>
<msg timestamp="20210602 03:59:28.732" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210602 03:59:28.727" endtime="20210602 03:59:28.732"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210602 03:59:28.733" level="INFO">${random} = 70283</msg>
<status status="PASS" starttime="20210602 03:59:28.732" endtime="20210602 03:59:28.733"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:59:28.738" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-70283 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:59:33.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:59:33.492" level="INFO">${output} = 2021-06-02 03:59:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 03:59:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210602 03:59:28.734" endtime="20210602 03:59:33.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:59:33.495" level="INFO">2021-06-02 03:59:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 03:59:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-02 03:59:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-02 03:59:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-02 03:59:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5C8B5E1C05DE-&gt;2def443f-18e1-4b47-9ee4-f9aa0cdcbea2
2021-06-02 03:59:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210602 03:59:33.493" endtime="20210602 03:59:33.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:59:33.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:59:33.495" endtime="20210602 03:59:33.496"/>
</kw>
<status status="PASS" starttime="20210602 03:59:28.734" endtime="20210602 03:59:33.496"/>
</kw>
<msg timestamp="20210602 03:59:33.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:59:28.734" endtime="20210602 03:59:33.496"/>
</kw>
<msg timestamp="20210602 03:59:33.497" level="INFO">${result} = 2021-06-02 03:59:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 03:59:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210602 03:59:28.733" endtime="20210602 03:59:33.497"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:59:33.501" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:59:35.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:59:35.573" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 03:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-02 03:59 o3fs://bucket1.volume1.om/ozone-70283
dr...</msg>
<status status="PASS" starttime="20210602 03:59:33.499" endtime="20210602 03:59:35.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:59:35.574" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 03:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-02 03:59 o3fs://bucket1.volume1.om/ozone-70283
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 03:59 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210602 03:59:35.573" endtime="20210602 03:59:35.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:59:35.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:59:35.575" endtime="20210602 03:59:35.576"/>
</kw>
<status status="PASS" starttime="20210602 03:59:33.498" endtime="20210602 03:59:35.576"/>
</kw>
<msg timestamp="20210602 03:59:35.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:59:33.498" endtime="20210602 03:59:35.576"/>
</kw>
<msg timestamp="20210602 03:59:35.576" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-06-02 03:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-06-02 03:59 o3fs://bucket1.volume1.om/ozone-70283
dr...</msg>
<status status="PASS" starttime="20210602 03:59:33.497" endtime="20210602 03:59:35.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 03:59:35.577" endtime="20210602 03:59:35.577"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210602 03:59:28.726" endtime="20210602 03:59:35.577"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210602 03:59:28.654" endtime="20210602 03:59:35.578"/>
</suite>
<suite id="s1-s4" name="Kinit-Hadoop" source="/opt/ozone/smoketest/kinit-hadoop.robot">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:59:22.762" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:59:22.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:59:22.767" level="INFO">${output} = rm</msg>
<status status="PASS" starttime="20210602 03:59:22.757" endtime="20210602 03:59:22.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:59:22.768" level="INFO">rm</msg>
<status status="PASS" starttime="20210602 03:59:22.767" endtime="20210602 03:59:22.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:59:22.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:59:22.768" endtime="20210602 03:59:22.769"/>
</kw>
<status status="PASS" starttime="20210602 03:59:22.757" endtime="20210602 03:59:22.769"/>
</kw>
<msg timestamp="20210602 03:59:22.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:59:22.757" endtime="20210602 03:59:22.769"/>
</kw>
<msg timestamp="20210602 03:59:22.769" level="INFO">${instance} = rm</msg>
<status status="PASS" starttime="20210602 03:59:22.756" endtime="20210602 03:59:22.769"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210602 03:59:22.771" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210602 03:59:22.769" endtime="20210602 03:59:22.771"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:59:22.774" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:59:22.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:59:22.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 03:59:22.773" endtime="20210602 03:59:22.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:59:22.822" level="INFO"/>
<status status="PASS" starttime="20210602 03:59:22.821" endtime="20210602 03:59:22.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:59:22.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:59:22.822" endtime="20210602 03:59:22.823"/>
</kw>
<status status="PASS" starttime="20210602 03:59:22.772" endtime="20210602 03:59:22.823"/>
</kw>
<msg timestamp="20210602 03:59:22.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:59:22.772" endtime="20210602 03:59:22.823"/>
</kw>
<status status="PASS" starttime="20210602 03:59:22.771" endtime="20210602 03:59:22.824"/>
</kw>
<status status="PASS" starttime="20210602 03:59:22.771" endtime="20210602 03:59:22.824"/>
</kw>
<status status="PASS" starttime="20210602 03:59:22.756" endtime="20210602 03:59:22.824"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210602 03:59:22.754" endtime="20210602 03:59:22.824"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210602 03:59:22.693" endtime="20210602 03:59:22.825"/>
</suite>
<suite id="s1-s5" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:58:10.982" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:58:10.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:58:10.985" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210602 03:58:10.978" endtime="20210602 03:58:10.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:58:10.987" level="INFO">om</msg>
<status status="PASS" starttime="20210602 03:58:10.986" endtime="20210602 03:58:10.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:58:10.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:58:10.987" endtime="20210602 03:58:10.988"/>
</kw>
<status status="PASS" starttime="20210602 03:58:10.977" endtime="20210602 03:58:10.988"/>
</kw>
<msg timestamp="20210602 03:58:10.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:58:10.977" endtime="20210602 03:58:10.988"/>
</kw>
<msg timestamp="20210602 03:58:10.988" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20210602 03:58:10.976" endtime="20210602 03:58:10.988"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210602 03:58:10.989" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210602 03:58:10.989" endtime="20210602 03:58:10.989"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:58:10.994" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:58:11.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:58:11.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210602 03:58:10.992" endtime="20210602 03:58:11.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:58:11.002" level="INFO"/>
<status status="PASS" starttime="20210602 03:58:11.002" endtime="20210602 03:58:11.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:58:11.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:58:11.002" endtime="20210602 03:58:11.003"/>
</kw>
<status status="PASS" starttime="20210602 03:58:10.991" endtime="20210602 03:58:11.003"/>
</kw>
<msg timestamp="20210602 03:58:11.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:58:10.991" endtime="20210602 03:58:11.004"/>
</kw>
<status status="PASS" starttime="20210602 03:58:10.990" endtime="20210602 03:58:11.004"/>
</kw>
<status status="PASS" starttime="20210602 03:58:10.990" endtime="20210602 03:58:11.004"/>
</kw>
<status status="PASS" starttime="20210602 03:58:10.976" endtime="20210602 03:58:11.004"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210602 03:58:10.975" endtime="20210602 03:58:11.004"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210602 03:58:10.911" endtime="20210602 03:58:11.006"/>
</suite>
<suite id="s1-s6" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 04:01:19.030" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 04:01:19.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 04:01:19.038" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 04:01:19.026" endtime="20210602 04:01:19.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 04:01:19.039" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 04:01:19.038" endtime="20210602 04:01:19.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 04:01:19.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 04:01:19.039" endtime="20210602 04:01:19.039"/>
</kw>
<status status="PASS" starttime="20210602 04:01:19.025" endtime="20210602 04:01:19.040"/>
</kw>
<msg timestamp="20210602 04:01:19.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 04:01:19.025" endtime="20210602 04:01:19.040"/>
</kw>
<msg timestamp="20210602 04:01:19.040" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 04:01:19.025" endtime="20210602 04:01:19.041"/>
</kw>
<msg timestamp="20210602 04:01:19.041" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 04:01:19.024" endtime="20210602 04:01:19.041"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 04:01:19.046" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210602 04:01:19.045" endtime="20210602 04:01:19.046"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 04:01:19.047" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210602 04:01:19.046" endtime="20210602 04:01:19.047"/>
</kw>
<status status="PASS" starttime="20210602 04:01:19.044" endtime="20210602 04:01:19.048"/>
</kw>
<msg timestamp="20210602 04:01:19.048" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210602 04:01:19.044" endtime="20210602 04:01:19.048"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210602 04:01:19.049" endtime="20210602 04:01:19.049"/>
</kw>
<msg timestamp="20210602 04:01:19.049" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210602 04:01:19.048" endtime="20210602 04:01:19.049"/>
</kw>
<status status="PASS" starttime="20210602 04:01:19.043" endtime="20210602 04:01:19.049"/>
</kw>
<msg timestamp="20210602 04:01:19.050" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210602 04:01:19.042" endtime="20210602 04:01:19.050"/>
</kw>
<msg timestamp="20210602 04:01:19.050" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210602 04:01:19.042" endtime="20210602 04:01:19.050"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 04:01:19.055" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 04:02:00.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 04:02:00.506" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-02 04:01:21 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 04:01:21 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210602 04:01:19.052" endtime="20210602 04:02:00.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 04:02:00.507" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-02 04:01:21 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 04:01:21 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-02 04:01:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-02 04:01:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-02 04:01:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F3595667FBEE-&gt;2def443f-18e1-4b47-9ee4-f9aa0cdcbea2
2021-06-02 04:01:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-06-02 04:01:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0160ED854B95-&gt;20cf048f-5aa5-4d09-9b06-75cd85290e21
2021-06-02 04:01:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-02 04:01:28 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-06-02 04:01:28 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
2021-06-02 04:01:28 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622606488403, maxDate=1623211288403, sequenceNumber=3, masterKeyId=2))
2021-06-02 04:01:28 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e9 c5 88 d7 9c 2f 38 e9 cd ba f7 9e 2f 40 03 48 01 5a 0d 34 33 39 33 33 38 34 39 37 34 38 31 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-02 04:01:28 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622606488403, maxDate=1623211288403, sequenceNumber=3, masterKeyId=2)
2021-06-02 04:01:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-02 04:01:28 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-02 04:01:28 INFO  JobSubmitter:202 - number of splits:3
2021-06-02 04:01:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622606233326_0003
2021-06-02 04:01:29 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622606488403, maxDate=1623211288403, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e9 c5 88 d7 9c 2f 38 e9 cd ba f7 9e 2f 40 03 48 01 5a 0d 34 33 39 33 33 38 34 39 37 34 38 31 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-02 04:01:29 INFO  Configuration:2795 - resource-types.xml not found
2021-06-02 04:01:29 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-02 04:01:29 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-02 04:01:30 INFO  YarnClientImpl:329 - Submitted application application_1622606233326_0003
2021-06-02 04:01:30 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622606233326_0003/
2021-06-02 04:01:30 INFO  Job:1614 - Running job: job_1622606233326_0003
2021-06-02 04:01:38 INFO  Job:1635 - Job job_1622606233326_0003 running in uber mode : false
2021-06-02 04:01:38 INFO  Job:1642 -  map 0% reduce 0%
2021-06-02 04:01:49 INFO  Job:1642 -  map 33% reduce 0%
2021-06-02 04:01:51 INFO  Job:1642 -  map 67% reduce 0%
2021-06-02 04:01:52 INFO  Job:1642 -  map 100% reduce 0%
2021-06-02 04:01:56 INFO  Job:1642 -  map 100% reduce 100%
2021-06-02 04:01:59 INFO  Job:1653 - Job job_1622606233326_0003 completed successfully
2021-06-02 04:01:59 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1126449
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50082
		Total time spent by all reduces in occupied slots (ms)=7804
		Total time spent by all map tasks (ms)=25041
		Total time spent by all reduce tasks (ms)=3902
		Total vcore-milliseconds taken by all map tasks=25041
		Total vcore-milliseconds taken by all reduce tasks=3902
		Total megabyte-milliseconds taken by all map tasks=51283968
		Total megabyte-milliseconds taken by all reduce tasks=7991296
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1491
		CPU time spent (ms)=8110
		Physical memory (bytes) snapshot=1675444224
		Virtual memory (bytes) snapshot=14059597824
		Total committed heap usage (bytes)=1479540736
		Peak Map Physical memory (bytes)=567685120
		Peak Map Virtual memory (bytes)=3513532416
		Peak Reduce Physical memory (bytes)=329482240
		Peak Reduce Virtual memory (bytes)=3527512064
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.086 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210602 04:02:00.507" endtime="20210602 04:02:00.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 04:02:00.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 04:02:00.508" endtime="20210602 04:02:00.508"/>
</kw>
<status status="PASS" starttime="20210602 04:01:19.051" endtime="20210602 04:02:00.508"/>
</kw>
<msg timestamp="20210602 04:02:00.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 04:01:19.051" endtime="20210602 04:02:00.509"/>
</kw>
<msg timestamp="20210602 04:02:00.509" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-02 04:01:21 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 04:01:21 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210602 04:01:19.050" endtime="20210602 04:02:00.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 04:02:00.510" endtime="20210602 04:02:00.510"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210602 04:01:19.023" endtime="20210602 04:02:00.510"/>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 04:02:00.517" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 04:02:00.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 04:02:00.523" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 04:02:00.514" endtime="20210602 04:02:00.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 04:02:00.524" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 04:02:00.523" endtime="20210602 04:02:00.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 04:02:00.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 04:02:00.524" endtime="20210602 04:02:00.525"/>
</kw>
<status status="PASS" starttime="20210602 04:02:00.513" endtime="20210602 04:02:00.525"/>
</kw>
<msg timestamp="20210602 04:02:00.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 04:02:00.513" endtime="20210602 04:02:00.525"/>
</kw>
<msg timestamp="20210602 04:02:00.526" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 04:02:00.512" endtime="20210602 04:02:00.526"/>
</kw>
<msg timestamp="20210602 04:02:00.526" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 04:02:00.512" endtime="20210602 04:02:00.526"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210602 04:02:00.527" level="INFO">${random} = lLuOE0Kb</msg>
<status status="PASS" starttime="20210602 04:02:00.526" endtime="20210602 04:02:00.527"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 04:02:00.531" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210602 04:02:00.530" endtime="20210602 04:02:00.531"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 04:02:00.532" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210602 04:02:00.531" endtime="20210602 04:02:00.532"/>
</kw>
<status status="PASS" starttime="20210602 04:02:00.530" endtime="20210602 04:02:00.532"/>
</kw>
<msg timestamp="20210602 04:02:00.532" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210602 04:02:00.530" endtime="20210602 04:02:00.532"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210602 04:02:00.533" endtime="20210602 04:02:00.533"/>
</kw>
<msg timestamp="20210602 04:02:00.534" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210602 04:02:00.532" endtime="20210602 04:02:00.534"/>
</kw>
<status status="PASS" starttime="20210602 04:02:00.529" endtime="20210602 04:02:00.534"/>
</kw>
<msg timestamp="20210602 04:02:00.534" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210602 04:02:00.528" endtime="20210602 04:02:00.534"/>
</kw>
<msg timestamp="20210602 04:02:00.534" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210602 04:02:00.527" endtime="20210602 04:02:00.534"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 04:02:00.538" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210602 04:02:00.538" endtime="20210602 04:02:00.538"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 04:02:00.540" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210602 04:02:00.539" endtime="20210602 04:02:00.540"/>
</kw>
<status status="PASS" starttime="20210602 04:02:00.537" endtime="20210602 04:02:00.540"/>
</kw>
<msg timestamp="20210602 04:02:00.540" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210602 04:02:00.537" endtime="20210602 04:02:00.540"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 04:02:00.542" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210602 04:02:00.541" endtime="20210602 04:02:00.542"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 04:02:00.542" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210602 04:02:00.542" endtime="20210602 04:02:00.542"/>
</kw>
<status status="PASS" starttime="20210602 04:02:00.541" endtime="20210602 04:02:00.543"/>
</kw>
<msg timestamp="20210602 04:02:00.543" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210602 04:02:00.540" endtime="20210602 04:02:00.543"/>
</kw>
<status status="PASS" starttime="20210602 04:02:00.536" endtime="20210602 04:02:00.543"/>
</kw>
<msg timestamp="20210602 04:02:00.543" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210602 04:02:00.535" endtime="20210602 04:02:00.543"/>
</kw>
<msg timestamp="20210602 04:02:00.544" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210602 04:02:00.534" endtime="20210602 04:02:00.544"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 04:02:00.548" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210602 04:02:00.547" endtime="20210602 04:02:00.548"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 04:02:00.548" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210602 04:02:00.548" endtime="20210602 04:02:00.548"/>
</kw>
<status status="PASS" starttime="20210602 04:02:00.546" endtime="20210602 04:02:00.549"/>
</kw>
<msg timestamp="20210602 04:02:00.549" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210602 04:02:00.546" endtime="20210602 04:02:00.549"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 04:02:00.550" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210602 04:02:00.550" endtime="20210602 04:02:00.550"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 04:02:00.551" level="INFO">${result} = /wordcount-lLuOE0Kb.txt</msg>
<status status="PASS" starttime="20210602 04:02:00.551" endtime="20210602 04:02:00.551"/>
</kw>
<status status="PASS" starttime="20210602 04:02:00.549" endtime="20210602 04:02:00.551"/>
</kw>
<msg timestamp="20210602 04:02:00.552" level="INFO">${path_with_leading} = /wordcount-lLuOE0Kb.txt</msg>
<status status="PASS" starttime="20210602 04:02:00.549" endtime="20210602 04:02:00.552"/>
</kw>
<status status="PASS" starttime="20210602 04:02:00.545" endtime="20210602 04:02:00.552"/>
</kw>
<msg timestamp="20210602 04:02:00.552" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-lLuOE0Kb.txt</msg>
<status status="PASS" starttime="20210602 04:02:00.544" endtime="20210602 04:02:00.552"/>
</kw>
<msg timestamp="20210602 04:02:00.552" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-lLuOE0Kb.txt</msg>
<status status="PASS" starttime="20210602 04:02:00.544" endtime="20210602 04:02:00.552"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 04:02:00.556" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-lLuOE0Kb.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 04:02:34.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 04:02:34.398" level="INFO">${output} = 2021-06-02 04:02:02 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-06-02 04:02:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
20...</msg>
<status status="PASS" starttime="20210602 04:02:00.554" endtime="20210602 04:02:34.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 04:02:34.400" level="INFO">2021-06-02 04:02:02 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-06-02 04:02:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
2021-06-02 04:02:03 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622606523039, maxDate=1623211323039, sequenceNumber=4, masterKeyId=2))
2021-06-02 04:02:03 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b8 d4 8a d7 9c 2f 38 b8 dc bc f7 9e 2f 40 04 48 01 5a 0d 34 33 39 33 33 38 34 39 37 34 38 31 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-02 04:02:03 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622606523039, maxDate=1623211323039, sequenceNumber=4, masterKeyId=2)
2021-06-02 04:02:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-02 04:02:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 04:02:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-02 04:02:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-02 04:02:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-02 04:02:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-80E7AAB4E037-&gt;20cf048f-5aa5-4d09-9b06-75cd85290e21
2021-06-02 04:02:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-02 04:02:04 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-02 04:02:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F74739C0865E-&gt;2def443f-18e1-4b47-9ee4-f9aa0cdcbea2
2021-06-02 04:02:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-02 04:02:05 INFO  JobSubmitter:202 - number of splits:3
2021-06-02 04:02:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622606233326_0004
2021-06-02 04:02:05 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622606523039, maxDate=1623211323039, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b8 d4 8a d7 9c 2f 38 b8 dc bc f7 9e 2f 40 04 48 01 5a 0d 34 33 39 33 33 38 34 39 37 34 38 31 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-02 04:02:05 INFO  Configuration:2795 - resource-types.xml not found
2021-06-02 04:02:05 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-02 04:02:05 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-02 04:02:06 INFO  YarnClientImpl:329 - Submitted application application_1622606233326_0004
2021-06-02 04:02:06 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622606233326_0004/
2021-06-02 04:02:06 INFO  Job:1614 - Running job: job_1622606233326_0004
2021-06-02 04:02:14 INFO  Job:1635 - Job job_1622606233326_0004 running in uber mode : false
2021-06-02 04:02:14 INFO  Job:1642 -  map 0% reduce 0%
2021-06-02 04:02:25 INFO  Job:1642 -  map 33% reduce 0%
2021-06-02 04:02:27 INFO  Job:1642 -  map 100% reduce 0%
2021-06-02 04:02:32 INFO  Job:1642 -  map 100% reduce 100%
2021-06-02 04:02:33 INFO  Job:1653 - Job job_1622606233326_0004 completed successfully
2021-06-02 04:02:33 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32070
		FILE: Number of bytes written=1189229
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39773
		OFS: Number of bytes written=22252
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52060
		Total time spent by all reduces in occupied slots (ms)=7700
		Total time spent by all map tasks (ms)=26030
		Total time spent by all reduce tasks (ms)=3850
		Total vcore-milliseconds taken by all map tasks=26030
		Total vcore-milliseconds taken by all reduce tasks=3850
		Total megabyte-milliseconds taken by all map tasks=53309440
		Total megabyte-milliseconds taken by all reduce tasks=7884800
	Map-Reduce Framework
		Map input records=1053
		Map output records=4514
		Map output bytes=55133
		Map output materialized bytes=32082
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32082
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=955
		CPU time spent (ms)=7950
		Physical memory (bytes) snapshot=1499918336
		Virtual memory (bytes) snapshot=14053199872
		Total committed heap usage (bytes)=1289748480
		Peak Map Physical memory (bytes)=394612736
		Peak Map Virtual memory (bytes)=3509575680
		Peak Reduce Physical memory (bytes)=328253440
		Peak Reduce Virtual memory (bytes)=3529449472
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39473
	File Output Format Counters 
		Bytes Written=22252</msg>
<status status="PASS" starttime="20210602 04:02:34.399" endtime="20210602 04:02:34.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 04:02:34.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 04:02:34.400" endtime="20210602 04:02:34.401"/>
</kw>
<status status="PASS" starttime="20210602 04:02:00.553" endtime="20210602 04:02:34.401"/>
</kw>
<msg timestamp="20210602 04:02:34.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 04:02:00.553" endtime="20210602 04:02:34.401"/>
</kw>
<msg timestamp="20210602 04:02:34.402" level="INFO">${output} = 2021-06-02 04:02:02 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-06-02 04:02:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
20...</msg>
<status status="PASS" starttime="20210602 04:02:00.552" endtime="20210602 04:02:34.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 04:02:34.402" endtime="20210602 04:02:34.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 04:02:34.403" endtime="20210602 04:02:34.403"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210602 04:02:00.511" endtime="20210602 04:02:34.404"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210602 04:01:18.961" endtime="20210602 04:02:34.405"/>
</suite>
<suite id="s1-s7" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:59:41.302" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 03:59:41.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 03:59:41.308" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 03:59:41.299" endtime="20210602 03:59:41.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 03:59:41.310" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 03:59:41.309" endtime="20210602 03:59:41.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 03:59:41.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 03:59:41.310" endtime="20210602 03:59:41.310"/>
</kw>
<status status="PASS" starttime="20210602 03:59:41.298" endtime="20210602 03:59:41.311"/>
</kw>
<msg timestamp="20210602 03:59:41.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:59:41.298" endtime="20210602 03:59:41.311"/>
</kw>
<msg timestamp="20210602 03:59:41.311" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 03:59:41.297" endtime="20210602 03:59:41.312"/>
</kw>
<msg timestamp="20210602 03:59:41.313" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 03:59:41.296" endtime="20210602 03:59:41.313"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 03:59:41.318" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210602 03:59:41.318" endtime="20210602 03:59:41.318"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 03:59:41.319" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210602 03:59:41.318" endtime="20210602 03:59:41.319"/>
</kw>
<status status="PASS" starttime="20210602 03:59:41.317" endtime="20210602 03:59:41.319"/>
</kw>
<msg timestamp="20210602 03:59:41.319" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210602 03:59:41.317" endtime="20210602 03:59:41.319"/>
</kw>
<status status="PASS" starttime="20210602 03:59:41.316" endtime="20210602 03:59:41.320"/>
</kw>
<msg timestamp="20210602 03:59:41.320" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210602 03:59:41.315" endtime="20210602 03:59:41.320"/>
</kw>
<msg timestamp="20210602 03:59:41.320" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210602 03:59:41.314" endtime="20210602 03:59:41.320"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 03:59:41.324" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 04:00:27.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 04:00:27.642" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-02 03:59:43 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 03:59:43 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210602 03:59:41.322" endtime="20210602 04:00:27.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 04:00:27.644" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-06-02 03:59:43 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 03:59:43 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-02 03:59:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-02 03:59:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-02 03:59:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F6FD61C131A9-&gt;20cf048f-5aa5-4d09-9b06-75cd85290e21
2021-06-02 03:59:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-06-02 03:59:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6238F8F8ADD6-&gt;2def443f-18e1-4b47-9ee4-f9aa0cdcbea2
2021-06-02 03:59:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-06-02 03:59:45 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-06-02 03:59:45 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
2021-06-02 03:59:45 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622606385844, maxDate=1623211185844, sequenceNumber=1, masterKeyId=2))
2021-06-02 03:59:45 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e9 a2 82 d7 9c 2f 38 e9 aa b4 f7 9e 2f 40 01 48 01 5a 0d 34 33 39 33 33 38 34 39 37 34 38 31 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-02 03:59:45 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622606385844, maxDate=1623211185844, sequenceNumber=1, masterKeyId=2)
2021-06-02 03:59:48 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-02 03:59:49 INFO  JobSubmitter:202 - number of splits:3
2021-06-02 03:59:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622606233326_0001
2021-06-02 03:59:49 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622606385844, maxDate=1623211185844, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e9 a2 82 d7 9c 2f 38 e9 aa b4 f7 9e 2f 40 01 48 01 5a 0d 34 33 39 33 33 38 34 39 37 34 38 31 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-02 03:59:49 INFO  Configuration:2795 - resource-types.xml not found
2021-06-02 03:59:49 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-02 03:59:49 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-02 03:59:51 INFO  YarnClientImpl:329 - Submitted application application_1622606233326_0001
2021-06-02 03:59:51 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622606233326_0001/
2021-06-02 03:59:51 INFO  Job:1614 - Running job: job_1622606233326_0001
2021-06-02 04:00:02 INFO  Job:1635 - Job job_1622606233326_0001 running in uber mode : false
2021-06-02 04:00:02 INFO  Job:1642 -  map 0% reduce 0%
2021-06-02 04:00:13 INFO  Job:1642 -  map 33% reduce 0%
2021-06-02 04:00:15 INFO  Job:1642 -  map 67% reduce 0%
2021-06-02 04:00:16 INFO  Job:1642 -  map 100% reduce 0%
2021-06-02 04:00:25 INFO  Job:1642 -  map 100% reduce 100%
2021-06-02 04:00:26 INFO  Job:1653 - Job job_1622606233326_0001 completed successfully
2021-06-02 04:00:27 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1126661
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49274
		Total time spent by all reduces in occupied slots (ms)=19046
		Total time spent by all map tasks (ms)=24637
		Total time spent by all reduce tasks (ms)=9523
		Total vcore-milliseconds taken by all map tasks=24637
		Total vcore-milliseconds taken by all reduce tasks=9523
		Total megabyte-milliseconds taken by all map tasks=50456576
		Total megabyte-milliseconds taken by all reduce tasks=19503104
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1009
		CPU time spent (ms)=7610
		Physical memory (bytes) snapshot=1467240448
		Virtual memory (bytes) snapshot=14027243520
		Total committed heap usage (bytes)=1293418496
		Peak Map Physical memory (bytes)=394186752
		Peak Map Virtual memory (bytes)=3509137408
		Peak Reduce Physical memory (bytes)=327311360
		Peak Reduce Virtual memory (bytes)=3525619712
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 42.0 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210602 04:00:27.643" endtime="20210602 04:00:27.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 04:00:27.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 04:00:27.644" endtime="20210602 04:00:27.645"/>
</kw>
<status status="PASS" starttime="20210602 03:59:41.321" endtime="20210602 04:00:27.645"/>
</kw>
<msg timestamp="20210602 04:00:27.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 03:59:41.321" endtime="20210602 04:00:27.645"/>
</kw>
<msg timestamp="20210602 04:00:27.646" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-06-02 03:59:43 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 03:59:43 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210602 03:59:41.320" endtime="20210602 04:00:27.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 04:00:27.646" endtime="20210602 04:00:27.646"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210602 03:59:41.296" endtime="20210602 04:00:27.647"/>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 04:00:27.653" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 04:00:27.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 04:00:27.658" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 04:00:27.651" endtime="20210602 04:00:27.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 04:00:27.659" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 04:00:27.658" endtime="20210602 04:00:27.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 04:00:27.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 04:00:27.659" endtime="20210602 04:00:27.660"/>
</kw>
<status status="PASS" starttime="20210602 04:00:27.650" endtime="20210602 04:00:27.660"/>
</kw>
<msg timestamp="20210602 04:00:27.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 04:00:27.650" endtime="20210602 04:00:27.660"/>
</kw>
<msg timestamp="20210602 04:00:27.660" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 04:00:27.649" endtime="20210602 04:00:27.661"/>
</kw>
<msg timestamp="20210602 04:00:27.661" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210602 04:00:27.649" endtime="20210602 04:00:27.661"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210602 04:00:27.661" level="INFO">${random} = F49lBMGa</msg>
<status status="PASS" starttime="20210602 04:00:27.661" endtime="20210602 04:00:27.661"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 04:00:27.665" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210602 04:00:27.665" endtime="20210602 04:00:27.665"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 04:00:27.666" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210602 04:00:27.665" endtime="20210602 04:00:27.666"/>
</kw>
<status status="PASS" starttime="20210602 04:00:27.664" endtime="20210602 04:00:27.666"/>
</kw>
<msg timestamp="20210602 04:00:27.666" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210602 04:00:27.664" endtime="20210602 04:00:27.666"/>
</kw>
<status status="PASS" starttime="20210602 04:00:27.663" endtime="20210602 04:00:27.667"/>
</kw>
<msg timestamp="20210602 04:00:27.667" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210602 04:00:27.662" endtime="20210602 04:00:27.667"/>
</kw>
<msg timestamp="20210602 04:00:27.667" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210602 04:00:27.662" endtime="20210602 04:00:27.667"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 04:00:27.671" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210602 04:00:27.671" endtime="20210602 04:00:27.671"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 04:00:27.672" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210602 04:00:27.671" endtime="20210602 04:00:27.672"/>
</kw>
<status status="PASS" starttime="20210602 04:00:27.670" endtime="20210602 04:00:27.672"/>
</kw>
<msg timestamp="20210602 04:00:27.672" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210602 04:00:27.670" endtime="20210602 04:00:27.672"/>
</kw>
<status status="PASS" starttime="20210602 04:00:27.669" endtime="20210602 04:00:27.673"/>
</kw>
<msg timestamp="20210602 04:00:27.673" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210602 04:00:27.668" endtime="20210602 04:00:27.673"/>
</kw>
<msg timestamp="20210602 04:00:27.673" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210602 04:00:27.668" endtime="20210602 04:00:27.673"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210602 04:00:27.677" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210602 04:00:27.676" endtime="20210602 04:00:27.677"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210602 04:00:27.678" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210602 04:00:27.677" endtime="20210602 04:00:27.678"/>
</kw>
<status status="PASS" starttime="20210602 04:00:27.676" endtime="20210602 04:00:27.678"/>
</kw>
<msg timestamp="20210602 04:00:27.678" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210602 04:00:27.675" endtime="20210602 04:00:27.678"/>
</kw>
<status status="PASS" starttime="20210602 04:00:27.675" endtime="20210602 04:00:27.679"/>
</kw>
<msg timestamp="20210602 04:00:27.679" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-F49lBMGa.txt</msg>
<status status="PASS" starttime="20210602 04:00:27.674" endtime="20210602 04:00:27.679"/>
</kw>
<msg timestamp="20210602 04:00:27.679" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-F49lBMGa.txt</msg>
<status status="PASS" starttime="20210602 04:00:27.673" endtime="20210602 04:00:27.679"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210602 04:00:27.682" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-F49lBMGa.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210602 04:01:01.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210602 04:01:01.211" level="INFO">${output} = 2021-06-02 04:00:30 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-06-02 04:00:30 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
20...</msg>
<status status="PASS" starttime="20210602 04:00:27.681" endtime="20210602 04:01:01.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210602 04:01:01.213" level="INFO">2021-06-02 04:00:30 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-06-02 04:00:30 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
2021-06-02 04:00:30 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622606430522, maxDate=1623211230522, sequenceNumber=2, masterKeyId=2))
2021-06-02 04:00:30 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8f 81 85 d7 9c 2f 38 8f 89 b7 f7 9e 2f 40 02 48 01 5a 0d 34 33 39 33 33 38 34 39 37 34 38 31 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-06-02 04:00:30 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622606430522, maxDate=1623211230522, sequenceNumber=2, masterKeyId=2)
2021-06-02 04:00:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-06-02 04:00:30 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-06-02 04:00:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-06-02 04:00:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-06-02 04:00:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-06-02 04:00:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3BD264249D1F-&gt;20cf048f-5aa5-4d09-9b06-75cd85290e21
2021-06-02 04:00:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-02 04:00:32 INFO  FileInputFormat:292 - Total input files to process : 3
2021-06-02 04:00:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E727258B2A37-&gt;2def443f-18e1-4b47-9ee4-f9aa0cdcbea2
2021-06-02 04:00:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-06-02 04:00:32 INFO  JobSubmitter:202 - number of splits:3
2021-06-02 04:00:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622606233326_0002
2021-06-02 04:00:32 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622606430522, maxDate=1623211230522, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8f 81 85 d7 9c 2f 38 8f 89 b7 f7 9e 2f 40 02 48 01 5a 0d 34 33 39 33 33 38 34 39 37 34 38 31 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-06-02 04:00:33 INFO  Configuration:2795 - resource-types.xml not found
2021-06-02 04:00:33 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-06-02 04:00:33 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-06-02 04:00:34 INFO  YarnClientImpl:329 - Submitted application application_1622606233326_0002
2021-06-02 04:00:34 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622606233326_0002/
2021-06-02 04:00:34 INFO  Job:1614 - Running job: job_1622606233326_0002
2021-06-02 04:00:42 INFO  Job:1635 - Job job_1622606233326_0002 running in uber mode : false
2021-06-02 04:00:42 INFO  Job:1642 -  map 0% reduce 0%
2021-06-02 04:00:53 INFO  Job:1642 -  map 33% reduce 0%
2021-06-02 04:00:55 INFO  Job:1642 -  map 100% reduce 0%
2021-06-02 04:01:00 INFO  Job:1642 -  map 100% reduce 100%
2021-06-02 04:01:00 INFO  Job:1653 - Job job_1622606233326_0002 completed successfully
2021-06-02 04:01:00 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32070
		FILE: Number of bytes written=1189317
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39776
		O3FS: Number of bytes written=22252
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49360
		Total time spent by all reduces in occupied slots (ms)=9106
		Total time spent by all map tasks (ms)=24680
		Total time spent by all reduce tasks (ms)=4553
		Total vcore-milliseconds taken by all map tasks=24680
		Total vcore-milliseconds taken by all reduce tasks=4553
		Total megabyte-milliseconds taken by all map tasks=50544640
		Total megabyte-milliseconds taken by all reduce tasks=9324544
	Map-Reduce Framework
		Map input records=1053
		Map output records=4514
		Map output bytes=55133
		Map output materialized bytes=32082
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32082
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1078
		CPU time spent (ms)=8220
		Physical memory (bytes) snapshot=1482371072
		Virtual memory (bytes) snapshot=14056112128
		Total committed heap usage (bytes)=1267204096
		Peak Map Physical memory (bytes)=393302016
		Peak Map Virtual memory (bytes)=3508477952
		Peak Reduce Physical memory (bytes)=333144064
		Peak Reduce Virtual memory (bytes)=3532718080
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39473
	File Output Format Counters 
		Bytes Written=22252</msg>
<status status="PASS" starttime="20210602 04:01:01.212" endtime="20210602 04:01:01.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210602 04:01:01.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210602 04:01:01.213" endtime="20210602 04:01:01.214"/>
</kw>
<status status="PASS" starttime="20210602 04:00:27.680" endtime="20210602 04:01:01.215"/>
</kw>
<msg timestamp="20210602 04:01:01.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210602 04:00:27.680" endtime="20210602 04:01:01.215"/>
</kw>
<msg timestamp="20210602 04:01:01.216" level="INFO">${output} = 2021-06-02 04:00:30 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-06-02 04:00:30 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
20...</msg>
<status status="PASS" starttime="20210602 04:00:27.679" endtime="20210602 04:01:01.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 04:01:01.216" endtime="20210602 04:01:01.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210602 04:01:01.217" endtime="20210602 04:01:01.217"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210602 04:00:27.648" endtime="20210602 04:01:01.218"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210602 03:59:41.231" endtime="20210602 04:01:01.220"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="216005"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="hadoopfs-ofs">ozonesecure-mr.hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="hadoopfs-o3fs">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Kinit-Hadoop">ozonesecure-mr.Kinit-Hadoop</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Kinit">ozonesecure-mr.Kinit</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="mapreduce-ofs">ozonesecure-mr.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="mapreduce-o3fs">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
